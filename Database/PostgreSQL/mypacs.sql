--
-- PostgreSQL database dump
--

-- Dumped from database version 9.1.3
-- Dumped by pg_dump version 9.1.0
-- Started on 2016-04-06 14:24:57

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- TOC entry 14 (class 2615 OID 16644)
-- Name: mir; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA mir;


ALTER SCHEMA mir OWNER TO postgres;

--
-- TOC entry 17 (class 2615 OID 57455)
-- Name: mypacs; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA mypacs;


ALTER SCHEMA mypacs OWNER TO postgres;

SET search_path = mir, pg_catalog;

--
-- TOC entry 2605 (class 1247 OID 16651)
-- Dependencies: 14 172
-- Name: schedule_time; Type: TYPE; Schema: mir; Owner: postgres
--

CREATE TYPE schedule_time AS (
	starton timestamp(0) without time zone,
	endon timestamp(0) without time zone
);


ALTER TYPE mir.schedule_time OWNER TO postgres;

--
-- TOC entry 1340 (class 1255 OID 16770)
-- Dependencies: 5396 14
-- Name: QSystem_get_New_Talon(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "QSystem_get_New_Talon"(plinetype character, pworkdate character varying) RETURNS character
    LANGUAGE plpgsql SECURITY DEFINER
    AS '
declare
  v_linetype_param alias for $1;								-- Тип очереди: псевдоним параметра
  v_work_date_param alias for $2;								-- Дата и время начала работы: псевдоним параметра
  v_order_n numeric;											-- Номер талона
  v_order varchar;												-- Полный тип талона (пример: И9)
  v_plan_dt TIMESTAMP;											-- Планируемое время приема
  v_oid char(36);												-- OID созданного талона
  v_work_date timestamp;										-- Дата и время начала работы
  v_avg_duration double precision;								-- Среднее время приема
  v_max_line_worktime time(0);		 							-- Максимальное время работы для выбранного типа очереди
  v_appropriate_window_iter char(36);							-- Обслуживающее заявку интересующего типа окно: итератор
  v_appropriate_windows char(36)[] := NULL::char(36)[];	        -- Обслуживающие заявку интересующего типа окна
  v_appropriate_windows_q numeric; 				 				-- Количество обслуживающих заявку интересующего типа окон
  v_commmon_windows_q numeric;							        -- Общее количество активных подходящих окон
  v_appropriate_windows_linetype_iter char(36);					-- Тип очереди, обслуживаемый подходящим окном (v_appropriate_windows): итератор
  v_appropriate_windows_linetypes char(36)[];					-- Типы очередей, обслуживаемых подходящими окнами (v_appropriate_windows)
  v_waiting_state_tickets_q numeric; 							-- Количество "ожидающих" талонов  														
  v_concurrent_tickets_q numeric;	    						-- Количество талонов-конкурентов генерируемого талона
  v_internet_ticket_linetype_oid char(36) 						-- OID очереди Internet-заявок
  	:= ''internet'';						
  v_registry_window_postonline_time_in_seconds numeric;			-- Post-online время обслуживающего окна
  v_registry_window_postonline_time_in_seconds_default numeric	-- Post-online время обслуживающего окна по умолчанию
  	:= 300;
  v_plan_duration_in_seconds numeric;							-- Вычисленное время обслуживания планируемого приема
  v_work_time_is_exceeded_result_msg char(255)					-- Результирующее сообщение в случае превышения планируемым временем или текущим
	:= ''work_time_is_exceeded'';									-- временем максимального времени работы для выбранного типа очереди
  v_no_appropriate_windows_result_msg char(255)					-- Результирующее сообщение в случае отсутствия
	:= ''no_appropriate_windows'';								-- обслуживающих заявку интересующего типа окон
  v_start_plan_dt timestamp;									-- Начальные дата и время планирования
  v_min_postonline_dt timestamp;								-- Минимальное post-online время обслуживающего окна для того, чтобы
 																-- считать его активным в данный момент
begin
  -- Дата и время начала рабочего дня  
  v_work_date := to_timestamp(v_work_date_param, ''dd.mm.yyyy hh24:mi:ss'');

  -- Получение максимального времени работы для выбранного типа очереди
  select max_work_time into v_max_line_worktime from mir.linetype lt
    where lt.oid = v_linetype_param;

  if (v_max_line_worktime is null or "time"(now()) < v_max_line_worktime) 
                                                              -- Максимальное время работы для выбранного типа очереди не задано
  then														  -- или не превышено текущим временем    
    -- Получение post-online времени обслуживающего окна
    v_registry_window_postonline_time_in_seconds := 
  	coalesce(cast(mir.zgetsettingvalue(''REGISTRY_WINDOW_POST_ONLINE_TIME_IN_SECONDS'') as integer), 
      v_registry_window_postonline_time_in_seconds_default);
    
    -- Получение минимального post-online времени обслуживающего окна для того, чтобы
    -- считать его активным в данный момент
    select now() - "interval" (v_registry_window_postonline_time_in_seconds || ''sec'')
      into v_min_postonline_dt;

    if (now() < v_work_date) -- Рабочий день еще не начался
    then        
      -- Получение подходящих обслуживающих окон
      for v_appropriate_window_iter in
        select distinct rw.oid from mir.registwindow rw 
          inner join mir.registwindow_linetype rwl
            on rw.oid = rwl.registrywindow
          where
            rwl.linetype = v_linetype_param
              and (rw.show is null or rw.show = 1)
        loop
          v_appropriate_windows := array_append(v_appropriate_windows, v_appropriate_window_iter);
      end loop;
      
      -- Получение количества подходящих обслуживающих окон
      select count(*) into v_appropriate_windows_q from unnest(v_appropriate_windows);
    else
      -- Получение подходящих активных обслуживающих окон
      for v_appropriate_window_iter in
        select distinct rw.oid from mir.registwindow rw 
          inner join mir.registwindow_linetype rwl
          	on rw.oid = rwl.registrywindow
          left join mir.lastonlinedatetime las
            on las.oid = rw.oid
          where
            rwl.linetype = v_linetype_param
              and (rw.show is null or rw.show = 1)
              and las.lastonlinedatetime is not null 
              and las.lastonlinedatetime >= v_min_postonline_dt
        loop
          v_appropriate_windows := array_append(v_appropriate_windows, v_appropriate_window_iter);
      end loop;
      
      -- Получение количества подходящих обслуживающих окон
      select count(*) into v_appropriate_windows_q from unnest(v_appropriate_windows);
      
      if (v_appropriate_windows_q = 0)
      then
        -- Получение подходящих обслуживающих окон
        for v_appropriate_window_iter in
          select distinct rw.oid from mir.registwindow rw 
            inner join mir.registwindow_linetype rwl
              on rw.oid = rwl.registrywindow
            where
              rwl.linetype = v_linetype_param
                and (rw.show is null or rw.show = 1)
          loop
            v_appropriate_windows := array_append(v_appropriate_windows, v_appropriate_window_iter);
        end loop;
        
        -- Получение количества подходящих обслуживающих окон
      	select count(*) into v_commmon_windows_q from unnest(v_appropriate_windows);
        
        if (v_commmon_windows_q > 0)
        then  -- Потенциально одно окно сможет принять заявку
          v_appropriate_windows_q := 1;
        end if;
      end if;
    end if;

    if (v_appropriate_windows_q > 0) -- Есть окна регистратуры, готовые обслужить талон
    then 										
      -- Определение номера талона
      select max(t.order_n)+1 into v_order_n from 
        (
          select max(coalesce( p.order_n, 0)) order_n from mir.progression p
            where to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'')
              and p.linetype=v_linetype_param
          union all
          select max(coalesce( p.order_n, 0)) order_n from mir.progression_stat p
            where to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'')
              and p.linetype=v_linetype_param
        ) t;
      
      if (v_order_n is null) -- Генерируемый талон является первым талоном для данного типа очереди
      then
        v_order_n := 1;
      end if;
      
      -- Формирование полного типа талона
      select lt.shortname || v_order_n into v_order from mir.linetype lt
        where lt.oid = v_linetype_param;
      
      -- Получение типов очередей, обслуживаемых подходящими окнами
      for v_appropriate_windows_linetype_iter in
        select distinct rwl.linetype from mir.registwindow_linetype rwl
          inner join mir.linetype lt
            on rwl.linetype = lt.oid
          where rwl.registrywindow in (select * from unnest(v_appropriate_windows))
            and (lt.show is null or lt.show = 1)
        loop
          v_appropriate_windows_linetypes := array_append(v_appropriate_windows_linetypes, v_appropriate_windows_linetype_iter);
      end loop;
      
      if (v_linetype_param = v_internet_ticket_linetype_oid) -- Тип очереди: Internet-заявка 
      then
    	-- Получение количества "ожидающих" талонов:
        -- записанных, но не обработанных талонов типа "Internet-заявка"
        select count(*) into v_waiting_state_tickets_q from mir.progression p 
          where p.linetype = v_linetype_param
            and to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'');    
      else
      	-- Получение количества "ожидающих" талонов:
        -- записанных, но не обработанных талонов
        select count(*) into v_waiting_state_tickets_q from mir.progression p 
          where p.linetype in (select * from unnest(v_appropriate_windows_linetypes))
            and to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'');    
      end if;

      if (now() < v_work_date) -- Рабочий день еще не начался
      then
        v_start_plan_dt := v_work_date;
      else
        v_start_plan_dt := now();
      end if;

      if (v_waiting_state_tickets_q < v_appropriate_windows_q) -- Кол-во записанных, но не обработанных на сегодняшний день <= кол-ва подходящих окон
      then
		v_plan_dt := v_start_plan_dt;
      else    
        if (v_linetype_param = v_internet_ticket_linetype_oid) -- Тип очереди: Internet-заявка 
        then
          -- Получение среднего времени приема
          select lt.processduration into v_avg_duration from mir.linetype lt
            where lt.oid = v_linetype_param;
            
          -- Получение количества талонов-конкурентов генерируемого талона
          select v_order_n - 1 - coalesce(sub.last_processed_ticket_order, 0) into v_concurrent_tickets_q from
            (
              select max(coalesce(p.order_n, 0)) as last_processed_ticket_order from mir.progression_stat p
                where to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'')
                  and p.linetype = v_linetype_param
            ) sub;                     
          else -- другой тип очереди
            -- Получение среднего времени приема
            select avg(avg_durations.avg_d) into v_avg_duration from
              (
                select avg(coalesce(lt.processduration, 0)) as avg_d from mir.registwindow_linetype rwl 
                  inner join mir.linetype lt
                    on rwl.linetype = lt.oid
                  where rwl.registrywindow in (select * from unnest(v_appropriate_windows))
                    and (lt.show is null or lt.show = 1)
                  group by rwl.registrywindow
              ) avg_durations;
                        
            -- Получение количества талонов-конкурентов генерируемого талона
            select sum(coalesce(talons_q.last_waiting, 0)) 
              into v_concurrent_tickets_q from
                (
                  (
                  	select oid from unnest(v_appropriate_windows_linetypes) oid
                  ) appr_lt
                  left join
                  (
                    select p.linetype, count(p.order_n) as last_waiting from mir.progression p
                      where to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'')
      					and p.linetype in (select * from unnest(v_appropriate_windows_linetypes))
                      group by p.linetype
                  ) last_waiting_sub on appr_lt.oid = last_waiting_sub.linetype
                 /* commit Ognev M.V. неверный алгоритм расчета left join
                  (
                    select p.linetype, max(p.order_n) as last_processed from mir.progression_stat p
                      where to_date(to_char(p.print_dt, ''dd.mm.yyyy''), ''dd.mm.yyyy'')=to_date(to_char(now(), ''dd.mm.yyyy''), ''dd.mm.yyyy'')
                        and p.linetype in (select * from unnest(v_appropriate_windows_linetypes))
                      group by p.linetype
                  ) last_processed_sub on appr_lt.oid = last_processed_sub.linetype */              
                ) talons_q;
        end if;
          
        -- Вычисление планируемого количеста секунд ожидания
        v_plan_duration_in_seconds := round(v_concurrent_tickets_q*v_avg_duration/v_appropriate_windows_q);
                         
        select v_start_plan_dt + "interval" (v_plan_duration_in_seconds || ''sec'')
    	  into v_plan_dt;   
      end if;
    
      if ((date(v_start_plan_dt) = date(v_plan_dt)) and (v_max_line_worktime is null or "time"(v_plan_dt) < v_max_line_worktime)) 
      then -- Талон получен на сегодняшний день и
           -- максимальное время работы для выбранного типа очереди не задано																		  
           -- или не превышено планируемым временем
        -- Генерирование нового OID
        v_oid := mir.new_uuid();
      
        insert into mir.progression("oid", "linetype", "order", "plan_dt", "order_n")
          values(v_oid, v_linetype_param, v_order, v_plan_dt, v_order_n);
        
        return v_oid;
      else
        return v_work_time_is_exceeded_result_msg;
      end if;
    else
      return v_no_appropriate_windows_result_msg;
    end if;
  else
    return v_work_time_is_exceeded_result_msg;
  end if;    
end;
';


ALTER FUNCTION mir."QSystem_get_New_Talon"(plinetype character, pworkdate character varying) OWNER TO postgres;

--
-- TOC entry 1430 (class 1255 OID 16772)
-- Dependencies: 5396 14
-- Name: add_diagnos_in_demand(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION add_diagnos_in_demand(pdemand character, pstandart character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  D record;
  S record;
  c record;
  nOk integer;
begin

  FOR D IN (SELECT *
              FROM MIR.STANDART_GOSP_SERVICE SGS
             WHERE SGS.OID_STANDART = PSTANDART) 
  LOOP
    nOk := -1;
    
    for c in (select ds.oid
                from MIR.DEMAND_STANDART ds
               where ds.DEMAND = PDEMAND 
                 AND ds.SERVICE = D.SERVICE 
                 AND ds.IS_DOP = D.ISDOP
             )
    loop
      nOk := 1;
    end loop;
    
    if nOk <= 0 then
      INSERT INTO MIR.DEMAND_STANDART
        (OID, DEMAND, SERVICE, SERVICE_DATE, IS_DOP)
      VALUES
        (MIR.NEW_UUID(), PDEMAND, D.SERVICE, NULL, D.ISDOP);
    end if;
  
    /*MERGE INTO MIR.DEMAND_STANDART
    USING DUAL
    ON (DEMAND = PDEMAND AND SERVICE = D.SERVICE AND IS_DOP = D.ISDOP)
    WHEN NOT MATCHED THEN
      INSERT
        (OID, DEMAND, SERVICE, SERVICE_DATE, IS_DOP)
      VALUES
        (MIR.NEW_UUID, PDEMAND, D.SERVICE, NULL, D.ISDOP);*/
  END LOOP;

  FOR S IN (SELECT DS.SERVICE
              FROM MIR.DEMAND_STANDART DS
             WHERE DS.DEMAND = PDEMAND
             GROUP BY DS.SERVICE
            HAVING COUNT(*) > 1)
  LOOP
    DELETE FROM MIR.DEMAND_STANDART DD
     WHERE DD.SERVICE = S.SERVICE
       AND DD.DEMAND = PDEMAND
       AND DD.IS_DOP = 1;
  END LOOP;

end;

';


ALTER FUNCTION mir.add_diagnos_in_demand(pdemand character, pstandart character) OWNER TO postgres;

--
-- TOC entry 1431 (class 1255 OID 16773)
-- Dependencies: 5396 14
-- Name: add_new_lpu_sysuser(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION add_new_lpu_sysuser() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
	address char(36);
  	lpu char(36);
  	otdel char(36);
    otdel_type char(36);
    
  	lpu_history char(36);
  	people char(36);
    
    sysuser_login VARCHAR(100);
    sysuser_password VARCHAR(100);
    sysuser_role char(36);
    
  	sotr char(36);
    sysuser_post char(36);
BEGIN
	if new.oid is null then 
		 new.oid = (SELECT * FROM mir.guid_generate());
	end if;
     
	if new.lpu is null then 
		 new.lpu = (SELECT * FROM mir.guid_generate());
	end if;
    
	if TG_OP = ''INSERT'' then
    
    	address := lower(mir.new_uuid());
		lpu := NEW.lpu;
        otdel := lower(mir.new_uuid());
        lpu_history := lower(mir.new_uuid());
        people := lower(mir.new_uuid());
        sotr := lower(mir.new_uuid());
        
    	sysuser_login := NEW.loginadmin;
        sysuser_password := NEW.passwordadmin;
        
        INSERT INTO mir.addressex
        (oid, tkladr, house)
        VALUES
        (
        	address,
            NEW.addressoid,
            NEW.addresshome
        );
    
 		INSERT INTO mir.company
        (oid,fullname, shortname, address, home)
        VALUES
        (
        	lpu, 
        	NEW.fullnamelpu, 
        	NEW.shortnamelpu, 
        	address,
         	NEW.addresshome
         );
        
        INSERT INTO mir.lpu
        (oid,identifier,lpu_code,lpu_code_value,lpu_type,ownership,organizational_form,
         registration_number,registration_date)
        VALUES 
        (	
        	lpu, 
            NEW.numlicense,
            '''',
            '''',
            '''',
            '''',
            '''',
            NEW.numlicense,
            NEW.datelicense
        );
         
        otdel_type := (select oid from mir.otdel_type where name=''Поликлиника'' limit 1);

        INSERT INTO mir.otdel
        (oid,lpu,name,otdel_type)
        VALUES
        (
        otdel,
        lpu,
        ''Приёмное отделение'',
        otdel_type);
        
        INSERT INTO mir.lpu_history
        (hid, h_date, oid)
        VALUES
        (
          lpu_history,
          now(),
          lpu
        );
        
        INSERT INTO mir.people
        (oid, firstname, lastname, middlename)
        VALUES
        (
        	people,
        	NEW.nameadmin,
            NEW.lastnameadmin,
            NEW.middlenameadmin
        );
        
        INSERT INTO mir.sysuser
        (oid,username,isactive,showinsite)
        VALUES
        (
        	people,
            sysuser_login,
            1,
            1);
        
        INSERT INTO mir.sysuser_lpu_right
        (lpu,sysuser)
        VALUES
        (
        	lpu,
            people);
        
        -- роль из профиля ЛПУ или частного врача
        SELECT  r.oid
        INTO sysuser_role
        FROM mir.registration_profile p
        	join mir.role r on p.role_name = r.name         	 
        WHERE 
			p.oid = NEW.profile;
        
        IF sysuser_role is null THEN
        	sysuser_role := (select oid from mir.role where name=''Администратор ЛПУ'' limit 1);
        END IF;
        
        INSERT INTO mir.sysuser_role
        (sysuser,"role")
        VALUES
        (
        	people,
            sysuser_role -- Администратор ЛПУ
        );
 
       -- должность по умолчанию
        SELECT  r.oid
        INTO sysuser_post
        FROM mir.registration_profile p
        	join mir.post r on p.post_name = r.name         	 
        WHERE 
			p.oid = NEW.profile;
        IF sysuser_post is null THEN    
			sysuser_post := (select oid from mir.post where name = ''Врач-терапевт'' limit 1);            
        END IF;
        
        INSERT INTO mir.sotr
        (oid,sysuser,otdel,post)
        VALUES
        (
        	sotr,
            people,
            otdel,
            sysuser_post-- Врач-терапевт
        );
        
        -- создать пользователя БД
        PERFORM mir.create_ora_user(sysuser_login,sysuser_password);
        
        
	RETURN NEW;
	END IF;
RETURN NEW;
END;
';


ALTER FUNCTION mir.add_new_lpu_sysuser() OWNER TO postgres;

--
-- TOC entry 1432 (class 1255 OID 16774)
-- Dependencies: 5396 14
-- Name: addr_add_district_to_list(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_add_district_to_list(pdistrict character, paction character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    /*IF PACTION = ''DELETE'' THEN
      T_DISTRICT_LIST_DELETE(PDISTRICT) := PDISTRICT;
    ELSE
      T_DISTRICT_LIST(PDISTRICT) := PDISTRICT;
    END IF;*/
  END;

';


ALTER FUNCTION mir.addr_add_district_to_list(pdistrict character, paction character varying) OWNER TO postgres;

--
-- TOC entry 1433 (class 1255 OID 16775)
-- Dependencies: 5396 14
-- Name: addr_delete_address(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_delete_address(p_address character, p_objectoid character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
  ----- удаление адреса для любой передаваемой сущности (people, lpu, otdel...)

  UPDATE mir.addressex
  SET tkladr = NULL,
      addr_str = ''DELETE''
  WHERE OID IN (
                 SELECT address
                 FROM (
                        SELECT address
                        FROM mir.people_address
                        WHERE people = p_objectoid
                        UNION ALL
                        SELECT addressex1
                        FROM mir.people
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT addressex2
                        FROM mir.people
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT address
                        FROM mir.building
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT address
                        FROM mir.company
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT addressfact
                        FROM mir.company
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT address
                        FROM mir.company_address
                        WHERE company = p_objectoid
                        UNION ALL
                        SELECT addressex
                        FROM mir.otdel
                        WHERE OID = p_objectoid
                        UNION ALL
                        SELECT addressex
                        FROM mir.plot
                        WHERE OID = p_objectoid
                      ) AS addr
                 WHERE address = p_address
        );

    ----------------

    UPDATE mir.people
    SET addressex1 = CASE
                       WHEN addressex1 = p_address THEN NULL
                       ELSE addressex1
                     END,
        addressex2 = CASE
                       WHEN addressex2 = p_address THEN NULL
                       ELSE addressex2
                     END
    WHERE OID = p_objectoid;

---------------

DELETE
FROM mir.people_address
WHERE people = p_objectoid
      AND address = p_address;
-------------

UPDATE mir.building
SET address = NULL
WHERE OID = p_objectoid
      AND address = p_address;
-------------

UPDATE mir.company
SET address = CASE
                WHEN address = p_address THEN NULL
                ELSE address
              END,
    addressfact = CASE
                    WHEN addressfact = p_address THEN NULL
                    ELSE addressfact
                  END
WHERE OID = p_objectoid;
-------------

DELETE
FROM mir.company_address
WHERE company = p_objectoid
      AND address = p_address;
-------------------      
      
UPDATE mir.otdel
SET addressex = NULL
WHERE OID = p_objectoid
      AND addressex = p_address;
-------------

UPDATE mir.plot
SET addressex = NULL
WHERE OID = p_objectoid
      AND addressex = p_address;

 
----------------
----------------
begin
  DELETE
  FROM mir.addressex
  WHERE tkladr IS NULL
        AND addr_str = ''DELETE'';
  EXCEPTION
  when OTHERS then
  -- do nothing
end;

END;
';


ALTER FUNCTION mir.addr_delete_address(p_address character, p_objectoid character) OWNER TO postgres;

--
-- TOC entry 1434 (class 1255 OID 16776)
-- Dependencies: 5396 14
-- Name: addr_delete_ta_district_kladr(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_delete_ta_district_kladr(pdistrict character, pkladr character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.TERRITORIALACCESSORY T
     WHERE T.PEOPLE IN (SELECT P.OID
                          FROM MIR.PEOPLE               P,
                               MIR.ADDRESSEX            A,
                               MIR.TERRITORIALACCESSORY T
                         WHERE A.TKLADR = PKLADR
                           AND A.OID = P.ADDRESSEX2
                           AND T.DIST = PDISTRICT
                           AND T.PEOPLE = P.OID)
       AND T.DIST = PDISTRICT;
  END;

';


ALTER FUNCTION mir.addr_delete_ta_district_kladr(pdistrict character, pkladr character) OWNER TO postgres;

--
-- TOC entry 1435 (class 1255 OID 16777)
-- Dependencies: 5396 14
-- Name: addr_extract_house_info(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_extract_house_info(phouse character varying, pkorp character varying, OUT pouthouse character varying, OUT pfullinfo character varying, OUT presult integer) RETURNS record
    LANGUAGE plpgsql
    AS '
DECLARE
    V_TMP_STR    VARCHAR(100);
    V_HOUSE      VARCHAR(10);
    V_FULL_HOUSE VARCHAR(50);
    V_POS        INTEGER;
    V_TEMP_KORP  MIR.ADDRESSEX.BUILDING%TYPE;
  BEGIN
    --приводим дом в верхний регистр и убираем пробелы
    V_TMP_STR := UPPER(TRIM(PHOUSE));
    -- обрабатываем корпус : убираем нули и пробелы, переводим все в верхний регистр
    SELECT UPPER(TRANSLATE(PKORP, ''_0 '', ''_'')) INTO V_TEMP_KORP;
  
    --если корпус не пустой дописываем
    IF V_TEMP_KORP IS NOT NULL THEN
      V_TMP_STR := V_TMP_STR || ''/'' || V_TEMP_KORP;
    END IF;
  
    --определяем номер дома для вхождения в диапазон - комбинация цифр до первого нечислового элемента
 --   SELECT SUBSTR(V_TMP_STR,
 --                 1,
 --                 regexp_replace(V_TMP_STR || '' '', ''[^[:digit:]]'') - 1, '''')
 --                 --REGEXP_INSTR(V_TMP_STR || '' '', ''[^[:digit:]]'') - 1)
 --     INTO V_HOUSE;
    --DBMS_OUTPUT.PUT_LINE(''определяем номер дома'');
    --DBMS_OUTPUT.PUT_LINE(V_HOUSE);
  
    -- если номер дома пустой - выходим
    IF V_HOUSE IS NULL THEN
      PRESULT := 0;
      --RETURN 0;
    END IF;
    --DBMS_OUTPUT.PUT_LINE(''V_TMP_STR = '' || V_TMP_STR);
    -- удаляем символы между цифрами и литерами
    V_FULL_HOUSE := REGEXP_REPLACE(V_TMP_STR,
                                   ''([[:digit:]]+)([[:space:]]|[^[:alnum:]]+)([[:alpha:]]+)'',
                                   ''\1\3'');
    --DBMS_OUTPUT.PUT_LINE(''-- удаляем символы между цифрами и литерами '');
    --DBMS_OUTPUT.PUT_LINE(V_FULL_HOUSE);
  
    -- заменяем символы(кроме букв!) между цифрами на ''/''
    V_FULL_HOUSE := REGEXP_REPLACE(V_FULL_HOUSE,
                                   ''([[:digit:]]+)([[:space:]]|[^[:alnum:]]+)([[:digit:]]+)'',
                                   ''\1/\3'');
    --DBMS_OUTPUT.PUT_LINE(''  -- заменяем символы(кроме букв!) между цифрами на ''''/'''''');
    --DBMS_OUTPUT.PUT_LINE(V_FULL_HOUSE);
  
    --для анализа берем только последовательность символов до второго
    V_POS := INSTR(V_FULL_HOUSE, ''/'', INSTR(V_FULL_HOUSE, ''/'') + 1);
    IF V_POS > 0 THEN
      V_FULL_HOUSE := SUBSTR(V_FULL_HOUSE, 1, V_POS - 1);
      --DBMS_OUTPUT.PUT_LINE(''--берем только после первого /'');
      --DBMS_OUTPUT.PUT_LINE(V_FULL_HOUSE);
    END IF;
  
    V_FULL_HOUSE := TRIM(V_FULL_HOUSE);
  
    POUTHOUSE := V_HOUSE;
    PFULLINFO := V_FULL_HOUSE;
    PRESULT := 1;
    --RETURN 1;
  END;
';


ALTER FUNCTION mir.addr_extract_house_info(phouse character varying, pkorp character varying, OUT pouthouse character varying, OUT pfullinfo character varying, OUT presult integer) OWNER TO postgres;

--
-- TOC entry 1436 (class 1255 OID 16778)
-- Dependencies: 5396 14
-- Name: addr_get_addr_str(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_get_addr_str(poid character, plevel numeric DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES VARCHAR(4000);
    C record;
  BEGIN
    V_RES := '' '';
    FOR C IN (
    	SELECT  
    				(MIR.get_tkladrspr_string(A.TKLADR, PLEVEL) ||
    				 CASE WHEN A.HOUSE IS NOT NULL THEN'', д. '' || A.HOUSE else '''' END || 
         CASE WHEN A.corps IS NOT NULL THEN'', корп. '' || A.corps else '''' END ||
         CASE WHEN A.building IS NOT NULL THEN'', строение '' || A.building else '''' END ||
         CASE WHEN A.FLAT IS NOT NULL THEN'', кв. '' || A.FLAT else '''' END) AS ADDR_STR
      FROM MIR.ADDRESSEX A
      WHERE OID = POID)
				LOOP
      V_RES := C.ADDR_STR;
    END LOOP;
    RETURN V_RES;
  END;
';


ALTER FUNCTION mir.addr_get_addr_str(poid character, plevel numeric) OWNER TO postgres;

--
-- TOC entry 1437 (class 1255 OID 16779)
-- Dependencies: 5396 14
-- Name: addr_get_district_addr_str(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_get_district_addr_str(pdoid character, ploid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES VARCHAR(4000);
  BEGIN
    V_RES := NULL;
  
    /*SELECT FULLADR
      INTO V_RES
      FROM (SELECT SUBSTR(SYS_CONNECT_BY_PATH(SHOWSTR, '', ''), 2) AS FULLADR,
                   RN,
                   CNT
              FROM (SELECT H.OID,
                           T.FC_PREFIX || ''. '' || H.NAME AS SHOWSTR,
                           ROW_NUMBER() OVER(ORDER BY T.FK_LEVEL) RN,
                           COUNT(*) OVER() CNT,
                           T.FK_LEVEL
                      FROM MIR.HCATEGORY H
                     INNER JOIN MIR.TKLADRSPR T
                        ON H.OID = T.OID
                     WHERE H.OID != PDOID
                       AND H.OID NOT IN
                           (SELECT H.OID
                              FROM MIR.HCATEGORY H
                             INNER JOIN MIR.TKLADRSPR T
                                ON H.OID = T.OID
                             START WITH H.OID = PLOID
                            CONNECT BY H.OID = PRIOR H.PARENT)
                     START WITH H.OID = PDOID
                    CONNECT BY H.OID = PRIOR H.PARENT)
             START WITH RN = 1
            CONNECT BY RN = PRIOR RN + 1)
     WHERE RN = CNT;
  
    --  V_RES
    V_RES := TRIM(V_RES);
  
    IF LENGTH(V_RES) > 0 THEN
      V_RES := ''('' || V_RES || '')'';
    END IF;*/
  
    RETURN V_RES;
  END;

';


ALTER FUNCTION mir.addr_get_district_addr_str(pdoid character, ploid character) OWNER TO postgres;

--
-- TOC entry 1438 (class 1255 OID 16780)
-- Dependencies: 5396 14
-- Name: addr_init_district_list(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_init_district_list() RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    /*T_DISTRICT_LIST.DELETE();*/
  END;

';


ALTER FUNCTION mir.addr_init_district_list() OWNER TO postgres;

--
-- TOC entry 1439 (class 1255 OID 16781)
-- Dependencies: 5396 14
-- Name: addr_insert_addr(character varying, character varying, character varying, character, character varying, character varying, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_insert_addr(phouse character varying, pbuilding character varying, pflat character varying, ptkladr character, padrstr character varying DEFAULT NULL::character varying, pcorps character varying DEFAULT NULL::character varying, pregistrationdate date DEFAULT NULL::date, paddress_type character DEFAULT NULL::bpchar, poid character DEFAULT NULL::bpchar) RETURNS character
    LANGUAGE plpgsql
    AS '
-- edited by S.Ponomarenko 
DECLARE
  V_OID MIR.ADDRESSEX.OID % TYPE;
BEGIN
  V_OID := COALESCE(poid, MIR.NEW_UUID());
  INSERT INTO MIR.ADDRESSEX(OID, HOUSE, building, FLAT, TKLADR, addr_str, corps, registrationdate, address_type)
  VALUES (V_OID, $1, $2, $3, $4, $5, $6, coalesce($7, CURRENT_DATE), $8);

  IF ($5 IS NULL) THEN
    UPDATE MIR.ADDRESSEX
    SET addr_str = mir.ADDR_GET_ADDR_STR(V_OID)
    WHERE OID = V_OID;
  END IF;

  RETURN V_OID;
END;
';


ALTER FUNCTION mir.addr_insert_addr(phouse character varying, pbuilding character varying, pflat character varying, ptkladr character, padrstr character varying, pcorps character varying, pregistrationdate date, paddress_type character, poid character) OWNER TO postgres;

--
-- TOC entry 1440 (class 1255 OID 16782)
-- Dependencies: 5396 14
-- Name: addr_process_district_list(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_process_district_list() RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    V_DISTRICT VARCHAR(36);
  BEGIN
    /*V_DISTRICT := T_DISTRICT_LIST.FIRST;
    LOOP
      EXIT WHEN V_DISTRICT IS NULL;
    
      UPDATE_TA_DISTRICT(V_DISTRICT);
    
      V_DISTRICT := T_DISTRICT_LIST.NEXT(V_DISTRICT);
    END LOOP;
  
    V_DISTRICT := T_DISTRICT_LIST_DELETE.FIRST;
    LOOP
      EXIT WHEN V_DISTRICT IS NULL;
    
      DELETE_TA_DISTRICT(V_DISTRICT);
    
      V_DISTRICT := T_DISTRICT_LIST_DELETE.NEXT(V_DISTRICT);
    END LOOP;*/
  END;

';


ALTER FUNCTION mir.addr_process_district_list() OWNER TO postgres;

--
-- TOC entry 1441 (class 1255 OID 16783)
-- Dependencies: 5396 14
-- Name: addr_update_addr(character, character varying, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_update_addr(poid character, phouse character varying, pbuilding character varying, pflat character varying, ptkladr character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    UPDATE MIR.ADDRESSEX
       SET HOUSE    = PHOUSE,
           BUILDING = PBUILDING,
           FLAT     = PFLAT,
           TKLADR   = PTKLADR
     WHERE OID = POID;
     
     UPDATE MIR.ADDRESSEX
        SET addr_str = mir.ADDR_GET_ADDR_STR(OID)
            WHERE OID = POID;
  END;
';


ALTER FUNCTION mir.addr_update_addr(poid character, phouse character varying, pbuilding character varying, pflat character varying, ptkladr character) OWNER TO postgres;

--
-- TOC entry 1442 (class 1255 OID 16784)
-- Dependencies: 5396 14
-- Name: addr_update_ta_district_kladr(character, character, text, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addr_update_ta_district_kladr(pdistrict character, pkladr character, pincludehouse text, pexcludehouse character varying, pstarthouse character varying, pendhouse character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT DD.LPU, M.SEX, M.AGES, M.AGEPO
              --INTO V_LPU, V_SEX, V_AGE_S, V_AGE_PO
                FROM MIR.DISTRICT DD, MIR.DICTIONARY DI, MIR.MEDHELPTYPE M
               WHERE DI.OID = DD.OID
                 AND DD.OID = PDISTRICT
                 AND (DD.AUTODISTRICT IS NULL OR DD.AUTODISTRICT = 0)
                -- AND DI.GCRECORD IS NULL
                 AND DD.HELPTYPE = M.OID) LOOP
    
      /*UPDATE_TA_DISTRICT_KLADR_BASE(PDISTRICT,
                                    PKLADR,
                                    PINCLUDEHOUSE,
                                    PEXCLUDEHOUSE,
                                    PSTARTHOUSE,
                                    PENDHOUSE,
                                    C.LPU,
                                    C.SEX,
                                    C.AGES,
                                    C.AGEPO);*/
    END LOOP;
  
  END;

';


ALTER FUNCTION mir.addr_update_ta_district_kladr(pdistrict character, pkladr character, pincludehouse text, pexcludehouse character varying, pstarthouse character varying, pendhouse character varying) OWNER TO postgres;

--
-- TOC entry 1443 (class 1255 OID 16785)
-- Dependencies: 5396 14
-- Name: addressex_biu_addr_str_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addressex_biu_addr_str_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
-- автоматически собирает строку адреса в соответсвии с требованиями
select MIR.ZGETKLADRSTR(NEW.TKLADR,0) /*|| '' '' */
                     || CASE
                       WHEN NEW.HOUSE IS NOT NULL THEN
                        '' дом '' || NEW.HOUSE
                     END || CASE
                       WHEN NEW.BUILDING IS NOT NULL THEN
                        '', корп. '' || NEW.BUILDING
                     END || CASE
                       WHEN NEW.FLAT IS NOT NULL THEN
                        '', кв. '' || NEW.FLAT
                     END into NEW.ADDR_STR;
return new;                     
END;

';


ALTER FUNCTION mir.addressex_biu_addr_str_trg() OWNER TO postgres;

--
-- TOC entry 1444 (class 1255 OID 16786)
-- Dependencies: 5396 14
-- Name: addressex_create_by_str(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addressex_create_by_str(address_str character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  addr_type varchar(36);
  tkladr_id VARCHAR;
  nlevel integer;
  
  addresex_id VARCHAR;
  house_value VARCHAR;
  courp_value VARCHAR;
  flat_value VARCHAR;
  c record;
  ca record;
  
  creg record;
  creg_full record;
  ctown record;
  cstreet record;
  is_reg boolean;
  is_town boolean;
  is_street boolean;
  is_house boolean;
  is_corp_flat boolean;

  modif_str VARCHAR;
BEGIN
  if (( address_str is null ) or ( address_str = '''')) then
    return null;
  end if;
    
  --if (( address_type is null ) or ( address_type = '''')) then
  --  addr_type := mir.cn_address_type_fact();
  --else
  --  addr_type := address_type;
  --end if;
  
  addresex_id := null;

  house_value := null;
  courp_value := null;
  flat_value := null;
  
  is_reg := false;
  is_town := false;
  is_street := false;
  is_house := false;
  is_corp_flat := false;

  tkladr_id := null;
  nlevel := 0;

  for c in ( select lower(trim(unnest(string_to_array(address_str, '','')))) as str
           )
  loop
    if (not is_reg) and (nlevel < 5) then
      modif_str := replace(lower(c.str), '' автономный округ'', ''ао'');
      modif_str := replace(modif_str, ''республика '', ''респ'');
      modif_str := replace(modif_str, '' область'', ''обл'');
      modif_str := replace(modif_str, ''город '', ''г'');
      
      for creg in (
                  select t.oid,
                         t.fk_level
                    from mir.tkladrspr t 
                   where t.parent= ''3a903d16-daf5-44f1-b6cc-e3e0b7441060''
                     and (
                         lower(t.fc_prefix||'' ''||t.name) like modif_str
                      or lower(t.fc_prefix||''.''||t.name) like modif_str
                      or lower(t.fc_prefix||''. ''||t.name) like modif_str  
                      or lower(t.name||'' ''||t.fc_prefix)like modif_str 
                      or lower(t.name||'' ''||t.fc_prefix||''.'')like modif_str
                      or lower(t.name) like modif_str
                         )
                     and t.fk_level >= 0
                     and t.showelement = 1
                  )
      loop
        tkladr_id := creg.oid;
        nlevel := creg.fk_level;
        is_reg := true;
        
        house_value := null;
        is_house := false;
        
        courp_value := null;
        flat_value := null;
        is_corp_flat := false;

        continue;
      end loop;
      
      if is_reg then
        continue;
      else  
        for creg_full in (
                    select t.oid,
                           t.fk_level
                      from mir.tkladrspr t 
                     where (
                           lower(t.fc_prefix||'' ''||t.name) like modif_str
                        or lower(t.fc_prefix||''.''||t.name) like modif_str
                        or lower(t.fc_prefix||''. ''||t.name) like modif_str  
                        or lower(t.name||'' ''||t.fc_prefix)like modif_str 
                        or lower(t.name||'' ''||t.fc_prefix||''.'')like modif_str
                        or lower(t.name) like modif_str
                           )
                       and t.fk_level <= 3
                       and t.fk_level >= 0
                       and t.oid <> ''3a903d16-daf5-44f1-b6cc-e3e0b7441060''
                       and t.showelement = 1
                    )
        loop
          tkladr_id := creg_full.oid;
          nlevel := creg_full.fk_level;
          is_reg := true;
          
          house_value := null;
          is_house := false;
          
          courp_value := null;
          flat_value := null;
          is_corp_flat := false;

          continue;
        end loop;
        
        if is_reg then
          continue;
        end if;
      end if;
    end if;
    
    if (not is_town ) and (nlevel < 5)then
    
      modif_str := replace(lower(c.str), '' автономный округ'', ''ао'');
      modif_str := replace(modif_str, ''республика '', ''респ'');
      modif_str := replace(modif_str, '' область'', ''обл'');
      modif_str := replace(modif_str, ''город '', ''г'');
      
      for ctown in (
                  select t.oid,
                         t.fk_level
                    from mir.tkladrspr t 
                   where t.parent= tkladr_id
                     and (
                         lower(t.fc_prefix||'' ''||t.name) like modif_str
                      or lower(t.fc_prefix||''.''||t.name) like modif_str
                      or lower(t.fc_prefix||''. ''||t.name) like modif_str  
                      or lower(t.name||'' ''||t.fc_prefix)like modif_str 
                      or lower(t.name||'' ''||t.fc_prefix||''.'')like modif_str
                      or lower(t.name) like modif_str
                         )
                     and t.fk_level >= 0
                     and t.showelement = 1
                  )
      loop
        tkladr_id := ctown.oid;
        nlevel := creg.fk_level;
        is_town := true;
        
        house_value := null;
        is_house := false;
        
        courp_value := null;
        flat_value := null;
        is_corp_flat := false;
        
        continue;
      end loop;
      
      if is_town then
        continue;
      end if;
    end if;
    
    if (not is_street) and (nlevel < 5) then
      modif_str := replace(c.str, ''пр.'', ''пр-кт.'');
      modif_str := replace(modif_str, ''проспект '', ''пр-кт.'');  
      modif_str := replace(modif_str, ''пр-т'', ''пр-кт.''); 
      modif_str := replace(modif_str, '' улица'', '' ул.''); 
      modif_str := replace(modif_str, ''улица '', ''ул. ''); 
      modif_str := replace(modif_str, ''шоссе '', ''ш. '');
      modif_str := replace(modif_str, '' шоссе'', '' ш.'');
       
      for cstreet in (
                  select t.oid,
                         t.fk_level
                    from mir.tkladrspr t 
                   where t.parent= tkladr_id
                     and (
                         lower(t.fc_prefix||'' ''||t.name) like modif_str
                      or lower(t.fc_prefix||''.''||t.name) like modif_str
                      or lower(t.fc_prefix||''. ''||t.name) like modif_str  
                      or lower(t.name||'' ''||t.fc_prefix)like modif_str 
                      or lower(t.name||'' ''||t.fc_prefix||''.'')like modif_str
                      or lower(t.name) like modif_str
                         )
                     and t.fk_level >= 0
                     and t.showelement = 1
                  )
      loop
        tkladr_id := cstreet.oid;
        nlevel := creg.fk_level;
        is_street := true;
        
        house_value := null;
        is_house := false;
        
        courp_value := null;
        flat_value := null;
        is_corp_flat := false;
        
        continue;
      end loop;
      
      if (is_street or (nlevel = 5)) then
        continue;
      end if;
    end if;

    if (not is_house) then
      
      modif_str := trim( replace( coalesce(c.str, ''''), ''д.'', '' '' ));
      modif_str := trim( replace( modif_str, ''дом '', '' '' ));
      house_value := modif_str;
      is_house := true;
      continue;
    end if;
    
    if (not is_corp_flat) then
      modif_str := trim( replace( coalesce(c.str, ''''), ''д.'', '' '' ));
      modif_str := trim( replace( modif_str, ''дом '', '' '' ));
      
      if strpos(modif_str, ''корпус'') > 0 then
        modif_str := trim( replace( modif_str, ''корпус '', '' '' ));
        courp_value := modif_str;
      else
        flat_value := modif_str;
      end if;

      is_corp_flat := true;
      continue;
    end if;
    
    if (flat_value is null) then
      flat_value := coalesce(c.str, '''');
    else
      flat_value := flat_value || '','' ||coalesce(c.str, '''');
    end if;
  end loop;
  
  if (tkladr_id is null) then
    return null;
  end if;
  
  for ca in (
            select a.oid 
              from mir.addressex a 
             where a.tkladr = tkladr_id 
               and a.house = substr(house_value, 1, 99)
               and (( (a.corps = substr(courp_value, 1, 254)) and (courp_value is not null) )
                    or
                    ( (courp_value is null) and (a.corps is null) )
                   )
               and (( (a.flat = substr(flat_value, 1, 99)) and (flat_value is not null) )
                    or
                    ( (flat_value is null) and (a.flat is null) )
                   )
             limit 1
           )
  loop
    addresex_id := ca.oid;
  end loop;
 
  if (addresex_id is null) then
    addresex_id = mir.guid_generate(); --tkladr_id||''-''|| COALESCE(house_value, '''' )||''-''||COALESCE(courp_value, '''' )||''-''||COALESCE(flat_value, '''' ); --mir.guid_generate();
    --addresex_id = tkladr_id||''-''|| COALESCE(house_value, ''s'' )||''-''||COALESCE(courp_value, ''s'' )||''-''||COALESCE(flat_value, ''s'' ); --mir.guid_generate();
 
    insert into mir.addressex ("oid", "tkladr", "house", "corps", "flat")
    values (addresex_id, tkladr_id, substr(house_value, 1, 99), substr(courp_value, 1, 254), substr(flat_value, 1, 99));
  end if;
 
  return addresex_id;
END;
';


ALTER FUNCTION mir.addressex_create_by_str(address_str character varying) OWNER TO postgres;

--
-- TOC entry 1445 (class 1255 OID 16788)
-- Dependencies: 5396 14
-- Name: addressex_tr_addr_str(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION addressex_tr_addr_str() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
BEGIN
  NEW.addr_str:=mir.addr_get_addr_str(NEW.oid, 0);
  return new;
END;
';


ALTER FUNCTION mir.addressex_tr_addr_str() OWNER TO postgres;

--
-- TOC entry 1449 (class 1255 OID 16789)
-- Dependencies: 5396 14
-- Name: appointment_people(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION appointment_people(oid character varying, people character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
  V_RES integer := 0;
  V_FREE integer;
  V_LPU varchar;
  V_OTDEL varchar;
  V_PRESCTYPE varchar;
  V_SOTR varchar;
  V_MDOC varchar;
  V_PRESC varchar;
  V_PRESCSCHEDULE varchar;
BEGIN
 select mir.schedule_is_schedule_free($1)
 into V_FREE;
 IF(V_FREE = 1) then
  perform mir.webuser_insertwebpaconpriem($2, $1, 2);
  select s.lpu,
         s.otdel,
         s.presctype,
         s.sotr
  into V_LPU,
       V_OTDEL,
       V_PRESCTYPE,
       V_SOTR
  from mir.schedule s
  where s.oid = $1;
  --mdoc
  select id
  into V_MDOC
  from mir.mdoc
  where lpu = V_LPU and
        people_id = $2 and
        mdoc_type_id = mir.cn_mdoc_type_ambtalon();
  IF(V_MDOC is null or V_MDOC = '''') then
  V_MDOC := mir.new_uuid();
  insert into mir.mdoc(id, people_id, mdoc_type_id, beginm, status, otdel, lpu)
  values (V_MDOC, $2, mir.cn_mdoc_type_ambtalon(), now(), 0, V_OTDEL, V_LPU)
  ;
  end if;
  --presc
  V_PRESC := mir.new_uuid();
  insert into mir.presc(id, presctype_id, create_dt, mdoc_id, presc_state_id,
  runemp_id, creator_id)
  values (V_PRESC, V_PRESCTYPE, now(), V_MDOC, mir.cn_presc_state_not_done(),
  V_SOTR, V_SOTR);
  --presc_schedule
  V_PRESCSCHEDULE := mir.new_uuid();
  insert into mir.presc_schedule(id, presc_id, shedule_id)
  values (V_PRESCSCHEDULE, V_PRESC, $1);
  V_RES := 1;
  end if;
  return V_RES;
END;
';


ALTER FUNCTION mir.appointment_people(oid character varying, people character varying) OWNER TO postgres;

--
-- TOC entry 1450 (class 1255 OID 16790)
-- Dependencies: 5396 14
-- Name: areal_sotr_set_mine(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION areal_sotr_set_mine(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
	areal CHAR(36);
BEGIN
	select a.areal_id into areal from mir.areal_sotr a where a.oid = poid;
    if areal is not null then
		UPDATE mir.areal_sotr a SET isminesotr = 0 WHERE a.areal_id = areal;
    end if;
    UPDATE mir.areal_sotr a SET isminesotr = 1 WHERE a.oid = poid;
END;
';


ALTER FUNCTION mir.areal_sotr_set_mine(poid character) OWNER TO postgres;

--
-- TOC entry 1451 (class 1255 OID 16791)
-- Dependencies: 5396 14
-- Name: auditin(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION auditin(poid character varying, pip character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN

 insert into mir.auditinout
  (oid, oid_people, date_in, ip)
values
  (lower(mir.new_uuid()), poid, CURRENT_TIMESTAMP, pip  /*sys_context(''USERENV'', ''IP_ADDRESS'')*/);

END;

';


ALTER FUNCTION mir.auditin(poid character varying, pip character varying) OWNER TO postgres;

--
-- TOC entry 1452 (class 1255 OID 16792)
-- Dependencies: 5396 14
-- Name: auditout(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION auditout(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
update mir.auditinout
set date_out =CURRENT_TIMESTAMP
where oid_people=poid and date_in=
(
select max(date_in) d from mir.auditinout
where oid_people=poid and date_out is null
);
end;

';


ALTER FUNCTION mir.auditout(poid character varying) OWNER TO postgres;

--
-- TOC entry 1453 (class 1255 OID 16793)
-- Dependencies: 5396 14
-- Name: base_class_add_presctype(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_add_presctype(pname character varying, pcode character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID MIR.DICTIONARY.OID%TYPE;
    c record;
  BEGIN
    FOR C IN (SELECT D.OID
                FROM MIR.DICTIONARY D, MIR.PRESCTYPE P
               WHERE D.OID = P.OID
                 AND UPPER(D.NAME) LIKE ''%'' || TRIM(UPPER(PNAME)) || ''%'') LOOP
      RETURN C.OID;
    END LOOP;
    V_OID := MIR.NEW_UUID();
    INSERT INTO MIR.DICTIONARY
      (OID, NAME, OPTIMISTICLOCKFIELD, OBJECTTYPE)
    VALUES
      (V_OID, PNAME, 0, 18);
    INSERT INTO MIR.PRESCTYPE (OID, CODESPEC) VALUES (V_OID, PCODE);
    RETURN V_OID;
  END;

';


ALTER FUNCTION mir.base_class_add_presctype(pname character varying, pcode character varying) OWNER TO postgres;

--
-- TOC entry 1454 (class 1255 OID 16794)
-- Dependencies: 5396 14
-- Name: base_class_cn_xpo_address_obj(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_cn_xpo_address_obj() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 70;
  END;

';


ALTER FUNCTION mir.base_class_cn_xpo_address_obj() OWNER TO postgres;

--
-- TOC entry 1455 (class 1255 OID 16795)
-- Dependencies: 5396 14
-- Name: base_class_cn_xpo_district_obj(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_cn_xpo_district_obj() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 45;
  END;

';


ALTER FUNCTION mir.base_class_cn_xpo_district_obj() OWNER TO postgres;

--
-- TOC entry 1456 (class 1255 OID 16796)
-- Dependencies: 5396 14
-- Name: base_class_cn_xpo_people_obj(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_cn_xpo_people_obj() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 34;
  END;

';


ALTER FUNCTION mir.base_class_cn_xpo_people_obj() OWNER TO postgres;

--
-- TOC entry 1457 (class 1255 OID 16797)
-- Dependencies: 5396 14
-- Name: base_class_cn_xpo_schedule_obj(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_cn_xpo_schedule_obj() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 55;
  END;

';


ALTER FUNCTION mir.base_class_cn_xpo_schedule_obj() OWNER TO postgres;

--
-- TOC entry 1458 (class 1255 OID 16798)
-- Dependencies: 5396 14
-- Name: base_class_get_company_addr_str(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_get_company_addr_str(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT ADDRESS FROM MIR.COMPANY WHERE OID = POID) LOOP
      RETURN MIR.ADDR_GET_ADDR_STR(C.ADDRESS, 5);
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.base_class_get_company_addr_str(poid character) OWNER TO postgres;

--
-- TOC entry 1459 (class 1255 OID 16799)
-- Dependencies: 5396 14
-- Name: base_class_get_company_fullname(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_get_company_fullname(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT FULLNAME FROM MIR.COMPANY WHERE OID = POID) LOOP
      RETURN C.FULLNAME;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.base_class_get_company_fullname(poid character) OWNER TO postgres;

--
-- TOC entry 1460 (class 1255 OID 16800)
-- Dependencies: 5396 14
-- Name: base_class_get_company_shortname(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_get_company_shortname(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT COALESCE(fullname, '''') as SHORTNAME FROM MIR.COMPANY WHERE OID = POID) LOOP
      RETURN C.SHORTNAME;
    END LOOP;
    RETURN NULL;
  END;
';


ALTER FUNCTION mir.base_class_get_company_shortname(poid character) OWNER TO postgres;

--
-- TOC entry 1461 (class 1255 OID 16801)
-- Dependencies: 5396 14
-- Name: base_class_get_dictionary_name(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_get_dictionary_name(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT NAME FROM MIR.dictionary WHERE upper(OID) = upper(POID)) LOOP
      RETURN C.NAME;
    END LOOP;
    RETURN NULL;
  END;
';


ALTER FUNCTION mir.base_class_get_dictionary_name(poid character) OWNER TO postgres;

--
-- TOC entry 1462 (class 1255 OID 16802)
-- Dependencies: 5396 14
-- Name: base_class_get_dictionary_synonym(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION base_class_get_dictionary_synonym(psyn character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT OID FROM MIR.DICTIONARY WHERE SYNONYM = PSYN) LOOP
      RETURN C.OID;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.base_class_get_dictionary_synonym(psyn character varying) OWNER TO postgres;

--
-- TOC entry 1469 (class 1255 OID 16803)
-- Dependencies: 5396 14
-- Name: before_after_insert_or_update_lpu(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION before_after_insert_or_update_lpu() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  CityName VARCHAR(100);
  KladrId VARCHAR(36);
  KladrIdAdr VARCHAR(36);
BEGIN
  select max(a.tkladr) into KladrIdAdr from mir.company c
left join  mir.addressex a on a.oid=c.address
 where  c.oid=new.oid;
 WITH RECURSIVE rec ( oid, name, fk_level, fc_prefix, parent, level ) AS 
                          (
                          SELECT k.oid,
                                 k.name,
                                 k.fk_level,
                                 k.fc_prefix,
                                 k.parent,
                                 0 as level
                            FROM MIR.TKLADRSPR k
                           WHERE k.oid=KladrIdAdr
                             
                           union all
                           
                          SELECT k.oid,
                                 k.name,
                                 k.fk_level,
                                 k.fc_prefix,
                                 k.parent,
                                 r.level + 1 as level
                            FROM MIR.TKLADRSPR k
                           inner join rec r
                              on r.parent = k.oid
                          )
                          
 SELECT max(s.OID),
                max(s.NAME) into KladrId,CityName
          FROM rec s
         where trim(s.fc_prefix) in (''г'',''д'',''п'',''c'',''с'',''рп'',''пгт'');


new.city:=CityName;
new.city_kladroid:=KladrId;
return new;
END;
';


ALTER FUNCTION mir.before_after_insert_or_update_lpu() OWNER TO postgres;

--
-- TOC entry 1470 (class 1255 OID 16804)
-- Dependencies: 5396 14
-- Name: benefit_employee_upload_period(integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION benefit_employee_upload_period(ppost_code integer, pemployee_code character varying) RETURNS text
    LANGUAGE plpgsql
    AS '
BEGIN
	RETURN array_to_string(
    			ARRAY(
                	SELECT beu2.benefit_datebegin||'' - '' ||beu2.benefit_dateend 
                    FROM mir.benefit_employee_upload beu2 
                    WHERE beu2.post_code = ppost_code 
                    	AND beu2.employee_code = pemployee_code), '', '');
END;
';


ALTER FUNCTION mir.benefit_employee_upload_period(ppost_code integer, pemployee_code character varying) OWNER TO postgres;

--
-- TOC entry 11701 (class 0 OID 0)
-- Dependencies: 1470
-- Name: FUNCTION benefit_employee_upload_period(ppost_code integer, pemployee_code character varying); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION benefit_employee_upload_period(ppost_code integer, pemployee_code character varying) IS 'Возвращает периоды в виде строки через запятую (дата_начала - дата_конца[, ...] )';


--
-- TOC entry 1471 (class 1255 OID 16805)
-- Dependencies: 5396 14
-- Name: blockuser(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION blockuser(poid character varying, pip character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
   st varchar(50);
BEGIN
  select mir.get_status_people(poid) into st;

if st=''Активен'' then

 insert into mir.lockusers
   (oid,
    startblock,
    plan_blockend,
    state,
    user_block,
    ip,
    oid_people,
    dt)
 values
   (lower(mir.new_uuid()),
    CURRENT_TIMESTAMP,
    CURRENT_TIMESTAMP + cast( mir.settings_GET_PARAMETER(''DEFAULT_DELAY_LOCK_USER'') as interval),
    1,
    CURRENT_USER,--sys_context(''USERENV'', ''SESSION_USER''),
    pip,
    poid,
    CURRENT_TIMESTAMP);

end if ;
END;

';


ALTER FUNCTION mir.blockuser(poid character varying, pip character varying) OWNER TO postgres;

--
-- TOC entry 1472 (class 1255 OID 16806)
-- Dependencies: 5396 14
-- Name: check_post_in_lpu(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION check_post_in_lpu(plpu character, ppost character, poidpeople character) RETURNS integer
    LANGUAGE plpgsql
    AS '
 -- Created By Ognev.
 -- Функция проверяет существует ли человек с такой же должностью 
 -- в этом ЛПУ и у которого не проставлена дата снятия с должности
 -- Если существует возвращает 1.
 -- Если не существует возвращает 0.

declare
    post_t INTEGER; 
    rp_t INTEGER;
 
BEGIN
 post_t := 0;
 rp_t := 0;
 
 SELECT COUNT(1)
   INTO post_t
   FROM mir.post pt where pt.oid = ppost and pt.isuniqueforlpu = 1 ;

 IF post_t > 0 THEN
 	select count(1)  
    INTO rp_t
 	from mir.response_people rp where rp.post = ppost and rp.lpu = plpu 
    												  and rp.oid != poidpeople
    												 and rp.datepostend  is NULL;
 END IF;

 RETURN(rp_t);
END;
';


ALTER FUNCTION mir.check_post_in_lpu(plpu character, ppost character, poidpeople character) OWNER TO postgres;

--
-- TOC entry 1473 (class 1255 OID 16807)
-- Dependencies: 5396 14
-- Name: check_sysuser_right(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION check_sysuser_right(psys_user character, pright character) RETURNS integer
    LANGUAGE plpgsql
    AS '
 -- Created 20090325 by Linnikov.
 -- Функция проверяет наличие права у пользователя.
 -- Если есть запрещающее право возвращается 0.
 -- Если нет запрещающего и разрешающего права возвращается 0.
 -- Если нет запрещающего и есть разрешающее право возвращается 1.

declare
    ptmp INTEGER; 
 
BEGIN
 ptmp := 0;
 
 -- Разрешающие права

 -- Прямое разрешающее на sysuser
 SELECT COUNT(1)
   INTO ptmp
   FROM mir.sysuser s, mir.sysuser_right sr
  WHERE s.oid = sr.sysuser
    AND s.oid = psys_user
    AND sr.right = pright;
 --
 IF ptmp > 0 THEN
  RETURN 1;
 END IF;
 
 -- Прямое разрешающее на sysuser через role
 SELECT COUNT(1)
   INTO ptmp
   FROM mir.sysuser s, mir.sysuser_role sr, mir."role" r, mir.role_right rr
  WHERE s.oid = sr.sysuser
    AND sr.role = r.oid
    AND r.oid = rr.role
    AND s.oid = psys_user
    AND rr.right = pright;
 --
 IF ptmp > 0 THEN
  RETURN 1;
 END IF;
 
 RETURN(ptmp);
END;
';


ALTER FUNCTION mir.check_sysuser_right(psys_user character, pright character) OWNER TO postgres;

--
-- TOC entry 1474 (class 1255 OID 16808)
-- Dependencies: 5396 14
-- Name: cls_mz_phgroup_tr_new_id(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cls_mz_phgroup_tr_new_id() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
_id INTEGER;
BEGIN
	IF NEW.id is NULL THEN
    	SELECT max(id) into _id from mir.cls_mz_phgroup;
        IF _id is NULL THEN
        	_id = 0;
        END IF;
        NEW.id = _id + 1;
    END IF;
    RETURN NEW;
END;
';


ALTER FUNCTION mir.cls_mz_phgroup_tr_new_id() OWNER TO postgres;

--
-- TOC entry 1475 (class 1255 OID 16809)
-- Dependencies: 5396 14
-- Name: clsatc_tr_new_id(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION clsatc_tr_new_id() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
_id INTEGER;
BEGIN
	IF NEW.id is NULL THEN
    	SELECT max(id) into _id from mir.clsatc;
        IF _id is NULL THEN
        	_id = 0;
        END IF;
        NEW.id = _id + 1;
    END IF;
    RETURN NEW;
END;
';


ALTER FUNCTION mir.clsatc_tr_new_id() OWNER TO postgres;

--
-- TOC entry 1476 (class 1255 OID 16810)
-- Dependencies: 5396 14
-- Name: cn_abulatory_tab_district(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_abulatory_tab_district() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает id права на вкладку "Участки"
  Return ''be708cde-99ff-41d8-bda5-677054eb2cb8'';
END;
';


ALTER FUNCTION mir.cn_abulatory_tab_district() OWNER TO postgres;

--
-- TOC entry 1477 (class 1255 OID 16811)
-- Dependencies: 5396 14
-- Name: cn_abulatory_tab_pay_service_contract(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_abulatory_tab_pay_service_contract() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает id права на вкладку "Договора"
  Return ''c13e1a34-634e-4410-9cd5-0e483e927e54'';
END;
';


ALTER FUNCTION mir.cn_abulatory_tab_pay_service_contract() OWNER TO postgres;

--
-- TOC entry 1478 (class 1255 OID 16812)
-- Dependencies: 5396 14
-- Name: cn_abulatory_tab_pay_service_short(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_abulatory_tab_pay_service_short() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает id права на вкладку "Платные услуги"
  Return ''c679c0ca-ec11-4abf-97d2-fd913a006eb2'';
END;
';


ALTER FUNCTION mir.cn_abulatory_tab_pay_service_short() OWNER TO postgres;

--
-- TOC entry 1479 (class 1255 OID 16813)
-- Dependencies: 5396 14
-- Name: cn_abulatory_tab_talons(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_abulatory_tab_talons() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает id права на вкладку "Талоны"
  Return ''0dd1909a-174f-4534-92ae-1e5d041c2b4d'';
END;
';


ALTER FUNCTION mir.cn_abulatory_tab_talons() OWNER TO postgres;

--
-- TOC entry 1480 (class 1255 OID 16814)
-- Dependencies: 5396 14
-- Name: cn_ambtick_status_close(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_ambtick_status_close() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''close'';
END;
';


ALTER FUNCTION mir.cn_ambtick_status_close() OWNER TO postgres;

--
-- TOC entry 1481 (class 1255 OID 16815)
-- Dependencies: 5396 14
-- Name: cn_ambtick_status_neyavka(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_ambtick_status_neyavka() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''failure'';
END;
';


ALTER FUNCTION mir.cn_ambtick_status_neyavka() OWNER TO postgres;

--
-- TOC entry 1369 (class 1255 OID 16816)
-- Dependencies: 5396 14
-- Name: cn_ambtick_status_open(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_ambtick_status_open() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''open'';
END;
';


ALTER FUNCTION mir.cn_ambtick_status_open() OWNER TO postgres;

--
-- TOC entry 1376 (class 1255 OID 16817)
-- Dependencies: 5396 14
-- Name: cn_areal_move_type_in(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_areal_move_type_in() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
    return ''05daa464-bc53-11e2-9267-3f6d8cf2186f'';
END;
';


ALTER FUNCTION mir.cn_areal_move_type_in() OWNER TO postgres;

--
-- TOC entry 1386 (class 1255 OID 16818)
-- Dependencies: 5396 14
-- Name: cn_areal_move_type_out(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_areal_move_type_out() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
    return ''1654aace-bc53-11e2-8589-f340c73fddd1'';
END;
';


ALTER FUNCTION mir.cn_areal_move_type_out() OWNER TO postgres;

--
-- TOC entry 1415 (class 1255 OID 16819)
-- Dependencies: 5396 14
-- Name: cn_benefit_financing_federal(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_benefit_financing_federal() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- категория льготы Федеральная
  Return ''d47e66ca-b6b9-11e1-891b-c3202d863bf1'';
END;
';


ALTER FUNCTION mir.cn_benefit_financing_federal() OWNER TO postgres;

--
-- TOC entry 1446 (class 1255 OID 16820)
-- Dependencies: 5396 14
-- Name: cn_benefit_financing_municip(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_benefit_financing_municip() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- категория льготы Муниципальная
  Return ''dfebe1fe-b6b9-11e1-8c23-7f30cff1c2e3'';
END;
';


ALTER FUNCTION mir.cn_benefit_financing_municip() OWNER TO postgres;

--
-- TOC entry 1447 (class 1255 OID 16821)
-- Dependencies: 5396 14
-- Name: cn_benefit_financing_nosology(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_benefit_financing_nosology() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''cf10b870-cc15-11e1-865b-cb3156d3e741'';--Финансирование для высокозатратных нозологий
END;
';


ALTER FUNCTION mir.cn_benefit_financing_nosology() OWNER TO postgres;

--
-- TOC entry 1463 (class 1255 OID 16822)
-- Dependencies: 5396 14
-- Name: cn_benefit_financing_subject(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_benefit_financing_subject() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- категория льготы Субъекта федерации
  Return ''dba4e8fc-b6b9-11e1-8323-5b2b128ac7a4'';
END;
';


ALTER FUNCTION mir.cn_benefit_financing_subject() OWNER TO postgres;

--
-- TOC entry 1464 (class 1255 OID 16823)
-- Dependencies: 5396 14
-- Name: cn_company_type_bank(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_company_type_bank() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
 return ''FB9CF9AE-F0DC-11E0-98A3-F2F348240111'';
END;
';


ALTER FUNCTION mir.cn_company_type_bank() OWNER TO postgres;

--
-- TOC entry 1465 (class 1255 OID 16824)
-- Dependencies: 5396 14
-- Name: cn_company_type_licence(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_company_type_licence() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''FB9CF9AE-F0DC-11E0-98A3-F2F34824019B'';
END;
';


ALTER FUNCTION mir.cn_company_type_licence() OWNER TO postgres;

--
-- TOC entry 1466 (class 1255 OID 16825)
-- Dependencies: 5396 14
-- Name: cn_company_type_manufacturer(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_company_type_manufacturer() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
 return ''869b5ee0-fdff-11e0-9305-336afa431373'';
END;
';


ALTER FUNCTION mir.cn_company_type_manufacturer() OWNER TO postgres;

--
-- TOC entry 1467 (class 1255 OID 16826)
-- Dependencies: 5396 14
-- Name: cn_company_type_supplier(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_company_type_supplier() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
 return ''8691d960-fdff-11e0-866a-9be4f7a7c444'';
END;
';


ALTER FUNCTION mir.cn_company_type_supplier() OWNER TO postgres;

--
-- TOC entry 1482 (class 1255 OID 16827)
-- Dependencies: 5396 14
-- Name: cn_country_russia(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_country_russia() RETURNS character
    LANGUAGE plpgsql
    AS '
--Функция получает идентификатор страны "Российская Федерация"

DECLARE
  VAL CHAR(36);
BEGIN

 select c.oid into VAL from mir.country c where lower(c.name) ~ lower(''росси'') and c."show" = 1 limit 1;
 
 RETURN VAL;
END;
';


ALTER FUNCTION mir.cn_country_russia() OWNER TO postgres;

--
-- TOC entry 1483 (class 1255 OID 16828)
-- Dependencies: 5396 14
-- Name: cn_diag_detect_first(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_detect_first() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Хроническое заболевание, Впервые в жизни установленное
return ''7c95bac0-165b-11e1-9b0c-730130779947''; --''7cbbd0c0-165b-11e1-aac0-9fd0c5e16b6b'';
END;
';


ALTER FUNCTION mir.cn_diag_detect_first() OWNER TO postgres;

--
-- TOC entry 1484 (class 1255 OID 16829)
-- Dependencies: 5396 14
-- Name: cn_diag_detect_first_ever(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_detect_first_ever() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Хроническое заболевание, выявленное Впервые
return ''8543A8F8-0F8A-11E1-A37C-1F884824019B'';
END;
';


ALTER FUNCTION mir.cn_diag_detect_first_ever() OWNER TO postgres;

--
-- TOC entry 1485 (class 1255 OID 16830)
-- Dependencies: 5396 14
-- Name: cn_diag_detect_old(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_detect_old() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Хроническое заболевание, известное ранее
return ''7cbbd0c0-165b-11e1-ba02-6bbd64f3c874'';
END;
';


ALTER FUNCTION mir.cn_diag_detect_old() OWNER TO postgres;

--
-- TOC entry 1486 (class 1255 OID 16831)
-- Dependencies: 5396 14
-- Name: cn_diag_detect_ostr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_detect_ostr() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Острое заболевание
return ''7c95bac0-165b-11e1-9b0c-730130779947'';
END;
';


ALTER FUNCTION mir.cn_diag_detect_ostr() OWNER TO postgres;

--
-- TOC entry 1487 (class 1255 OID 16832)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_diff(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_diff() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Дифференциальный''
  Return ''8aeb0880-1671-11e1-87ab-fb263f851c4a'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_diff() OWNER TO postgres;

--
-- TOC entry 1488 (class 1255 OID 16833)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_konkur(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_konkur() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Конкурентный''
  Return ''8ae3e460-1671-11e1-a7cc-b71d6ee86be9'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_konkur() OWNER TO postgres;

--
-- TOC entry 1489 (class 1255 OID 16834)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_main(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_main() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Основной''
  Return ''8ae18300-1671-11e1-82be-733ea23194c4'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_main() OWNER TO postgres;

--
-- TOC entry 1490 (class 1255 OID 16835)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_oslogn(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_oslogn() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Осложнение основного''
  Return ''8ae645c0-1671-11e1-856f-23dc71fadfad'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_oslogn() OWNER TO postgres;

--
-- TOC entry 1491 (class 1255 OID 16836)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_prior(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_prior() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Предварительный''
  Return ''8aed69e0-1671-11e1-8d07-abe3b31415ee'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_prior() OWNER TO postgres;

--
-- TOC entry 1492 (class 1255 OID 16837)
-- Dependencies: 5396 14
-- Name: cn_diag_kind_soput(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_kind_soput() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- возвращает вид диагноза = ''Сопутствующий''
  Return ''8ae8a720-1671-11e1-b4cd-87f8732b51f2'';
END;
';


ALTER FUNCTION mir.cn_diag_kind_soput() OWNER TO postgres;

--
-- TOC entry 1493 (class 1255 OID 16838)
-- Dependencies: 5396 14
-- Name: cn_diag_type_associated(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_associated() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return mir.cn_diag_kind_soput();
END;
';


ALTER FUNCTION mir.cn_diag_type_associated() OWNER TO postgres;

--
-- TOC entry 1494 (class 1255 OID 16839)
-- Dependencies: 5396 14
-- Name: cn_diag_type_clinic(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_clinic() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
Return ''BB70DEC6-0F8C-11E1-B032-B58A4824019B'';
END;
';


ALTER FUNCTION mir.cn_diag_type_clinic() OWNER TO postgres;

--
-- TOC entry 1495 (class 1255 OID 16840)
-- Dependencies: 5396 14
-- Name: cn_diag_type_deliver(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_deliver() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
	--Диагноз направившего учреждения.
    
	return ''BB70DEC6-0F8C-11E1-B032-B58A48240191'';
END;
';


ALTER FUNCTION mir.cn_diag_type_deliver() OWNER TO postgres;

--
-- TOC entry 1496 (class 1255 OID 16841)
-- Dependencies: 5396 14
-- Name: cn_diag_type_final(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_final() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
	-- возвращает тип диагноза = ''Заключительный''
	return ''BB70DEC6-0F8C-11E1-B032-B58A48240A92'';
END;
';


ALTER FUNCTION mir.cn_diag_type_final() OWNER TO postgres;

--
-- TOC entry 1497 (class 1255 OID 16842)
-- Dependencies: 5396 14
-- Name: cn_diag_type_main(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_main() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return mir.cn_diag_kind_main();
END;
';


ALTER FUNCTION mir.cn_diag_type_main() OWNER TO postgres;

--
-- TOC entry 1498 (class 1255 OID 16843)
-- Dependencies: 5396 14
-- Name: cn_diag_type_patholog(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_patholog() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
	--Клинико-патологоанатомический тип диагноза.
    
	return ''BB70DEC6-0F8C-11E1-B032-B58A48240A95'';
END;
';


ALTER FUNCTION mir.cn_diag_type_patholog() OWNER TO postgres;

--
-- TOC entry 1499 (class 1255 OID 16844)
-- Dependencies: 5396 14
-- Name: cn_diag_type_preliminary(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_preliminary() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''BB70DEC6-0F8C-11E1-B032-B58A48240A94'';
END;
';


ALTER FUNCTION mir.cn_diag_type_preliminary() OWNER TO postgres;

--
-- TOC entry 1500 (class 1255 OID 16845)
-- Dependencies: 5396 14
-- Name: cn_diag_type_sicklist(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_sicklist() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''BB70DEC6-0F8C-11E1-B032-B58A48240A96'';
END;
';


ALTER FUNCTION mir.cn_diag_type_sicklist() OWNER TO postgres;

--
-- TOC entry 1501 (class 1255 OID 16846)
-- Dependencies: 5396 14
-- Name: cn_diag_type_supply(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_diag_type_supply() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''BB70DEC6-0F8C-11E1-B032-B58A48240A93'';
END;
';


ALTER FUNCTION mir.cn_diag_type_supply() OWNER TO postgres;

--
-- TOC entry 1502 (class 1255 OID 16847)
-- Dependencies: 5396 14
-- Name: cn_dispstate_sost(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_dispstate_sost() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Диспансерный учет, Состоит
return ''5fa024e0-166b-11e1-b22e-57ba51af6cdf'';
END;
';


ALTER FUNCTION mir.cn_dispstate_sost() OWNER TO postgres;

--
-- TOC entry 1503 (class 1255 OID 16848)
-- Dependencies: 5396 14
-- Name: cn_dispstate_taken(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_dispstate_taken() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Диспансерный учет, Поставлен
return ''5fbf16c0-166b-11e1-bc5b-73877255a82c'';
END;
';


ALTER FUNCTION mir.cn_dispstate_taken() OWNER TO postgres;

--
-- TOC entry 1504 (class 1255 OID 16849)
-- Dependencies: 5396 14
-- Name: cn_get_zayvka_status_confirm(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_get_zayvka_status_confirm() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''2cd157f4-beb9-11e1-907d-b3bb8fd42025'';
END;
';


ALTER FUNCTION mir.cn_get_zayvka_status_confirm() OWNER TO postgres;

--
-- TOC entry 1505 (class 1255 OID 16850)
-- Dependencies: 5396 14
-- Name: cn_get_zayvka_status_not_processed(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_get_zayvka_status_not_processed() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''f740b1be-4674-11e1-82a2-37d1c1d6436e'';
END;
';


ALTER FUNCTION mir.cn_get_zayvka_status_not_processed() OWNER TO postgres;

--
-- TOC entry 1506 (class 1255 OID 16851)
-- Dependencies: 5396 14
-- Name: cn_get_zayvka_status_rejected(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_get_zayvka_status_rejected() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''2cd61ab4-beb9-11e1-ab10-5f71ef311ec2'';
END;
';


ALTER FUNCTION mir.cn_get_zayvka_status_rejected() OWNER TO postgres;

--
-- TOC entry 1507 (class 1255 OID 16852)
-- Dependencies: 5396 14
-- Name: cn_get_zayvka_status_wait(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_get_zayvka_status_wait() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''2cd87c14-beb9-11e1-bb97-9f6a5a2d0d94'';
END;
';


ALTER FUNCTION mir.cn_get_zayvka_status_wait() OWNER TO postgres;

--
-- TOC entry 1508 (class 1255 OID 16853)
-- Dependencies: 5396 14
-- Name: cn_ib_sections_attachments(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_ib_sections_attachments() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Раздел мед. карты "Прикрепленные файлы"
return ''fd54a2fb-d8f1-4bc0-a348-8d8b3c8c1369'';
END;
';


ALTER FUNCTION mir.cn_ib_sections_attachments() OWNER TO postgres;

--
-- TOC entry 1509 (class 1255 OID 16854)
-- Dependencies: 5396 14
-- Name: cn_ib_sections_mtl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_ib_sections_mtl() RETURNS character
    LANGUAGE plpgsql
    AS '
      BEGIN
        -- раздел ИБ Медико-технологический лист
        Return ''1a87d278-511a-45e9-8c53-efdbfe9776eb'';
      END;
      ';


ALTER FUNCTION mir.cn_ib_sections_mtl() OWNER TO postgres;

--
-- TOC entry 1396 (class 1255 OID 16855)
-- Dependencies: 5396 14
-- Name: cn_infection_beshenstvo(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_beshenstvo() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-8360-5f182a09963c'';
END;
';


ALTER FUNCTION mir.cn_infection_beshenstvo() OWNER TO postgres;

--
-- TOC entry 1448 (class 1255 OID 16856)
-- Dependencies: 5396 14
-- Name: cn_infection_bruceles(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_bruceles() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-8706-f3ce21dbc2c6'';
END;
';


ALTER FUNCTION mir.cn_infection_bruceles() OWNER TO postgres;

--
-- TOC entry 1468 (class 1255 OID 16857)
-- Dependencies: 5396 14
-- Name: cn_infection_chuma(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_chuma() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-9cd2-77d04626b8f5'';
END;
';


ALTER FUNCTION mir.cn_infection_chuma() OWNER TO postgres;

--
-- TOC entry 1510 (class 1255 OID 16858)
-- Dependencies: 5396 14
-- Name: cn_infection_cocklush(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_cocklush() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-886c-1b349f2f2c4d'';
END;
';


ALTER FUNCTION mir.cn_infection_cocklush() OWNER TO postgres;

--
-- TOC entry 1511 (class 1255 OID 16859)
-- Dependencies: 5396 14
-- Name: cn_infection_difter(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_difter() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'';
END;
';


ALTER FUNCTION mir.cn_infection_difter() OWNER TO postgres;

--
-- TOC entry 1512 (class 1255 OID 16860)
-- Dependencies: 5396 14
-- Name: cn_infection_encefalit(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_encefalit() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-b753-b3b11992e1bd'';
END;
';


ALTER FUNCTION mir.cn_infection_encefalit() OWNER TO postgres;

--
-- TOC entry 1513 (class 1255 OID 16861)
-- Dependencies: 5396 14
-- Name: cn_infection_gepatita(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_gepatita() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-94c4-97efce2d7801'';
END;
';


ALTER FUNCTION mir.cn_infection_gepatita() OWNER TO postgres;

--
-- TOC entry 1514 (class 1255 OID 16862)
-- Dependencies: 5396 14
-- Name: cn_infection_gepatitb(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_gepatitb() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-9f42-f3b844cea0c9'';
END;
';


ALTER FUNCTION mir.cn_infection_gepatitb() OWNER TO postgres;

--
-- TOC entry 1515 (class 1255 OID 16863)
-- Dependencies: 5396 14
-- Name: cn_infection_gripp(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_gripp() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-9dbd-e7f267ae0d02'';
END;
';


ALTER FUNCTION mir.cn_infection_gripp() OWNER TO postgres;

--
-- TOC entry 1516 (class 1255 OID 16864)
-- Dependencies: 5396 14
-- Name: cn_infection_kor(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_kor() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-aec9-efd64af79fc8'';
END;
';


ALTER FUNCTION mir.cn_infection_kor() OWNER TO postgres;

--
-- TOC entry 1517 (class 1255 OID 16865)
-- Dependencies: 5396 14
-- Name: cn_infection_krasn(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_krasn() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-93d1-d374975d2dc3'';
END;
';


ALTER FUNCTION mir.cn_infection_krasn() OWNER TO postgres;

--
-- TOC entry 1518 (class 1255 OID 16866)
-- Dependencies: 5396 14
-- Name: cn_infection_meningocock(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_meningocock() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-9793-dffe57e2a3bc'';
END;
';


ALTER FUNCTION mir.cn_infection_meningocock() OWNER TO postgres;

--
-- TOC entry 1519 (class 1255 OID 16867)
-- Dependencies: 5396 14
-- Name: cn_infection_parotit(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_parotit() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-b78f-c31fdc8dd261'';
END;
';


ALTER FUNCTION mir.cn_infection_parotit() OWNER TO postgres;

--
-- TOC entry 1520 (class 1255 OID 16868)
-- Dependencies: 5396 14
-- Name: cn_infection_polio(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_polio() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'';
END;
';


ALTER FUNCTION mir.cn_infection_polio() OWNER TO postgres;

--
-- TOC entry 1521 (class 1255 OID 16869)
-- Dependencies: 5396 14
-- Name: cn_infection_siberyazv(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_siberyazv() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-816e-c7afc5f90520'';
END;
';


ALTER FUNCTION mir.cn_infection_siberyazv() OWNER TO postgres;

--
-- TOC entry 1522 (class 1255 OID 16870)
-- Dependencies: 5396 14
-- Name: cn_infection_stolb(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_stolb() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'';
END;
';


ALTER FUNCTION mir.cn_infection_stolb() OWNER TO postgres;

--
-- TOC entry 1523 (class 1255 OID 16871)
-- Dependencies: 5396 14
-- Name: cn_infection_tif(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_tif() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-8319-fbc5f25c40f6'';
END;
';


ALTER FUNCTION mir.cn_infection_tif() OWNER TO postgres;

--
-- TOC entry 1524 (class 1255 OID 16872)
-- Dependencies: 5396 14
-- Name: cn_infection_tuber(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_tuber() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbdb76e0-1b63-11e1-b7da-831b009c2681'';
END;
';


ALTER FUNCTION mir.cn_infection_tuber() OWNER TO postgres;

--
-- TOC entry 1525 (class 1255 OID 16873)
-- Dependencies: 5396 14
-- Name: cn_infection_tularem(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_tularem() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-a318-372c98bcee46'';
END;
';


ALTER FUNCTION mir.cn_infection_tularem() OWNER TO postgres;

--
-- TOC entry 1526 (class 1255 OID 16874)
-- Dependencies: 5396 14
-- Name: cn_infection_yellowlih(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_infection_yellowlih() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
BEGIN
  Return ''bbd6b420-1b63-11e1-ad95-b7c9a7151c3c'';
END;
';


ALTER FUNCTION mir.cn_infection_yellowlih() OWNER TO postgres;

--
-- TOC entry 1527 (class 1255 OID 16875)
-- Dependencies: 5396 14
-- Name: cn_invalidgroup_1(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_invalidgroup_1() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- группа инвалидности 1
  Return ''f2885b60-15da-11e1-8de1-db67c345a328'';
END;
';


ALTER FUNCTION mir.cn_invalidgroup_1() OWNER TO postgres;

--
-- TOC entry 1528 (class 1255 OID 16876)
-- Dependencies: 5396 14
-- Name: cn_invalidgroup_2(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_invalidgroup_2() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- группа инвалидности 2
  Return ''aa885b60-15da-11e1-8de1-db67c345a328'';
END;
';


ALTER FUNCTION mir.cn_invalidgroup_2() OWNER TO postgres;

--
-- TOC entry 1529 (class 1255 OID 16877)
-- Dependencies: 5396 14
-- Name: cn_invalidgroup_3(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_invalidgroup_3() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- группа инвалидности 3
  Return ''ba885b60-15da-11e1-8de1-db67c345a328'';
END;
';


ALTER FUNCTION mir.cn_invalidgroup_3() OWNER TO postgres;

--
-- TOC entry 1530 (class 1255 OID 16878)
-- Dependencies: 5396 14
-- Name: cn_invalidgroup_d(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_invalidgroup_d() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- группа инвалидности Д
  Return ''9624dd88-9fd9-11e1-9c52-3739c728472c'';
END;
';


ALTER FUNCTION mir.cn_invalidgroup_d() OWNER TO postgres;

--
-- TOC entry 1531 (class 1255 OID 16879)
-- Dependencies: 5396 14
-- Name: cn_isnapronly_plan(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_isnapronly_plan() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''371ebf00-6fde-424e-b29c-710a9e28a7ee'';
END;
';


ALTER FUNCTION mir.cn_isnapronly_plan() OWNER TO postgres;

--
-- TOC entry 1532 (class 1255 OID 16880)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_ambtalon(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_ambtalon() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''dc17ec20-1057-11e1-be50-0800200c9a66'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_ambtalon() OWNER TO postgres;

--
-- TOC entry 1533 (class 1255 OID 16881)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_childrenevolution(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_childrenevolution() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
	return ''e756efe4-6c2a-11e1-bef8-f744d0aba97c'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_childrenevolution() OWNER TO postgres;

--
-- TOC entry 1534 (class 1255 OID 16882)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_dispansary(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_dispansary() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''c3130120-1056-11e1-be50-0800200c9a66'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_dispansary() OWNER TO postgres;

--
-- TOC entry 1535 (class 1255 OID 16883)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_ib_ds(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_ib_ds() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''c38db896-f8b0-11e1-813a-4b9b95184264'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_ib_ds() OWNER TO postgres;

--
-- TOC entry 1536 (class 1255 OID 16884)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_obr_to_stac(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_obr_to_stac() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''88f67c00-f8af-11e1-a5f2-27dedb1e0610'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_obr_to_stac() OWNER TO postgres;

--
-- TOC entry 1537 (class 1255 OID 16885)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_pregnantcard(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_pregnantcard() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''d3130120-ad23-11e1-be50-0800200c9a67'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_pregnantcard() OWNER TO postgres;

--
-- TOC entry 1538 (class 1255 OID 16886)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_stac_child_ill(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_stac_child_ill() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''d8e5aedc-d4f0-4614-b7bf-cd86b03a0d3a'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_stac_child_ill() OWNER TO postgres;

--
-- TOC entry 1539 (class 1255 OID 16887)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_stac_ib_baby(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_stac_ib_baby() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''50e942b6-71c7-11e2-8351-83b9d3639625'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_stac_ib_baby() OWNER TO postgres;

--
-- TOC entry 1540 (class 1255 OID 16888)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_stac_ib_pregn(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_stac_ib_pregn() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_stac_ib_pregn() OWNER TO postgres;

--
-- TOC entry 1541 (class 1255 OID 16889)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_stac_ib_stop_pregn(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_stac_ib_stop_pregn() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''71b21362-8b15-11e2-8440-d36b33ae7b67'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_stac_ib_stop_pregn() OWNER TO postgres;

--
-- TOC entry 1542 (class 1255 OID 16890)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_stacionar(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_stacionar() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''2a641a68-cf05-11e1-ae25-c3c470ade501'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_stacionar() OWNER TO postgres;

--
-- TOC entry 1543 (class 1255 OID 16891)
-- Dependencies: 5396 14
-- Name: cn_mdoc_type_vrach_zakl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_mdoc_type_vrach_zakl() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''d505f440-f8af-11e1-aa61-7fb57fe04997'';
END;
';


ALTER FUNCTION mir.cn_mdoc_type_vrach_zakl() OWNER TO postgres;

--
-- TOC entry 1544 (class 1255 OID 16892)
-- Dependencies: 5396 14
-- Name: cn_med_usl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_med_usl() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
     -- ветка мед. услуги (пока поставил id Процедуры и манипуляции)
	return ''9ab84a00-2328-11e1-8575-afce54318779'';
END;
';


ALTER FUNCTION mir.cn_med_usl() OWNER TO postgres;

--
-- TOC entry 1545 (class 1255 OID 16893)
-- Dependencies: 5396 14
-- Name: cn_medicalcondition_ambul(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_medicalcondition_ambul() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Амбулаторная медицинская помощь''
  Return ''3'';
END;
';


ALTER FUNCTION mir.cn_medicalcondition_ambul() OWNER TO postgres;

--
-- TOC entry 1546 (class 1255 OID 16894)
-- Dependencies: 5396 14
-- Name: cn_medicalcondition_emergency(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_medicalcondition_emergency() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Скорая помощь''
  Return ''4'';
END;
';


ALTER FUNCTION mir.cn_medicalcondition_emergency() OWNER TO postgres;

--
-- TOC entry 1547 (class 1255 OID 16895)
-- Dependencies: 5396 14
-- Name: cn_medicalcondition_stac(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_medicalcondition_stac() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Стационар''
  Return ''1'';
END;
';


ALTER FUNCTION mir.cn_medicalcondition_stac() OWNER TO postgres;

--
-- TOC entry 1548 (class 1255 OID 16896)
-- Dependencies: 5396 14
-- Name: cn_medicalcondition_stac_day(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_medicalcondition_stac_day() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Дневной стационар''
  Return ''2'';
END;
';


ALTER FUNCTION mir.cn_medicalcondition_stac_day() OWNER TO postgres;

--
-- TOC entry 1549 (class 1255 OID 16897)
-- Dependencies: 5396 14
-- Name: cn_otdel_type_additional_pay(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_otdel_type_additional_pay() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
 return ''09d394dd-b713-48e3-8178-66fe6a9141cb'';
END;
';


ALTER FUNCTION mir.cn_otdel_type_additional_pay() OWNER TO postgres;

--
-- TOC entry 1550 (class 1255 OID 16898)
-- Dependencies: 5396 14
-- Name: cn_paytype_budget(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_budget() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''budget'';
END;
';


ALTER FUNCTION mir.cn_paytype_budget() OWNER TO postgres;

--
-- TOC entry 1551 (class 1255 OID 16899)
-- Dependencies: 5396 14
-- Name: cn_paytype_commerc(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_commerc() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''cash'';
END;
';


ALTER FUNCTION mir.cn_paytype_commerc() OWNER TO postgres;

--
-- TOC entry 1552 (class 1255 OID 16900)
-- Dependencies: 5396 14
-- Name: cn_paytype_contract(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_contract() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''contract'';
END;
';


ALTER FUNCTION mir.cn_paytype_contract() OWNER TO postgres;

--
-- TOC entry 1553 (class 1255 OID 16901)
-- Dependencies: 5396 14
-- Name: cn_paytype_dms(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_dms() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''dms'';
END;
';


ALTER FUNCTION mir.cn_paytype_dms() OWNER TO postgres;

--
-- TOC entry 1554 (class 1255 OID 16902)
-- Dependencies: 5396 14
-- Name: cn_paytype_oms(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_oms() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''oms'';
END;
';


ALTER FUNCTION mir.cn_paytype_oms() OWNER TO postgres;

--
-- TOC entry 1555 (class 1255 OID 16903)
-- Dependencies: 5396 14
-- Name: cn_paytype_omstype_newoms(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_paytype_omstype_newoms() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''2'';
END;
';


ALTER FUNCTION mir.cn_paytype_omstype_newoms() OWNER TO postgres;

--
-- TOC entry 1556 (class 1255 OID 16904)
-- Dependencies: 5396 14
-- Name: cn_people_relation_status_parent(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_people_relation_status_parent() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- Статус представителя пациента = ''01Родитель''
  Return ''c30135e8-d663-11e1-9be2-27c3eb56d5e3'';
END;
';


ALTER FUNCTION mir.cn_people_relation_status_parent() OWNER TO postgres;

--
-- TOC entry 1557 (class 1255 OID 16905)
-- Dependencies: 5396 14
-- Name: cn_presc_state_absence(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_absence() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''absence'';
END;
';


ALTER FUNCTION mir.cn_presc_state_absence() OWNER TO postgres;

--
-- TOC entry 1558 (class 1255 OID 16906)
-- Dependencies: 5396 14
-- Name: cn_presc_state_done(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_done() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
    -- возвращает статус назначения = ''Выполнено''
	return ''done'';
END;
';


ALTER FUNCTION mir.cn_presc_state_done() OWNER TO postgres;

--
-- TOC entry 1559 (class 1255 OID 16907)
-- Dependencies: 5396 14
-- Name: cn_presc_state_done_lab(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_done_lab() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''done_lab'';
END;
';


ALTER FUNCTION mir.cn_presc_state_done_lab() OWNER TO postgres;

--
-- TOC entry 1560 (class 1255 OID 16908)
-- Dependencies: 5396 14
-- Name: cn_presc_state_not_done(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_not_done() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
return ''not_done'';
END;
';


ALTER FUNCTION mir.cn_presc_state_not_done() OWNER TO postgres;

--
-- TOC entry 1561 (class 1255 OID 16909)
-- Dependencies: 5396 14
-- Name: cn_presc_state_progress(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_progress() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''progress'';
END;
';


ALTER FUNCTION mir.cn_presc_state_progress() OWNER TO postgres;

--
-- TOC entry 1562 (class 1255 OID 16910)
-- Dependencies: 5396 14
-- Name: cn_presc_state_sign(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presc_state_sign() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''sign'';
END;
';


ALTER FUNCTION mir.cn_presc_state_sign() OWNER TO postgres;

--
-- TOC entry 1563 (class 1255 OID 16911)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_consult(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_consult() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''ec8c388e-ca13-4cd2-a7ef-86c377658123'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_consult() OWNER TO postgres;

--
-- TOC entry 1564 (class 1255 OID 16912)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_diary(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_diary() RETURNS character
    LANGUAGE plpgsql
    AS '
    BEGIN
      -- ветка назначений - Дневники
      Return ''06cc8305-d6d3-4ee3-920e-937501843292'';
    END;
    ';


ALTER FUNCTION mir.cn_presctypefolder_diary() OWNER TO postgres;

--
-- TOC entry 1565 (class 1255 OID 16913)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_epicris(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_epicris() RETURNS character
    LANGUAGE plpgsql
    AS '
    BEGIN
      -- ветка назначений - Эпикризы
      Return ''159d82bc-e3a8-41a5-aa37-cbc99fba5526'';
    END;
    ';


ALTER FUNCTION mir.cn_presctypefolder_epicris() OWNER TO postgres;

--
-- TOC entry 1566 (class 1255 OID 16914)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_instrissl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_instrissl() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Инструментальные исследования
  Return ''6ac1cf80-2328-11e1-9ccb-37cdd850d0f3'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_instrissl() OWNER TO postgres;

--
-- TOC entry 1567 (class 1255 OID 16915)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_konsult(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_konsult() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Консультативный прием
  Return ''ec8c388e-ca13-4cd2-a7ef-86c377658123'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_konsult() OWNER TO postgres;

--
-- TOC entry 1568 (class 1255 OID 16916)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_labissl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_labissl() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Лабораторные исследования
  Return ''6ab84a00-2328-11e1-8575-afce54318773'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_labissl() OWNER TO postgres;

--
-- TOC entry 1569 (class 1255 OID 16917)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_operlech(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_operlech() RETURNS character
    LANGUAGE plpgsql
    AS '
    BEGIN
      -- ветка назначений - Оперативное лечение
      Return ''d3569607-88aa-4b59-9c1c-38d06b1706c8'';
    END;
    ';


ALTER FUNCTION mir.cn_presctypefolder_operlech() OWNER TO postgres;

--
-- TOC entry 1570 (class 1255 OID 16918)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_prepareanalis(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_prepareanalis() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Подготовка к анализам,инструментальным исследованиям
  Return ''447acb2f-0c0e-4615-a12c-efd11909f12a'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_prepareanalis() OWNER TO postgres;

--
-- TOC entry 1571 (class 1255 OID 16919)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_proc(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_proc() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Процедуры и манипуляции
  Return ''9ab84a00-2328-11e1-8575-afce54318779'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_proc() OWNER TO postgres;

--
-- TOC entry 1572 (class 1255 OID 16920)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_xray(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_xray() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Рентгенология
  Return ''6ac1cf80-2328-11e1-9844-ef4c2bef8aab'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_xray() OWNER TO postgres;

--
-- TOC entry 1573 (class 1255 OID 16921)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_xray_fg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_xray_fg() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Рентгенология - Флюорография
  Return ''6ac430e0-2328-11e1-9218-9b4e5bcb5d3c'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_xray_fg() OWNER TO postgres;

--
-- TOC entry 1575 (class 1255 OID 16922)
-- Dependencies: 5396 14
-- Name: cn_presctypefolder_xray_mrt(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_presctypefolder_xray_mrt() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ветка назначений - Рентгенология/МРТ
  Return ''6ac430e0-2328-11e1-afc3-5b2f3e562349'';
END;
';


ALTER FUNCTION mir.cn_presctypefolder_xray_mrt() OWNER TO postgres;

--
-- TOC entry 1576 (class 1255 OID 16923)
-- Dependencies: 5396 14
-- Name: cn_recipe_lgot_type_custom(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_lgot_type_custom() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта по льготе Обычный
  Return ''283eb7e0-1cca-11e1-bf36-e775e234c28a'';
END;
';


ALTER FUNCTION mir.cn_recipe_lgot_type_custom() OWNER TO postgres;

--
-- TOC entry 1577 (class 1255 OID 16924)
-- Dependencies: 5396 14
-- Name: cn_recipe_lgot_type_federal(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_lgot_type_federal() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта по льготе Федеральный
  Return ''283eb7e0-1cca-11e1-af3c-0fde965efd96'';
END;
';


ALTER FUNCTION mir.cn_recipe_lgot_type_federal() OWNER TO postgres;

--
-- TOC entry 1578 (class 1255 OID 16925)
-- Dependencies: 5396 14
-- Name: cn_recipe_lgot_type_nozology(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_lgot_type_nozology() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта по льготе 7 нозологий
  Return ''ef96bd77-7bf3-43ee-85f9-d14658832aa3'';
END;
';


ALTER FUNCTION mir.cn_recipe_lgot_type_nozology() OWNER TO postgres;

--
-- TOC entry 1579 (class 1255 OID 16926)
-- Dependencies: 5396 14
-- Name: cn_recipe_lgot_type_regional(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_lgot_type_regional() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта по льготе Региональный
  Return ''283eb7e0-1cca-11e1-9778-c7d0cae0e12c'';
END;
';


ALTER FUNCTION mir.cn_recipe_lgot_type_regional() OWNER TO postgres;

--
-- TOC entry 1580 (class 1255 OID 16927)
-- Dependencies: 5396 14
-- Name: cn_recipe_prescription_type_benefit(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_prescription_type_benefit() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN ''25817249-b495-4b1e-9793-5c7d59af00b0'';
END;
';


ALTER FUNCTION mir.cn_recipe_prescription_type_benefit() OWNER TO postgres;

--
-- TOC entry 1581 (class 1255 OID 16928)
-- Dependencies: 5396 14
-- Name: cn_recipe_prescription_type_custom(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_prescription_type_custom() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
RETURN ''9a3ce2af-7f68-4101-9654-a3a6f97d1706'';
END;
';


ALTER FUNCTION mir.cn_recipe_prescription_type_custom() OWNER TO postgres;

--
-- TOC entry 1582 (class 1255 OID 16929)
-- Dependencies: 5396 14
-- Name: cn_recipe_prescription_type_norecipe(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_prescription_type_norecipe() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
 RETURN ''8823ec10-c631-4df9-91b6-be9380450b68'';
END;
';


ALTER FUNCTION mir.cn_recipe_prescription_type_norecipe() OWNER TO postgres;

--
-- TOC entry 1583 (class 1255 OID 16930)
-- Dependencies: 5396 14
-- Name: cn_recipe_source_federal(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_source_federal() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- источник финансирования Федеральный
  Return ''d47e66ca-b6b9-11e1-891b-c3202d863bf1''; --''771aa540-1cca-11e1-b271-a3e4ec2fd168'';
END;
';


ALTER FUNCTION mir.cn_recipe_source_federal() OWNER TO postgres;

--
-- TOC entry 1584 (class 1255 OID 16931)
-- Dependencies: 5396 14
-- Name: cn_recipe_source_municipal(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_source_municipal() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- источник финансирования Муниципальный
  Return ''dfebe1fe-b6b9-11e1-8c23-7f30cff1c2e3'';--''771aa540-1cca-11e1-ae3f-57e4f3058c19'';
END;
';


ALTER FUNCTION mir.cn_recipe_source_municipal() OWNER TO postgres;

--
-- TOC entry 1585 (class 1255 OID 16932)
-- Dependencies: 5396 14
-- Name: cn_recipe_source_subjectrf(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_source_subjectrf() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- источник финансирования Субъект РФ
  Return ''dba4e8fc-b6b9-11e1-8323-5b2b128ac7a4'';--''771aa540-1cca-11e1-9e28-8bb84c44f0ba'';
END;
';


ALTER FUNCTION mir.cn_recipe_source_subjectrf() OWNER TO postgres;

--
-- TOC entry 1586 (class 1255 OID 16933)
-- Dependencies: 5396 14
-- Name: cn_recipe_status_open(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_status_open() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- статус рецепта Открыт
  Return ''0b0f1b66-a00e-11e1-96a6-4339287321dd'';
END;
';


ALTER FUNCTION mir.cn_recipe_status_open() OWNER TO postgres;

--
-- TOC entry 1587 (class 1255 OID 16934)
-- Dependencies: 5396 14
-- Name: cn_recipe_status_realized(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_status_realized() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- статус рецепта Реализован
  Return ''086b15da-0d07-4e25-b087-3b3536fddc5e'';
END;
';


ALTER FUNCTION mir.cn_recipe_status_realized() OWNER TO postgres;

--
-- TOC entry 1588 (class 1255 OID 16935)
-- Dependencies: 5396 14
-- Name: cn_recipe_status_signed(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_status_signed() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- статус рецепта Открыт
  Return ''0b117cc6-a00e-11e1-be1d-e311deddb1b7'';
END;
';


ALTER FUNCTION mir.cn_recipe_status_signed() OWNER TO postgres;

--
-- TOC entry 1589 (class 1255 OID 16936)
-- Dependencies: 5396 14
-- Name: cn_recipe_type_child(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_type_child() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта детский
  Return ''70288220-1cca-11e1-b67a-fb9f4c59e777'';
END;
';


ALTER FUNCTION mir.cn_recipe_type_child() OWNER TO postgres;

--
-- TOC entry 1590 (class 1255 OID 16937)
-- Dependencies: 5396 14
-- Name: cn_recipe_type_old(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_recipe_type_old() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- тип рецепта взрослый
  Return ''70288220-1cca-11e1-b5dc-4fb2327e6c62'';
END;
';


ALTER FUNCTION mir.cn_recipe_type_old() OWNER TO postgres;

--
-- TOC entry 1591 (class 1255 OID 16938)
-- Dependencies: 5396 14
-- Name: cn_role_main_administrator(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_role_main_administrator() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''05842770-3977-4aea-a48b-00421c258ce1'';
END;
';


ALTER FUNCTION mir.cn_role_main_administrator() OWNER TO postgres;

--
-- TOC entry 1592 (class 1255 OID 16939)
-- Dependencies: 5396 14
-- Name: cn_service_group_bed_profile(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_service_group_bed_profile() RETURNS character
    LANGUAGE plpgsql
    AS '
begin
  -- синоним группы для bed_profile
  return ''bed_profile'';
  end;
';


ALTER FUNCTION mir.cn_service_group_bed_profile() OWNER TO postgres;

--
-- TOC entry 11702 (class 0 OID 0)
-- Dependencies: 1592
-- Name: FUNCTION cn_service_group_bed_profile(); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION cn_service_group_bed_profile() IS 'синоним группы для bed_profile';


--
-- TOC entry 1593 (class 1255 OID 16940)
-- Dependencies: 5396 14
-- Name: cn_service_group_mkb10(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_service_group_mkb10() RETURNS character
    LANGUAGE plpgsql
    AS '
begin
  -- синоним группы для mkb10
  return ''mkb10'';
  end;
';


ALTER FUNCTION mir.cn_service_group_mkb10() OWNER TO postgres;

--
-- TOC entry 11703 (class 0 OID 0)
-- Dependencies: 1593
-- Name: FUNCTION cn_service_group_mkb10(); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION cn_service_group_mkb10() IS 'синоним группы для mkb10';


--
-- TOC entry 1594 (class 1255 OID 16941)
-- Dependencies: 5396 14
-- Name: cn_service_price_category_child(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_service_price_category_child() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''child'';
END;
';


ALTER FUNCTION mir.cn_service_price_category_child() OWNER TO postgres;

--
-- TOC entry 1595 (class 1255 OID 16942)
-- Dependencies: 5396 14
-- Name: cn_service_price_category_grown(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_service_price_category_grown() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''grown'';
END;
';


ALTER FUNCTION mir.cn_service_price_category_grown() OWNER TO postgres;

--
-- TOC entry 1596 (class 1255 OID 16943)
-- Dependencies: 5396 14
-- Name: cn_servplace_home(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_servplace_home() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  --Место обслуживания На дому
  Return ''home'';
END;
';


ALTER FUNCTION mir.cn_servplace_home() OWNER TO postgres;

--
-- TOC entry 1597 (class 1255 OID 16944)
-- Dependencies: 5396 14
-- Name: cn_servplace_polyclinic(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_servplace_polyclinic() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  --Место обслуживания Поликлиника
  Return ''polyclinic'';
END;
';


ALTER FUNCTION mir.cn_servplace_polyclinic() OWNER TO postgres;

--
-- TOC entry 1598 (class 1255 OID 16945)
-- Dependencies: 5396 14
-- Name: cn_sicklist_reason_berem(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_reason_berem() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''af48d272-6dcc-11e1-9b58-3fd52e3491ff'';
END;
';


ALTER FUNCTION mir.cn_sicklist_reason_berem() OWNER TO postgres;

--
-- TOC entry 1599 (class 1255 OID 16946)
-- Dependencies: 5396 14
-- Name: cn_sicklist_reason_sanator(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_reason_sanator() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''af4ff69c-6dcc-11e1-b546-f7c73255e85a'';
END;
';


ALTER FUNCTION mir.cn_sicklist_reason_sanator() OWNER TO postgres;

--
-- TOC entry 1600 (class 1255 OID 16947)
-- Dependencies: 5396 14
-- Name: cn_sicklist_reason_uhod(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_reason_uhod() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''af54b95c-6dcc-11e1-91a3-33df92960a99'';
END;
';


ALTER FUNCTION mir.cn_sicklist_reason_uhod() OWNER TO postgres;

--
-- TOC entry 1601 (class 1255 OID 16948)
-- Dependencies: 5396 14
-- Name: cn_sicklist_reason_zabol(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_reason_zabol() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''af3ceb92-6dcc-11e1-9492-eb405a2e9c5d'';
END;
';


ALTER FUNCTION mir.cn_sicklist_reason_zabol() OWNER TO postgres;

--
-- TOC entry 1602 (class 1255 OID 16949)
-- Dependencies: 5396 14
-- Name: cn_sicklist_status_close(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_status_close() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
    BEGIN
      Return ''6eee2367-d085-476f-b653-cd5dc25078f6'';
    END;
    ';


ALTER FUNCTION mir.cn_sicklist_status_close() OWNER TO postgres;

--
-- TOC entry 1603 (class 1255 OID 16950)
-- Dependencies: 5396 14
-- Name: cn_sicklist_status_close_sl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_status_close_sl() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
    BEGIN
      Return ''13c6b54b-d01d-4cc0-b17b-0e388fc61512'';
    END;
    ';


ALTER FUNCTION mir.cn_sicklist_status_close_sl() OWNER TO postgres;

--
-- TOC entry 1604 (class 1255 OID 16951)
-- Dependencies: 5396 14
-- Name: cn_sicklist_status_open(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sicklist_status_open() RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
    BEGIN
      Return ''701f1c4b-19f6-49df-bb77-99990eb77c39'';
    END;
    ';


ALTER FUNCTION mir.cn_sicklist_status_open() OWNER TO postgres;

--
-- TOC entry 1605 (class 1255 OID 16952)
-- Dependencies: 5396 14
-- Name: cn_social_rank_pensioner(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_social_rank_pensioner() RETURNS character
    LANGUAGE plpgsql
    AS '
begin
  -- Социальный статус ''Пенсионер''
  return ''1'';
end;
';


ALTER FUNCTION mir.cn_social_rank_pensioner() OWNER TO postgres;

--
-- TOC entry 1606 (class 1255 OID 16953)
-- Dependencies: 5396 14
-- Name: cn_social_rank_worker(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_social_rank_worker() RETURNS character
    LANGUAGE plpgsql
    AS '
begin
  -- Социальный статус ''Работающий''
  return ''3'';
end;
';


ALTER FUNCTION mir.cn_social_rank_worker() OWNER TO postgres;

--
-- TOC entry 11704 (class 0 OID 0)
-- Dependencies: 1606
-- Name: FUNCTION cn_social_rank_worker(); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION cn_social_rank_worker() IS 'Социальный статус ''Работающий''';


--
-- TOC entry 1607 (class 1255 OID 16954)
-- Dependencies: 5396 14
-- Name: cn_sotr_dictionary_action_approve(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sotr_dictionary_action_approve() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Подтверждение''
  Return ''2'';
END;
';


ALTER FUNCTION mir.cn_sotr_dictionary_action_approve() OWNER TO postgres;

--
-- TOC entry 1608 (class 1255 OID 16955)
-- Dependencies: 5396 14
-- Name: cn_sotr_dictionary_action_edit(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sotr_dictionary_action_edit() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Редактирование''
  Return ''1'';
END;
';


ALTER FUNCTION mir.cn_sotr_dictionary_action_edit() OWNER TO postgres;

--
-- TOC entry 1609 (class 1255 OID 16956)
-- Dependencies: 5396 14
-- Name: cn_sotr_dictionary_action_view(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_sotr_dictionary_action_view() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- ''Просмотр''
  Return ''0'';
END;
';


ALTER FUNCTION mir.cn_sotr_dictionary_action_view() OWNER TO postgres;

--
-- TOC entry 1610 (class 1255 OID 16957)
-- Dependencies: 5396 14
-- Name: cn_surgery(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_surgery() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
     -- ветка операции (пока поставил id Эндоскопические исследования)
	return ''5b2b0e74-f1a2-49b2-82b0-031b94c7c1c4'';
END;
';


ALTER FUNCTION mir.cn_surgery() OWNER TO postgres;

--
-- TOC entry 1611 (class 1255 OID 16958)
-- Dependencies: 5396 14
-- Name: cn_tick_res_deadinstac(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_deadinstac() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Умер (medicalcondition стационар)
  Return ''5'';
END;
';


ALTER FUNCTION mir.cn_tick_res_deadinstac() OWNER TO postgres;

--
-- TOC entry 1612 (class 1255 OID 16959)
-- Dependencies: 5396 14
-- Name: cn_tick_res_deadinstacday(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_deadinstacday() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Умер (medicalcondition дневной стационар)
  Return ''11'';
END;
';


ALTER FUNCTION mir.cn_tick_res_deadinstacday() OWNER TO postgres;

--
-- TOC entry 1613 (class 1255 OID 16960)
-- Dependencies: 5396 14
-- Name: cn_tick_res_deadprieminstac(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_deadprieminstac() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Умер в приемном покое (medicalcondition стационар)
  Return ''6'';
END;
';


ALTER FUNCTION mir.cn_tick_res_deadprieminstac() OWNER TO postgres;

--
-- TOC entry 1614 (class 1255 OID 16961)
-- Dependencies: 5396 14
-- Name: cn_tick_res_deadprieminstacday(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_deadprieminstacday() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Умер в приемном покое (medicalcondition дневной стационар)
  Return ''12'';
END;
';


ALTER FUNCTION mir.cn_tick_res_deadprieminstacday() OWNER TO postgres;

--
-- TOC entry 1615 (class 1255 OID 16962)
-- Dependencies: 5396 14
-- Name: cn_tick_res_naprdaystacionar(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_naprdaystacionar() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Направлен в дневной стационар
  Return ''18'';
END;
';


ALTER FUNCTION mir.cn_tick_res_naprdaystacionar() OWNER TO postgres;

--
-- TOC entry 1616 (class 1255 OID 16963)
-- Dependencies: 5396 14
-- Name: cn_tick_res_naprgospital(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_naprgospital() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Направлен на госпитализацию
  Return ''17'';
END;
';


ALTER FUNCTION mir.cn_tick_res_naprgospital() OWNER TO postgres;

--
-- TOC entry 1617 (class 1255 OID 16964)
-- Dependencies: 5396 14
-- Name: cn_tick_res_naprkonsult(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_naprkonsult() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Направлен на консультацию
  Return ''20'';
END;
';


ALTER FUNCTION mir.cn_tick_res_naprkonsult() OWNER TO postgres;

--
-- TOC entry 1618 (class 1255 OID 16965)
-- Dependencies: 5396 14
-- Name: cn_tick_res_naprsankur(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tick_res_naprsankur() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  -- результат талона Направлен на санаторно-курортное лечение
  Return ''23'';
END;
';


ALTER FUNCTION mir.cn_tick_res_naprsankur() OWNER TO postgres;

--
-- TOC entry 1619 (class 1255 OID 16966)
-- Dependencies: 5396 14
-- Name: cn_tkladr_russia(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_tkladr_russia() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ''3a903d16-daf5-44f1-b6cc-e3e0b7441060'';
END;
';


ALTER FUNCTION mir.cn_tkladr_russia() OWNER TO postgres;

--
-- TOC entry 1620 (class 1255 OID 16967)
-- Dependencies: 5396 14
-- Name: cn_vac_plan_status_exec(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_vac_plan_status_exec() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--Выполнено
return ''09a52740-1b69-11e1-83ce-b70dc2f6a753'';
END;
';


ALTER FUNCTION mir.cn_vac_plan_status_exec() OWNER TO postgres;

--
-- TOC entry 1621 (class 1255 OID 16968)
-- Dependencies: 5396 14
-- Name: cn_vac_plan_status_plan(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_vac_plan_status_plan() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
--План
return ''09a52740-1b69-11e1-8a6e-ff96992b2423'';
END;
';


ALTER FUNCTION mir.cn_vac_plan_status_plan() OWNER TO postgres;

--
-- TOC entry 1622 (class 1255 OID 16969)
-- Dependencies: 5396 14
-- Name: cn_xray_urgency_emergency(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION cn_xray_urgency_emergency() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
  Return ''e7517a96-08a1-11e2-a8d7-6f5e8a104b77'';
END;
';


ALTER FUNCTION mir.cn_xray_urgency_emergency() OWNER TO postgres;

--
-- TOC entry 1623 (class 1255 OID 16970)
-- Dependencies: 5396 14
-- Name: company_bi_region_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION company_bi_region_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
declare
  v_region mir.vregion.oid%type;
begin
  if (new.region is null) then
    select max(r.region)
      into v_region
      from mir.sysuser_region r
     where r.sysuser = mir.getcurrentsysuser();
     
    new.region := v_region;
  end if;
  return new;
end;

';


ALTER FUNCTION mir.company_bi_region_trg() OWNER TO postgres;

--
-- TOC entry 1624 (class 1255 OID 16971)
-- Dependencies: 5396 14
-- Name: conform_get_their_id(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION conform_get_their_id(p_their_companyid character varying, p_their_table character varying, p_our_table character varying, p_our_code character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE 
pres varchar;
BEGIN
  -- Created 20110507 by Ponomarenko
  -- Возвращает чужой ID для значения нашей таблицы
 
    SELECT 
    MAX(ET.code) -- ВНИМАНИЕ!!! для одного чужого может быть несколько наших значений, поэтому MAX
    INTO pres
    FROM mir.eown EO, mir.etheir ET, mir.etable TT, mir.etable OT
   WHERE TT.ecompany_id = coalesce(p_their_companyid, ''0'')
     AND ET.etable_id = TT.oid
     AND UPPER(EO.code) = UPPER(coalesce(p_our_code, ''0''))
     AND EO.etheir_id = ET.oid
     AND EO.etable_id = OT.oid 
     AND UPPER(TT.name) = upper(p_their_table) 
     AND UPPER(OT.name) = upper(p_our_table)
     ;
     
RETURN pres;
END;
';


ALTER FUNCTION mir.conform_get_their_id(p_their_companyid character varying, p_their_table character varying, p_our_table character varying, p_our_code character varying) OWNER TO postgres;

--
-- TOC entry 1625 (class 1255 OID 16972)
-- Dependencies: 5396 14
-- Name: convert_letter(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION convert_letter(pword character varying) RETURNS character varying
    LANGUAGE plpgsql IMMUTABLE
    AS '
begin
  RETURN UPPER(TRANSLATE(PWORD, ''ёЁ'', ''еЕ''));
END;

';


ALTER FUNCTION mir.convert_letter(pword character varying) OWNER TO postgres;

--
-- TOC entry 1626 (class 1255 OID 16973)
-- Dependencies: 5396 14
-- Name: convert_letter2(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION convert_letter2(pword character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN UPPER(TRANSLATE(PWORD, ''ёЁ'', ''еЕ''));
END;

';


ALTER FUNCTION mir.convert_letter2(pword character varying) OWNER TO postgres;

--
-- TOC entry 1627 (class 1255 OID 16974)
-- Dependencies: 5396 14
-- Name: copy_all_presctype_between_sotr(character varying, character varying, character varying, character varying, boolean); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION copy_all_presctype_between_sotr(p_sotr character varying, p_otdel character varying, p_sotr_copy character varying, p_otdel_copy character varying, p_appoint boolean) RETURNS character varying
    LANGUAGE plpgsql
    AS '
/*
	add Ognev M.V. 27/03/2012 
    edit Ukhin A.D 14/08/2012
*/

declare
   cc record;
   curs1 refcursor;
   haveRecord mir.sotr_presctype.id%type;
   presctypeId VARCHAR;
begin
			 if (p_appoint = true) then
             	OPEN curs1 FOR select sp.presctype_id from mir.sotr_presctype sp where sp.sotr = p_sotr and sp.appoint = 1;
             else
             	OPEN curs1 FOR select sp.presctype_id from mir.sotr_presctype sp where sp.sotr = p_sotr and sp."execute" = 1;
             end if; 
             FETCH curs1 INTO presctypeId;
             while presctypeId is not null loop
                select ss.id into haveRecord from mir.sotr_presctype ss where ss.sotr = p_sotr_copy and  ss.presctype_id = presctypeId;
                if (haveRecord is null) then
                	 begin 
                       if (p_appoint = true) then
                         insert into mir.sotr_presctype (id, sotr, otdel, presctype_id, appoint) VALUES (mir.guid_generate(), p_sotr_copy, p_otdel_copy, presctypeId, 1 );
                       else
                         insert into mir.sotr_presctype (id, sotr, otdel, presctype_id, "execute") VALUES (mir.guid_generate(), p_sotr_copy, p_otdel_copy, presctypeId, 1 );
                       end if;
                     end;
                else 
                	begin
                       if (p_appoint = true) then
						 update mir.sotr_presctype  set appoint = 1 where sotr = p_sotr_copy and otdel = p_otdel_copy and  presctype_id = presctypeId;	
                       else
                  		  update mir.sotr_presctype set "execute" = 1 where sotr = p_sotr_copy and otdel = p_otdel_copy and  presctype_id = presctypeId;
                       end if;
                    end;
                end if;
                FETCH curs1 INTO presctypeId; 
                end loop;
             close curs1;
RETURN null;                     
 end ;
';


ALTER FUNCTION mir.copy_all_presctype_between_sotr(p_sotr character varying, p_otdel character varying, p_sotr_copy character varying, p_otdel_copy character varying, p_appoint boolean) OWNER TO postgres;

--
-- TOC entry 1628 (class 1255 OID 16975)
-- Dependencies: 5396 14
-- Name: copy_all_presctype_section_to_sotr(character varying, character varying, character varying, boolean); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION copy_all_presctype_section_to_sotr(p_sotr character varying, p_otdel character varying, p_section character varying, p_appoint boolean) RETURNS character varying
    LANGUAGE plpgsql
    AS '
/*    add Ognev M.V. 4/07/2012 */

declare
   haveRecord mir.sotr_presctype.id%type;
   c record;
begin
     FOR c IN (SELECT distinct p.oid
               FROM MIR.presctype p
               WHERE p.presctypefolderid_parent = p_section or p.presctypefolder_id = p_section) LOOP 
             select ss.id
             into haveRecord
             from mir.sotr_presctype ss
             where ss.sotr = p_sotr and
                   ss.otdel = p_otdel and
                   ss.presctype_id = c.oid;    
            if (haveRecord is null) then
                     begin 
                       if (p_appoint = true) then
                         insert into mir.sotr_presctype(id, sotr, otdel,
                         presctype_id, appoint)
                         VALUES (mir.guid_generate(), p_sotr, p_otdel
                         , c.oid , 1);
                       else
                         insert into mir.sotr_presctype(id, sotr, otdel,
                         presctype_id, "execute")
                         VALUES (mir.guid_generate(), p_sotr, p_otdel
                         , c.oid , 1);
                       end if;
                     end;
                else 
                    begin
                       if (p_appoint = true) then
                         update mir.sotr_presctype
                         set appoint = 1
                         where sotr = p_sotr and
                               otdel = p_otdel and
                               presctype_id = c.oid;    
                       else
                            update mir.sotr_presctype
                            set "execute" = 1
                            where sotr = p_sotr and
                                  otdel = p_otdel and
                                  presctype_id = c.oid;
                       end if;
                    end;
                end if;
        end LOOP;
RETURN null;                     
 end ;
';


ALTER FUNCTION mir.copy_all_presctype_section_to_sotr(p_sotr character varying, p_otdel character varying, p_section character varying, p_appoint boolean) OWNER TO postgres;

--
-- TOC entry 1629 (class 1255 OID 16976)
-- Dependencies: 5396 14
-- Name: copy_schedule_for_day(date, date, date, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION copy_schedule_for_day(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, sysuserp character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  pday date;
  presult varchar;
  oidp varchar;
  presctypep varchar;
  statep numeric;
  isbronp numeric;
  insitep numeric;
  cabinetp varchar;
  isnapronlyp varchar;
  infopacp varchar;
  startonp timestamp;
  endonp timestamp;
  maxvisitorsp integer;
  financingtypep numeric;
  starttime timestamp;
  endtime timestamp;
  countRow integer;
  schedule_oid char(36);
BEGIN
presult :='''';
  for pday in
  	select generate_series(pstarton, pendon, ''1 day'')
    LOOP
    	for oidp, presctypep, statep, isbronp, 
        	insitep, cabinetp, isnapronlyp, 
            infopacp, startonp, endonp, 
            maxvisitorsp, financingtypep in
            select s.oid,
            		s.presctype,
                    s.state,
                    s.isbron,
                    s.insite,
                    s.cabinet,
                    s.isnapronly,
                    s.info,
                    s.starton,
                    s.endon,
                    s.maxvisitors,
                    s.financingtype
            from mir.schedule as s
            where date(s.starton)=pdate
            and s.lpu = plpu
            and s.sotr = psotr
            and s.otdel = potdel
            LOOP
            	starttime := startonp - date_trunc(''day'', startonp) + pday;
                endtime := endonp - date_trunc(''day'', endonp) + pday;
                countRow := count(sc.oid)
                			from mir.schedule as sc
                            where sc.sysuser = sysuserp
                            and sc.lpu = plpu
                            and sc.otdel = potdel
                            and sc.starton <> sc.endon
                            and ((sc.starton >= starttime and sc.endon <= endtime) or
                            (sc.starton <= starttime and sc.endon > starttime) or
                            (sc.starton < endtime and sc.endon >= endtime) or
                            (sc.starton <= starttime and sc.endon >= endtime));
				IF(countRow > 0) THEN
                	presult := ''Некоторые дни были пропущены, т.к. уже содержат расписания'';
                ELSE   
	                schedule_oid := MIR.guid_generate();
                	 insert into mir.schedule
                     		(oid,
       						cabinet,	
	                        insite,
					       	sysuser,
							sotr,		
       						state,
       						isnapronly,
                			lpu,
							starton,
	                        endon,
							isbron,
       						updatepeopledate,
							info,
       						otdel,
       						presctype,
       						maxvisitors,
	       					financingtype)
                     VALUES(schedule_oid,
                     		cabinetp,
                            insitep,
                            sysuserp,
                            psotr,
                            statep,
                            isnapronlyp,
                            plpu,
                            starttime,
                            endtime,
                            isbronp,
                            CURRENT_DATE,
                            infopacp,
                            potdel,
                            presctypep,
                            maxvisitorsp,
                            financingtypep);     
                END IF;
            END LOOP;
    END LOOP;
    RETURN presult;
END;
';


ALTER FUNCTION mir.copy_schedule_for_day(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, sysuserp character varying) OWNER TO postgres;

--
-- TOC entry 1630 (class 1255 OID 16977)
-- Dependencies: 5396 14
-- Name: copy_schedule_for_day_even_odd(date, date, date, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION copy_schedule_for_day_even_odd(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, psysuser character varying, pevenodd integer) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  pday date;
  presult varchar;
  oidp varchar;
  presctypep varchar;
  statep numeric;
  isbronp numeric;
  insitep numeric;
  cabinetp varchar;
  isnapronlyp varchar;
  infopacp varchar;
  startonp timestamp;
  endonp timestamp;
  maxvisitorsp integer;
  financingtypep numeric;
  starttime timestamp;
  endtime timestamp;
  countRow integer;
  schedule_oid char(36);
  peven INTEGER;
BEGIN
  presult :='''';
  for pday in
  	select generate_series(pstarton, pendon, ''1 day'')
    LOOP
    	peven := cast(date_part(''DAY'', pday) as INTEGER)%2;
        if peven = pevenodd then
    	for oidp, presctypep, statep, isbronp, 
        	insitep, cabinetp, isnapronlyp, 
            infopacp, startonp, endonp, 
            maxvisitorsp, financingtypep in
            select s.oid,
            		s.presctype,
                    s.state,
                    s.isbron,
                    s.insite,
                    s.cabinet,
                    s.isnapronly,
                    s.info,
                    s.starton,
                    s.endon,
                    s.maxvisitors,
                    s.financingtype
            from mir.schedule as s
            where date(s.starton)=pdate
            and s.lpu = plpu
            and s.sotr = psotr
            and s.otdel = potdel
            LOOP
            	starttime := startonp - date_trunc(''day'', startonp) + pday;
                endtime := endonp - date_trunc(''day'', endonp) + pday;
                countRow := count(sc.oid)
                			from mir.schedule as sc
                            where sc.sysuser = psysuser
                            and sc.lpu = plpu
                            and sc.otdel = potdel
                            and sc.starton <> sc.endon
                            and ((sc.starton >= starttime and sc.endon <= endtime) or
                            (sc.starton <= starttime and sc.endon > starttime) or
                            (sc.starton < endtime and sc.endon >= endtime) or
                            (sc.starton <= starttime and sc.endon >= endtime));
				IF(countRow > 0) THEN
                	presult := ''Некоторые дни были пропущены, т.к. уже содержат расписания'';
                ELSE   
	                schedule_oid := MIR.guid_generate();
                	 insert into mir.schedule
                     		(oid,
       						cabinet,	
	                        insite,
					       	sysuser,
							sotr,		
       						state,
       						isnapronly,
                			lpu,
							starton,
	                        endon,
							isbron,
       						updatepeopledate,
							info,
       						otdel,
       						presctype,
       						maxvisitors,
	       					financingtype)
                     VALUES(schedule_oid,
                     		cabinetp,
                            insitep,
                            psysuser,
                            psotr,
                            statep,
                            isnapronlyp,
                            plpu,
                            starttime,
                            endtime,
                            isbronp,
                            CURRENT_DATE,
                            infopacp,
                            potdel,
                            presctypep,
                            maxvisitorsp,
                            financingtypep);     
                END IF;
            END LOOP;
            END IF;
    END LOOP;
    RETURN presult;
END;
';


ALTER FUNCTION mir.copy_schedule_for_day_even_odd(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, psysuser character varying, pevenodd integer) OWNER TO postgres;

--
-- TOC entry 1631 (class 1255 OID 16978)
-- Dependencies: 5396 14
-- Name: copy_schedule_for_day_work_week(date, date, date, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION copy_schedule_for_day_work_week(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, psysuser character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  pday date;
  presult varchar;
  oidp varchar;
  presctypep varchar;
  statep numeric;
  isbronp numeric;
  insitep numeric;
  cabinetp varchar;
  isnapronlyp varchar;
  infopacp varchar;
  startonp timestamp;
  endonp timestamp;
  maxvisitorsp integer;
  financingtypep numeric;
  starttime timestamp;
  endtime timestamp;
  countRow integer;
  schedule_oid char(36);
  curDay INTEGER;
BEGIN
presult :='''';
  for pday in
  	select generate_series(pstarton, pendon, ''1 day'')
    LOOP
    	curDay := extract(DOW from pday);
        if curDay > 0 and curDay < 6 THEN
    	for oidp, presctypep, statep, isbronp, 
        	insitep, cabinetp, isnapronlyp, 
            infopacp, startonp, endonp, 
            maxvisitorsp, financingtypep in
            select s.oid,
            		s.presctype,
                    s.state,
                    s.isbron,
                    s.insite,
                    s.cabinet,
                    s.isnapronly,
                    s.info,
                    s.starton,
                    s.endon,
                    s.maxvisitors,
                    s.financingtype
            from mir.schedule as s
            where date(s.starton)=pdate
            and s.lpu = plpu
            and s.sotr = psotr
            and s.otdel = potdel
            LOOP
            	starttime := startonp - date_trunc(''day'', startonp) + pday;
                endtime := endonp - date_trunc(''day'', endonp) + pday;
                countRow := count(sc.oid)
                			from mir.schedule as sc
                            where sc.sysuser = psysuser
                            and sc.lpu = plpu
                            and sc.otdel = potdel
                            and sc.starton <> sc.endon
                            and ((sc.starton >= starttime and sc.endon <= endtime) or
                            (sc.starton <= starttime and sc.endon > starttime) or
                            (sc.starton < endtime and sc.endon >= endtime) or
                            (sc.starton <= starttime and sc.endon >= endtime));
				IF(countRow > 0) THEN
                	presult := ''Некоторые дни были пропущены, т.к. уже содержат расписания'';
                ELSE   
	                schedule_oid := MIR.guid_generate();
                	 insert into mir.schedule
                     		(oid,
       						cabinet,	
	                        insite,
					       	sysuser,
							sotr,		
       						state,
       						isnapronly,
                			lpu,
							starton,
	                        endon,
							isbron,
       						updatepeopledate,
							info,
       						otdel,
       						presctype,
       						maxvisitors,
	       					financingtype)
                     VALUES(schedule_oid,
                     		cabinetp,
                            insitep,
                            psysuser,
                            psotr,
                            statep,
                            isnapronlyp,
                            plpu,
                            starttime,
                            endtime,
                            isbronp,
                            CURRENT_DATE,
                            infopacp,
                            potdel,
                            presctypep,
                            maxvisitorsp,
                            financingtypep);     
                END IF;
            END LOOP;
            END IF;
    END LOOP;
    RETURN presult;
END;
';


ALTER FUNCTION mir.copy_schedule_for_day_work_week(pdate date, pstarton date, pendon date, psotr character varying, plpu character varying, potdel character varying, psysuser character varying) OWNER TO postgres;

--
-- TOC entry 1632 (class 1255 OID 16979)
-- Dependencies: 5396 14
-- Name: count_include_time_in_worktime(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION count_include_time_in_worktime(ppresctype character varying, potdel character varying, ptimestr character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
  v_date DATE;
  v_time TIMESTAMP;
  v_count NUMERIC;
  c record;
BEGIN
v_date:=to_date(ptimestr, ''dd.mm.yyyy'');
v_time:=to_timestamp(ptimestr, ''dd.mm.yyyy hh24:mi'');
v_count:=0;
for c in(
select * from
(
select qr.*, lag(qe,1)  OVER (ORDER BY qq) qt from 
(
select DISTINCT 
   (select count(*) qc from mir.schedule s 
     where s.presctype = ppresctype
      and s.insite=1 
      and s.otdel=potdel
	  and cast(s.starton as date) = v_date and s.insite=1 
      and s.people is null) qc, 
     -- q21,q2,
      case when (q1 is null and q4 is null) or (q1m is null and q1<>starton) then starton else 
       case when q2 is null and q1m=q4 and q21 < q4 then 
          COALESCE(q21,q2) 
        
          else 
           case when (starton > q1 or q1 is null) and (endon < q2 or q2 is null) then starton else q2 end end
      end qq,
      case when q2 = lag(starton,-1)  OVER (ORDER BY starton) and q2 > endon and q1m is null then endon else 
          case when (starton > q1 or q1 is null) and (endon < q2 or q2 is null) then endon
          else
           COALESCE(lag(endon,-1) OVER (ORDER BY starton), endon) end  end qe
      
      
from
(
select q3.*, lag(q2,1) OVER (ORDER BY starton) q21,
             lag(q2,-1) OVER (ORDER BY starton) q22 from 
(
select s.starton, lag(s.endon,1) OVER (ORDER BY starton) q1, s.presctype,
lag(s.endon,2) OVER (ORDER BY starton) q1m,
lag(s.starton,1) OVER (ORDER BY starton) q4,
lag(s.starton,-1) OVER (ORDER BY starton) q2, s.endon,
row_number() OVER (ORDER BY starton) q5, count(s.oid) OVER (ORDER BY starton) qc
from mir.schedule s 
where 
s.presctype = ppresctype and s.insite=1 and s.otdel=potdel
--and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE + $3
/*s.presctype = ''eb48c0c0-24c0-11e1-9e6e-77fba6e0e9ea'' and s.insite=1 and s.otdel=''5e5514e2-4852-46a1-a30a-0c4ea9a3837d''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE + 1*/
/*s.presctype = ''ce84b420-c2a6-4b0f-af6e-1f447023ef0e'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE - 9*/
/*s.presctype = ''0403c8a0-b07b-483b-a5e2-7eb33330c9aa'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE-15*/
/*s.presctype = ''ed736120-24c0-11e1-9c2e-f302e37a2eba'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE -1*/
/*s.presctype = ''6a3f48a2-fb9b-49a0-ad54-e2d1d9d96189'' and s.insite=1 and s.otdel=''cac2c29e-07ee-4739-b38e-fd6563f6153b''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE - 9*/
/*s.presctype = ''bbf17200-1135-4686-92db-f596728a8730'' and s.insite=1 and s.otdel=''cac2c29e-07ee-4739-b38e-fd6563f6153b''
and s.starton > ''07.02.2012''
and s.starton < ''08.02.2012''*/
and cast(s.starton as date) = v_date


) as q3
where 1 =1 
and (  
	   (starton > q1 and endon < q2) or
       (starton > q1 and endon = q2 and q1m is null) or
       (starton = q1 and endon < q2) or
       (q1 is null and q4 is null) or
       (q2 is null))) as qw order by qq
) as qr where qq is not null 
) qg
where qt is null or (qt<>qe))
      loop
      
      if(v_time>=c.qq and v_time<=c.qe) THEN
      v_count:=v_count + 1;
      end if;
      
      end loop;
  return v_count;
END;
';


ALTER FUNCTION mir.count_include_time_in_worktime(ppresctype character varying, potdel character varying, ptimestr character varying) OWNER TO postgres;

--
-- TOC entry 1633 (class 1255 OID 16980)
-- Dependencies: 5396 14
-- Name: create_ora_user(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION create_ora_user(plogin character varying, ppwd character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
-- Created 20090320 by Linnikov.
 -- Функция добавляет пользователя Oracle.
DECLARE
 poralogin varchar(30);
BEGIN
 poralogin := mir.GET_ORALOGIN_BY_MISLOGIN(plogin);
 
EXECUTE ''CREATE USER "'' || poralogin || ''" SUPERUSER CREATEDB LOGIN PASSWORD '''''' || ppwd || '''''''';
END;
';


ALTER FUNCTION mir.create_ora_user(plogin character varying, ppwd character varying) OWNER TO postgres;

--
-- TOC entry 1635 (class 1255 OID 16981)
-- Dependencies: 5396 14
-- Name: createnewrole(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION createnewrole(pname character varying, pobjecttype character varying, psyn character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
Declare
  cnt    INTEGER;
  NewOid VARCHAR(100);
/*  Edited by Spasskiy S.N. 11.11.2010  - добавил синоним*/
BEGIN

  NewOid := lower(mir.new_uuid());
  ----------Создание новой роли-------------
  INSERT INTO mir.rolebase
    (OID, NAME, syn)
  VALUES
    (NewOid, pName, pSyn);

  INSERT INTO mir.sysrole (OID) VALUES (NewOid);

  INSERT INTO mir.persistentpermission
    (OID, serializedpermission, role)
  VALUES
    (lower(mir.new_uuid()),
     ''
<IPermission class="DevExpress.ExpressApp.Security.ObjectAccessPermission"
assembly="DevExpress.ExpressApp.v9.3"
version="9.3.3.0">
<ParticularAccessItem access="Read"
objectType="'' || pobjectType || ''"
modifier="Allow"/>
<ParticularAccessItem access="Write"
objectType="'' || pobjectType || ''"
modifier="Allow"/>
<ParticularAccessItem access="Create"
objectType="'' || pobjectType || ''"
modifier="Allow"/>
<ParticularAccessItem access="Delete"
objectType="'' || pobjectType || ''"
modifier="Allow"/>
<ParticularAccessItem access="Navigate"
objectType="'' || pobjectType || ''"
modifier="Allow"/>
</IPermission>
'',
     NewOid);

END;

';


ALTER FUNCTION mir.createnewrole(pname character varying, pobjecttype character varying, psyn character varying) OWNER TO postgres;

--
-- TOC entry 1636 (class 1255 OID 16982)
-- Dependencies: 5396 14
-- Name: createpeopleschedule(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION createpeopleschedule() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
BEGIN
 perform prof.create_schedule_for_risk_people(new.oid);
 return new;
END;
';


ALTER FUNCTION mir.createpeopleschedule() OWNER TO postgres;

--
-- TOC entry 1637 (class 1255 OID 16983)
-- Dependencies: 5396 14
-- Name: createscheduleforpeople(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION createscheduleforpeople() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE

BEGIN

    perform prof.create_schedule_for_risk_people(new.people_id,new.group_id);
    
    return new;
END;
';


ALTER FUNCTION mir.createscheduleforpeople() OWNER TO postgres;

--
-- TOC entry 1638 (class 1255 OID 16984)
-- Dependencies: 5396 14
-- Name: createsysuserfrompeople(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION createsysuserfrompeople(poid character varying, plogin character varying DEFAULT ''::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
--by Spasskiy SN
declare
pNewSysUser varchar(100);
PUserName varchar(100);
BEGIN

pNewSysUser:=pOid;

if pLogin is null then
PUserName:=mir.new_uuid();
end if;

if pLogin is not null then
          PUserName:=pLogin;

end if;


INSERT INTO mir.SysUser
           (Oid
           ,StoredPassword
           ,UserName
           ,ChangePasswordOnFirstLogon
           ,IsActive
           ,IsAdministrator
           ,CodeUser)
     VALUES
           (pNewSysUser,
           ''200820E3227815ED1756A6B531E7E0D2'',
           PUserName,
         --  replace(cast(NEWID() as varchar(100)),''-'',''''),
           1,
           1,
           0,
           '''');


eND;

';


ALTER FUNCTION mir.createsysuserfrompeople(poid character varying, plogin character varying) OWNER TO postgres;

--
-- TOC entry 1639 (class 1255 OID 16985)
-- Dependencies: 5396 14
-- Name: days_in_month(integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION days_in_month(pyear integer, pmonth integer) RETURNS integer
    LANGUAGE plpgsql
    AS '
begin
  return date_part(''day'', to_date(cast(PYEAR as varchar) || ''-'' || cast(PMONTH as varchar) || ''-01'', ''yyyy.mm.dd'') + ''1 month''::interval - ''1 day''::interval) AS days;
end;
';


ALTER FUNCTION mir.days_in_month(pyear integer, pmonth integer) OWNER TO postgres;

--
-- TOC entry 1640 (class 1255 OID 16986)
-- Dependencies: 5396 14
-- Name: dbf_b_ambree_ai_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dbf_b_ambree_ai_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  poid VARCHAR(36);
  poid2 VARCHAR(36);
BEGIN
  poid2:=lower(mir.new_uuid());

    select mir.findpeople(new.sname, new.fi, new.si, new.borndt, new.oid_file,poid2) into poid;
    if poid is null then
       select MIR.FindPeopleByInsurance(new.scard, new.oid_file,poid2) into poid;
    end if;
    NEW.oid_people:=poid;
    NEW.oid:=poid2;
    return new;
END;

';


ALTER FUNCTION mir.dbf_b_ambree_ai_trg() OWNER TO postgres;

--
-- TOC entry 1641 (class 1255 OID 16987)
-- Dependencies: 5396 14
-- Name: dbf_b_ambree_bu_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dbf_b_ambree_bu_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  poid VARCHAR(36);

BEGIN

if new.accno<> old.accno then
   perform MIR.LogDbf(new.oid_file,''accno'',to_char(new.accno),to_char(old.accno),new.oid);
end if;
if new.accdt<> old.accdt then
   perform MIR.LogDbf(new.oid_file,''accdt'',to_char(new.accdt),to_char(old.accdt),new.oid);
end if;

if new.rdtmax<> old.rdtmax then
   perform MIR.LogDbf(new.oid_file,''rdtmax'',to_char(new.rdtmax),to_char(old.rdtmax),new.oid);
end if;
if new.sectn<> old.sectn then
   perform MIR.LogDbf(new.oid_file,''sectn'',to_char(new.sectn),to_char(old.sectn),new.oid);
end if;
if new.wa<> old.wa then
   perform MIR.LogDbf(new.oid_file,''wa'',to_char(new.wa),to_char(old.wa),new.oid);
end if;
if new.area<> old.area then
   perform MIR.LogDbf(new.oid_file,''area'',to_char(new.area),to_char(old.area),new.oid);
end if;
if new.typedoc<> old.typedoc then
   perform MIR.LogDbf(new.oid_file,''typedoc'',to_char(new.typedoc),to_char(old.typedoc),new.oid);
end if;

if new.seria<> old.seria then
   perform MIR.LogDbf(new.oid_file,''seria'',to_char(new.seria),to_char(old.seria),new.oid);
end if;

if new.scard<> old.scard then
   perform MIR.LogDbf(new.oid_file,''scard'',to_char(new.scard),to_char(old.scard),new.oid);
end if;

if new.sname<> old.sname then
   perform MIR.LogDbf(new.oid_file,''sname'',to_char(new.sname),to_char(old.sname),new.oid);
end if;

if new.fi<> old.fi then
   perform MIR.LogDbf(new.oid_file,''fi'',to_char(new.fi),to_char(old.fi),new.oid);
end if;
if new.si<> old.si then
   perform MIR.LogDbf(new.oid_file,''si'',to_char(new.si),to_char(old.si),new.oid);
end if;

if new.borndt<> old.borndt then
   perform MIR.LogDbf(new.oid_file,''borndt'',to_char(new.borndt),to_char(old.borndt),new.oid);
end if;

if new.sex<> old.sex then
   perform MIR.LogDbf(new.oid_file,''accno'',to_char(new.accno),to_char(old.accno),new.oid);
end if;

if new.ext<> old.ext then
   perform MIR.LogDbf(new.oid_file,''ext'',to_char(new.ext),to_char(old.ext),new.oid);
end if;


if new.terr<> old.terr then
   perform MIR.LogDbf(new.oid_file,''terr'',to_char(new.terr),to_char(old.terr),new.oid);
end if;

if new.workst<> old.workst then
   perform MIR.LogDbf(new.oid_file,''workst'',to_char(new.workst),to_char(old.workst),new.oid);
end if;

if new.education<> old.education then
   perform MIR.LogDbf(new.oid_file,''education'',to_char(new.education),to_char(old.education),new.oid);
end if;

if new.prgramb<> old.prgramb then
   perform MIR.LogDbf(new.oid_file,''prgramb'',to_char(new.prgramb),to_char(old.prgramb),new.oid);
end if;
if new.inv<> old.inv then
   perform MIR.LogDbf(new.oid_file,''inv'',to_char(new.inv),to_char(old.inv),new.oid);
end if;

if new.invst<> old.invst then
   perform MIR.LogDbf(new.oid_file,''invst'',to_char(new.invst),to_char(old.invst),new.oid);
end if;

if new.invdt<> old.invdt then
   perform MIR.LogDbf(new.oid_file,''invdt'',to_char(new.invdt),to_char(old.invdt),new.oid);
end if;

if new.healthgr<> old.healthgr then
   perform MIR.LogDbf(new.oid_file,''healthgr'',to_char(new.healthgr),to_char(old.healthgr),new.oid);
end if;

if new.mkb<> old.mkb then
   perform MIR.LogDbf(new.oid_file,''mkb'',to_char(new.mkb),to_char(old.mkb),new.oid);
end if;

if new.har<> old.har then
   perform MIR.LogDbf(new.oid_file,''har'',to_char(new.har),to_char(old.har),new.oid);
end if;
if new.dspst<> old.dspst then
   perform MIR.LogDbf(new.oid_file,''dspst'',to_char(new.dspst),to_char(old.dspst),new.oid);
end if;
if new.dspout<> old.dspout then
   perform MIR.LogDbf(new.oid_file,''dspout'',to_char(new.dspout),to_char(old.dspout),new.oid);
end if;
if new.typehosp<> old.typehosp then
   perform MIR.LogDbf(new.oid_file,''typehosp'',to_char(new.typehosp),to_char(old.typehosp),new.oid);
end if;

if new.reabil<> old.reabil then
   perform  MIR.LogDbf(new.oid_file,''reabil'',to_char(new.reabil),to_char(old.reabil),new.oid);
end if;
if new.hospbegdt<> old.hospbegdt then
   perform  MIR.LogDbf(new.oid_file,''hospbegdt'',to_char(new.hospbegdt),to_char(old.hospbegdt),new.oid);
end if;
if new.hospenddt<> old.hospenddt then
   perform  MIR.LogDbf(new.oid_file,''hospenddt'',to_char(new.hospenddt),to_char(old.hospenddt),new.oid);
end if;
if new.obr<> old.obr then
   perform  MIR.LogDbf(new.oid_file,''obr'',to_char(new.obr),to_char(old.obr),new.oid);
end if;
if new.typetravm<> old.typetravm then
   perform  MIR.LogDbf(new.oid_file,''typetravm'',to_char(new.typetravm),to_char(old.typetravm),new.oid);
end if;

if new.typeend<> old.typeend then
   perform  MIR.LogDbf(new.oid_file,''typeend'',to_char(new.typeend),to_char(old.typeend),new.oid);
end if;

if new.address<> old.address then
   perform  MIR.LogDbf(new.oid_file,''address'',to_char(new.address),to_char(old.address),new.oid);
end if;
if new.tapdt<> old.tapdt then
   perform  MIR.LogDbf(new.oid_file,''tapdt'',to_char(new.tapdt),to_char(old.tapdt),new.oid);
end if;

if new.typetap<> old.typetap then
   perform  MIR.LogDbf(new.oid_file,''typetap'',to_char(new.typetap),to_char(old.typetap),new.oid);
end if;

if new.listaim<> old.listaim then
   perform  MIR.LogDbf(new.oid_file,''listaim'',to_char(new.listaim),to_char(old.listaim),new.oid);
end if;
if new.snils<> old.snils then
   perform  MIR.LogDbf(new.oid_file,''snils'',to_char(new.snils),to_char(old.snils),new.oid);
end if;

if new.signreo<> old.signreo then
   perform  MIR.LogDbf(new.oid_file,''signreo'',to_char(new.signreo),to_char(old.signreo),new.oid);
end if;
if new.cont<> old.cont then
   perform  MIR.LogDbf(new.oid_file,''cont'',to_char(new.cont),to_char(old.cont),new.oid);
end if;

if new.typecont<> old.typecont then
   perform  MIR.LogDbf(new.oid_file,''typecont'',to_char(new.typecont),to_char(old.typecont),new.oid);
end if;

if new.timedivide<> old.timedivide then
   perform  MIR.LogDbf(new.oid_file,''timedivide'',to_char(new.timedivide),to_char(old.timedivide),new.oid);
end if;

if new.oid_people<> old.oid_people then
   perform  MIR.LogDbf(new.oid_file,''oid_people'',to_char(new.oid_people),to_char(old.oid_people),new.oid);
end if;

if new.oid_file<> old.oid_file then
   perform  MIR.LogDbf(new.oid_file,''oid_file'',to_char(new.oid_file),to_char(old.oid_file),new.oid);
end if;
if new.md5<> old.md5 then
   perform  MIR.LogDbf(new.oid_file,''md5'',to_char(new.md5),to_char(old.md5),new.oid);
end if;

return new;
END;

';


ALTER FUNCTION mir.dbf_b_ambree_bu_trg() OWNER TO postgres;

--
-- TOC entry 1642 (class 1255 OID 16988)
-- Dependencies: 5396 14
-- Name: dbf_b_ambser_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dbf_b_ambser_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
    NEW.oid:=lower(mir.new_uuid());
return new;
END;

';


ALTER FUNCTION mir.dbf_b_ambser_bi_trg() OWNER TO postgres;

--
-- TOC entry 1643 (class 1255 OID 16989)
-- Dependencies: 5396 14
-- Name: dbf_b_ambsop_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dbf_b_ambsop_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
    NEW.oid:=lower(mir.new_uuid());
return new;
END;

';


ALTER FUNCTION mir.dbf_b_ambsop_bi_trg() OWNER TO postgres;

--
-- TOC entry 1644 (class 1255 OID 16990)
-- Dependencies: 5396 14
-- Name: delete_diagnos_in_demand(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION delete_diagnos_in_demand(pdemand character) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  DELETE FROM MIR.DEMAND_STANDART D WHERE D.DEMAND = PDEMAND;
end;

';


ALTER FUNCTION mir.delete_diagnos_in_demand(pdemand character) OWNER TO postgres;

--
-- TOC entry 1645 (class 1255 OID 16991)
-- Dependencies: 5396 14
-- Name: delete_schedule_delete_sysuser_presctype(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION delete_schedule_delete_sysuser_presctype(psysuser character varying, ppresctype character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  
BEGIN
  delete from mir.schedule 
  where presctype=ppresctype 
  and sysuser=psysuser 
  and to_date(to_char(starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'')>= CURRENT_DATE
  and people is null;
  return '''';
END;
';


ALTER FUNCTION mir.delete_schedule_delete_sysuser_presctype(psysuser character varying, ppresctype character varying) OWNER TO postgres;

--
-- TOC entry 1649 (class 1255 OID 16992)
-- Dependencies: 5396 14
-- Name: demand_add_demand_change(character, character varying, character, numeric, character, numeric, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_add_demand_change(pdemand character, pinfo character varying, plpu character, pstate_id numeric, pcancel_reason character, pneed_reply numeric DEFAULT 0, pdate_change date DEFAULT now(), psysuser character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    INSERT INTO MIR.DEMAND_CHANGES
      (OID,
       DEMAND,
       INFO,
       LPU,
       STATE_ID,
       CANCEL_REASON,
       DATE_CHANGE,
       NEED_REPLY,
       SYSUSER)
    VALUES
      (MIR.NEW_UUID(),
       PDEMAND,
       PINFO,
       PLPU,
       PSTATE_ID,
       PCANCEL_REASON,
       PDATE_CHANGE,
       PNEED_REPLY,
       PSYSUSER);
       
    UPDATE MIR.DEMAND SET STATE_ID = PSTATE_ID WHERE OID = PDEMAND;
    
    IF PSTATE_ID = 5 THEN
      perform MIR.DEMAND_CANCEL_DEMAND_SCHEDULES(PDEMAND, NULL);
    END IF;
  
  END;

';


ALTER FUNCTION mir.demand_add_demand_change(pdemand character, pinfo character varying, plpu character, pstate_id numeric, pcancel_reason character, pneed_reply numeric, pdate_change date, psysuser character varying) OWNER TO postgres;

--
-- TOC entry 1650 (class 1255 OID 16993)
-- Dependencies: 5396 14
-- Name: demand_add_schedule(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_add_schedule(pdemand character, pschedule character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
    nOk integer;
    c1 record;
  BEGIN
    INSERT INTO MIR.DEMAND_SCHEDULE
      (DEMAND, SCHEDULE)
    VALUES
      (PDEMAND, PSCHEDULE);
  
    FOR C IN (SELECT SR.*
                FROM MIR.SCHEDULE S, MIR.SERVICE_REQUIRED SR
               WHERE S.OID = PSCHEDULE
                 AND SR.LPU = S.LPU
                 AND S.PRESCTYPE = SR.PRESCTYPE) 
    LOOP
      nOk := -1;
      
      for c1 in ( select ds.OID
                    from MIR.DEMAND_STANDART ds
                   where ds.DEMAND = PDEMAND 
                     AND ds.SERVICE = C.SERVICE 
                     AND ds.IS_DOP = DECODE(C.ISREQUIRED, 1, 0, 1)
                )
      loop 
        nOk := 1;
      end loop;
      
      if nOk <= 0 then
        INSERT into MIR.DEMAND_STANDART 
          (OID, DEMAND, SERVICE, SERVICE_DATE, IS_DOP)
        VALUES
          (MIR.NEW_UUID(),
           PDEMAND,
           C.SERVICE,
           NULL,
           DECODE(C.ISREQUIRED, 1, 0, 1));
      end if;
    
      /*MERGE INTO MIR.DEMAND_STANDART
      USING DUAL
      ON (DEMAND = PDEMAND AND SERVICE = C.SERVICE AND IS_DOP = DECODE(C.ISREQUIRED, 1, 0, 1))
      WHEN NOT MATCHED THEN
        INSERT
          (OID, DEMAND, SERVICE, SERVICE_DATE, IS_DOP)
        VALUES
          (MIR.NEW_UUID,
           PDEMAND,
           C.SERVICE,
           NULL,
           DECODE(C.ISREQUIRED, 1, 0, 1));*/
    END LOOP;
  END;

';


ALTER FUNCTION mir.demand_add_schedule(pdemand character, pschedule character) OWNER TO postgres;

--
-- TOC entry 1651 (class 1255 OID 16994)
-- Dependencies: 5396 14
-- Name: demand_cancel_demand_schedules(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_cancel_demand_schedules(pdemand character, psysuser character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    --отменяем приемы, смс не отправляем, связку оставляем
    FOR C IN (SELECT SCHEDULE
                FROM MIR.DEMAND_SCHEDULE
               WHERE DEMAND = PDEMAND) 
    LOOP
      perform MIR.SCHEDULE_CANCEL_SCHEDULE(C.SCHEDULE, PSYSUSER, PSYSUSER, 1);
    END LOOP;
  END;

';


ALTER FUNCTION mir.demand_cancel_demand_schedules(pdemand character, psysuser character) OWNER TO postgres;

--
-- TOC entry 1652 (class 1255 OID 16995)
-- Dependencies: 5396 14
-- Name: demand_delete_schedule(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_delete_schedule(pdemand character, pschedule character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.DEMAND_SCHEDULE
     WHERE DEMAND = PDEMAND
       AND SCHEDULE = PSCHEDULE;
       
    DELETE FROM MIR.DEMAND_STANDART
     WHERE SERVICE NOT IN
           (SELECT SERVICE
              FROM MIR.SERVICE_REQUIRED SR,
                   MIR.DEMAND_SCHEDULE  DS,
                   MIR.SCHEDULE         S
             WHERE S.OID = DS.SCHEDULE
               AND DS.DEMAND = PDEMAND
               AND S.PRESCTYPE = SR.PRESCTYPE)
       AND (SERVICE_DATE IS NULL AND SERVICE_RESULT IS NULL)
       AND DEMAND = PDEMAND
       AND IS_DOP = 0;
  END;

';


ALTER FUNCTION mir.demand_delete_schedule(pdemand character, pschedule character) OWNER TO postgres;

--
-- TOC entry 1653 (class 1255 OID 16996)
-- Dependencies: 5396 14
-- Name: demand_get_pacient_priem_in_date(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_get_pacient_priem_in_date(plpu character, ppeople character, pstarton date) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES VARCHAR(10);
  BEGIN
    V_RES := NULL;
    select count(si.oid)
      into V_RES
      from mir.schedule_info si
     where si.PEOPLE = PPEOPLE
       and si.LPU = PLPU
       and si.STARTON <= PSTARTON
       and si.STARTON >= DATE_TRUNC(''day'', PSTARTON); 
       IF (V_RES = ''0'') THEN V_RES := '''';
       END IF;
   RETURN  V_RES;
  END;

';


ALTER FUNCTION mir.demand_get_pacient_priem_in_date(plpu character, ppeople character, pstarton date) OWNER TO postgres;

--
-- TOC entry 1654 (class 1255 OID 16997)
-- Dependencies: 5396 14
-- Name: demand_is_extr(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_is_extr(pdemand character) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT NULL
                FROM MIR.SCHEDULE_INFO S, MIR.DEMAND_SCHEDULE DS
               WHERE DS.SCHEDULE = S.OID
                 AND DS.DEMAND = PDEMAND
                 AND S.STATE =
                     MIR.SCHEDULE_GET_CN_SCHEDULESTATE_EXTRALINE) LOOP
      RETURN 1;
    END LOOP;
    RETURN 0;
  END;

';


ALTER FUNCTION mir.demand_is_extr(pdemand character) OWNER TO postgres;

--
-- TOC entry 1655 (class 1255 OID 16998)
-- Dependencies: 5396 14
-- Name: demand_update_demand(character, character, character, character, character, character, numeric, character, numeric, character varying, character, character varying, character varying, character varying, character varying, character varying, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION demand_update_demand(poid character, ppeople character, plpu_from character, plpu_to character, psysuser character, psysuser_regist character, pstate_id numeric, ppresctype_from character, ppovtor numeric, pdiag character varying, preason character, preason_str character varying, pzav_fio character varying, pzav_tel character varying, padd_info character varying, pnumberdemand character varying DEFAULT NULL::character varying, pdtdemand date DEFAULT NULL::date) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID MIR.DEMAND.OID%TYPE;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.NEW_UUID();
      INSERT INTO MIR.DEMAND
        (OID,
         PEOPLE,
         LPU_FROM,
         LPU_TO,
         SYSUSER,
         SYSUSER_REGIST,
         REGIST_DATE,
         STATE_ID,
         PRESCTYPE_FROM,
         POVTOR,
         DIAG,
         REASON,
         REASON_STR,
         ZAV_FIO,
         ZAV_TEL,
         ADD_INFO,
         NUMBERDEMAND,
         DATEDEMAND)
      VALUES
        (V_OID,
         PPEOPLE,
         PLPU_FROM,
         PLPU_TO,
         PSYSUSER,
         PSYSUSER_REGIST,
         CURRENT_TIMESTAMP,
         PSTATE_ID, --пока ставим сразу подтвержденная
         PPRESCTYPE_FROM,
         PPOVTOR,
         PDIAG,
         PREASON,
         PREASON_STR,
         PZAV_FIO,
         PZAV_TEL,
         PADD_INFO,
         PNUMBERDEMAND,
         PDTDEMAND);
    ELSE
      UPDATE MIR.DEMAND
         SET PEOPLE         = PPEOPLE,
             LPU_FROM       = PLPU_FROM,
             LPU_TO         = PLPU_TO,
             SYSUSER        = PSYSUSER,
             SYSUSER_REGIST = PSYSUSER_REGIST,
             STATE_ID       = PSTATE_ID, --PSTATE_ID,  пока ставим сразу подтвержденная
             PRESCTYPE_FROM = PPRESCTYPE_FROM,
             POVTOR         = PPOVTOR,
             DIAG           = PDIAG,
             REASON         = PREASON,
             REASON_STR     = PREASON_STR,
             ZAV_FIO        = PZAV_FIO,
             ZAV_TEL        = PZAV_TEL,
             ADD_INFO       = PADD_INFO,
             NUMBERDEMAND   = PNUMBERDEMAND,
             DATEDEMAND     = PDTDEMAND
      
       WHERE OID = POID;
      V_OID := POID;
    END IF;
    RETURN V_OID;
  END;

';


ALTER FUNCTION mir.demand_update_demand(poid character, ppeople character, plpu_from character, plpu_to character, psysuser character, psysuser_regist character, pstate_id numeric, ppresctype_from character, ppovtor numeric, pdiag character varying, preason character, preason_str character varying, pzav_fio character varying, pzav_tel character varying, padd_info character varying, pnumberdemand character varying, pdtdemand date) OWNER TO postgres;

--
-- TOC entry 1658 (class 1255 OID 16999)
-- Dependencies: 5396 14
-- Name: diag_tr_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION diag_tr_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_content TEXT;
  v_visit_id char(36);
  v_presc_id char(36);
  v_kind_id char(36);
  v_type_id char(36);
  v_text char(2000);
  v_oid char(36);
  v_diag_kind varchar(2000);
  v_diag_type varchar(2000);
  v_mdoc_id char(36);
  v_oid_ibmdoc char(36);
  v_presc_decsription varchar(2000);
BEGIN

  v_presc_id:=new.presc_id;
  v_visit_id:=new.visit_id;
  v_kind_id:=new.kind_id;
  v_type_id:=new.type_id;
  v_mdoc_id:=new.mdoc_id;
  v_text:=new.text;
  v_oid:=new.id;
  ---

  SELECT mk.oid
  INTO v_oid_ibmdoc
  FROM mir.ib_mkab mk
  WHERE mk.presc_id = v_presc_id
        AND mk.mdoc_id = v_mdoc_id;
  ---

  SELECT dk.name
  INTO v_diag_type
  FROM mir.diag_kind dk
  WHERE dk.id = v_kind_id;
  ---

  SELECT dt.name
  INTO v_diag_kind
  FROM mir.diag_type dt
  WHERE dt.id = v_type_id;

  v_presc_decsription:=(COALESCE(v_diag_type, '''') || '' '' || COALESCE(v_diag_kind, '''') || '' '' ||
    COALESCE(v_text, ''''));

  if (v_oid_ibmdoc is NULL) then
    v_oid_ibmdoc:=mir.new_uuid();
    INSERT INTO mir.ib_mkab(OID, presc_decsription_id, diag_text, mdoc_id, visit_id, presc_id, presc_decsription)
    VALUES (v_oid_ibmdoc, v_oid, v_text, v_mdoc_id, v_visit_id, v_presc_id, v_presc_decsription);
    ELSE
    UPDATE mir.ib_mkab
    SET presc_decsription_id = v_oid,
        diag_text = v_text,
        diag_kind_name = v_diag_kind,
        diag_type_name = v_diag_type,
        mdoc_id = v_mdoc_id,
        visit_id = v_visit_id,
        presc_id = v_presc_id,
        presc_decsription = v_presc_decsription
    WHERE OID = v_oid_ibmdoc;
  end if;

  return new;
END;
';


ALTER FUNCTION mir.diag_tr_after() OWNER TO postgres;

--
-- TOC entry 1659 (class 1255 OID 17000)
-- Dependencies: 5396 14
-- Name: diapazon(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION diapazon(v character varying) RETURNS TABLE(id text)
    LANGUAGE plpgsql
    AS '
DECLARE
  diapaz text ;
  n1 VARCHAR;
  n2 varchar;
  i integer;
  ssql varchar;
  lflag integer;
  l1 integer; -- 0  эни 1 нечет 2 чёт
  l2 integer;
  s1 varchar(50);
BEGIN
if v is null or v = '''' then return query EXECUTE  ''select cast (-1 as text) as id''; 
else


l1:=0;
l2:=0;

n1:='''';
n2:='''';
diapaz:=v;
ssql:='''';
s1:='''';
for i in 1..char_length(diapaz) loop
lflag:=0;

   if SUBSTRING(diapaz,i,1)=''#'' then -- четное
   if l2 = 0 THEN
    l1:=2;
    l2:=1;
    s1:='' where 0 = mod(t.id,2) '';
   else
    l1:=0;
    l2:=0;
  --  s1:='''';
   end if;
    
   end if;

   if SUBSTRING(diapaz,i,1)=''$'' then -- НЕ чётное
   if l2 = 0 THEN
    l1:=1;
    l2:=1;
     s1:='' where 1 = mod(t.id,2) '';
   
    else
    l1:=0;
    l2:=0;
--    s1:='''';
    
    end if;
   end if;

	if SUBSTRING(diapaz,i,1)=''-'' then
		n2:=n1;
		n1:='''';
	end if;
    
    
    
    -----------------------------------
            if i=char_length(diapaz) then
	             lflag:=1;
		             if char_length(n1)<6 /*and COALESCE(SUBSTRING( SUBSTRING(diapaz,i,1),''Y?([0-9]{1,1})''),''!'')<>''!''*/ then
	    		         n1:=n1|| SUBSTRING(diapaz,i,1);
		             end IF;
	            end if; 
-------------------------------------------                
    	if SUBSTRING(diapaz,i,1)='','' then      lflag:=1;    end if; 
    
-----------------------------------
    
    
    
    if SUBSTRING(diapaz,i,1)<>''-'' and SUBSTRING(diapaz,i,1)<>''$'' and SUBSTRING(diapaz,i,1)<>''#''  then 
--    if SUBSTRING(diapaz,i,1) ilike ''-$#''  then 
    	begin
       
	        
                if lflag>0 then 
                	begin
                     if char_length(ssql)>0 then    ssql:=ssql||'' union all '';   end if;
                     if char_length(n2)<1 or n2 is null THEN
                        ssql:=ssql||'' select cast(''''''||COALESCE(n1,''0'')||'''''' as text) '';
                        else
                        ssql:=ssql||
/*			''select cast(n as text) FROM( 
            	 WITH RECURSIVE t(n) AS ( VALUES (''||n2||'') 
                	 UNION ALL 
                 SELECT n+1 FROM t WHERE n < ''||n1||'' ) 
                   SELECT n FROM t ''||s1||'' ) t1 '';
*/                  
'' SELECT cast(t.id as text)  from generate_series(''||n2||'',''||n1||'') as t(id) ''||s1||'' '';
                   end if;
                   n1:='''';
                   n2:='''';
                     s1:='''';
                 end;
                     else
                          begin
                             if char_length(n1)<6 /*and COALESCE(SUBSTRING( SUBSTRING(diapaz,i,1),''Y?([0-9]{1,1})''),''!'')<>''!''*/ then
                                 n1:=n1|| SUBSTRING(diapaz,i,1);
                             end IF;
                          end;---  привет
                          
                      end if;
                     end;
                     end if;
  end loop;                   
  --ssql:=''select cast(''''-6e1'''' as text) as id'';
return query EXECUTE ssql;
--EXCEPTION when others THEN
--return query EXECUTE ''select cast(''''-1'''' as text) as id'';
end if;
END;
';


ALTER FUNCTION mir.diapazon(v character varying) OWNER TO postgres;

--
-- TOC entry 1660 (class 1255 OID 17001)
-- Dependencies: 5396 14
-- Name: diapazon_new(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION diapazon_new(v character varying) RETURNS TABLE(id text)
    LANGUAGE plpgsql
    AS '
DECLARE
  diapaz text ;
  n1 VARCHAR;
  n2 varchar;
  i integer;
  ssql varchar;
  lflag integer;
  l1 integer; -- 0  эни 1 нечет 2 чёт
  l2 integer;
  s1 varchar(50);
  pattern varchar;
  one_elem_pattern varchar := E''(((\\$|\#){0,1}\\d{1,}-\\d{1,})|(\\d{1,}[0-9а-яА-Я/.]{0,}))'';
BEGIN

select E''^'' || one_elem_pattern || E''(,'' || one_elem_pattern || E'')*$'' into pattern;

if v is null or v = '''' then return query EXECUTE  ''select cast (-1 as text) as id'';
elseif NOT(v ~ pattern) then return;
else


l1:=0;
l2:=0;

n1:='''';
n2:='''';
diapaz:=v;
ssql:='''';
s1:='''';
for i in 1..char_length(diapaz) loop
lflag:=0;

   if SUBSTRING(diapaz,i,1)=''#'' then -- четное
   if l2 = 0 THEN
    l1:=2;
    l2:=1;
    s1:='' where 0 = mod(t.id,2) '';
   else
    l1:=0;
    l2:=0;
  --  s1:='''';
   end if;
    
   end if;

   if SUBSTRING(diapaz,i,1)=''$'' then -- НЕ чётное
   if l2 = 0 THEN
    l1:=1;
    l2:=1;
     s1:='' where 1 = mod(t.id,2) '';
   
    else
    l1:=0;
    l2:=0;
--    s1:='''';
    
    end if;
   end if;

	if SUBSTRING(diapaz,i,1)=''-'' then
		n2:=n1;
		n1:='''';
	end if;
    
    
    
    -----------------------------------
            if i=char_length(diapaz) then
	             lflag:=1;
		             if char_length(n1)<6 /*and COALESCE(SUBSTRING( SUBSTRING(diapaz,i,1),''Y?([0-9]{1,1})''),''!'')<>''!''*/ then
	    		         n1:=n1|| SUBSTRING(diapaz,i,1);
		             end IF;
	            end if; 
-------------------------------------------                
    	if SUBSTRING(diapaz,i,1)='','' then      lflag:=1;    end if; 
    
-----------------------------------
    
    
    
    if SUBSTRING(diapaz,i,1)<>''-'' and SUBSTRING(diapaz,i,1)<>''$'' and SUBSTRING(diapaz,i,1)<>''#''  then 
--    if SUBSTRING(diapaz,i,1) ilike ''-$#''  then 
    	begin
       
	        
                if lflag>0 then 
                	begin
                     if char_length(ssql)>0 then    ssql:=ssql||'' union all '';   end if;
                     if char_length(n2)<1 or n2 is null THEN
                        ssql:=ssql||'' select cast(''''''||COALESCE(n1,''0'')||'''''' as text) '';
                        else
                        ssql:=ssql||
/*			''select cast(n as text) FROM( 
            	 WITH RECURSIVE t(n) AS ( VALUES (''||n2||'') 
                	 UNION ALL 
                 SELECT n+1 FROM t WHERE n < ''||n1||'' ) 
                   SELECT n FROM t ''||s1||'' ) t1 '';
*/                  
'' SELECT cast(t.id as text)  from generate_series(''||n2||'',''||n1||'') as t(id) ''||s1||'' '';
                   end if;
                   n1:='''';
                   n2:='''';
                     s1:='''';
                 end;
                     else
                          begin
                             if char_length(n1)<6 /*and COALESCE(SUBSTRING( SUBSTRING(diapaz,i,1),''Y?([0-9]{1,1})''),''!'')<>''!''*/ then
                                 n1:=n1|| SUBSTRING(diapaz,i,1);
                             end IF;
                          end;---  привет
                          
                      end if;
                     end;
                     end if;
  end loop;                   
  --ssql:=''select cast(''''-6e1'''' as text) as id'';
return query EXECUTE ssql;
--EXCEPTION when others THEN
--return query EXECUTE ''select cast(''''-1'''' as text) as id'';
end if;
END;
';


ALTER FUNCTION mir.diapazon_new(v character varying) OWNER TO postgres;

--
-- TOC entry 1661 (class 1255 OID 17002)
-- Dependencies: 5396 14
-- Name: diapazon_new_kov(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION diapazon_new_kov(v character varying) RETURNS TABLE(id text)
    LANGUAGE plpgsql
    AS '
DECLARE
  diapaz text ;
  i integer;
 vdd INTEGER;
 ard varchar[];
 rad varchar[];
tar varchar[];
tl integer;	
tu integer;
aa VARCHAR;
BEGIN

if v is null or v = '''' then return query EXECUTE  ''select cast (-1 as text) as id'';

else
 
diapaz = v;
i = 0;
 ard = regexp_split_to_array(diapaz, E'','');
FOR i IN array_lower(ard,1) .. array_upper(ard,1) LOOP
	ard[i] = TRIM(ard[i]);
--проверка на (1, 1а)
	IF ard[i] ~ E''^([0-9]{1,}[0-9а-яА-Я/.]{0,})$'' then
    	rad[i] = ard[i];
    
	elseif ard[i] ~ E''^[0-9]{1,}-[0-9]{1,}$'' then
    
  	 tl	= substring(ard[i] from ''([0-9]*)-'');	
   	 tu = substring(ard[i] from ''-([0-9]*)'');
        		
       for i in tl ..tu loop 
     	 tar[i] = i;
         end loop;
         
     elseif ard[i] ~ E''^(\\$){0,1}\\d{1,}-\\d{1,}$'' then --четное
    
    	tl	= substring(ard[i] from E''\\$([0-9]*)-'');	
   	    tu = substring(ard[i] from ''-([0-9]*)'');
     	for i in tl ..tu loop 
           if i%2 = 0 then
           	tar[i] = i;
           end if;
           
         end loop;
     
     elseif ard[i] ~ E''^((\#){0,1}\\d{1,}-\\d{1,})$'' then --нечетное
     
 			tl	= substring(ard[i] from E''#([0-9]*)-'');	
   	   		tu = substring(ard[i] from ''-([0-9]*)'');
            for i in tl ..tu loop 
               if i%2 = 1 then
                tar[i] = i;
               end if;
               
             end loop;
     
     end if;
END LOOP;


return query select cast(dd.id as text)  from unnest(array_cat(rad,tar)) as dd(id)  where dd.id is not null; 

end if;

END;
';


ALTER FUNCTION mir.diapazon_new_kov(v character varying) OWNER TO postgres;

--
-- TOC entry 1319 (class 1255 OID 60655)
-- Dependencies: 5396 14
-- Name: dicom_wl_buffer_trigger_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dicom_wl_buffer_trigger_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
    BEGIN
      new.oid = public.generate_uuid_v4();
      new.create_date = now();
      return NEW;
    END;
    ';


ALTER FUNCTION mir.dicom_wl_buffer_trigger_after() OWNER TO postgres;

--
-- TOC entry 1318 (class 1255 OID 60647)
-- Dependencies: 5396 14
-- Name: dicom_wl_log_trigger_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dicom_wl_log_trigger_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
    BEGIN
      new.oid = public.generate_uuid_v4();
      new.create_date = now();
      if (new.errorcode is null) then
        new.errorcode = -1;
      end if;
      return NEW;
    END;
    ';


ALTER FUNCTION mir.dicom_wl_log_trigger_after() OWNER TO postgres;

--
-- TOC entry 1662 (class 1255 OID 17003)
-- Dependencies: 5396 14
-- Name: dictionary_bu_ta_refresh_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dictionary_bu_ta_refresh_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  -- Created By Spasskiy S.N.
  IF NEW.OBJECTTYPE = MIR.BASE_CLASS_CN_XPO_DISTRICT_OBJ() THEN
    perform MIR.ADDR_ADD_DISTRICT_TO_LIST(NEW.OID, ''DELETE'');
  END IF;
return new;
END;

';


ALTER FUNCTION mir.dictionary_bu_ta_refresh_trg() OWNER TO postgres;

--
-- TOC entry 1665 (class 1255 OID 17004)
-- Dependencies: 5396 14
-- Name: dictionary_create_by_table(character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dictionary_create_by_table(ptable_schema character varying, ptable_name character varying, pdictionary_name character varying DEFAULT NULL::character varying, psynonym character varying DEFAULT NULL::character varying, pfomscorrelation integer DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  noid varchar(36);
BEGIN
  noid := null;
  
  if not exists ( select 1
                    from mir.dictionary d
                   where d.oid = ptable_name
                )	
  then      
    INSERT INTO 
      mir.dictionary
    (
      oid,
      name,
      synonym,
      fomscorrelation,
      dictionary_schema
    ) 
           SELECT t.table_name as oid,
           		  coalesce(pdictionary_name, t.table_name ) as name,
                  psynonym as synonym,
                  coalesce(pfomscorrelation, 0) as fomscorrelation,
                  t.table_schema as dictionary_schema
             from information_schema.tables t
            WHERE t.table_type = ''BASE TABLE''
              and t.table_name = ptable_name
              and t.table_schema = ptable_schema
	returning oid into noid;
    
    if noid is not null then   
		perform mir.dictionary_field_fill_default(noid);
    end if;
  end if;
  
  return noid;
END;
';


ALTER FUNCTION mir.dictionary_create_by_table(ptable_schema character varying, ptable_name character varying, pdictionary_name character varying, psynonym character varying, pfomscorrelation integer) OWNER TO postgres;

--
-- TOC entry 1666 (class 1255 OID 17005)
-- Dependencies: 5396 14
-- Name: dictionary_field_fill_default(character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dictionary_field_fill_default(pdictionary character varying, pfieldname character varying DEFAULT NULL::character varying, prewrite integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  r record;
  cf record;
  poid varchar;
BEGIN
  for r in (
  		   SELECT mir.guid_generate() as oid,
           		  d.oid as dictionary,
                  c.column_name as fieldname,
                  c.data_type as fieldtype,
                  c.character_maximum_length as fieldlen,
                  case
                  	when c.is_nullable = ''NO''
                    then 1
                    else 0
                  end as is_not_null,
                  case
                  	when c.column_name = mir.get_table_primary_key(t.table_schema, t.table_name)
                    then 1
                    else 0
                  end as is_primarykey,
                  case
                  	when c.column_name = mir.get_table_primary_key(t.table_schema, t.table_name)
                    then 1
                    else 0
                  end as is_hidden,
                  case
                  	when mir.get_table_fk_sql(t.table_schema, t.table_name , c.column_name) <> '''' 
                    then 1
                    else 0
                  end as is_fk,
                  case
                    when c.column_name = ''oid'' then ''Код''
                    when c.column_name = ''name'' then ''Наименование''
                    when c.column_name = ''foms_code'' then ''Код ФОМС''
                    when c.column_name = ''code'' then ''Код ФОМС''
                    when c.column_name = ''show'' then ''Видимость''
                    when c.column_name = ''name2'' then ''Измененное наименование''
                    when c.column_name = ''status'' then ''Статус''
                    when c.column_name = ''parent'' then ''Код родителя''
                    else c.column_name
                  end as caption,
                  c.character_maximum_length as width,
                  case
                  	when c.data_type in (''character'', ''character varying'', ''text'')
                    then ''left''
                    when c.data_type in (''bigint'', ''double precision'', ''integer'', ''numeric'', ''real'', ''smallint'')
                    then ''right''
                    else ''center''
                  end as align,
                  mir.get_table_fk_sql(t.table_schema, t.table_name , c.column_name) as sql,
                  c.ordinal_position as num_order
             from mir."dictionary" d
            inner join information_schema.tables t
               on d.dictionary_schema = t.table_schema
              and d.oid = t.table_name
            inner join information_schema.columns c 
               on t.table_name = c.table_name
              and t.table_schema = c.table_schema
            WHERE t.table_type=''BASE TABLE''
              and d.oid = pdictionary
              and ((c.column_name = pfieldname)
                   or
                   (pfieldname is null))
           )
  loop
      poid := null;

      for cf in ( select df.oid
                    from mir.dictionary_field df
                   where df.dictionary = r.dictionary
                     and df.fieldname = r.fieldname
      			)
      loop
      	poid := cf.oid;
      end loop;
      
      if poid is not null then
      	if (prewrite = 1) then
          UPDATE 
            mir.dictionary_field  
          SET 
            dictionary = r.dictionary,
            fieldname = r.fieldname,
            fieldtype = r.fieldtype,
            fieldlen = r.fieldlen,
            is_not_null = r.is_not_null,
            is_primarykey = r.is_primarykey,
            is_hidden = r.is_hidden,
            is_fk = r.is_fk,
            caption = r.caption,
            width = r.width,
            align = r.align,
            sql = r.sql,
            num_order = r.num_order
          WHERE 
            oid = poid;	
        end if;
      else
      	INSERT INTO 
              mir.dictionary_field
            (
              oid,
              dictionary,
              fieldname,
              fieldtype,
              fieldlen,
              is_not_null,
              is_primarykey,
              is_hidden,
              is_fk,
              caption,
              width,
              align,
              sql,
              num_order
            )
        values
        	(
              r.oid,
              r.dictionary,
              r.fieldname,
              r.fieldtype,
              r.fieldlen,
              r.is_not_null,
              r.is_primarykey,
              r.is_hidden,
              r.is_fk,
              r.caption,
              r.width,
              r.align,
              r.sql,
              r.num_order  
            );
      end if;
  end loop;
  
/*
  			INSERT INTO 
              mir.dictionary_field
            (
              oid,
              dictionary,
              fieldname,
              fieldtype,
              fieldlen,
              is_not_null,
              is_primarykey,
              is_hidden,
              is_fk,
              caption,
              width,
              align,
              sql,
              num_order
            )     
           SELECT mir.guid_generate() as oid,
           		  d.oid as dictionary,
                  c.column_name as fieldname,
                  c.data_type as fieldtype,
                  c.character_maximum_length as fieldlen,
                  case
                  	when c.is_nullable = ''NO''
                    then 1
                    else 0
                  end as is_not_null,
                  case
                  	when c.column_name = mir.get_table_primary_key(t.table_schema, t.table_name)
                    then 1
                    else 0
                  end as is_primary_key,
                  case
                  	when c.column_name = mir.get_table_primary_key(t.table_schema, t.table_name)
                    then 1
                    else 0
                  end as is_hidden,
                  case
                  	when mir.get_table_fk_sql(t.table_schema, t.table_name , c.column_name) <> '''' 
                    then 1
                    else 0
                  end as is_fk,
                  case
                    when c.column_name = ''oid'' then ''Код''
                    when c.column_name = ''name'' then ''Наименование''
                    when c.column_name = ''foms_code'' then ''Код ФОМС''
                    when c.column_name = ''code'' then ''Код ФОМС''
                    when c.column_name = ''show'' then ''Видимость''
                    when c.column_name = ''name2'' then ''Измененное наименование''
                    when c.column_name = ''status'' then ''Статус''
                    when c.column_name = ''parent'' then ''Код родителя''
                    else c.column_name
                  end as caption,
                  c.character_maximum_length as width,
                  case
                  	when c.data_type in (''character'', ''character varying'', ''text'')
                    then ''left''
                    when c.data_type in (''bigint'', ''double precision'', ''integer'', ''numeric'', ''real'', ''smallint'')
                    then ''right''
                    else ''center''
                  end as align,
                  mir.get_table_fk_sql(t.table_schema, t.table_name , c.column_name) as sql,
                  c.ordinal_position as num_order
             from mir."dictionary" d
            inner join information_schema.tables t
               on d.dictionary_schema = t.table_schema
              and d.oid = t.table_name
            inner join information_schema.columns c 
               on t.table_name = c.table_name
              and t.table_schema = c.table_schema
            WHERE t.table_type=''BASE TABLE''
              and d.oid = pdictionary;*/
END;
';


ALTER FUNCTION mir.dictionary_field_fill_default(pdictionary character varying, pfieldname character varying, prewrite integer) OWNER TO postgres;

--
-- TOC entry 1667 (class 1255 OID 17007)
-- Dependencies: 5396 14
-- Name: dictionary_get_sql(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dictionary_get_sql(pdictionary character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  cf record;
  sql varchar(4000);
  table_name varchar(36);
  table_schema varchar(32);
  sfields varchar(4000);
  primary_key varchar(32);
  parent_key varchar(32);
BEGIN
  sql := ''select null as oid'';
  table_name := null;
    
  for c in (select d.oid,
                   d.dictionary_schema,
                   mir.get_table_primary_key(d.dictionary_schema, d.oid) as primary_key, 
                   mir.get_table_parent_key(d.dictionary_schema, d.oid) as parent_key 
                from mir."dictionary" d
               where d.oid = pdictionary
             )
  loop
      table_name := trim(c.oid);
      table_schema := trim(c.dictionary_schema);
      primary_key := c.primary_key;
      parent_key := c.parent_key;
  end loop;

  if (table_name is not null) and (table_schema is not null) then
    sfields := null;
    
    if ( ( primary_key is not null ) and ( primary_key <> '''' ) and
         ( parent_key is not null ) and ( parent_key <> '''' ) ) then
      -- древовидный справочник
      sql := ''      WITH RECURSIVE q AS 
      (           
            select p.''||primary_key||'' as oid, 
                   p.''||parent_key||'' as parent,
                   0 as level,
                   ''''''''||coalesce(p.name,'''''''')||''''_''''||p.''||primary_key||'' as ord
              from ''||table_schema||''.''||table_name||'' as p
             where p.''||parent_key||'' is null
            
             union all
            
            select p.''||primary_key||'' as oid, 
                   p.''||parent_key||'' as parent,
                   q.level + 1 as level,
                   q.ord||''''_''''||coalesce(p.name,'''''''')||''''_''''||p.''||primary_key||'' as ord  
              from ''||table_schema||''.''||table_name||'' as p
             inner join q as q
                on q.oid = p.''||parent_key||''
      )'';
      
      for cf in (select string_agg(t.fieldname, '', 
             '') as fields
                   from (
                         select case
                                  when df.is_fk = 1
                                  then ''( select t.name from ( ''||df.sql||'' ) as t where t.oid = p.''||df.fieldname||'')''  
                                  else ''p.''||df.fieldname
                                end || '' as '' ||
                                case 
                                  when df.fieldname in ( ''parent'', ''level'', ''isLeaf'', ''expanded'', ''loaded'', ''ord'' ) --Зарезервированные названия для jqgrid
                                  then df.fieldname||''_name''
                                  else df.fieldname
                                end as fieldname,
                                df.num_order
                           from mir.dictionary_field df
                          where df.dictionary = pdictionary
                          order by df.num_order
                        ) t
                )
      loop
        sfields := cf.fields;
      end loop;
      
      if sfields is not null then
        sql := sql ||''
      select ''||sfields||'',
             q.parent,
             cast(q.level as varchar) as level, 
             case
               when exists ( select 1
                               from ''||table_schema||''.''||table_name||'' as pp
                              where pp.''||parent_key||'' = p.''||primary_key||''
                           )
               then false
               else true
             end as isLeaf,
             true as expanded,
             true as loaded,
             q.ord 
        from ''||table_schema||''.''||table_name||'' as p
       inner join q as q
          on q.oid = p.''||primary_key;
      end if;
      
    else     
      -- линейный справочник
      for cf in (select string_agg(t.fieldname, '', '') as fields
                   from (
                         select case
                               when df.is_fk = 1
                                  then ''( select t.name from ( ''||df.sql||'' ) as t where t.oid = ''||df.fieldname||'') as ''||df.fieldname 
                                  else df.fieldname
                                end as fieldname,
                                df.num_order
                           from mir.dictionary_field df
                          where df.dictionary = pdictionary
                          order by df.num_order
                        ) t
                )
      loop
        sfields := cf.fields;
      end loop;
      
      if sfields is not null then
        sql := ''select ''||sfields||'' from ''||table_schema||''.''||table_name;
      end if;
    end if;
  end if;
    
  return sql;
END;
';


ALTER FUNCTION mir.dictionary_get_sql(pdictionary character varying) OWNER TO postgres;

--
-- TOC entry 1668 (class 1255 OID 17008)
-- Dependencies: 5396 14
-- Name: dictionary_get_sql_record(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION dictionary_get_sql_record(pdictionary character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  sql varchar(4000);
  table_name varchar(36);
  table_schema varchar(32);
  sfields varchar(4000);
  cf record;
BEGIN
	for c in (select d.oid,
    				 d.dictionary_schema
                from mir."dictionary" d
               where d.oid = pdictionary
             )
	loop
      table_name := trim(c.oid);
      table_schema := trim(c.dictionary_schema);
    end loop;
        
    -- пришлось повторить код из dictionary_get_sql так как для зависимых таблиц выбираем значение, а не наименование
    sql := ''select null as oid'';

	if (table_name is not null) and (table_schema is not null) then
      sfields := null;
      for cf in (select string_agg(t.fieldname, '', '') as fields
				   from (
                         select df.fieldname,
                                df.num_order
                           from mir.dictionary_field df
                          where df.dictionary = pdictionary
                          order by df.num_order
                  		) t
                )
      loop
      	sfields := cf.fields;
      end loop;
      
      if sfields is not null then
      	sql := ''select ''||sfields||'' from ''||table_schema||''.''||table_name||
    		'' where ''||coalesce( mir.get_table_primary_key(table_schema, table_name), ''oid'')||'' = :oid'';
      end if;
    end if;
    
    return sql;
END;
';


ALTER FUNCTION mir.dictionary_get_sql_record(pdictionary character varying) OWNER TO postgres;

--
-- TOC entry 1669 (class 1255 OID 17009)
-- Dependencies: 5396 14
-- Name: district_aiud_ta_refresh_process_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION district_aiud_ta_refresh_process_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  perform MIR.ADDR_PROCESS_DISTRICT_LIST();
return new;
END;

';


ALTER FUNCTION mir.district_aiud_ta_refresh_process_trg() OWNER TO postgres;

--
-- TOC entry 1670 (class 1255 OID 17010)
-- Dependencies: 5396 14
-- Name: district_biud_ta_refresh_init_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION district_biud_ta_refresh_init_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  perform MIR.ADDR_INIT_DISTRICT_LIST();
return new;
END;

';


ALTER FUNCTION mir.district_biud_ta_refresh_init_trg() OWNER TO postgres;

--
-- TOC entry 1671 (class 1255 OID 17011)
-- Dependencies: 5396 14
-- Name: district_biud_ta_refresh_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION district_biud_ta_refresh_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  IF ( TG_OP = ''INSERT'' ) OR ( ( TG_OP = ''UPDATE'' ) AND NEW.HELPTYPE <> OLD.HELPTYPE 
     ) THEN
    perform MIR.ADDR_ADD_DISTRICT_TO_LIST(NEW.OID);
  ELSIF ( TG_OP = ''DELETE'' ) THEN
    perform MIR.ADDR_ADD_DISTRICT_TO_LIST(OLD.OID, ''DELETE'');
  END IF;
return new;
END;

';


ALTER FUNCTION mir.district_biud_ta_refresh_trg() OWNER TO postgres;

--
-- TOC entry 1672 (class 1255 OID 17012)
-- Dependencies: 5396 14
-- Name: districtstreet_aiud_ta_refresh_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION districtstreet_aiud_ta_refresh_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  IF ( TG_OP = ''INSERT'' ) OR ( TG_OP = ''UPDATE'' ) THEN
    perform MIR.ADDR_UPDATE_TA_DISTRICT_KLADR(NEW.DISTRICT,
                                          NEW.TKLADR,
                                          NEW.INCLUDEHOUSE,
                                          NEW.EXCLUDEHOUSE,
                                          NEW.STARTHOUSE,
                                          NEW.ENDHOUSE);
  ELSIF ( TG_OP = ''DELETE'' ) THEN
    perform MIR.ADDR_DELETE_TA_DISTRICT_KLADR(OLD.DISTRICT, OLD.TKLADR);
  END IF;
return new;
END;

';


ALTER FUNCTION mir.districtstreet_aiud_ta_refresh_trg() OWNER TO postgres;

--
-- TOC entry 1675 (class 1255 OID 17013)
-- Dependencies: 5396 14
-- Name: do_arrange_sroky(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION do_arrange_sroky(pmdoc_id character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    v_nres integer;
    v_sroky_id hosp.sroky.oid%type;
    v_peresel_id hosp.peresel.oid%type;
  begin
    v_nres := 0;
    v_sroky_id := null;
    v_peresel_id := null;
    
    update hosp.sroky s
       set vyb = 4,
           data3 = pdata1
     where s.oid in
           ( select ss.oid
               from hosp.sroky ss
              where ss.mdoc_id = pmdoc_id
                and ss.pryb in (3, 7)
              order by ss.create_date, ss.pryb
              limit 1
           );
           
    INSERT INTO 
      hosp.sroky
    (
      oid,
      mdoc_id,
      pryb,
      vyb,
      kol,
      data1,
      data2,
      data3,
      vyb_id,
      create_date
    ) 
    VALUES (
      mir.guid_generate(),
      pmdoc_id,
      4,
      0,
      pkol,
      pdata1,
      pdata2,
      pdata2,
      null,
      CURRENT_TIMESTAMP
    ) returning oid into v_sroky_id;       
    
    --UPDATE TKARTA SET FP_TEK_COC=2 WHERE FK_ID=pFK_PACID;

    INSERT INTO hosp.peresel (oid, room_id, mdoc_id, data1, data2, docobsl_id) 
        VALUES (
          mir.guid_generate(),
          proom_id,
          pmdoc_id,
          pdata1,
          pdata2,
          pdocobsl_id
        ) returning oid into v_peresel_id;  

    --DO_ARRANGE_SROKY(pFK_PACID);

    return 1;
  end;
  ';


ALTER FUNCTION mir.do_arrange_sroky(pmdoc_id character) OWNER TO postgres;

--
-- TOC entry 1676 (class 1255 OID 17014)
-- Dependencies: 5396 14
-- Name: do_table_partial(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION do_table_partial(pschema_name character varying, ptable_name character varying, pfield_name character varying) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
  declare
    c record;
    ptext text;
    pRecovery_FK_text text;
begin
  pRecovery_FK_text := '''';
  
  RETURN NEXT ''---- Отключаем внешние ключи, которые ссылаются на ''||quote_ident(pschema_name)||''.''||quote_ident(ptable_name)||'', и сохраняем скрипт по их созданию в конце'';
  FOR C IN (
  SELECT tc.constraint_name,
         tc.table_name,
         tc.table_schema,
         kcu.column_name,
         ccu.table_name AS foreign_table_name,
         ccu.table_schema AS foreign_table_schema,
         ccu.column_name AS foreign_column_name,
     CASE pg_constraint.contype
            WHEN ''c'' THEN ''CHECK''
            WHEN ''f'' THEN ''FOREIGN KEY''
            WHEN ''p'' THEN ''PRIMARY KEY''
            WHEN ''u'' THEN ''UNIQUE''
          END AS "constraint_type",
          CASE WHEN pg_constraint.condeferrable = ''f'' THEN 0 ELSE 1 END AS is_deferrable,
          CASE WHEN pg_constraint.condeferred = ''f'' THEN 0 ELSE 1 END AS is_deferred,
--          array_to_string(pg_constraint.conkey, '' '') AS constraint_key,
          CASE confupdtype
            WHEN ''a'' THEN ''NO ACTION''
            WHEN ''r'' THEN ''RESTRICT''
            WHEN ''c'' THEN ''CASCADE''
            WHEN ''n'' THEN ''SET NULL''
            WHEN ''d'' THEN ''SET DEFAULT''
          END AS on_update,
          CASE confdeltype
            WHEN ''a'' THEN ''NO ACTION''
            WHEN ''r'' THEN ''RESTRICT''
            WHEN ''c'' THEN ''CASCADE''
            WHEN ''n'' THEN ''SET NULL''
            WHEN ''d'' THEN ''SET DEFAULT''
          END AS on_delete,
          CASE confmatchtype
            WHEN ''u'' THEN ''UNSPECIFIED''
            WHEN ''f'' THEN ''FULL''
            WHEN ''p'' THEN ''PARTIAL''
          END AS match_type
  FROM information_schema.table_constraints AS tc
       JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name
       JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name
       LEFT JOIN  pg_constraint ON pg_constraint.conname = tc.constraint_name
  WHERE 1 = 1
        and tc.constraint_type = ''FOREIGN KEY''
        AND ccu.table_name = ptable_name
        and ccu.table_schema = pschema_name)
  LOOP
    ---- Отключаем внешний ключ
    ptext = ''ALTER TABLE '' ||c.table_schema || ''.''||c.table_name || '' DROP CONSTRAINT '' ||c.constraint_name || ''  RESTRICT;'';
    RETURN NEXT ptext;
    EXECUTE ptext;
    
    ---- Сохраняем скрипт по созданию внешнего ключа
    pRecovery_FK_text= pRecovery_FK_text ||''ALTER TABLE '' ||c.table_schema || ''.''||c.table_name ||
    ''  ADD CONSTRAINT ''||c.constraint_name||'' FOREIGN KEY (''||c.column_name||'')''||
    ''  REFERENCES ''||c.foreign_table_schema||''.''||c.foreign_table_name||''(''||c.foreign_column_name||'')'' ||
    '' ON DELETE ''|| c.on_delete ||'' ON UPDATE ''|| c.on_update||'' NOT DEFERRABLE;
    '';
    --RETURN NEXT pRecover_FK_text;

  END LOOP;
      	
  RETURN NEXT ''---- Копируем данные таблицы во временную'';
  ptext = ''CREATE TABLE '' ||quote_ident(pschema_name)||''.temp_''||quote_ident(ptable_name)|| '' AS SELECT * FROM '' ||quote_ident(pschema_name)||''.''||quote_ident(ptable_name)|| '';'';
  RETURN NEXT ptext;
  EXECUTE ptext;
  
  RETURN NEXT ''---- Очищаем таблицу'';
  ptext = ''TRUNCATE TABLE '' ||quote_ident(pschema_name)||''.''||quote_ident(ptable_name)|| '';'';
  RETURN NEXT ptext;
  EXECUTE ptext;
    
  RETURN NEXT ''---- Вешаем триггер для партицирования таблицы'';
  ptext = ''CREATE TRIGGER "''||ptable_name||''_part_tr" BEFORE INSERT 
           ON '' ||quote_ident(pschema_name)||''.''||quote_ident(ptable_name)|| '' FOR EACH ROW 
           EXECUTE PROCEDURE "mir"."table_partition_by_lpu_trigger_function"('''''' ||pschema_name||'''''',''''''||ptable_name|| '''''');'';
  RETURN NEXT ptext;
  EXECUTE ptext;
    
  RETURN NEXT ''---- Заливаем обратно все данные в мастер-таблицу'';
  ptext = ''INSERT INTO '' ||quote_ident(pschema_name)||''.''||quote_ident(ptable_name)|| '' SELECT * FROM '' ||quote_ident(pschema_name)||''.temp_''||quote_ident(ptable_name)|| '';'';
  RETURN NEXT ptext;
  EXECUTE ptext;
    
  RETURN NEXT ''---- Удаляем временную таблицу'';
  ptext = ''DROP TABLE '' ||quote_ident(pschema_name)||''.temp_''||quote_ident(ptable_name)|| '';'';
  RETURN NEXT ptext;
  EXECUTE ptext;
  
  RETURN NEXT ''---- Заново создаём внешние ключи'';
  RETURN NEXT pRecovery_FK_text;
  EXECUTE pRecovery_FK_text;
  
  RETURN NEXT ''commit;'';
  EXECUTE ''commit;'';
end
';


ALTER FUNCTION mir.do_table_partial(pschema_name character varying, ptable_name character varying, pfield_name character varying) OWNER TO postgres;

--
-- TOC entry 1677 (class 1255 OID 17015)
-- Dependencies: 5396 14
-- Name: docobsl_get_new_num(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION docobsl_get_new_num(potdel character, pmdoc_type_id character) RETURNS TABLE(docobsl_id character, mdoc_num integer)
    LANGUAGE plpgsql
    AS '
  declare
    v_docobsl mir.docobsl.oid%type;
    v_mdoc_num_type_id integer;
    c record;
    v_year integer;
    v_num_ib integer;
    v_num_ib_t integer;
    c1 record;
    c2 record;
    plpu mir.docobsl.lpu%type;
  begin
    for c in ( select mdt.num_type_id
                 from mir.mdoc_type mdt
                where mdt.id = pmdoc_type_id
             )
    loop
        v_mdoc_num_type_id := c.num_type_id;
    end loop;
    
    v_year := mir.get_yearwork();
    v_num_ib := -1;
    
    SELECT o.lpu INTO plpu FROM mir.otdel o where o.oid = potdel;
    
    loop
    -- Начало блокировки
    --создаем указатель на блокировку
    --    v_lock_id := dbms_utility.get_hash_value(v_lock_name, 0, 1024);
        --проверка на наличие блокировки
    --    if (dbms_lock.request(id                => v_lock_id,
    --                        lockmode          => dbms_lock.x_mode,
    --                        timeout           => 0,
    --                        release_on_commit => TRUE) = 0) then
        
    
        for c1 in ( select mdln.num
                      from mir.mdoc_last_number mdln
                     where mdln.otdel = potdel
                       and mdln.mdoc_type = pmdoc_type_id
                       and mdln."year" = v_year
                  )
        loop
          v_num_ib := c1.num;
        end loop;
    
        if ( v_num_ib = -1 ) or ( v_num_ib is null ) then
          -- получаем последний номер на основе данных docobsl
          for c2 in ( select max( dob.num_doc ) as num_doc
                        from mir.docobsl dob
                       where dob.lpu = plpu
                         and dob.year_doc = v_year
                         and dob.mdoc_type_id in 
                             ( select mdt.id
                                 from mir.mdoc_type mdt
                                where mdt.num_type_id = v_mdoc_num_type_id )
                    )
          loop
            v_num_ib_t := c2.num_doc;
          end loop;
          
          if v_num_ib_t is null then
            v_num_ib_t := 0;      
          end if;
          
          --Добавляем новый нумератор по ЛПУ, году и типу нумератора
          INSERT INTO mir.mdoc_last_number
                  (
                    oid,
                    otdel,
                    mdoc_type,
                    "year",
                    num
                  ) 
                  VALUES (
                    mir.new_uuid(),
                    potdel,
                    pmdoc_type_id,
                    v_year,
                    v_num_ib_t
                  );
           v_num_ib := v_num_ib_t + 1;    
        else
          v_num_ib := v_num_ib + 1;
        end if;
    
        -- Вставим уникальный номер документа обслуживания для нового пациента
        INSERT INTO 
            mir.docobsl
          (
            oid,
            mdoc_type_id,
            num_doc,
            year_doc,
            lpu,
            date_generate
          ) 
          VALUES (
            mir.new_uuid(),
            pmdoc_type_id,
            v_num_ib,
            v_year,
            plpu,
            CURRENT_TIMESTAMP
          )
          returning oid into v_docobsl;
    
        --Обновляем последний код
        UPDATE mir.mdoc_last_number mdln  
           SET num = v_num_ib
         WHERE mdln.otdel = potdel
           and mdln.mdoc_type = pmdoc_type_id
           and mdln."year" = v_year;
           
        exit;
    --    else
        --CLOSE c;
    --        dbms_lock.sleep(3);
    --        nCountCikle:=nCountCikle+1;
    --        if nCountCikle > 100 then
    --            raise_application_error(-20001,''Произошло длительное ожидание вставки меддокумента. Рекомендуется перезапустить приложение.'');
    --        end if;
  	--	end if;
     
    end loop;
    
    --commit;

    return query select v_docobsl, v_num_ib;
  end;
';


ALTER FUNCTION mir.docobsl_get_new_num(potdel character, pmdoc_type_id character) OWNER TO postgres;

--
-- TOC entry 1678 (class 1255 OID 17016)
-- Dependencies: 5396 14
-- Name: douser(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION douser(puser character varying, ppassword character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --PRAGMA AUTONOMOUS_TRANSACTION;
  cnt integer;
  vuser varchar(255);
  vpass varchar(32);
begin
 /* vUser := trim(pUser);
  vPass := pPassword;
  if (vpass is null) then
    vpass := null;
  else
    vpass := SUBSTR(vpass, 0, 30);
  end if;
  select count(1) into cnt from dba_users where username = vuser;
  if cnt > 0 then
    EXECUTE IMMEDIATE ''alter user '' || vUser || '' identified by "'' || vPass || ''"'';
  else
    EXECUTE IMMEDIATE ''  create user "'' || vUser || ''"
          identified by "'' || vPass || ''"
          default tablespace USERS
          temporary tablespace TEMP
          profile DEFAULT'';
  end if;
  EXECUTE IMMEDIATE ''grant mis_user to '' || vUser;*/
end;

';


ALTER FUNCTION mir.douser(puser character varying, ppassword character varying) OWNER TO postgres;

--
-- TOC entry 1679 (class 1255 OID 17017)
-- Dependencies: 5396 14
-- Name: drop_ora_user(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION drop_ora_user(plogin character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
 poralogin varchar(30);
 r record;
 isExists integer;
 r2 record;
 noid char(36);
BEGIN
 poralogin := mir.GET_ORALOGIN_BY_MISLOGIN(plogin);
 
 isExists := 0;
 for r in (select 1 
             from pg_user u
            where u.usename = poralogin
          )
 loop
   isExists = 1;
 end loop;
 
 if isExists = 1 then
      noid := '''';
      for r2 in ( select s.oid
                    from mir.sysuser s 
                   where s.username = plogin
                )
      loop
        noid := r2.oid;
      end loop;
      
     if noid <> '''' then
        perform mir.sysuser_drop_sysuser(noid);
      end if;
      
    EXECUTE ''DROP USER "'' || poralogin || ''"'';
 end if;
END;
';


ALTER FUNCTION mir.drop_ora_user(plogin character varying) OWNER TO postgres;

--
-- TOC entry 1680 (class 1255 OID 17018)
-- Dependencies: 5396 14
-- Name: email_cancel_doctorvisit(character, timestamp without time zone, character, character varying, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION email_cancel_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer DEFAULT 1, pschedule character DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_txt 	    varchar(4000);
      v_tel1        VARCHAR(20);
      v_tel2        VARCHAR(20);
      v_work        integer;
      v_Doctor      VARCHAR(200);
      v_lastname    VARCHAR(200);
      v_firstname   VARCHAR(200);
      v_middlename  VARCHAR(200);
      v_countsms integer;
      v_telreg   mir.lpu.telreg%type;
      v_smsText VARCHAR(1500);
      v_countShecude integer;
      v_zapis integer;
      v_reklama  VARCHAR(200);
      v_TrueSendReklama  integer;
      v_lpu mir.schedule.lpu%type;
      v_fullpeoplefio VARCHAR(500);
	  v_lpuname VARCHAR(200);
      v_people  VARCHAR(36);
      v_email VARCHAR(200);
     BEGIN
      v_lpu:='''';      
  
-- Получаем ЛПУ , в которое записан пациент
      select max(lpu) into v_lpu from  mir.schedule where oid=pschedule;
      
      
      
/*
Уважаемый(ая) Юлиан Юлий Цезарь,

Вы получили это письмо, т.к. Ваш e-mail указан в личном кабинете на сайте samozapis.ru

Отменен прием с параметрами:

Врач: Сидор Сидр Сидорович ()
Поликлиника: Калининградское ЛПУ
Кабинет: 2
Дата: вторник 20 декабря 2011 г.
Время приема: 11:00

Адрес поликлиники: Россия, обл. Амурская, г. Белогорск, ул. 8 Марта, д. 3, к. 4, кв. 5
Способ проезда: 
Телефон регистратуры: 

Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.
С уважением, администратор системы.*/
   
        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.people
        where oid=psysuser;
        
--      select people into v_people from  mir.schedule where oid=pschedule;  
      
       select mir.people_info_get_people_fullfio(ppeople) into v_fullpeoplefio ;              
       
       select max(email) into v_email from mir.people where oid=ppeople;
        
        
       select max(fullname) into v_lpuname from mir.company where oid=v_lpu;
          
             
       v_Doctor:=COALESCE(v_lastname,'' '')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

     v_smsText:= ''Прием ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'', врач ''||v_Doctor||'', к.''||pcabinet;                                                              


--   v_fullpeoplefio
v_txt:= ''Уважаемый(ая) ''||COALESCE(v_fullpeoplefio,'' '')||'',''||E''\n\n''||''Вы получили это письмо, т.к. Ваш e-mail указан в личном кабинете на сайте samozapis.ru''||E''\n\n'';
v_txt:=v_txt||''Отменен прием с параметрами:'';

v_txt:=v_txt||''Врач:''||COALESCE(v_Doctor,'' '')||E''\n'';
v_txt:=v_txt||''Поликлиника:''||COALESCE(v_lpuname,'''')||E''\n'';
v_txt:=v_txt||''Время приема:''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||E''\n'';
v_txt:=v_txt||''Кабинет:''||COALESCE(pcabinet,'' '')||E''\n''||E''\n'';


v_txt:=v_txt||''Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.''||E''\n'';
v_txt:=v_txt||''С уважением, администратор системы.''||E''\n'';

if COALESCE(v_email, '' '')<>'' '' then 


      INSERT INTO 
  mir.email_buffer
(
  oid,
  "text",
  status,
  date_create,
  email_to
) 
VALUES (
  mir.new_uuid(),
  v_txt,
  0,
  CURRENT_TIMESTAMP,
 v_email
);
  
end if;                                                                
       


      
     END;
';


ALTER FUNCTION mir.email_cancel_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer, pschedule character) OWNER TO postgres;

--
-- TOC entry 1646 (class 1255 OID 17020)
-- Dependencies: 5396 14
-- Name: email_insert_new_doctorvisit(character, timestamp without time zone, character, character varying, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION email_insert_new_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer DEFAULT 1, pschedule character DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_txt 	    varchar(4000);
      v_tel1        VARCHAR(20);
      v_tel2        VARCHAR(20);
      v_work        integer;
      v_Doctor      VARCHAR(200);
      v_lastname    VARCHAR(200);
      v_firstname   VARCHAR(200);
      v_middlename  VARCHAR(200);
      v_countsms integer;
      v_telreg   mir.lpu.telreg%type;
      v_smsText VARCHAR(1500);
      v_countShecude integer;
      v_zapis integer;
      v_reklama  VARCHAR(200);
      v_TrueSendReklama  integer;
      v_lpu mir.schedule.lpu%type;
      v_fullpeoplefio VARCHAR(500);
	  v_lpuname VARCHAR(200);
      v_people  VARCHAR(36);
      v_email VARCHAR(200);
     BEGIN
      v_lpu:='''';      
  
-- Получаем ЛПУ , в которое записан пациент
      select max(lpu) into v_lpu from  mir.schedule where oid=pschedule;
      
      
      
/*
Вы получили это письмо, т.к. Ваш e-mail указан в личном кабинете на сайте samozapis.ru

Вы записаны к врачу: Дьячкова Галина Андреевна (кардиолог)
Поликлиника: МУЗ ''Детская городская больница №2'',  Поликлиническое отделение №1, г. Каменск-Уральский
На дату: понедельник 11 июля 2011 г.
Время приема: 13:00
Кабинет: 33

Адрес поликлиники: ул.Сибирская,  дом 5а
Способ проезда: Маршрутный автобус №1,2,12,3,104
Телефон регистратуры: 8(3439)316868

Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.
С уважением, администратор системы.*/
   
        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.people
        where oid=psysuser;
        
--      select people into v_people from  mir.schedule where oid=pschedule;  
      
       select mir.people_info_get_people_fullfio(ppeople) into v_fullpeoplefio ;              
       
       select max(email) into v_email from mir.people where oid=ppeople;
        
        
       select max(fullname) into v_lpuname from mir.company where oid=v_lpu;
          
             
       v_Doctor:=COALESCE(v_lastname,'' '')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

     v_smsText:= ''Прием ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'', врач ''||v_Doctor||'', к.''||pcabinet;                                                              


--   v_fullpeoplefio
v_txt:= ''Уважаемый(ая) ''||COALESCE(v_fullpeoplefio,'' '')||'',''||E''\n\n''||''Вы получили это письмо, т.к. Ваш e-mail указан в личном кабинете на сайте samozapis.ru''||E''\n\n'';
v_txt:=v_txt||''Вы записаны к врачу:''||COALESCE(v_Doctor,'' '')||E''\n'';
v_txt:=v_txt||''Поликлиника:''||COALESCE(v_lpuname,'''')||E''\n'';
v_txt:=v_txt||''Время приема:''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||E''\n'';
v_txt:=v_txt||''Кабинет:''||COALESCE(pcabinet,'' '')||E''\n''||E''\n'';


v_txt:=v_txt||''Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.''||E''\n'';
v_txt:=v_txt||''С уважением, администратор системы.''||E''\n'';

if COALESCE(v_email, '' '')<>'' '' then 


      INSERT INTO 
  mir.email_buffer
(
  oid,
  "text",
  status,
  date_create,
  email_to
) 
VALUES (
  mir.new_uuid(),
  v_txt,
  0,
  CURRENT_TIMESTAMP,
 v_email
);
  
end if;                                                                
       


      
     END;
';


ALTER FUNCTION mir.email_insert_new_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer, pschedule character) OWNER TO postgres;

--
-- TOC entry 1647 (class 1255 OID 17022)
-- Dependencies: 5396 14
-- Name: emp_get_empcode(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION emp_get_empcode(pempid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    v_res varchar(255);
  begin
    select m.codeuser
      into v_res
      from mir.sotr e, mir.sysuser m
     where e.sysuser = m.oid
       and e.oid = pempid;
    return v_res;
  end;
  ';


ALTER FUNCTION mir.emp_get_empcode(pempid character) OWNER TO postgres;

--
-- TOC entry 1656 (class 1255 OID 17023)
-- Dependencies: 5396 14
-- Name: emp_get_empfio(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION emp_get_empfio(pempid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
 declare
 v_res varchar(255);
 begin
 select max(p.lastname || '' '' || p.firstname || '' '' || p.middlename)
 into v_res
 from mir.sotr e, mir.sysuser m, mir.people p
 where e.sysuser = m.oid
 and p.oid = m.oid
 and e.oid = pempid;
 return v_res;
 end;
 ';


ALTER FUNCTION mir.emp_get_empfio(pempid character) OWNER TO postgres;

--
-- TOC entry 1663 (class 1255 OID 17024)
-- Dependencies: 5396 14
-- Name: emp_get_empfio_short(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION emp_get_empfio_short(pempid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    v_res varchar(255);
  begin
    select max(p.lastname || '' '' || upper( substr( p.firstname, 1, 1) ) || ''.'' || upper( substr( p.middlename, 1, 1)) || ''.'') 
      into v_res
      from mir.sotr e, mir.sysuser m, mir.people p
     where e.sysuser = m.oid
       and p.oid = m.oid
       and e.oid = pempid;
    return v_res;
  end;
  ';


ALTER FUNCTION mir.emp_get_empfio_short(pempid character) OWNER TO postgres;

--
-- TOC entry 1682 (class 1255 OID 17025)
-- Dependencies: 5396 14
-- Name: emp_get_empfio_sicklist(character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION emp_get_empfio_sicklist(pempid character, pmaxlen integer) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  v_fioshort varchar(255);
  v_surname varchar(255);
  v_inn  varchar(255);    
begin
    select mir.regexp_sicklist(max(p.lastname || '' '' ||
               case p.firstname
                 when '''' then ''''
                 else substr(p.firstname, 1, 1) || ''.''
               end ||
               case p.middlename
                 when '''' THEN ''''
                 else substr(p.middlename, 1, 1) || ''.''
               end )),
           mir.regexp_sicklist(max(p.lastname)),
           max(pi.inn)
      into v_fioshort, v_surname, v_inn
      from mir.sotr e, 
           mir.sysuser m, 
           mir.people p 
      left join mir.pinfo pi 
        on pi.oid = p.oid
     where e.sysuser = m.oid
       and p.oid = m.oid
       and e.oid = pempid;
  if (length(v_fioshort) <= pmaxlen) then
    return v_fioshort;
  else
    if (length(v_surname) <= pmaxlen) then
      return v_surname;
    else
      return v_inn;
    end if;
  end if;
end;
';


ALTER FUNCTION mir.emp_get_empfio_sicklist(pempid character, pmaxlen integer) OWNER TO postgres;

--
-- TOC entry 1683 (class 1255 OID 17026)
-- Dependencies: 5396 14
-- Name: error_message_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION error_message_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  select case when count(e.oid) = 0 then 1 else max(COALESCE(e.num, 0)) + 1 end into NEW.num from mir.errorclientmessages e;
  return new;
END;
';


ALTER FUNCTION mir.error_message_tr() OWNER TO postgres;

--
-- TOC entry 1684 (class 1255 OID 17027)
-- Dependencies: 5396 14
-- Name: errorclientmessages_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION errorclientmessages_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  NEW.dtrecord := CURRENT_TIMESTAMP;
  if NEW.num is null then
    select max(nvl(num,0))+1 into NEW.num from mir.errorclientmessages;
  end if;
return new;
END;

';


ALTER FUNCTION mir.errorclientmessages_bi_trg() OWNER TO postgres;

--
-- TOC entry 1685 (class 1255 OID 17028)
-- Dependencies: 5396 14
-- Name: event_aiud_replication_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION event_aiud_replication_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  V_IS_CHANGED BOOLEAN;
BEGIN
  IF MIR.WEB_SERVICE_IS_REPL THEN
    RETURN NEW;
  END IF;

  IF ( TG_OP = ''UPDATE'' ) THEN

    IF --UPDATING(''OID'') AND
       ((NEW.OID <> OLD.OID) ) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''RESOURCEIDS'') AND
       ((NEW.RESOURCEIDS <> OLD.RESOURCEIDS)  OR
        (NEW.RESOURCEIDS IS NULL AND OLD.RESOURCEIDS IS NOT NULL) OR
        (NEW.RESOURCEIDS IS NOT NULL AND OLD.RESOURCEIDS IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''RECURRENCEPATTERN'') AND
       ((NEW.RECURRENCEPATTERN <> OLD.RECURRENCEPATTERN)  OR
        (NEW.RECURRENCEPATTERN IS NULL AND OLD.RECURRENCEPATTERN IS NOT NULL) OR
        (NEW.RECURRENCEPATTERN IS NOT NULL AND OLD.RECURRENCEPATTERN IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SUBJECT'') AND
       ((NEW.SUBJECT <> OLD.SUBJECT)  OR
        (NEW.SUBJECT IS NULL AND OLD.SUBJECT IS NOT NULL) OR
        (NEW.SUBJECT IS NOT NULL AND OLD.SUBJECT IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''DESCRIPTION'') AND
       ((NEW.DESCRIPTION <> OLD.DESCRIPTION)  OR
        (NEW.DESCRIPTION IS NULL AND OLD.DESCRIPTION IS NOT NULL) OR
        (NEW.DESCRIPTION IS NOT NULL AND OLD.DESCRIPTION IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''STARTON'') AND
       ((NEW.STARTON <> OLD.STARTON)  OR
        (NEW.STARTON IS NULL AND OLD.STARTON IS NOT NULL) OR
        (NEW.STARTON IS NOT NULL AND OLD.STARTON IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ENDON'') AND
       ((NEW.ENDON <> OLD.ENDON)  OR
        (NEW.ENDON IS NULL AND OLD.ENDON IS NOT NULL) OR
        (NEW.ENDON IS NOT NULL AND OLD.ENDON IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ALLDAY'') AND
       ((NEW.ALLDAY <> OLD.ALLDAY)  OR
        (NEW.ALLDAY IS NULL AND OLD.ALLDAY IS NOT NULL) OR
        (NEW.ALLDAY IS NOT NULL AND OLD.ALLDAY IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''LOCATION'') AND
       ((NEW.LOCATION <> OLD.LOCATION)  OR
        (NEW.LOCATION IS NULL AND OLD.LOCATION IS NOT NULL) OR
        (NEW.LOCATION IS NOT NULL AND OLD.LOCATION IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''LABEL'') AND
       ((NEW.LABEL <> OLD.LABEL)  OR
        (NEW.LABEL IS NULL AND OLD.LABEL IS NOT NULL) OR
        (NEW.LABEL IS NOT NULL AND OLD.LABEL IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''STATUS'') AND
       ((NEW.STATUS <> OLD.STATUS)  OR
        (NEW.STATUS IS NULL AND OLD.STATUS IS NOT NULL) OR
        (NEW.STATUS IS NOT NULL AND OLD.STATUS IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''TYPE'') AND
       ((NEW.TYPE <> OLD.TYPE)  OR
        (NEW.TYPE IS NULL AND OLD.TYPE IS NOT NULL) OR
        (NEW.TYPE IS NOT NULL AND OLD.TYPE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''RECURRENCEINFOXML'') AND
       ((NEW.RECURRENCEINFOXML <> OLD.RECURRENCEINFOXML)  OR
        (NEW.RECURRENCEINFOXML IS NULL AND OLD.RECURRENCEINFOXML IS NOT NULL) OR
        (NEW.RECURRENCEINFOXML IS NOT NULL AND OLD.RECURRENCEINFOXML IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    /*IF UPDATING(''OPTIMISTICLOCKFIELD'') AND
       ((NEW.OPTIMISTICLOCKFIELD <> OLD.OPTIMISTICLOCKFIELD)  OR
        (NEW.OPTIMISTICLOCKFIELD IS NULL AND OLD.OPTIMISTICLOCKFIELD IS NOT NULL) OR
        (NEW.OPTIMISTICLOCKFIELD IS NOT NULL AND OLD.OPTIMISTICLOCKFIELD IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF UPDATING(''GCRECORD'') AND
       ((NEW.GCRECORD <> OLD.GCRECORD)  OR
        (NEW.GCRECORD IS NULL AND OLD.GCRECORD IS NOT NULL) OR
        (NEW.GCRECORD IS NOT NULL AND OLD.GCRECORD IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF UPDATING(''OBJECTTYPE'') AND
       ((NEW.OBJECTTYPE <> OLD.OBJECTTYPE)  OR
        (NEW.OBJECTTYPE IS NULL AND OLD.OBJECTTYPE IS NOT NULL) OR
        (NEW.OBJECTTYPE IS NOT NULL AND OLD.OBJECTTYPE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;*/

  END IF;

  IF V_IS_CHANGED THEN
    perform MIR.WEB_SERVICE_ADD_BUFFER_TRANSFER(''SCHEDULE'',
                                            ''UPDATE'',
                                            NEW.OID);
  END IF;

return new;
END;

';


ALTER FUNCTION mir.event_aiud_replication_trg() OWNER TO postgres;

--
-- TOC entry 1686 (class 1255 OID 17029)
-- Dependencies: 5396 14
-- Name: expert_get_raiting(character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION expert_get_raiting(expert_id character, isexp integer) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE 
summa NUMERIC;

BEGIN

select sum(extp.raiting)
from mir.expert_raiting ex
into summa
inner join mir.expert_raiting_sections exs on exs.expert_raiting_id = ex.oid
inner join mir.expert_raiting_section_part exsp on exsp.expert_section_id = exs.oid
inner join mir.expert_templations_parts extp on extp.oid = exsp.part_id
where ex.oid = expert_id
and exsp.is_main_expert = isexp;



return summa;
END;
';


ALTER FUNCTION mir.expert_get_raiting(expert_id character, isexp integer) OWNER TO postgres;

--
-- TOC entry 1687 (class 1255 OID 17030)
-- Dependencies: 5396 14
-- Name: expert_update_parts(character, character[], integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION expert_update_parts(sect character, parts character[], isexpert integer) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
   POID          CHAR (36);
   i INTEGER;
   c CHAR(36);
   part CHAR(36);
begin
      DELETE from MIR.expert_raiting_section_part where expert_section_id = sect and is_main_expert = isexpert; 
      
    FOR i IN 1..array_upper(parts, 1)
    
      LOOP
      
      SELECT p.oid from mir.expert_templations_parts p into part 
      where p.oid = parts[i];
      
      IF part IS NOT NULL THEN
      					 POID =(SELECT * FROM public.guid_generate());
                         insert into mir.expert_raiting_section_part 
                         (oid,expert_section_id, part_id,is_main_expert)  
                         VALUES (POID,sect,parts[i],isexpert);   
      END IF;
                          i := i + 1;
      END LOOP; 
RETURN ''TRUE'';                     
 end ;
';


ALTER FUNCTION mir.expert_update_parts(sect character, parts character[], isexpert integer) OWNER TO postgres;

--
-- TOC entry 1688 (class 1255 OID 17031)
-- Dependencies: 5396 14
-- Name: expert_update_sections(character, character, character[], integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION expert_update_sections(poid character, section character, parts character[], isexpert integer) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  SOID CHAR(36);
  RES  CHAR(36);
BEGIN
	SELECT exps.oid from mir.expert_raiting_sections exps
    INTO SOID
    WHERE exps.expert_raiting_id = poid
    AND exps.section_id = section;
    
	IF SOID IS NULL
    THEN
    	 SOID =(SELECT * FROM public.guid_generate());
  		 insert into mir.expert_raiting_sections 
         (oid, section_id, expert_raiting_id)  
         VALUES (SOID,section,POID);
         
         select MIR.expert_update_parts(SOID,parts,isexpert)
         INTO RES;
         
    ELSE
    	select MIR.expert_update_parts(SOID,parts,isexpert)
        INTO RES;
         
    END IF;	
	RETURN RES;
END;
';


ALTER FUNCTION mir.expert_update_sections(poid character, section character, parts character[], isexpert integer) OWNER TO postgres;

--
-- TOC entry 1689 (class 1255 OID 17032)
-- Dependencies: 5396 14
-- Name: export_presc_to_portal(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION export_presc_to_portal(ppresc character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  p_people varchar;
  p_mdoc_type varchar;
  p_mdoc_oid varchar;
  p_otdel varchar;
  p_start timestamp;
  p_end timestamp;
  p_visit varchar;
  p_result varchar := ''SUCCESS'';
  p_visit_portal_link varchar;
  p_mdoc_event varchar;
  p_mdoc_appointment varchar;
  p_presc_portal_link varchar;
  p_date_presc timestamp;
  p_presctype varchar;
  p_presctype_oid varchar;
  p_protokol varchar;
  p_diag_main_oid varchar;
  p_diag_presc_main_oid varchar;
  p_diag_main_mkb varchar;
  p_diag_main_mkb_code varchar;
  p_diag_add_oid varchar;
  p_diag_presc_add_oid varchar;
  p_diag_add_mkb varchar;
  p_diag_add_mkb_code varchar;
  p_appointment_type numeric;
  r record;
BEGIN
select v.id,
       s.people,
       v.beginv,
       v.endv,
       m.mdoc_type_id,
       o.name || '' ('' || c.fullname || '')'' otdel,
       s.starton,
       case
         when pr.visible = 1 THEN (
                                    select pf.name
                                    from mir.presctypefolder pf
                                    where pf.id = pr.presctypefolder_id
       ) || '' - '' || pr.name
         else pr.name
       end presctypename,
       s.presctype,
       pt.content,
       case
         when pr.presctypefolderid_parent = mir.cn_presctypefolder_consult()
         then 1
         when pr.presctypefolderid_parent = mir.cn_presctypefolder_instrissl()
         then 2
         when pr.presctypefolderid_parent = mir.cn_presctypefolder_labissl()
         then 3
         else 1
       end
INTO p_visit,
     p_people,
     p_start,
     p_end,
     p_mdoc_type,
     p_otdel,
     p_date_presc,
     p_presctype,
     p_presctype_oid,
     p_protokol,
     p_appointment_type
from mir.presc p
     left join mir.visit v on p.visit_id = v.id
     left join mir.presc_schedule ps on ps.presc_id = p.id
     left join mir.schedule s on s.oid = ps.shedule_id
     left join mir.mdoc m on m.id = v.mdoc_id
     left join mir.sotr st on st.oid = s.sotr
     left join mir.otdel o on o.oid = st.otdel
     left join mir.company c on c.oid = o.lpu
     left join mir.presctype pr on pr.oid = s.presctype
     left join mir.protocol pt on pt.presc_id = p.id
where p.id = ppresc;
if(p_visit is not null) then
select p.oid
into p_mdoc_oid
from mir.portal_mdoc p
where p.people = p_people and
      p."type" = p_mdoc_type;
if(p_mdoc_oid is not NULL) THEN

--//--
--mir.portal_mdoc_event
select oid,
       portal_mdoc_event
into p_visit_portal_link,
     p_mdoc_event
from mir.visit_portal_link
where visit = p_visit;
if (p_visit_portal_link is NULL) then
select mir.generate_uuid_v4()
into p_mdoc_event;
insert into mir.portal_mdoc_event(oid, mdoc, "start", "end", otdel)
values (p_mdoc_event, p_mdoc_oid, p_start, p_end, p_otdel);
insert into mir.visit_portal_link(oid, visit, portal_mdoc_event)
values (mir.generate_uuid_v4(), p_visit, p_mdoc_event);
else
update mir.portal_mdoc_event
set "start" = p_start,
    "end" = p_end,
    otdel = p_otdel
where oid = p_mdoc_event;
end if;
--mir.portal_mdoc_appointment
select oid,
       portal_mdoc_appointment
into p_presc_portal_link,
     p_mdoc_appointment
from mir.presc_portal_link
where presc = ppresc;

if(p_presc_portal_link is null) then
select mir.generate_uuid_v4()
into p_mdoc_appointment;
insert into mir.portal_mdoc_appointment(oid, mdoc_event, "date", presctype,
protokol, presctype_oid, appointment_type)
values (p_mdoc_appointment, p_mdoc_event, p_date_presc, p_presctype, p_protokol,
p_presctype_oid, p_appointment_type);
insert into mir.presc_portal_link(oid, presc, portal_mdoc_appointment)
values (mir.generate_uuid_v4(), ppresc, p_mdoc_appointment);
else
update mir.portal_mdoc_appointment
set "date" = p_date_presc,
    presctype = p_presctype,
    protokol = p_protokol,
    presctype_oid = p_presctype_oid,
    appointment_type = p_appointment_type
where oid = p_mdoc_appointment;
end if;
--mir.portal_mdoc_diag main
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_final() and
      kind_id = mir.cn_diag_kind_main();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_clinic() and
      kind_id = mir.cn_diag_kind_main();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_preliminary() and
      kind_id = mir.cn_diag_kind_main();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_supply() and
      kind_id = mir.cn_diag_kind_main();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_deliver() and
      kind_id = mir.cn_diag_kind_main();
end if;
end if;
end if;
end if;
IF(p_diag_presc_main_oid is not NULL) then
select m.code,
       m.code || '' '' || m.name
into p_diag_main_mkb_code,
     p_diag_main_mkb
from mir.diag d
     inner join mir.mkb_10 m on m.oid = d.icd10_id
where d.id = p_diag_presc_main_oid;
select oid
into p_diag_main_oid
from mir.portal_mdoc_diag
where mdoc_appointment = p_mdoc_appointment and
      is_main = 1;
IF(p_diag_main_oid is null) then
insert into mir.portal_mdoc_diag(oid, mdoc_appointment, mkb, is_main, mkb_code)
values (mir.generate_uuid_v4(), p_mdoc_appointment, p_diag_main_mkb, 1,
p_diag_main_mkb_code);
else
update mir.portal_mdoc_diag
set mkb = p_diag_main_mkb,
    mkb_code = p_diag_main_mkb_code
where oid = p_diag_main_oid;
end if;
end if;
--mir.portal_mdoc_diag add
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_final() and
      kind_id = mir.cn_diag_kind_soput();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_clinic() and
      kind_id = mir.cn_diag_kind_soput();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_preliminary() and
      kind_id = mir.cn_diag_kind_soput();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_supply() and
      kind_id = mir.cn_diag_kind_soput();
if(p_diag_presc_main_oid is NULL) THEN
select id
into p_diag_presc_main_oid
from mir.diag
where presc_id = ppresc and
      type_id = mir.cn_diag_type_deliver() and
      kind_id = mir.cn_diag_kind_soput();
end if;
end if;
end if;
end if;
IF(p_diag_presc_main_oid is not NULL) then
select m.code,
       m.code || '' '' || m.name
into p_diag_main_mkb_code,
     p_diag_main_mkb
from mir.diag d
     inner join mir.mkb_10 m on m.oid = d.icd10_id
where d.id = p_diag_presc_main_oid;
select oid
into p_diag_main_oid
from mir.portal_mdoc_diag
where mdoc_appointment = p_mdoc_appointment and
      is_main = 0;
IF(p_diag_main_oid is null) then
insert into mir.portal_mdoc_diag(oid, mdoc_appointment, mkb, is_main, mkb_code)
values (mir.generate_uuid_v4(), p_mdoc_appointment, p_diag_main_mkb, 0,
p_diag_main_mkb_code);
else
update mir.portal_mdoc_diag
set mkb = p_diag_main_mkb,
    mkb_code = p_diag_main_mkb_code
where oid = p_diag_main_oid;
end if;
end if;
--mir.portal_mdoc_survey
delete
from mir.portal_mdoc_survey
where mdoc_appointment = p_mdoc_appointment;
for r in (select case
                   when p.visible = 1 THEN (
                                             select pf.name
                                             from mir.presctypefolder pf
                                             where pf.id = p.presctypefolder_id
                 ) || '' - '' || p.name
                   else p.name
                 end presctypename,
                 p.oid
          from mir.presc pr
               inner join mir.presctype p on pr.presctype_id = p.oid
          where pr.parent_id = ppresc) loop
insert into mir.portal_mdoc_survey(oid, mdoc_appointment, presctype,
presctype_oid)
values (mir.generate_uuid_v4(), p_mdoc_appointment, r.presctypename, r.oid);
end loop;
--mir.portal_mdoc_medic
delete
from mir.portal_mdoc_medic
where mdoc_appointment = p_mdoc_appointment;
for r in (select rm.doza,
                 lower(m.name) doza_type,
                 rm.duration,
                 rm.frequency_id,
                 rm.tradenames,
                 t.name
          from mir.recipe rc
               left join mir.recipe_medic rm on rm.recipe_id = rc.oid
               left join mir.massunit m on m.oid = rm.doza_unit_id
               left join mir.tradenames t on t.oid = rm.tradenames
          where rc.presc_id = ppresc) loop
insert into mir.portal_mdoc_medic(oid, mdoc_appointment, dose, dose_type,
duration, frequency, tradename, tradename_oid)
VALUES (mir.generate_uuid_v4(), p_mdoc_appointment, r.doza, r.doza_type,
r.duration, r.frequency_id, r.name, r.tradenames);
end loop;
--//--
else
p_result := ''MEDICAL CARD IS NOT FOUND'';
end if;
ELSE
p_result := ''TALON IS NOT FOUND'';
end if;
  return p_result;
END;
';


ALTER FUNCTION mir.export_presc_to_portal(ppresc character varying) OWNER TO postgres;

--
-- TOC entry 1690 (class 1255 OID 17034)
-- Dependencies: 5396 14
-- Name: fg_people_get_last_fg_date(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION fg_people_get_last_fg_date(ppeople character) RETURNS date
    LANGUAGE plpgsql
    AS '
  declare
    dres mir.fg_people_period.last_date%type;
    c record;
  begin
    dres := null;
    
    for c in (
      select cast( pr.runend_dt as date ) as runend_dt                            
        from mir.people p
       inner join mir.mdoc m
          on m.people_id = p.oid
       inner join mir.presc pr
          on pr.mdoc_id = m.id
       inner join mir.presctype pt 
          on pt.oid = pr.presctype_id
       inner join mir.presctypefolder ptf 
          on ptf.id = pt.presctypefolder_id
       where pr.presc_state_id = mir.cn_presc_state_sign()
         and p.oid = ppeople
         and pt.presctypefolder_id in 
              (
                  with recursive recursetree(id, parent_id) AS 
                  (
                  select pf.id, 
                         pf.parent_id 
                    from mir.presctypefolder pf 
                   where pf.id = mir.cn_presctypefolder_xray_fg()
                   
                   union all
                  
                  select pf.id, 
                         pf.parent_id
                    from mir.presctypefolder pf
                   inner join recursetree rt 
                      on rt.id = pf.parent_id
                  )
                  
                  select id 
                    from recursetree
                    
                   union all
                   
                  select ptc.presctype
                    from mir.fg_presctype_change ptc
                   --where ptc.lpu = --пока без ЛПУ
              )
      order by runend_dt desc
      limit 1
          )
    loop
        if ( c.runend_dt is not null ) then
            dres := runend_dt;
        end if;
    end loop;
      
    return dres;
  end;
  ';


ALTER FUNCTION mir.fg_people_get_last_fg_date(ppeople character) OWNER TO postgres;

--
-- TOC entry 1673 (class 1255 OID 17035)
-- Dependencies: 5396 14
-- Name: fg_people_set(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION fg_people_set(plpu character, ppeople character, pcompany character, pdistrict character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.fg_people t
                 where t.lpu = plpu
                   and t.people = ppeople) then
        update mir.fg_people t
           set company = pcompany,
               district = pdistrict
         where t.lpu = plpu
           and t.people = ppeople;
    else
      insert into mir.fg_people ( oid, lpu, people, company, district )
      values ( mir.guid_generate(), plpu, ppeople, pcompany, pdistrict);
    end if;
  end;
  ';


ALTER FUNCTION mir.fg_people_set(plpu character, ppeople character, pcompany character, pdistrict character) OWNER TO postgres;

--
-- TOC entry 1692 (class 1255 OID 17036)
-- Dependencies: 5396 14
-- Name: findpeople(character varying, character varying, character varying, date, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION findpeople(pfam character varying DEFAULT ''::character varying, pname character varying DEFAULT ''::character varying, potch character varying DEFAULT ''::character varying, pdtb date DEFAULT now(), poidfile character varying DEFAULT ''::character varying, poidrec character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  P_RESULT          VARCHAR (36);
BEGIN
  P_RESULT := NULL;
  
  BEGIN
   select oid into P_RESULT 
     from mir.people pp 
    where upper(pp.lastname)=upper(PFAM) and  upper(pp.Firstname)=upper(PNAME) 
      and upper(pp.middlename)=upper(POTCH) and pp.birthday=PDTB;
  EXCEPTION
    WHEN OTHERS THEN
    --найдено больше одног человека по ФИО ДТ.р
     insert into mir.dbf_conflict
       (oid, oid_dbf_rec, oid_file, typeconflict, findrec)
     values
       (lower(mir.new_uuid()), Poidrec, Poidfile, ''2'', null);

      P_RESULT := NULL;
  END;
  
  RETURN P_RESULT;
END;

';


ALTER FUNCTION mir.findpeople(pfam character varying, pname character varying, potch character varying, pdtb date, poidfile character varying, poidrec character varying) OWNER TO postgres;

--
-- TOC entry 1693 (class 1255 OID 17037)
-- Dependencies: 5396 14
-- Name: findpeoplebyinsurance(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION findpeoplebyinsurance(pnum character varying DEFAULT ''::character varying, poiddbffile character varying DEFAULT ''::character varying, poiddbfrec character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  P_RESULT VARCHAR(36);
  P_count  NUMERIC(5);

BEGIN
  P_RESULT := NULL;
  
  BEGIN
    SELECT people
      INTO P_RESULT
      FROM mir.insurance
     WHERE num = to_char(pnum);
  EXCEPTION
    WHEN OTHERS THEN
    --найдено больше одног человека по полису
     insert into mir.dbf_conflict
       (oid, oid_dbf_rec, oid_file, typeconflict, findrec)
     values
       (lower(mir.new_uuid()), poiddbfrec, poiddbffile, ''1'', null);

      P_RESULT := NULL;
  END;
  
  RETURN P_RESULT;
END;

';


ALTER FUNCTION mir.findpeoplebyinsurance(pnum character varying, poiddbffile character varying, poiddbfrec character varying) OWNER TO postgres;

--
-- TOC entry 1694 (class 1255 OID 17038)
-- Dependencies: 5396 14
-- Name: findrec(character varying, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION findrec(ptable character varying, ppar1 numeric, ppar2 numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
P_RETSTR          numeric (10);


BEGIN
P_RETSTR:=0;


EXECUTE ''select count(*) into :P_RETSTR from mir.''||ptable||'' where tapnum=''||ppar1||'' and mu=''||case when ppar2 is null then 0 else ppar2 end
     INTO P_RETSTR;
  RETURN P_RETSTR;
END;

';


ALTER FUNCTION mir.findrec(ptable character varying, ppar1 numeric, ppar2 numeric) OWNER TO postgres;

--
-- TOC entry 1695 (class 1255 OID 17039)
-- Dependencies: 5396 14
-- Name: float_number_to_words(numeric, integer, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION float_number_to_words(asource numeric, arod integer DEFAULT 1, awordfor1 character varying DEFAULT NULL::character varying, awordfor234 character varying DEFAULT NULL::character varying, awordfor567890_1x character varying DEFAULT NULL::character varying, aworddrobpart integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  result VARCHAR(500);
  i INTEGER;
  n DECIMAL;
  DrobPart VARCHAR(50);
BEGIN
  -- Форматируем входное число в хитрый строковый формат
  if TRUNC(aSource) = aSource then
    result := mir.int_number_to_words(aSource, aRod, aWordFor1, aWordFor234, aWordFor567890_1x);
  else
    result := mir.int_number_to_words(TRUNC(aSource), aRod, aWordFor1, aWordFor234, aWordFor567890_1x)||'' '';

    DrobPart := ltrim(to_char((aSource-TRUNC(aSource)), ''0.99999''));
    DrobPart := replace( DrobPart, ''0.00000'', ''''); -- если нет дробной части
    DrobPart := Rtrim(SubStr(DrobPart,3, 5),''0'');
    i := LENGTH(DrobPart);
    if i > 0 then
      n := TO_NUMBER(DrobPart,''99999'');
      if (aWordDrobPart = 0) THEN result := result || mir.int_number_to_words(n, 2,'''','''','''');
      elsif (i = 1) THEN result := result || mir.int_number_to_words(n, 2, ''десятая'', ''десятых'', ''десятых'');
      elsif (i = 2) THEN result := result || mir.int_number_to_words(n, 2, ''сотая'', ''сотых'', ''сотых'' );
      elsif (i = 3) THEN result := result || mir.int_number_to_words(n, 2, ''тысячная'', ''тысячных'', ''тысячных'');
      elsif (i = 4) THEN result := result || mir.int_number_to_words(n, 2, ''десятитысячная'', ''десятитысячных'', ''десятитысячных'');
      elsif (i = 5) THEN result := result || mir.int_number_to_words(n, 2, ''стотысячная'', ''стотысячных'', ''стотысячных'');
      end if;
    end if;
  end if;

  return result;
END;
';


ALTER FUNCTION mir.float_number_to_words(asource numeric, arod integer, awordfor1 character varying, awordfor234 character varying, awordfor567890_1x character varying, aworddrobpart integer) OWNER TO postgres;

--
-- TOC entry 1696 (class 1255 OID 17040)
-- Dependencies: 5396 14
-- Name: form_smid_insert(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION form_smid_insert(pform_id character, psmid_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    v_nres mir.form_smid.oid%type;
    v_num_order mir.form_smid.num_order%type;
    c record;
  begin
    v_nres := null;
    v_num_order := 1;

    for c in (select coalesce( max(fs.num_order), 0 ) as num_ord
                from mir.form_smid fs 
               where fs.form_id = pform_id
             ) 
    loop
      v_num_order := c.num_ord + 1;
    end loop;
    
    INSERT INTO 
        mir.form_smid
    (
        oid,
        form_id,
        smid_id,
        num_order
    ) 
    VALUES (
        mir.guid_generate(),
        pform_id,
        psmid_id,
        v_num_order
    ) returning oid into v_nres;
   
    return v_nres;
  end;
  ';


ALTER FUNCTION mir.form_smid_insert(pform_id character, psmid_id character) OWNER TO postgres;

--
-- TOC entry 1697 (class 1255 OID 17041)
-- Dependencies: 5396 14
-- Name: frform30_get_bolkdn_diag(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_bolkdn_diag(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    /*select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   TMKB10Table mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol() 
               and mkb.FC_MKB10 = pMkb10
           ) t;  */    
           
    if pMkb10 = '''' then
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   TMKB10Table mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol()
           ) t;
    else
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   TMKB10Table mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol() 
               and mkb.FC_MKB10 = pMkb10
           ) t;
    end if;       
             
      /*SELECT SUM(FN_AGE)
          INTO NRES
          FROM STAT.TKARTATABLE,
               STAT.TMKB10TABLE,
               (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
         WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
           AND TKARTATABLE.FP_SEX = PSEX
           AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
           AND TMKB10TABLE.FC_MKB10 = PMKB10
           AND TKARTATABLE.FK_PRIZN = D.FK_ID;*/
             
    --nnRes = 6;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_bolkdn_diag(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1698 (class 1255 OID 17042)
-- Dependencies: 5396 14
-- Name: frform30_get_bolkdn_diag2(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_bolkdn_diag2(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    /*select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   TMKB10Table mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol() 
               and mkb.FC_MKB10 = pMkb10
           ) t;  */    
           
    if pMkb10 = '''' then
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   mir.forms_mkb10 mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol()
               and mkb.form_name = ''16_vn''
           ) t;
    else
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   mir.forms_mkb10 mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol() 
               and mkb.FC_MKB10 = pMkb10
               and mkb.form_name = ''16_vn''
           ) t;
    end if;       
             
      /*SELECT SUM(FN_AGE)
          INTO NRES
          FROM STAT.TKARTATABLE,
               STAT.TMKB10TABLE,
               (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
         WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
           AND TKARTATABLE.FP_SEX = PSEX
           AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
           AND TMKB10TABLE.FC_MKB10 = PMKB10
           AND TKARTATABLE.FK_PRIZN = D.FK_ID;*/
             
    --nnRes = 6;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_bolkdn_diag2(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1699 (class 1255 OID 17043)
-- Dependencies: 5396 14
-- Name: frform30_get_bolkdn_prich(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_bolkdn_prich(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    if pSynonim = '''' then
      select SUM(t.FN_AGE) CNT
        INTO nnRes
        from (
              select distinct kt.FK_ID, kt.FN_AGE
                from TKARTATABLE kt,
                     TMKB10Table mkb
               where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
                 and kt.fp_sex = pSex
                 and mkb.mkb10_oid = kt.FP_RESLECH
             ) t;
    else
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   TMKB10Table mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = pSynonim
           ) t;
    end if;

      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = PPRICH) SM
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TKARTATABLE.FK_PRIZN = SM.FK_ID*/
             
    --nnRes = 8;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_bolkdn_prich(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1700 (class 1255 OID 17044)
-- Dependencies: 5396 14
-- Name: frform30_get_bolkdn_prich2(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_bolkdn_prich2(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    if pSynonim = '''' then
      select SUM(t.FN_AGE) CNT
        INTO nnRes
        from (
              select distinct kt.FK_ID, kt.FN_AGE
                from TKARTATABLE kt,
                     mir.forms_mkb10 mkb
               where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
                 and kt.fp_sex = pSex
                 and mkb.mkb10_oid = kt.FP_RESLECH
                 and mkb.form_name = ''16_vn''
             ) t;
    else
      select SUM(t.FN_AGE) CNT
      INTO nnRes
      from (
            select distinct kt.FK_ID, kt.FN_AGE
              from TKARTATABLE kt,
                   mir.forms_mkb10 mkb
             where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
               and kt.fp_sex = pSex
               and mkb.mkb10_oid = kt.FP_RESLECH
               and kt.FK_PRIZN = pSynonim
               and mkb.form_name = ''16_vn''
           ) t;
    end if;

      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = PPRICH) SM
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TKARTATABLE.FK_PRIZN = SM.FK_ID*/
             
    --nnRes = 8;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_bolkdn_prich2(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1701 (class 1255 OID 17045)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_diag(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_diag(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    select COUNT(DISTINCT kt.FK_ID) CNT
      INTO nnRes
      from TKARTATABLE kt,
           TMKB10Table mkb
     where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
       and kt.fp_sex = pSex
       and mkb.mkb10_oid = kt.FP_RESLECH
       and mkb.FC_MKB10 = pMkb10
       and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol(); 
  
    /*SELECT COALESCE(SUM(k.N), 0)
      INTO nnRes
      FROM (SELECT MAX(1) N
              FROM TKARTATABLE,
                   TMKB10TABLE,
                   (SELECT t.id FROM mir.travm t WHERE t.syn = PSYNONIM) SM
             WHERE TKARTATABLE.FN_AGE BETWEEN PAGE1 AND PAGE2
               AND TKARTATABLE.FP_SEX = PSEX
               AND TKARTATABLE.FK_PRIZN = SM.id
               AND TMKB10TABLE.mkb10_oid = TKARTATABLE.FP_RESLECH
               AND TMKB10TABLE.FC_MKB10 = PMKB10
             GROUP BY TKARTATABLE.FK_ID, FP_RESLECH) k;*/
             
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             STAT.TMKB10TABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
         AND TMKB10TABLE.FC_MKB10 = PMKB10
         AND TKARTATABLE.FK_PRIZN = D.FK_ID;*/
             
    --nnRes = 5;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_diag(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1702 (class 1255 OID 17046)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_diag2(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_diag2(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    select COUNT(DISTINCT kt.FK_ID) CNT
      INTO nnRes
      from TKARTATABLE kt,
           mir.forms_mkb10 mkb
     where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
       and kt.fp_sex = pSex
       and mkb.mkb10_oid = kt.FP_RESLECH
       and mkb.FC_MKB10 = pMkb10
       and mkb.form_name = ''16_vn''
       and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol(); 
  
    /*SELECT COALESCE(SUM(k.N), 0)
      INTO nnRes
      FROM (SELECT MAX(1) N
              FROM TKARTATABLE,
                   TMKB10TABLE,
                   (SELECT t.id FROM mir.travm t WHERE t.syn = PSYNONIM) SM
             WHERE TKARTATABLE.FN_AGE BETWEEN PAGE1 AND PAGE2
               AND TKARTATABLE.FP_SEX = PSEX
               AND TKARTATABLE.FK_PRIZN = SM.id
               AND TMKB10TABLE.mkb10_oid = TKARTATABLE.FP_RESLECH
               AND TMKB10TABLE.FC_MKB10 = PMKB10
             GROUP BY TKARTATABLE.FK_ID, FP_RESLECH) k;*/
             
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             STAT.TMKB10TABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
         AND TMKB10TABLE.FC_MKB10 = PMKB10
         AND TKARTATABLE.FK_PRIZN = D.FK_ID;*/
             
    --nnRes = 5;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_diag2(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1703 (class 1255 OID 17047)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_diagall(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_diagall(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    select COUNT(DISTINCT kt.FK_ID) CNT
      INTO nnRes
      from TKARTATABLE kt,
           TMKB10Table mkb
     where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
       and kt.fp_sex = pSex
       and mkb.mkb10_oid = kt.FP_RESLECH
       --and mkb.FC_MKB10 = pMkb10;
       and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol()  
       AND mkb.FN_SHABLONNUM = ''1'';            
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             STAT.TMKB10TABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
         AND TKARTATABLE.FK_PRIZN = D.FK_ID
         AND TMKB10TABLE.FN_SHABLONNUM = 1;*/
             
    --nnRes = 7;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_diagall(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1705 (class 1255 OID 17048)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_diagall2(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_diagall2(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    select COUNT(DISTINCT kt.FK_ID) CNT
      INTO nnRes
      from TKARTATABLE kt,
           mir.forms_mkb10 mkb
     where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
       and kt.fp_sex = pSex
       and mkb.mkb10_oid = kt.FP_RESLECH
       --and mkb.FC_MKB10 = pMkb10;
       and kt.FK_PRIZN = mir.cn_sicklist_reason_zabol()  
       AND mkb.FN_SHABLONNUM = ''1''
       and mkb.form_name = ''16_vn'';            
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             STAT.TMKB10TABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = ''LN_DIAG'') D
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TMKB10TABLE.FK_SMDIAGID = TKARTATABLE.FP_RESLECH
         AND TKARTATABLE.FK_PRIZN = D.FK_ID
         AND TMKB10TABLE.FN_SHABLONNUM = 1;*/
             
    --nnRes = 7;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_diagall2(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1706 (class 1255 OID 17049)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_prich(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_prich(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    if pSynonim = '''' then
      select COUNT(DISTINCT kt.FK_ID) CNT
        INTO nnRes
        from TKARTATABLE kt,
             TMKB10Table mkb
       where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
         and kt.fp_sex = pSex
         and mkb.mkb10_oid = kt.FP_RESLECH;
    else
      select COUNT(DISTINCT kt.FK_ID) CNT
        INTO nnRes
        from TKARTATABLE kt,
             TMKB10Table mkb
       where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
         and kt.fp_sex = pSex
         and mkb.mkb10_oid = kt.FP_RESLECH
         --and mkb.FC_MKB10 = pMkb10
         and kt.FK_PRIZN = pSynonim;
    end if;
             
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = PPRICH) SM
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TKARTATABLE.FK_PRIZN = SM.FK_ID*/
             
    --nnRes = 8;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_prich(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1707 (class 1255 OID 17050)
-- Dependencies: 5396 14
-- Name: frform30_get_cntbl_prich2(integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_cntbl_prich2(page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    if pSynonim = '''' then
      select COUNT(DISTINCT kt.FK_ID) CNT
        INTO nnRes
        from TKARTATABLE kt,
             mir.forms_mkb10 mkb
       where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
         and kt.fp_sex = pSex
         and mkb.mkb10_oid = kt.FP_RESLECH
         and mkb.form_name = ''16_vn'';
    else
      select COUNT(DISTINCT kt.FK_ID) CNT
        INTO nnRes
        from TKARTATABLE kt,
             mir.forms_mkb10 mkb
       where kt.FN_PERIODINDEX BETWEEN pAge1 AND pAge2
         and kt.fp_sex = pSex
         and mkb.mkb10_oid = kt.FP_RESLECH
         --and mkb.FC_MKB10 = pMkb10
         and kt.FK_PRIZN = pSynonim
         and mkb.form_name = ''16_vn'';
    end if;
             
             
      /*SELECT COUNT(DISTINCT TKARTATABLE.FK_ID) CNT
        FROM STAT.TKARTATABLE,
             (SELECT FK_ID FROM ASU.TSMID WHERE FC_SYNONIM = PPRICH) SM
       WHERE TKARTATABLE.FN_PERIODINDEX BETWEEN PAGEBEG AND PAGEEND
         AND TKARTATABLE.FP_SEX = PSEX
         AND TKARTATABLE.FK_PRIZN = SM.FK_ID*/
             
    --nnRes = 8;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_cntbl_prich2(page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1708 (class 1255 OID 17051)
-- Dependencies: 5396 14
-- Name: frform30_get_diag_netr(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_diag_netr(pmdoc_id character, pambticket_id character, pdate date DEFAULT ('now'::text)::date) RETURNS character
    LANGUAGE plpgsql
    AS '
-- Функция возвращает начало листка нетрудоспособности
DECLARE     
  rec record;
  rec2 record;
  rec3 record;
  d DATE;
BEGIN
  FOR rec IN (
              select d.id
                from mir.diag d
               where d.type_id = mir.cn_diag_type_sicklist()
                 and d.kind_id = mir.cn_diag_kind_main()
                 and d.mdoc_id = pmdoc_id
               order by d.create_dt desc
             ) 
  LOOP
    RETURN rec.id;
  END LOOP;
    
  IF pambticket_id = '''' THEN
    FOR rec2 IN ( 
                  select d.id
                    from mir.diag d
                   where d.type_id = mir.cn_diag_type_final()
                     and d.kind_id = mir.cn_diag_kind_main()
                     and d.mdoc_id = pmdoc_id
                     and d.create_dt <= pdate
                   order by d.create_dt desc
                ) 
    LOOP
      return rec2.id;
    END LOOP;
  ELSE
    FOR rec3 IN (  select d.id
                     from mir.ambtick_diag ad
                    inner join mir.diag d
                       on ad.diag_oid = d.id
                    where d.type_id = mir.cn_diag_type_final()
                      and d.kind_id = mir.cn_diag_kind_main()
                      and ad.ticket_oid = pambticket_id
                )
    LOOP
      return rec3.id;
    END LOOP;
  END IF;
  
  RETURN cast( null as varchar );
END;
';


ALTER FUNCTION mir.frform30_get_diag_netr(pmdoc_id character, pambticket_id character, pdate date) OWNER TO postgres;

--
-- TOC entry 1709 (class 1255 OID 17052)
-- Dependencies: 5396 14
-- Name: frform30_get_f12_diag(integer, integer, character varying, integer, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_f12_diag(pagebeg integer, pageend integer, smkb10 character varying, pfirst integer, pdisp integer, pman integer DEFAULT 0) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nRes integer := 0;
  BEGIN
    SELECT SUM(t.cnt)
      INTO nRes
      FROM (SELECT MAX(1) cnt
              FROM tkartatable, tmkb10table
             WHERE tkartatable.fn_age BETWEEN pAgeBEg AND pAgeEnd
               AND tmkb10table.fc_mkb10 = sMkb10
               AND (tkartatable.fp_sex = 1 OR pMan = 0)
               AND tmkb10table.mkb10_oid = tkartatable.FP_RESLECH
               AND (TKARTATABLE.FL_POKAZ >= pFirst OR pFirst = -1)
               AND tkartatable.FN_PERIODINDEX = pDisp
             GROUP BY tkartatable.fp_reslech, tkartatable.fk_id) t;
         
    --nRes = 5;
    RETURN nRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_f12_diag(pagebeg integer, pageend integer, smkb10 character varying, pfirst integer, pdisp integer, pman integer) OWNER TO postgres;

--
-- TOC entry 1710 (class 1255 OID 17053)
-- Dependencies: 5396 14
-- Name: frform30_get_f57_diag_age_sex_dp(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION frform30_get_f57_diag_age_sex_dp(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    nnRes INTEGER;
  BEGIN
    SELECT COALESCE(SUM(k.N), 0)
      INTO nnRes
      FROM (SELECT MAX(1) N
              FROM TKARTATABLE,
                   TMKB10TABLE,
                   (SELECT t.id FROM mir.travm t WHERE t.syn = PSYNONIM) SM
             WHERE TKARTATABLE.FN_AGE BETWEEN PAGE1 AND PAGE2
               AND TKARTATABLE.FP_SEX = PSEX
               AND TKARTATABLE.FK_PRIZN = SM.id
               AND TMKB10TABLE.mkb10_oid = TKARTATABLE.FP_RESLECH
               AND TMKB10TABLE.FC_MKB10 = PMKB10
             GROUP BY TKARTATABLE.FK_ID, FP_RESLECH) k;
    --nnRes = 5;
    RETURN nnRes;
  END;
  ';


ALTER FUNCTION mir.frform30_get_f57_diag_age_sex_dp(pmkb10 character varying, page1 integer, page2 integer, psex integer, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1711 (class 1255 OID 17054)
-- Dependencies: 5396 14
-- Name: generate_uuid_v4(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION generate_uuid_v4() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    value VARCHAR(36);
BEGIN
    value =          lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || ''-'';
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || ''-'';
    value = value || lpad((to_hex((ceil(random() * 255)::int & 15) | 64)), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || ''-'';
    value = value || lpad((to_hex((ceil(random() * 255)::int & 63) | 128)), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || ''-'';
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    value = value || lpad(to_hex(ceil(random() * 255)::int), 2, ''0'');
    RETURN value;
END;
';


ALTER FUNCTION mir.generate_uuid_v4() OWNER TO postgres;

--
-- TOC entry 1712 (class 1255 OID 17055)
-- Dependencies: 5396 14
-- Name: get_All_Invalid_Group(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "get_All_Invalid_Group"(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  RESULT varchar;
  m      record;
begin
  RESULT := '''';
  for m in (
  select inval_group.name, inval_group.foms_code  from mir.invalid inval 
      LEFT JOIN mir.invalidgroup inval_group ON inval_group.oid = inval.invalidgroup
      LEFT JOIN mir.invalidkind inval_kind ON inval.invalidkind = inval_kind.oid
      LEFT JOIN mir.invalidtype inval_type ON inval.invalidtype = inval_type.oid
      where inval.people = poid
      ORDER by inval_group.foms_code                  ) 
  LOOP
    
      RESULT := RESULT || '', '' || m.name;
   
  END LOOP;
	
  
  return(substr(RESULT,3));
end;
';


ALTER FUNCTION mir."get_All_Invalid_Group"(poid character) OWNER TO postgres;

--
-- TOC entry 1713 (class 1255 OID 17056)
-- Dependencies: 5396 14
-- Name: get_age(date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_age(pdate date) RETURNS integer
    LANGUAGE plpgsql
    AS '
begin
  return mir.get_years_between_date(pdate, current_date);
end;
';


ALTER FUNCTION mir.get_age(pdate date) OWNER TO postgres;

--
-- TOC entry 1714 (class 1255 OID 17057)
-- Dependencies: 5396 14
-- Name: get_all_lpu_names_by_sysuser(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_all_lpu_names_by_sysuser(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  RESULT varchar;
  m      record;
begin
  RESULT := '''';
  for m in (
  select DISTINCT (e.oid) as oid, e.fullname as "name" 

from mir.company e
                        inner join mir.otdel otd on otd.lpu = e.oid
                        inner join mir.sotr s on s.otdel = otd.oid
                        inner join mir.sysuser sys on s.sysuser = sys.oid
                        
                        where sys.oid = poid
                        ) 
  LOOP
    
      RESULT := RESULT || '', '' || M.name;
   
  END LOOP;
	
  
  return(substr(RESULT,3));
end;
';


ALTER FUNCTION mir.get_all_lpu_names_by_sysuser(poid character) OWNER TO postgres;

--
-- TOC entry 1715 (class 1255 OID 17058)
-- Dependencies: 5396 14
-- Name: get_areal_by_kladr(integer, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_areal_by_kladr(pkladrid integer, pdom character varying, ptype integer) RETURNS TABLE(id integer)
    LANGUAGE plpgsql
    AS '
DECLARE
xx varchar;
  ssql varchar;
BEGIN
if pkladrid is null or pkladrid<1 
 then 
 ssql:=   ''select cast (-1 as integer) as id ''; 
else
if pdom is null or pdom=''''  then 
ssql:=  ''select  dn.id 
from mir.areal_kladr d, mir.areal dn
   where d.kladr_id=''||pkladrid||'' and dn.id=d.areal_id 
  and (''||ptype||'' =-1 or dn.areal_type_id = ''||ptype||'')'';
end if;
end if;  
if ((pkladrid is not null) and  (pkladrid>1 )) and ((pdom is not null) and (pdom <> '''')) then

 ssql:=''
 select  coalesce(dn.id,0) as id
   from mir.areal_kladr d, mir.areal dn
   where d.kladr_id=''||pkladrid||'' -- совпадение по кладр
   and
    (
     cast(coalesce(substring( CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
        in (select mir.diapazon(d.inrange))
        and 
     cast(coalesce(substring(  CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
       not in (select mir.diapazon(d.outrange))
  )
  and dn.id=d.areal_id 
  and (''||ptype||'' =-1 or dn.areal_type_id = ''||ptype||'')'';
  end if;


return query EXECUTE ssql;

END;
';


ALTER FUNCTION mir.get_areal_by_kladr(pkladrid integer, pdom character varying, ptype integer) OWNER TO postgres;

--
-- TOC entry 1716 (class 1255 OID 17059)
-- Dependencies: 5396 14
-- Name: get_areal_by_kladr2(character, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_areal_by_kladr2(pkladrid character, pdom character varying, ptype character DEFAULT '-'::bpchar) RETURNS TABLE(oid text)
    LANGUAGE plpgsql
    AS '
DECLARE
xx varchar;
  ssql varchar;
BEGIN
if pkladrid is null 
 then 
 ssql:=   ''select cast(-1 as text) as oid ''; 
else
if pdom is null or pdom=''''  then 
ssql:=  ''select  dn.oid 
from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' and dn.oid=d.areal_oid 
  and (''''''||ptype||'''''' =''''-'''' or dn.areal_type_oid = ''''''||ptype||'''''')'';
end if;
end if;  
if ((pkladrid is not null) and  (pkladrid<>'''' )) and ((pdom is not null) and (pdom <> '''')) then

 ssql:=''
 select  dn.oid
   from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' -- совпадение по кладр
   and
    (
     cast(coalesce(substring( CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
        in (select mir.diapazon(d.inrange))
        and 
     cast(coalesce(substring(  CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
       not in (select mir.diapazon(d.outrange))
  )
  and dn.oid=d.areal_oid 
  and (''''''||ptype||'''''' is null or dn.areal_type_oid = ''''''||ptype||'''''')'';
  end if;


return query EXECUTE ssql;

END;
';


ALTER FUNCTION mir.get_areal_by_kladr2(pkladrid character, pdom character varying, ptype character) OWNER TO postgres;

--
-- TOC entry 1717 (class 1255 OID 17060)
-- Dependencies: 5396 14
-- Name: get_areal_by_kladr3(character, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_areal_by_kladr3(pkladrid character, pdom character varying, ptype character) RETURNS SETOF text
    LANGUAGE plpgsql
    AS '
DECLARE
xx varchar;
  ssql varchar;
BEGIN
if ptype is null then ptype := ''-''; end if;
if pkladrid is null 
 then 
 ssql:=   ''select  cast(-1 as text) as oid ''; 
else
if pdom is null or pdom=''''  then 
ssql:=  ''select distinct cast (dn.oid as text) as oid
from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' and dn.oid=d.areal_oid 

  and (''''''||ptype||''''''=''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')''
  ;
end if;
end if;  
if ((pkladrid is not null) and  (pkladrid<>'''' )) and ((pdom is not null) and (pdom <> '''')) then

 ssql:=''
 select distinct cast( dn.oid as text) as oid
   from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' -- совпадение по кладр
   and
    (
     cast(coalesce(substring( CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9а-яА-Я\/]{1,5})''''),''''-1'''')  as varchar(6))
        in (select mir.diapazon_new_kov(d.inrange))
        and 
     cast(coalesce(substring(  CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9а-яА-Я\/]{1,5})''''),''''-1'''')  as varchar(6))
       not in (select mir.diapazon_new_kov(d.outrange))
  )
  and dn.oid=d.areal_oid 
   and (''''''||ptype||'''''' =''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')'';
  end if;


return query EXECUTE ssql;

END;
';


ALTER FUNCTION mir.get_areal_by_kladr3(pkladrid character, pdom character varying, ptype character) OWNER TO postgres;

--
-- TOC entry 1718 (class 1255 OID 17061)
-- Dependencies: 5396 14
-- Name: get_areal_by_kladr4(character, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_areal_by_kladr4(pkladrid character, pdom character varying, ptype character) RETURNS TABLE(oid text, name text)
    LANGUAGE plpgsql
    AS '
DECLARE
xx varchar;
  ssql varchar;
BEGIN
if ptype is null then ptype := ''-''; end if;
if pkladrid is null 
 then 
 ssql:=   ''select  cast(-1 as text) as oid , cast('''''''' as text) as name''; 
else
if pdom is null or pdom=''''  then 
ssql:=  ''select distinct cast (dn.oid as text) as oid , cast (dn.name as text) as name
from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' and dn.oid=d.areal_oid 

  and (''''''||ptype||''''''=''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')''
  ;
end if;
end if;  
if ((pkladrid is not null) and  (pkladrid<>'''' )) and ((pdom is not null) and (pdom <> '''')) then

 ssql:=''
 select distinct cast( dn.oid as text) as oid, cast (dn.name as text) as name
   from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' -- совпадение по кладр
   and
    (
     cast(coalesce(substring( CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
        in (select mir.diapazon_new_kov(d.inrange))
        and 
     cast(coalesce(substring(  CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9]{1,5})''''),''''-1'''')  as varchar(6))
       not in (select mir.diapazon_new_kov(d.outrange))
  )
  and dn.oid=d.areal_oid 
   and (''''''||ptype||'''''' =''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')'';
  end if;


return query EXECUTE ssql;

END;
';


ALTER FUNCTION mir.get_areal_by_kladr4(pkladrid character, pdom character varying, ptype character) OWNER TO postgres;

--
-- TOC entry 1719 (class 1255 OID 17062)
-- Dependencies: 5396 14
-- Name: get_areal_by_kladr4_new(character, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_areal_by_kladr4_new(pkladrid character, pdom character varying, ptype character) RETURNS TABLE(oid text, name text)
    LANGUAGE plpgsql
    AS '
DECLARE
xx varchar;
  ssql varchar;
BEGIN
if ptype is null then ptype := ''-''; end if;
if pkladrid is null 
 then 
 ssql:=   ''select  cast(-1 as text) as oid , cast('''''''' as text) as name''; 
else
if pdom is null or pdom=''''  then 
ssql:=  ''select distinct cast (dn.oid as text) as oid , cast (dn.name as text) as name
from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' and dn.oid=d.areal_oid 

  and (''''''||ptype||''''''=''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')''
  ;
end if;
end if;  
if ((pkladrid is not null) and  (pkladrid<>'''' )) and ((pdom is not null) and (pdom <> '''')) then

 ssql:=''
 select distinct cast( dn.oid as text) as oid, cast (dn.name as text) as name
   from mir.areal_kladr d, mir.areal dn
   where d.kladr_oid=''''''||pkladrid||'''''' -- совпадение по кладр
   and
    (
     cast(coalesce(substring( CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9а-яА-Я]{1,5})''''),''''-1'''')  as varchar(6))
        in (select mir.diapazon_new_kov(d.inrange))
        and 
     cast(coalesce(substring(  CAST( ''''''||pdom||'''''' as varchar(4)),''''y?([0-9а-яА-Я]{1,5})''''),''''-1'''')  as varchar(6))
       not in (select mir.diapazon_new_kov(d.outrange))
  )
  and dn.oid=d.areal_oid 
   and (''''''||ptype||'''''' =''''-'''' or dn.arealtype_oid = ''''''||ptype||'''''')'';
  end if;


return query EXECUTE ssql;

END;
';


ALTER FUNCTION mir.get_areal_by_kladr4_new(pkladrid character, pdom character varying, ptype character) OWNER TO postgres;

--
-- TOC entry 1720 (class 1255 OID 17063)
-- Dependencies: 5396 14
-- Name: get_count_not_yavka(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_count_not_yavka(pid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    P_RETSTR          VARCHAR (10);

BEGIN
P_RETSTR := '''';

select to_char(count(*)) cn into P_RETSTR from mir.schedule_info  si
where people=PID
and state not in (3,4)
and  si.STARTON>
                nvl((
                select max(startblock)
                            from
                       mir.lockusers lu
                where
                       oid_people=PID
                ),to_date(''01.01.2000'',''dd.mm.yyyy'')) and si.STARTON<CURRENT_TIMESTAMP;

    RETURN P_RETSTR;
END;

';


ALTER FUNCTION mir.get_count_not_yavka(pid character varying) OWNER TO postgres;

--
-- TOC entry 1721 (class 1255 OID 17064)
-- Dependencies: 5396 14
-- Name: get_count_not_yavka_new(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_count_not_yavka_new(pid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
P_RETSTR          VARCHAR (10);

BEGIN
P_RETSTR := '''';

select to_char(count(*)) cn into P_RETSTR from mir.schedule_info  si
where people=PID
and state=6;


    RETURN P_RETSTR;
END;

';


ALTER FUNCTION mir.get_count_not_yavka_new(pid character varying) OWNER TO postgres;

--
-- TOC entry 1722 (class 1255 OID 17065)
-- Dependencies: 5396 14
-- Name: get_date_workdays_count(date, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_date_workdays_count(date_from date, cnt integer) RETURNS date
    LANGUAGE plpgsql
    AS '
DECLARE
  date_to date;
BEGIN        
  select date_from + cast( cast(( cnt/5 * 7 + case
                                                when cnt%5 > 0
                                                then cnt%5 + 2 
                                                else 0
                                              end) as varchar) || '' day'' as interval ) - interval ''1 day'' into date_to;
  
  select date_to - 
         ( case date_part(''dow'', date_to)
             when 6 then interval ''1 day''
             when 0 then interval ''2 day''
             else interval ''0 day''
           end ) 
         into date_to;
  return date_to;
END;
';


ALTER FUNCTION mir.get_date_workdays_count(date_from date, cnt integer) OWNER TO postgres;

--
-- TOC entry 1723 (class 1255 OID 17066)
-- Dependencies: 5396 14
-- Name: get_demand_sh_starton_list(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_demand_sh_starton_list(pdemand character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  VRetString         varchar(500);
  PDEMAND1 varchar(36);
  c record;
BEGIN
PDEMAND1:=PDEMAND;
VRetString:='''';


  FOR C IN (
            select starton from mir.demand_schedule ds
          left join mir.schedule_info si on si.oid=ds.schedule
          where ds.demand=PDEMAND1
            ) LOOP
    begin
        VRetString:=VRetString||to_char(c.starton,''dd.mm.yyyy hh24:mi'')||'';'';
    end;
 END LOOP;


 RETURN VRetString;

end;

';


ALTER FUNCTION mir.get_demand_sh_starton_list(pdemand character varying) OWNER TO postgres;

--
-- TOC entry 1724 (class 1255 OID 17067)
-- Dependencies: 5396 14
-- Name: get_diag_main(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_diag_main(p_visit character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
-- получение основного заключительного диагноза талона
DECLARE
  res varchar;
BEGIN
  SELECT (diag.id)
  INTO res
  FROM mir.presc presc
       LEFT JOIN mir.diag diag ON diag.presc_id = presc.id
  WHERE 1 = 1
        AND presc.visit_id = p_visit
        AND presc.presc_state_id = mir.cn_presc_state_sign()
        AND diag.kind_id = mir.cn_diag_kind_main()
        AND diag.type_id = mir.cn_diag_type_final()
  ORDER BY presc.sign_dt DESC,
           diag.create_dt DESC
  LIMIT 1;
  -----

  RETURN (res);

END;
';


ALTER FUNCTION mir.get_diag_main(p_visit character varying) OWNER TO postgres;

--
-- TOC entry 1725 (class 1255 OID 17068)
-- Dependencies: 5396 14
-- Name: get_diags_other(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_diags_other(p_visit character varying, p_diag_kind character varying) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
-- получение сопутсвующих диагнозов талона
DECLARE
  res varchar;
BEGIN

  FOR res IN (
  SELECT (diag.id)
  FROM mir.presc presc
       LEFT JOIN mir.diag diag ON diag.presc_id = presc.id
  WHERE 1 = 1
        AND presc.visit_id = p_visit
        AND presc.presc_state_id = mir.cn_presc_state_sign()
        AND diag.kind_id = p_diag_kind
  ORDER BY presc.sign_dt DESC,
           diag.create_dt DESC)
  LOOP
    return next res;
  end LOOP;

END;
';


ALTER FUNCTION mir.get_diags_other(p_visit character varying, p_diag_kind character varying) OWNER TO postgres;

--
-- TOC entry 1726 (class 1255 OID 17069)
-- Dependencies: 5396 14
-- Name: get_district_by_kladr2(character varying, character varying, integer, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_district_by_kladr2(pid character varying DEFAULT ''::character varying, phouse character varying DEFAULT ''::character varying, pisreturnname integer DEFAULT 0, pkorp character varying DEFAULT NULL::character varying, plpufilter character DEFAULT NULL::bpchar) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  /*
    Modified by Spasskiy S.N. 03.08.2010
  */

  V_TMP_STR    VARCHAR(100);
  V_HOUSE      VARCHAR(10);
  V_FULL_HOUSE VARCHAR(50);
  V_POS        INTEGER;
  V_RESULT     VARCHAR(4000);
  V_RES_FUNC   INTEGER;
  c            record;
BEGIN
  --perform MIR.addr_extract_house_info(PHOUSE, PKORP, V_HOUSE, V_FULL_HOUSE, V_RES_FUNC);
  
  IF V_RES_FUNC = 0 THEN
  --IF MIR.PKG_ADDR.EXTRACT_HOUSE_INFO(PHOUSE, PKORP, V_HOUSE, V_FULL_HOUSE, V_RES_FUNC) = 0 THEN
    RETURN NULL;
  END IF;

  FOR C IN (SELECT UPPER(REPLACE(D.INCLUDEHOUSE, '' '', '''')) INCLUDEHOUSE, --используем replace, т.к. translate не поддерживает явный clob
                   UPPER(TRANSLATE(D.EXCLUDEHOUSE, ''_ '', ''_'')) EXCLUDEHOUSE,
                   D.DISTRICT,
                   STARTHOUSE,
                   ENDHOUSE,
                   DI.NAME,
                   (select lpu from mir.otdel where oid = DD.otdel) lpu
              FROM MIR.DISTRICTSTREET D, MIR.DISTRICT DD, MIR.DICTIONARY DI
             WHERE D.TKLADR = PID
               AND DI.OID = DD.OID
               AND D.DISTRICT = DD.OID) LOOP
    BEGIN
      IF ((TO_NUMBER(V_HOUSE) BETWEEN TO_NUMBER(C.STARTHOUSE) AND
         TO_NUMBER(C.ENDHOUSE)) OR
         INSTR('','' || C.INCLUDEHOUSE || '','', '','' || V_FULL_HOUSE || '','') > 0) AND
         NOT
          (INSTR('','' || C.EXCLUDEHOUSE || '','', '','' || V_FULL_HOUSE || '','') > 0) THEN
        IF ((PLPUFILTER IS NULL) OR
           ((PLPUFILTER IS NOT NULL) AND (C.LPU = PLPUFILTER))) THEN
          IF (PISRETURNNAME = 0) THEN
            V_RESULT := V_RESULT || C.DISTRICT || '';'';
          ELSE
            V_RESULT := V_RESULT || C.NAME || '';'';
          END IF;
        END IF;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;

  END LOOP;

  RETURN V_RESULT;

END;
';


ALTER FUNCTION mir.get_district_by_kladr2(pid character varying, phouse character varying, pisreturnname integer, pkorp character varying, plpufilter character) OWNER TO postgres;

--
-- TOC entry 1727 (class 1255 OID 17070)
-- Dependencies: 5396 14
-- Name: get_dynamic_stac_value(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_dynamic_stac_value(mdoc character, syn character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE

	TYPE_FIELD MIR.SMID.TYPE_FIELD%TYPE;
    SMID_OID MIR.SMID.OID%TYPE;
    SMID_VALUE VARCHAR(255);
    
BEGIN
	   
       SELECT S.TYPE_FIELD FROM MIR.SMID S
       		INTO TYPE_FIELD
       WHERE S.SYNONIM = syn
       LIMIT 1; 
       
       
       IF TYPE_FIELD IS NOT NULL THEN
       
         IF TYPE_FIELD = ''COMBOBOX''
         
         THEN	
         
         	SELECT
      			(SELECT SM.OID FROM MIR.SMID SM WHERE SM.OID = T.VSMID_ID)
            INTO SMID_VALUE
            
            FROM MIR.TIB_MDOC T
       
       		INNER JOIN MIR.SMID S ON T.SMEDIT_ID = S.OID
       
       		WHERE S.SYNONIM = syn
            AND T.FK_ID = mdoc; 
         	
            
         END IF;
         
         IF TYPE_FIELD = ''EDIT''
         THEN	
         
         	SELECT T.VCHAR
      			
            INTO SMID_VALUE
            
            FROM MIR.TIB_MDOC T
       
       		INNER JOIN MIR.SMID S ON T.SMEDIT_ID = S.OID
       
       		WHERE S.SYNONIM = syn
            
            AND T.FK_ID = mdoc;
            
         END IF;
         
         IF TYPE_FIELD = ''DATE''
         THEN	
         	SELECT TO_CHAR(T.VDATE,''DD.MM.YYYY'')
      			
            INTO SMID_VALUE
            
            FROM MIR.TIB_MDOC T
       
       		INNER JOIN MIR.SMID S ON T.SMEDIT_ID = S.OID
       
       		WHERE S.SYNONIM = syn
            
            AND T.FK_ID = mdoc;
            
         END IF;
         IF TYPE_FIELD = ''NUMBER''
         THEN	
                   
            SELECT T.VNUM::INTEGER
                			
            INTO SMID_VALUE
                      
            FROM MIR.TIB_MDOC T
                 
            INNER JOIN MIR.SMID S ON T.SMEDIT_ID = S.OID
                 
            WHERE S.SYNONIM = syn
                      
             AND T.FK_ID = mdoc;
                      
           END IF;
       END IF;
       
       RETURN SMID_VALUE;
END;
';


ALTER FUNCTION mir.get_dynamic_stac_value(mdoc character, syn character) OWNER TO postgres;

--
-- TOC entry 1728 (class 1255 OID 17071)
-- Dependencies: 5396 14
-- Name: get_exchange_var(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_exchange_var(p_var_name character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_cnt integer;
  v_result varchar(100);
BEGIN
  SELECT Count(pc.relname) 
  INTO v_cnt
  FROM pg_catalog.pg_class pc, pg_namespace pn
  WHERE pc.relname=''session_var_tbl'' 
    AND pc.relnamespace=pn.oid 
    AND pn.oid=pg_my_temp_schema();
  IF v_cnt = 0 THEN
    v_result := null;
  ELSE
    SELECT var_value
    INTO v_result
    FROM session_var_tbl
    WHERE var_name = p_var_name;
    IF NOT FOUND THEN
      v_result := null;
    END IF;
  END IF;
  RETURN v_result;
END;
';


ALTER FUNCTION mir.get_exchange_var(p_var_name character varying) OWNER TO postgres;

--
-- TOC entry 1729 (class 1255 OID 17072)
-- Dependencies: 5396 14
-- Name: get_fiogr(character varying, character varying, character varying, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_fiogr(plastname character varying, pfirstname character varying, pmiddlename character varying, pbirthday timestamp without time zone) RETURNS character varying
    LANGUAGE plpgsql IMMUTABLE
    AS '
  /*
  Created by Spasskiy S.N. 23.07.2010
  Возвращает ФИОГР
  */
BEGIN
  RETURN UPPER(MIR.CONVERT_LETTER(SUBSTR(PLASTNAME, 1, 3)) ||
               MIR.CONVERT_LETTER(SUBSTR(PFIRSTNAME, 1, 1)) ||
               MIR.CONVERT_LETTER(SUBSTR(PMIDDLENAME, 1, 1)) ||
               (TO_CHAR(PBIRTHDAY, ''YY'')));
END;

';


ALTER FUNCTION mir.get_fiogr(plastname character varying, pfirstname character varying, pmiddlename character varying, pbirthday timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1730 (class 1255 OID 17073)
-- Dependencies: 5396 14
-- Name: get_fiogr2(character varying, character varying, character varying, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_fiogr2(plastname character varying, pfirstname character varying, pmiddlename character varying, pbirthday date) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN UPPER(MIR.CONVERT_LETTER(SUBSTR(PLASTNAME, 1, 3)) ||
               MIR.CONVERT_LETTER(SUBSTR(PFIRSTNAME, 1, 1)) ||
               MIR.CONVERT_LETTER(SUBSTR(PMIDDLENAME, 1, 1)) ||
               (TO_CHAR(PBIRTHDAY, ''YY'')));
END;

';


ALTER FUNCTION mir.get_fiogr2(plastname character varying, pfirstname character varying, pmiddlename character varying, pbirthday date) OWNER TO postgres;

--
-- TOC entry 1731 (class 1255 OID 17074)
-- Dependencies: 5396 14
-- Name: get_fullmkb10(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_fullmkb10(pmkb10 character varying) RETURNS character
    LANGUAGE plpgsql IMMUTABLE
    AS '
DECLARE
 sRes char(20);
BEGIN
 SELECT case length(substr(pMkb10,5)) 
          when 0    then pMkb10||''.00''
          when 1    then substr(pMkb10,1,4)||''0''||substr(pMkb10,5)
          when 2    then pMkb10
        end INTO sRes;
 RETURN sRes;
END;
';


ALTER FUNCTION mir.get_fullmkb10(pmkb10 character varying) OWNER TO postgres;

--
-- TOC entry 1732 (class 1255 OID 17075)
-- Dependencies: 5396 14
-- Name: get_kladr_city(character, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_kladr_city(poid character, pwithprefix numeric, preturnoid numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare 
--by SpasskiySN 28.09.2011
  vcity varchar(255);
 c record;
begin
  vcity := '''';
  for c in (with recursive q(fc_prefix,
              name,
              fn_level,
              oid) as
               (select upper(s.fc_prefix) fc_prefix,
                       case
                         when 1 = 1 then
                          s.fc_prefix || ''. '' || s.name
                         else
                          s.name
                       end as name,

                       s.fk_level fn_level,
                       s.oid
                  from  mir.tkladrspr s
                 where s.oid = poid
                union all
                select upper(s.fc_prefix) fc_prefix,
                       case
                         when 1 = 1 then
                          s.fc_prefix || ''. '' || s.name
                         else
                          s.name
                       end as name,
                       s.fk_level fn_level,
                       s.oid
                  from mir.tkladrspr s
                 inner join q
                    on (q.oid = s.parent))
              select * from q order by fn_level desc
            ) loop
    if c.fn_level in (4, 3) then
      if (preturnoid = 0) then
        vcity := c.name;
      else
        vcity := c.oid;
      end if;
    end if;
    if c.fn_level = 1 then
      if c.fc_prefix = ''г'' then
        if (preturnoid = 0) then
          vcity := c.name;
        else
          vcity := c.oid;
        end if;
      end if;
    end if;
  end loop;
  return vcity;
end;
';


ALTER FUNCTION mir.get_kladr_city(poid character, pwithprefix numeric, preturnoid numeric) OWNER TO postgres;

--
-- TOC entry 1733 (class 1255 OID 17076)
-- Dependencies: 5396 14
-- Name: get_kladr_point(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_kladr_point(pid character, ppoint character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare 
--by Ognev M.V. 15.03.2012
  vpoint varchar(255);
  counts INTEGER;
  counter INTEGER;
  region_count integer;
 c record;
begin
  vpoint := '''';
  counter = 0;
  counts = 5;
  region_count = 10;
  
  for c in (WITH RECURSIVE
        q AS (
        SELECT  o.oid, o.parent, o.fc_prefix, o.name
        FROM    mir.tkladrspr o
        WHERE   o.oid = pid
        UNION ALL
        SELECT  op.oid, op.parent, op.fc_prefix, op.name
        FROM    mir.tkladrspr op
        JOIN    q
        ON      op.oid = q.parent )  
        SELECT  q.oid, q.parent, q.fc_prefix, q.name FROM  q ) loop
            if (c.fc_prefix = ''р-н'' ) then 
				region_count := counter;
             end if;
      counter := counter + 1;
  end loop;
  
  counter := 0;
  for c in (WITH RECURSIVE
        q AS (
        SELECT  o.oid, o.parent, o.fc_prefix, o.name
        FROM    mir.tkladrspr o
        WHERE   o.oid = pid
        UNION ALL
        SELECT  op.oid, op.parent, op.fc_prefix, op.name
        FROM    mir.tkladrspr op
        JOIN    q
        ON      op.oid = q.parent )  
        SELECT  q.oid, q.parent, q.fc_prefix, q.name FROM  q ) loop
        
      	if (ppoint = ''street'') then
        	if (region_count = 1) then 
            	exit;
            else
            	counts := 0;
            end if;
        end if;
        
        if (ppoint = ''city'') then
        	if (region_count = 1) then 
            	counts = 0;
            else
            	counts = 1;
            end if;
        end if;
        
        if (ppoint = ''region'' and c.fc_prefix = ''р-н'' ) then 
			vpoint :=  c.fc_prefix || ''. '' || c.name;
        end if;
        
        if (counter = counts) then
        	vpoint :=  c.fc_prefix || ''. '' || c.name;
            exit;
        end if;
        
        counter := counter + 1;
        
  end loop;
  
  
  return vpoint;
end;
';


ALTER FUNCTION mir.get_kladr_point(pid character, ppoint character varying) OWNER TO postgres;

--
-- TOC entry 1735 (class 1255 OID 17077)
-- Dependencies: 5396 14
-- Name: get_login_sysuser(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_login_sysuser(plogin character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
--Функция возвращает true, если такой логин в таблице mir.Sysuser уже существует.
--Add by Podolskiy I.M. 08.02.2013
DECLARE
 poralogin_count INTEGER;
BEGIN

 poralogin_count := (select count(sys.username) from mir.sysuser sys
 where sys.username = plogin);
 --
 
 
 RETURN (poralogin_count);
 --
END;
';


ALTER FUNCTION mir.get_login_sysuser(plogin character varying) OWNER TO postgres;

--
-- TOC entry 1736 (class 1255 OID 17078)
-- Dependencies: 5396 14
-- Name: get_long_foms_code(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_long_foms_code(shotcode character) RETURNS text
    LANGUAGE plpgsql
    AS '
--Функция добавляет к коду фомс нули http://tg.samozapis.ru:15000/redmine/issues/22551
--Add by Podolskiy I.M. 09.04.2013
--shotcode короткое наименование кода фомс
DECLARE
longcode varchar;
BEGIN

IF (char_length(shotcode)=1)
THEN longcode=''00''||shotcode;
ELSE
        IF (char_length(shotcode)=2)
        THEN longcode=''0''||shotcode;
        ELSE 
            IF(char_length(shotcode)=0)
            THEN longcode=NULL;
            ELSE
            longcode=shotcode;
            END IF;
    	END IF;
END IF;
RETURN longcode;

END;
';


ALTER FUNCTION mir.get_long_foms_code(shotcode character) OWNER TO postgres;

--
-- TOC entry 1737 (class 1255 OID 17079)
-- Dependencies: 5396 14
-- Name: get_lpu_sysuser(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_lpu_sysuser(pid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  P_RETSTR          VARCHAR (1000);
  P_TSTR          VARCHAR (150);
  countLpu INTEGER;
  cc record;
BEGIN

    select count(1) into countLpu 
      from (
            select distinct c.shortname lpu 
              from mir.sotr so
              left join mir.otdel  o on o.oid=so.otdel
              left join mir.company c on c.oid=o.lpu
             where so.sysuser=PID
           ) t;

    if countLpu<10 then
      P_RETSTR := '''';
      
      for cc in (select distinct c.shortname lpu from mir.sotr so
                        left join mir.otdel  o on o.oid=so.otdel
                        left join mir.company c on c.oid=o.lpu
                      where so.sysuser=PID
               )
      loop
        P_RETSTR:=P_RETSTR||cc.lpu||'';'';
      end loop;
      
      if LENGTH(P_RETSTR)>3 then
        P_RETSTR:=SUBSTR(P_RETSTR,1,LENGTH(P_RETSTR)-1);
      end if;
    else
      P_RETSTR:=''Больше 10 ЛПУ...'';
    end if;

    RETURN P_RETSTR;
END;

';


ALTER FUNCTION mir.get_lpu_sysuser(pid character varying) OWNER TO postgres;

--
-- TOC entry 1738 (class 1255 OID 17080)
-- Dependencies: 5396 14
-- Name: get_mdoc_location_registratura(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_mdoc_location_registratura() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''563db3a8-63b9-11e2-8b37-a393e6c06a95'';
END;
';


ALTER FUNCTION mir.get_mdoc_location_registratura() OWNER TO postgres;

--
-- TOC entry 1739 (class 1255 OID 17081)
-- Dependencies: 5396 14
-- Name: get_mkb_10_list_by_range(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_mkb_10_list_by_range(pmkbrange character varying) RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
DECLARE
    r mir.mkb_10.oid%type;   --%ROWTYPE;
    pos integer;
 
    curDiags CURSOR (sMKB10 VARCHAR) 
    for 
    (                         
        SELECT mkb.oid
          FROM mir.mkb_10 mkb
         WHERE (SUBSTR(mir.get_fullmkb10(mkb.code),1,20)
               BETWEEN
                case NVL(LENGTH(SUBSTR(sMKB10,1,
                                       case INSTR(sMKB10,''-'') 
                                         when 0 then 0
                                         else INSTR(sMKB10,''-'')-1
                                       end)
                               ),0
                        )
                  when 0 then 
                    case LENGTH(sMKB10)
                      when 3 then SUBSTR(sMKB10,1,3)||''.00''
                      when 5 then SUBSTR(sMKB10,1,4)||''0''||SUBSTR(sMKB10,5,1)
                      when 6 then SUBSTR(sMKB10,1,6)
                    end                              
                  when 3 then SUBSTR(sMKB10,1,3)||''.00''
                  when 5 then SUBSTR(sMKB10,1,4)||''0''||SUBSTR(sMKB10,5,1)
                  when 6 then SUBSTR(sMKB10,1,6)
                end
               AND
                case LENGTH(SUBSTR(sMKB10,INSTR(sMKB10,''-'')+1))
                  when 3 then SUBSTR(sMKB10,INSTR(sMKB10,''-'')+1,3)||''.99''
                  when 5 then SUBSTR(sMKB10,INSTR(sMKB10,''-'')+1,4)||''0''||SUBSTR(sMKB10,INSTR(sMKB10,''-'')+5)
                  when 6 then SUBSTR(sMKB10,INSTR(sMKB10,''-'')+1)
                end
               )
    );
BEGIN
  IF INSTR( pMkbRange, '','' )<>0 THEN 
    pos:=1; 
    FOR I in 1.. LENGTH( pMkbRange ) 
    LOOP
      IF INSTR( pMkbRange, '','', pos+1 ) <> 0  THEN
        FOR r IN curDiags(TRIM(substr( pMkbRange, pos, instr(pMkbRange, '','', pos+1)-pos ))) 
        LOOP
          return next r.oid;              
        END LOOP;
        
        pos:=instr( pMkbRange, '','', pos) + 1;
      ELSE
        FOR r IN curDiags(TRIM(substr( pMkbRange, pos, LENGTH(pMkbRange) ))) LOOP
          return next r.oid;  
        END LOOP;
        
        exit;
      END IF;
    END LOOP;
  ELSE
    FOR r IN curDiags(TRIM(pMkbRange)) LOOP
      return next r.oid;          
    END LOOP;
  END IF;
END;
';


ALTER FUNCTION mir.get_mkb_10_list_by_range(pmkbrange character varying) OWNER TO postgres;

--
-- TOC entry 1740 (class 1255 OID 17082)
-- Dependencies: 5396 14
-- Name: get_mkb_standart_string(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_mkb_standart_string(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  RESULT varchar;
  VAL    integer;
  m      record;
begin
  RESULT := '''';
  VAL    := 0;
  for m in (select *
              from mir.standart_gosp_mkb m
              left join mir.mkb_10 mm
                on mm.fk_id = m.mkb
             where m.oid_standart = poid
             ORDER BY MM.FK_MKB10) 
  LOOP
    IF (VAL = 0) THEN
      RESULT := M.FK_MKB10;--TO_CLOB(M.FK_MKB10);
      VAL    := 1;
    ELSE
      RESULT := RESULT || ''; '' || M.FK_MKB10;--TO_CLOB(M.FK_MKB10);
    END IF;
  END LOOP;
  
  --IF(DBMS_LOB.getlength(RESULT)>700) THEN
  --RESULT:=SUBSTR(RESULT,0,700)||''...'';
  --END IF;
  RESULT:=SUBSTR(RESULT,0,700)||''...'';
  
  return(RESULT);
end;

';


ALTER FUNCTION mir.get_mkb_standart_string(poid character) OWNER TO postgres;

--
-- TOC entry 1741 (class 1255 OID 17083)
-- Dependencies: 5396 14
-- Name: get_month_genitive(timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_month_genitive(pdate timestamp without time zone) RETURNS character varying
    LANGUAGE plpgsql
    AS '
begin    
    return ( select case date_part(''mon'', pdate )
               when 1 then ''января''
               when 2 then ''февраля''
               when 3 then ''марта''
               when 4 then ''апреля''
               when 5 then ''мая''
               when 6 then ''июня''
               when 7 then ''июля''
               when 8 then ''августа''
               when 9 then ''сентября''
               when 10 then ''октября''
               when 11 then ''ноября''
               when 12 then ''декабря''
               else ''''
             end );
end;
';


ALTER FUNCTION mir.get_month_genitive(pdate timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1742 (class 1255 OID 17084)
-- Dependencies: 5396 14
-- Name: get_name_all_street_district(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_name_all_street_district(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  STREETNAME varchar(5100); --clob;
  VAR_COUNT integer;
  c record;
begin
  STREETNAME := '''';
   VAR_COUNT := 0;
  for c in (select distinct to_char(tk.name) || '' '' || to_char(tk.fc_prefix) || ''.'' as street
                   from mir.districtstreet dis
                   left join mir.tkladrspr tk
                     on tk.oid = dis.tkladr
                  where dis.district = POID
                  ORDER BY street
                  ) LOOP
    IF ( VAR_COUNT = 0) THEN
      STREETNAME := c.street; --TO_CLOB(c.street);
    ELSE
      STREETNAME := STREETNAME || '', '' ||  c.street;--TO_CLOB(c.street);
    END IF;
    
     VAR_COUNT := 1;
  END LOOP;
  
  --IF(DBMS_LOB.getlength(STREETNAME)>5000) THEN
  --  STREETNAME:=SUBSTR(STREETNAME,0,5000)||''...'';
  --END IF;
  STREETNAME:=SUBSTR(STREETNAME,0,5000)||''...'';
  
  return STREETNAME;
end;

';


ALTER FUNCTION mir.get_name_all_street_district(poid character) OWNER TO postgres;

--
-- TOC entry 1743 (class 1255 OID 17085)
-- Dependencies: 5396 14
-- Name: get_norm(character varying, character varying, date, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_norm(ptest character varying, ppeople character varying, pdate date, pphase numeric, ptrimestr numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  p_sex numeric;
  p_year numeric;
  p_month numeric;
  p_day numeric;
  p_nL numeric;
  p_nH numeric;
  p_nLE numeric;
  p_nHE numeric;
  p_nDirect numeric;
  p_nIsDirect numeric;
  p_result varchar;
  p_strTemp varchar;
  p_strTemp2 varchar;
BEGIN
select sex,
       date_part(''year'', age(birthday)),
       date_part(''month'', age(birthday)),
       date_part(''day'', age(birthday))
into p_sex,
     p_year,
     p_month,
     p_day
from mir.people
where oid = ppeople;

if(p_sex = 2) THEN
select min_men,
       max_men,
       direct_men,
       entry_men,
       to_number(SUBSTRING(range_entry
from 1 for 1), ''9''),
     to_number(SUBSTRING(range_entry
from 2 for 1), ''9'')
into p_nL,
     p_nH,
     p_nDirect,
     p_nIsDirect,
     p_nLE,
     p_nHE
from mir.laboratory_norm
where presctypeparam = ptest and
      p_year * 365 + p_month * 31 + p_day BETWEEN age_year_begin * 365 +
      age_month_begin * 31 + age_day_begin and
      age_year_end * 365 + age_month_end * 31 + age_day_end;
elseif(p_sex = 1) then
select min_woman,
       max_woman,
       direct_woman,
       entry_woman,
       to_number(SUBSTRING(range_entry
from 3 for 1), ''9''),
     to_number(SUBSTRING(range_entry
from 4 for 1), ''9'')
into p_nL,
     p_nH,
     p_nDirect,
     p_nIsDirect,
     p_nLE,
     p_nHE
from mir.laboratory_norm
where presctypeparam = ptest and
      p_year * 365 + p_month * 31 + p_day BETWEEN age_year_begin * 365 +
      age_month_begin * 31 + age_day_begin and
      age_year_end * 365 + age_month_end * 31 + age_day_end and
      (case
         when (pphase = 0 or
      pphase is null) and
      (entire_cycle + follicular_phase + midcycle + luteal_phase) = 0 then 1
         when pphase = 1 and
      entire_cycle = 1 then 1
         when pphase = 2 and
      follicular_phase = 1 then 1
         when pphase = 3 and
      midcycle = 1 then 1
         when pphase = 4 and
      luteal_phase = 1 then 1
         else 0
       end) = 1 and
      (case
         when (ptrimestr = 0 or
      ptrimestr is null) and
      (trimestr_1 + trimestr_2 + trimestr_3) = 0 then 1
         when ptrimestr = 1 and
      trimestr_1 = 1 then 1
         when ptrimestr = 2 and
      trimestr_2 = 1 then 1
         when ptrimestr = 3 and
      trimestr_3 = 1 then 1
         else 0
       end) = 1;
ELSE
return '''';
end if;

if(p_nL is null and p_nH is null and p_nIsDirect = 0) THEN
select ''''
into p_result;
elseif (p_nIsDirect = 1) THEN
select '' = '' || to_char(p_nDirect, ''FM99999999990.0999999'')
into p_result;
elseif ((p_nL is null or p_nL = 0) and p_nH is not null) then
    IF(p_nHE = 1) THEN
        select '' <= '' || to_char(p_nH, ''FM99999999990.0999999'')
        into p_result;
    else
        select '' < '' || to_char(p_nH, ''FM99999999990.0999999'')
        into p_result;
    end if;
elseif ((p_nH is null or p_nH = 0) and p_nL is not null) then
    IF(p_nLE = 1) THEN
        select '' >= '' || to_char(p_nL, ''FM99999999990.0999999'')
        into p_result;
    else
        select '' > '' || to_char(p_nL, ''FM99999999990.0999999'')
        into p_result;
    end if;
elseif (p_nL is not null and p_nH is not NULL) THEN
    IF(p_nHE = 1) THEN
        select '' <= '' || to_char(p_nH, ''FM99999999990.0999999'')
        into p_strTemp;
    else
        select '' < '' || to_char(p_nH, ''FM99999999990.0999999'')
        into p_strTemp;
    end if;
    IF(p_nLE = 1) THEN
        select to_char(p_nL, ''FM99999999990.0999999'') || '' <= n''
        into p_strTemp2;
    else
        select to_char(p_nL, ''FM99999999990.0999999'') || '' < n''
        into p_strTemp2;
    end if;
    select p_strTemp2 || p_strTemp
    into p_result;
end if;

  return p_result;
END;
';


ALTER FUNCTION mir.get_norm(ptest character varying, ppeople character varying, pdate date, pphase numeric, ptrimestr numeric) OWNER TO postgres;

--
-- TOC entry 1734 (class 1255 OID 17086)
-- Dependencies: 5396 14
-- Name: get_num_agreement(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_num_agreement() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_res mir.pay_agreement.num%type;
BEGIN
  SELECT nextval(''mir.num_agreement_seq'')
    INTO v_res;
    
  RETURN v_res||''/''||to_char(now(), ''yy'');
END;
';


ALTER FUNCTION mir.get_num_agreement() OWNER TO postgres;

--
-- TOC entry 1634 (class 1255 OID 17087)
-- Dependencies: 5396 14
-- Name: get_num_bill(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_num_bill() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_res mir.bill.num%type;
BEGIN
  SELECT nextval(''mir.num_bill_seq'')
    INTO v_res;
    
  RETURN v_res;
END;
';


ALTER FUNCTION mir.get_num_bill() OWNER TO postgres;

--
-- TOC entry 1744 (class 1255 OID 17088)
-- Dependencies: 5396 14
-- Name: get_oralogin_by_mislogin(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_oralogin_by_mislogin(plogin character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
-- Created 20090320 by Linnikov.
 -- Функция возвращает логин пользователя Oracle по логину пользователя МИС.
DECLARE
 poralogin varchar(30);
BEGIN
 poralogin := ''Z'' || UPPER(plogin);
 --
 RETURN(poralogin);
 --
END;
';


ALTER FUNCTION mir.get_oralogin_by_mislogin(plogin character varying) OWNER TO postgres;

--
-- TOC entry 1745 (class 1255 OID 17089)
-- Dependencies: 5396 14
-- Name: get_oralogin_exist(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_oralogin_exist(plogin character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
-- Created 20121116 by Bessarabov.
 -- Функция возвращает true, если такой логин в Oracle уже существует.
DECLARE
 poralogin_count INTEGER;
BEGIN

 poralogin_count := (select count(auth.rolname) from pg_catalog.pg_authid auth
 where auth.rolname = (''Z''||upper(plogin)));
 --
 
 
 RETURN (poralogin_count);
 --
END;
';


ALTER FUNCTION mir.get_oralogin_exist(plogin character varying) OWNER TO postgres;

--
-- TOC entry 1746 (class 1255 OID 17090)
-- Dependencies: 5396 14
-- Name: get_otdel_parent(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_otdel_parent(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  P_RETSTR          VARCHAR (36);
   cc record;
begin
             for cc in ( 
             		with recursive q(oid,name) as
			              (select * from mir.otdel e where oid=poid
		               union all
        			        select e.* from mir.otdel e        
			                inner join q
			                   on (q.parent = e.oid)
                           )
   				        select oid from q where parent is null)
		      loop
		        P_RETSTR:=cc.oid;
		      end loop;
RETURN P_RETSTR;                     
 end ;        
';


ALTER FUNCTION mir.get_otdel_parent(poid character) OWNER TO postgres;

--
-- TOC entry 1747 (class 1255 OID 17091)
-- Dependencies: 5396 14
-- Name: get_otdelchilds(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_otdelchilds(p_id character varying) RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
/*
    add Kulikovskiy E.V. 27/08/2012 
    возвращает дочерние отделения включая себя
*/
DECLARE 
      r record;
BEGIN
    for r in (
        WITH RECURSIVE q AS 
        (
              select o.oid,
                     o.parent
                from mir.otdel o
               where o.oid = p_id
                 
               union all
               
              select o.oid,
                     o.parent
                from mir.otdel o
               inner join q
                  on o.parent = q.oid
        )
        select q.oid
          from q ) 
    LOOP
      return next r.oid;
    end LOOP;
END;
';


ALTER FUNCTION mir.get_otdelchilds(p_id character varying) OWNER TO postgres;

--
-- TOC entry 1748 (class 1255 OID 17092)
-- Dependencies: 5396 14
-- Name: get_otdels_by_lpu(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_otdels_by_lpu(plpu character varying) RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
DECLARE
  r record;
BEGIN
    for r in (
        WITH RECURSIVE q AS 
        (
              select o.oid,
                     o.parent
                from mir.otdel o
               where o.lpu = plpu
                 
               union all
               
              select o.oid,
                     o.parent
                from mir.otdel o
               inner join q
                  on o.parent = q.oid
        )
        select DISTINCT q.oid
          from q ) 
    LOOP
      return next r.oid;
    end LOOP;
END;
';


ALTER FUNCTION mir.get_otdels_by_lpu(plpu character varying) OWNER TO postgres;

--
-- TOC entry 11705 (class 0 OID 0)
-- Dependencies: 1748
-- Name: FUNCTION get_otdels_by_lpu(plpu character varying); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION get_otdels_by_lpu(plpu character varying) IS 'Возвращает отделения с подотделениями для указанного ЛПУ';


--
-- TOC entry 1749 (class 1255 OID 17093)
-- Dependencies: 5396 14
-- Name: get_pacient_paytype_for_payservice(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_pacient_paytype_for_payservice(people_id character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE

 pay_type varchar;
 polis_oid varchar;
 polis_type varchar;

 
BEGIN
	
SELECT i.oid, i.pay_type INTO polis_oid, polis_type FROM MIR.INSURANCE i 
WHERE i.PEOPLE = people_id 
AND i.state = 1 
AND (i.enddate >= CURRENT_DATE OR i.enddate is NULL);

IF polis_oid IS NOT NULL THEN

	IF polis_type IS NOT NULL THEN
 
   pay_type = polis_type;
--      SELECT  p.pay_type INTO pay_type FROM MIR.INSURTYPE p 
--      WHERE p.oid = polis_type;

      IF (pay_type is not NULL) and (TRIM(pay_type) != ''budget'')  THEN
        RETURN pay_type;
      ELSE
      	RETURN ''cash'';
      END IF;
    
    END IF;

    
END IF;

 RETURN ''cash'';

END;
';


ALTER FUNCTION mir.get_pacient_paytype_for_payservice(people_id character varying) OWNER TO postgres;

--
-- TOC entry 1750 (class 1255 OID 17094)
-- Dependencies: 5396 14
-- Name: get_pacinfo_by_schedule(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_pacinfo_by_schedule(sch_oid character) RETURNS TABLE(sch character, pac_fio character varying, pac_telephone character varying, date_birthday character varying, benefit text, first_priem integer, napr_by character varying, info character varying, date_naz character varying, course character varying, services character varying, pay_type character varying, sms character varying, tel_yavka character varying, count_neyavka integer, count_pac integer)
    LANGUAGE plpgsql ROWS 1
    AS '
BEGIN
  return query   
    select sch.oid as sch,
           CAST((select mir.people_get_peplfio(pac.oid)) as VARCHAR ) as  pac_fio,
           CAST( pac.telhome as VARCHAR ) as pac_telephone,
           CAST(to_char(pac.birthday,''dd.mm.yyyy'') as VARCHAR ) date_birthday,
           CAST((select string_agg(ben.name, '' , '')
    			 from mir."benefit" b
    			 inner join mir.benefit_type ben on ben.oid = b.benefit_type
    			 where b.people = pac.oid
    			 and (b.date_end >= CURRENT_DATE or COALESCE(b.date_end, to_date(''01.01.1900'',''dd.mm.yyyy'')) = ''01.01.1900'')) as TEXT )  as benefit,
    	   CASE WHEN sch.oid in (select s_oid.oid
                          from mir.schedule s_oid
                          left join mir.presc_schedule ps_oid on ps_oid.shedule_id = s_oid.oid
                          left join mir.presc p_oid on ps_oid.presc_id = p_oid.id
                          where  p_oid.visit_id = vp.id
                          and s_oid.starton = (select min(s_min.starton) from mir.schedule s_min 
                                               left join mir.presc_schedule ps_min on ps_min.shedule_id = s_min.oid
                                               left join mir.presc p_min on ps_min.presc_id = p_min.id
                                               where  p_min.visit_id = vp.id))
           THEN 1 ELSE 0 END as   first_priem,
           (select mir.emp_get_empfio(amb.empo_id)) as napr_by,
           sch.info,
           CAST(to_char(vp.beginv,''dd.mm.yyyy hh:mm'')  as VARCHAR ) date_naz,
           CAST( (CASE WHEN amb.course = 1 THEN ''Да'' ELSE ''Нет'' END) as VARCHAR ) as course,
           CAST(''Нет'' as VARCHAR ) as services,
           CAST((select inst.name
           	     from mir.insurance ins
            	 inner join mir.pay_type inst on ins.pay_type = inst.oid
                 where amb.idoc_id = ins.oid) as VARCHAR ) pay,
           CAST(''Не отправлено'' as VARCHAR ) sms,
           CAST(''Не подтверждено'' as VARCHAR ) tel_yavka,
           CAST((select count (DISTINCT(pres.id)) from mir.presc pres
                  inner join mir.mdoc prmdoc on pres.mdoc_id = prmdoc.id
                  where prmdoc.people_id = pac.oid
                  and TRIM(pres.presc_state_id) = ''absence'') AS INTEGER ) as count_yavka,
           CAST ((select count(psch.*) from mir.presc_schedule psch where psch.shedule_id = sch_oid) as INTEGER) as count_pac
    from mir.schedule sch
    left join mir.presc_schedule ps on ps.shedule_id = sch.oid
    left join mir.presc pr on pr.id = ps.presc_id
    left join mir.mdoc md on md.id = pr.mdoc_id
    left join mir.people pac on pac.oid = md.people_id
    left join mir.visit vp on vp.id = pr.visit_id
    left join mir.ambticket amb on amb.id = vp.id
    where sch.oid = sch_oid;
END;
';


ALTER FUNCTION mir.get_pacinfo_by_schedule(sch_oid character) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 175 (class 1259 OID 17095)
-- Dependencies: 14
-- Name: presctypefolder; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presctypefolder (
    id character(36) NOT NULL,
    parent_id character(36),
    name character varying(100),
    del integer
);


ALTER TABLE mir.presctypefolder OWNER TO postgres;

--
-- TOC entry 11706 (class 0 OID 0)
-- Dependencies: 175
-- Name: TABLE presctypefolder; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presctypefolder IS 'Иерархия назначений
Author: Kulbatsky Dmitry';


--
-- TOC entry 11707 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN presctypefolder.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypefolder.id IS 'SEQUENCE=[MIS.SQ_MFOLDER]';


--
-- TOC entry 11708 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN presctypefolder.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypefolder.parent_id IS '[MFOLDER.ID]';


--
-- TOC entry 11709 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN presctypefolder.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypefolder.name IS 'Наименование ветки дерева назначений';


--
-- TOC entry 11710 (class 0 OID 0)
-- Dependencies: 175
-- Name: COLUMN presctypefolder.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypefolder.del IS 'Удалено? 0 - Нет; 1 - да';


--
-- TOC entry 1751 (class 1255 OID 17098)
-- Dependencies: 2612 5396 14
-- Name: get_parentpresctype(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_parentpresctype(p_id character varying) RETURNS SETOF presctypefolder
    LANGUAGE plpgsql
    AS '
/*
	add Ognev M.V. 22/03/2012 
    возвращает родительские элементы за исключением самого верхнего
*/

DECLARE 
	  PARENT_FOLDER_ID         VARCHAR (36);
      FOLDER_ID         VARCHAR (36);
      r mir.presctypefolder%ROWTYPE;

BEGIN

	  PARENT_FOLDER_ID := p_id;
      FOLDER_ID := '''';
		
      SELECT pr.presctypefolder_id
      INTO FOLDER_ID
      FROM mir.presctype pr
      WHERE oid = p_id; 
	
	if ( FOLDER_ID <> '''') THEN
    	PARENT_FOLDER_ID := FOLDER_ID;
    end if;
 
        for r in (WITH RECURSIVE
                    q AS
                    (
                       SELECT   o.*
                        FROM    mir.presctypefolder o
                        WHERE   o.id = PARENT_FOLDER_ID and o.parent_id is not null
                        UNION ALL
                        SELECT  op.*
                        FROM    mir.presctypefolder op
                        JOIN    q
                        ON      op.id = q.parent_id and op.parent_id is not null
                    )
                    SELECT   *   FROM    q) LOOP
                    return next r;
        end LOOP;
        
END;
';


ALTER FUNCTION mir.get_parentpresctype(p_id character varying) OWNER TO postgres;

--
-- TOC entry 1753 (class 1255 OID 17099)
-- Dependencies: 5396 14
-- Name: get_people_dublicate_list(character, character varying, character varying, character varying, date, character varying, character varying, character varying, character varying, character varying, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_people_dublicate_list(people_oid character, people_firstname character varying, people_lastname character varying, people_middlename character varying, people_birthday date, people_snils character varying, people_peopledocser character varying, people_peopledocnum character varying, insurance_ser character varying, insurance_num character varying, current_lpu character, current_otdel character) RETURNS TABLE("mir.people.oid" character, "mir.people.firstname" character varying, "mir.people.lastname" character varying, "mir.people.middlename" character varying, "mir.people.birthday" date, "mir.people.snils" character varying, "mir.people.peopledocser" character varying, "mir.people.peopledocnum" character varying, "mir.insurance.ser" character varying, "mir.insurance.num" character varying)
    LANGUAGE plpgsql
    AS '
  DECLARE field RECORD;
  DECLARE query_text text ;
  DECLARE query_where text ;
    DECLARE deemaric text ;
  DECLARE is_empty bool ;
  DECLARE is_use_filters bool ;
  BEGIN
      query_where = '''';
      is_empty = true;
      is_use_filters = false;
      IF people_oid IS NOT NULL THEN
        query_where = query_where || '' not(mir.people.oid = ''''''|| people_oid ||'''''') and '';
      END IF;
      query_where = query_where || ''('' ;

deemaric = ''SELECT DISTINCT * 
                   FROM mir.patientcardsettings_uniquefield s
                   inner join mir.patientcard_uniquefield_lpu f on f.patientcardsettings_uniquefield = s.oid                   
                   where dbname is not null 
                   		 and f.lpu = '' || current_lpu;
                         
    --EXECUTE(deemaric);

      FOR field IN 
      			   SELECT DISTINCT * 
                   FROM mir.patientcardsettings_uniquefield s
                   inner join mir.patientcard_uniquefield_lpu f on f.patientcardsettings_uniquefield = s.oid                   
                   where dbname is not null 
                   		 and f.lpu = current_lpu
      LOOP
          --query_where = query_where || '' not(mir.people.oid = people_oid or people_oid is null) and (''
          --query_where = query_where || '' mir.'' || field.dbname || '' = _'' || field.dbname || '' and'';
          is_empty = false;
                 
          IF field.dbname = ''people.firstname'' AND  people_firstname IS NOT NULL THEN
          	query_where = query_where || '' upper(mir.'' || field.dbname || '') = upper('''''' || people_firstname ||'''''') and '';
            is_use_filters = true;
          ELSIF field.dbname = ''people.lastname'' AND  people_lastname IS NOT NULL THEN
          	query_where = query_where || '' upper(mir.'' || field.dbname || '') = upper('''''' || people_lastname ||'''''') and'';
            is_use_filters = true;
          ELSIF field.dbname = ''people.middlename'' AND  people_middlename IS NOT NULL THEN
          	query_where = query_where || '' upper(mir.'' || field.dbname || '') = upper('''''' || people_middlename ||'''''') and'';            
            is_use_filters = true;
          ELSIF field.dbname = ''people.birthday'' AND  people_birthday IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || people_birthday ||'''''' and'';
            is_use_filters = true;
          ELSIF field.dbname = ''people.snils'' AND  people_snils IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || people_snils ||'''''' and'';
            is_use_filters = true;
          ELSIF field.dbname = ''people.peopledocser'' AND  people_peopledocser IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || people_peopledocser ||'''''' and'';
            is_use_filters = true;
          ELSIF field.dbname = ''people.peopledocnum'' AND  people_peopledocnum IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || people_peopledocnum ||'''''' and'';
            is_use_filters = true;
          ELSIF field.dbname = ''insurance.ser'' AND  insurance_ser IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || insurance_ser ||'''''' and'';
            is_use_filters = true;
          ELSIF field.dbname = ''insurance.num'' AND  insurance_num IS NOT NULL THEN
          	query_where = query_where || '' mir.'' || field.dbname || '' = '''''' || insurance_num ||'''''' and'';                                                                                                
            is_use_filters = true;
          END IF;
          
      END LOOP;
      
      IF is_empty = true OR is_use_filters = false THEN
	      query_where = query_where || ''1=2 and '';
      END IF;

      query_text = '' select  DISTINCT
      						 mir.people.oid,
                             mir.people.firstname,
                             mir.people.lastname,
                             mir.people.middlename,
                             mir.people.birthday,
                             mir.people.snils,
                             mir.people.peopledocser,
                             mir.people.peopledocnum,
                             mir.insurance.ser,
                             mir.insurance.num
                      from mir.people 
                      left join mir.mdoc on mir.mdoc.people_id = mir.people.oid
                      left join mir.insurance on mir.insurance.people = mir.people.oid
                      where '' || query_where || '' mir.mdoc.otdel = ANY(string_to_array( '''''' || current_otdel || '''''', '''','''')) )'';  
      return query EXECUTE(query_text);
  END;
';


ALTER FUNCTION mir.get_people_dublicate_list(people_oid character, people_firstname character varying, people_lastname character varying, people_middlename character varying, people_birthday date, people_snils character varying, people_peopledocser character varying, people_peopledocnum character varying, insurance_ser character varying, insurance_num character varying, current_lpu character, current_otdel character) OWNER TO postgres;

--
-- TOC entry 1754 (class 1255 OID 17100)
-- Dependencies: 5396 14
-- Name: get_post_parent(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_post_parent(post_oid character) RETURNS boolean
    LANGUAGE plpgsql
    AS '
DECLARE
  is_doctor BOOLEAN;
  cc RECORD;
BEGIN
is_doctor = false;
 		for cc in (
        	WITH RECURSIVE par ( oid, name, id) AS 
                            (
                            select o.oid,
                                    o.name,
                                    o.id,
                                    o.parent as parent
                            from mir.post o
                            where o.oid = post_oid
             
                            union all
           
                            select o.oid,
                                    o.name,
                                    o.id,
                                    o.parent as parent
                            from mir.post o
                            INNER JOIN par pr 
                                ON o.oid = pr.parent
                            )

                            select p.id
                            from par p)
              loop
              	IF (cc.id in (''2'',''3''))
                THEN
                  is_doctor:=true;
                  EXIT;
                END IF;
		      end loop;
 RETURN is_doctor;

END;
';


ALTER FUNCTION mir.get_post_parent(post_oid character) OWNER TO postgres;

--
-- TOC entry 1755 (class 1255 OID 17101)
-- Dependencies: 5396 14
-- Name: get_presctypes_sysuser(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_presctypes_sysuser(pid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  P_RETSTR          VARCHAR (1000);
  P_TSTR          VARCHAR (200);  
  c record;
  i INTEGER;
BEGIN
P_RETSTR := '''';
    i:=0;
    for c in (SELECT d.name FROM mir.sysuser_presctype a
                left join mir.presctype d on d.oid=a.presctypes
               where a.sysusers=PID
             )
    loop
    if i<10 then
        P_RETSTR:=P_RETSTR||c.name||'';'';
    end if;
        i:=i+1;
        if i=10 then
        P_RETSTR:=P_RETSTR||''  ... (у врача более 10-ти специальностей);'';
         end if;
    end loop;
    
    if LENGTH(P_RETSTR)>3 then
           P_RETSTR:=SUBSTR(P_RETSTR,1,LENGTH(P_RETSTR)-1);
    end if;
    
    RETURN P_RETSTR;
END;
';


ALTER FUNCTION mir.get_presctypes_sysuser(pid character varying) OWNER TO postgres;

--
-- TOC entry 1756 (class 1255 OID 17102)
-- Dependencies: 5396 14
-- Name: get_profex_presctype(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_profex_presctype() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
--return ''219d50bd-32f1-4106-b6fa-c4672899edb6'';
return ''bef36c79-2b32-481d-8905-53b4533fc3f0'';
END;
';


ALTER FUNCTION mir.get_profex_presctype() OWNER TO postgres;

--
-- TOC entry 11711 (class 0 OID 0)
-- Dependencies: 1756
-- Name: FUNCTION get_profex_presctype(); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION get_profex_presctype() IS 'Функция возврощает id назначения - Заключение руководителя центра профпоталогии
это назначение необходимо для закрытия профосмотра';


--
-- TOC entry 1757 (class 1255 OID 17103)
-- Dependencies: 5396 14
-- Name: get_profex_result_goden(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_profex_result_goden() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''599bf0b0-4b3a-11e2-9431-07ad8c4f781c'';
END;
';


ALTER FUNCTION mir.get_profex_result_goden() OWNER TO postgres;

--
-- TOC entry 1758 (class 1255 OID 17104)
-- Dependencies: 5396 14
-- Name: get_profex_result_negoden(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_profex_result_negoden() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
return ''562ff6b0-4b3a-11e2-b219-c32423b25cce'';
END;
';


ALTER FUNCTION mir.get_profex_result_negoden() OWNER TO postgres;

--
-- TOC entry 1759 (class 1255 OID 17105)
-- Dependencies: 5396 14
-- Name: get_region_sysdate(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_region_sysdate(pregion character varying) RETURNS timestamp without time zone
    LANGUAGE plpgsql
    AS '
DECLARE
  res TIMESTAMP;
  c record;
BEGIN
  res := now();
  
  for c in (
      select now() + cast( S.REGION_TZ ||'' hour'' as interval ) as datetime
        from MIR.VREGION_SETTINGS S
       where S.KLADR_ID = PREGION
           )
  loop
    res := c.datetime;
  end loop;
   
  RETURN res;
END;

';


ALTER FUNCTION mir.get_region_sysdate(pregion character varying) OWNER TO postgres;

--
-- TOC entry 1760 (class 1255 OID 17106)
-- Dependencies: 5396 14
-- Name: get_sched_payment(character, character, character, character, date, integer, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_sched_payment(plpu character, ppresc character, pisnapronly character, psysuser character, pdate date, pinc integer, pregion timestamp without time zone) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  Result  varchar(20);
  V_MAX   VARCHAR(20);
  V_MIN   VARCHAR(20);
  V_COUNT VARCHAR(20);
begin

  select min(to_char(s.STARTON, ''hh24:mi''))
    INTO V_MIN
    from mir.schedule_info s
   where s.lpu = PLPU
     and date_TRUNC(''day'', s.STARTON) = PDATE + cast( (CAST(PINC as varchar) ||'' day'') as interval )  
     and s.PRESCTYPE = PPRESC
     and s.ISNAPRONLY = PISNAPRONLY
     and s.SYSUSER = PSYSUSER;
  select MAX(to_char(s.ENDON, ''hh24:mi''))
    INTO V_MAX
    from mir.schedule_info s
   where s.lpu = PLPU
     and date_TRUNC(''day'', s.STARTON) = PDATE + cast( (CAST(PINC as varchar) ||'' day'') as interval )  
     and s.PRESCTYPE = PPRESC
     and s.ISNAPRONLY = PISNAPRONLY
     and s.SYSUSER = PSYSUSER;
  select COUNT(S.OID)
    INTO V_COUNT
    from mir.schedule_info s
   where s.lpu = PLPU
     and date_TRUNC(''day'', s.STARTON) >= PDATE + cast( (CAST(PINC as varchar) ||'' day'') as interval )  
     AND date_TRUNC(''day'', S.ENDON) <= PDATE + cast( (CAST(PINC as varchar) ||'' day'') as interval )  
     and s.PRESCTYPE = PPRESC
     and s.ISNAPRONLY = PISNAPRONLY
     and s.SYSUSER = PSYSUSER and s.STATE<>4
     and s.STARTON >= pregion
     AND S.PEOPLE IS NULL;
  IF (V_MIN IS NULL OR V_MAX IS NULL) THEN
    RESULT := '''';
  ELSE
    RESULT := V_MIN || ''-'' || V_MAX || '' ('' || V_COUNT || '')'';
  END IF;
  return(Result);
end;
';


ALTER FUNCTION mir.get_sched_payment(plpu character, ppresc character, pisnapronly character, psysuser character, pdate date, pinc integer, pregion timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1762 (class 1255 OID 17107)
-- Dependencies: 5396 14
-- Name: get_show_in_schedule_flag(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_show_in_schedule_flag(presctype character, folder character, sotr_id character) RETURNS boolean
    LANGUAGE plpgsql
    AS '
DECLARE
 	show bool;
BEGIN
show = false;
IF COALESCE(presctype,'''') != '''' THEN
	select COALESCE(sp.show_in_schedule,false) into show from mir.sotr_presctype sp
    where sp.sotr = sotr_id and sp."execute" = 1 and sp.presctype_id = presctype;
ELSE

	select count(sp.oid) > 0 into show from mir.sotr_presctype sp
                inner join mir.presctype p on p.oid = sp.presctype_id
                where sp."execute" = 1 
                and sp.sotr = sotr_id
                and COALESCE(sp.show_in_schedule,false) != false
                and p.presctypefolder_id in


				(WITH RECURSIVE par (id,parent_id,name) AS 
                            (
                            select 
                            pf.id, 
                            pf.parent_id,
                            pf.name 
                            from mir.presctypefolder pf
                            where pf.id = folder
                            
             
                            union all
           
                            select 
                            pf.id, 
                            pf.parent_id,
                            pf.name 
                            from mir.presctypefolder pf
                           
                            INNER JOIN par pr 
                                ON pf.parent_id = pr.id
                            )

                            select p.id
                            from par p);
END IF;
return show;    
    
END;
';


ALTER FUNCTION mir.get_show_in_schedule_flag(presctype character, folder character, sotr_id character) OWNER TO postgres;

--
-- TOC entry 1763 (class 1255 OID 17108)
-- Dependencies: 5396 14
-- Name: get_sl_begin(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_sl_begin(psicklist_id character) RETURNS date
    LANGUAGE plpgsql
    AS '
-- Функция возвращает начало листка нетрудоспособности
DECLARE     
  rec record;
  d DATE;
BEGIN
  d := null;
  
  for rec in (select min(sp.datebegin) as datebegin
                from mir.sicklist_period sp,
                     (
                        with recursive req(id,parent_id) as
                        (
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             where sl.id = psicklist_id
                             
                             union all 
                             
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             inner join req r
                                on r.parent_id = sl.id
                           
                        )
                        
                        select id
                          from req
                     ) sl
               where sp.sicklist_id = sl.id
             )
  loop
    d := rec.datebegin;
  end loop;

  RETURN d;
END;
';


ALTER FUNCTION mir.get_sl_begin(psicklist_id character) OWNER TO postgres;

--
-- TOC entry 1764 (class 1255 OID 17109)
-- Dependencies: 5396 14
-- Name: get_sl_disability_id(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_sl_disability_id(psicklist_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
-- Функция возвращает причину нетрудоспособности случая
DECLARE     
  rec record;
  nTmp mir.sicklist.id%type;
BEGIN
  nTmp := null;
  
  for rec in (select substr( max(to_char(sp.dateend, ''ddmmyyyy'') || sl.reason_id ), 9 ) as reason_id
                from mir.sicklist_period sp
               inner join mir.sicklist sl
                  on sl.id = sp.sicklist_id
               where sp.sicklist_id in
                     (
                      with recursive req(id,parent_id) as
                        (
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             where sl.id = psicklist_id
                             
                             union all 
                             
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             inner join req r
                                on r.parent_id = sl.id
                           
                        )
                        
                        select id
                          from req
                     ) 
             )
  loop
    nTmp := rec.reason_id;
  end loop;

  RETURN nTmp;
END;
';


ALTER FUNCTION mir.get_sl_disability_id(psicklist_id character) OWNER TO postgres;

--
-- TOC entry 1765 (class 1255 OID 17110)
-- Dependencies: 5396 14
-- Name: get_sl_end_sluch(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_sl_end_sluch(psicklist_id character) RETURNS date
    LANGUAGE plpgsql
    AS '
  -- Функция возвращает дату окончания случая листка нетрудоспособности
DECLARE     
  rec record;
  d DATE;
BEGIN
  d := null;
  
  for rec in (select max(sp.dateend) as dateend
                from mir.sicklist_period sp,
                     (
                        with recursive req(id,parent_id) as
                        (
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             where sl.id = psicklist_id
                             
                             union all 
                             
                            select sl.id,
                                   sl.parent_id
                              from mir.sicklist sl
                             inner join req r
                                on r.parent_id = sl.id
                           
                        )
                        
                        select id
                          from req
                     ) sl
               where sp.sicklist_id = sl.id
             )
  loop
    d := rec.dateend;
  end loop;

  RETURN d;
END;
';


ALTER FUNCTION mir.get_sl_end_sluch(psicklist_id character) OWNER TO postgres;

--
-- TOC entry 1766 (class 1255 OID 17111)
-- Dependencies: 5396 14
-- Name: get_social_mkb_list(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_social_mkb_list() RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
/*
    add Bessarabov A.A. 01/02/2012 
    возвращает список всех вхождений МКБ10
*/
DECLARE 
      r record;
BEGIN
    for r in (
        WITH RECURSIVE q AS 
        (
              select o.mkb_10 as oid
                     --o.parent
                from mir.registr_ill_diagnoses o
               --where o.oid = p_id
                 
               union all
               
              select m.oid
                     --m.parent
                from mir.mkb_10 m
               inner join q
                  on m.parent = q.oid
        )
        select q.oid
          from q ) 
    LOOP
      return next r.oid;
    end LOOP;
END;
';


ALTER FUNCTION mir.get_social_mkb_list() OWNER TO postgres;

--
-- TOC entry 1768 (class 1255 OID 17112)
-- Dependencies: 5396 14
-- Name: get_status_lpudogovor(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_status_lpudogovor(lpudogovoroid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  Result_F varchar(255);
begin
  Result_F := '''';
  select case
           when ld.status = 0 then
            ''Уточнение''
           else
            case
           when ld.status = 1 then
            ''Автосохранение''
           else
           case when ld.status=2 then
           ''Модерация''
           else
           case when ld.status=3 then
           ''Подтверждено''
           else
            ''Отклоненно''
         end end end end
    into Result_F
    from mir.lpudogovor ld
   where ld.oid = LPUDOGOVOROID;

  return(Result_F);
end;

';


ALTER FUNCTION mir.get_status_lpudogovor(lpudogovoroid character varying) OWNER TO postgres;

--
-- TOC entry 1769 (class 1255 OID 17113)
-- Dependencies: 5396 14
-- Name: get_status_people(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_status_people(pid character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    P_RETSTR          VARCHAR (1000);
BEGIN
P_RETSTR := '''';

select
       case when min(state) is null then ''Активен''
            else
               case when  max(state)=1 then ''Блокирован'' else ''Активен'' end
        end
        into P_RETSTR
            from
       mir.lockusers lu
where
       oid_people=PID  and  startblock>COALESCE(block_end,to_date(''01.01.2000'',''dd.mm.yyyy''))
 --and        rownum<=1
       --order by dt desc
       limit 1;
    RETURN P_RETSTR;
END;

';


ALTER FUNCTION mir.get_status_people(pid character varying) OWNER TO postgres;

--
-- TOC entry 1770 (class 1255 OID 17114)
-- Dependencies: 5396 14
-- Name: get_status_shedule_bycode(numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_status_shedule_bycode(sh_type numeric DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res varchar;
BEGIN
  CASE 
  	WHEN sh_type = 0 THEN res:= ''Свободно'';
    WHEN sh_type=1 THEN res:= ''Записано'';
   WHEN sh_type=2 THEN  res:= ''Выполнено'';
    WHEN sh_type=3 THEN res:= ''Подтверждено'';
     WHEN sh_type=4 THEN res:= ''Живая очередь'';
      WHEN sh_type=5 THEN res:= ''Без очереди'';
       WHEN sh_type=6 THEN res:= ''Неявка'';
  END CASE; 

RETURN res;
END;
';


ALTER FUNCTION mir.get_status_shedule_bycode(sh_type numeric) OWNER TO postgres;

--
-- TOC entry 1771 (class 1255 OID 17115)
-- Dependencies: 5396 14
-- Name: get_table_fk_sql(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_table_fk_sql(ptable_schema character varying, ptable_name character varying, pcolumn_name character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  sql varchar(4000);
BEGIN
	sql := null;
    for c in (
            select ''select ''||
           			coalesce( 
                    (select max(ff.column_name) 
                       from information_schema.constraint_column_usage ff
         			  where ff.constraint_name = tc.constraint_name ),
                    ''oid''
                    )
					||'' as oid, ''||
                    coalesce( 
                    (
                     select max( t.ord )
                     from (
                           select first_value(col.column_name) over ( order by 
                                      case  
                                        when col.column_name = ''name'' then 1
                                        when col.column_name like ''name%'' then 2
                                        when col.column_name like ''%name%'' then 3
                                        else 4
                                      end, col.column_name ) as ord
                             from information_schema.columns col
                            where col.table_catalog = ktu.table_catalog
                              and col.table_schema = ktu.table_schema
                              and col.table_name = ktu.table_name
                              and col.data_type = ''character varying''
                          ) t 
                    ),
                    ''name''
                    )
                    ||'' as name from ''||ktu.table_schema||''.''||ktu.table_name as sql
             from information_schema.tables t
            inner join information_schema.table_constraints tc
               on tc.table_catalog = t.table_catalog
              and tc.table_schema = t.table_schema
              and tc.table_name = t.table_name
              and tc.constraint_type = ''FOREIGN KEY''
            inner join information_schema.key_column_usage kcu
               on kcu.table_catalog = tc.table_catalog
              and kcu.table_schema = tc.table_schema
              and kcu.table_name = tc.table_name
              and kcu.constraint_name = tc.constraint_name
            inner join information_schema.constraint_table_usage ktu
               on ktu.constraint_name = kcu.constraint_name
              and ktu.table_catalog = kcu.table_catalog
           WHERE t.table_schema = ptable_schema
             and t.table_name = ptable_name
             and kcu.column_name = pcolumn_name
             )
	loop
      sql := c.sql;
    end loop;
    
    return sql;
END;
';


ALTER FUNCTION mir.get_table_fk_sql(ptable_schema character varying, ptable_name character varying, pcolumn_name character varying) OWNER TO postgres;

--
-- TOC entry 1772 (class 1255 OID 17116)
-- Dependencies: 5396 14
-- Name: get_table_parent_key(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_table_parent_key(ptable_schema character varying, ptable_name character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ( select max(kcu.column_name)      
             from information_schema.tables t
            inner join information_schema.table_constraints tc
               on tc.table_catalog = t.table_catalog
              and tc.table_schema = t.table_schema
              and tc.table_name = t.table_name
              and tc.constraint_type = ''FOREIGN KEY''
            inner join information_schema.key_column_usage kcu
               on kcu.table_catalog = tc.table_catalog
              and kcu.table_schema = tc.table_schema
              and kcu.table_name = tc.table_name
              and kcu.constraint_name = tc.constraint_name
            inner join information_schema.constraint_table_usage ktu
               on ktu.constraint_name = kcu.constraint_name
              and ktu.table_catalog = kcu.table_catalog
              and ktu.table_name = kcu.table_name --когда таблицы совпадают
           WHERE t.table_schema = ptable_schema
             and t.table_name = ptable_name );
END;
';


ALTER FUNCTION mir.get_table_parent_key(ptable_schema character varying, ptable_name character varying) OWNER TO postgres;

--
-- TOC entry 1773 (class 1255 OID 17117)
-- Dependencies: 5396 14
-- Name: get_table_primary_key(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_table_primary_key(ptable_schema character varying, ptable_name character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  return ( SELECT max(kcu.column_name)
             FROM INFORMATION_SCHEMA.TABLES t
             LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
               ON tc.table_catalog = t.table_catalog
              AND tc.table_schema = t.table_schema
              AND tc.table_name = t.table_name
              AND tc.constraint_type = ''PRIMARY KEY''
             LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu
               ON kcu.table_catalog = tc.table_catalog
              AND kcu.table_schema = tc.table_schema
              AND kcu.table_name = tc.table_name
              AND kcu.constraint_name = tc.constraint_name
           WHERE t.table_schema = ptable_schema
             and t.table_name = ptable_name );
END;
';


ALTER FUNCTION mir.get_table_primary_key(ptable_schema character varying, ptable_name character varying) OWNER TO postgres;

--
-- TOC entry 1774 (class 1255 OID 17118)
-- Dependencies: 5396 14
-- Name: get_textday(date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_textday(pdate1 date) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  RES VARCHAR(100);
begin
  RES := NULL;

  select trim(to_char(PDATE1, ''Day'')) into res;
  
  if res = ''Monday'' then
    res := ''Понедельник'';
  end if;
  
  if res = ''Tuesday'' then
    res := ''Вторник'';
  end if;
  
  if res = ''Wednesday'' then
    res := ''Среда'';
  end if;
  
  if res = ''Thursday'' then
    res := ''Четверг'';
  end if;
  
  if res = ''Friday'' then
    res := ''Пятница'';
  end if;
  
  if res = ''Saturday'' then
    res := ''Суббота'';
  end if;
  
  if res = ''Sunday'' then
    res := ''Воскресенье'';
  end if;
  
  RETURN RES;
end;

';


ALTER FUNCTION mir.get_textday(pdate1 date) OWNER TO postgres;

--
-- TOC entry 176 (class 1259 OID 17119)
-- Dependencies: 14
-- Name: tkladrspr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tkladrspr (
    oid character(36) NOT NULL,
    fc_prefix character varying(100),
    fk_id_oracle numeric,
    fk_owner_oracle numeric,
    fk_level numeric,
    showelement numeric,
    phonecode character varying(100),
    parent character(36),
    name character varying(200),
    code character varying(34),
    gasurf_id character varying(255),
    okato character varying(11)
);


ALTER TABLE mir.tkladrspr OWNER TO postgres;

--
-- TOC entry 11712 (class 0 OID 0)
-- Dependencies: 176
-- Name: TABLE tkladrspr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tkladrspr IS 'КЛАДР';


--
-- TOC entry 11713 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.oid IS 'OID';


--
-- TOC entry 11714 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.fc_prefix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.fc_prefix IS 'FC_PREFIX';


--
-- TOC entry 11715 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.fk_id_oracle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.fk_id_oracle IS 'FK_ID_ORACLE';


--
-- TOC entry 11716 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.fk_owner_oracle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.fk_owner_oracle IS 'FK_OWNER_ORACLE';


--
-- TOC entry 11717 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.fk_level; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.fk_level IS 'FK_LEVEL';


--
-- TOC entry 11718 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.showelement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.showelement IS 'SHOWELEMENT';


--
-- TOC entry 11719 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.phonecode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.phonecode IS 'PHONECODE';


--
-- TOC entry 11720 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.parent IS 'PARENT';


--
-- TOC entry 11721 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.name IS 'Шифр КЛАДР';


--
-- TOC entry 11722 (class 0 OID 0)
-- Dependencies: 176
-- Name: COLUMN tkladrspr.gasurf_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladrspr.gasurf_id IS 'идентификатор в системе минздравсоцразвития';


--
-- TOC entry 1775 (class 1255 OID 17125)
-- Dependencies: 2614 5396 14
-- Name: get_tkladrspr_city(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_tkladrspr_city(p_id character varying) RETURNS SETOF tkladrspr
    LANGUAGE plpgsql
    AS '
DECLARE
  -- Ponomarenko S.
  -- Возвращает строку kladr c уровнем города (деревни) (для кладра с уровнем >3)
  -- пример:  
  /*
SELECT * from mir.get_tkladrspr_city (''e7ed73e0-f3e1-11e0-987d-2fec61e8f2e7'') 
UNION ALL
SELECT * from mir.get_tkladrspr_city (''c40085a4-f3e5-11e0-b73f-8fd43ffc5ab2'')
UNION ALL
SELECT * from mir.get_tkladrspr_city (''d7ce1e74-f3e1-11e0-9626-d37ae7db4454'')
*/

  r mir.tkladrspr % ROWTYPE;

BEGIN
  SELECT *
  FROM mir.get_tkladrspr_parents(p_id)
  INTO r
  WHERE 1 = 1
        AND fk_level IN (3, 4)
  ORDER BY fk_level
  LIMIT 1;

  return  next r;

END;
';


ALTER FUNCTION mir.get_tkladrspr_city(p_id character varying) OWNER TO postgres;

--
-- TOC entry 1767 (class 1255 OID 17126)
-- Dependencies: 5396 14
-- Name: get_tkladrspr_parent(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_tkladrspr_parent(poid character, plevel numeric DEFAULT 0) RETURNS text
    LANGUAGE plpgsql
    AS '
declare 
-- Ponomarenko S 23.11.2011
-- Возвращает строку родителя таблицы kladr указанного уровня
 res text;
begin

  SELECT r.FC_PREFIX || '' '' || r.name
  INTO res
  FROM mir.get_tkladrspr_parents(poid) r
  WHERE fk_level = plevel;
  
  return res;
end;
';


ALTER FUNCTION mir.get_tkladrspr_parent(poid character, plevel numeric) OWNER TO postgres;

--
-- TOC entry 1777 (class 1255 OID 17127)
-- Dependencies: 2614 5396 14
-- Name: get_tkladrspr_parents(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_tkladrspr_parents(p_id character varying) RETURNS SETOF tkladrspr
    LANGUAGE plpgsql
    AS '
DECLARE
-- Ponomarenko S.
-- Возвращает таблицу kladr c родителями, включая исходную строку = p_id
-- пример:  SELECT * from mir.get_tkladrspr_parents (''e7ed73e0-f3e1-11e0-987d-2fec61e8f2e7'') 
--						where level_n in (1,4);

	r mir.tkladrspr%ROWTYPE;
 
  cur_kladr CURSOR FOR
    (
     WITH RECURSIVE klad AS 
      (
      SELECT *
        FROM mir.tkladrspr k
       WHERE 1=1 
         and k.oid = p_id 
                 
      UNION ALL
               
      SELECT k.*
        FROM mir.tkladrspr k
       INNER JOIN klad kr 
          ON k.oid = kr.parent
      )

      select *
        from klad k
        ORDER BY k.fk_level
    );
  
BEGIN
    for r in cur_kladr
    loop
			return next r;
    end loop;
END;
';


ALTER FUNCTION mir.get_tkladrspr_parents(p_id character varying) OWNER TO postgres;

--
-- TOC entry 1778 (class 1255 OID 17128)
-- Dependencies: 5396 14
-- Name: get_tkladrspr_string(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_tkladrspr_string(pkladrid character, plevel numeric DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  vRes VARCHAR(32000);
  c record;
BEGIN
--         Edited by Ponomarenko SA 09122011
  VRES = '''';
  FOR c IN (select * from mir.get_tkladrspr_parents(pkladrid) where fk_level>=plevel)
  LOOP
    VRES := (case when VRES = '''' then VRES else VRES || '', '' end ) ||
    	 (case when C.fc_prefix = '''' then '''' else C.fc_prefix || ''.'' end ) || C.NAME ;
  END LOOP;
  RETURN vRes;
END;
';


ALTER FUNCTION mir.get_tkladrspr_string(pkladrid character, plevel numeric) OWNER TO postgres;

--
-- TOC entry 1779 (class 1255 OID 17129)
-- Dependencies: 5396 14
-- Name: get_var(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_var(p_var_name character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_var_value varchar;
BEGIN
  SELECT INTO v_var_value current_setting(''usrvar.''||p_var_name);
  RETURN v_var_value;
EXCEPTION
WHEN syntax_error_or_access_rule_violation THEN
  v_var_value = null;
  RETURN v_var_value;
END;
';


ALTER FUNCTION mir.get_var(p_var_name character varying) OWNER TO postgres;

--
-- TOC entry 1780 (class 1255 OID 17130)
-- Dependencies: 5396 14
-- Name: get_workdays_count(date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_workdays_count(date_from date, date_to date) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
  TotalDays integer;
BEGIN        
  select datediff(''day'', date_from, date_to ) + 1 -
         ( case date_part(''dow'', date_to)
             when 6 then 1
             when 0 then 2
             else 0
           end ) 
         into TotalDays;
  
  return (TotalDays/7) * 5 + (TotalDays%7);
END;
';


ALTER FUNCTION mir.get_workdays_count(date_from date, date_to date) OWNER TO postgres;

--
-- TOC entry 1781 (class 1255 OID 17131)
-- Dependencies: 5396 14
-- Name: get_worktime_for_zayvka(character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_worktime_for_zayvka(potdel character varying, ppresctype character varying, "paddDay" integer DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_resSTR VARCHAR;
  c record;
  i integer;
  v_count_free integer;
BEGIN
i:=0;
v_count_free:=1;
for c in(
select * from
(
select qr.*, lag(qe,1)  OVER (ORDER BY qq) qt from 
(
select DISTINCT 
   (select count(*) qc from mir.schedule s 
     where s.presctype = ppresctype
      and s.insite=1 
      and s.otdel=potdel
	  and cast(s.starton as date) = CURRENT_DATE + $3 and s.insite=1 
      and s.people is null) qc, 
     -- q21,q2,
      case when (q1 is null and q4 is null) or (q1m is null and q1<>starton) then starton else 
       case when q2 is null and q1m=q4 and q21 < q4 then 
          COALESCE(q21,q2) 
        
          else 
           case when (starton > q1 or q1 is null) and (endon < q2 or q2 is null) then starton else q2 end end
      end qq,
      case when q2 = lag(starton,-1)  OVER (ORDER BY starton) and q2 > endon and q1m is null then endon else 
          case when (starton > q1 or q1 is null) and (endon < q2 or q2 is null) then endon
          else
           COALESCE(lag(endon,-1) OVER (ORDER BY starton), endon) end  end qe
      
      
from
(
select q3.*, lag(q2,1) OVER (ORDER BY starton) q21,
             lag(q2,-1) OVER (ORDER BY starton) q22 from 
(
select s.starton, lag(s.endon,1) OVER (ORDER BY starton) q1, s.presctype,
lag(s.endon,2) OVER (ORDER BY starton) q1m,
lag(s.starton,1) OVER (ORDER BY starton) q4,
lag(s.starton,-1) OVER (ORDER BY starton) q2, s.endon,
row_number() OVER (ORDER BY starton) q5, count(s.oid) OVER (ORDER BY starton) qc
from mir.schedule s 
where 
s.presctype = ppresctype and s.insite=1 and s.otdel=potdel
--and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE + $3
/*s.presctype = ''eb48c0c0-24c0-11e1-9e6e-77fba6e0e9ea'' and s.insite=1 and s.otdel=''5e5514e2-4852-46a1-a30a-0c4ea9a3837d''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE + 1*/
/*s.presctype = ''ce84b420-c2a6-4b0f-af6e-1f447023ef0e'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE - 9*/
/*s.presctype = ''0403c8a0-b07b-483b-a5e2-7eb33330c9aa'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE-15*/
/*s.presctype = ''ed736120-24c0-11e1-9c2e-f302e37a2eba'' and s.insite=1 and s.otdel=''cbf4f224-f896-4bb5-acab-6812e1a04f12''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE -1*/
/*s.presctype = ''6a3f48a2-fb9b-49a0-ad54-e2d1d9d96189'' and s.insite=1 and s.otdel=''cac2c29e-07ee-4739-b38e-fd6563f6153b''
and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = CURRENT_DATE - 9*/
/*s.presctype = ''bbf17200-1135-4686-92db-f596728a8730'' and s.insite=1 and s.otdel=''cac2c29e-07ee-4739-b38e-fd6563f6153b''
and s.starton > ''07.02.2012''
and s.starton < ''08.02.2012''*/
and cast(s.starton as date) = CURRENT_DATE + $3


) as q3
where 1 =1 
and (  
	   (starton > q1 and endon < q2) or
       (starton > q1 and endon = q2 and q1m is null) or
       (starton = q1 and endon < q2) or
       (q1 is null and q4 is null) or
       (q2 is null))) as qw order by qq
) as qr where qq is not null 
) qg
where qt is null or (qt<>qe)) --and qq < qe)
      loop
      
      if(i=0) then
      v_resSTR:=c.qc||''|''||to_char(c.qq, ''hh24:mi'')||''-''||to_char(c.qe, ''hh24:mi'');
      i:=i+1;
      else
         if (c.qq is not null) then
            v_resSTR:=v_resSTR||'';''||to_char(c.qq, ''hh24:mi'')||''-''||to_char(c.qe, ''hh24:mi'');
         end if;
      end if;
      
      end loop;
      return v_resSTR;
END;
';


ALTER FUNCTION mir.get_worktime_for_zayvka(potdel character varying, ppresctype character varying, "paddDay" integer) OWNER TO postgres;

--
-- TOC entry 1782 (class 1255 OID 17132)
-- Dependencies: 5396 14
-- Name: get_years_between_date(date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_years_between_date(pfrom_date date, pto_date date) RETURNS integer
    LANGUAGE plpgsql
    AS '
declare
  fday   integer := 0;
  fmonth integer := 0;
  fyear  integer := 0;
  tday   integer := 0;
  tmonth integer := 0;
  tyear  integer := 0;
  xyears integer := 0;
  xmons  integer := 0;
  xdays  integer := 0;
begin
  if pfrom_date >= pto_date then
    return 0;
  end if;

  fday   := date_part(''day'', pfrom_date);
  fmonth := date_part(''month'', pfrom_date);
  fyear  := date_part(''year'', pfrom_date);


  tday   := date_part(''day'', pto_date);
  tmonth := date_part(''month'', pto_date);
  tyear  := date_part(''year'', pto_date);

  if fday < tday then
    xdays := tday-fday;
  end if;

  if fday > tday then
    xmons := xmons-1;
    xdays := mir.days_in_month(fyear, fmonth)-fday+tday;
  end if;

  if fmonth < tmonth then
    xmons := xmons + tmonth - fmonth;
  end if;

  if fmonth > tmonth then
    xmons := xmons + 12-fmonth+tmonth;
  end if;

  if fyear < tyear
  then
    xyears := tyear-fyear;
    if fmonth > tmonth then
      xyears := xyears-1;   
    end if;
  end if;

  return xyears;
end;
';


ALTER FUNCTION mir.get_years_between_date(pfrom_date date, pto_date date) OWNER TO postgres;

--
-- TOC entry 1783 (class 1255 OID 17133)
-- Dependencies: 5396 14
-- Name: get_yearwork(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION get_yearwork() RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    v_res integer;
  begin
    -- Возвращает номер следующего года за 6 дней до его начала, нужно хранить в настройках
    v_res := date_part(''year'', CURRENT_DATE + interval ''6 day'');   

    return v_res;
  end;
  ';


ALTER FUNCTION mir.get_yearwork() OWNER TO postgres;

--
-- TOC entry 1784 (class 1255 OID 17134)
-- Dependencies: 5396 14
-- Name: getadress_lpudogovor(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION getadress_lpudogovor(kladroid character varying DEFAULT ''::character varying, home character varying DEFAULT ''::character varying, korp character varying DEFAULT ''::character varying, flat character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  Result_F varchar(255);
  P_RETSTR VARCHAR(255);
begin
  Result_F:='''';
  P_RETSTR:='''';
  
  IF (KLADROID='''') THEN 
  BEGIN
     Result_F:='''';
  END; 
  ELSE
  BEGIN

    /*SELECT SUBSTR (SYS_CONNECT_BY_PATH (ShowStr , '', ''), 2) csv into P_RETSTR
                  from(select T.FC_PREFIX||'' ''||H.NAME as ShowStr,
                            ROW_NUMBER () OVER (ORDER BY T.FC_PREFIX||'' ''||H.NAME ) rn,
                            COUNT (*) OVER () cnt
                             from mir.hcategory h INNER JOIN mir.tkladrspr t
                                                    ON h.oid=t.oid
                                                    Start with h.oid=KLADROID
                                                    CONNECT By h.oid = prior h.parent
                                                    order by level desc
                                          )
                                          WHERE rn = cnt
     START WITH rn = 1
   CONNECT BY rn = PRIOR rn + 1;*/
  select mir.zgetkladrstr(KLADROID) into Result_F;
  
  Result_F:= P_RETSTR;

      IF(HOME is not null) THEN
      BEGIN
        Result_F:= Result_F||'', д.''||HOME;
        
        IF(KORP is not null) THEN
        BEGIN
        Result_F:= Result_F||'', корп.''||HOME;
        END;
        END IF;
        
        IF(FLAT is not null) THEN
        BEGIN
        Result_F:= Result_F||'', кв.''||HOME;
        END;
        END IF;
     END;
     END IF;


  END;
  END IF;

  return(Result_F);
end;

';


ALTER FUNCTION mir.getadress_lpudogovor(kladroid character varying, home character varying, korp character varying, flat character varying) OWNER TO postgres;

--
-- TOC entry 1761 (class 1255 OID 17135)
-- Dependencies: 5396 14
-- Name: getcurrentsysuser(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION getcurrentsysuser() RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  vCurrentUserLogin varchar(255);
  vCurrentUserOid mir.sysuser.oid%type;
begin
 /*for c in (SELECT USERNAME
      FROM V$SESSION
     WHERE AUDSID = USERENV(''SESSIONID'')) loop
     vCurrentUserLogin := c.username;
  end loop;*/
  
  select max(s.oid)
  into vCurrentUserOid
  from mir.sysuser s where ''Z''||trim(upper(s.username)) = CURRENT_USER;
  return vCurrentUserOid;
end;

';


ALTER FUNCTION mir.getcurrentsysuser() OWNER TO postgres;

--
-- TOC entry 1785 (class 1255 OID 17136)
-- Dependencies: 5396 14
-- Name: getfastreportlab(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION getfastreportlab(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  oid char(36);
  syn VARCHAR(255);
  
BEGIN
  select pt.oid, l.synonim 
  into oid,syn
  from  mir.presctype pt 
  inner join mir.presc p on p.presctype_id = pt.oid 
  inner join mir.laboratory_reports l on l.presctype_id = pt.oid
  
		                        where p.id = poid
                                and pt.presctypefolderid_parent = ''6ab84a00-2328-11e1-8575-afce54318773'';

  
  RETURN syn;
END;
';


ALTER FUNCTION mir.getfastreportlab(poid character) OWNER TO postgres;

--
-- TOC entry 1786 (class 1255 OID 17137)
-- Dependencies: 5396 14
-- Name: getfreenumber(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION getfreenumber() RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
  vCurrentNum mir.uniq_direction_number.num%TYPE := NULL;
  vCountTry integer;
BEGIN
  vCountTry := 0;
  
  WHILE (( vCurrentNum IS NULL ) and ( vCountTry < 1000000 ) ) LOOP

    SELECT MAX(num)
      INTO vCurrentNum
      FROM mir.uniq_direction_number
     WHERE is_use IS NULL --  and num=round(dbms_random.value(1,999999))
       AND num = round( random() * 1000000 );
       
     vCountTry := vCountTry + 1;
  END LOOP;
  RETURN vCurrentNum;
END;

';


ALTER FUNCTION mir.getfreenumber() OWNER TO postgres;

--
-- TOC entry 1787 (class 1255 OID 17138)
-- Dependencies: 5396 14
-- Name: guid_generate(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION guid_generate() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN(CAST( public.uuid_generate_v1() as varchar(36)));
END;

';


ALTER FUNCTION mir.guid_generate() OWNER TO postgres;

--
-- TOC entry 1788 (class 1255 OID 17139)
-- Dependencies: 5396 14
-- Name: heal_delete_heal(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_delete_heal(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.heal where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_delete_heal(poid character) OWNER TO postgres;

--
-- TOC entry 1789 (class 1255 OID 17140)
-- Dependencies: 5396 14
-- Name: heal_delete_heal_lpu_cost(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_delete_heal_lpu_cost(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.heal_lpu_cost where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_delete_heal_lpu_cost(poid character) OWNER TO postgres;

--
-- TOC entry 1790 (class 1255 OID 17141)
-- Dependencies: 5396 14
-- Name: heal_delete_healtype(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_delete_healtype(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011

  
  begin
    delete from mir.healtype where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_delete_healtype(poid character) OWNER TO postgres;

--
-- TOC entry 1791 (class 1255 OID 17142)
-- Dependencies: 5396 14
-- Name: heal_insert_heal(character varying, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_insert_heal(pname character varying, psynonym character varying, pcode character varying, phealtype character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_res mir.heal.oid%type;
  begin
    v_res := mir.new_uuid();

    insert into mir.heal
      (oid, name, SYNONYM, code, healtype)
    values
      (v_res, pname, psynonym, pcode, phealtype);
    return v_res;
  end;

';


ALTER FUNCTION mir.heal_insert_heal(pname character varying, psynonym character varying, pcode character varying, phealtype character) OWNER TO postgres;

--
-- TOC entry 1792 (class 1255 OID 17143)
-- Dependencies: 5396 14
-- Name: heal_insert_heal_lpu_cost(character, numeric, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_insert_heal_lpu_cost(pheal_lpu character, pcost numeric, pstartdate date) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_res mir.heal_lpu_cost.oid%type;
  begin
    v_res := mir.new_uuid();
    insert into mir.heal_lpu_cost
      (oid, heal_lpu, cost, startdate)
    values
      (v_res, pheal_lpu, pcost, pstartdate);
    return v_res;
  end;

';


ALTER FUNCTION mir.heal_insert_heal_lpu_cost(pheal_lpu character, pcost numeric, pstartdate date) OWNER TO postgres;

--
-- TOC entry 1793 (class 1255 OID 17144)
-- Dependencies: 5396 14
-- Name: heal_insert_healtype(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_insert_healtype(pname character varying, psynonym character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
    
    v_res mir.healtype.oid%type;
  begin
    v_res := mir.new_uuid();

    insert into mir.healtype
      (oid, name, SYNONYM)
    values
      (v_res, pname, psynonym);
    return v_res;
  end;

';


ALTER FUNCTION mir.heal_insert_healtype(pname character varying, psynonym character varying) OWNER TO postgres;

--
-- TOC entry 1794 (class 1255 OID 17145)
-- Dependencies: 5396 14
-- Name: heal_link_heal_lpu(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_link_heal_lpu(plpu character, pheal character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
    v_res  mir.heal.oid%type;
    v_name mir.heal_lpu.name%type;
  begin
    v_res := mir.new_uuid();
    select max(h.name) into v_name from mir.heal h where h.oid = pheal;

    insert into mir.heal_lpu
      (oid, lpu, heal, name)
    values
      (v_res, plpu, pheal, v_name);
    return v_res;
  end;

';


ALTER FUNCTION mir.heal_link_heal_lpu(plpu character, pheal character) OWNER TO postgres;

--
-- TOC entry 1795 (class 1255 OID 17146)
-- Dependencies: 5396 14
-- Name: heal_unlink_heal_lpu(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_unlink_heal_lpu(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
  begin
    delete from mir.heal_lpu h where h.oid = poid;
  end;

';


ALTER FUNCTION mir.heal_unlink_heal_lpu(poid character) OWNER TO postgres;

--
-- TOC entry 1796 (class 1255 OID 17147)
-- Dependencies: 5396 14
-- Name: heal_update_heal(character, character varying, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_update_heal(poid character, pname character varying, psynonym character varying, pcode character varying, phealtype character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.heal
       set name      = pname,
           SYNONYM = psynonym,
           code      = pcode,
           healtype  = phealtype
     where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_update_heal(poid character, pname character varying, psynonym character varying, pcode character varying, phealtype character) OWNER TO postgres;

--
-- TOC entry 1797 (class 1255 OID 17148)
-- Dependencies: 5396 14
-- Name: heal_update_heal_lpu_cost(character, character, numeric, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_update_heal_lpu_cost(poid character, pheal_lpu character, pcost numeric, pstartdate date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
  begin
    update mir.heal_lpu_cost
       set  heal_lpu = pheal_lpu, cost = pcost, startdate = pstartdate
     where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_update_heal_lpu_cost(poid character, pheal_lpu character, pcost numeric, pstartdate date) OWNER TO postgres;

--
-- TOC entry 1798 (class 1255 OID 17149)
-- Dependencies: 5396 14
-- Name: heal_update_heal_lpu_name(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_update_heal_lpu_name(poid character, pname character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
  begin
    update mir.heal_lpu  set name = pname where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_update_heal_lpu_name(poid character, pname character varying) OWNER TO postgres;

--
-- TOC entry 1799 (class 1255 OID 17150)
-- Dependencies: 5396 14
-- Name: heal_update_healtype(character, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION heal_update_healtype(poid character, pname character varying, psynonym character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011

  begin
    update mir.healtype
       set name = pname, SYNONYM = psynonym
     where oid = poid;
  end;

';


ALTER FUNCTION mir.heal_update_healtype(poid character, pname character varying, psynonym character varying) OWNER TO postgres;

--
-- TOC entry 1800 (class 1255 OID 17151)
-- Dependencies: 5396 14
-- Name: help_reference$bu(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "help_reference$bu"() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  IF ( TG_OP = ''UPDATE'' ) THEN
    IF NEW.REFERENCE_CONTENT <> OLD.REFERENCE_CONTENT THEN --UPDATING(''REFERENCE_CONTENT'')
        NEW.UPDATE_DATE := CURRENT_TIMESTAMP;
    END IF;
  END IF;
END;

';


ALTER FUNCTION mir."help_reference$bu"() OWNER TO postgres;

--
-- TOC entry 1801 (class 1255 OID 17152)
-- Dependencies: 5396 14
-- Name: help_reference_bu_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION help_reference_bu_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  IF ( TG_OP = ''UPDATE'' ) THEN
    IF NEW.REFERENCE_CONTENT <> OLD.REFERENCE_CONTENT THEN --UPDATING(''REFERENCE_CONTENT'')
        NEW.UPDATE_DATE := CURRENT_TIMESTAMP;
    END IF;
  END IF;
  
return new;
END;

';


ALTER FUNCTION mir.help_reference_bu_trg() OWNER TO postgres;

--
-- TOC entry 1802 (class 1255 OID 17153)
-- Dependencies: 5396 14
-- Name: homevisit_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION homevisit_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
    NEW.DTCREATION:=CURRENT_TIMESTAMP;
    perform MIR.SMS_insert_sms_new_homevisit(NEW.PEOPLE,NEW.SOTR,NEW.LPU);
return new;
END;

';


ALTER FUNCTION mir.homevisit_bi_trg() OWNER TO postgres;

--
-- TOC entry 1803 (class 1255 OID 17154)
-- Dependencies: 5396 14
-- Name: homevisit_get_homevisit_er_spid(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION homevisit_get_homevisit_er_spid(phomevisit_oid character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT SPID FROM MIR.HOMEVISIT_ER WHERE OID = PHOMEVISIT_OID) LOOP
      RETURN C.SPID;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.homevisit_get_homevisit_er_spid(phomevisit_oid character varying) OWNER TO postgres;

--
-- TOC entry 1648 (class 1255 OID 17155)
-- Dependencies: 5396 14
-- Name: id_generate_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION id_generate_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.id is null then 
   new.id = (SELECT * FROM mir.guid_generate());
  end if;
  RETURN NEW;  
END;
';


ALTER FUNCTION mir.id_generate_tr() OWNER TO postgres;

--
-- TOC entry 1657 (class 1255 OID 17156)
-- Dependencies: 5396 14
-- Name: importmed_delete_pharmacy(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_delete_pharmacy(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.pharmacy where oid = poid;
  end;

';


ALTER FUNCTION mir.importmed_delete_pharmacy(poid character) OWNER TO postgres;

--
-- TOC entry 1804 (class 1255 OID 17157)
-- Dependencies: 5396 14
-- Name: importmed_dopharmacy(character, character varying, character varying, character, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_dopharmacy(poid character, pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011    
  begin
    if (poid is null) then
      return  mir.importmed_insert_pharmacy(pname,
                                            pcode,
                                            pkladr,
                                            phouse,
                                            pbuilding,
                                            pflat);
    else
      perform mir.importmed_udpate_pharmacy(poid,
                                    pname,
                                    pcode,
                                    pkladr,
                                    phouse,
                                    pbuilding,
                                    pflat);
      return poid;
    end if;
  end;

';


ALTER FUNCTION mir.importmed_dopharmacy(poid character, pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) OWNER TO postgres;

--
-- TOC entry 1805 (class 1255 OID 17158)
-- Dependencies: 5396 14
-- Name: importmed_get_medictypebycode(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_get_medictypebycode(pcode character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.medictype.oid%type;
  begin
    select max(oid) into v_oid from mir.medictype m where m.code = pcode;
    return v_oid;
  end;

';


ALTER FUNCTION mir.importmed_get_medictypebycode(pcode character varying) OWNER TO postgres;

--
-- TOC entry 1806 (class 1255 OID 17159)
-- Dependencies: 5396 14
-- Name: importmed_get_pharmacybycode(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_get_pharmacybycode(pcode character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.pharmacy.oid%type;
  begin
    select max(oid) into v_oid from mir.pharmacy m where m.code = pcode;
    return v_oid;
  end;

';


ALTER FUNCTION mir.importmed_get_pharmacybycode(pcode character varying) OWNER TO postgres;

--
-- TOC entry 1807 (class 1255 OID 17160)
-- Dependencies: 5396 14
-- Name: importmed_import_medtype(character varying, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_import_medtype(pname character varying, pcode character varying, pislgot numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.medictype.oid%type;
  begin
    v_oid := get_medictypebycode(pcode);
    if (v_oid is null) then
      v_oid := insert_medtype(pname   => pname,
                              pcode   => pcode,
                              pislgot => pislgot);
    end if;
    return  v_oid;
  end;

';


ALTER FUNCTION mir.importmed_import_medtype(pname character varying, pcode character varying, pislgot numeric) OWNER TO postgres;

--
-- TOC entry 1808 (class 1255 OID 17161)
-- Dependencies: 5396 14
-- Name: importmed_insert_medtype(character varying, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_insert_medtype(pname character varying, pcode character varying, pislgot numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.dictionary.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.dictionary
      (oid, name, optimisticlockfield, objecttype)
    values
      (v_oid, pname, 0, medictype);
    insert into mir.medictype
      (oid, islgot, code)
    values
      (v_oid, pislgot, pcode);
    return v_oid;
  end;

';


ALTER FUNCTION mir.importmed_insert_medtype(pname character varying, pcode character varying, pislgot numeric) OWNER TO postgres;

--
-- TOC entry 1809 (class 1255 OID 17162)
-- Dependencies: 5396 14
-- Name: importmed_insert_pharmacy2(character varying, character varying, character, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_insert_pharmacy2(pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid     mir.pharmacy.oid%type;
    v_address mir.addressex.oid%type;
  begin
    v_oid     := mir.new_uuid();
    v_address := mir.addr_insert_addr( phouse,
                                       pbuilding,
                                       pflat,
                                       pkladr);
    insert into mir.pharmacy
      (oid, name, iswork, code, address)
    values
      (v_oid, pname, 1, pcode, v_address);
    return v_oid;
  end;

';


ALTER FUNCTION mir.importmed_insert_pharmacy2(pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) OWNER TO postgres;

--
-- TOC entry 1810 (class 1255 OID 17163)
-- Dependencies: 5396 14
-- Name: importmed_insert_remain(character, character, date, numeric, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_insert_remain(pmedictype character, ppharmacy character, pondate date, premain numeric, plgota character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.medremain.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.medremain
      (oid, medictype, pharmacy, ondate, remain, lgota)
    values
      (v_oid, pmedictype, ppharmacy, pondate, premain, plgota);
    return  v_oid;
  end;

';


ALTER FUNCTION mir.importmed_insert_remain(pmedictype character, ppharmacy character, pondate date, premain numeric, plgota character) OWNER TO postgres;

--
-- TOC entry 1811 (class 1255 OID 17164)
-- Dependencies: 5396 14
-- Name: importmed_udpate_pharmacy(character, character varying, character varying, character, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION importmed_udpate_pharmacy(poid character, pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
    v_address mir.addressex.oid%type;
  begin
    select max(address)
      into v_address
      from mir.pharmacy p
     where p.oid = poid;
    if (v_address is null) then
      v_address := mir.addr_insert_addr(phouse,
                                        pbuilding,
                                        pflat,
                                        pkladr);
    else
      update mir.addressex a
         set a.tkladr   = pkladr,
             a.house    = phouse,
             a.building = building,
             a.flat     = pflat
       where oid = v_address;
    end if;
    update mir.pharmacy
       set name = pname, code = pcode, address = v_address
     where oid = poid;
  end;

';


ALTER FUNCTION mir.importmed_udpate_pharmacy(poid character, pname character varying, pcode character varying, pkladr character, phouse character varying, pbuilding character varying, pflat character varying) OWNER TO postgres;

--
-- TOC entry 1812 (class 1255 OID 17165)
-- Dependencies: 5396 14
-- Name: inccitycloudfreq(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION inccitycloudfreq(pcity character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_cnt integer;
BEGIN
  select max(c.freq) into v_cnt from mir.citycloud c where c.city = $1;

              if (v_cnt > 0) then
                update mir.citycloud set freq = v_cnt + 1 where city = $1;
              else
                insert into mir.citycloud (city, freq) values ($1, 1);
              end if;
              return '''';
END;
';


ALTER FUNCTION mir.inccitycloudfreq(pcity character varying) OWNER TO postgres;

--
-- TOC entry 1813 (class 1255 OID 17166)
-- Dependencies: 5396 14
-- Name: ins_export_cod_ambticket(date, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION ins_export_cod_ambticket(pdate1 date, pdate2 date, potdel character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES integer := 0;
    
BEGIN

      BEGIN
            
          insert into mir.export_cod_ambticket (id, empo_id, empc_id, servplace_id, goal_id,
                   travm_id, idoc_id, result_id, empcancel_id, cancel_date, status_id, 
                   refer_id, travm_date, dispstate_id, subresult_id, med_help_id, refer_num, 
                   refer_date, otdel, sysdate)
          select t.id, t.empo_id, t.empc_id, t.servplace_id, t.goal_id,
                   t.travm_id, t.idoc_id, t.result_id, t.empcancel_id, t.cancel_date, t.status_id, 
                   t.refer_id, t.travm_date, t.dispstate_id, t.subresult_id, t.med_help_id, t.refer_num, 
                   t.refer_date, t.otdel, t.sysdate
            from mir.ambticket t, mir.visit v, mir.sotr s, mir.otdel o
           where t.id = v.id
             and t.empc_id = s.oid
             and s.otdel = o.oid            
             and t.status_id = ''close''
             and o.lpu = potdel
             and v.endv BETWEEN pdate1 AND pdate2;      
          
      EXCEPTION WHEN OTHERS THEN       
           V_RES = 1;
      END;
        
      RETURN V_RES;    
END;
';


ALTER FUNCTION mir.ins_export_cod_ambticket(pdate1 date, pdate2 date, potdel character varying) OWNER TO postgres;

--
-- TOC entry 1815 (class 1255 OID 17167)
-- Dependencies: 5396 14
-- Name: ins_export_cod_ambticket_by_id(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION ins_export_cod_ambticket_by_id(pambticket character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES integer := 0;
    
BEGIN

      BEGIN
            
          insert into mir.export_cod_ambticket (id, empo_id, empc_id, servplace_id, goal_id,
                   travm_id, idoc_id, result_id, empcancel_id, cancel_date, status_id, 
                   refer_id, travm_date, dispstate_id, subresult_id, med_help_id, refer_num, 
                   refer_date, otdel, sysdate)
          select t.id, t.empo_id, t.empc_id, t.servplace_id, t.goal_id,
                   t.travm_id, t.idoc_id, t.result_id, t.empcancel_id, t.cancel_date, t.status_id, 
                   t.refer_id, t.travm_date, t.dispstate_id, t.subresult_id, t.med_help_id, t.refer_num, 
                   t.refer_date, t.otdel, t.sysdate
            from mir.ambticket t
           where t.id = pambticket;      
          
      EXCEPTION WHEN OTHERS THEN       
           V_RES = 1;
      END;
        
      RETURN V_RES;    
END;
';


ALTER FUNCTION mir.ins_export_cod_ambticket_by_id(pambticket character varying) OWNER TO postgres;

--
-- TOC entry 1816 (class 1255 OID 17168)
-- Dependencies: 5396 14
-- Name: ins_export_cod_people(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION ins_export_cod_people() RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES integer := 0;
    
BEGIN

      BEGIN
            
          insert into mir.export_cod_people ( oid, dtcreation, id, sex, livein, sstate, pacient, 
           addressex1, addressex2, lpu, email, telhome, telwork, telsot1, telsot2, district, 
           company, peopledoctype, peopledocser, peopledocnum, dispuchet, benefittype, benefitdoctype, 
           benefitdocnum, profession, peoplepost, dependant, webmail, webphone, region, category, 
           placework, firstname, lastname, middlename, birthday, login, waslogin, password, 
           deathdate, gasurf_oid, peopledocgive, peopledocgivedate, phonecode, karta, importcode, 
           sysdate, description, snils2, snils, issuedate, issuedby)  
          select p.oid, p.dtcreation, p.id, p.sex, p.livein, p.sstate, p.pacient, 
           p.addressex1, p.addressex2, p.lpu, p.email, p.telhome, p.telwork, p.telsot1, p.telsot2, p.district, 
           p.company, p.peopledoctype, p.peopledocser, p.peopledocnum, p.dispuchet, p.benefittype, p.benefitdoctype, 
           p.benefitdocnum, p.profession, p.peoplepost, p.dependant, p.webmail, p.webphone, p.region, p.category, 
           p.placework, p.firstname, p.lastname, p.middlename, p.birthday, p.login, p.waslogin, p.password, 
           p.deathdate, p.gasurf_oid, p.peopledocgive, p.peopledocgivedate, p.phonecode, p.karta, p.importcode, 
           p.sysdate, p.description, p.snils2, p.snils, p.issuedate, p.issuedby
          from mir.export_cod_ambticket ambt, mir.visit v, mir.mdoc md, mir.people p
         where v.id = ambt.id
           and md.id = v.mdoc_id
           and p.oid = md.people_id;      
          
      EXCEPTION WHEN OTHERS THEN       
              V_RES = 1;
      END;
        
      RETURN V_RES;    
END;
';


ALTER FUNCTION mir.ins_export_cod_people() OWNER TO postgres;

--
-- TOC entry 1817 (class 1255 OID 17169)
-- Dependencies: 5396 14
-- Name: insert_new_direction(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_new_direction(presc character varying, fromlpu character varying, tolpu character varying, soid character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  VLOCKHANDLE  varchar(128);
  NREQRES  varchar(128);
  NumberDirection  numeric(10);
BEGIN
  --VLOCKHANDLE := NULL;
  
  --DBMS_LOCK.ALLOCATE_UNIQUE(''NUMBERDIRECTION_'' ||
  --  TO_CHAR(sysdate, ''DDMMYYYY''),
  --  VLOCKHANDLE,
  --  360);

  --Lock

  --WHILE NREQRES NOT IN (0, 4) LOOP
  --  NREQRES := DBMS_LOCK.REQUEST(VLOCKHANDLE, DBMS_LOCK.X_MODE, 1, TRUE);
  --END LOOP;
                                
  NumberDirection:=cast(MIR.SETTINGS_GET_PARAMETER(''DIRECTION_CURRENT_CODE'') as integer)+1;
 -- NREQRES := DBMS_LOCK.RELEASE(VLOCKHANDLE);
                                      
  update mir.settings  st
     set st.valuepar=NumberDirection
   where st.param=''DIRECTION_CURRENT_CODE'';

  insert into mir.direction
    (oid, specid, fromlpuid, tolpuid, uniq_code, schedule_id)
  values
    (mir.new_uuid(), PRESC, FROMLPU, TOLPU, NumberDirection, SOID);
END;

';


ALTER FUNCTION mir.insert_new_direction(presc character varying, fromlpu character varying, tolpu character varying, soid character varying) OWNER TO postgres;

--
-- TOC entry 1818 (class 1255 OID 17170)
-- Dependencies: 5396 14
-- Name: insert_new_row_in_lastonlinedatetime(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_new_row_in_lastonlinedatetime() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
	insert into mir.lastonlinedatetime values(new.oid, null);
    return new;
END;
';


ALTER FUNCTION mir.insert_new_row_in_lastonlinedatetime() OWNER TO postgres;

--
-- TOC entry 1819 (class 1255 OID 17171)
-- Dependencies: 5396 14
-- Name: insert_passport_log(character varying, character varying, character varying, text); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_passport_log(potdel character varying, plpu character varying, psysuser character varying, pmessage text) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  row_data record;
  isfirst integer;
  otdelname varchar;
  lpuname varchar;
BEGIN
  isfirst := 1;
  if (potdel is null) then
    select max(c.fullname)
    into lpuname
    from mir.company c
    where c.oid = plpu;
    insert into mir.passport_log (oid, lpu, otdel, sysuser, message, change_date)
    values (mir.guid_generate(), plpu, potdel, psysuser, pmessage||'' ''||lpuname, CURRENT_TIMESTAMP);
  else 
    for row_data in WITH RECURSIVE par ( oid, parent, lpu, name) AS 
          (select p.oid,
                 p.parent,
                 p.lpu,
                 p.name
            from mir.otdel p
           where p.oid = potdel
             
           union all
           
          select p.oid,
                 p.parent,
                 p.lpu,
                 p.name
            from mir.otdel p
           INNER JOIN par pr 
              ON p.oid = pr.parent
          )

          select p.oid,
                 p.parent,
                 p.lpu,
                 p.name
          from par p   loop
      if (isfirst = 1) then
         otdelname := row_data.name;
         isfirst := 0;
      end if;
      insert into mir.passport_log (oid, lpu, otdel, sysuser, message, change_date)
      values (mir.guid_generate(), row_data.lpu, row_data.oid, psysuser, pmessage||'' ''||otdelname, CURRENT_TIMESTAMP);       
  	end loop;
  end if;
  return ''true'';  
END;
';


ALTER FUNCTION mir.insert_passport_log(potdel character varying, plpu character varying, psysuser character varying, pmessage text) OWNER TO postgres;

--
-- TOC entry 1820 (class 1255 OID 17172)
-- Dependencies: 5396 14
-- Name: insert_schedule(character varying, numeric, character varying, character varying, numeric, character varying, character varying, timestamp without time zone, timestamp without time zone, numeric, character varying, character varying, character varying, integer, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_schedule(cabinetp character varying, insitep numeric, sysuserp character varying, sotrp character varying, statep numeric, isnapronlyp character varying, lpup character varying, startonp timestamp without time zone, endonp timestamp without time zone, isbronp numeric, infop character varying, otdelp character varying, presctypep character varying, maxvisitorsp integer, financingtypep numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  ins_oid mir.schedule.oid%type;
BEGIN
  ins_oid = mir.guid_generate();
  insert into mir.schedule
  		(oid,
        cabinet,
        insite,
		sysuser,
		sotr,		
       	state,
       	isnapronly,
        lpu,
		starton,
        endon,
		isbron,
       	updatepeopledate,
		info,
       	otdel,
       	presctype,
       	maxvisitors,
       	financingtype)
  VALUES
  (ins_oid,
  	cabinetp,
    insitep,
    sysuserp,
    sotrp,
    statep,
    isnapronlyp,
    lpup,
    startonp,
    endtimep,
    isbronp,
    CURRENT_DATE,
    infop,
    otdelp,
    presctypep,
    maxvisitorsp,
    finansingtypep);
END;
';


ALTER FUNCTION mir.insert_schedule(cabinetp character varying, insitep numeric, sysuserp character varying, sotrp character varying, statep numeric, isnapronlyp character varying, lpup character varying, startonp timestamp without time zone, endonp timestamp without time zone, isbronp numeric, infop character varying, otdelp character varying, presctypep character varying, maxvisitorsp integer, financingtypep numeric) OWNER TO postgres;

--
-- TOC entry 1822 (class 1255 OID 17173)
-- Dependencies: 5396 14
-- Name: insert_schedule_template(date, date, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_schedule_template(startoninp date, endoninp date, templateoidinp character varying, sysuserinp character varying, sotrinp character varying, lpuinp character varying, otdelinp character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
	oidV varchar;
    ppresctype varchar;
    pstate numeric;
    pisbron numeric;
    pinsite numeric;
    pcabinet varchar;
    pisnapronly varchar;
    pinfopac varchar;
    startontime timestamp;
    endontime timestamp;
    ppost varchar;
    pmaxvisitors integer;
    pfinancingtype numeric;
	dt timestamp;
	curDay INTEGER;
    resValue char;
    startTime timestamp;
    endTime timestamp;
    countRow integer;
    resultVar varchar;
    schedule_oid MIR.SCHEDULE.oid%type;
BEGIN
  curDay := 0;
  resultVar := '''';
	for dt in 
		select generate_series
		from generate_series(startoninp, endoninp, ''1 day'') 
    	LOOP
   			curDay := extract(DOW from dt);
			for oidV, ppresctype, pstate, pisbron, pinsite,
    			pcabinet, pisnapronly, pinfopac, startontime,
    			endontime, ppost, pmaxvisitors, pfinancingtype in
            	select 	std.template_oid,
                		std.presctype,
                        std.state,
                        std.isbron,
                        std.insite,
                        std.cabinet,
                        std.isnapronly,
                        std.infopac,
                        std.starton,
                        std.endon,
                        std.post,
                        std.maxvisitors,
                        std.financingtype
                from mir.schedule_template_detail as std
                where std.template_oid = templateoidinp and std.day = curDay
                LOOP
	                startTime := startontime - date_trunc(''day'', startontime) + dt;
                    endTime := endontime - date_trunc(''day'', endontime) + dt;
                    countRow := count(sc.oid)
                    			from mir.schedule as sc
                                where sc.sysuser = sysuserinp
                                and sc.lpu = lpuinp
                                and sc.otdel = otdelinp
                                and sc.starton <> sc.endon
                                and ((sc.starton >= startTime and sc.endon <= endTime) or
                                (sc.starton <= startTime and sc.endon > startTime) or
                                (sc.starton < endTime and sc.endon >= endTime) or
                                (sc.starton <= startTime and sc.endon >= endTime));
                    if countRow > 0 then
                    	resultVar := ''Прием не был добавлен, т.к. указанное время занято у сотрудника в ЛПУ'';
                    else
                    schedule_oid := MIR.guid_generate();
                    insert into mir.SCHEDULE
                    	(oid,
       					cabinet,
                        insite,
				       	sysuser,
						sotr,		
       					state,
       					isnapronly,
                		lpu,
						starton,
                        endon,
						isbron,
       					updatepeopledate,
						info,
       					otdel,
       					presctype,
       					maxvisitors,
       					financingtype)
                    values (schedule_oid,
                    		pcabinet,
                            pinsite,
                            sysuserinp,
                            sotrinp,
                            pstate,
                            pisnapronly,
                            lpuinp,
                            startTime,
                            endTime,
                            pisbron,
                            CURRENT_DATE,
                            pinfopac,
                            otdelinp,	
                            ppresctype,
                            pmaxvisitors,
                            pfinancingtype);
                    end if;
            end LOOP;
	end LOOP;
	return resultVar;
END;
';


ALTER FUNCTION mir.insert_schedule_template(startoninp date, endoninp date, templateoidinp character varying, sysuserinp character varying, sotrinp character varying, lpuinp character varying, otdelinp character varying) OWNER TO postgres;

--
-- TOC entry 1823 (class 1255 OID 17174)
-- Dependencies: 5396 14
-- Name: insert_two_messages_if_moderation_false(character varying, character varying, character varying, character varying, character varying, character, character varying, text); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insert_two_messages_if_moderation_false(plastname character varying, pfirstname character varying, pmiddlename character varying, ptelsot character varying, pip character varying, pusername character, pmailbody character varying, pemail text) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  LoginFound VARCHAR(100);
  v_MailBody varchar(4000);
  v_MailBody2 varchar(4000);
  newOid VARCHAR(36);
  KladrOid VARCHAR(36);
  home VARCHAR(36);
  korp VARCHAR(36);
begin
  newOid:=lower(mir.new_uuid());

                    insert into mir.errorclientmessages
                      (oid,
                       mess,
                       contact,
                       ip,
                       userasp,
                       formname,
                       num,
                       typemessage,
                       dtrecord,
                       people,
                       isanswer,
                       email,
                       rismessage)
                    values
                      (newoid,
                       ''Запрос на регистрацию с сайта самозаписи.''||chr(13)||PLASTNAME||'' ''||PFIRSTNAME||'' ''||PMIDDLENAME,
                       PTELSOT,
                       PIP,
                       '''',
                       '''',
                       (select max(NUM)+1 from  mir.errorclientmessages),
                       1,
                       CURRENT_TIMESTAMP,
                       null,
                       1,
                       PEMAIL,
                       1);


                    insert into mir.answerclientmessages
                      (oid,
                       errmess,
                       peopleanswer,
                       dtanswer,
                       messanswer,
                       sendemail)
                    values
                      (lower(mir.new_uuid()),
                       newoid,
                       PUSERNAME,
                       CURRENT_TIMESTAMP,
                       PMAILBODY,
                       PEMAIL);
end;

';


ALTER FUNCTION mir.insert_two_messages_if_moderation_false(plastname character varying, pfirstname character varying, pmiddlename character varying, ptelsot character varying, pip character varying, pusername character, pmailbody character varying, pemail text) OWNER TO postgres;

--
-- TOC entry 1824 (class 1255 OID 17175)
-- Dependencies: 5396 14
-- Name: insur_debug_test(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insur_debug_test(ppeople character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    VRESULT VARCHAR(400);
    C record;
  BEGIN
    FOR C IN (SELECT T.NAME,
                     case
                       when i.company is not null then
                        MIR.BASE_CLASS_GET_COMPANY_FULLNAME(I.COMPANY) ||
                        (select '' ('' || tt.name || '' '' || tt.fc_prefix || ''.)''
                           from mir.tkladrspr tt
                          inner join mir.company cm
                             on cm.region = tt.oid
                          where cm.oid = i.company)
                       else
                        null
                     end COMP,
                     I.*
                FROM MIR.INSURANCE I
                LEFT JOIN MIR.pay_type T ON I.pay_type = T.OID
               WHERE I.PEOPLE = PPEOPLE) LOOP
      VRESULT := NVL(VRESULT || ''; '','''') || TRIM(C.NAME || '' '' || NVL(C.SER,'''')) || '' '' || NVL(C.NUM,'''');
      IF C.BEGINDATE IS NOT NULL OR C.ENDDATE IS NOT NULL THEN
        VRESULT := VRESULT || '' действителен'';
      END IF;

      IF C.BEGINDATE IS NOT NULL THEN
        VRESULT := VRESULT || '' с '' || TO_CHAR(C.BEGINDATE, ''DD.MM.YYYY'');
      END IF;

      IF C.NOTENDDATE = 1 THEN
        VRESULT := VRESULT || '' (срок действия полиса не ограничен)'';
      ELSE
        BEGIN
          IF C.ENDDATE IS NOT NULL THEN
            VRESULT := VRESULT || '' по '' ||
                       TO_CHAR(C.ENDDATE, ''DD.MM.YYYY'');
          END IF;
        END;
      END IF;

      IF C.COMP IS NOT NULL THEN
        VRESULT := VRESULT || '' ('' || C.COMP || '')'';
      END IF;
    END LOOP;

    RETURN VRESULT;
  END;
';


ALTER FUNCTION mir.insur_debug_test(ppeople character) OWNER TO postgres;

--
-- TOC entry 1825 (class 1255 OID 17176)
-- Dependencies: 5396 14
-- Name: insurance_biu_check_ser_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurance_biu_check_ser_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  IF ( TG_OP = ''INSERT'' ) OR 
     ( ( TG_OP = ''UPDATE'' ) and ( NEW.SER <> OLD.SER ) ) THEN
     NEW.SER := TRANSLATE(NEW.SER, ''_ \/-'', ''_'');
  END IF;
return new;
END;

';


ALTER FUNCTION mir.insurance_biu_check_ser_trg() OWNER TO postgres;

--
-- TOC entry 1826 (class 1255 OID 17177)
-- Dependencies: 5396 14
-- Name: insurance_get_active_by_people(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurance_get_active_by_people(ppeople character) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    sres mir.insurance.oid%type;
    c record;
  begin
   sres := null;
   
   for c in (select i.oid
               from mir.insurance i
              where i.people = ppeople
                and i.state = 1
              limit 1
            )
    loop
      sres := c.oid;
    end loop;
      
    return sres;
  end;
  ';


ALTER FUNCTION mir.insurance_get_active_by_people(ppeople character) OWNER TO postgres;

--
-- TOC entry 1827 (class 1255 OID 17178)
-- Dependencies: 5396 14
-- Name: insurance_get_people_polis_info(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurance_get_people_polis_info(ppeople character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    VRESULT VARCHAR(400);
    C record;
  BEGIN
    FOR C IN (SELECT T.NAME,
                     case
                       when i.company is not null then
                        MIR.BASE_CLASS_GET_COMPANY_FULLNAME(I.COMPANY) ||
                        (select '' ('' || tt.name || '' '' || tt.fc_prefix || ''.)''
                           from mir.tkladrspr tt
                          inner join mir.company cm
                             on cm.region = tt.oid
                          where cm.oid = i.company)
                       else
                        null
                     end COMP,
                     I.*
                FROM MIR.INSURANCE I
                LEFT JOIN MIR.pay_type T  ON I.pay_type = T.OID
               WHERE I.PEOPLE = PPEOPLE
                 AND I.STATE = 1) LOOP
      VRESULT := TRIM(C.NAME || '' '' || COALESCE(C.SER, '''')) || '' '' || COALESCE(C.NUM, '''');
      IF C.BEGINDATE IS NOT NULL OR C.ENDDATE IS NOT NULL THEN
        VRESULT := VRESULT || '' действителен'';
      END IF;

      IF C.BEGINDATE IS NOT NULL THEN
        VRESULT := VRESULT || '' с '' || TO_CHAR(C.BEGINDATE, ''DD.MM.YYYY'');
      END IF;

      IF C.NOTENDDATE = 1 THEN
        VRESULT := VRESULT || '' (срок действия полиса не ограничен)'';
      ELSE
        BEGIN
          IF C.ENDDATE IS NOT NULL THEN
            VRESULT := VRESULT || '' по '' ||
                       TO_CHAR(C.ENDDATE, ''DD.MM.YYYY'');
          END IF;
        END;
      END IF;

      IF C.COMP IS NOT NULL THEN
        VRESULT := VRESULT || '' ('' || C.COMP || '')'';
      END IF;

    END LOOP;

    RETURN VRESULT;
  END;
';


ALTER FUNCTION mir.insurance_get_people_polis_info(ppeople character) OWNER TO postgres;

--
-- TOC entry 1828 (class 1255 OID 17179)
-- Dependencies: 5396 14
-- Name: insurance_get_people_polis_sernum(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurance_get_people_polis_sernum(ppeople character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    VRESULT VARCHAR(400);
    c record;
  BEGIN
    FOR C IN (SELECT I.SER, I.NUM
                FROM MIR.INSURANCE I
               WHERE I.PEOPLE = PPEOPLE
                 AND I.STATE = 0) LOOP
      VRESULT := TRIM(C.SER) || TRIM(C.NUM);
    END LOOP;

    RETURN VRESULT;
  END;

';


ALTER FUNCTION mir.insurance_get_people_polis_sernum(ppeople character) OWNER TO postgres;

--
-- TOC entry 1821 (class 1255 OID 17180)
-- Dependencies: 5396 14
-- Name: insurance_insert_polis(character varying, date, date, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurance_insert_polis(ppeople character varying, pbegindate date, penddate date, pser character varying, pnum character varying, pcompany character varying, ppay_type character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    VOID MIR.INSURANCE.OID%TYPE;
  BEGIN
    VOID := MIR.NEW_UUID();
    INSERT INTO MIR.INSURANCE
      (OID,
       PEOPLE,
       SER,
       NUM,
       BEGINDATE,
       ENDDATE,
       COMPANY,
       pay_type)
    VALUES
      (VOID,
       pPEOPLE,
       pSER,
       pNUM,
       pBEGINDATE,
       pENDDATE,
       pCOMPANY,
       ppay_type);

    RETURN VOID;
  END;
';


ALTER FUNCTION mir.insurance_insert_polis(ppeople character varying, pbegindate date, penddate date, pser character varying, pnum character varying, pcompany character varying, ppay_type character varying) OWNER TO postgres;

--
-- TOC entry 1752 (class 1255 OID 17181)
-- Dependencies: 5396 14
-- Name: insurcompany_insert(character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurcompany_insert(pname character varying, pcode character varying, pregion character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  poid VARCHAR(36);
begin
  poid:=lower((mir.new_uuid()));
  
  insert into mir.company
    (oid,fullname, region )
  values(poid,pName,pRegion);

  insert into mir.insurcompany
    (oid,code)
  values(poid,pCode);
end;

';


ALTER FUNCTION mir.insurcompany_insert(pname character varying, pcode character varying, pregion character) OWNER TO postgres;

--
-- TOC entry 1830 (class 1255 OID 17182)
-- Dependencies: 5396 14
-- Name: insurcompany_update(character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurcompany_update(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_code character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    vAddressEx mir.addressex.oid%type;
  BEGIN
    select max(address) into vAddressEx from mir.company where oid=v_oid;
                                    
    if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
        vAddressEx := lower(MIR.NEW_UUID());
        
        insert into mir.AddressEx
            (Oid, House, Building, Flat, Tkladr)
        values(vAddressEx, pHOUSE, pBUILDING,pFLAT, pTKLADR);
    else
        update  mir.AddressEx
           set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
         where Oid=vAddressEx;
    end if;
                                      
    update mir.company
        set fullname = v_fullname,
        shortname = v_shortname,
        phone = v_phone,
        fax = v_fax,
        okonh = v_okonh,
        okpo = v_okpo,
        inn = v_inn,
        ogrn = v_ogrn,
        address = vAddressEx,
        home =v_home,
        kpp = v_kpp,
        raschschet = v_raschschet,
        bank = v_bank,
        bik = v_bik,
        korschet = v_korschet,
        region = (select t.oid
                    from mir.tkladrspr t
                   where t.fk_level = 1
                     and t.oid = PTKLADR
                   limit 1)

  where oid = v_oid;         
                                         
 update mir.insurcompany
    set code = v_code
  where oid = v_oid;
                                   
  END;

';


ALTER FUNCTION mir.insurcompany_update(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_code character varying) OWNER TO postgres;

--
-- TOC entry 1831 (class 1255 OID 17183)
-- Dependencies: 5396 14
-- Name: insurcompany_update_reg(character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION insurcompany_update_reg(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_code character varying, roid character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    vAddressEx mir.addressex.oid%type;
  BEGIN
    select max(address) into vAddressEx from mir.company where oid=v_oid;
                                    
    if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
        vAddressEx := lower(MIR.NEW_UUID());
        
        insert into mir.AddressEx
            (Oid, House, Building, Flat, Tkladr)
        values(vAddressEx, pHOUSE, pBUILDING,pFLAT, pTKLADR);
    else
        update  mir.AddressEx
           set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
         where Oid=vAddressEx;
    end if;
                                      
    update mir.company
        set fullname = v_fullname,
        shortname = v_shortname,
        phone = v_phone,
        fax = v_fax,
        okonh = v_okonh,
        okpo = v_okpo,
        inn = v_inn,
        ogrn = v_ogrn,
        address = vAddressEx,
        home =v_home,
        kpp = v_kpp,
        raschschet = v_raschschet,
        bank = v_bank,
        bik = v_bik,
        korschet = v_korschet,
        region = ROID

  where oid = v_oid;         
                                         
 update mir.insurcompany
    set code = v_code
  where oid = v_oid;
                                   
  END;

';


ALTER FUNCTION mir.insurcompany_update_reg(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_code character varying, roid character) OWNER TO postgres;

--
-- TOC entry 1832 (class 1255 OID 17184)
-- Dependencies: 5396 14
-- Name: int_number_to_words(numeric, integer, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION int_number_to_words(asource numeric, arod integer DEFAULT 1, awordfor1 character varying DEFAULT NULL::character varying, awordfor234 character varying DEFAULT NULL::character varying, awordfor567890_1x character varying DEFAULT NULL::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  result VARCHAR(500);
  s VARCHAR(50);
  n DECIMAL;
  n1 DECIMAL; 
BEGIN
  
  -- Форматируем входное число в хитрый строковый формат
  result := ltrim(to_char(trunc(aSource), ''9,9,,9,,,,,,9,9,,9,,,,,9,9,,9,,,,9,9,,9,,,''))||''.'';

  s := to_char(trunc(aSource),''999999999999999999999''); -- определяем 2 последние цифры числа
  s := SUBSTR(s, Length(s)-1, 2);
  n := TO_NUMBER(s,''99'');
  n1 := (trunc(  ((n / 10) - trunc(n / 10))*10 ));
  result := replace( result, ''.'', ''r'');
  -- t - тысячи; m - милионы; M - миллиарды;
  result := replace( result, '',,,,,,'', ''eM'');
  result := replace( result, '',,,,,'', ''em'');
  result := replace( result, '',,,,'', ''et'');
  -- e - единицы; d - десятки; c - сотни;
  result := replace( result, '',,,'', ''e'');
  result := replace( result, '',,'', ''d'');
  result := replace( result, '','', ''c'');
  --
  result := replace( result, ''0c0d0et'', '''');
  result := replace( result, ''0c0d0em'', '''');
  result := replace( result, ''0c0d0eM'', '''');

  -- Заменим вхождения форматированного представления числа словесными формулировками
  result := replace( result, ''0c'', '''');
  result := replace( result, ''1c'', ''сто '');
  result := replace( result, ''2c'', ''двести '');
  result := replace( result, ''3c'', ''триста '');
  result := replace( result, ''4c'', ''четыреста '');
  result := replace( result, ''5c'', ''пятьсот '');
  result := replace( result, ''6c'', ''шестьсот '');
  result := replace( result, ''7c'', ''семьсот '');
  result := replace( result, ''8c'', ''восемьсот '');
  result := replace( result, ''9c'', ''девятьсот '');
  --
  result := replace( result, ''1d0e'', ''десять '');
  result := replace( result, ''1d1e'', ''одиннадцать '');
  result := replace( result, ''1d2e'', ''двенадцать '');
  result := replace( result, ''1d3e'', ''тринадцать '');
  result := replace( result, ''1d4e'', ''четырнадцать '');
  result := replace( result, ''1d5e'', ''пятнадцать '');
  result := replace( result, ''1d6e'', ''шестнадцать '');
  result := replace( result, ''1d7e'', ''семнадцать '');
  result := replace( result, ''1d8e'', ''восемнадцать '');
  result := replace( result, ''1d9e'', ''девятнадцать '');
  --
  result := replace( result, ''0d'', '''');
  result := replace( result, ''2d'', ''двадцать '');
  result := replace( result, ''3d'', ''тридцать '');
  result := replace( result, ''4d'', ''сорок '');
  result := replace( result, ''5d'', ''пятьдесят '');
  result := replace( result, ''6d'', ''шестьдесят '');
  result := replace( result, ''7d'', ''семьдесят '');
  result := replace( result, ''8d'', ''восемьдесят '');
  result := replace( result, ''9d'', ''девяносто '');
  --
  result := replace( result, ''1et'', ''одна тысяча '');
  result := replace( result, ''2et'', ''две тысячи '');
  result := replace( result, ''3et'', ''три тысячи '');
  result := replace( result, ''4et'', ''четыре тысячи '');
  result := replace( result, ''1em'', ''один миллион '');
  result := replace( result, ''2em'', ''два миллиона '');
  result := replace( result, ''3em'', ''три миллиона '');
  result := replace( result, ''4em'', ''четыре миллиона '');
  result := replace( result, ''1eM'', ''один миллиард '');
  result := replace( result, ''2eM'', ''два миллиарда '');
  result := replace( result, ''3eM'', ''три миллиарда '');
  result := replace( result, ''4eM'', ''четыре миллиарда '');
  --
  result := replace( result, ''0et'', ''t'');
  result := replace( result, ''0em'', ''m'');
  result := replace( result, ''0eM'', ''M'');
  result := replace( result, ''0er'', ''r'');

  --
  if aRod = 1 then
    result := replace( result, ''1e'', ''один '');
    result := replace( result, ''2e'', ''два '');
  elsif  aRod = 2 then
    result := replace( result, ''1e'', ''одна '');
    result := replace( result, ''2e'', ''две '');
  elsif  aRod = 0 then
    result := replace( result, ''1e'', ''одно '');
    result := replace( result, ''2e'', ''два '');
  end if;

  result := replace( result, ''3e'', ''три '');
  result := replace( result, ''4e'', ''четыре '');
  result := replace( result, ''5e'', ''пять '');
  result := replace( result, ''6e'', ''шесть '');
  result := replace( result, ''7e'', ''семь '');
  result := replace( result, ''8e'', ''восемь '');
  result := replace( result, ''9e'', ''девять '');
  --
  result := replace( result, ''t'', ''тысяч '');
  result := replace( result, ''m'', ''миллионов '');
  result := replace( result, ''M'', ''миллиардов '');

  -- единицы измерения
  if ((n<10) or (n>20)) and(n1 = 1) then
    result := replace( result, ''r'', aWordFor1);
  elsif ((n<10) or (n>20)) and(n1 in(2,3,4))  then -- проверка что это не 10..20 и 
    result := replace( result, ''r'', aWordFor234);
  else
    result := replace( result, ''r'', aWordFor567890_1x);
  end if;

  -- Приведем первый символ выражения в верхний регистр
  RETURN result;
END;
';


ALTER FUNCTION mir.int_number_to_words(asource numeric, arod integer, awordfor1 character varying, awordfor234 character varying, awordfor567890_1x character varying) OWNER TO postgres;

--
-- TOC entry 1833 (class 1255 OID 17185)
-- Dependencies: 5396 14
-- Name: interval_between(date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION interval_between(pfrom_date date, pto_date date) RETURNS interval
    LANGUAGE plpgsql
    AS '
declare
  fday   integer := 0;
  fmonth integer := 0;
  fyear  integer := 0;
  tday   integer := 0;
  tmonth integer := 0;
  tyear  integer := 0;
  xyears integer := 0;
  xmons  integer := 0;
  xdays  integer := 0;
begin
  if pfrom_date >= pto_date then
    return 0;
  end if;

  fday   := date_part(''day'', pfrom_date);
  fmonth := date_part(''month'', pfrom_date);
  fyear  := date_part(''year'', pfrom_date);


  tday   := date_part(''day'', pto_date);
  tmonth := date_part(''month'', pto_date);
  tyear  := date_part(''year'', pto_date);

  if fday < tday then
    xdays := tday-fday;
  end if;

  if fday > tday then
    xmons := xmons-1;
    xdays :=mir.days_in_month(fyear, fmonth)-fday+tday;
  end if;

  if fmonth < tmonth then
    xmons := xmons + tmonth - fmonth;
  end if;

  if fmonth > tmonth then
    xmons := xmons + 12-fmonth+tmonth;
  end if;

  if fyear < tyear
  then
    xyears := tyear-fyear;
    if fmonth > tmonth then
      xyears := xyears-1;   
    end if;
  end if;

  return ( (xyears || '' year'')::interval + (xmons || '' month'')::interval + (xdays || '' day'')::interval );
end;
';


ALTER FUNCTION mir.interval_between(pfrom_date date, pto_date date) OWNER TO postgres;

--
-- TOC entry 1836 (class 1255 OID 17186)
-- Dependencies: 5396 14
-- Name: is_free_day_schedule(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION is_free_day_schedule(psysuser character varying, ppresctype character varying, potdel character varying, pdate character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
  v_all_plan numeric;
  v_wplan numeric;
  v_live_people numeric;
  v_live_count numeric;
BEGIN
  select count(s.oid) into v_all_plan
from mir.schedule s
where s.sysuser=psysuser
and s.presctype=ppresctype
and cast(s.starton as date)=to_date(pdate, ''dd.mm.yyyy'')
and s.starton<>s.endon and s.state<>4
and s.otdel=potdel;
select count(s.oid) into v_wplan
from mir.schedule s
where s.sysuser=psysuser
and s.presctype=ppresctype
and cast(s.starton as date)=to_date(pdate, ''dd.mm.yyyy'')
and s.starton<>s.endon
and s.otdel=potdel
and s.people is not null;
if(EXISTS(select * from mir.live_count l where l.presctype=ppresctype and l.otdel=potdel)) then

select l.count_people into v_live_count from mir.live_count l 
where l.presctype=ppresctype and l.otdel=potdel;
 
select count(s.oid) into v_live_people
from mir.schedule s
where s.sysuser=psysuser
and s.presctype=ppresctype
and cast(s.starton as date)=to_date(pdate, ''dd.mm.yyyy'')
and s.starton=s.endon
and s.otdel=potdel
and s.people is not null;


if(v_wplan<>v_all_plan and v_all_plan<>0) then
return 1;
else 
if(v_live_people<v_live_count) then
return 1;
else

return 0;
end if;
end if;




else
return 1;
end if;
END;
';


ALTER FUNCTION mir.is_free_day_schedule(psysuser character varying, ppresctype character varying, potdel character varying, pdate character varying) OWNER TO postgres;

--
-- TOC entry 1837 (class 1255 OID 17187)
-- Dependencies: 5396 14
-- Name: is_service_lpu(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION is_service_lpu(plpu character, pservice character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  RESULT VARCHAR(1);
  TEMP   VARCHAR(36);
  --Edited by Spasskiy S.N. 08.07.2011 --обработка ORA-01422
  c record;
BEGIN
  RESULT := ''0'';
  FOR C IN (SELECT S.OID, ''0''
              FROM MIR.SERVICE_LPU S
             WHERE S.LPU = PLPU
               AND S.SERVICE = PSERVICE) LOOP
    RESULT := ''1'';
    EXIT;
  END LOOP;

  /*
    SELECT NVL(S.OID, ''0'')
      INTO TEMP
      FROM MIR.SERVICE_LPU S
     WHERE S.LPU = PLPU
       AND S.SERVICE = PSERVICE;
    IF (TEMP = ''0'') THEN
      RESULT := ''0'';
    ELSE
      RESULT := ''1'';
    END IF;
  */
  RETURN(RESULT);
END;

';


ALTER FUNCTION mir.is_service_lpu(plpu character, pservice character) OWNER TO postgres;

--
-- TOC entry 1838 (class 1255 OID 17188)
-- Dependencies: 5396 14
-- Name: loadsysuser_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION loadsysuser_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  poid  VARCHAR(36);
  poid2 VARCHAR(36);

  OidNewOtdel  varchar(36);
  OidNewSpec   varchar(36);
  OidNewPeople varchar(36);
  OidLpu       varchar(36);
  PNameOtdel   varchar(200);
  PNameSpec    varchar(200);

  PFam      varchar(200);
  PIm       varchar(200);
  POtch     varchar(200);
  Pdateborn date;
  V_TMP     varchar(36);
  Pregion   varchar(36);
  PLogin    varchar(100);
  cnt       numeric(10);
  newlogin  varchar(50);
  ii        numeric(10);
  tmpVar  varchar(36);

  c record;
BEGIN

  PFam        := new.fam;
  PIm         := new.im;
  POtch       := new.otch;
  Pdateborn   := new.borndt;
  OidNewOtdel := NULL;

  -- Шаг 1 проверяем есть ли в справочниках отдел и сперциальность ,
  -- если нет то создаем записи в справочниках
  if (new.status_load = ''0'') then
    select max(lpu)
      into OidLpu
      from mir.loadsysuser_listfiles
     where oid = new.oid_listfiles; --''e8422860-851f-4adf-a7b0-7216433b7f22'';
    PNameOtdel := new.otdel; --''Хирургическое'';
    PNameSpec  := new.spec;

    --Определение отдела
    select max(o.oid)
      into OidNewOtdel
      from mir.otdel o
     where o.lpu = OidLpu
       and rtrim(ltrim(upper(o.name))) = rtrim(ltrim(upper(PNameOtdel)));

    if OidNewOtdel is null then

      OidNewOtdel := mir.new_uuid();

      insert into mir.otdel (oid, lpu, name) values (OidNewOtdel, OidLpu, rtrim(ltrim(upper(PNameOtdel))));
    end if;

    --Определение специальности
    select max(p.oid)
      into OidNewSpec
      from mir.presctype p
      left join mir.dictionary d on d.oid = p.oid
     where rtrim(ltrim(upper(d.name))) = rtrim(ltrim(upper(PNameSpec)));

    if OidNewSpec is null then

      OidNewSpec := mir.new_uuid();
      insert into mir.dictionary
        (oid, name)
      values
        (OidNewSpec, rtrim(ltrim(upper(PNameSpec))));

      insert into mir.presctype (oid) values (OidNewSpec);

    end if;

    -- Шаг 2 создаем people

    --проверка,  есть ли такой человек в базе ...

    select MAX(oid)
      into OidNewPeople
      from mir.people pp
     where upper(pp.lastname) = upper(PFam)
       and upper(pp.Firstname) = upper(PIm)
       and upper(pp.middlename) = upper(POtch)
       and pp.birthday = Pdateborn;

    IF OidNewPeople IS NULL then

      OidNewPeople := mir.new_uuid();
      select max(region)
        into Pregion
        from mir.company cc
       where cc.oid = OidLpu;
      select mir.people_info_insert_people(null, PIm, PFam, POtch, Pdateborn) into OidNewPeople;
      
      update mir.people p
         set lpu = OidLpu,
             region = Pregion,
             p.dtcreation = CURRENT_TIMESTAMP
       where oid = OidNewPeople;
    end if;

    SELECT MAX(OID) INTO V_TMP FROM MIR.SYSUSER WHERE OID = OidNewPeople;
    IF V_TMP IS NULL THEN

      SELECT MAX(OID) INTO V_TMP FROM MIR.SYSUSER WHERE OID = OidNewPeople;
      IF V_TMP IS NULL THEN
        --СОздаем логин

        newlogin := upper(mir.translit(REPLACE(SUBSTR(PFam, 1, 3) ||
                                               SUBSTR(PIm, 1, 1) ||
                                               SUBSTR(POtch, 1, 1) ||
                                               SUBSTR(TO_CHAR(Pdateborn,
                                                              ''yyyy''),
                                                      3,
                                                      2),
                                               '' '',
                                               '''')));

        select count(*)
          into cnt
          from mir.sysuser s
         where upper(s.username) = newlogin;
        ii := 1;
        WHILE cnt <> 0 LOOP
          newlogin := upper(mir.translit(REPLACE(SUBSTR(PFam, 1, 3) ||
                                                 SUBSTR(PIm, 1, 1) ||
                                                 SUBSTR(POtch, 1, 1) ||
                                                 SUBSTR(TO_CHAR(Pdateborn,
                                                                ''yyyy''),
                                                        3,
                                                        2),
                                                 '' '',
                                                 '''')));
          newlogin := newlogin || ''_'' || to_char(ii);

          select count(*)
            into cnt
            from mir.sysuser s
           where upper(s.username) = newlogin;
        END LOOP;

        -- проверка на нахождение в базе данного логина

        /*   PLogin:= upper(mir.translit(     REPLACE(SUBSTR(PIm, 1, 3) || SUBSTR(PFam, 1, 1) ||
                             SUBSTR(POtch, 1, 1) ||
                             SUBSTR(TO_CHAR(Pdateborn, ''yyyy''), 3, 2),
                             '' '',
                             '''')));

        select count(1) into cnt from dba_users where username = ''Z''||PLogin;
          if cnt > 0 then
             PLogin:=PLogin||to_char(cnt+1);
           end if;  */
        
        perform MIR.CREATESYSUSERFROMPEOPLE(OidNewPeople, newlogin);

        newlogin := ''Z'' || newlogin;

        perform mir.DoUser(newlogin, ''200820E3227815ED1756A6B531E7E0D2'');

        --если создаем нового - делаем его видимым
        --perform MIR.SYSUSER_UPDATE_SYSUSER(POID        => OidNewPeople,
        --                               PSHOWINSITE => 1);
        update mir.sysuser
           set showinsite = 1
         where oid = OidNewPeople;

      END IF;
      -- создаем пользователя
      select mir.sysuser_INSERT_SOTR(OidNewPeople,
                                           OidNewOtdel,
                                           null,
                                           OidLpu) into V_TMP;
      perform mir.sysuser_SET_SYSUSER_PRECTYPE(OidNewPeople, OidNewSpec);

      FOR C IN (SELECT REGION FROM MIR.COMPANY C WHERE OID = OidLpu) LOOP
        INSERT INTO MIR.SYSUSER_REGION
          (OID, SYSUSER, REGION)
        VALUES
          (MIR.NEW_UUID(), OidNewPeople, C.REGION);
      END LOOP;
      --Создаем пользователя в Oracle, и проставялем пароль
    end if;
    new.oid_otdel   := OidNewOtdel;
    new.oid_spec    := OidNewSpec;
    new.oid_sysuser := OidNewPeople;

  end if;

  if new.status_load = ''0'' then
  select max(OID) into tmpVar from mir.loadsysuser_status where syn = ''SYN_COMPLITE'';

    new.status_load:= tmpVar;
  end if;

  if new.status_load = ''1'' then
  select max(OID) into tmpVar from mir.loadsysuser_status where syn = ''SYN_ZERO_FIELD'';
    new.status_load:=tmpVar;
  end if;
return new;
END;

';


ALTER FUNCTION mir.loadsysuser_bi_trg() OWNER TO postgres;

--
-- TOC entry 1839 (class 1255 OID 17190)
-- Dependencies: 5396 14
-- Name: logdbf_deleted(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION logdbf_deleted(piod_file character varying, pfileld character varying, pnew character varying, pold character varying, poidrec character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
insert into mir.dbf_log
  (oid, filename, fieldname, newvalue, oldvalue,dtChange,userchange,oid_rec)
values
  (lower(mir.new_uuid()), Piod_file, pfileld, pNew, pOld, CURRENT_TIMESTAMP, CURRENT_USER, poidrec);

END;
';


ALTER FUNCTION mir.logdbf_deleted(piod_file character varying, pfileld character varying, pnew character varying, pold character varying, poidrec character varying) OWNER TO postgres;

--
-- TOC entry 1840 (class 1255 OID 17191)
-- Dependencies: 5396 14
-- Name: lpu_allow_demand_lpu(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpu_allow_demand_lpu(plpu_from character, plpu_to character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    nOk integer = -1;
    c record;
  BEGIN
    for c in (select 1
                from MIR.LPU_DEMAND_ALLOW T
               where T.DEMAND_FROM = PLPU_FROM 
                 AND T.DEMAND_TO = PLPU_TO
             )
    loop
      nOk := 1;
    end loop;

    if nOk <= 0 then
      INSERT into MIR.LPU_DEMAND_ALLOW(DEMAND_FROM, DEMAND_TO) 
      VALUES (PLPU_FROM, PLPU_TO);
    end if;
  
    /*MERGE INTO MIR.LPU_DEMAND_ALLOW T
    USING DUAL
    ON (T.DEMAND_FROM = PLPU_FROM AND T.DEMAND_TO = PLPU_TO)
    WHEN NOT MATCHED THEN
      INSERT VALUES (PLPU_FROM, PLPU_TO);*/
  END;

';


ALTER FUNCTION mir.lpu_allow_demand_lpu(plpu_from character, plpu_to character) OWNER TO postgres;

--
-- TOC entry 1841 (class 1255 OID 17192)
-- Dependencies: 5396 14
-- Name: lpu_cancel_demand_lpu(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpu_cancel_demand_lpu(plpu_from character, plpu_to character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.LPU_DEMAND_ALLOW T
     WHERE T.DEMAND_FROM = PLPU_FROM
       AND T.DEMAND_TO = PLPU_TO;
  END;

';


ALTER FUNCTION mir.lpu_cancel_demand_lpu(plpu_from character, plpu_to character) OWNER TO postgres;

--
-- TOC entry 1842 (class 1255 OID 17193)
-- Dependencies: 5396 14
-- Name: lpudogovor_autosave2(character varying, date, character varying, character varying, character, character, character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, character varying, numeric, numeric, character, character varying, character varying, character varying, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_autosave2(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character DEFAULT ''::bpchar, addresshomep character DEFAULT ''::bpchar, addresskorpp character DEFAULT ''::bpchar, addressapartp character DEFAULT ''::bpchar, telregp character varying DEFAULT ''::character varying, telsprp character varying DEFAULT ''::character varying, glavvrachp character varying DEFAULT NULL::character varying, loginadminp character varying DEFAULT NULL::character varying, passwordp character varying DEFAULT NULL::character varying, emailp character varying DEFAULT ''::character varying, teladminp character varying DEFAULT ''::character varying, ipp character varying DEFAULT NULL::character varying, datedogovorp date DEFAULT NULL::date, numdogovorp character varying DEFAULT NULL::character varying, ismoderatep numeric DEFAULT NULL::numeric, statusp numeric DEFAULT NULL::numeric, regionlpup character DEFAULT NULL::bpchar, lastnamep character varying DEFAULT NULL::character varying, nameadp character varying DEFAULT NULL::character varying, middlenamep character varying DEFAULT NULL::character varying, dateadminp date DEFAULT NULL::date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  NOID       char(36);
  LOID       CHAR(36);
  SOID       char(36);
  OTOID      CHAR(36);
  COUNTSOTR  integer;
  VPASS varchar(255);
  VUSERNAME varchar(255);
  vAddressEx mir.addressex.oid%type;
  cp record;
begin
  NOID  := LOWER(MIR.NEW_UUID());
  LOID  := LOWER(MIR.NEW_UUID());
  SOID  := LOWER(MIR.NEW_UUID());
  OTOID := LOWER(MIR.NEW_UUID());

  INSERT INTO MIR.LPUDOGOVOR
    (OID,
     NUMLICENSE,
     DATELICENSE,
     FULLNAMELPU,
     SHORTNAMELPU,
     ADDRESSOID,
     ADDRESSHOME,
     ADDRESSKORP,
     ADDRESSAPART,
     TELREG,
     TELSPR,
     GLAVVRACH,
     LOGINADMIN,
     PASSWORDADMIN,
     EMAILADMIN,
     TELADMIN,
     IP,
     DATEDOGOVOR,
     NUMDOGOVOR,
     ISMODERATE,
     STATUS,
     REGION,
     LASTNAMEADMIN,
     NAMEADMIN,
     MIDDLENAMEADMIN,DATEADMIN,LPU)
  VALUES
    (NOID,
     NUMLICENSEp,
     DATELICENSEp,
     FULLNAMELPUp,
     SHORTNAMELPUp,
     ADDRESSOIDp,
     ADDRESSHOMEp,
     ADDRESSKORPp,
     ADDRESSAPARTp,
     TELREGp,
     TELSPRp,
     GLAVVRACHp,
     LOGINADMINp,
     PASSWORDp,
     EMAILp,
     TELADMINp,
     IPp,
     DATEDOGOVORp,
     NUMDOGOVORp,
     ISMODERATEp,
     STATUSp,
     REGIONLPUp,
     lastnamep,
     nameadp,
     middlenamep,DATEADMINP,LOID);

SELECT COUNT(S.OID) INTO COUNTSOTR FROM MIR.LPU L LEFT JOIN MIR.OTDEL O ON O.LPU=L.OID
LEFT JOIN MIR.SOTR S ON S.OTDEL=O.OID left join mir.company cm on cm.oid=l.oid
WHERE UPPER(L.LICENSE)=UPPER(NUMLICENSEp) and cm.region=REGIONLPUp;

IF (COUNTSOTR = 0)then
begin
  SELECT L.OID INTO LOID FROM MIR.LPU L left join mir.company cm on cm.oid=l.oid
WHERE UPPER(L.LICENSE)=UPPER(NUMLICENSEp) and cm.region=REGIONLPUp;
end; ELSE begin

  insert into mir.company
    (OID, region)
  values
    (LOID, REGIONLPUp);

  insert into mir.lpu (OID) values (LOID);
end; end if;
  vAddressEx := lower(MIR.NEW_UUID);

  insert into mir.Address
    (Oid)
  values
    (vAddressEx);

  insert into mir.AddressEx
    (OID, House, Building, Flat, Tkladr)
  values
    (vAddressEx, ADDRESSHOMEp, ADDRESSKORPp, ADDRESSAPARTp, ADDRESSOIDp);

  update mir.company
     set fullname   = FULLNAMELPUp,
         shortname  = SHORTNAMELPUp,
         phone      = '''',
         fax        = '''',
         okonh      = '''',
         okpo       = '''',
         inn        = '''',
         ogrn       = '''',
         address    = vAddressEx,
         home       = ADDRESSHOMEp,
         kpp        = '''',
         raschschet = '''',
         bank       = '''',
         bik        = '''',
         korschet   = ''''
   where oid = LOID;

  update mir.lpu L
     set L.transport    = '''',
         L.telreg       = TELREGp,
         L.telspr       = TELSPRp,
         L.is_kvota     = ''0'',
         L.SHOW_IN_SITE = 1,
         L.LICENSE      = NUMLICENSEp,
         L.DATELICENSE  = DATELICENSEp,
         l.lpu_work_dogovor=1
   where oid = LOID;

   insert into mir.people (oid,FIRSTNAME,LASTNAME,MIDDLENAME,BIRTHDAY,lpu,email,telsot1,region) 
   values (SOID,nameadp, lastnamep,middlenamep, DATEADMINP,LOID, EMAILp,TELADMINp,REGIONLPUp);

  insert into mir.sysuser
    (oid, storedpassword, username, isactive, isadministrator)
  values
    (SOID, PASSWORDp, UPPER(LOGINADMINp), 1, 1);

  INSERT INTO MIR.SYSUSER_REGION
    (OID, SYSUSER, REGION)
  VALUES
    (MIR.NEW_UUID(), SOID, REGIONLPUp);

  insert into mir.sysuserusers_sysroleroles
    (roles, users, oid, optimisticlockfield)
  values
    ((SELECT R.OID
       FROM MIR.ROLEBASE R
      WHERE UPPER(R.NAME) LIKE UPPER(''%Администратор ЛПУ%'')),
     soid,
     lower(mir.new_uuid()),
     0);

  FOR CP IN (select oid_role from mir.rolesdemo
                        ) LOOP
        begin

         insert into mir.sysuserusers_sysroleroles
                    (roles, users, oid)
                          values
                                (CP.Oid_Role,
                                           soid,
                lower(mir.new_uuid()));

        end;
      end loop;

    VPASS := SUBSTR(PASSWORDp, 0, 30);
  VUSERNAME:=Upper(''z'' || LOGINADMINp);
perform mir.douser(VUSERNAME,VPASS);

  INSERT INTO MIR.OTDEL (OID, LPU, NAME) VALUES (OTOID, LOID, ''Регистратура'');


  INSERT INTO MIR.SOTR
    (OID, SYSUSER, OTDEL, POST)
  VALUES
    (MIR.NEW_UUID(),
     SOID,
     OTOID,
     (SELECT P.OID
        FROM MIR.POST P
       WHERE UPPER(P.NAME) LIKE UPPER(''%РЕГИСТРАТОР%'')));

end;
';


ALTER FUNCTION mir.lpudogovor_autosave2(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character, addresshomep character, addresskorpp character, addressapartp character, telregp character varying, telsprp character varying, glavvrachp character varying, loginadminp character varying, passwordp character varying, emailp character varying, teladminp character varying, ipp character varying, datedogovorp date, numdogovorp character varying, ismoderatep numeric, statusp numeric, regionlpup character, lastnamep character varying, nameadp character varying, middlenamep character varying, dateadminp date) OWNER TO postgres;

--
-- TOC entry 1843 (class 1255 OID 17195)
-- Dependencies: 5396 14
-- Name: lpudogovor_autosave_no_lic(character varying, date, character varying, character varying, character, character, character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, character varying, numeric, numeric, character, character varying, character varying, character varying, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_autosave_no_lic(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character DEFAULT ''::bpchar, addresshomep character DEFAULT ''::bpchar, addresskorpp character DEFAULT ''::bpchar, addressapartp character DEFAULT ''::bpchar, telregp character varying DEFAULT ''::character varying, telsprp character varying DEFAULT ''::character varying, glavvrachp character varying DEFAULT NULL::character varying, loginadminp character varying DEFAULT NULL::character varying, passwordp character varying DEFAULT NULL::character varying, emailp character varying DEFAULT ''::character varying, teladminp character varying DEFAULT ''::character varying, ipp character varying DEFAULT NULL::character varying, datedogovorp date DEFAULT NULL::date, numdogovorp character varying DEFAULT NULL::character varying, ismoderatep numeric DEFAULT NULL::numeric, statusp numeric DEFAULT NULL::numeric, regionlpup character DEFAULT NULL::bpchar, lastnamep character varying DEFAULT NULL::character varying, nameadp character varying DEFAULT NULL::character varying, middlenamep character varying DEFAULT NULL::character varying, dateadminp date DEFAULT NULL::date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  NOID       char(36);
  LOID       CHAR(36);
  SOID       char(36);
  OTOID      CHAR(36);
  VPASS      varchar(255);
  VUSERNAME  varchar(255);
  vAddressEx mir.addressex.oid%type;
  CP record;
begin
  NOID  := LOWER(MIR.NEW_UUID());
  LOID  := LOWER(MIR.NEW_UUID());
  SOID  := LOWER(MIR.NEW_UUID());
  OTOID := LOWER(MIR.NEW_UUID());

  INSERT INTO MIR.LPUDOGOVOR
    (OID,
     NUMLICENSE,
     DATELICENSE,
     FULLNAMELPU,
     SHORTNAMELPU,
     ADDRESSOID,
     ADDRESSHOME,
     ADDRESSKORP,
     ADDRESSAPART,
     TELREG,
     TELSPR,
     GLAVVRACH,
     LOGINADMIN,
     PASSWORDADMIN,
     EMAILADMIN,
     TELADMIN,
     IP,
     DATEDOGOVOR,
     NUMDOGOVOR,
     ISMODERATE,
     STATUS,
     REGION,
     LASTNAMEADMIN,
     NAMEADMIN,
     MIDDLENAMEADMIN,
     DATEADMIN,LPU)
  VALUES
    (NOID,
     NUMLICENSEp,
     DATELICENSEp,
     FULLNAMELPUp,
     SHORTNAMELPUp,
     ADDRESSOIDp,
     ADDRESSHOMEp,
     ADDRESSKORPp,
     ADDRESSAPARTp,
     TELREGp,
     TELSPRp,
     GLAVVRACHp,
     LOGINADMINp,
     PASSWORDp,
     EMAILp,
     TELADMINp,
     IPp,
     DATEDOGOVORp,
     NUMDOGOVORp,
     ISMODERATEp,
     STATUSp,
     REGIONLPUp,
     lastnamep,
     nameadp,
     middlenamep,
     DATEADMINP,LOID);

  insert into mir.company
    (OID, optimisticlockfield, objecttype, region)
  values
    (LOID, 0, 1, REGIONLPUp);

  insert into mir.lpu (OID) values (LOID);

  vAddressEx := lower(MIR.NEW_UUID);

  insert into mir.AddressEx
    (OID, House, Building, Flat, Tkladr)
  values
    (vAddressEx, ADDRESSHOMEp, ADDRESSKORPp, ADDRESSAPARTp, ADDRESSOIDp);

  update mir.company
     set fullname   = FULLNAMELPUp,
         shortname  = SHORTNAMELPUp,
         phone      = '''',
         fax        = '''',
         okonh      = '''',
         okpo       = '''',
         inn        = '''',
         ogrn       = '''',
         address    = vAddressEx,
         home       = ADDRESSHOMEp,
         kpp        = '''',
         raschschet = '''',
         bank       = '''',
         bik        = '''',
         korschet   = ''''
   where oid = LOID;

  update mir.lpu L
     set L.transport    = '''',
         L.telreg       = TELREGp,
         L.telspr       = TELSPRp,
         L.is_kvota     = ''0'',
         L.SHOW_IN_SITE = 1,
         L.LICENSE      = NUMLICENSEp,
         L.DATELICENSE  = DATELICENSEp,
         l.lpu_work_dogovor=1
   where oid = LOID;

  insert into mir.people
    (oid, lpu, email, telsot1, region, FIRSTNAME, LASTNAME, MIDDLENAME, BIRTHDAY)
  values
    (SOID, LOID, EMAILp, TELADMINp, REGIONLPUp, nameadp, lastnamep, middlenamep, DATEADMINP);

  insert into mir.sysuser
    (oid, storedpassword, username, isactive, isadministrator)
  values
    (SOID, PASSWORDp, UPPER(LOGINADMINp), 1, 1);

  INSERT INTO MIR.SYSUSER_REGION
    (OID, SYSUSER, REGION)
  VALUES
    (MIR.NEW_UUID(), SOID, REGIONLPUp);

  insert into mir.sysuserusers_sysroleroles
    (roles, users, oid)
  values
    ((SELECT R.OID
       FROM MIR.ROLEBASE R
      WHERE UPPER(R.NAME) LIKE UPPER(''%Администратор ЛПУ%'')),
     soid,
     lower(mir.new_uuid()));

 FOR CP IN (select oid_role from mir.rolesdemo
                        ) LOOP
        begin

         insert into mir.sysuserusers_sysroleroles
                    (roles, users, oid)
                          values
                                (CP.Oid_Role,
                                           soid,
                lower(mir.new_uuid()));

        end;
      end loop;

  VPASS := SUBSTR(PASSWORDp, 0, 30);
  VUSERNAME := Upper(''z'' || LOGINADMINp);
  perform mir.douser(VUSERNAME, VPASS);
  
  INSERT INTO MIR.OTDEL (OID, LPU, NAME) VALUES (OTOID, LOID, ''Регистратура'');

  INSERT INTO MIR.SOTR
    (OID, SYSUSER, OTDEL, POST)
  VALUES
    (MIR.NEW_UUID(),
     SOID,
     OTOID,
     (SELECT P.OID
        FROM MIR.POST P
       WHERE UPPER(P.NAME) LIKE UPPER(''%РЕГИСТРАТОР%'')));

end;
';


ALTER FUNCTION mir.lpudogovor_autosave_no_lic(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character, addresshomep character, addresskorpp character, addressapartp character, telregp character varying, telsprp character varying, glavvrachp character varying, loginadminp character varying, passwordp character varying, emailp character varying, teladminp character varying, ipp character varying, datedogovorp date, numdogovorp character varying, ismoderatep numeric, statusp numeric, regionlpup character, lastnamep character varying, nameadp character varying, middlenamep character varying, dateadminp date) OWNER TO postgres;

--
-- TOC entry 1844 (class 1255 OID 17197)
-- Dependencies: 5396 14
-- Name: lpudogovor_insert_moderate(character varying, date, character varying, character varying, character, character, character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, character varying, numeric, numeric, character, character varying, character varying, character varying, date, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_insert_moderate(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character DEFAULT ''::bpchar, addresshomep character DEFAULT ''::bpchar, addresskorpp character DEFAULT ''::bpchar, addressapartp character DEFAULT ''::bpchar, telregp character varying DEFAULT ''::character varying, telsprp character varying DEFAULT ''::character varying, glavvrachp character varying DEFAULT NULL::character varying, loginadminp character varying DEFAULT NULL::character varying, passwordp character varying DEFAULT NULL::character varying, emailp character varying DEFAULT ''::character varying, teladminp character varying DEFAULT ''::character varying, ipp character varying DEFAULT NULL::character varying, datedogovorp date DEFAULT NULL::date, numdogovorp character varying DEFAULT NULL::character varying, ismoderatep numeric DEFAULT NULL::numeric, statusp numeric DEFAULT NULL::numeric, regionlpup character DEFAULT NULL::bpchar, lastnamep character varying DEFAULT NULL::character varying, nameadp character varying DEFAULT NULL::character varying, middlenamep character varying DEFAULT NULL::character varying, dateadminp date DEFAULT NULL::date, profilep character DEFAULT ''::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  NOID       char(36);
begin
  NOID  := LOWER(MIR.NEW_UUID());

  INSERT INTO MIR.LPUDOGOVOR
    (OID,
     NUMLICENSE,
     DATELICENSE,
     FULLNAMELPU,
     SHORTNAMELPU,
     ADDRESSOID,
     ADDRESSHOME,
     ADDRESSKORP,
     ADDRESSAPART,
     TELREG,
     TELSPR,
     GLAVVRACH,
     LOGINADMIN,
     PASSWORDADMIN,
     EMAILADMIN,
     TELADMIN,
     IP,
     DATEDOGOVOR,
     NUMDOGOVOR,
     ISMODERATE,
     STATUS,
     REGION,
     LASTNAMEADMIN,
     NAMEADMIN,
     MIDDLENAMEADMIN,
     DATEADMIN,
     PROFILE)
  VALUES
    (NOID,
     NUMLICENSEp,
     DATELICENSEp,
     FULLNAMELPUp,
     SHORTNAMELPUp,
     ADDRESSOIDp,
     ADDRESSHOMEp,
     ADDRESSKORPp,
     ADDRESSAPARTp,
     TELREGp,
     TELSPRp,
     GLAVVRACHp,
     LOGINADMINp,
     PASSWORDp,
     EMAILp,
     TELADMINp,
     IPp,
     DATEDOGOVORp,
     NUMDOGOVORp,
     ISMODERATEp,
     STATUSp,
     REGIONLPUp,
     lastnamep,
     nameadp,
     middlenamep,
     DATEADMINP, 
     profilep);

end;
';


ALTER FUNCTION mir.lpudogovor_insert_moderate(numlicensep character varying, datelicensep date, fullnamelpup character varying, shortnamelpup character varying, addressoidp character, addresshomep character, addresskorpp character, addressapartp character, telregp character varying, telsprp character varying, glavvrachp character varying, loginadminp character varying, passwordp character varying, emailp character varying, teladminp character varying, ipp character varying, datedogovorp date, numdogovorp character varying, ismoderatep numeric, statusp numeric, regionlpup character, lastnamep character varying, nameadp character varying, middlenamep character varying, dateadminp date, profilep character) OWNER TO postgres;

--
-- TOC entry 1845 (class 1255 OID 17198)
-- Dependencies: 5396 14
-- Name: lpudogovor_moderate_no(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_moderate_no(oidd character, statusd numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  UPDATE MIR.LPUDOGOVOR
     SET ISMODERATE = 1, STATUS = STATUSD
   WHERE OID = OIDD;
end;

';


ALTER FUNCTION mir.lpudogovor_moderate_no(oidd character, statusd numeric) OWNER TO postgres;

--
-- TOC entry 1846 (class 1255 OID 17199)
-- Dependencies: 5396 14
-- Name: lpudogovor_moderate_yes(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_moderate_yes(oidd character, statusd numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  LOID          CHAR(36);
  ROID          CHAR(36);
  SOID          char(36);
  OTOID         CHAR(36);
  VUSERNAME     varchar(255);
  vAddressEx    mir.addressex.oid%type;
  NUMLICENSEp   MIR.LPUDOGOVOR.NUMLICENSE%TYPE;
  DATELICENSEp  MIR.LPUDOGOVOR.DATELICENSE%TYPE;
  FULLNAMELPUp  MIR.LPUDOGOVOR.FULLNAMELPU%TYPE;
  SHORTNAMELPUp MIR.LPUDOGOVOR.SHORTNAMELPU%TYPE;
  ADDRESSOIDp   MIR.LPUDOGOVOR.ADDRESSOID%TYPE;
  ADDRESSHOMEp  MIR.LPUDOGOVOR.ADDRESSHOME%TYPE;
  ADDRESSKORPp  MIR.LPUDOGOVOR.ADDRESSKORP%TYPE;
  ADDRESSAPARTp MIR.LPUDOGOVOR.ADDRESSAPART%TYPE;
  TELREGp       MIR.LPUDOGOVOR.TELREG%TYPE;
  TELSPRp       MIR.LPUDOGOVOR.TELSPR%TYPE;
  LOGINADMINp   MIR.LPUDOGOVOR.LOGINADMIN%TYPE;
  PASSWORDp     MIR.LPUDOGOVOR.PASSWORDADMIN%TYPE;
  EMAILp        MIR.LPUDOGOVOR.EMAILADMIN%TYPE;
  TELADMINp     MIR.LPUDOGOVOR.TELADMIN%TYPE;
  lastnamep     mir.lpudogovor.lastnameadmin%type;
  nameadp       mir.lpudogovor.nameadmin%type;
  middlenamep   mir.lpudogovor.middlenameadmin%type;
  DATEADMINP    MIR.LPUDOGOVOR.DATEADMIN%TYPE;
  COUNTSOTR     integer;
  CP            record;
begin

  LOID  := LOWER(MIR.NEW_UUID());
  SOID  := LOWER(MIR.NEW_UUID());
  OTOID := LOWER(MIR.NEW_UUID());
  SELECT L.REGION,
         L.ADDRESSOID,
         L.ADDRESSHOME,
         L.ADDRESSKORP,
         L.ADDRESSAPART,
         L.FULLNAMELPU,
         L.SHORTNAMELPU,
         L.TELREG,
         L.TELSPR,
         L.NUMLICENSE,
         L.DATELICENSE,
         L.EMAILADMIN,
         L.TELADMIN,
         L.PASSWORDADMIN,
         L.LOGINADMIN,
         L.NAMEADMIN,
         L.LASTNAMEADMIN,
         L.MIDDLENAMEADMIN,
         L.DATEADMIN
    INTO ROID,
         ADDRESSOIDp,
         ADDRESSHOMEp,
         ADDRESSKORPp,
         ADDRESSAPARTp,
         FULLNAMELPUp,
         SHORTNAMELPUp,
         TELREGp,
         TELSPRp,
         NUMLICENSEp,
         DATELICENSEp,
         EMAILp,
         TELADMINp,
         PASSWORDp,
         LOGINADMINp,
         nameadp,
         lastnamep,
         middlenamep,
         DATEADMINP
    FROM MIR.LPUDOGOVOR L
   WHERE L.OID = OIDD;
   
  UPDATE MIR.LPUDOGOVOR
     SET ISMODERATE = 1, STATUS = STATUSD
   WHERE OID = OIDD;

SELECT COUNT(S.OID) INTO COUNTSOTR FROM MIR.LPU L LEFT JOIN MIR.OTDEL O ON O.LPU=L.OID
LEFT JOIN MIR.SOTR S ON S.OTDEL=O.OID left join mir.company cm on cm.oid=l.oid
WHERE UPPER(L.LICENSE)=UPPER(NUMLICENSEp) and cm.region=ROID;

IF (COUNTSOTR = 0)then
begin
  SELECT L.OID INTO LOID FROM MIR.LPU L left join mir.company cm on cm.oid=l.oid
WHERE UPPER(L.LICENSE)=UPPER(NUMLICENSEp) and cm.region=ROID;
end; ELSE begin


update MIR.LPUDOGOVOR L
set L.lpu=LOID
where l.oid=OIDD;

  insert into mir.company
    (OID, region)
  values
    (LOID, ROID);

  insert into mir.lpu (OID) values (LOID);
end; end if;
  vAddressEx := lower(MIR.NEW_UUID());

  insert into mir.AddressEx
    (OID, House, Building, Flat, Tkladr)
  values
    (vAddressEx, ADDRESSHOMEp, ADDRESSKORPp, ADDRESSAPARTp, ADDRESSOIDp);

  update mir.company
     set fullname   = FULLNAMELPUp,
         shortname  = SHORTNAMELPUp,
         phone      = '''',
         fax        = '''',
         okonh      = '''',
         okpo       = '''',
         inn        = '''',
         ogrn       = '''',
         address    = vAddressEx,
         home       = ADDRESSHOMEp,
         kpp        = '''',
         raschschet = '''',
         bank       = '''',
         bik        = '''',
         korschet   = ''''
   where oid = LOID;

  update mir.lpu 
     set transport    = '''',
         telreg       = TELREGp,
         telspr       = TELSPRp,
         is_kvota     = ''0'',
         SHOW_IN_SITE = 1,
         LICENSE      = NUMLICENSEp,
         DATELICENSE  = DATELICENSEp,
         lpu_work_dogovor=1
   where oid = LOID;

  insert into mir.people
    (oid, lpu, email, telsot1, region, FIRSTNAME, LASTNAME, MIDDLENAME, BIRTHDAY)
  values
    (SOID, LOID, EMAILp, TELADMINp, ROID, nameadp, lastnamep, middlenamep, DATEADMINP);

  insert into mir.sysuser
    (oid, storedpassword, username, isactive, isadministrator)
  values
    (SOID, PASSWORDp, UPPER(LOGINADMINp), 1, 1);

  INSERT INTO MIR.SYSUSER_REGION
    (OID, SYSUSER, REGION)
  VALUES
    (MIR.NEW_UUID(), SOID, ROID);

  insert into mir.sysuserusers_sysroleroles
    (roles, users, oid)
  values
    ((SELECT R.OID
       FROM MIR.ROLEBASE R
      WHERE UPPER(R.NAME) LIKE UPPER(''%Администратор ЛПУ%'')),
     soid,
     lower(mir.new_uuid()));


   FOR CP IN (select oid_role from mir.rolesdemo
                        ) LOOP
        begin

         insert into mir.sysuserusers_sysroleroles
                    (roles, users, oid)
                          values
                                (CP.Oid_Role,
                                           soid,
                lower(mir.new_uuid()));

        end;
      end loop;

    PASSWORDp := SUBSTR(PASSWORDp, 0, 30);
  VUSERNAME:=Upper(''z'' || LOGINADMINp);
  
perform mir.douser(VUSERNAME,PASSWORDp);
    
  INSERT INTO MIR.OTDEL (OID, LPU, NAME) VALUES (OTOID, LOID, ''Регистратура'');

  INSERT INTO MIR.SOTR
    (OID, SYSUSER, OTDEL, POST)
  VALUES
    (MIR.NEW_UUID(),
     SOID,
     OTOID,
     (SELECT P.OID
        FROM MIR.POST P
       WHERE UPPER(P.NAME) LIKE UPPER(''%РЕГИСТРАТОР%'')));

end;

';


ALTER FUNCTION mir.lpudogovor_moderate_yes(oidd character, statusd numeric) OWNER TO postgres;

--
-- TOC entry 1814 (class 1255 OID 17201)
-- Dependencies: 5396 14
-- Name: lpudogovor_profile_insert(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION lpudogovor_profile_insert(lpudogovor character, profile character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  NOID char(36);
BEGIN
NOID := lower(MIR.new_uuid());

insert into mir.lpudorovor_profile
(OID, 
LPUDOGOVORID, 
PROFILELPUID)
VALUES
(NOID, 
LPUDOGOVOR, 
PROFILE);
END;
';


ALTER FUNCTION mir.lpudogovor_profile_insert(lpudogovor character, profile character) OWNER TO postgres;

--
-- TOC entry 1847 (class 1255 OID 17202)
-- Dependencies: 5396 14
-- Name: mdoc_after_insert(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_after_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  marker_otdel VARCHAR;
  v_num integer;
  mdoclastnumber record;
BEGIN
-- узнаем отдел по настройкам счетчика
	WITH RECURSIVE q AS 
        (
              select 
                     o.oid,
                     o.name,
                     o.parent,
                     case when
                         COALESCE(omn.mdoc_number_type, 0) > 0
                          then true
                          else false end as mine_start_on,
                     CAST(o.oid as VARCHAR) as path
                from mir.otdel o
                left join mir.otdel_mdoc_number omn on omn.otdel = o.oid
               where o.oid = NEW.otdel

               union all

              select 
                     o.oid,
                     o.name,
                     o.parent,
                     case when
                         COALESCE(omn.mdoc_number_type, 0) > 0
                          then true
                          else false end as mine_start_on,
                     q.path || ''->'' || o.oid as path
                from mir.otdel o
               inner join q
                  on o.oid = q.parent
                left join mir.otdel_mdoc_number omn 
                  on omn.otdel = o.oid
        )
        select 
        	CASE WHEN (select count(*) from q where q.mine_start_on is true)>0
        then 
        	(select q.oid from q where q.mine_start_on is true order by q.path DESC LIMIT 1)
        else 
        	(select q.oid from q where q.parent is null order by q.path DESC LIMIT 1)
        end into marker_otdel;
        
        SELECT * into mdoclastnumber 
        FROM mir.mdoc_last_number mdln 
        WHERE mdln.otdel = marker_otdel 
        AND mdln.mdoc_type = NEW.mdoc_type_id 
        AND CAST(to_char(CURRENT_DATE, ''yyyy'') as integer) = mdln."year";

if mdoclastnumber is null 
then 
	insert into mir.mdoc_last_number VALUES (mir.guid_generate(), marker_otdel, NEW.mdoc_type_id, CAST(to_char(CURRENT_DATE, ''yyyy'') as integer), 1);
    v_num := 1;
ELSE
	v_num := mdoclastnumber.num + 1;
    UPDATE mir.mdoc_last_number SET num = v_num WHERE oid = mdoclastnumber.oid;
END IF;

/*
 select COALESCE(t.num, 0)+1 into v_num
from(
select max(m.num) num from mir.mdoc_number m
left join mir.mdoc mm on mm.id=m.mdoc_id
left join mir.lpu o on o.oid=mm.lpu
where m.mdoc_type_id=new.mdoc_type_id
and m."year"=CAST(to_char(CURRENT_DATE, ''yyyy'') as integer)
and o.oid=NEW.lpu
) t;
*/
insert into mir.mdoc_number (mdoc_id, num, "year", date_generate, mdoc_type_id)
VALUES(new.id, v_num, CAST(to_char(CURRENT_DATE, ''yyyy'') as integer), now(), new.mdoc_type_id);
return new;
END;
';


ALTER FUNCTION mir.mdoc_after_insert() OWNER TO postgres;

--
-- TOC entry 1848 (class 1255 OID 17203)
-- Dependencies: 5396 14
-- Name: mdoc_generate_barcode(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_generate_barcode() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_code numeric;
BEGIN
  select COALESCE((
select max(code) from mir.mdoc_barcode), 0) into v_code;
v_code := v_code + 1;
insert into mir.mdoc_barcode(mdoc, code)
values (new.id, v_code);
return new;
END;
';


ALTER FUNCTION mir.mdoc_generate_barcode() OWNER TO postgres;

--
-- TOC entry 1849 (class 1255 OID 17204)
-- Dependencies: 5396 14
-- Name: mdoc_get_lpu(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_get_lpu(pmdoc_id character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    v_lpu mir.otdel.lpu%type;
    c record;
  begin
    v_lpu := null;
    
    for c in (select o.lpu
                from mir.mdoc md
               inner join mir.otdel o
                  on o.oid = md.otdel
               where md.id = pmdoc_id
             )
    loop
      v_lpu := c.lpu;
    end loop;

    return v_lpu;  
  end;
  ';


ALTER FUNCTION mir.mdoc_get_lpu(pmdoc_id character) OWNER TO postgres;

--
-- TOC entry 1850 (class 1255 OID 17205)
-- Dependencies: 5396 14
-- Name: mdoc_get_num(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_get_num(pmdoc_id character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    v_num  integer;
    v_year  integer;
    c record;
  begin
    v_num := null;
    v_year := null;

    for c in (select mdn.num as num_doc,
                     mdn."year" as year_doc,
                     1 as ord
                from mir.mdoc_number mdn
               where mdn.mdoc_id = pmdoc_id
              
               union
              
              select dob.num_doc,
                     dob.year_doc,
                     2 as ord
                from hosp.peresel prs
               inner join mir.docobsl dob
                  on dob.oid = prs.docobsl_id
               where prs.oid = hosp.peresel_get_max_peresel_id(pmdoc_id)
              
               union
               
              select dob.num_doc,
                     dob.year_doc,
                     3 as ord
                from mir.mdoc md
               inner join mir.docobsl dob
                  on dob.oid = md.docobsl_id
               where md.id = pmdoc_id
               order by ord desc
               limit 1
             )
    loop
      v_num := c.num_doc;
      v_year := c.year_doc;
    end loop;
    
    if ( v_num is null ) or ( v_year is null ) then
      return '''';
    else
      return cast( v_num as varchar ) || ''/'' || cast( v_year as varchar );
    end if;    
  end;
  ';


ALTER FUNCTION mir.mdoc_get_num(pmdoc_id character) OWNER TO postgres;

--
-- TOC entry 1851 (class 1255 OID 17206)
-- Dependencies: 5396 14
-- Name: mdoc_insert_mdoc(character, character, date, date, character varying, character varying, integer, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_insert_mdoc(ppeople_id character, pmdoc_type_id character, pbeginm date, pendm date, pnum character varying, pyear character varying, ppdoc_id integer, pstatus integer DEFAULT 0, potdel character DEFAULT NULL::bpchar) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    v_res mir.mdoc.id%type;
  begin
    insert into mir.mdoc
      (id,  people_id, mdoc_type_id, beginm, endm, num, pdoc_id, status, year, otdel)
    values
      (mir.new_uuid(), ppeople_id, pmdoc_type_id, pbeginm, pendm, pnum, ppdoc_id, pstatus,pyear, potdel)
    returning id into v_res;
    return v_res;
  end;
';


ALTER FUNCTION mir.mdoc_insert_mdoc(ppeople_id character, pmdoc_type_id character, pbeginm date, pendm date, pnum character varying, pyear character varying, ppdoc_id integer, pstatus integer, potdel character) OWNER TO postgres;

--
-- TOC entry 1852 (class 1255 OID 17207)
-- Dependencies: 5396 14
-- Name: mdoc_mdoc_set(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_mdoc_set(pmdoc character, pmdoc_parent character, ppeople_relation_status character) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    res_oid mir.mdoc_mdoc.oid%type;
    c record;
  begin
    res_oid := null;
    
    for c in (  select t.oid
                  from mir.mdoc_mdoc t
                 where t.mdoc = pmdoc
                   and t.mdoc_parent = pmdoc_parent
             )
    loop
      res_oid := c.oid;
    end loop;
  
    if res_oid is not null then
        update mir.mdoc_mdoc t
           set people_relation_status = ppeople_relation_status
         where t.oid = res_oid;
    else
      insert into mir.mdoc_mdoc ( oid, mdoc, mdoc_parent, people_relation_status )
      values ( mir.guid_generate(), pmdoc, pmdoc_parent, ppeople_relation_status )
      returning oid into res_oid;
    end if;
    
    return res_oid;
  end;
';


ALTER FUNCTION mir.mdoc_mdoc_set(pmdoc character, pmdoc_parent character, ppeople_relation_status character) OWNER TO postgres;

--
-- TOC entry 1853 (class 1255 OID 17208)
-- Dependencies: 5396 14
-- Name: mdoc_type_ambul_list(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_type_ambul_list() RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
DECLARE
  r record;
BEGIN
  for r in ( select mdt.id 
               from mir.mdoc_type mdt 
              where mdt.synonim like ''AMBUL_%'' ) 
  loop
    return next r.id;
  end loop; 
END;
';


ALTER FUNCTION mir.mdoc_type_ambul_list() OWNER TO postgres;

--
-- TOC entry 1854 (class 1255 OID 17209)
-- Dependencies: 5396 14
-- Name: mdoc_type_stac_list(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mdoc_type_stac_list() RETURNS SETOF character
    LANGUAGE plpgsql
    AS '
DECLARE
  r record;
BEGIN
  for r in ( select mdt.id 
               from mir.mdoc_type mdt 
              where mdt.synonim like ''STAC_IB%'' ) 
  loop
    return next r.id;
  end loop; 
END;
';


ALTER FUNCTION mir.mdoc_type_stac_list() OWNER TO postgres;

--
-- TOC entry 1855 (class 1255 OID 17210)
-- Dependencies: 5396 14
-- Name: medotradehash(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION medotradehash(i_user character varying, i_pass character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_tmp  VARCHAR(132);
  v_tmp1 VARCHAR(132);
  v_tmp2 VARCHAR(100);
  v_i    integer;
BEGIN
  /*v_tmp  := ''"'' || i_USER || ''"'' || i_PASS;
  v_tmp1 := RAWTOHEX(DBMS_OBFUSCATION_TOOLKIT.Md5(Input => UTL_RAW.Cast_To_Raw(v_tmp)));

  for v_I in 1 .. Length(v_tmp1) loop
    v_tmp2 := v_tmp2 ||
              UTL_RAW.CAST_TO_VARCHAR2(UTL_RAW.BIT_XOR(UTL_RAW.Cast_To_Raw(SUBSTR(v_tmp1,
                                                                                  v_I,
                                                                                  1)),
                                                       UTL_RAW.Cast_To_Raw(CHR(255))));
  end loop;

  v_tmp2 := RAWTOHEX(DBMS_OBFUSCATION_TOOLKIT.Md5(Input => UTL_RAW.Cast_To_Raw(v_tmp2)));
  v_tmp2 := SUBSTR(v_tmp2, 1, 30);*/

  RETURN v_tmp2;
END;

';


ALTER FUNCTION mir.medotradehash(i_user character varying, i_pass character varying) OWNER TO postgres;

--
-- TOC entry 1857 (class 1255 OID 17211)
-- Dependencies: 5396 14
-- Name: migration_script_generate(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION migration_script_generate(psql_get_oid character varying, ptable_name character varying, ptable_schema character varying DEFAULT 'mir'::character varying, ptable_oid_name character varying DEFAULT 'oid'::character varying) RETURNS character varying
    LANGUAGE plpgsql IMMUTABLE
    AS '
DECLARE 
    sql varchar;
    sql_cols varchar;
    sql_values varchar;
    record_exists integer;
    c_cols record;
    c_oids record;
    c_one_value record;
BEGIN
  sql := ''do language plpgsql 
  $$
  DECLARE 
    record_exists integer; 
  BEGIN'';
  FOR c_oids IN execute psql_get_oid --''select id as oid from mir.mdoc_type'' 
  loop
    sql_cols := '''';
    sql_values := '''';

    for c_cols in (SELECT c.column_name,
                          c.data_type
                FROM information_schema.tables t
               inner JOIN information_schema.columns c 
                  ON t.table_name = c.table_name
               WHERE t.table_schema = ptable_schema
                 and t.table_name= ptable_name 
                 and t.table_type=''BASE TABLE'' )
    loop
      if (sql_cols = '''') then
        sql_cols := sql_cols || ''"'' || c_cols.column_name || ''"''; 
      else
        sql_cols := sql_cols || '',"'' || c_cols.column_name || ''"''; 
      end if;
      
      FOR c_one_value IN execute ''select cast(''||c_cols.column_name||'' as varchar) as val from ''||ptable_schema||''.''||ptable_name||'' where ''||ptable_oid_name||'' = ''''''|| c_oids.oid ||'''''''' 
      loop
        if c_one_value.val is not null then
        
          if c_cols.data_type in ( ''character'', ''character varying'', ''text'', ''time without time zone'', ''timestamp without time zone'', ''date'') then
            if (sql_values = '''') then
              sql_values := sql_values || '''''''' || COALESCE(c_one_value.val, '''') || '''''''';
            else
              sql_values := sql_values || '','''''' || COALESCE(c_one_value.val, '''') || ''''''''; 
            end if;            
          end if;
          
          if c_cols.data_type in ( ''integer'', ''numeric'', ''real'', ''smallint'', ''double precision'', ''bigint'', ''boolean'' ) then
            if (sql_values = '''') then
              sql_values := sql_values || '''' || COALESCE(c_one_value.val, ''null'') || '''';
            else
              sql_values := sql_values || '','' || COALESCE(c_one_value.val, ''null'') || ''''; 
            end if;            
          end if;
        else
          if (sql_values = '''') then
            sql_values := sql_values || ''null'';
          else
            sql_values := sql_values || '',null''; 
          end if;
        end if;
      end loop;
    end loop;
    
    sql := sql ||''
    select count(1) INTO record_exists from ''||ptable_schema||''.''||ptable_name||'' where ''||ptable_oid_name||'' = ''''''||c_oids.oid||'''''' limit 1;
    IF record_exists < 1 THEN 
      insert into ''||ptable_schema||''.''||ptable_name||'' (''|| sql_cols || '')''||'' 
      values(''|| sql_values ||'');
    END IF;'';
  
  end loop;
  
  sql := sql ||''
  END;
  $$;'';
  
  RETURN sql;
END;
';


ALTER FUNCTION mir.migration_script_generate(psql_get_oid character varying, ptable_name character varying, ptable_schema character varying, ptable_oid_name character varying) OWNER TO postgres;

--
-- TOC entry 1858 (class 1255 OID 17212)
-- Dependencies: 5396 14
-- Name: mkb_10_get_code(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mkb_10_get_code(pmkbid character) RETURNS character
    LANGUAGE plpgsql
    AS '
  begin
  	-- Функция возвращает название mkb10 по коду
    return coalesce( ( select mkb.code
                         from mir.mkb_10 mkb
                        where mkb.oid = pmkbid ), '''');
  end;
';


ALTER FUNCTION mir.mkb_10_get_code(pmkbid character) OWNER TO postgres;

--
-- TOC entry 1859 (class 1255 OID 17213)
-- Dependencies: 5396 14
-- Name: mkb_10_get_name(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION mkb_10_get_name(pmkbid character) RETURNS character
    LANGUAGE plpgsql
    AS '
  begin
  	-- Функция возвращает название mkb10 по коду
    return coalesce( ( select mkb.name
                         from mir.mkb_10 mkb
                        where mkb.oid = pmkbid ), '''');
  end;
';


ALTER FUNCTION mir.mkb_10_get_name(pmkbid character) OWNER TO postgres;

--
-- TOC entry 1860 (class 1255 OID 17214)
-- Dependencies: 5396 14
-- Name: money_to_words(numeric, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION money_to_words(asource numeric, arod integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  result VARCHAR(500);
BEGIN
  if TRUNC(aSource) = aSource then
    result := '' 00 копеек'';
  else
    result := ''копеек'';
  end if;
  
  result := mir.float_number_to_words(round(aSource,2), aRod, ''рубль'', ''рубля'', ''рублей'', 0) || result;

  return result;
END;
';


ALTER FUNCTION mir.money_to_words(asource numeric, arod integer) OWNER TO postgres;

--
-- TOC entry 1861 (class 1255 OID 17215)
-- Dependencies: 5396 14
-- Name: new_uuid(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION new_uuid() RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  RETURN(CAST( public.uuid_generate_v1() as varchar(36)));
END;
';


ALTER FUNCTION mir.new_uuid() OWNER TO postgres;

--
-- TOC entry 1862 (class 1255 OID 17216)
-- Dependencies: 14
-- Name: next_date(date, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION next_date(the_date date, dow integer) RETURNS date
    LANGUAGE sql
    AS '
select
    case when extract(dow from $1) >= $2 then
        $1 + 7 - (( extract(dow from $1) - $2) )::int
    else
        $1 - ( extract(dow from $1) - $2)::int
    end;

';


ALTER FUNCTION mir.next_date(the_date date, dow integer) OWNER TO postgres;

--
-- TOC entry 1863 (class 1255 OID 17217)
-- Dependencies: 5396 14
-- Name: num_spelled(numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION num_spelled("tnInNmb" numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
	tnInNmb			ALIAS FOR $1 ;
    
    result			VARCHAR ;
BEGIN
   -- k - копейки
  result := ltrim(to_char(tnInNmb, ''9,9,,9,,,,,,9,9,,9,,,,,9,9,,9,,,,9,9,,9,,,.99'')) || ''k'';
  -- t - тысячи; m - милионы; M - миллиарды;
  result := replace( result, '',,,,,,'', ''eM'');
  result := replace( result, '',,,,,'', ''em'');
  result := replace( result, '',,,,'', ''et'');
  -- e - единицы; d - десятки; c - сотни;
  result := replace( result, '',,,'', ''e'');
  result := replace( result, '',,'', ''d'');
  result := replace( result, '','', ''c'');
  --
  result := replace( result, ''0c0d0et'', '''');
  result := replace( result, ''0c0d0em'', '''');
  result := replace( result, ''0c0d0eM'', '''');
  --
  result := replace( result, ''0c'', '''');
  result := replace( result, ''1c'', ''сто '');
  result := replace( result, ''2c'', ''двести '');
  result := replace( result, ''3c'', ''триста '');
  result := replace( result, ''4c'', ''четыреста '');
  result := replace( result, ''5c'', ''пятьсот '');
  result := replace( result, ''6c'', ''шестьсот '');
  result := replace( result, ''7c'', ''семьсот '');
  result := replace( result, ''8c'', ''восемьсот '');
  result := replace( result, ''9c'', ''девятьсот '');
  --
  result := replace( result, ''1d0e'', ''десять '');
  result := replace( result, ''1d1e'', ''одиннадцать '');
  result := replace( result, ''1d2e'', ''двенадцать '');
  result := replace( result, ''1d3e'', ''тринадцать '');
  result := replace( result, ''1d4e'', ''четырнадцать '');
  result := replace( result, ''1d5e'', ''пятнадцать '');
  result := replace( result, ''1d6e'', ''шестнадцать '');
  result := replace( result, ''1d7e'', ''семьнадцать '');
  result := replace( result, ''1d8e'', ''восемнадцать '');
  result := replace( result, ''1d9e'', ''девятнадцать '');
  --
  result := replace( result, ''0d'', '''');
  result := replace( result, ''2d'', ''двадцать '');
  result := replace( result, ''3d'', ''тридцать '');
  result := replace( result, ''4d'', ''сорок '');
  result := replace( result, ''5d'', ''пятьдесят '');
  result := replace( result, ''6d'', ''шестьдесят '');
  result := replace( result, ''7d'', ''семьдесят '');
  result := replace( result, ''8d'', ''восемьдесят '');
  result := replace( result, ''9d'', ''девяносто '');
  --
  result := replace( result, ''0e'', '''');
  result := replace( result, ''5e'', ''пять '');
  result := replace( result, ''6e'', ''шесть '');
  result := replace( result, ''7e'', ''семь '');
  result := replace( result, ''8e'', ''восемь '');
  result := replace( result, ''9e'', ''девять '');
  --
  result := replace( result, ''1e.'', ''один рубль '');
  result := replace( result, ''2e.'', ''два рубля '');
  result := replace( result, ''3e.'', ''три рубля '');
  result := replace( result, ''4e.'', ''четыре рубля '');
  result := replace( result, ''1et'', ''одна тысяча '');
  result := replace( result, ''2et'', ''две тысячи '');
  result := replace( result, ''3et'', ''три тысячи '');
  result := replace( result, ''4et'', ''четыре тысячи '');
  result := replace( result, ''1em'', ''один миллион '');
  result := replace( result, ''2em'', ''два миллиона '');
  result := replace( result, ''3em'', ''три миллиона '');
  result := replace( result, ''4em'', ''четыре миллиона '');
  result := replace( result, ''1eM'', ''один милиард '');
  result := replace( result, ''2eM'', ''два милиарда '');
  result := replace( result, ''3eM'', ''три милиарда '');
  result := replace( result, ''4eM'', ''четыре милиарда '');
  --
  result := replace( result, ''11k'', ''11 копеек'');
  result := replace( result, ''12k'', ''12 копеек'');
  result := replace( result, ''13k'', ''13 копеек'');
  result := replace( result, ''14k'', ''14 копеек'');
  result := replace( result, ''1k'', ''1 копейка'');
  result := replace( result, ''2k'', ''2 копейки'');
  result := replace( result, ''3k'', ''3 копейки'');
  result := replace( result, ''4k'', ''4 копейки'');
  --

  if not (substr(result,1,1)=''.'') then
  result := replace( result, ''.'', '' рублeй '');
  else
  result := replace( result, ''.'', ''ноль рублeй '');
  end if;
  result := replace( result, ''t'', ''тысяч '');
  result := replace( result, ''m'', ''миллионов '');
  result := replace( result, ''M'', ''милиардов '');
  result := replace( result, ''k'', '' копeeк'');
  --
  RETURN(result);
END;
';


ALTER FUNCTION mir.num_spelled("tnInNmb" numeric) OWNER TO postgres;

--
-- TOC entry 1864 (class 1255 OID 17218)
-- Dependencies: 5396 14
-- Name: nvl(anyelement, anyelement); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION nvl(pvalue anyelement, pdefault anyelement) RETURNS anyelement
    LANGUAGE plpgsql
    AS '
BEGIN
 if pvalue is null then
 RETURN pdefault;
 else
 RETURN pvalue;
 end if;
END;
';


ALTER FUNCTION mir.nvl(pvalue anyelement, pdefault anyelement) OWNER TO postgres;

--
-- TOC entry 1865 (class 1255 OID 17219)
-- Dependencies: 5396 14
-- Name: oid_generate_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oid_generate_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
	if new.oid is null then 
	 new.oid = (SELECT * FROM mir.guid_generate());
	end if;
  RETURN NEW;  
END;
';


ALTER FUNCTION mir.oid_generate_tr() OWNER TO postgres;

--
-- TOC entry 1866 (class 1255 OID 17220)
-- Dependencies: 5396 14
-- Name: oper_plan_add_diag(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oper_plan_add_diag(poper_plan character, pdiag character, psotr character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.oper_plan_diag t
                 where t.oper_plan = poper_plan
                   and t.diag = pdiag ) then
      update mir.oper_plan_diag
         set sotr = psotr
       where oper_plan = poper_plan
         and diag = pdiag;
    else
      insert into mir.oper_plan_diag ( oid, oper_plan, diag, sotr, create_date )
      values ( mir.guid_generate(), poper_plan, pdiag, psotr, CURRENT_TIMESTAMP );
    end if;
  end;
  ';


ALTER FUNCTION mir.oper_plan_add_diag(poper_plan character, pdiag character, psotr character) OWNER TO postgres;

--
-- TOC entry 1867 (class 1255 OID 17221)
-- Dependencies: 5396 14
-- Name: oper_plan_add_mdoc(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oper_plan_add_mdoc(plpu character, pmdoc character, pdate_on date) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.oper_plan t
                 where t.lpu = plpu
                   and t.mdoc = pmdoc
                   and t.date_on = pdate_on ) then
    else
      insert into mir.oper_plan ( oid, lpu, mdoc, date_on )
      values ( mir.guid_generate(), plpu, pmdoc, pdate_on );
    end if;
  end;
  ';


ALTER FUNCTION mir.oper_plan_add_mdoc(plpu character, pmdoc character, pdate_on date) OWNER TO postgres;

--
-- TOC entry 1868 (class 1255 OID 17222)
-- Dependencies: 5396 14
-- Name: oper_plan_add_sotr(character, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oper_plan_add_sotr(poper_plan character, psotr character, psotr_syn character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.oper_plan_sotr t
                 where t.oper_plan = poper_plan
                   and t.sotr = psotr
                   and t.sotr_syn = psotr_syn ) then
    else
      insert into mir.oper_plan_sotr ( oid, oper_plan, sotr, sotr_syn )
      values ( mir.guid_generate(), poper_plan, psotr, psotr_syn );
    end if;
  end;
  ';


ALTER FUNCTION mir.oper_plan_add_sotr(poper_plan character, psotr character, psotr_syn character varying) OWNER TO postgres;

--
-- TOC entry 1869 (class 1255 OID 17223)
-- Dependencies: 5396 14
-- Name: oper_plan_del_diag(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oper_plan_del_diag(poper_plan character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    delete 
      from mir.oper_plan_diag t
     where t.oper_plan = poper_plan;
  end;
  ';


ALTER FUNCTION mir.oper_plan_del_diag(poper_plan character) OWNER TO postgres;

--
-- TOC entry 1834 (class 1255 OID 17224)
-- Dependencies: 5396 14
-- Name: oper_plan_del_sotr(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION oper_plan_del_sotr(poper_plan character, psotr_syn character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
 begin
 delete 
 from mir.oper_plan_sotr t
 where t.oper_plan = poper_plan
 and t.sotr_syn = psotr_syn;
 end;
 ';


ALTER FUNCTION mir.oper_plan_del_sotr(poper_plan character, psotr_syn character varying) OWNER TO postgres;

--
-- TOC entry 1870 (class 1255 OID 17225)
-- Dependencies: 5396 14
-- Name: otdel_mdoc_number_set_marks(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION otdel_mdoc_number_set_marks(marks character varying, plpu character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
  marksArray VARCHAR[];
  otdel1 VARCHAR;
  num NUMERIC;
BEGIN
marksArray := string_to_array(marks, '','');
num :=0;
  for otdel1 in select o.oid from mir.otdel o where o.lpu = plpu
  LOOP
  	IF otdel1 = ANY (marksArray) THEN
    	if (SELECT count(1) FROM mir.otdel_mdoc_number omn where omn.otdel = otdel1) > 0 THEN
        	UPDATE mir.otdel_mdoc_number SET mdoc_number_type = 1 WHERE otdel = otdel1;
        ELSE
        	INSERT INTO mir.otdel_mdoc_number VALUES (mir.guid_generate(), otdel1, 1);
        END IF;
    ELSE
    	if (SELECT count(1) FROM mir.otdel_mdoc_number omn where omn.otdel = otdel1) > 0 THEN
        	UPDATE mir.otdel_mdoc_number SET mdoc_number_type = 0 WHERE otdel = otdel1;
        ELSE
        	INSERT INTO mir.otdel_mdoc_number VALUES (mir.guid_generate(), otdel1, 0);
        END IF;
    END IF;
    num := num + 1;
  END LOOP;
  RETURN num;
END;
';


ALTER FUNCTION mir.otdel_mdoc_number_set_marks(marks character varying, plpu character varying) OWNER TO postgres;

--
-- TOC entry 1871 (class 1255 OID 17226)
-- Dependencies: 5396 14
-- Name: otdel_mdoctype_tr_obr_to_stac(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION otdel_mdoctype_tr_obr_to_stac() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN

    if new.mdoctype_id = ''88f67c00-f8af-11e1-a5f2-27dedb1e0610'' then 
     new.is_default = 1;
    end if;
 
  RETURN NEW;  
END;
';


ALTER FUNCTION mir.otdel_mdoctype_tr_obr_to_stac() OWNER TO postgres;

--
-- TOC entry 1872 (class 1255 OID 17227)
-- Dependencies: 5396 14
-- Name: otdel_mdoctype_tr_upd_childs(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION otdel_mdoctype_tr_upd_childs() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  c1 record;
BEGIN
  if TG_OP = ''DELETE'' then 
    if exists(select 1
                from mir.otdel o
               where o.parent = old.otdel_id) then
      for c in (select o.oid 
                  from mir.otdel_mdoctype o
                 where o.mdoctype_id = old.mdoctype_id
                   and o.otdel_id in (
                        with recursive q as 
                        (
                          select o.oid,
                                 o.parent
                            from mir.otdel o
                           where o.parent = old.otdel_id
                           
                           union all
                           
                          select o.oid,
                                 o.parent
                            from mir.otdel o
                           inner join q
                              on o.parent = q.oid
                        )

                        select oid
                          from q
                      )
               )
      loop
        delete from mir.otdel_mdoctype omdt where omdt.oid = c.oid;
      end loop;
    end if;
  else
    if exists(select 1
                from mir.otdel o
               where o.parent = new.otdel_id) then
      for c1 in ( with recursive q as 
                        (
                          select o.oid,
                                 o.parent
                            from mir.otdel o
                           where o.parent = new.otdel_id
                           
                           union all
                           
                          select o.oid,
                                 o.parent
                            from mir.otdel o
                           inner join q
                              on o.parent = q.oid
                        )

                        select oid
                          from q
                )
      loop
        if exists( select 1
                     from mir.otdel_mdoctype omdt
                    where omdt.mdoctype_id = new.mdoctype_id
                      and omdt.otdel_id = c1.oid
                 ) then
          update mir.otdel_mdoctype omdt
             set bind = new.bind
           where omdt.mdoctype_id = new.mdoctype_id
             and omdt.otdel_id = c1.oid;
        else
          insert into mir.otdel_mdoctype( oid, mdoctype_id, otdel_id, bind)
          values ( mir.guid_generate(), new.mdoctype_id, c1.oid, new.bind );
        end if;
      end loop;
    end if;  
  end if;
 
  RETURN NEW;  
END;
';


ALTER FUNCTION mir.otdel_mdoctype_tr_upd_childs() OWNER TO postgres;

--
-- TOC entry 1873 (class 1255 OID 17228)
-- Dependencies: 5396 14
-- Name: pay_service_get_actual_cost_for_presc(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pay_service_get_actual_cost_for_presc(presc_id character) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
  paytype VARCHAR;
  price NUMERIC;
BEGIN
  SELECT mir.pay_service_get_actual_cost_for_presctype(sp.presctype,s.pay_type,md.people_id,p.create_dt::date, md.lpu) 
  	INTO price
  	FROM mir.presc_service ps
  	INNER JOIN mir.service_presctype sp on ps.service_presctype = sp.oid
    INNER JOIN mir.services s on sp.service = s.oid
    INNER JOIN mir.presc p on p.id = ps.presc
    INNER JOIN mir.mdoc md on p.mdoc_id = md.id
    WHERE ps.presc = presc_id
    LIMIT 1;
    
  RETURN COALESCE(price,0);  
    
	
END;
';


ALTER FUNCTION mir.pay_service_get_actual_cost_for_presc(presc_id character) OWNER TO postgres;

--
-- TOC entry 1874 (class 1255 OID 17229)
-- Dependencies: 5396 14
-- Name: pay_service_get_actual_cost_for_presctype(character varying, character varying, character varying, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pay_service_get_actual_cost_for_presctype(presctype_id character varying, pay_type character varying, people_id character varying, create_dt date, p_lpu character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE

  paytype VARCHAR;
  price  NUMERIC;
  pinsurpogram VARCHAR;
  p_price_category VARCHAR;
  birth DATE;

BEGIN
    IF pay_type IS NULL THEN
    	paytype = mir.get_pacient_paytype_for_payservice(people_id);
    ELSE
    	paytype = pay_type;
    END IF;
    
    create_dt = COALESCE(create_dt , CURRENT_DATE);
    
  -- определяем работу со страховой программой только для ОМС
  if paytype = mir.cn_paytype_oms() then
    SELECT lpu_insurprogram.insurprogram
    INTO pinsurpogram
    FROM mir.systemsettings systemsettings
         LEFT JOIN mir.lpusettings lpusettings ON lpusettings.settings = systemsettings.oid
         LEFT JOIN mir.lpu_insurprogram lpu_insurprogram ON lpu_insurprogram.lpu = lpusettings.lpu
    WHERE upper(param) = upper(''InsuranceProgramON'')
          AND lpusettings.custvaluepar = ''1''
          AND lpusettings.lpu = p_lpu;

    -- если insurprogram = null (нет настроек ценового профиля для ЛПУ), то price_category выключаем 
    if pinsurpogram is null then
      p_price_category = null;
    end if;
    ---
    else
    pinsurpogram= null;
    p_price_category = null;
  end if;
  ----------------------
  SELECT p.birthday INTO birth from mir.people p where p.oid = people_id;
  IF (select mir.get_age(birth)) > 18 THEN 
  	p_price_category = mir.cn_service_price_category_grown();
  ELSE 
  	p_price_category = mir.cn_service_price_category_child();
   END IF;
  
  
	
    
    
   
     SELECT SUM(COALESCE(spp.price,0)) INTO price FROM mir.service_presctype sp	
        INNER JOIN mir.services s on sp.service = s.oid and s.pay_type = paytype
        LEFT JOIN mir.service_price spp on s.oid = spp.services 
        LEFT JOIN mir.service_group service_group ON service_group.oid = s.service_group
    	and spp.fromdate <= create_dt and COALESCE(spp.todate,create_dt)>=create_dt
    	WHERE sp.presctype = presctype_id
        
        AND (CASE
               WHEN NOT p_price_category IS NULL AND service_group.show_insurprogram = 1 THEN spp.service_price_category = p_price_category
               ELSE spp.service_price_category IS NULL
             END)
        AND (CASE
               WHEN NOT pinsurpogram IS NULL AND service_group.show_insurprogram = 1 THEN spp.insurprogram = pinsurpogram
               ELSE spp.insurprogram IS NULL
             END);
       
     
    
    RETURN price;
END;
';


ALTER FUNCTION mir.pay_service_get_actual_cost_for_presctype(presctype_id character varying, pay_type character varying, people_id character varying, create_dt date, p_lpu character varying) OWNER TO postgres;

--
-- TOC entry 1875 (class 1255 OID 17230)
-- Dependencies: 5396 14
-- Name: people_bi_region_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_bi_region_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
declare
  v_region mir.vregion.oid%type;
begin
  if (new.region is null) then
    select max(r.region)
      into v_region
      from mir.sysuser_region r
     where r.sysuser = mir.getcurrentsysuser();
    new.region := v_region;
  end if;
return new;
end;

';


ALTER FUNCTION mir.people_bi_region_trg() OWNER TO postgres;

--
-- TOC entry 1876 (class 1255 OID 17231)
-- Dependencies: 5396 14
-- Name: people_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  NEW.DTCREATION:=CURRENT_TIMESTAMP;
return new;
END;

';


ALTER FUNCTION mir.people_bi_trg() OWNER TO postgres;

--
-- TOC entry 1877 (class 1255 OID 17232)
-- Dependencies: 5396 14
-- Name: people_biu_logphone_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_biu_logphone_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
/*
if ( nvl(old.telhome,'' '') <> nvl( new.telhome,'' '') ) then
    insert into mir.logphone
      (oid, datechange, userchange, telold, telnew,peopleoid)
    values
      (lower(mir.new_uuid()), CURRENT_TIMESTAMP,CURRENT_USER , OLD.telhome, new.telhome,new.oid);

 end if;

if ( nvl( OLD.telsot1,'' '') <> nvl( new.telsot1,'' '') ) then
    insert into mir.logphone
      (oid, datechange, userchange, telold, telnew,peopleoid)
    values
      (lower(mir.new_uuid()), CURRENT_TIMESTAMP,CURRENT_USER ,OLD.telsot1, new.telsot1,new.oid);
end if;
*/
return new;

END;

';


ALTER FUNCTION mir.people_biu_logphone_trg() OWNER TO postgres;

--
-- TOC entry 1878 (class 1255 OID 17233)
-- Dependencies: 5396 14
-- Name: people_get_benefit_type(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_benefit_type(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  sres varchar;
begin
    select bt.name into sres
      from mir.benefit b 
      left join mir.benefit_type bt 
        on b.benefit_type = bt.oid
     where b.people = poid
     order by b.date_begin desc 
     limit 1;
  
  return coalesce(sres, '''');
end;
';


ALTER FUNCTION mir.people_get_benefit_type(poid character) OWNER TO postgres;

--
-- TOC entry 1879 (class 1255 OID 17234)
-- Dependencies: 5396 14
-- Name: people_get_invalid_group_date_osv(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_invalid_group_date_osv(poid character) RETURNS date
    LANGUAGE plpgsql
    AS '
declare
  sres date;
begin
    select b.datenext into sres
      from mir.invalid b 
     where b.people = poid
     order by b.datebegin desc 
     limit 1;
  
  return sres;
end;
';


ALTER FUNCTION mir.people_get_invalid_group_date_osv(poid character) OWNER TO postgres;

--
-- TOC entry 1880 (class 1255 OID 17235)
-- Dependencies: 5396 14
-- Name: people_get_pepl_age_by_birth(date, date, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_pepl_age_by_birth(pbirth date, pdate date DEFAULT ('now'::text)::date, pdetail integer DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    C CURSOR for
      select date_part( ''year'', mir.interval_between(pbirth , PDATE) ) as y,
             date_part( ''month'', mir.interval_between(pbirth , PDATE) ) as m,
             date_part( ''day'', mir.interval_between(pbirth , PDATE) ) as d;

    nYear  INTEGER;
    nMonth INTEGER;
    nDay   INTEGER;
    sYear  VARCHAR(15);
    sMonth VARCHAR(15);
    sDay   VARCHAR(15);
  BEGIN
    OPEN c;
    FETCH c
      INTO nYear, nMonth, nDay;
    CLOSE c;
    IF nYear = 0 THEN
      sYear := '''';
    ELSE
      sYear := nYear;
    
      IF cast(substr(sYear, length(sYear), 1) as INTEGER) = 1 AND nYear <> 11 THEN
        sYear := sYear || '' год'';
      ELSE
        IF cast(substr(sYear, length(sYear), 1) as INTEGER) BETWEEN 2 AND 4 AND
           NOT (nYear BETWEEN 11 AND 14) THEN
        
          sYear := sYear || '' года'';
        ELSE
          sYear := sYear || '' лет'';
        END IF;
      END IF;
    END IF;
    IF PDETAIL = 0 AND NYEAR <> 0 THEN
      RETURN sYear;
    END IF;
  
    IF nMonth = 0 THEN
      sMonth := '''';
    ELSE
      smonth := nMonth || '' мес.'';
      IF PDETAIL = 0 AND nMonth <> 0 THEN
        RETURN sMonth;
      END IF;
    END IF;
    IF nDay = 0 THEN
      sDay := '''';
    ELSE
      sDay := nDay || '' дн.'';
      IF PDETAIL = 0 AND nDay <> 0 THEN
        RETURN sDay;
      END IF;
    END IF;
    RETURN sYear || '' '' || sMonth || '' '' || sDay;
  END;
  ';


ALTER FUNCTION mir.people_get_pepl_age_by_birth(pbirth date, pdate date, pdetail integer) OWNER TO postgres;

--
-- TOC entry 1881 (class 1255 OID 17236)
-- Dependencies: 5396 14
-- Name: people_get_pepl_age_str(character, date, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_pepl_age_str(ppeople_id character, pdate date DEFAULT ('now'::text)::date, pdetail integer DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  BEGIN
    return mir.people_get_pepl_age_by_birth(mir.people_get_pepl_birth(ppeople_id),pdate,pdetail);
  END;
  ';


ALTER FUNCTION mir.people_get_pepl_age_str(ppeople_id character, pdate date, pdetail integer) OWNER TO postgres;

--
-- TOC entry 1882 (class 1255 OID 17237)
-- Dependencies: 5396 14
-- Name: people_get_pepl_birth(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_pepl_birth(ppeople_id character) RETURNS date
    LANGUAGE plpgsql
    AS '
  declare
    v_res date;
  begin
    select max(p.birthday) 
    into v_res
    from mir.people p where p.oid = ppeople_id;
    return v_res;
  end; 
  ';


ALTER FUNCTION mir.people_get_pepl_birth(ppeople_id character) OWNER TO postgres;

--
-- TOC entry 1883 (class 1255 OID 17238)
-- Dependencies: 5396 14
-- Name: people_get_peplfio(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_peplfio(ppeople_id character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    cFIO cursor for
      select p.lastname || '' '' || COALESCE(p.firstname, '' '') || '' '' || COALESCE(p.middlename, '' '') FIO
        from mir.people p
       where p.oid = ppeople_id;
       
    v_res varchar(255);
  begin
    open cFIO;
    fetch cFIO
      into v_res;
    close cFIO;
    
    return v_res;
  end;
';


ALTER FUNCTION mir.people_get_peplfio(ppeople_id character) OWNER TO postgres;

--
-- TOC entry 1884 (class 1255 OID 17239)
-- Dependencies: 5396 14
-- Name: people_get_peplsex(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_get_peplsex(ppeople_id character) RETURNS numeric
    LANGUAGE plpgsql
    AS '
  declare
    cSex cursor for
      select p.sex
        from mir.people p
       where p.oid = ppeople_id;  
    v_res integer;
  begin
    open cSex;
    fetch cSex
      into v_res;
    close cSex;
    return v_res;  
  end;
';


ALTER FUNCTION mir.people_get_peplsex(ppeople_id character) OWNER TO postgres;

--
-- TOC entry 1885 (class 1255 OID 17240)
-- Dependencies: 5396 14
-- Name: people_info_cancel_people_edit(character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_cancel_people_edit(ppeopleid character, pisnew integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    IF PISNEW = 1 THEN
      perform MIR.people_info_drop_people(PPEOPLEID);
    ELSE
      perform MIR.people_info_UPDATE_PEOPLE_TA(PPEOPLEID);
    END IF;

  END;

';


ALTER FUNCTION mir.people_info_cancel_people_edit(ppeopleid character, pisnew integer) OWNER TO postgres;

--
-- TOC entry 1886 (class 1255 OID 17241)
-- Dependencies: 5396 14
-- Name: people_info_delete_ta(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_delete_ta(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.TERRITORIALACCESSORY WHERE OID = POID;
  END;

';


ALTER FUNCTION mir.people_info_delete_ta(poid character) OWNER TO postgres;

--
-- TOC entry 1887 (class 1255 OID 17242)
-- Dependencies: 5396 14
-- Name: people_info_delete_ta_all(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_delete_ta_all(ppeople character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.TERRITORIALACCESSORY
     WHERE PEOPLE = PPEOPLE
       AND DIST NOT IN
           (SELECT OID FROM MIR.DISTRICT D WHERE D.AUTODISTRICT = 1);
  END;

';


ALTER FUNCTION mir.people_info_delete_ta_all(ppeople character) OWNER TO postgres;

--
-- TOC entry 1888 (class 1255 OID 17243)
-- Dependencies: 5396 14
-- Name: people_info_drop_people(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_drop_people(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    UPDATE MIR.SCHEDULE
       SET PEOPLE              = NULL,
           STATE               = MIR.SCHEDULE_GET_CN_SCHEDULESTATE_FREE(),
           UPDATEPEOPLEDATE    = NULL,
           PEOPLESCHEDULEPLACE = NULL
     WHERE PEOPLE = POID
       AND STATE <> MIR.SCHEDULE_GET_CN_SCHEDULESTATE_LIVELINE();
    DELETE FROM MIR.SCHEDULE
     WHERE PEOPLE = POID
       AND STATE IN
           (MIR.SCHEDULE_GET_CN_SCHEDULESTATE_LIVELINE(),
            MIR.SCHEDULE_GET_CN_SCHEDULESTATE_EXTRALINE());
    DELETE FROM MIR.TERRITORIALACCESSORY WHERE PEOPLE = POID;
    DELETE FROM MIR.PEOPLEPHONEABSENCE WHERE PEOPLE = POID;
    DELETE FROM MIR.PEOPLE WHERE OID = POID;

  END;

';


ALTER FUNCTION mir.people_info_drop_people(poid character) OWNER TO postgres;

--
-- TOC entry 1889 (class 1255 OID 17244)
-- Dependencies: 5396 14
-- Name: people_info_get_mkab_place(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_mkab_place(ppeople character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    C record;
  BEGIN
    FOR C IN (SELECT "COMMENT"
                FROM MIR.PEOPLEKARTAPLACE
               WHERE PEOPLE = PPEOPLE) LOOP
      RETURN C.COMMENT;
    END LOOP;

    RETURN NULL;
  END;

';


ALTER FUNCTION mir.people_info_get_mkab_place(ppeople character) OWNER TO postgres;

--
-- TOC entry 1890 (class 1255 OID 17245)
-- Dependencies: 5396 14
-- Name: people_info_get_mkab_place_lpu(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_mkab_place_lpu(ppeople character, plpu character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    C record;
  BEGIN
    FOR C IN (SELECT comment
                FROM MIR.PEOPLEKARTAPLACE
               WHERE PEOPLE = PPEOPLE AND LPU = PLPU) LOOP
      RETURN C.COMMENT;
    END LOOP;

    RETURN NULL;
  END;

';


ALTER FUNCTION mir.people_info_get_mkab_place_lpu(ppeople character, plpu character) OWNER TO postgres;

--
-- TOC entry 1891 (class 1255 OID 17246)
-- Dependencies: 5396 14
-- Name: people_info_get_people_age(character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_people_age(poid character, pdate date DEFAULT ('now'::text)::date) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    C record;
  BEGIN
    FOR C IN (SELECT date_part(''year'', age(PDATE, P.BIRTHDAY)) N
                FROM MIR.PEOPLE P
               WHERE OID = POID) LOOP
      RETURN C.N;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.people_info_get_people_age(poid character, pdate date) OWNER TO postgres;

--
-- TOC entry 1892 (class 1255 OID 17247)
-- Dependencies: 5396 14
-- Name: people_info_get_people_fullfio(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_people_fullfio(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT P.LASTNAME || '' '' || P.FIRSTNAME || '' '' || P.MIDDLENAME AS FIO
                FROM MIR.PEOPLE P
               WHERE OID = POID) LOOP
      RETURN C.FIO;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.people_info_get_people_fullfio(poid character) OWNER TO postgres;

--
-- TOC entry 1893 (class 1255 OID 17248)
-- Dependencies: 5396 14
-- Name: people_info_get_people_sexstr(numeric, boolean, boolean); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_people_sexstr(psexid numeric, pshort boolean DEFAULT false, pfoms boolean DEFAULT false) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  V_RES VARCHAR( 15);
  v_code NUMERIC;
BEGIN
  -- Ponomarenko  10.12.2011
  -- для М\Ж
  v_code = PSEXID;
  if pshort then
    v_code = PSEXID * 10;
  end if;

  case v_code
    when 1 then
    V_RES = ''женский'';
    when 2 then
    V_RES = ''мужской'';
    when 10 then
    V_RES = ''Ж'';
    when 20 then
    V_RES = ''М'';
    else V_RES = ''не определен'';
  END CASE;


 if pfoms then 
     SELECT (CASE
               WHEN sex.foms_code IS NULL THEN 0
               ELSE sex.foms_code
             END)
     FROM mir.sex sex
     INTO V_RES
     WHERE sex.id = PSEXID;
   end if;

    RETURN V_RES;
  END;
';


ALTER FUNCTION mir.people_info_get_people_sexstr(psexid numeric, pshort boolean, pfoms boolean) OWNER TO postgres;

--
-- TOC entry 1894 (class 1255 OID 17249)
-- Dependencies: 5396 14
-- Name: people_info_get_people_shortfio(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_get_people_shortfio(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    C record;
  BEGIN
    FOR C IN (SELECT P.LASTNAME || '' '' || SUBSTR(P.FIRSTNAME, 1, 1) || ''.'' ||
                     SUBSTR(P.MIDDLENAME, 1, 1) || ''.'' AS FIO
                FROM MIR.PEOPLE P
               WHERE OID = POID) LOOP
      RETURN C.FIO;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.people_info_get_people_shortfio(poid character) OWNER TO postgres;

--
-- TOC entry 1895 (class 1255 OID 17250)
-- Dependencies: 5396 14
-- Name: people_info_insert_mkab_place(character, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_mkab_place(ppeople character, pcomment character varying, psyn character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    DELETE FROM MIR.PEOPLEKARTAPLACE K WHERE K.PEOPLE = PPEOPLE;
    /*IF PSYN = ''KARTAPLACE_REGIST'' THEN
      V_COMMENT := ''В регистратуре ('' || to_Char(pdate, ''dd.mm.yyyy'') || '')'';
    ELSIF PSYN = ''KARTAPLACE_VRACH'' THEN
      NULL;
    ELSIF PSYN = ''NA_RUKAH'' THEN
      V_COMMENT := ''На руках у пациента  ('' || to_Char(pdate, ''dd.mm.yyyy'') || '')'';
    END IF;*/
    INSERT INTO MIR.PEOPLEKARTAPLACE
      (OID, PEOPLE, COMMENT, KARTAPLACE)
    VALUES
      (MIR.NEW_UUID(), PPEOPLE, PCOMMENT, MIR.ZGETDICTIONARYOID(PSYN));
  END;

';


ALTER FUNCTION mir.people_info_insert_mkab_place(ppeople character, pcomment character varying, psyn character varying) OWNER TO postgres;

--
-- TOC entry 1896 (class 1255 OID 17251)
-- Dependencies: 5396 14
-- Name: people_info_insert_mkab_place_lpu(character, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_mkab_place_lpu(ppeople character, pcomment character varying, psyn character varying, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
    nOk integer;
  BEGIN
    nOk := -1;
    
    for c in ( select k.oid
                 from MIR.PEOPLEKARTAPLACE k
                where K.PEOPLE =PPEOPLE AND K.LPu = PLPU
             )
    loop
      nOk := 1; 
    end loop;
    
    if nOk > 0 then
      UPDATE MIR.PEOPLEKARTAPLACE k
         SET k.COMMENT=PCOMMENT,
             k.KARTAPLACE=MIR.ZGETDICTIONARYOID(PSYN)
       where K.PEOPLE =PPEOPLE AND K.LPu = PLPU;
    else
      INSERT into MIR.PEOPLEKARTAPLACE
         (OID,PEOPLE, COMMENT,KARTAPLACE, LPU)
       VALUES
         (MIR.NEW_UUID(), PPEOPLE, PCOMMENT, MIR.ZGETDICTIONARYOID(PSYN), PLPU);
    end if;
  /*
  MERGE INTO MIR.PEOPLEKARTAPLACE K
   USING DUAL
   ON (K.PEOPLE =PPEOPLE AND K.LPu = PLPU)
   WHEN MATCHED THEN
     UPDATE
        SET
        "COMMENT"=PCOMMENT,
        KARTAPLACE=MIR.ZGETDICTIONARYOID(PSYN)

        --, KARTAPLACE = ''e6bde17c-833e-4301-8cce-3128240ea160''
   WHEN NOT MATCHED THEN
     INSERT
       (OID,PEOPLE, "COMMENT",KARTAPLACE, LPU)
     VALUES
       (MIR.NEW_UUID(), PPEOPLE, PCOMMENT, MIR.ZGETDICTIONARYOID(PSYN), PLPU);*/



   /* DELETE FROM MIR.PEOPLEKARTAPLACE K WHERE K.PEOPLE = PPEOPLE and K.LPU = PLPU;*/
    /*IF PSYN = ''KARTAPLACE_REGIST'' THEN
      V_COMMENT := ''В регистратуре ('' || to_Char(pdate, ''dd.mm.yyyy'') || '')'';
    ELSIF PSYN = ''KARTAPLACE_VRACH'' THEN
      NULL;
    ELSIF PSYN = ''NA_RUKAH'' THEN
      V_COMMENT := ''На руках у пациента  ('' || to_Char(pdate, ''dd.mm.yyyy'') || '')'';
    END IF;*/
   /* INSERT INTO MIR.PEOPLEKARTAPLACE
      (OID, PEOPLE, "COMMENT", KARTAPLACE, LPU)
    VALUES
      (MIR.NEW_UUID(), PPEOPLE, PCOMMENT, MIR.ZGETDICTIONARYOID(PSYN), PLPU);*/
  END;

';


ALTER FUNCTION mir.people_info_insert_mkab_place_lpu(ppeople character, pcomment character varying, psyn character varying, plpu character) OWNER TO postgres;

--
-- TOC entry 1897 (class 1255 OID 17252)
-- Dependencies: 5396 14
-- Name: people_info_insert_people(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_people(poid character varying, pfirstname character varying, plastname character varying, pmiddlename character varying, ptelsot1 character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID MIR.PEOPLE.OID%TYPE;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.NEW_UUID();
    ELSE
      V_OID := POID;
    END IF;

    INSERT INTO MIR.PEOPLE
      (OID,
       FIRSTNAME,
       LASTNAME,
       MIDDLENAME,
       TELSOT1)
    VALUES
      (V_OID,
       PFIRSTNAME,
       PLASTNAME,
       PMIDDLENAME,
       PTELSOT1);
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.people_info_insert_people(poid character varying, pfirstname character varying, plastname character varying, pmiddlename character varying, ptelsot1 character varying) OWNER TO postgres;

--
-- TOC entry 1898 (class 1255 OID 17253)
-- Dependencies: 5396 14
-- Name: people_info_insert_people(character, character varying, character varying, character varying, date, numeric, character varying, character varying, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_people(poid character, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, psex numeric, pemail character varying, ptelsot1 character varying, paddressex2 character, ptelhome character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID MIR.PEOPLE.OID%TYPE;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.NEW_UUID();
    ELSE
      V_OID := POID;
    END IF;

    INSERT INTO MIR.PEOPLE
      (OID,
       FIRSTNAME,
       LASTNAME,
       MIDDLENAME,
       BIRTHDAY,
       SEX,
       EMAIL,
       TELSOT1,
       ADDRESSEX2,
       TELHOME)
    VALUES
      (V_OID,
       PFIRSTNAME,
       PLASTNAME,
       PMIDDLENAME,
       PBIRTHDAY,
       PSEX,
       PEMAIL,
       PTELSOT1,
       PADDRESSEX2,
       PTELHOME);
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.people_info_insert_people(poid character, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, psex numeric, pemail character varying, ptelsot1 character varying, paddressex2 character, ptelhome character varying) OWNER TO postgres;

--
-- TOC entry 1899 (class 1255 OID 17254)
-- Dependencies: 5396 14
-- Name: people_info_insert_people(character, character varying, character varying, character varying, date, numeric, character varying, character varying, character, character varying, numeric, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_people(poid character, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, psex numeric, pemail character varying, ptelsot1 character varying, paddressex2 character, ptelhome character varying, psnils numeric, pregion character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  DECLARE
    V_OID MIR.PEOPLE.OID%TYPE;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.NEW_UUID();
    ELSE
      V_OID := POID;
    END IF;

    INSERT INTO MIR.PEOPLE
      (OID,
       FIRSTNAME,
       LASTNAME,
       MIDDLENAME,
       BIRTHDAY,
       SEX,
       EMAIL,
       TELSOT1,
       ADDRESSEX2,
       TELHOME,
       snils2,
       region)
    VALUES
      (V_OID,
       PFIRSTNAME,
       PLASTNAME,
       PMIDDLENAME,
       PBIRTHDAY,
       PSEX,
       PEMAIL,
       PTELSOT1,
       PADDRESSEX2,
       PTELHOME,
       PSNILS,
       PREGION);
    RETURN V_OID;
  END;
  ';


ALTER FUNCTION mir.people_info_insert_people(poid character, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, psex numeric, pemail character varying, ptelsot1 character varying, paddressex2 character, ptelhome character varying, psnils numeric, pregion character) OWNER TO postgres;

--
-- TOC entry 1900 (class 1255 OID 17255)
-- Dependencies: 5396 14
-- Name: people_info_insert_ta(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_insert_ta(plpu character, pdist character, ppeople character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID MIR.TERRITORIALACCESSORY.OID%TYPE;
  BEGIN
    V_OID := MIR.NEW_UUID();
    INSERT INTO MIR.TERRITORIALACCESSORY
      (OID, LPU, DIST, PEOPLE)
    VALUES
      (V_OID, PLPU, PDIST, PPEOPLE);
    RETURN V_OID;
  END;

';


ALTER FUNCTION mir.people_info_insert_ta(plpu character, pdist character, ppeople character) OWNER TO postgres;

--
-- TOC entry 1901 (class 1255 OID 17256)
-- Dependencies: 5396 14
-- Name: people_info_move_people_info(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_move_people_info(pfrompeople character, ptopeople character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    N_RES    integer;
    V_LOGIN  MIR.people.LOGIN%TYPE;
    VSUCCESS BOOLEAN := FALSE;
    I        integer := 0;
    c        record;
    PER      record;
  BEGIN
    UPDATE MIR.SCHEDULE
       SET PEOPLE = PTOPEOPLE
     WHERE PEOPLE = PFROMPEOPLE;

    --PFROMPEOPLE - новый
    --PTOPEOPLE - старый
    --Если у нового пацика, есть полис, то помечаем полисы старого как неактивные
    SELECT COUNT(1)
      INTO N_RES
      FROM MIR.INSURANCE
     WHERE PEOPLE = PFROMPEOPLE;
    IF N_RES <> 0 THEN
      UPDATE MIR.INSURANCE SET STATE = 1 WHERE PEOPLE = PTOPEOPLE;
    END IF;
    
    UPDATE MIR.INSURANCE SET PEOPLE = PTOPEOPLE WHERE PEOPLE = PFROMPEOPLE;
    
    UPDATE MIR.PEOPLEPHONEABSENCE
       SET PEOPLE = PTOPEOPLE
     WHERE PEOPLE = PFROMPEOPLE;
    --оставляем личные данные нового, если пустые тогда переносим со старого
    FOR C IN (SELECT * FROM MIR.PEOPLE WHERE OID = PFROMPEOPLE) LOOP
      UPDATE MIR.PEOPLE 
         SET TELSOT1        = NVL(C.TELSOT1, TELSOT1),
             ADDRESSEX2     = NVL(C.ADDRESSEX2, ADDRESSEX2),
             TELHOME        = NVL(C.TELHOME, TELHOME),
             TELWORK        = NVL(C.TELWORK, TELWORK),
             TELSOT2        = NVL(C.TELSOT2, TELSOT2),
             LIVEIN         = NVL(C.LIVEIN, LIVEIN),
             SSTATE         = NVL(C.SSTATE, SSTATE),
             LPU            = NVL(C.LPU, LPU),
             EMAIL          = NVL(C.EMAIL, EMAIL),
             DISTRICT       = NVL(C.DISTRICT, DISTRICT),
             COMPANY        = NVL(C.COMPANY, COMPANY),
             PEOPLEDOCTYPE  = NVL(C.PEOPLEDOCTYPE, PEOPLEDOCTYPE),
             PEOPLEDOCSER   = NVL(C.PEOPLEDOCSER, PEOPLEDOCSER),
             PEOPLEDOCNUM   = NVL(C.PEOPLEDOCNUM, PEOPLEDOCNUM),
             DISPUCHET      = NVL(C.DISPUCHET, DISPUCHET),
             BENEFITTYPE    = NVL(C.BENEFITTYPE, BENEFITTYPE),
             SNILS          = NVL(C.SNILS, SNILS),
             BENEFITDOCTYPE = NVL(C.BENEFITDOCTYPE, BENEFITDOCTYPE),
             BENEFITDOCNUM  = NVL(C.BENEFITDOCNUM, BENEFITDOCNUM),
             INVALIDITYTYPE = NVL(C.INVALIDITYTYPE, INVALIDITYTYPE),
             INVALIDSTEP    = NVL(C.INVALIDSTEP, INVALIDSTEP),
             INVALIDVID     = NVL(C.INVALIDVID, INVALIDVID),
             PROFESSION     = NVL(C.PROFESSION, PROFESSION),
             PEOPLEPOST     = NVL(C.PEOPLEPOST, PEOPLEPOST),
             DEPENDANT      = NVL(C.DEPENDANT, DEPENDANT)
       WHERE OID = PTOPEOPLE;
      UPDATE MIR.PEOPLE 
         SET LASTNAME   = NVL(C.LASTNAME, LASTNAME),
             FIRSTNAME  = NVL(C.FIRSTNAME, FIRSTNAME),
             MIDDLENAME = NVL(C.MIDDLENAME, MIDDLENAME),
             BIRTHDAY   = COALESCE(C.BIRTHDAY, BIRTHDAY)
       WHERE OID = PTOPEOPLE;
      IF C.LOGIN IS NOT NULL THEN
        FOR PER IN (SELECT LOGIN, WASLOGIN
                      FROM MIR.PEOPLE
                     WHERE OID = PTOPEOPLE) LOOP
          --если новый входил или никто не входил - переносим логин нового
          IF (C.WASLOGIN = 1 OR (PER.WASLOGIN = 0 AND C.WASLOGIN = 0)) THEN
            WHILE NOT VSUCCESS LOOP
              EXIT WHEN I > 10;
              I := I + 1;
              --BEGIN
                UPDATE MIR.PEOPLE 
                   SET LOGIN = LOGIN || ''_MOVED_'' || I
                 WHERE OID = PFROMPEOPLE
                   AND LOGIN IS NOT NULL;
                VSUCCESS := TRUE;
              --EXCEPTION
              --  WHEN OTHERS THEN
              --    NULL;
              --END;
            END LOOP;

            UPDATE MIR.PEOPLE 
               SET LOGIN    = C.LOGIN,
                   PASSWORD = C.PASSWORD,
                   WASLOGIN = C.WASLOGIN
             WHERE OID = PTOPEOPLE;
          END IF;
        END LOOP;
      END IF;
    END LOOP;

    -- Логируем
    INSERT INTO MIR.MOVE_PEOPLE_LOG
      (PEOPLE_NEW, PEOPLE_OLD, DATE_MOVE, USERNAME)
    VALUES
      (PTOPEOPLE,
       PFROMPEOPLE,
       CURRENT_TIMESTAMP,--SYSDATE,
       CURRENT_USER--SYS_CONTEXT(''USERENV'', ''SESSION_USER'')
       );
    /* UPDATE MIR.INSURANCE SET PEOPLE = PTOPEOPLE WHERE PEOPLE = PFROMPEOPLE;
    UPDATE MIR.INSURANCE SET PEOPLE = PTOPEOPLE WHERE PEOPLE = PFROMPEOPLE;
    UPDATE MIR.INSURANCE SET PEOPLE = PTOPEOPLE WHERE PEOPLE = PFROMPEOPLE;
    */

  END;
';


ALTER FUNCTION mir.people_info_move_people_info(pfrompeople character, ptopeople character) OWNER TO postgres;

--
-- TOC entry 1903 (class 1255 OID 17257)
-- Dependencies: 5396 14
-- Name: people_info_update_people(character, date, numeric, numeric, numeric, numeric, character, character, character, character, character varying, character varying, character varying, character varying, character varying, character, character varying, character, character varying, character varying, numeric, character, character varying, character, character varying, character, numeric, numeric, character, character, numeric, character varying, character varying, character varying, date, character, character, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_update_people(poid character, pdtcreation date, pid numeric, psex numeric, plivein numeric, psstate numeric, ppacient character, paddressex1 character, paddressex2 character, plpu character, pemail character varying, ptelhome character varying, ptelwork character varying, ptelsot1 character varying, ptelsot2 character varying, pdistrict character, pcompany character varying, ppeopledoctype character, ppeopledocser character varying, ppeopledocnum character varying, pdispuchet numeric, pbenefittype character, psnils character varying, pbenefitdoctype character, pbenefitdocnum character varying, pinvaliditytype character, pinvalidstep numeric, pinvalidvid numeric, pprofession character, ppeoplepost character, pdependant numeric, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, paddress1 character, paddress2 character, pcategory character varying, pplacework character varying, pnumberkarta character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
    nOK integer;
  BEGIN
    UPDATE MIR.PEOPLE
       SET DTCREATION     = PDTCREATION,
           ID             = PID,
           SEX            = PSEX,
           LIVEIN         = PLIVEIN,
           SSTATE         = PSSTATE,
           PACIENT        = PPACIENT,
           ADDRESSEX1     = PADDRESSEX1,
           ADDRESSEX2     = PADDRESSEX2,
           TELHOME        = PTELHOME,
           TELWORK        = PTELWORK,
           TELSOT1        = PTELSOT1,
           TELSOT2        = PTELSOT2,
           DISTRICT       = PDISTRICT,
           COMPANY        = PCOMPANY,
           PEOPLEDOCTYPE  = PPEOPLEDOCTYPE,
           PEOPLEDOCSER   = PPEOPLEDOCSER,
           PEOPLEDOCNUM   = PPEOPLEDOCNUM,
           DISPUCHET      = PDISPUCHET,
           BENEFITTYPE    = PBENEFITTYPE,
           SNILS          = PSNILS,
           BENEFITDOCTYPE = PBENEFITDOCTYPE,
           BENEFITDOCNUM  = PBENEFITDOCNUM,
           INVALIDITYTYPE = PINVALIDITYTYPE,
           INVALIDSTEP    = PINVALIDSTEP,
           INVALIDVID     = PINVALIDVID,
           PROFESSION     = PPROFESSION,
           PEOPLEPOST     = PPEOPLEPOST,
           DEPENDANT      = PDEPENDANT,
           CATEGORY       = PCATEGORY,
           PLACEWORK      = PPLACEWORK,
           FIRSTNAME  = PFIRSTNAME,
           LASTNAME   = PLASTNAME,
           MIDDLENAME = PMIDDLENAME,
           BIRTHDAY   = PBIRTHDAY,
           EMAIL      = PEMAIL
     WHERE OID = POID;
     
     nOK := -1;
     
     for c in ( select k.oid
                  from MIR.PEOPLEKARTAPLACE K
                 where K.PEOPLE =POID 
                   AND K.LPu = PLPU
              )
     loop
       nOk := 1;
     end loop;
     
     if nOk > 0 then
       UPDATE MIR.PEOPLEKARTAPLACE 
          SET NumberKarta = PNUMBERKARTA
        where PEOPLE = POID 
          AND LPu = PLPU;  
     else
       INSERT into MIR.PEOPLEKARTAPLACE
         (OID, PEOPLE, NumberKarta, LPU)
       VALUES
         (MIR.NEW_UUID(), POID, PNUMBERKARTA, PLPU);
     end if;

    perform MIR.WEBUSER_DOAUTOCREATEWEBUSER(POID);
  END;

';


ALTER FUNCTION mir.people_info_update_people(poid character, pdtcreation date, pid numeric, psex numeric, plivein numeric, psstate numeric, ppacient character, paddressex1 character, paddressex2 character, plpu character, pemail character varying, ptelhome character varying, ptelwork character varying, ptelsot1 character varying, ptelsot2 character varying, pdistrict character, pcompany character varying, ppeopledoctype character, ppeopledocser character varying, ppeopledocnum character varying, pdispuchet numeric, pbenefittype character, psnils character varying, pbenefitdoctype character, pbenefitdocnum character varying, pinvaliditytype character, pinvalidstep numeric, pinvalidvid numeric, pprofession character, ppeoplepost character, pdependant numeric, pfirstname character varying, plastname character varying, pmiddlename character varying, pbirthday date, paddress1 character, paddress2 character, pcategory character varying, pplacework character varying, pnumberkarta character varying) OWNER TO postgres;

--
-- TOC entry 1904 (class 1255 OID 17258)
-- Dependencies: 5396 14
-- Name: people_info_update_people_phone_sot(character, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_update_people_phone_sot(poid character, ptelsot1 character varying, ptelsot2 character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    UPDATE MIR.PEOPLE
       SET TELSOT1 = PTELSOT1, TELSOT2 = PTELSOT2
     WHERE OID = POID;
  END;

';


ALTER FUNCTION mir.people_info_update_people_phone_sot(poid character, ptelsot1 character varying, ptelsot2 character varying) OWNER TO postgres;

--
-- TOC entry 1905 (class 1255 OID 17259)
-- Dependencies: 5396 14
-- Name: people_info_update_people_ta(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_update_people_ta(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES       MIR.TERRITORIALACCESSORY.OID%TYPE;
    V_OLD_HOUSE MIR.ADDRESSEX.HOUSE%TYPE;
    V_OLD_KORP  MIR.ADDRESSEX.BUILDING%TYPE;
    V_NEW_HOUSE MIR.ADDRESSEX.HOUSE%TYPE;
    V_KLADR     MIR.ADDRESSEX.TKLADR%TYPE;
    V_FULL_INFO VARCHAR(100);
    V_AGE       integer;
    V_SEX       integer;
    V_RESS      integer;
    c           record;
  BEGIN
    perform MIR.PEOPLE_INFO_DELETE_TA_ALL(POID);
    
    BEGIN
      SELECT A.HOUSE,
             A.BUILDING,
             A.TKLADR,
             date_part(''year'', age(CURRENT_TIMESTAMP, P.BIRTHDAY)),
             P.SEX
        INTO V_OLD_HOUSE, V_OLD_KORP, V_KLADR, V_AGE, V_SEX
        FROM MIR.PEOPLE P, MIR.ADDRESSEX A
       WHERE A.OID = P.ADDRESSEX2
         AND P.OID = POID;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RETURN;
    END;

    select MIR.ADDR_EXTRACT_HOUSE_INFO(V_OLD_HOUSE,
                                       V_OLD_KORP) into V_NEW_HOUSE, V_FULL_INFO, V_RESS;
    
    IF V_RESS = 0 THEN
      RETURN;
    END IF;

    FOR C IN (SELECT UPPER(REPLACE(D.INCLUDEHOUSE, '' '', '''')) INCLUDEHOUSE, --используем replace, т.к. translate не поддерживает явный clob
                     UPPER(TRANSLATE(D.EXCLUDEHOUSE, ''_ '', ''_'')) EXCLUDEHOUSE,
                     D.DISTRICT,
                     STARTHOUSE,
                     ENDHOUSE,
                     DI.NAME,
                     o.LPU
                FROM MIR.DISTRICTSTREET D,
                     MIR.DISTRICT       DD,
                     MIR.DICTIONARY     DI,
                     MIR.MEDHELPTYPE    M,
                     mir.otdel o
               WHERE D.TKLADR = V_KLADR
                 AND DI.OID = DD.OID
                 and dd.otdel = o.oid
                 AND D.DISTRICT = DD.OID
                 AND (DD.AUTODISTRICT IS NULL OR DD.AUTODISTRICT = 0)
                 AND DD.HELPTYPE = M.OID
                 AND V_SEX = NVL(M.SEX, V_SEX)
                 AND V_AGE BETWEEN NVL(M.AGES, 0) AND NVL(M.AGEPO, 200)) LOOP
      BEGIN
        IF ((cast(V_NEW_HOUSE as integer) BETWEEN cast(C.STARTHOUSE as integer) AND
           cast(C.ENDHOUSE as integer)) OR
           INSTR('','' || C.INCLUDEHOUSE || '','', '','' || V_FULL_INFO || '','') > 0) AND
           NOT
            (INSTR('','' || C.EXCLUDEHOUSE || '','', '','' || V_FULL_INFO || '','') > 0) THEN
          V_RES := MIR.people_info_insert_ta(C.LPU, C.DISTRICT, POID);
        END IF;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;

    END LOOP;
  END;
';


ALTER FUNCTION mir.people_info_update_people_ta(poid character) OWNER TO postgres;

--
-- TOC entry 1906 (class 1255 OID 17260)
-- Dependencies: 5396 14
-- Name: people_info_update_phone_abs_reason(character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_info_update_phone_abs_reason(ppeople character, preason integer) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE 
    c record;
    nOk integer;
  BEGIN
    IF PREASON IS NULL THEN
      DELETE FROM MIR.PEOPLEPHONEABSENCE WHERE PEOPLE = PPEOPLE;
    ELSE
      nOk := -1;
      
      for c in ( select p.oid
                   from MIR.PEOPLEPHONEABSENCE p
                  where p.people = PPEOPLE
               )
      loop
        nOk := 1;
      end loop;
      
      if nOk > 0 then
        update MIR.PEOPLEPHONEABSENCE p
           set p.reason = PREASON
         where p.people = PPEOPLE;
      else
        insert into MIR.PEOPLEPHONEABSENCE (oid, people, reason)
        values (MIR.guid_generate(), PPEOPLE, PREASON);
      end if;
    END IF;
  END;

';


ALTER FUNCTION mir.people_info_update_phone_abs_reason(ppeople character, preason integer) OWNER TO postgres;

--
-- TOC entry 1907 (class 1255 OID 17261)
-- Dependencies: 5396 14
-- Name: people_is_benefit_on_date(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_is_benefit_on_date(ppeople character, pbenefit_financing character, pdate_on date) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    n_result       integer;
  BEGIN    
    select 1 into n_result
      from mir.benefit b
     where b.people = ppeople
       and b.benefit_financing = pbenefit_financing
       and b.date_begin <= pdate_on
       and COALESCE(b.date_end, CURRENT_DATE) >= pdate_on;

    RETURN COALESCE(n_result, 0);
  END;
';


ALTER FUNCTION mir.people_is_benefit_on_date(ppeople character, pbenefit_financing character, pdate_on date) OWNER TO postgres;

--
-- TOC entry 1908 (class 1255 OID 17262)
-- Dependencies: 5396 14
-- Name: people_is_invalid_anygroup_on_date(character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_is_invalid_anygroup_on_date(ppeople character, pdate_on date) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    n_result       integer;
  BEGIN    
    select max( 1 ) into n_result
      from mir.invalid i
     where i.people = ppeople
       and i.datebegin <= pdate_on
       and ( ( i.dateend >= pdate_on )
             or ( i.infinity = 1 ) );

    RETURN COALESCE(n_result, 0);
  END;
';


ALTER FUNCTION mir.people_is_invalid_anygroup_on_date(ppeople character, pdate_on date) OWNER TO postgres;

--
-- TOC entry 1909 (class 1255 OID 17263)
-- Dependencies: 5396 14
-- Name: people_is_invalid_on_date(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_is_invalid_on_date(ppeople character, pinvalidgroup character, pdate_on date) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    n_result       integer;
  BEGIN    
    select max( 1 ) into n_result
      from mir.invalid i
     where i.people = ppeople
       and i.invalidgroup = pinvalidgroup
       and i.datebegin <= pdate_on
       and ( ( i.dateend >= pdate_on )
             or ( i.infinity = 1 ) );

    RETURN COALESCE(n_result, 0);
  END;
';


ALTER FUNCTION mir.people_is_invalid_on_date(ppeople character, pinvalidgroup character, pdate_on date) OWNER TO postgres;

--
-- TOC entry 1910 (class 1255 OID 17264)
-- Dependencies: 5396 14
-- Name: people_tr_portal_mdoc(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_tr_portal_mdoc() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
insert into mir.portal_mdoc(oid, people, type, add_date)
values (public.generate_uuid_v4(), NEW.OID, mir.cn_mdoc_type_ambtalon(), now());
insert into mir.portal_mdoc(oid, people, type, add_date)
values (public.generate_uuid_v4(), NEW.OID, mir.cn_mdoc_type_pregnantcard(),
now());
insert into mir.portal_mdoc(oid, people, type, add_date)
values (public.generate_uuid_v4(), NEW.OID, mir.cn_mdoc_type_childrenevolution
(), now());
insert into mir.portal_mdoc(oid, people, type, add_date)
values (public.generate_uuid_v4(), NEW.OID, mir.cn_mdoc_type_dispansary(), now
());
insert into mir.portal_mdoc(oid, people, type, add_date)
values (public.generate_uuid_v4(), NEW.OID, mir.cn_mdoc_type_stacionar(), now(
));
return NEW;
END;
';


ALTER FUNCTION mir.people_tr_portal_mdoc() OWNER TO postgres;

--
-- TOC entry 1912 (class 1255 OID 17265)
-- Dependencies: 5396 14
-- Name: people_update_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION people_update_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
	BEGIN
		if (coalesce(OLD.peopledoctype,'''') <> coalesce(new.peopledoctype,''''))
			or (coalesce(OLD.peopledocser,'''') <> coalesce(new.peopledocser,''''))
			or (coalesce(OLD.peopledocnum,'''') <> coalesce(new.peopledocnum,''''))
			or (coalesce(OLD.peopledocgive,'''') <> coalesce(new.peopledocgive,''''))
			or (coalesce(OLD.peopledocgivedate,''01.01.1900'') <> coalesce(new.peopledocgivedate,''01.01.1900''))
			or (coalesce(OLD.firstname,'''') <> coalesce(new.firstname,''''))
			or (coalesce(OLD.lastname,'''') <> coalesce(new.lastname,''''))
			or (coalesce(OLD.middlename,'''') <> coalesce(new.middlename,'''')) then
			insert into mir.people_change_history
			  (people, addressex1, addressex2, peopledoctype, peopledocser, peopledocnum, peopledocgive, peopledocgivedate, firstname, lastname, middlename)
			values
			  (OLD.oid, OLD.addressex1, OLD.addressex2, OLD.peopledoctype, OLD.peopledocser, OLD.peopledocnum, OLD.peopledocgive, OLD.peopledocgivedate, OLD.firstname, OLD.lastname, OLD.middlename);
		end if;
	 
		RETURN NEW;  
	END;
';


ALTER FUNCTION mir.people_update_tr() OWNER TO postgres;

--
-- TOC entry 1913 (class 1255 OID 17266)
-- Dependencies: 5396 14
-- Name: peoplemoderation_bi_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION peoplemoderation_bi_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  LoginFound VARCHAR(100);
    v_MailBody varchar(4000);
    v_MailBody2 varchar(4000);
    newOid VARCHAR(36);
    KladrOid VARCHAR(36);
    home VARCHAR(36);
    korp VARCHAR(36);
BEGIN
    NEW.dtrec:=CURRENT_TIMESTAMP;
    newOid:=lower(mir.new_uuid());
    select max(tkladr),max(house),max(building) into KladrOid,home,korp from mir.addressex where oid=new.adr;

    perform MIR.set_TA_BY_KLADR(KladrOid,home,korp,new.oid);


select max(login) into LoginFound FROM MIR.people p
where MIR.CONVERT_LETTER(FIRSTNAME) LIKE MIR.CONVERT_LETTER(TRIM(new.FIRSTNAME))||''%''
AND MIR.CONVERT_LETTER(LASTNAME) LIKE MIR.CONVERT_LETTER(TRIM(new.LASTNAME))||''%''
AND MIR.CONVERT_LETTER(MIDDLENAME) LIKE MIR.CONVERT_LETTER(TRIM(new.MIDDLENAME))||''%''
AND BIRTHDAY = new.birthday  and waslogin=1;
v_MailBody:='''';
if LoginFound  is not null then
--Если найден логин под которым уже входили в систему, автоматом отправляем письмо
      if new.email is not null then
      v_MailBody:=
      ''Уважаемый(ая) ''||new.LASTNAME||'' ''||new.FIRSTNAME||'' ''||new.MIDDLENAME||''<br>''||chr(13)||
      ''Вы получили это письмо т.к. Ваш e-mail был указан во время регистрации на сайте samozapis.ru ''||''<br>''||chr(13)||''<br>''||chr(13)||
      ''По Вашим регистрационным данным найден пользователь с логином: ''||LoginFound||''<br>''||chr(13)||
      ''Воспользуйтесь системой восстановления пароля на samozapis.ru.''||''<br>''||chr(13)||''<br>''||chr(13)||
      ''При возникновении проблем воспользуйтесь формой помощи на сайте samozapis.ru .''||''<br>''||chr(13)||''<br>''||chr(13)||
      ''Желаем удачи.''||''<br>''||chr(13)||''<br>''||chr(13)||
      ''--------------------------------------------------------------''||''<br>''||chr(13)||
      ''Пожалуйста, не отвечайте на это письмо. Если у Вас есть вопросы, просим Вас воспользоваться формой помощи на сайте samozapis.ru ''||''<br>''||chr(13)||''<br>''||chr(13)||
      ''С уважением, администратор системы'';
new.status:=2;
new.SYSUSER:=CURRENT_USER;
new.DTCHANGESTATUS:=CURRENT_TIMESTAMP;
v_MailBody2:=replace(v_MailBody,''<br>'','''');

insert into mir.errorclientmessages
  (oid,
   mess,
   contact,
   ip,
   userasp,
   formname,
   num,
   typemessage,
   dtrecord,
   people,
   isanswer,
   email,
   rismessage)
values
  (newoid,
   to_nclob(''Запрос на регистрацию с сайта самозаписи.''||chr(13)||new.LASTNAME||'' ''||new.FIRSTNAME||'' ''||new.MIDDLENAME),
   new.telsot,
   new.ip,
   CURRENT_USER,
   ''TRIGGER'',
   (select max(NUM)+1 from  mir.errorclientmessages),
   1,
   CURRENT_TIMESTAMP,
   null,
   1,
   new.email,
   1);


insert into mir.answerclientmessages
  (oid,
   errmess,
   peopleanswer,
   dtanswer,
   messanswer,
   sendemail)
values
  (lower(mir.new_uuid()),
   newoid,
   (select max(oid) from mir.sysuser where username=''ADMIN_ASP''),
   CURRENT_TIMESTAMP,
  to_nclob(v_MailBody2),
   new.email);


    perform mir.sendmail(''noreply@samozapis.ru'',
                              new.email,
                              ''Регистрация на сайте samozapis.ru'',
                             to_nclob(v_MailBody));
                             end if;

end if;
return new;
END;

';


ALTER FUNCTION mir.peoplemoderation_bi_trg() OWNER TO postgres;

--
-- TOC entry 1914 (class 1255 OID 17267)
-- Dependencies: 5396 14
-- Name: peoplemoderation_create_people_from_mod(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION peoplemoderation_create_people_from_mod(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  DECLARE
    V_OID VARCHAR(36);
    c record;
  BEGIN
    FOR C IN (SELECT * FROM MIR.PEOPLEMODERATION WHERE OID = POID) 
    LOOP
      select MIR.PEOPLE_INFO_INSERT_PEOPLE(POID,
                                           C.FIRSTNAME,
                                           C.LASTNAME,
                                           C.MIDDLENAME,
                                           C.BIRTHDAY,
                                           C.SEX,
                                           C.EMAIL,
                                           C.TELSOT,
                                           C.ADR,
                                           C.TELHOME
                                           --,
                                          -- C.USERLOGIN,
                                          -- C.USERPASSSWORD,
                                          -- C.REGION
                                           ) into V_OID;
      UPDATE MIR.PEOPLE
         SET WASLOGIN = 1, login = c.userlogin, password=c.userpasssword, addressex2=c.adr, webphone = c.telsot, webmail = c.email
       WHERE OID = V_OID;
       
      IF C.INSURANCE_SER IS NOT NULL OR C.INSURANCE_NUM IS NOT NULL THEN
        select MIR.INSURANCE_INSERT_POLIS(POID,
                                                C.INSURANCE_BEGINDATE,
                                                C.INSURANCE_ENDDATE,
                                                C.INSURANCE_SER,
                                                C.INSURANCE_NUM,
                                                C.INSURANCE_COMPANY,
                                                C.INSURANCE_pay_type) into V_OID;
      END IF;
    END LOOP;
  END;
';


ALTER FUNCTION mir.peoplemoderation_create_people_from_mod(poid character varying) OWNER TO postgres;

--
-- TOC entry 1915 (class 1255 OID 17268)
-- Dependencies: 5396 14
-- Name: peoplemoderation_get_people_moderation_status(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION peoplemoderation_get_people_moderation_status(poid character) RETURNS numeric
    LANGUAGE plpgsql
    AS '
DECLARE
    C record;
  BEGIN
    FOR C IN (SELECT STATUS FROM MIR.PEOPLEMODERATION P WHERE OID = POID) LOOP
      RETURN C.STATUS;
    END LOOP;
    RETURN NULL;
  END;

';


ALTER FUNCTION mir.peoplemoderation_get_people_moderation_status(poid character) OWNER TO postgres;

--
-- TOC entry 1916 (class 1255 OID 17269)
-- Dependencies: 5396 14
-- Name: peoplemoderation_get_people_moderation_status_s(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION peoplemoderation_get_people_moderation_status_s(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_STATUS VARCHAR(50);
    C record;
  BEGIN
    V_STATUS := ''Подтверждено'';
    FOR C IN (SELECT STATUS FROM MIR.PEOPLEMODERATION P WHERE OID = POID) LOOP
      IF C.STATUS = 0 THEN
        V_STATUS := ''Ожидается решение'';
      ELSIF C.STATUS = 2 THEN
        V_STATUS := ''Отклонено'';
      ELSE
        V_STATUS := ''Подтверждено'';
      END IF;
    END LOOP;
    RETURN V_STATUS;
  END;

';


ALTER FUNCTION mir.peoplemoderation_get_people_moderation_status_s(poid character) OWNER TO postgres;

--
-- TOC entry 1917 (class 1255 OID 17270)
-- Dependencies: 5396 14
-- Name: peoplemoderation_insert_peoplemoderation(character varying, character varying, character varying, character varying, date, numeric, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, date, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION peoplemoderation_insert_peoplemoderation(pfirstname character varying, plastname character varying, pmiddlename character varying, puserpasssword character varying, pbirthday date, psex numeric, pkladr character, phouse character varying, pbuilding character varying, pflat character varying, ptelsot character varying, pemail character varying, pinsurance_ser character varying, pinsurance_num character varying, pinsurance_begindate date, pinsurance_enddate date, pinsurance_company character varying, pinsurance_pay_type character varying, pip character varying, puserlogin character varying, ptelhome character varying, pregion character varying, paddrstr character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID     MIR.PEOPLEMODERATION.OID%TYPE;
    V_ADDRESS MIR.ADDRESSEX.OID%TYPE;
  BEGIN
    V_OID     := MIR.NEW_UUID();
    V_ADDRESS := MIR.ADDR_INSERT_ADDR(PHOUSE, PBUILDING, PFLAT, PKLADR, PADDRSTR);
    INSERT INTO MIR.PEOPLEMODERATION
      (OID,
       FIRSTNAME,
       LASTNAME,
       MIDDLENAME,
       USERPASSSWORD,
       BIRTHDAY,
       SEX,
       INSURANCE_SER,
       INSURANCE_NUM,
       ADR,
       TELSOT,
       EMAIL,
       INSURANCE_BEGINDATE,
       INSURANCE_ENDDATE,
       INSURANCE_COMPANY,
       insurance_pay_type,
       IP,
       USERLOGIN,
       TELHOME,
       REGION)
    VALUES
      (V_OID,
       PFIRSTNAME,
       PLASTNAME,
       PMIDDLENAME,
       PUSERPASSSWORD,
       PBIRTHDAY,
       PSEX,
       PINSURANCE_SER,
       PINSURANCE_NUM,
       V_ADDRESS,
       PTELSOT,
       PEMAIL,
       PINSURANCE_BEGINDATE,
       PINSURANCE_ENDDATE,
       PINSURANCE_COMPANY,
       pinsurance_pay_type,
       PIP,
       PUSERLOGIN,
       PTELHOME,
       PREGION);
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.peoplemoderation_insert_peoplemoderation(pfirstname character varying, plastname character varying, pmiddlename character varying, puserpasssword character varying, pbirthday date, psex numeric, pkladr character, phouse character varying, pbuilding character varying, pflat character varying, ptelsot character varying, pemail character varying, pinsurance_ser character varying, pinsurance_num character varying, pinsurance_begindate date, pinsurance_enddate date, pinsurance_company character varying, pinsurance_pay_type character varying, pip character varying, puserlogin character varying, ptelhome character varying, pregion character varying, paddrstr character varying) OWNER TO postgres;

--
-- TOC entry 1919 (class 1255 OID 17271)
-- Dependencies: 5396 14
-- Name: pkg_insurance_check_number_polis_enp(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_insurance_check_number_polis_enp(pnumber character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
declare
  LEN INT;
  snumb_odd VARCHAR;
  snumb_even VARCHAR;
  n INT;
  nlast INT;
  nsum INT;
BEGIN
  -- проверка контрольного числа номера ЕНП страхового полиса                                             
  IF (PNUMBER IS NULL) OR LENGTH(PNUMBER)<>16 THEN
    RETURN 0;
    ELSE
    snumb_odd ='''';
    snumb_even ='''';
    nlast:= SUBSTR(cast(PNUMBER as VARCHAR), LENGTH(PNUMBER), 1); -- контрольное число
    LEN:=1;
    -- четные\нечетные
    WHILE LEN <= LENGTH(PNUMBER)-1
    LOOP
      n := cast(SUBSTR((PNUMBER), LEN, 1) as numeric);
      IF TRUNC ( n /2 ) = CAST(n AS DEC(12,4))/2 THEN
        snumb_even:=snumb_even||cast(n as VARCHAR);
        ELSE
        snumb_odd:=snumb_odd||cast(n as VARCHAR);
      END IF ;
      LEN:=LEN+1;
    END LOOP;
    --  итоговое число snumb_even
    snumb_odd:=cast((cast(snumb_odd as numeric)*2 )as VARCHAR);
    snumb_even:=snumb_even||snumb_odd;
    --  сумма чисел итогового числа nsum
    LEN:=1;
    nsum:=0;
    WHILE LEN <= LENGTH(snumb_even)
    LOOP
      n := cast(SUBSTR(cast(snumb_even as VARCHAR), LEN, 1) as numeric);
      nsum:=nsum+n;
      LEN:=LEN  +1;
    END LOOP;
    -- число для вычисления разницы len
    LEN:=cast(SUBSTR(cast(nsum as VARCHAR), 1, 1) as numeric)*10;
    IF LEN<nsum THEN
      LEN:=LEN+10;
    END IF;
    LEN:=LEN-nsum;
    -- DBMS_OUTPUT.PUT_LINE( ''Control number = ''|| len|| ''  Last number = ''||nlast );
    IF nlast = LEN THEN
      RETURN 1;
      ELSE
      RETURN 0;
    END IF;
  END IF;

 EXCEPTION WHEN OTHERS THEN
	 RETURN 0;


END;
';


ALTER FUNCTION mir.pkg_insurance_check_number_polis_enp(pnumber character varying) OWNER TO postgres;

--
-- TOC entry 1920 (class 1255 OID 17272)
-- Dependencies: 5396 14
-- Name: pkg_insurance_get_people_polis_sernum(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_insurance_get_people_polis_sernum(ppeople character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare 	
	res varchar;
BEGIN
SELECT max(TRIM(coalesce(SER, '''')) || TRIM(coalesce(NUM,'''')))
  INTO res
  FROM MIR.INSURANCE 
  WHERE PEOPLE = PPEOPLE
        AND STATE = 1;

  RETURN res;
END;
';


ALTER FUNCTION mir.pkg_insurance_get_people_polis_sernum(ppeople character) OWNER TO postgres;

--
-- TOC entry 1921 (class 1255 OID 17273)
-- Dependencies: 5396 14
-- Name: pkg_people_info_get_people_shortfio(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_people_info_get_people_shortfio(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare res varchar;
BEGIN
  SELECT coalesce(P.LASTNAME, '''') || '' '' || coalesce(SUBSTR(P.FIRSTNAME, 1, 1) || ''.'', '''') || coalesce(SUBSTR(P.MIDDLENAME, 1, 1) || ''.'', '''') AS FIO
  INTO res
  FROM MIR.PEOPLE P
  WHERE OID = POID;

  RETURN res;
END;
';


ALTER FUNCTION mir.pkg_people_info_get_people_shortfio(poid character) OWNER TO postgres;

--
-- TOC entry 1922 (class 1255 OID 17274)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_dictionary(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_dictionary(poid_their character varying, pname_their character varying, psyn_their character varying, pclient_info character varying) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_DICTIONARY
  SET NAME_THEIR = PNAME_THEIR
  where OID_THEIR = POID_THEIR
        AND upper(SYN_THEIR) = upper(PSYN_THEIR)
        AND CLIENT_INFO = PCLIENT_INFO returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT INTO MIR.WEB_DICTIONARY(OID_THEIR, SYN_THEIR, CLIENT_INFO, NAME_THEIR, FD_DATE)
  VALUES (POID_THEIR, PSYN_THEIR, PCLIENT_INFO, PNAME_THEIR, now());
end if;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_dictionary(poid_their character varying, pname_their character varying, psyn_their character varying, pclient_info character varying) OWNER TO postgres;

--
-- TOC entry 1923 (class 1255 OID 17275)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_dictionary_link(character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_dictionary_link(poid_their character varying, poid_their_parent character varying, psyn_their character varying, psyn_their_parent character varying, pname_their character varying, pname_their_parent character varying, pclient_info character varying) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_DICTIONARY_LINK
  SET NAME_THEIR = PNAME_THEIR,
      NAME_THEIR_PARENT = PNAME_THEIR_PARENT
  where OID_THEIR = POID_THEIR
        AND OID_THEIR_PARENT = POID_THEIR_PARENT
        AND upper(SYN_THEIR) = upper(PSYN_THEIR)
        AND upper(SYN_THEIR_PARENT) = upper(PSYN_THEIR_PARENT)
        AND CLIENT_INFO = PCLIENT_INFO returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT INTO MIR.WEB_DICTIONARY_LINK(OID_THEIR, OID_THEIR_PARENT, SYN_THEIR, SYN_THEIR_PARENT, NAME_THEIR, NAME_THEIR_PARENT, CLIENT_INFO, FD_DATE)
  VALUES (POID_THEIR, POID_THEIR_PARENT, PSYN_THEIR, PSYN_THEIR_PARENT, PNAME_THEIR, PNAME_THEIR_PARENT, PCLIENT_INFO, now());
end if;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_dictionary_link(poid_their character varying, poid_their_parent character varying, psyn_their character varying, psyn_their_parent character varying, pname_their character varying, pname_their_parent character varying, pclient_info character varying) OWNER TO postgres;

--
-- TOC entry 1924 (class 1255 OID 17276)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_schedule_fs(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_schedule_fs(poid character varying, plocation_id character varying, prule_id character varying, pslot_id character varying, pclient_id character varying) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_SCHEDULE_FS
  SET LOCATION_ID = PLOCATION_ID,
      RULE_ID = PRULE_ID,
      SLOT_ID = PSLOT_ID,
      client_id = pclient_id
  where oid = poid returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  insert into MIR.WEB_SCHEDULE_FS(OID, LOCATION_ID, RULE_ID, SLOT_ID, client_id, FD_DATE)
  VALUES (POID, PLOCATION_ID, PRULE_ID, PSLOT_ID, pclient_id, now());
end if;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_schedule_fs(poid character varying, plocation_id character varying, prule_id character varying, pslot_id character varying, pclient_id character varying) OWNER TO postgres;

--
-- TOC entry 1925 (class 1255 OID 17277)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_schedule_fs_reg(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_schedule_fs_reg(poid character varying, plocation_id character varying, prule_id character varying, pslot_id character varying, pclient_id character varying) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.web_schedule_fs_reg
  SET LOCATION_ID = PLOCATION_ID,
      RULE_ID = PRULE_ID,
      SLOT_ID = PSLOT_ID,
      client_id = pclient_id
  where oid = poid returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  insert into MIR.web_schedule_fs_reg(OID, LOCATION_ID, RULE_ID, SLOT_ID, client_id, FD_DATE)
  VALUES (POID, PLOCATION_ID, PRULE_ID, PSLOT_ID, pclient_id, now());
end if;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_schedule_fs_reg(poid character varying, plocation_id character varying, prule_id character varying, pslot_id character varying, pclient_id character varying) OWNER TO postgres;

--
-- TOC entry 1926 (class 1255 OID 17278)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_schedule_rule(character varying, character varying, character varying, character varying, numeric, date, date, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_schedule_rule(psysuser character varying, pservice_type character varying, pcabinet character varying, ppayment_method character varying, pduration numeric, pstart_date date, pend_date date, plocation_id character varying, prule_id character varying, prule_factor character varying) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_SCHEDULE_RULE
  SET LOCATION_ID = PLOCATION_ID,
      RULE_ID = PRULE_ID,
      RULE_FACTOR = PRULE_FACTOR,
      END_DATE = coalesce(PEND_DATE, END_DATE)
  where SYSUSER = PSYSUSER
        AND SERVICE_TYPE = PSERVICE_TYPE
        AND CABINET = PCABINET
        AND PAYMENT_METHOD = PPAYMENT_METHOD
        AND DURATION = PDURATION
        AND START_DATE = PSTART_DATE returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT into mir.WEB_SCHEDULE_RULE(SYSUSER, SERVICE_TYPE, CABINET, PAYMENT_METHOD, DURATION, START_DATE, END_DATE, LOCATION_ID, RULE_ID, FD_DATE, RULE_FACTOR)
  VALUES (PSYSUSER, PSERVICE_TYPE, PCABINET, PPAYMENT_METHOD, PDURATION, PSTART_DATE, PEND_DATE, PLOCATION_ID, PRULE_ID, now(), PRULE_FACTOR);

end if;

END
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_schedule_rule(psysuser character varying, pservice_type character varying, pcabinet character varying, ppayment_method character varying, pduration numeric, pstart_date date, pend_date date, plocation_id character varying, prule_id character varying, prule_factor character varying) OWNER TO postgres;

--
-- TOC entry 1928 (class 1255 OID 17279)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_add_web_schedule_rule_reg(character varying, character varying, character varying, character varying, numeric, date, date, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_add_web_schedule_rule_reg(psysuser character varying, pservice_type character varying, pcabinet character varying, ppayment_method character varying, pduration numeric, pstart_date date, pend_date date, plocation_id character varying, prule_id character varying, prule_factor character varying) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.web_schedule_rule_reg
  SET LOCATION_ID = PLOCATION_ID,
      RULE_ID = PRULE_ID,
      RULE_FACTOR = PRULE_FACTOR,
      END_DATE = coalesce(PEND_DATE, END_DATE)
  where SYSUSER = PSYSUSER
        AND SERVICE_TYPE = PSERVICE_TYPE
        AND CABINET = PCABINET
        AND PAYMENT_METHOD = PPAYMENT_METHOD
        AND DURATION = PDURATION
        AND START_DATE = PSTART_DATE returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT into mir.web_schedule_rule_reg(SYSUSER, SERVICE_TYPE, CABINET, PAYMENT_METHOD, DURATION, START_DATE, END_DATE, LOCATION_ID, RULE_ID, FD_DATE, RULE_FACTOR)
  VALUES (PSYSUSER, PSERVICE_TYPE, PCABINET, PPAYMENT_METHOD, PDURATION, PSTART_DATE, PEND_DATE, PLOCATION_ID, PRULE_ID, now(), PRULE_FACTOR);

end if;

END
';


ALTER FUNCTION mir.pkg_web_dictionary_add_web_schedule_rule_reg(psysuser character varying, pservice_type character varying, pcabinet character varying, ppayment_method character varying, pduration numeric, pstart_date date, pend_date date, plocation_id character varying, prule_id character varying, prule_factor character varying) OWNER TO postgres;

--
-- TOC entry 1929 (class 1255 OID 17280)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_get_their_oid(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_get_their_oid(poid_our character varying, psyn_our character varying, psyn_their character varying, pclient_info character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare res varchar;
BEGIN
  SELECT max(wd.OID_THEIR)
  INTO res
  FROM MIR.WEB_DICTIONARY wd
  WHERE wd.oid_our = POID_OUR
        and upper(wd.syn_our) = upper(PSYN_OUR)
        and upper(wd.syn_their) = upper(PSYN_THEIR)
        and wd.client_info = PCLIENT_INFO;

  RETURN res;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_get_their_oid(poid_our character varying, psyn_our character varying, psyn_their character varying, pclient_info character varying) OWNER TO postgres;

--
-- TOC entry 1930 (class 1255 OID 17281)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_get_their_parent_oid(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_get_their_parent_oid(poid_their character varying, psyn_their character varying, psyn_their_parent character varying, pclient_info character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare res varchar;
BEGIN
  SELECT max(wdl.oid_their_parent)
  INTO res
  FROM mir.web_dictionary_link wdl
  WHERE wdl.oid_their = POID_THEIR
        and upper(wdl.syn_their) = upper(PSYN_THEIR)
        and upper(wdl.syn_their_parent) = upper(PSYN_THEIR_PARENT)
        and wdl.client_info = PCLIENT_INFO;

  RETURN res;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_get_their_parent_oid(poid_their character varying, psyn_their character varying, psyn_their_parent character varying, pclient_info character varying) OWNER TO postgres;

--
-- TOC entry 1931 (class 1255 OID 17282)
-- Dependencies: 5396 14
-- Name: pkg_web_dictionary_update_web_dictionary(character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_dictionary_update_web_dictionary(poid_their character varying, pname_their character varying, psyn_their character varying, pclient_info character varying, poid_our character varying, pname_our character varying, psyn_our character varying) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_DICTIONARY
  SET NAME_THEIR = coalesce(PNAME_THEIR, NAME_THEIR),
      OID_OUR = POID_OUR,
      NAME_OUR = PNAME_OUR,
      SYN_OUR = PSYN_OUR,
      FD_DATE = now()
  where OID_THEIR = POID_THEIR
        AND upper(SYN_THEIR) = upper(PSYN_THEIR)
        AND CLIENT_INFO = PCLIENT_INFO returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT INTO MIR.WEB_DICTIONARY(OID_THEIR, SYN_THEIR, CLIENT_INFO, NAME_THEIR, OID_OUR, NAME_OUR, SYN_OUR, FD_DATE)
  VALUES (POID_THEIR, PSYN_THEIR, PCLIENT_INFO, PNAME_THEIR, POID_OUR, PNAME_OUR, PSYN_OUR, now());
end if;

END;
';


ALTER FUNCTION mir.pkg_web_dictionary_update_web_dictionary(poid_their character varying, pname_their character varying, psyn_their character varying, pclient_info character varying, poid_our character varying, pname_our character varying, psyn_our character varying) OWNER TO postgres;

--
-- TOC entry 1932 (class 1255 OID 17283)
-- Dependencies: 5396 14
-- Name: pkg_web_service_add_buffer_transfer(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_service_add_buffer_transfer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying DEFAULT NULL::character varying) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.WEB_BUFFER_TRANSFER
  SET REGIST_DATE = now(),
      LPU = PLPU,
      UPLOAD_DATE = null
  where TABLE_NAME = PTABLE_NAME
        AND KEY_FIELD_VALUE = PKEY_FIELD_VALUE
        AND ACTION = PACTION returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT into mir.WEB_BUFFER_TRANSFER(REGIST_DATE, TABLE_NAME, KEY_FIELD_VALUE, ACTION, LPU)
  VALUES (now(), PTABLE_NAME, PKEY_FIELD_VALUE, PACTION, PLPU);
end if;

END
';


ALTER FUNCTION mir.pkg_web_service_add_buffer_transfer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying) OWNER TO postgres;

--
-- TOC entry 1933 (class 1255 OID 17284)
-- Dependencies: 5396 14
-- Name: pkg_web_service_add_buffer_transfer_fer(character varying, character varying, character varying, character varying, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_service_add_buffer_transfer_fer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying DEFAULT NULL::character varying, pstarton timestamp without time zone DEFAULT NULL::timestamp without time zone) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE mir.web_buffer_transfer_fer
  SET REGIST_DATE = now(),
      LPU = PLPU,
      UPLOAD_DATE = null,
      schedule_starton = pstarton
  where TABLE_NAME = PTABLE_NAME
        AND KEY_FIELD_VALUE = PKEY_FIELD_VALUE
        AND ACTION = PACTION returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT into mir.web_buffer_transfer_fer(REGIST_DATE, TABLE_NAME, KEY_FIELD_VALUE, ACTION, LPU, schedule_starton)
  VALUES (now(), PTABLE_NAME, PKEY_FIELD_VALUE, PACTION, PLPU, pstarton);
end if;

END
';


ALTER FUNCTION mir.pkg_web_service_add_buffer_transfer_fer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying, pstarton timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1934 (class 1255 OID 17285)
-- Dependencies: 5396 14
-- Name: pkg_web_service_clear_web_buffer_transfer_fer(integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_service_clear_web_buffer_transfer_fer(days integer) RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  i INTEGER;
  coun INTEGER;
  res varchar(1000);
  interv varchar;
BEGIN
  i        =0;
  coun     =10;

  WHILE coun>0
  LOOP
    DELETE
    FROM MIR.web_buffer_transfer_fer
    WHERE oid = any (array
          (
            SELECT oid
            FROM MIR.web_buffer_transfer_fer
            WHERE 1 = 1
                  AND (web_buffer_transfer_fer.regist_date < now() - days * interval ''3 day''
                  OR web_buffer_transfer_fer.upload_date < now() - days * interval ''1 day'')
                  and action in (''DELETE'', ''PEOPLE'')
            limit 1000
          ));
    ------------

    SELECT COUNT(*)
    FROM (
           SELECT *
           INTO coun
           FROM MIR.web_buffer_transfer_fer
           WHERE 1 = 1
                 AND (web_buffer_transfer_fer.regist_date < now() - days * interval ''3 day''
                 OR web_buffer_transfer_fer.upload_date < now() - days * interval ''1 day'')
                 and action in (''DELETE'', ''PEOPLE'')
           limit 3
         ) t;

    res =  ''=============>>>>>>>  i=''|| i|| ''   count='' ||  coun;
    return NEXT res;

    i:= i+1;
  END LOOP;

END;
';


ALTER FUNCTION mir.pkg_web_service_clear_web_buffer_transfer_fer(days integer) OWNER TO postgres;

--
-- TOC entry 1938 (class 1255 OID 17286)
-- Dependencies: 5396 14
-- Name: pkg_web_service_set_upload_date_buffer_fer(character varying, character varying, character varying, character varying, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION pkg_web_service_set_upload_date_buffer_fer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying DEFAULT NULL::character varying, pupload_date timestamp without time zone DEFAULT now()) RETURNS SETOF void
    LANGUAGE plpgsql
    AS '
declare res record;
BEGIN
  for res in
  UPDATE MIR.web_buffer_transfer_fer
  SET REGIST_DATE = coalesce(REGIST_DATE, now()),
      LPU = coalesce(PLPU, LPU),
      UPLOAD_DATE = PUPLOAD_DATE
  where TABLE_NAME = PTABLE_NAME
        AND KEY_FIELD_VALUE = PKEY_FIELD_VALUE
        AND ACTION = PACTION returning *
loop
  return next res;
end loop;
-------------------
if res is null then
  INSERT INTO MIR.web_buffer_transfer_fer(REGIST_DATE, TABLE_NAME, KEY_FIELD_VALUE, ACTION, LPU, UPLOAD_DATE)
  VALUES (now(), PTABLE_NAME, PKEY_FIELD_VALUE, PACTION, PLPU, PUPLOAD_DATE);
end if;

END;
';


ALTER FUNCTION mir.pkg_web_service_set_upload_date_buffer_fer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying, pupload_date timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1939 (class 1255 OID 17287)
-- Dependencies: 5396 14
-- Name: poll_delete_answer(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_delete_answer(pansweroid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.pollanswer a where a.oid = pansweroid;
  end;

';


ALTER FUNCTION mir.poll_delete_answer(pansweroid character) OWNER TO postgres;

--
-- TOC entry 1940 (class 1255 OID 17288)
-- Dependencies: 5396 14
-- Name: poll_delete_poll(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_delete_poll(ppolloid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.pollanswer a where a.poll = ppolloid;
    delete from mir.poll p where p.oid = ppolloid;
  end;

';


ALTER FUNCTION mir.poll_delete_poll(ppolloid character) OWNER TO postgres;

--
-- TOC entry 1941 (class 1255 OID 17289)
-- Dependencies: 5396 14
-- Name: poll_insert_poll(character varying, date, date, numeric, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_insert_poll(pname character varying, pstarton date, pendon date, pmultichoice numeric, pregion character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
    v_oid mir.poll.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.poll
      (oid, name, starton, endon, multichoice, region)
    values
      (v_oid, pname, pstarton, pendon, pmultichoice, pregion);
    return v_oid;
  end;

';


ALTER FUNCTION mir.poll_insert_poll(pname character varying, pstarton date, pendon date, pmultichoice numeric, pregion character) OWNER TO postgres;

--
-- TOC entry 1942 (class 1255 OID 17290)
-- Dependencies: 5396 14
-- Name: poll_insert_pollanswer(character varying, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_insert_pollanswer(pname character varying, ppoll character, porderby numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
    declare
    v_oid mir.pollanswer.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.pollanswer
      (oid, name, poll, orderby)
    values
      (v_oid, pname, ppoll, porderby);
    return v_oid;
  end;

';


ALTER FUNCTION mir.poll_insert_pollanswer(pname character varying, ppoll character, porderby numeric) OWNER TO postgres;

--
-- TOC entry 1943 (class 1255 OID 17291)
-- Dependencies: 5396 14
-- Name: poll_insert_pollanswer_people(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_insert_pollanswer_people(ppollanswer character, ppeople character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    insert into mir.pollanswer_people
      (pollanswer, people)
    values
      (ppollanswer, ppeople);
  end;

';


ALTER FUNCTION mir.poll_insert_pollanswer_people(ppollanswer character, ppeople character) OWNER TO postgres;

--
-- TOC entry 1944 (class 1255 OID 17292)
-- Dependencies: 5396 14
-- Name: poll_set_show_poll(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_set_show_poll(pregionoid character, pshowpoll numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.vregion 
       set showpoll = pshowpoll
     where oid = pregionoid;
  end;

';


ALTER FUNCTION mir.poll_set_show_poll(pregionoid character, pshowpoll numeric) OWNER TO postgres;

--
-- TOC entry 1945 (class 1255 OID 17293)
-- Dependencies: 5396 14
-- Name: poll_update_poll(character, character varying, date, date, numeric, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_update_poll(poid character, pname character varying, pstarton date, pendon date, pmultichoice numeric, pregion character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.poll 
       set name        = pname,
           starton     = pstarton,
           endon       = pendon,
           multichoice = pmultichoice,
           region      = pregion
     where oid = poid;
  end;

';


ALTER FUNCTION mir.poll_update_poll(poid character, pname character varying, pstarton date, pendon date, pmultichoice numeric, pregion character) OWNER TO postgres;

--
-- TOC entry 1946 (class 1255 OID 17294)
-- Dependencies: 5396 14
-- Name: poll_update_pollanswer(character, character varying, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION poll_update_pollanswer(poid character, pname character varying, ppoll character, porderby numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.pollanswer set name = pname, poll = ppoll, orderby = porderby where oid = poid;
  end;

';


ALTER FUNCTION mir.poll_update_pollanswer(poid character, pname character varying, ppoll character, porderby numeric) OWNER TO postgres;

--
-- TOC entry 1947 (class 1255 OID 17295)
-- Dependencies: 5396 14
-- Name: postgres_checklogin(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION postgres_checklogin(plogin character, md5pass character, pass character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    ISLOG MIR.PEOPLE.OID%TYPE;
    WASLOG MIR.PEOPLE.waslogin%TYPE;
  BEGIN
   
    SELECT P.OID FROM MIR.PEOPLE p 
    INTO ISLOG
    
    WHERE p.login = plogin
    AND p."password" = md5pass;
    
    IF ISLOG is NOT NULL THEN
    	
        RETURN ISLOG;
    
    ELSE
    
    	SELECT P.OID, P.waslogin  FROM MIR.PEOPLE p
        INTO ISLOG, WASLOG
        INNER JOIN MIR.INSURANCE ins ON ins.people = p.oid
        WHERE ins.state = 1
        	  AND lower(p.lastname) = pass
              AND upper(COALESCE(ins.ser,'''')||COALESCE(ins.num,'''')) = upper(plogin);
              
        IF (ISLOG is NOT NULL) THEN
    	
        	IF (WASLOG is NULL) THEN
                UPDATE MIR.PEOPLE
                SET login = plogin,
                    password = md5pass
                WHERE OID = ISLOG;
                
                RETURN ISLOG;
        	END IF;
    	END IF;
    
    END IF;
    
    
    
    RETURN NULL;
   
  END;
';


ALTER FUNCTION mir.postgres_checklogin(plogin character, md5pass character, pass character) OWNER TO postgres;

--
-- TOC entry 1330 (class 1255 OID 60698)
-- Dependencies: 5396 14
-- Name: presc_dicom_wl_buffer_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION presc_dicom_wl_buffer_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
  DECLARE
    v_id CHAR(36);
    v_modality varchar(10);
    v_dicom_pr varchar(1);
    v_studydescription varchar;
    v_firstname varchar(100);
    v_middlename varchar(100);
    v_lastname varchar(100);
    v_birthday DATE;
    v_sex NUMERIC;
    v_patientid varchar;
    vSexWL varchar(1);
    vPatientName varchar(200);
    vPatientNameENG varchar(200);
    vStudyUID varchar(100) ;
    vAccessionNumber varchar(100) ;
    vpresctypeoid CHAR(36);
    vpeopleoid CHAR(36);
    c record;
  BEGIN
    v_dicom_pr = ''0'';
    -- цикл по курсору
    -- тип назначения
    for c in ( select nvl(p2.dicom_pr,''0'') as dicom_pr,
      p2.modality, p2.name as studydescription,
      pl.firstname, pl.middlename, pl.lastname,
      pl.birthday, pl.sex,
      mir.mdoc_get_num(md.id) as patientid,
      p2.oid as presctypeoid,
      pl.oid as peopleoid
      from mir.presctype p2, mir.mdoc md, mir.people pl
      where p2.oid=new.presctype_id
      and md.id=new.mdoc_id and md.people_id=pl.oid )
    loop
      v_dicom_pr = c.dicom_pr ;
      v_modality = c.modality ;
      v_studydescription = c.studydescription ;
      v_firstname = c.firstname ;
      v_middlename = c.middlename ;
      v_lastname = c.lastname ;
      v_birthday = c.birthday ;
      v_sex = c.sex ;
      v_patientid = c.patientid ;
      vpresctypeoid = c.presctypeoid ;
      vpeopleoid = c.peopleoid ;
    end loop;
    --
    IF ((TG_OP = ''INSERT'') /*and (v_dicom_pr=''1'')*/) THEN
      v_id=new.id;

      vPatientName = v_firstname || '' '' || v_middlename || '' '' || v_lastname;
      vPatientNameENG = upper( replace(replace(replace(replace(
                        replace(replace(replace(replace(replace(replace(replace(replace(
                        replace(replace( translate(upper(vPatientName),
                        ''абвгдезийклмнопрстуфхцъыьэАБВГДЕЗИЙКЛМНОПРСТУФХЦЪЫЬЭ'',
                        ''abvgdezijklmnoprstufhcjijeABVGDEZIJKLMNOPRSTUFHCJIJE''),
                        ''ё'', ''yo''),''ж'', ''zh''),''ч'', ''ch''),''ш'', ''sh''),''щ'', ''sch''),''ю'', ''yu''),
                        ''я'', ''ya''),''Ё'', ''Yo''),''Ж'', ''Zh''),''Ч'', ''Ch''),''Ш'', ''Sh''),''Щ'', ''Sch''),
                        ''Ю'', ''Yu''),''Я'', ''Ya'') );
      if (v_sex = ''2'')
      then
          vSexWL = ''M'';
      else
          vSexWL = ''F'';
      end if;
      select trim(to_char(count(1)+1,''9999999999999'')) into vAccessionNumber
		from mir.presc t where t.create_dt = date_trunc( ''day'' , now() );
      vAccessionNumber = to_char(now(),''YY'') ||  to_char(now(),''MM'') ||
                          to_char(now(),''DD'') || ''/'' ||
                          vAccessionNumber;
      vStudyUID = to_char(now(),''YYYY'') || ''.''  || to_char(now(),''MM'') || ''.'' ||
                          to_char(now(),''DD'') || ''.'' || to_char(now(),''HH24'') || ''.'' ||
                          to_char(now(),''MI'') || ''.'' || to_char(now(),''SS'') || ''.'' ||
                          to_char(now(),''MS'') || ''.'' || to_char(now(),''US'') || trim(to_char(random(),''9.9999999999''));

      new.accessionnumber = vAccessionNumber;
      insert into mir.dicom_wl_buffer (
        studydescription, runbeg_dt, studyuid, accessionnumber,
        stationaetitle, modality, stationname, firstname,
        middlename, lastname, birthday, sex,
        patientid, patientname, patientnameeng, faction,
        prescid, presctypeid, patientoid, systext
      ) values (
        v_studydescription,
        new.runbeg_dt,
        vstudyuid,
        vAccessionNumber,
        '''', -- stationaetitle VARCHAR(100),
        v_modality,
        '''', -- stationname VARCHAR(100),
        v_firstname,
        v_middlename,
        v_lastname,
        v_birthday,
        v_sex,
        v_patientid,
        vPatientName,
        vPatientNameENG,
        ''trigger presc_dicom_wl_buffer_tr on mir.presc ''||TG_OP||'' action'',
        new.id,
        vpresctypeoid,
        vpeopleoid,
        '''' -- systext
      );
    ELSIF ((TG_OP = ''UPDATE'') and (v_dicom_pr=''1'')) THEN
      if (new.accessionnumber<>old.accessionnumber) then
        update mir.dicom_wl_buffer t
          set t.accessionnumber=new.accessionnumber
        where t.prescid=new.id;
      end if;
    ELSIF ((TG_OP = ''DELETE'') and (v_dicom_pr=''1'')) THEN
      delete from mir.dicom_wl_buffer t
      where t.prescid=new.id;
    end if;
    return NEW;
  EXCEPTION
  WHEN OTHERS THEN
    begin
      insert into mir.dicom_wl_log (
          studydescription,runbeg_dt,studyuid,
          accessionnumber,stationaetitle,modality,stationname,
          firstname,middlename,lastname,birthday,
          sex,patientid,patientname,patientnameeng,
          faction,systext,errorcode,
          errortext,prescid,presctypeid,patientoid
        ) values (
          v_studydescription,
          new.runbeg_dt,
          vstudyuid,
          vAccessionNumber,
          '''', -- stationaetitle VARCHAR(100),
          v_modality,
          '''', -- stationname VARCHAR(100),
          v_firstname,
          v_middlename,
          v_lastname,
          v_birthday,
          v_sex,
          v_patientid,
          vPatientName,
          vPatientNameENG,
          ''trigger presc_dicom_wl_buffer_tr on mir.presc ''||TG_OP||'' action'',  -- action VARCHAR(100)
          '''', -- systext VARCHAR(100),
          -1, -- errorcode NUMERIC,
          SQLERRM, -- errortext VARCHAR(100),
          new.id,
          vpresctypeoid,
          vpeopleoid
        );
      return NEW;
    exception when others then
      return NEW;
    end;
  END;
';


ALTER FUNCTION mir.presc_dicom_wl_buffer_tr() OWNER TO postgres;

--
-- TOC entry 1948 (class 1255 OID 17296)
-- Dependencies: 5396 14
-- Name: presc_schedule_insert(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION presc_schedule_insert(ppresc_id character, pshedule_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID mir.presc_schedule.id%type;
BEGIN
  V_OID := MIR.new_uuid();
    
  insert into mir.presc_schedule( id, presc_id, shedule_id )
  values ( V_OID, ppresc_id, pshedule_id );
    
  RETURN V_OID;
END;
';


ALTER FUNCTION mir.presc_schedule_insert(ppresc_id character, pshedule_id character) OWNER TO postgres;

--
-- TOC entry 1952 (class 1255 OID 17297)
-- Dependencies: 5396 14
-- Name: presc_trigger_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION presc_trigger_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_count INTEGER;
  v_sign_dt TIMESTAMP;
  v_visit_id char(36);
  v_presc_id char(36);
  v_prunbeg_dt TIMESTAMP;
  v_mdoc_id char(36);
  v_oid_ibmdoc char(36);
  v_presctype_name varchar(500);
  v_runempfio varchar(500);
BEGIN
	v_sign_dt:=new.sign_dt;
    v_visit_id:=new.visit_id;
    v_presc_id:=new.id;
    v_prunbeg_dt:=new.prunbeg_dt;
    v_mdoc_id:=new.mdoc_id;

select name into v_presctype_name from 
 mir.presctype where presctype.oid=new.presctype_id;   
 
    -- Ищем в таблице ib_mdoc запись, если нет то создаем , если есть то update
    
    select mk.oid into v_oid_ibmdoc  from mir.ib_mkab mk 
  where mk.presc_id=v_presc_id and mk.mdoc_id=v_mdoc_id;
   
  
SELECT  mir.emp_get_empfio_short(new.runemp_id) into v_runempfio;
  
    
    if (v_oid_ibmdoc is NULL) then
  v_oid_ibmdoc:=mir.new_uuid();
  insert into mir.ib_mkab(oid, sign_dt, visit_id, presc_id, prunbeg_dt, mdoc_id,presctype_name,runempfio)
  values (v_oid_ibmdoc,v_sign_dt,v_visit_id,v_presc_id,v_prunbeg_dt,v_mdoc_id,v_presctype_name,v_runempfio );  
  ELSE
  
  update mir.ib_mkab  
  set sign_dt = v_sign_dt, 
  visit_id = v_visit_id, 
  presc_id = v_presc_id,
  prunbeg_dt = v_prunbeg_dt,
  mdoc_id=v_mdoc_id,
presctype_name= v_presctype_name,
runempfio=v_runempfio

  where oid = v_oid_ibmdoc;
  end if;
-- v_oid_work := mir.new_uuid();
IF(NEW.presc_state_id = mir.cn_presc_state_sign()) then
perform mir.export_presc_to_portal(v_presc_id); 
end if;
  return new;
END;
';


ALTER FUNCTION mir.presc_trigger_after() OWNER TO postgres;

--
-- TOC entry 1953 (class 1255 OID 17298)
-- Dependencies: 5396 14
-- Name: presctype_exist_in_presctypefolder(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION presctype_exist_in_presctypefolder(presctype_id character varying, presctype_folder_parent_id character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS '
DECLARE
    RowCount INTEGER;
    resultFlag BOOLEAN;
BEGIN
  RowCount := 0;
                          
  RowCount = (
  				Select count (pt.*)
                from mir.presctype pt 
                where upper(pt.oid) = upper(presctype_id)
                      and pt.presctypefolder_id in (
                                                    WITH RECURSIVE recursetree(id, parent_id) AS (
                                                        SELECT pf.id, pf.parent_id FROM mir.presctypefolder pf WHERE upper(pf.id) = upper(presctype_folder_parent_id)
                                                      UNION
                                                        SELECT pf.id, pf.parent_id
                                                        FROM mir.presctypefolder pf
                                                        JOIN recursetree rt ON rt.id = pf.parent_id
                                                      )
                                                    SELECT id FROM recursetree  
                                                    )
                );
	resultFlag := (RowCount > 0);
    RETURN resultFlag;     
END;
';


ALTER FUNCTION mir.presctype_exist_in_presctypefolder(presctype_id character varying, presctype_folder_parent_id character varying) OWNER TO postgres;

--
-- TOC entry 1954 (class 1255 OID 17299)
-- Dependencies: 5396 14
-- Name: presctype_get_name(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION presctype_get_name(ppresctypeid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    v_res mir.presctype.name%type;
  begin
    select max(name)
    into v_res
    from mir.presctype
    where oid = ppresctypeid;
    
    return v_res;
  end;
  ';


ALTER FUNCTION mir.presctype_get_name(ppresctypeid character) OWNER TO postgres;

--
-- TOC entry 1955 (class 1255 OID 17300)
-- Dependencies: 5396 14
-- Name: protocol_tr_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION protocol_tr_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_content TEXT;
  v_sign_dt TIMESTAMP;
  v_visit_id char(36);
  v_presc_id char(36);
  v_prunbeg_dt TIMESTAMP;
  v_mdoc_id char(36);
  v_oid_ibmdoc char(36);
BEGIN
	v_content :=new.content;
    v_presc_id:=new.presc_id;


    
    select mk.oid into v_oid_ibmdoc  from mir.ib_mkab mk 
    where mk.presc_id=v_presc_id;
 
    select mdoc_id into v_mdoc_id  from mir.presc mk 
    where mk.id=v_presc_id;
   
	 select visit_id into v_visit_id  from mir.presc mk 
    where mk.id=v_presc_id;

  if (v_oid_ibmdoc is NULL) then
  v_oid_ibmdoc:=mir.new_uuid();
  insert into mir.ib_mkab(oid,  visit_id, presc_id,  mdoc_id)
  values (v_oid_ibmdoc,v_visit_id,v_presc_id,v_mdoc_id );  
  ELSE
  
  update mir.ib_mkab  
  set 
  visit_id = v_visit_id, 
  presc_id = v_presc_id,
  mdoc_id=v_mdoc_id,
  protocol_content=v_content
  
  where oid = v_oid_ibmdoc;
  end if;
  
  
   
    
  return new;
END;
';


ALTER FUNCTION mir.protocol_tr_after() OWNER TO postgres;

--
-- TOC entry 1956 (class 1255 OID 17301)
-- Dependencies: 5396 14
-- Name: recipe_get_next_free_number(character, character varying, bigint, bigint); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION recipe_get_next_free_number(plpu character, pser character varying, pstartnum bigint, pendnum bigint) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  resnum BIGINT;
  rec record;
BEGIN
  resnum := null;
  
  for rec in ( select max(r.num) as num
                 from mir.recipe r
                inner join mir.mdoc md
                   on r.mdoc_id = md.id
                where r.ser like pser
                  and r.num between pstartnum and pendnum
             )
  loop 
    if rec.num is not null then
      resnum := rec.num + 1;
      
      if resnum > pendnum then
      resnum := null;
      end if;
    else
      resnum := pstartnum;
    end if;
  end loop;  

  Return resnum;
END;
';


ALTER FUNCTION mir.recipe_get_next_free_number(plpu character, pser character varying, pstartnum bigint, pendnum bigint) OWNER TO postgres;

--
-- TOC entry 1957 (class 1255 OID 17302)
-- Dependencies: 2614 5396 14
-- Name: recursiverestorepresctype(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION recursiverestorepresctype(p_id character varying) RETURNS tkladrspr
    LANGUAGE plpgsql
    AS '
/*
	add Ognev M.V. 22/03/2012 
*/

DECLARE
	r mir.presctypefolder%ROWTYPE;
    c record;
    cc record;
  
BEGIN
	 update mir.presctype set del = 0 where oid = p_id;
	 FOR c IN (SELECT p.presctypefolder_id
                FROM MIR.presctype p
               WHERE p.oid = p_id ) LOOP     
        for cc in (WITH RECURSIVE
                    q AS
                    (
                        SELECT  o.id, o."name", o.parent_id
                        FROM    mir.presctypefolder o
                        WHERE   o.id = c.presctypefolder_id
                        UNION ALL
                        SELECT  op.id, op."name", op.parent_id
                        FROM    mir.presctypefolder op
                        JOIN    q
                        ON      op.id = q.parent_id
                    )
                    SELECT  q.id, q.name, q.parent_id
                    FROM    q) LOOP
        	update mir.presctypefolder set del = 0 where id = cc.id;
        end LOOP;
        
     END LOOP;
     
    return null;
END;
';


ALTER FUNCTION mir.recursiverestorepresctype(p_id character varying) OWNER TO postgres;

--
-- TOC entry 1958 (class 1255 OID 17303)
-- Dependencies: 5396 14
-- Name: regexp_sicklist(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION regexp_sicklist(psubject character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
 begin
 return trim(upper(REGEXP_REPLACE(REGEXP_REPLACE(trim(psubject),''[^[:alnum:],^а-я,^А-Я[:blank:]]'','' '', ''g''),''[[:blank:]]+'','' '', ''g'')));
 end;
';


ALTER FUNCTION mir.regexp_sicklist(psubject character varying) OWNER TO postgres;

--
-- TOC entry 1959 (class 1255 OID 17304)
-- Dependencies: 5396 14
-- Name: required_filds_get_pinfo_filds(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION required_filds_get_pinfo_filds(name character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS '
DECLARE
  nameVal ALIAS FOR name; 
  result NUMERIC;
BEGIN
  SELECT r.required into result FROM mir.pinforequiredfilds r WHERE r.id like nameVal;
  if result is null then result := 0; END IF;
  IF RESULT = 0 THEN RETURN FALSE; ELSE RETURN TRUE; END IF;
END;
';


ALTER FUNCTION mir.required_filds_get_pinfo_filds(name character varying) OWNER TO postgres;

--
-- TOC entry 1911 (class 1255 OID 17305)
-- Dependencies: 5396 14
-- Name: required_filds_set_pinfo_filds(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION required_filds_set_pinfo_filds(names character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
  fildName VARCHAR[];
  inList INTEGER;
  i INTEGER;
BEGIN
	i := 1;
    fildName := string_to_array(names, '','');
	update mir.pinforequiredfilds set required = 0;
    WHILE fildName[i] IS NOT NULL LOOP 
    	SELECT count(*) into inList FROM mir.pinforequiredfilds where id like fildName[i];
        if inList > 0 then
        	UPDATE mir.pinforequiredfilds set required = 1 where id like fildName[i];
        ELSE
        	INSERT INTO mir.pinforequiredfilds (id, name, required) VALUES( fildName[i], '''', 1);
        end if;
        i := i + 1;
    end loop;
RETURN array_upper(fildName, 1);
END;
';


ALTER FUNCTION mir.required_filds_set_pinfo_filds(names character varying) OWNER TO postgres;

--
-- TOC entry 1927 (class 1255 OID 17306)
-- Dependencies: 5396 14
-- Name: right_insert(character, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION right_insert(poid character, pname character varying, prem character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir."right" t
                 where t.oid = poid ) then
        update mir."right" t
           set name = pname,
               rem = prem
         where t.oid = poid;
    else
      insert into mir."right"( oid, name, rem )
      values ( poid, pname, prem );
    end if;
  end;
  ';


ALTER FUNCTION mir.right_insert(poid character, pname character varying, prem character varying) OWNER TO postgres;

--
-- TOC entry 1935 (class 1255 OID 17307)
-- Dependencies: 5396 14
-- Name: rls_deleteregionprice(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION rls_deleteregionprice(pregion character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    delete from mir.medtyperls r where r.rlsregion = pRegion;
  end;
  ';


ALTER FUNCTION mir.rls_deleteregionprice(pregion character) OWNER TO postgres;

--
-- TOC entry 1936 (class 1255 OID 17308)
-- Dependencies: 5396 14
-- Name: rls_getregioncount(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION rls_getregioncount() RETURNS integer
    LANGUAGE plpgsql
    AS '
declare
    v_res integer;
  begin
    select count(1) into v_res from mir.rlsregion;
    return v_res;
  end;
  ';


ALTER FUNCTION mir.rls_getregioncount() OWNER TO postgres;

--
-- TOC entry 1937 (class 1255 OID 17309)
-- Dependencies: 5396 14
-- Name: rls_insertmedtyperls(character varying, character varying, numeric, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION rls_insertmedtyperls(pname character varying, ptradename character varying, pprice numeric, prlsregion character, pmanufacture character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    v_oid mir.medtyperls.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.medtyperls
      (oid, name, tradename, price, rlsregion, manufacture)
    values
      (v_oid, pname, ptradename, pprice, prlsregion, pmanufacture);
    return v_oid;
  end;
  ';


ALTER FUNCTION mir.rls_insertmedtyperls(pname character varying, ptradename character varying, pprice numeric, prlsregion character, pmanufacture character varying) OWNER TO postgres;

--
-- TOC entry 1949 (class 1255 OID 17310)
-- Dependencies: 5396 14
-- Name: rls_insertregion(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION rls_insertregion(preg_id character varying, pz_id character varying, pname character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    v_oid mir.rlsregion.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.rlsregion
      (oid, reg_id, z_id, name)
    values
      (v_oid, pReg_ID, pZ_ID, pName);
    return v_oid;
  end;
  ';


ALTER FUNCTION mir.rls_insertregion(preg_id character varying, pz_id character varying, pname character varying) OWNER TO postgres;

--
-- TOC entry 1950 (class 1255 OID 17311)
-- Dependencies: 5396 14
-- Name: rls_updatesimbols(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION rls_updatesimbols() RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
     update mir.medtyperls r
     set r.manufacture = replace(replace(replace(replace(replace(r.manufacture,''<sup>'',''''),''</sup>'',''''),''®'',''''),''&nbsp'','' ''),''&amp'',''&''),
         r.tradename = replace(replace(replace(r.tradename,''<sup>'',''''),''</sup>'',''''),''®'','''');
  end;
  ';


ALTER FUNCTION mir.rls_updatesimbols() OWNER TO postgres;

--
-- TOC entry 1961 (class 1255 OID 17312)
-- Dependencies: 5396 14
-- Name: role_right_upd_all_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION role_right_upd_all_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  c1 record;
BEGIN
  if TG_OP = ''INSERT'' then
    -- вносим право всем сотрудникам, у которых еще нет его
    for c in ( select sr.sotr
                 from mir.sotr_role sr
                where sr.role = new.role
                  and sr.sotr not in
                      ( select sra.sotr
                          from mir.sotr_right_all sra
                         where sra.right = new.right                          
                      )
             )
    loop
      insert into mir.sotr_right_all(sotr, "right")
      values (c.sotr, new.right);
    end loop;
  else
    if TG_OP = ''DELETE'' then
      for c1 in ( select sr.sotr
                   from mir.sotr_role sr
                  where sr.role = old.role
                    and sr.sotr not in
                        ( select srr.sotr
                            from mir.sotr_right srr
                           where srr.right = old.right                          
                        )
                    and sr.sotr not in
                        ( select srr.sotr
                            from mir.sotr_role srr
                           inner join mir.role_right rr
                              on rr.role = srr.role
                           where rr.right = old.right      
                             and rr.role <> old.role                   
                        )
               )
      loop
        delete 
          from mir.sotr_right_all sra 
         where sra.sotr = c1.sotr 
           and sra.right = old.right;
      end loop;  
    end if; 
  end if;
 
  RETURN OLD;  
END;
';


ALTER FUNCTION mir.role_right_upd_all_tr() OWNER TO postgres;

--
-- TOC entry 1962 (class 1255 OID 17313)
-- Dependencies: 5396 14
-- Name: save_raiting_card(character, character, character, character, character[], integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION save_raiting_card(mdoc character, ambticket character, section character, sysuser character, parts character[], isexpert integer) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  POID          CHAR (36);
  RES           CHAR (36);
  SYS           CHAR (36);
BEGIN
	SYS = sysuser;
    
	SELECT expr.oid from mir.expert_raiting expr
    INTO POID
    WHERE expr.mdoc_id = mdoc
    AND (expr.ambticket_id = ambticket or COALESCE(ambticket,'''') = '''' );

  IF POID is NULL
  THEN	 
  		 POID =(SELECT * FROM public.guid_generate());
         
  		 IF isexpert = 0 THEN
           
           insert into mir.expert_raiting  
           (oid,mdoc_id, ambticket_id, sysuser, sysdate,expert)  
           VALUES (POID,mdoc,COALESCE(ambticket,NULL),sysuser,CURRENT_DATE,NULL);
           
         ELSE
         
           insert into mir.expert_raiting  
           (oid,mdoc_id, ambticket_id, sysuser, sysdate,expert)  
           VALUES (POID,mdoc,COALESCE(ambticket,NULL),NULL,CURRENT_DATE,sysuser);
           
         END IF;
         
  		 select MIR.EXPERT_UPDATE_SECTIONS(POID,section,parts,isexpert)
         INTO RES;
  
  
  ELSE 	
  		 IF isexpert = 0 THEN 
  		 	UPDATE mir.expert_raiting SET "sysuser" = SYS, sysdate = CURRENT_DATE where oid = POID;
         ELSE
         	UPDATE mir.expert_raiting SET expert = SYS, sysdate = CURRENT_DATE where oid = POID;
         END IF;
         
  		 select MIR.EXPERT_UPDATE_SECTIONS(POID,section,parts,isexpert)
  		 INTO RES;
  END IF;
  
  RETURN RES;
END;
';


ALTER FUNCTION mir.save_raiting_card(mdoc character, ambticket character, section character, sysuser character, parts character[], isexpert integer) OWNER TO postgres;

--
-- TOC entry 1963 (class 1255 OID 17314)
-- Dependencies: 5396 14
-- Name: schedule_aiud_partition_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_aiud_partition_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
BEGIN
  IF ( TG_OP = ''INSERT'' ) THEN
    INSERT INTO MIR.SCHEDULE_P
      SELECT NEW.OID,
             NEW.CABINET,
             NEW.INSITE,
             NEW.SYSUSER,
             NEW.PRESCTYPE,
             NEW.PEOPLE,
             NEW.STATE,
             NEW.PRESC,
             NEW.ISNAPRONLY,
             NEW.TICKETNUMBER,
             NEW.LPU,
             NEW.ISBRON,
             NEW.SCHEDULECALLSTATE,
             NEW.SCHEDULECALLSTATECOMMENT,
             NEW.UPDATEPEOPLEDATE,
             NEW.PEOPLESCHEDULEPLACE,
             NEW.SCHEDULECALLSTATEDATE,
             NEW.SCHEDULECALLSTATESYSUSER,
             NEW.EXTRALINEREASON,
             NEW.INFO,
             NEW.YAVKADT,
             NEW.SYSUSERADDPEOPLE,
             NEW.PAID,
             E.STARTON,
             E.ENDON,
             null as GCRECORD,
             null as OBJECTTYPE
        FROM MIR.EVENT E
       WHERE E.OID = NEW.OID;
  ELSIF ( TG_OP = ''DELETE'' ) THEN
    DELETE FROM MIR.SCHEDULE_P WHERE OID = OLD.OID;
  ELSIF ( TG_OP = ''UPDATE'' ) THEN
    FOR C IN (SELECT STARTON FROM MIR.EVENT WHERE OID = NEW.OID) LOOP
      UPDATE MIR.SCHEDULE_P S
         SET S.CABINET                  = NEW.CABINET,
             S.INSITE                   = NEW.INSITE,
             S.SYSUSER                  = NEW.SYSUSER,
             S.PRESCTYPE                = NEW.PRESCTYPE,
             S.PEOPLE                   = NEW.PEOPLE,
             S.STATE                    = NEW.STATE,
             S.PRESC                    = NEW.PRESC,
             S.ISNAPRONLY               = NEW.ISNAPRONLY,
             S.TICKETNUMBER             = NEW.TICKETNUMBER,
             S.LPU                      = NEW.LPU,
             S.ISBRON                   = NEW.ISBRON,
             S.SCHEDULECALLSTATE        = NEW.SCHEDULECALLSTATE,
             S.SCHEDULECALLSTATECOMMENT = NEW.SCHEDULECALLSTATECOMMENT,
             S.UPDATEPEOPLEDATE         = NEW.UPDATEPEOPLEDATE,
             S.PEOPLESCHEDULEPLACE      = NEW.PEOPLESCHEDULEPLACE,
             S.SCHEDULECALLSTATEDATE    = NEW.SCHEDULECALLSTATEDATE,
             S.SCHEDULECALLSTATESYSUSER = NEW.SCHEDULECALLSTATESYSUSER,
             S.EXTRALINEREASON          = NEW.EXTRALINEREASON,
             S.INFO                     = NEW.INFO,
             S.YAVKADT                  = NEW.YAVKADT,
             S.SYSUSERADDPEOPLE         = NEW.SYSUSERADDPEOPLE,
             S.PAID                     = NEW.PAID
       WHERE S.OID = NEW.OID
         AND S.STARTON = C.STARTON;
    END LOOP;
  END IF;
return new;
END;

';


ALTER FUNCTION mir.schedule_aiud_partition_trg() OWNER TO postgres;

--
-- TOC entry 1964 (class 1255 OID 17315)
-- Dependencies: 5396 14
-- Name: schedule_aiud_replication_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_aiud_replication_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  V_IS_CHANGED BOOLEAN;
  V_LPU        VARCHAR(36);
BEGIN

  IF MIR.web_service_is_repl() THEN
    RETURN NEW;
  END IF;

  IF ( TG_OP = ''DELETE'' ) THEN
    perform MIR.WEB_SERVICE_ADD_BUFFER_TRANSFER(''SCHEDULE'',
                                            ''DELETE'',
                                            OLD.OID,
                                            OLD.LPU);
  END IF;

  IF ( TG_OP = ''UPDATE'' ) THEN

    IF --UPDATING(''INFO'') AND
       ((NEW.INFO <> OLD.INFO) OR
        (NEW.INFO IS NULL AND OLD.INFO IS NOT NULL) OR
        (NEW.INFO IS NOT NULL AND OLD.INFO IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''OID'') AND 
      ((NEW.OID <> OLD.OID)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''CABINET'') AND
       ((NEW.CABINET <> OLD.CABINET) OR
        (NEW.CABINET IS NULL AND OLD.CABINET IS NOT NULL) OR
        (NEW.CABINET IS NOT NULL AND OLD.CABINET IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''INSITE'') AND
       ((NEW.INSITE <> OLD.INSITE) OR
        (NEW.INSITE IS NULL AND OLD.INSITE IS NOT NULL) OR
        (NEW.INSITE IS NOT NULL AND OLD.INSITE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SYSUSER'') AND
       ((NEW.SYSUSER <> OLD.SYSUSER) OR
        (NEW.SYSUSER IS NULL AND OLD.SYSUSER IS NOT NULL) OR
        (NEW.SYSUSER IS NOT NULL AND OLD.SYSUSER IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PRESCTYPE'') AND
       ((NEW.PRESCTYPE <> OLD.PRESCTYPE) OR
        (NEW.PRESCTYPE IS NULL AND OLD.PRESCTYPE IS NOT NULL) OR
        (NEW.PRESCTYPE IS NOT NULL AND OLD.PRESCTYPE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PEOPLE'') AND
       ((NEW.PEOPLE <> OLD.PEOPLE) OR
        (NEW.PEOPLE IS NULL AND OLD.PEOPLE IS NOT NULL) OR
        (NEW.PEOPLE IS NOT NULL AND OLD.PEOPLE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''STATE'') AND
       ((NEW.STATE <> OLD.STATE) OR
        (NEW.STATE IS NULL AND OLD.STATE IS NOT NULL) OR
        (NEW.STATE IS NOT NULL AND OLD.STATE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PRESC'') AND
       ((NEW.PRESC <> OLD.PRESC) OR
        (NEW.PRESC IS NULL AND OLD.PRESC IS NOT NULL) OR
        (NEW.PRESC IS NOT NULL AND OLD.PRESC IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ISNAPRONLY'') AND
       ((NEW.ISNAPRONLY <> OLD.ISNAPRONLY) OR
        (NEW.ISNAPRONLY IS NULL AND OLD.ISNAPRONLY IS NOT NULL) OR
        (NEW.ISNAPRONLY IS NOT NULL AND OLD.ISNAPRONLY IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''TICKETNUMBER'') AND
       ((NEW.TICKETNUMBER <> OLD.TICKETNUMBER) OR
        (NEW.TICKETNUMBER IS NULL AND OLD.TICKETNUMBER IS NOT NULL) OR
        (NEW.TICKETNUMBER IS NOT NULL AND OLD.TICKETNUMBER IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''LPU'') AND
       ((NEW.LPU <> OLD.LPU) OR
        (NEW.LPU IS NULL AND OLD.LPU IS NOT NULL) OR
        (NEW.LPU IS NOT NULL AND OLD.LPU IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ISBRON'') AND
       ((NEW.ISBRON <> OLD.ISBRON) OR
        (NEW.ISBRON IS NULL AND OLD.ISBRON IS NOT NULL) OR
        (NEW.ISBRON IS NOT NULL AND OLD.ISBRON IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SCHEDULECALLSTATE'') AND
       ((NEW.SCHEDULECALLSTATE <> OLD.SCHEDULECALLSTATE) OR
        (NEW.SCHEDULECALLSTATE IS NULL AND
        OLD.SCHEDULECALLSTATE IS NOT NULL) OR
        (NEW.SCHEDULECALLSTATE IS NOT NULL AND
        OLD.SCHEDULECALLSTATE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SCHEDULECALLSTATECOMMENT'') AND
       ((NEW.SCHEDULECALLSTATECOMMENT <> OLD.SCHEDULECALLSTATECOMMENT) OR
        (NEW.SCHEDULECALLSTATECOMMENT IS NULL AND
        OLD.SCHEDULECALLSTATECOMMENT IS NOT NULL) OR
        (NEW.SCHEDULECALLSTATECOMMENT IS NOT NULL AND
        OLD.SCHEDULECALLSTATECOMMENT IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''UPDATEPEOPLEDATE'') AND
       ((NEW.UPDATEPEOPLEDATE <> OLD.UPDATEPEOPLEDATE) OR
        (NEW.UPDATEPEOPLEDATE IS NULL AND
        OLD.UPDATEPEOPLEDATE IS NOT NULL) OR
        (NEW.UPDATEPEOPLEDATE IS NOT NULL AND
        OLD.UPDATEPEOPLEDATE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PEOPLESCHEDULEPLACE'') AND
       ((NEW.PEOPLESCHEDULEPLACE <> OLD.PEOPLESCHEDULEPLACE) OR
        (NEW.PEOPLESCHEDULEPLACE IS NULL AND
        OLD.PEOPLESCHEDULEPLACE IS NOT NULL) OR
        (NEW.PEOPLESCHEDULEPLACE IS NOT NULL AND
        OLD.PEOPLESCHEDULEPLACE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SCHEDULECALLSTATEDATE'') AND
       ((NEW.SCHEDULECALLSTATEDATE <> OLD.SCHEDULECALLSTATEDATE) OR
        (NEW.SCHEDULECALLSTATEDATE IS NULL AND
        OLD.SCHEDULECALLSTATEDATE IS NOT NULL) OR
        (NEW.SCHEDULECALLSTATEDATE IS NOT NULL AND
        OLD.SCHEDULECALLSTATEDATE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SCHEDULECALLSTATESYSUSER'') AND
       ((NEW.SCHEDULECALLSTATESYSUSER <> OLD.SCHEDULECALLSTATESYSUSER) OR
        (NEW.SCHEDULECALLSTATESYSUSER IS NULL AND
        OLD.SCHEDULECALLSTATESYSUSER IS NOT NULL) OR
        (NEW.SCHEDULECALLSTATESYSUSER IS NOT NULL AND
        OLD.SCHEDULECALLSTATESYSUSER IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''EXTRALINEREASON'') AND
       ((NEW.EXTRALINEREASON <> OLD.EXTRALINEREASON) OR
        (NEW.EXTRALINEREASON IS NULL AND OLD.EXTRALINEREASON IS NOT NULL) OR
        (NEW.EXTRALINEREASON IS NOT NULL AND OLD.EXTRALINEREASON IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

  END IF;

  IF V_IS_CHANGED /*OR INSERTING*/ THEN
    V_LPU := NEW.LPU;
    IF V_LPU IS NULL THEN
      V_LPU := OLD.LPU;
    END IF;

    perform MIR.WEB_SERVICE_ADD_BUFFER_TRANSFER(''SCHEDULE'',
                                            ''UPDATE'',
                                            NEW.OID,
                                            V_LPU);
  END IF;

return new;
END;

';


ALTER FUNCTION mir.schedule_aiud_replication_trg() OWNER TO postgres;

--
-- TOC entry 1965 (class 1255 OID 17316)
-- Dependencies: 5396 14
-- Name: schedule_aiud_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_aiud_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  V_IS_CHANGED BOOLEAN := FALSE;
  V_LPU        VARCHAR(36);
  V_DATE       DATE;
  V_TABLE_NAME VARCHAR(30);
BEGIN
  V_TABLE_NAME := ''SCHEDULE'';

  IF ( TG_OP = ''DELETE'' ) THEN
    SELECT TRUNC(STARTON) INTO V_DATE FROM MIR.EVENT WHERE OID = OLD.OID;
    perform MIR.WORKSCHEDULE_DO_LOG(OLD.SYSUSER,
                                OLD.PRESCTYPE,
                                OLD.LPU,
                                V_DATE,
                                V_TABLE_NAME);
  END IF;

  IF ( TG_OP = ''UPDATE'' ) THEN
    IF --UPDATING(''CABINET'') AND
       ((NEW.CABINET <> OLD.CABINET) OR
        (NEW.CABINET IS NULL AND OLD.CABINET IS NOT NULL) OR
        (NEW.CABINET IS NOT NULL AND OLD.CABINET IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SYSUSER'') AND
       ((NEW.SYSUSER <> OLD.SYSUSER) OR
        (NEW.SYSUSER IS NULL AND OLD.SYSUSER IS NOT NULL) OR
        (NEW.SYSUSER IS NOT NULL AND OLD.SYSUSER IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PRESCTYPE'') AND
       ((NEW.PRESCTYPE <> OLD.PRESCTYPE) OR
        (NEW.PRESCTYPE IS NULL AND OLD.PRESCTYPE IS NOT NULL) OR
        (NEW.PRESCTYPE IS NOT NULL AND OLD.PRESCTYPE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;



    IF --UPDATING(''LPU'') AND
       ((NEW.LPU <> OLD.LPU) OR
        (NEW.LPU IS NULL AND OLD.LPU IS NOT NULL) OR
        (NEW.LPU IS NOT NULL AND OLD.LPU IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ISBRON'') AND
       ((NEW.ISBRON <> OLD.ISBRON) OR
        (NEW.ISBRON IS NULL AND OLD.ISBRON IS NOT NULL) OR
        (NEW.ISBRON IS NOT NULL AND OLD.ISBRON IS NULL)) and
       NOT V_IS_CHANGED THEN

      SELECT date_trunc(''day'', STARTON)
        INTO V_DATE
        FROM MIR.EVENT
       WHERE OID = NEW.OID;

    perform MIR.WORKSCHEDULE_ADD_SCHEDULE_BUFFER(NEW.SYSUSER,
                                               NEW.PRESCTYPE,
                                               NEW.LPU,
                                               V_DATE,
                                               NEW.OID);
    END IF;
    IF --UPDATING(''PEOPLE'') AND
       ((NOT (NEW.PEOPLE <> OLD.PEOPLE AND OLD.PEOPLE IS NOT NULL AND
         NEW.PEOPLE IS NOT NULL)) OR
        (NEW.PEOPLE IS NULL AND OLD.PEOPLE IS NOT NULL) OR
        (NEW.PEOPLE IS NOT NULL AND OLD.PEOPLE IS NULL)) AND
       NOT V_IS_CHANGED THEN

      SELECT date_trunc(''day'', STARTON)
        INTO V_DATE
        FROM MIR.EVENT
       WHERE OID = NEW.OID;

      perform MIR.WORKSCHEDULE_ADD_SCHEDULE_BUFFER(NEW.SYSUSER,
                                               NEW.PRESCTYPE,
                                               NEW.LPU,
                                               V_DATE,
                                               NEW.OID);
    END IF;

  END IF;

  IF V_IS_CHANGED OR ( TG_OP = ''INSERT'' ) THEN
    V_LPU := NEW.LPU;
    IF V_LPU IS NULL THEN
      V_LPU := OLD.LPU;
    END IF;
    SELECT date_trunc(''day'', STARTON) 
      INTO V_DATE 
      FROM MIR.EVENT 
     WHERE OID = NEW.OID;
    
    perform MIR.WORKSCHEDULE_DO_LOG(NEW.SYSUSER,
                                NEW.PRESCTYPE,
                                V_LPU,
                                V_DATE,
                                V_TABLE_NAME);
  END IF;
  
  perform MIR.WORKSCHEDULE_APPLY_SCHEDULE_BUFFER();
  return new;
END;

';


ALTER FUNCTION mir.schedule_aiud_trg() OWNER TO postgres;

--
-- TOC entry 1967 (class 1255 OID 17317)
-- Dependencies: 5396 14
-- Name: schedule_biu_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_biu_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
declare
  vfio            varchar(32000);
  p_oid_typepriem varchar(36);
  p_oid_direction varchar(36);
  dtst            varchar(20);
  --dtend           varchar2(20);
  date_dtst       date;
  date_dtend      date;
  date_temp       date;

begin
  if new.people is not null then
    vfio := mir.zgetpersonfio(new.people);
    update mir.event e
       set e.subject = vfio, e.description = vfio
     where e.oid = new.oid;
  else
    update mir.event e
       set e.subject = null, e.description = null
     where e.oid = new.oid;
  end if;
  if ((new.people <> old.people) or
     ((old.people is null) and (new.people is not null))) then
    if (inserting) and (new.updatepeopledate is not null) then
      null;
    else
      -- by Spasskiy S.N. при объединении дубликатов не обновлять время записи на прием
      if not (updating(''PEOPLE'') and (new.people <> old.people) and
          (old.people is not null) and (new.people is not null)) then
        new.updatepeopledate := CURRENT_TIMESTAMP;
        new.sysuseraddpeople := CURRENT_USER;
      end if;
    end if;
  end if;
  --new.yavkadt := SYSDATE;
  if ((new.state <> old.state) and
     new.state = mir.schedule_get_cn_schedulestate_used()) then
    new.yavkadt := CURRENT_TIMESTAMP;
  end if;
  select max(oid)
    into p_oid_typepriem
    from mir.dictionary
   where SYNONYM = ''SY_NAPRAVLENIE'';

  if (new.isnapronly = p_oid_typepriem and
     nvl(old.isnapronly, '' '') <> p_oid_typepriem) then

    select max(starton) into date_dtst from mir.event where oid = new.oid;

    dtst := ''01.'' || to_char(date_dtst, ''mm.yyyy'');

    select last_day(to_date(dtst, ''dd.mm.yyyy'')) into date_dtend from dual;
    date_dtst := to_date(dtst, ''dd.mm.yyyy'');

    insert into mir.direction
      (oid, specid, fromlpuid, tolpuid, dt_start, dt_end)
    values
      (lower(mir.new_uuid()),
       new.presctype,
       new.lpu,
       new.lpu,
       date_dtst,
       date_dtend);
  end if;

  if (old.isnapronly = p_oid_typepriem and
     new.presctype <> old.presctype) then
    --Если меняем специальность
    select min(oid)
      into p_oid_direction
      from mir.direction d
     where d.specid = old.presctype
       and fromlpuid = new.lpu
       and uniq_code is null;

    update mir.direction
       set specid = new.presctype
     where oid = p_oid_direction;
  end if;

  if (new.isnapronly <> nvl(old.isnapronly, '' '') and
     nvl(old.isnapronly, '' '') = p_oid_typepriem) then
    --Если меняем тип приема с по направлению, на какой то другой
    select max(starton) into date_temp from mir.event where oid = new.oid;

    select min(oid)
      into p_oid_direction
      from mir.direction d
     where d.specid = old.presctype
       and fromlpuid = new.lpu
       and uniq_code is null
       and date_dtst >= date_temp
       and date_dtend <= date_temp;
    delete from mir.direction where oid = p_oid_direction;
  end if;

  --kulikovskiy убрал
  --added by A.Nakorjakov 28032011
  --started
  /*if (inserting) and (new.people is not null) then
    new.ticketnumber := mir.schedule_getlastnum(new.lpu);
  end if;
  if (updating(''PEOPLE'')) and (new.people is not null) and
     (old.people is null)  then
    new.ticketnumber := mir.schedule_getlastnum(new.lpu);
  end if;*/ 
  --finished
return new;
end;

';


ALTER FUNCTION mir.schedule_biu_trg() OWNER TO postgres;

--
-- TOC entry 1968 (class 1255 OID 17318)
-- Dependencies: 5396 14
-- Name: schedule_biud_workschedule_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_biud_workschedule_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  perform MIR.WORKSCHEDULE_INIT_SCHEDULE_BUFFER();
return new;
END;

';


ALTER FUNCTION mir.schedule_biud_workschedule_trg() OWNER TO postgres;

--
-- TOC entry 1969 (class 1255 OID 17319)
-- Dependencies: 5396 14
-- Name: schedule_cancel_schedule(character, character, date, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_cancel_schedule(poid character, psysuser character, pdate date DEFAULT ('now'::text)::date, is_moved integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT S.STATE,
                     S.STARTON,
                     S.SYSUSER,
                     S.CABINET,
                     S.PEOPLE,
                     S.OID,
                     S.PRESCTYPE,
                     S.LPU,
                     S.PEOPLESCHEDULEPLACE
                FROM MIR.SCHEDULE_INFO S
               WHERE OID = POID) LOOP
      IF C.STATE = MIR.schedule_get_cn_schedulestate_liveline() OR
         (C.STATE = MIR.schedule_get_cn_schedulestate_extraline() AND
         C.STARTON = cast(C.STARTON as date)) THEN
        perform MIR.SCHEDULE_DELETE_SCHEDULE(POID);
      ELSE
        perform MIR.schedule_update_people_state(POID,
                            NULL,
                            MIR.schedule_get_cn_schedulestate_free(),
                            C.PEOPLESCHEDULEPLACE);
      END IF;
      IF IS_MOVED = 0 THEN
        IF MIR.SETTINGS_GET_PARAMETER(''LOG_CANCELED_SCHED'', ''1'') = ''1'' THEN
          INSERT INTO MIR.SCHEDULE_HISTORY
            (OLD_OID,
             NEW_OID,
             CABINET,
             SYSUSER,
             PRESCTYPE,
             PEOPLE,
             STATE,
             LPU,
             STARTON,
             ACTION_SYSUSER,
             ACTION_ID,
             ACTION_DATE)
          VALUES
            (C.OID,
             NULL,
             C.CABINET,
             C.SYSUSER,
             C.PRESCTYPE,
             C.PEOPLE,
             C.STATE,
             C.LPU,
             C.STARTON,
             PSYSUSER,
             2, -- отмена
             PDATE);
        END IF;
     --   perform MIR.SMS_INSERT_SMS_CANCEL_DOCTORVISIT(C.PEOPLE,
      --                                            C.STARTON,
       --                                           C.SYSUSER,
       --                                           C.CABINET,
        --                                          C.STATE);
      END IF;
    END LOOP;
  END;
';


ALTER FUNCTION mir.schedule_cancel_schedule(poid character, psysuser character, pdate date, is_moved integer) OWNER TO postgres;

--
-- TOC entry 1970 (class 1255 OID 17320)
-- Dependencies: 5396 14
-- Name: schedule_delete_schedule(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_delete_schedule(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE 
    V_CNT    INTEGER;
    V_PEOPLE VARCHAR(36);
    c record;
  BEGIN
    FOR C IN (SELECT * FROM MIR.SCHEDULE_INFO S WHERE S.OID = POID) LOOP
      SELECT COUNT(1)
        INTO V_CNT
        FROM MIR.SCHEDULE_INFO
       WHERE SYSUSER = C.SYSUSER
         AND LPU = C.LPU
         AND cast(STARTON as date) = cast(C.STARTON as date)
         AND OID <> C.OID;
      IF V_CNT = 0 THEN
        DELETE FROM MIR.SOTRWORKDAY
         WHERE SYSUSER = C.SYSUSER
           AND cast(DATES as date) = cast(C.STARTON as date);
      ELSE
        IF C.STATE NOT IN
           (mir.schedule_get_cn_schedulestate_liveline(), mir.schedule_get_cn_schedulestate_extraline()) THEN
          perform mir.schedule_update_sysuser_workday(C.SYSUSER,
                                 cast(C.STARTON as date),
                                 C.PRESCTYPE,
                                 C.CABINET);
        END IF;
      END IF;
      V_PEOPLE := C.PEOPLE;
    END LOOP;
  
    DELETE FROM MIR.SCHEDULE WHERE OID = POID;
    DELETE FROM MIR.EVENT WHERE OID = POID;
  END;

';


ALTER FUNCTION mir.schedule_delete_schedule(poid character) OWNER TO postgres;

--
-- TOC entry 1971 (class 1255 OID 17321)
-- Dependencies: 5396 14
-- Name: schedule_delete_schedule_by_day_of_week(character, character, character, character varying, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_delete_schedule_by_day_of_week(psysuser character DEFAULT NULL::bpchar, ppresctype character DEFAULT NULL::bpchar, plpu character DEFAULT NULL::bpchar, ptime character varying DEFAULT NULL::character varying, pday_of_week integer DEFAULT NULL::integer, pcount integer DEFAULT 1) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
-- by SpasskiySN;
    v_day_of_week varchar(10);
    v_start_date  date;
    c record;
  begin
    V_START_DATE := to_timestamp(TO_CHAR(CURRENT_DATE, ''dd.mm.yyyy'') ||'' ''|| PTIME,
	                            ''DD MM YYYY HH24:MI:SS'');                            
    for i in 1 .. pcount loop
    
      v_start_date := mir.next_day(v_start_date, v_day_of_week);
      for c in (select oid
                  from mir.schedule_info s
                 where s.sysuser = psysuser
                   and s.presctype = ppresctype
                   and s.lpu = plpu
                   and s.starton = v_start_date) loop
        perform mir.schedule_delete_schedule(c.oid);
      end loop;
    end loop;
  
  end;

';


ALTER FUNCTION mir.schedule_delete_schedule_by_day_of_week(psysuser character, ppresctype character, plpu character, ptime character varying, pday_of_week integer, pcount integer) OWNER TO postgres;

--
-- TOC entry 1972 (class 1255 OID 17322)
-- Dependencies: 5396 14
-- Name: schedule_delete_schedule_for_sysuser(character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_delete_schedule_for_sysuser(psysuser character DEFAULT NULL::bpchar, plpu character DEFAULT NULL::bpchar, pdate date DEFAULT NULL::date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare 
 c record;                                          

-- by SpasskiySN;
  BEGIN   
      FOR C IN (SELECT OID
                  FROM MIR.SCHEDULE_INFO S
                 WHERE S.SYSUSER = PSYSUSER
                   AND S.LPU = PLPU
                   AND S.STARTON > PDATE) LOOP
        perform mir.schedule_DELETE_SCHEDULE(C.OID);
      END LOOP;
  END;

';


ALTER FUNCTION mir.schedule_delete_schedule_for_sysuser(psysuser character, plpu character, pdate date) OWNER TO postgres;

--
-- TOC entry 1966 (class 1255 OID 17323)
-- Dependencies: 5396 14
-- Name: schedule_delete_schedule_for_sysuser_presc(character, character, character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_delete_schedule_for_sysuser_presc(psysuser character DEFAULT NULL::bpchar, ppresctype character DEFAULT NULL::bpchar, plpu character DEFAULT NULL::bpchar, pdate date DEFAULT NULL::date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare 
 c record;                                          
-- by SpasskiySN;
  BEGIN   
      FOR C IN (SELECT OID
                  FROM MIR.SCHEDULE_INFO S
                 WHERE S.SYSUSER = PSYSUSER
                   AND S.PRESCTYPE = PPRESCTYPE
                   AND S.LPU = PLPU
                   AND S.STARTON > PDATE) LOOP
        perform mir.schedule_DELETE_SCHEDULE(C.OID);
      END LOOP;
  END;

';


ALTER FUNCTION mir.schedule_delete_schedule_for_sysuser_presc(psysuser character, ppresctype character, plpu character, pdate date) OWNER TO postgres;

--
-- TOC entry 1974 (class 1255 OID 17324)
-- Dependencies: 5396 14
-- Name: schedule_do_print_talon(character, character, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_do_print_talon(ppeople character, pschedule character, pprint_date date DEFAULT ('now'::text)::date, psysuser character DEFAULT NULL::bpchar, psysuser_lpu character DEFAULT NULL::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    INSERT INTO MIR.PRINT_TALON
      (PEOPLE, SCHEDULE, PRINT_DATE, SYSUSER, SYSUSER_LPU, PRINT_ITEM)
    VALUES
      (PPEOPLE, PSCHEDULE, PPRINT_DATE, PSYSUSER, PSYSUSER_LPU, ''TALON'');
  END;

';


ALTER FUNCTION mir.schedule_do_print_talon(ppeople character, pschedule character, pprint_date date, psysuser character, psysuser_lpu character) OWNER TO postgres;

--
-- TOC entry 1975 (class 1255 OID 17325)
-- Dependencies: 5396 14
-- Name: schedule_do_print_tap(character, character, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_do_print_tap(ppeople character, pschedule character, pprint_date date DEFAULT ('now'::text)::date, psysuser character DEFAULT NULL::bpchar, psysuser_lpu character DEFAULT NULL::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    INSERT INTO MIR.PRINT_TALON
      (PEOPLE, SCHEDULE, PRINT_DATE, SYSUSER, SYSUSER_LPU, PRINT_ITEM)
    VALUES
      (PPEOPLE, PSCHEDULE, PPRINT_DATE, PSYSUSER, PSYSUSER_LPU, ''TAP'');
  END;

';


ALTER FUNCTION mir.schedule_do_print_tap(ppeople character, pschedule character, pprint_date date, psysuser character, psysuser_lpu character) OWNER TO postgres;

--
-- TOC entry 1976 (class 1255 OID 17326)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_receptiontype_paid(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_receptiontype_paid() RETURNS character
    LANGUAGE plpgsql
    AS '
BEGIN
	RETURN ''656f55ae-1dc7-4265-891e-06a78911b7fd'';
END;
';


ALTER FUNCTION mir.schedule_get_cn_receptiontype_paid() OWNER TO postgres;

--
-- TOC entry 11723 (class 0 OID 0)
-- Dependencies: 1976
-- Name: FUNCTION schedule_get_cn_receptiontype_paid(); Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON FUNCTION schedule_get_cn_receptiontype_paid() IS 'Возвращает идентификатор платного типа приема.';


--
-- TOC entry 1977 (class 1255 OID 17327)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_absence(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_absence() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 6;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_absence() OWNER TO postgres;

--
-- TOC entry 1978 (class 1255 OID 17328)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_bron(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_bron() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 1;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_bron() OWNER TO postgres;

--
-- TOC entry 1979 (class 1255 OID 17329)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_done(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_done() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 2;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_done() OWNER TO postgres;

--
-- TOC entry 1980 (class 1255 OID 17330)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_extraline(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_extraline() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 5;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_extraline() OWNER TO postgres;

--
-- TOC entry 1981 (class 1255 OID 17331)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_free(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_free() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 0;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_free() OWNER TO postgres;

--
-- TOC entry 1982 (class 1255 OID 17332)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_liveline(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_liveline() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 4;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_liveline() OWNER TO postgres;

--
-- TOC entry 1983 (class 1255 OID 17333)
-- Dependencies: 5396 14
-- Name: schedule_get_cn_schedulestate_used(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_cn_schedulestate_used() RETURNS integer
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN 3;
  END;

';


ALTER FUNCTION mir.schedule_get_cn_schedulestate_used() OWNER TO postgres;

--
-- TOC entry 1984 (class 1255 OID 17334)
-- Dependencies: 5396 14
-- Name: schedule_get_dates_with_empty_schedule(date, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_dates_with_empty_schedule(pdate1 date, pdate2 date, psotr character, plpu character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    RES VARCHAR(4000);
  BEGIN
    RES := NULL;
    
                WITH RECURSIVE days ( lev, D ) AS 
                          (
                          SELECT 1 as lev,
                                 PDATE1 as D
                             
                           union all
                           
                          SELECT r.lev + 1 as lev,
                                 r.d + 1 as D
                            FROM days r 
                           where r.D < PDATE2
                          ) 

     select string_agg(TO_CHAR( t1.MYDATE, ''dd.mm.yyyy'' ), ''    '') as CSV
       INTO RES
       from (
      SELECT t.MYDATE, row_number() over (partition by t.MYDATE)  AS RN, COUNT(*) OVER() AS CNT
              FROM (SELECT d.D as MYDATE
                      FROM days d
                     WHERE date_trunc(''day'', d.D) NOT IN
                           (SELECT date_trunc(''day'', SI.STARTON)
                              FROM MIR.SCHEDULE_INFO SI
                             WHERE SI.SYSUSER = PSOTR
                               AND SI.LPU = PLPU
                               AND SI.STARTON BETWEEN PDATE1 AND PDATE2
                               )
                     ORDER BY MYDATE)t
                     )t1;
                     
    -- WHERE RN = CNT
   --  START WITH RN = 1
   -- CONNECT BY RN = PRIOR RN + 1
  
    /*SELECT SUBSTR(SYS_CONNECT_BY_PATH(MYDATE, ''    ''), 5) CSV
      INTO RES
      FROM (SELECT MYDATE, ROWNUM AS RN, COUNT(*) OVER() AS CNT
              FROM (SELECT MYDATE
                      FROM (SELECT PDATE1 + LEVEL - 1 AS MYDATE
                              FROM DUAL
                             START WITH PDATE1 <= PDATE2
                            CONNECT BY PDATE1 + LEVEL - 1 <= PDATE2)
                     WHERE TRUNC(MYDATE, ''DDD'') NOT IN
                           (SELECT TRUNC(SI.STARTON, ''DDD'')
                              FROM MIR.SCHEDULE_INFO SI
                             WHERE SI.SYSUSER = PSOTR
                               AND SI.LPU = PLPU
                               AND SI.STARTON BETWEEN PDATE1 AND PDATE2)
                     ORDER BY MYDATE))
     WHERE RN = CNT
     START WITH RN = 1
    CONNECT BY RN = PRIOR RN + 1;*/
    --) where rn=cnt;
  
    RETURN RES;
  END;

';


ALTER FUNCTION mir.schedule_get_dates_with_empty_schedule(pdate1 date, pdate2 date, psotr character, plpu character) OWNER TO postgres;

--
-- TOC entry 1985 (class 1255 OID 17335)
-- Dependencies: 5396 14
-- Name: schedule_get_dcount_with_empty_schedule(date, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_dcount_with_empty_schedule(pdate1 date, pdate2 date, psotr character, plpu character) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    RES INTEGER;
  BEGIN
    RES := NULL;
  
                WITH RECURSIVE days ( lev, D ) AS 
                          (
                          SELECT 1 as lev,
                                 PDATE1 as D
                             
                           union all
                           
                          SELECT r.lev + 1 as lev,
                                 r.d + 1 as D
                            FROM days r 
                           where r.D < PDATE2
                          ) 

    SELECT COUNT(*)
      INTO RES
      FROM days
     WHERE date_trunc(''day'', D) NOT IN
           (SELECT date_trunc( ''day'', SI.STARTON)
              FROM MIR.SCHEDULE_INFO SI
             WHERE SI.SYSUSER = PSOTR
               AND SI.LPU = PLPU
               AND SI.STARTON BETWEEN PDATE1 AND PDATE2
               );
  
   /* SELECT COUNT(*)
      INTO RES
      FROM (SELECT PDATE1 + LEVEL - 1 AS MYDATE
              FROM DUAL
             START WITH PDATE1 <= PDATE2
            CONNECT BY PDATE1 + LEVEL - 1 <= PDATE2)
     WHERE TRUNC(MYDATE, ''DDD'') NOT IN
           (SELECT TRUNC(SI.STARTON, ''DDD'')
              FROM MIR.SCHEDULE_INFO SI
             WHERE SI.SYSUSER = PSOTR
               AND SI.LPU = PLPU
               AND SI.STARTON BETWEEN PDATE1 AND PDATE2);*/
  
    RETURN RES;
  END;

';


ALTER FUNCTION mir.schedule_get_dcount_with_empty_schedule(pdate1 date, pdate2 date, psotr character, plpu character) OWNER TO postgres;

--
-- TOC entry 1986 (class 1255 OID 17336)
-- Dependencies: 5396 14
-- Name: schedule_get_lock_schedule_people(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_lock_schedule_people() RETURNS character
    LANGUAGE plpgsql
    AS '
  DECLARE
    V_OID MIR.PEOPLE.OID%TYPE;
  BEGIN
    V_OID := MIR.SETTINGS_GET_PARAMETER(''LOCK_SCHEDULE_PEOPLE'');
    IF V_OID IS NULL THEN
      select MIR.SCHEDULE_INSERT_LOCK_SCHEDULE_PEOPLE() into V_OID;
    END IF;
    RETURN V_OID;
  END;
  ';


ALTER FUNCTION mir.schedule_get_lock_schedule_people() OWNER TO postgres;

--
-- TOC entry 1987 (class 1255 OID 17337)
-- Dependencies: 5396 14
-- Name: schedule_get_pac_count(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_pac_count(sch character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
count_pac INTEGER;
BEGIN
 select count(*) into count_pac from mir.presc_schedule ps where ps.shedule_id = sch;
 
 update mir.schedule  set maxvisitors = count_pac + 1
 where oid = sch;
 
 return   count_pac;
  
END;
';


ALTER FUNCTION mir.schedule_get_pac_count(sch character varying) OWNER TO postgres;

--
-- TOC entry 1989 (class 1255 OID 17338)
-- Dependencies: 5396 14
-- Name: schedule_get_sysuser_workday_end(character, date, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_sysuser_workday_end(psysuser character, pdate date, ppresctype character DEFAULT NULL::bpchar) RETURNS date
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    -- если не указана специальность, то берем из графика работы
    IF PPRESCTYPE IS NULL THEN
      FOR C IN (SELECT cast(PDATE as date) + cast(cast(W.TIMEPO as varchar)||'' sec'' as interval) D
                  FROM MIR.SOTRWORKDAY W
                 WHERE W.SYSUSER = PSYSUSER
                   AND W."DATES" = cast(PDATE as date)) LOOP
        RETURN C.D;
      END LOOP;
    END IF;
    FOR C IN (SELECT MAX(S.ENDON) D
                FROM MIR.SCHEDULE_INFO S
               WHERE S.SYSUSER = PSYSUSER
                 AND S.STATE NOT IN
                     (mir.schedule_get_cn_schedulestate_liveline(), mir.schedule_get_cn_schedulestate_extraline())
                 AND (S.PRESCTYPE = PPRESCTYPE OR PPRESCTYPE IS NULL)
                 AND S.STARTON >= cast(PDATE as date)
                 AND S.STARTON < cast(PDATE as date) + 1) LOOP
      RETURN C.D;
    END LOOP;
    RETURN PDATE;
  END;

';


ALTER FUNCTION mir.schedule_get_sysuser_workday_end(psysuser character, pdate date, ppresctype character) OWNER TO postgres;

--
-- TOC entry 1990 (class 1255 OID 17339)
-- Dependencies: 5396 14
-- Name: schedule_get_sysuser_workday_start(character, date, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_get_sysuser_workday_start(psysuser character, pdate date, ppresctype character DEFAULT NULL::bpchar) RETURNS date
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    -- если не указана специальность, то берем из графика работы
    IF PPRESCTYPE IS NULL THEN
      FOR C IN (SELECT cast(PDATE as date) + cast(cast(W.TIMES as varchar)||'' sec'' as interval) D
                  FROM MIR.SOTRWORKDAY W
                 WHERE W.SYSUSER = PSYSUSER
                   AND W."DATES" = cast(PDATE as date)) LOOP
        RETURN C.D;
      END LOOP;
    END IF;
    FOR C IN (SELECT MIN(S.STARTON) D
                FROM MIR.SCHEDULE_INFO S
               WHERE S.SYSUSER = PSYSUSER
                 AND S.STATE NOT IN
                     (mir.schedule_get_cn_schedulestate_liveline(), mir.schedule_get_cn_schedulestate_extraline())
                 AND (S.PRESCTYPE = PPRESCTYPE OR PPRESCTYPE IS NULL)
                 AND S.STARTON >= cast(PDATE as date)
                 AND S.STARTON < cast(PDATE as date) + 1) LOOP
      RETURN C.D;
    END LOOP;
    RETURN PDATE;
  END;

';


ALTER FUNCTION mir.schedule_get_sysuser_workday_start(psysuser character, pdate date, ppresctype character) OWNER TO postgres;

--
-- TOC entry 1991 (class 1255 OID 17340)
-- Dependencies: 5396 14
-- Name: schedule_getticketnumber(character, timestamp with time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_getticketnumber("PSYSUSER" character, "PDATE" timestamp with time zone) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
 V_RES MIR.SCHEDULE_INFO.TICKETNUMBER%TYPE;
  BEGIN
    SELECT NVL(MAX(COALESCE(CAST(S.TICKETNUMBER as integer), 0)), 0)+1
      INTO V_RES
      FROM MIR.SCHEDULE_INFO S
     WHERE S.SYSUSER = $1
       AND date_trunc(''day'', S.STARTON) = date_trunc(''day'', $2);
    RETURN V_RES;
END;
';


ALTER FUNCTION mir.schedule_getticketnumber("PSYSUSER" character, "PDATE" timestamp with time zone) OWNER TO postgres;

--
-- TOC entry 1992 (class 1255 OID 17341)
-- Dependencies: 5396 14
-- Name: schedule_insert_fast(character, character, numeric, character, timestamp without time zone, timestamp without time zone, character, character, character varying, character, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_fast(psysuser character, ppresctype character, pstate numeric, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, potdel character, ppeople character, pcabinet character varying, pisnapronly character, pinfo character varying, pisbron numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID mir.schedule.oid%type;
BEGIN
  V_OID := MIR.new_uuid();
    
  insert into mir.schedule( oid, sysuser, presctype, state, lpu, starton, endon, otdel, people, cabinet, isnapronly, info, isbron )
  values ( V_OID, psysuser, ppresctype, pstate, plpu, pstarton, pendon, potdel, ppeople, pcabinet, pisnapronly, pinfo, pisbron );
    
  RETURN V_OID;
END;
';


ALTER FUNCTION mir.schedule_insert_fast(psysuser character, ppresctype character, pstate numeric, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, potdel character, ppeople character, pcabinet character varying, pisnapronly character, pinfo character varying, pisbron numeric) OWNER TO postgres;

--
-- TOC entry 1993 (class 1255 OID 17342)
-- Dependencies: 5396 14
-- Name: schedule_insert_fast(character, character, character, numeric, character, timestamp without time zone, timestamp without time zone, character, character, character varying, character, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_fast(psotr character, psysuser character, ppresctype character, pstate numeric, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, potdel character, ppeople character, pcabinet character varying, pisnapronly character, pinfo character varying, pisbron numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID mir.schedule.oid%type;
BEGIN
  V_OID := MIR.new_uuid();
    
  insert into mir.schedule( oid, sotr, sysuser, presctype, state, lpu, starton, endon, otdel, people, cabinet, isnapronly, info, isbron )
  values ( V_OID, psotr, psysuser, ppresctype, pstate, plpu, pstarton, pendon, potdel, ppeople, pcabinet, pisnapronly, pinfo, pisbron );
    
  RETURN V_OID;
END;
';


ALTER FUNCTION mir.schedule_insert_fast(psotr character, psysuser character, ppresctype character, pstate numeric, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, potdel character, ppeople character, pcabinet character varying, pisnapronly character, pinfo character varying, pisbron numeric) OWNER TO postgres;

--
-- TOC entry 1994 (class 1255 OID 17343)
-- Dependencies: 5396 14
-- Name: schedule_insert_live_schedule_with_otdel(character, character varying, numeric, character, character, character, integer, character, character varying, character, timestamp without time zone, timestamp without time zone, numeric, numeric, character varying, numeric, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_live_schedule_with_otdel(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID        MIR.SCHEDULE.oid%type;
    V_TICKET     MIR.SCHEDULE.TICKETNUMBER%TYPE;
    V_START_DATE TIMESTAMP;
    V_END_DATE   TIMESTAMP;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.guid_generate();
    ELSE
      V_OID := POID;
    END IF;
      V_START_DATE := PSTARTON;
      V_END_DATE   := PENDON;
    INSERT INTO MIR.SCHEDULE
      (OID,
       CABINET,
       INSITE,
       SYSUSER,
       PRESCTYPE,
       PEOPLE,
       STATE,
       ISNAPRONLY,
       TICKETNUMBER,
       LPU,
       PEOPLESCHEDULEPLACE,
       ISBRON,
       EXTRALINEREASON,
       UPDATEPEOPLEDATE,
       STARTON, 
       ENDON,
       INFO,
       OTDEL
       )
    VALUES
      (V_OID,
       PCABINET,
       PINSITE,
       PSYSUSER,
       PPRESCTYPE,
       PPEOPLE,
       PSTATE,
       PISNAPRONLY,
       V_TICKET,
       PLPU,
       PPEOPLESCHEDULEPLACE,
       PISBRON,
       PEXTRAREASON,
       CURRENT_DATE,
       V_START_DATE,
       V_END_DATE,
       PINFO,POTDEL);
       
   -- IF PPEOPLE IS NOT NULL AND PSENDSMS = 1 AND PSYSUSER IS NOT NULL THEN
   --  perform  mir.sms_insert_sms_new_doctorvisit(ppeople, pstarton, psysuser, pcabinet,pstate);
   -- END IF;
    
  
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне   
    perform mir.schedule_update_sysuser_workday(cast(PSYSUSER as char(36)), cast (CURRENT_TIMESTAMP as TIMESTAMP), cast(PPRESCTYPE as char(36)), 
    cast(PCABINET as VARCHAR),1);
  
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_live_schedule_with_otdel(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character) OWNER TO postgres;

--
-- TOC entry 1995 (class 1255 OID 17344)
-- Dependencies: 5396 14
-- Name: schedule_insert_live_schedule_with_otdel_new(character, character varying, numeric, character, character, character, integer, character, character varying, character, timestamp without time zone, timestamp without time zone, numeric, numeric, character varying, numeric, character varying, character, character, integer, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_live_schedule_with_otdel_new(poid character, pcabinet character varying, pinsite numeric, psysuser character, psotr character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character, ppresctype character, pmaxvisitors integer, pfinancingtype numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID        MIR.SCHEDULE.oid%type;
    V_TICKET     MIR.SCHEDULE.TICKETNUMBER%TYPE;
    V_START_DATE TIMESTAMP;
    V_END_DATE   TIMESTAMP;
    V_ISNAPRONLY VARCHAR;
  BEGIN
    IF POID IS NULL THEN
      V_OID := MIR.guid_generate();
    ELSE
      V_OID := POID;
    END IF;
    IF pisnapronly = ''0'' THEN
      V_ISNAPRONLY = NULL;
    ELSE
      V_ISNAPRONLY = pisnapronly;
    END IF;
      V_START_DATE := PSTARTON;
      V_END_DATE   := PENDON;
    INSERT INTO MIR.SCHEDULE
      (OID,
       CABINET,
       INSITE,
       SYSUSER,
       SOTR,
       PEOPLE,
       STATE,
       ISNAPRONLY,
       TICKETNUMBER,
       LPU,
       PEOPLESCHEDULEPLACE,
       ISBRON,
       EXTRALINEREASON,
       UPDATEPEOPLEDATE,
       STARTON, 
       ENDON,
       INFO,
       OTDEL,
       PRESCTYPE,
       MAXVISITORS,
       FINANCINGTYPE
       )
    VALUES
      (V_OID,
       PCABINET,
       PINSITE,
       PSYSUSER,
       PSOTR,
       PPEOPLE,
       PSTATE,
       V_ISNAPRONLY,
       V_TICKET,
       PLPU,
       PPEOPLESCHEDULEPLACE,
       PISBRON,
       PEXTRAREASON,
       CURRENT_DATE,
       V_START_DATE,
       V_END_DATE,
       PINFO,POTDEL,
       PPRESCTYPE,
       PMAXVISITORS,
       PFINANCINGTYPE
       );
       
   -- IF PPEOPLE IS NOT NULL AND PSENDSMS = 1 AND PSYSUSER IS NOT NULL THEN
   --  perform  mir.sms_insert_sms_new_doctorvisit(ppeople, pstarton, psysuser, pcabinet,pstate);
   -- END IF;
    
  
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне   
    perform mir.schedule_update_sysuser_workday(cast(PSYSUSER as char(36)), cast (CURRENT_TIMESTAMP as TIMESTAMP), cast(PPRESCTYPE as char(36)), 
    cast(PCABINET as VARCHAR),1);
  
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_live_schedule_with_otdel_new(poid character, pcabinet character varying, pinsite numeric, psysuser character, psotr character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character, ppresctype character, pmaxvisitors integer, pfinancingtype numeric) OWNER TO postgres;

--
-- TOC entry 1988 (class 1255 OID 17345)
-- Dependencies: 5396 14
-- Name: schedule_insert_lock_schedule_people(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_lock_schedule_people() RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    --PRAGMA AUTONOMOUS_TRANSACTION;
    V_OID MIR.PEOPLE.OID%TYPE;
  BEGIN
    V_OID := MIR.NEW_UUID();
    INSERT INTO MIR.PEOPLE (OID, DTCREATION, FIRSTNAME, LASTNAME, MIDDLENAME, BIRTHDAY) VALUES (V_OID, CURRENT_TIMESTAMP, ''ПАЦИЕНТ'',
       ''ДЛЯ БЛОКИРОВКИ'',
       ''ПРИЕМОВ НЕ УДАЛЯТЬ'',
       CURRENT_TIMESTAMP);
    INSERT INTO MIR.SETTINGS
      (OID, PARAM, VALUEPAR, DESCRIPTION)
    VALUES
      (MIR.NEW_UUID(),
       ''LOCK_SCHEDULE_PEOPLE'',
       V_OID,
       ''Пациент для блокировки приемов не удалять'');
    --COMMIT;
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_lock_schedule_people() OWNER TO postgres;

--
-- TOC entry 1997 (class 1255 OID 17346)
-- Dependencies: 5396 14
-- Name: schedule_insert_schedule(character, character varying, numeric, character, character, character, integer, character, character varying, character, timestamp without time zone, timestamp without time zone, numeric, numeric, character varying, numeric, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_schedule(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID        MIR.SCHEDULE.oid%type;
    V_TICKET     MIR.SCHEDULE.TICKETNUMBER%TYPE;
    V_START_DATE TIMESTAMP;
    V_END_DATE   TIMESTAMP;
  BEGIN
  -- by Spasskiy 27.09.2011
  --changed by Molochkov 15/12/2011
    IF POID IS NULL THEN
      V_OID := MIR.guid_generate();
    ELSE
      V_OID := POID;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() OR
       PSTATE = mir.schedule_get_CN_SCHEDULESTATE_EXTRALINE() THEN
      V_START_DATE := date_trunc(''day'', PSTARTON);
      V_END_DATE   := date_trunc(''day'', PENDON) + INTERVAL ''1'' MINUTE;
    ELSE
      V_START_DATE := PSTARTON;
      V_END_DATE   := PENDON;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() AND PTICKETNUMBER IS NULL THEN
      V_TICKET := mir.schedule_GETTICKETNUMBER(PSYSUSER, PSTARTON);
    END IF;
    INSERT INTO MIR.SCHEDULE
      (OID,
       CABINET,
       INSITE,
       SYSUSER,
       PRESCTYPE,
       PEOPLE,
       STATE,
       ISNAPRONLY,
       TICKETNUMBER,
       LPU,
       PEOPLESCHEDULEPLACE,
       ISBRON,
       EXTRALINEREASON,
       UPDATEPEOPLEDATE,
       STARTON, 
       ENDON,
       INFO
     
       )
    VALUES
      (V_OID,
       PCABINET,
       PINSITE,
       PSYSUSER,
       PPRESCTYPE,
       PPEOPLE,
       PSTATE,
       PISNAPRONLY,
       V_TICKET,
       PLPU,
       PPEOPLESCHEDULEPLACE,
       PISBRON,
       PEXTRAREASON,
       CURRENT_DATE,
       V_START_DATE,
       V_END_DATE,
       PINFO);
       
   -- IF PPEOPLE IS NOT NULL AND PSENDSMS = 1 AND PSYSUSER IS NOT NULL THEN
   --  perform  mir.sms_insert_sms_new_doctorvisit(ppeople, pstarton, psysuser, pcabinet,pstate);
   -- END IF;
    
  
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне   
    perform mir.schedule_update_sysuser_workday(cast(PSYSUSER as char(36)), cast (CURRENT_TIMESTAMP as TIMESTAMP), cast(PPRESCTYPE as char(36)), 
    cast(PCABINET as VARCHAR),1);
  
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_schedule(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying) OWNER TO postgres;

--
-- TOC entry 1998 (class 1255 OID 17347)
-- Dependencies: 5396 14
-- Name: schedule_insert_schedule_by_day_of_week(character, character varying, numeric, character, character, numeric, character, character, character, numeric, character varying, character varying, integer, integer, integer, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_schedule_by_day_of_week(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, pstate numeric, ppresc character, pisnapronly character, plpu character, pisbron numeric, pinfo character varying, ptime character varying, pduration integer, pday_of_week integer, pcount integer, pdate date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011

    V_OID         MIR.SCHEDULE.OID%TYPE;
    V_START_DATE  DATE;
    V_END_DATE    DATE;
    NEXT_START_DATE DATE;
    V_DAY_OF_WEEK VARCHAR(10);
    V_CNT         INTEGER;
    C         record;
   --вставляем точки расписания по дням недели
  --PTIME - время приема в формате ''DD.MM.YYYY''
  --PDURATION - длительность приема
  --PDAY_OF_WEEK - номер дня недели - 1 - воскр.
  --PCOUNT - кол-во дней для заполнения

  BEGIN
  
    FOR C IN (SELECT *
                FROM (SELECT TO_CHAR(PDATE + LEVEL - 1, ''d'') DOW,
                             TO_CHAR(PDATE + LEVEL - 1, ''Day'') D
        FROM    (
        VALUES
        (1),
        (2),
        (3),
        (4),
        (5),
        (6),
        (7)
        ) AS q (level)
) qq
               WHERE to_number(DOW, ''9'') = PDAY_OF_WEEK) LOOP
      V_DAY_OF_WEEK := C.D;
    END LOOP;
  
    --V_START_DATE := TO_DATE(TO_CHAR(date_trunc(''day'', PDATE), ''DD.MM.YYYY'') || PTIME,
    --                        ''DD.MM.YYYY HH24:MI:SS'');
    V_START_DATE := to_timestamp(TO_CHAR(date_trunc(''day'', PDATE), ''DD.MM.YYYY'') ||'' ''|| PTIME,
                            ''DD MM YYYY HH24:MI:SS'');
    FOR I IN 1 .. PCOUNT LOOP
      IF I = 1 THEN
         NEXT_START_DATE := V_START_DATE - 1;
      ELSE 
         NEXT_START_DATE := V_START_DATE;
      END IF;
      V_START_DATE := mir.next_date(NEXT_START_DATE, PDAY_OF_WEEK);
      V_END_DATE   := V_START_DATE + (PDURATION||'' MINUTE'')::interval; --NUMTODSINTERVAL(PDURATION, ''MINUTE'');
    
      IF POID IS NULL THEN
        V_OID := MIR.NEW_UUID();
      ELSE
        V_OID := POID;
      END IF;
      SELECT COUNT(1)
        INTO V_CNT
        FROM MIR.SCHEDULE_INFO S
       WHERE S.SYSUSER = PSYSUSER
         AND S.PRESCTYPE = PPRESCTYPE
         AND S.LPU = PLPU
         AND S.STARTON = V_START_DATE;
      IF V_CNT = 0 THEN

        INSERT INTO MIR.SCHEDULE
          (OID,
           CABINET,
           INSITE,
           SYSUSER,
           PRESCTYPE,
           STATE,
           ISNAPRONLY,
           LPU,
           ISBRON,
           INFO, 
           STARTON, 
           ENDON)
        VALUES
          (V_OID,
           PCABINET,
           PINSITE,
           PSYSUSER,
           PPRESCTYPE,
           PSTATE,
           PISNAPRONLY,
           PLPU,
           PISBRON,
           PINFO,
           V_START_DATE,
           V_END_DATE);
      
        --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне
        perform mir.schedule_update_sysuser_workday(PSYSUSER,
                               TRUNC(V_START_DATE),
                               PPRESCTYPE,
                               PCABINET,
                               PDURATION);
      END IF;
    END LOOP;
  END;

';


ALTER FUNCTION mir.schedule_insert_schedule_by_day_of_week(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, pstate numeric, ppresc character, pisnapronly character, plpu character, pisbron numeric, pinfo character varying, ptime character varying, pduration integer, pday_of_week integer, pcount integer, pdate date) OWNER TO postgres;

--
-- TOC entry 1999 (class 1255 OID 17348)
-- Dependencies: 5396 14
-- Name: schedule_insert_schedule_with_otdel(character, character varying, numeric, character, character, character, integer, character, character varying, character, timestamp without time zone, timestamp without time zone, numeric, numeric, character varying, numeric, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_schedule_with_otdel(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID        MIR.SCHEDULE.oid%type;
    V_TICKET     MIR.SCHEDULE.TICKETNUMBER%TYPE;
    V_START_DATE TIMESTAMP;
    V_END_DATE   TIMESTAMP;
  BEGIN
  -- by Spasskiy 27.09.2011
  --changed by Molochkov 15/12/2011
    IF POID IS NULL THEN
      V_OID := MIR.guid_generate();
    ELSE
      V_OID := POID;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() OR
       PSTATE = mir.schedule_get_CN_SCHEDULESTATE_EXTRALINE() THEN
      V_START_DATE := date_trunc(''day'', PSTARTON);
      V_END_DATE   := date_trunc(''day'', PENDON) + INTERVAL ''1'' MINUTE;
    ELSE
      V_START_DATE := PSTARTON;
      V_END_DATE   := PENDON;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() AND PTICKETNUMBER IS NULL THEN
      V_TICKET := mir.schedule_GETTICKETNUMBER(PSYSUSER, PSTARTON);
    END IF;
    INSERT INTO MIR.SCHEDULE
      (OID,
       CABINET,
       INSITE,
       SYSUSER,
       PRESCTYPE,
       PEOPLE,
       STATE,
       ISNAPRONLY,
       TICKETNUMBER,
       LPU,
       PEOPLESCHEDULEPLACE,
       ISBRON,
       EXTRALINEREASON,
       UPDATEPEOPLEDATE,
       STARTON, 
       ENDON,
       INFO,
       OTDEL
       )
    VALUES
      (V_OID,
       PCABINET,
       PINSITE,
       PSYSUSER,
       PPRESCTYPE,
       PPEOPLE,
       PSTATE,
       PISNAPRONLY,
       V_TICKET,
       PLPU,
       PPEOPLESCHEDULEPLACE,
       PISBRON,
       PEXTRAREASON,
       CURRENT_DATE,
       V_START_DATE,
       V_END_DATE,
       PINFO,POTDEL);
       
   -- IF PPEOPLE IS NOT NULL AND PSENDSMS = 1 AND PSYSUSER IS NOT NULL THEN
   --  perform  mir.sms_insert_sms_new_doctorvisit(ppeople, pstarton, psysuser, pcabinet,pstate);
   -- END IF;
    
  
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне   
    perform mir.schedule_update_sysuser_workday(cast(PSYSUSER as char(36)), cast (CURRENT_TIMESTAMP as TIMESTAMP), cast(PPRESCTYPE as char(36)), 
    cast(PCABINET as VARCHAR),1);
  
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_schedule_with_otdel(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character) OWNER TO postgres;

--
-- TOC entry 2000 (class 1255 OID 17349)
-- Dependencies: 5396 14
-- Name: schedule_insert_schedule_with_otdel_new(character, character varying, numeric, character, character, character, integer, character, character varying, character, timestamp without time zone, timestamp without time zone, numeric, numeric, character varying, numeric, character varying, character, character, integer, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_insert_schedule_with_otdel_new(poid character, pcabinet character varying, pinsite numeric, psysuser character, psotr character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character, ppresctype character, pmaxvisitors integer, pfinancingtype numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID        MIR.SCHEDULE.oid%type;
    V_TICKET     MIR.SCHEDULE.TICKETNUMBER%TYPE;
    V_START_DATE TIMESTAMP;
    V_END_DATE   TIMESTAMP;
  BEGIN
  -- by Spasskiy 27.09.2011
  --changed by Molochkov 15/12/2011
    IF POID IS NULL THEN
      V_OID := MIR.guid_generate();
    ELSE
      V_OID := POID;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() OR
       PSTATE = mir.schedule_get_CN_SCHEDULESTATE_EXTRALINE() THEN
      V_START_DATE := date_trunc(''day'', PSTARTON);
      V_END_DATE   := date_trunc(''day'', PENDON) + INTERVAL ''1'' MINUTE;
    ELSE
      V_START_DATE := PSTARTON;
      V_END_DATE   := PENDON;
    END IF;
    IF PSTATE = mir.schedule_get_cn_schedulestate_liveline() AND PTICKETNUMBER IS NULL THEN
      V_TICKET := mir.schedule_GETTICKETNUMBER(PSYSUSER, PSTARTON);
    END IF;
    INSERT INTO MIR.SCHEDULE
      (OID,
       CABINET,
       INSITE,
       SYSUSER,
       SOTR,
       PEOPLE,
       STATE,
       ISNAPRONLY,
       TICKETNUMBER,
       LPU,
       PEOPLESCHEDULEPLACE,
       ISBRON,
       EXTRALINEREASON,
       UPDATEPEOPLEDATE,
       STARTON, 
       ENDON,
       INFO,
       OTDEL,
       PRESCTYPE,
       MAXVISITORS,
       FINANCINGTYPE)
    VALUES
      (V_OID,
       PCABINET,
       PINSITE,
       PSYSUSER,
       PSOTR,
       PPEOPLE,
       PSTATE,
       PISNAPRONLY,
       V_TICKET,
       PLPU,
       PPEOPLESCHEDULEPLACE,
       PISBRON,
       PEXTRAREASON,
       CURRENT_DATE,
       V_START_DATE,
       V_END_DATE,
       PINFO,POTDEL,
       PPRESCTYPE,
       pmaxvisitors,
       pfinancingtype);
       
   -- IF PPEOPLE IS NOT NULL AND PSENDSMS = 1 AND PSYSUSER IS NOT NULL THEN
   --  perform  mir.sms_insert_sms_new_doctorvisit(ppeople, pstarton, psysuser, pcabinet,pstate);
   -- END IF;
    
  
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне   
    perform mir.schedule_update_sysuser_workday(cast(PSYSUSER as char(36)), cast (CURRENT_TIMESTAMP as TIMESTAMP), cast(PPRESCTYPE as char(36)), 
    cast(PCABINET as VARCHAR),1);
  
    RETURN V_OID;
  END;
';


ALTER FUNCTION mir.schedule_insert_schedule_with_otdel_new(poid character, pcabinet character varying, pinsite numeric, psysuser character, psotr character, ppeople character, pstate integer, pisnapronly character, pticketnumber character varying, plpu character, pstarton timestamp without time zone, pendon timestamp without time zone, ppeoplescheduleplace numeric, pisbron numeric, pextrareason character varying, psendsms numeric, pinfo character varying, potdel character, ppresctype character, pmaxvisitors integer, pfinancingtype numeric) OWNER TO postgres;

--
-- TOC entry 2001 (class 1255 OID 17350)
-- Dependencies: 5396 14
-- Name: schedule_is_schedule_free(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_is_schedule_free(poid character) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES integer := 0;
    c record;
  BEGIN
    FOR C IN (SELECT STATE FROM MIR.SCHEDULE WHERE OID = POID AND STARTON > NOW()) LOOP
      IF C.STATE = MIR.schedule_get_cn_schedulestate_free() THEN
        V_RES := 1;
      END IF;
    END LOOP;
    RETURN V_RES;
  END;
';


ALTER FUNCTION mir.schedule_is_schedule_free(poid character) OWNER TO postgres;

--
-- TOC entry 2002 (class 1255 OID 17351)
-- Dependencies: 5396 14
-- Name: schedule_is_schedule_registr_only(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_is_schedule_registr_only(poid character) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE  
    V_RES INTEGER := 0;
    C record;
  BEGIN
    FOR C IN (SELECT S.ISNAPRONLY
                FROM MIR.SCHEDULE S, MIR.DICTIONARY D
               WHERE D.OID = S.ISNAPRONLY
                 AND S.OID = POID
                 AND D.SYNONYM IN (''SY_BOLNICH'', ''SY_NAPRAVLENIE'')) LOOP
      V_RES := 1;
    END LOOP;
    RETURN V_RES;
  END;
';


ALTER FUNCTION mir.schedule_is_schedule_registr_only(poid character) OWNER TO postgres;

--
-- TOC entry 1951 (class 1255 OID 17352)
-- Dependencies: 5396 14
-- Name: schedule_lock_schedule(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_lock_schedule(poid character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    V_TEMP_PEOPLE_OID MIR.SCHEDULE.PEOPLE%TYPE;
  BEGIN
    select mir.schedule_get_lock_schedule_people() into V_TEMP_PEOPLE_OID;
  
    UPDATE MIR.SCHEDULE
       SET PEOPLE = V_TEMP_PEOPLE_OID, STATE = mir.schedule_get_cn_schedulestate_bron()
     WHERE OID = POID
       AND PEOPLE IS NULL;
    IF SQL%ROWCOUNT <> 0 THEN
      INSERT INTO MIR.SCHEDULE_LOCK
        (SCHEDULE, LOCK_DATE)
      VALUES
        (POID, CURRENT_TIMESTAMP);
      RETURN 1;
    ELSE
      RETURN 0;
    END IF;
  END;
  ';


ALTER FUNCTION mir.schedule_lock_schedule(poid character) OWNER TO postgres;

--
-- TOC entry 2004 (class 1255 OID 17353)
-- Dependencies: 5396 14
-- Name: schedule_move_schedule(character, character, character, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_move_schedule(pold_oid character, pnew_oid character, psysuser character, pdate date DEFAULT ('now'::text)::date, pnote character varying DEFAULT ''::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    V_NEW_CAB     MIR.SCHEDULE.CABINET%TYPE;
    V_NEW_SYSUSER MIR.SCHEDULE.SYSUSER%TYPE;
    V_NEW_DATE    DATE;
    V_NEW_STATE   MIR.SCHEDULE.STATE%TYPE;
    C record;
  BEGIN
  
    SELECT S.CABINET, S.STARTON, S.SYSUSER, S.STATE
      INTO V_NEW_CAB, V_NEW_DATE, V_NEW_SYSUSER, V_NEW_STATE
      FROM MIR.SCHEDULE_INFO S
     WHERE OID = PNEW_OID;
    FOR C IN (SELECT S.OID,
                     PNEW_OID,
                     S.CABINET,
                     S.SYSUSER,
                     S.PRESCTYPE,
                     S.PEOPLE,
                     S.STATE,
                     S.LPU,
                     S.STARTON,
                     PSYSUSER,
                     1 ACTION_ID,
                     PDATE
                FROM MIR.SCHEDULE_INFO S
               WHERE S.OID = POLD_OID) LOOP
      IF MIR.SETTINGS_GET_PARAMETER(''LOG_MOVED_SCHED'', ''1'') = ''1'' THEN
        -- сохраняем историю
        INSERT INTO MIR.SCHEDULE_HISTORY
          (OLD_OID,
           NEW_OID,
           CABINET,
           SYSUSER,
           PRESCTYPE,
           PEOPLE,
           STATE,
           LPU,
           STARTON,
           ACTION_SYSUSER,
           ACTION_ID,
           ACTION_DATE,
           NOTE)
        VALUES
          (C.OID,
           PNEW_OID,
           C.CABINET,
           C.SYSUSER,
           C.PRESCTYPE,
           C.PEOPLE,
           C.STATE,
           C.LPU,
           C.STARTON,
           PSYSUSER,
           1, -- перенос
           PDATE,
           PNOTE);
      END IF;
      -- отправляем смс
   --   perform MIR.SMS_INSERT_SMS_MOVE_DOCTORVISIT(C.PEOPLE,
   --                                           C.STARTON,
   --                                           C.SYSUSER,
   --                                           C.CABINET,
   --                                           V_NEW_DATE,
   --                                           V_NEW_SYSUSER,
    --                                          V_NEW_CAB,
    --                                          V_NEW_STATE);
    
    END LOOP;
    perform MIR.SCHEDULE_CANCEL_SCHEDULE(POLD_OID, PSYSUSER, PDATE, 1);
  END;
';


ALTER FUNCTION mir.schedule_move_schedule(pold_oid character, pnew_oid character, psysuser character, pdate date, pnote character varying) OWNER TO postgres;

--
-- TOC entry 2005 (class 1255 OID 17354)
-- Dependencies: 5396 14
-- Name: schedule_people_tr_insert(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_people_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  if (TG_OP = ''INSERT'') and (NEW.OID IS NULL) THEN
    NEW.OID = mir.new_uuid();
  end if;

  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    SELECT LPU INTO V_LPU FROM mir.schedule where oid = OLD.schedule;
    ELSE
    V_OID = NEW.OID;
    SELECT LPU INTO V_LPU FROM mir.schedule where oid = NEW.schedule;
  END IF;

  PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;  
END;
';


ALTER FUNCTION mir.schedule_people_tr_insert() OWNER TO postgres;

--
-- TOC entry 2006 (class 1255 OID 17355)
-- Dependencies: 5396 14
-- Name: schedule_people_trigger(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_people_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    SELECT LPU INTO V_LPU FROM mir.schedule where oid = OLD.schedule;
    ELSE
    V_OID = NEW.OID;
    SELECT LPU INTO V_LPU FROM mir.schedule where oid = NEW.schedule;
  END IF;


    PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.schedule_people_trigger() OWNER TO postgres;

--
-- TOC entry 2007 (class 1255 OID 17356)
-- Dependencies: 5396 14
-- Name: schedule_sms_email(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_sms_email() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_telsot varchar;
  v_doctor varchar;
  v_sysuser varchar;
  v_email varchar;
BEGIN
select s.sysuser into v_sysuser from mir.sotr s where s.oid=new.sotr;
select mir.people_info_get_people_shortfio(v_sysuser) into v_doctor;
  IF(NEW.people is not NULL and old.people is null) then
  
  select p.telsot1, p.email into v_telsot, v_email from mir.people p where p.oid=new.people;
  
  insert into mir.smscenter(oid, numbertel, smstext, smsst, dateincoming, people, schedule)
  VALUES(mir.new_uuid(),v_telsot, ''Прием ''|| new.starton||'', врач ''||v_doctor, 0, now(), new.people, new.oid);
  
  insert into mir.email_buffer (oid, "text", status, date_create, email_to, schedule)
  values (mir.new_uuid(), ''Уважаемый(ая) ''||mir.people_info_get_people_fullfio(new.people)||'',


Вы записаны к врачу: ''||v_doctor||''
Поликлиника: ''||mir.base_class_get_company_fullname(NEW.lpu)||''
Прием: ''||NEW.starton||''

Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.
С уважением, администратор системы.'', 0, now(), v_email, new.oid);
  end if;
  
  IF(NEW.people is NULL and old.people is not null) then
  
  select p.telsot1, p.email into v_telsot, v_email from mir.people p where p.oid=old.people;
  
  insert into mir.smscenter(oid, numbertel, smstext, smsst, dateincoming, people, schedule)
  VALUES(mir.new_uuid(),v_telsot, ''Прием ''|| old.starton||'', врач ''||v_doctor||'', отменен'', 0, now(), old.people, old.oid);
  
  insert into mir.email_buffer (oid, "text", status, date_create, email_to, schedule)
  values (mir.new_uuid(), ''Уважаемый(ая) ''||mir.people_info_get_people_fullfio(old.people)||'',


Ваш прием к врачу: ''||v_doctor||''
Поликлиника: ''||mir.base_class_get_company_fullname(old.lpu)||''
Время приема: ''||old.starton||'', отменен.

Пожалуйста, не отвечайте на это письмо, т.к. оно сгенерировано автоматически.
С уважением, администратор системы.'', 0, now(), v_email, old.oid);
  end if;
  return new;
END;
';


ALTER FUNCTION mir.schedule_sms_email() OWNER TO postgres;

--
-- TOC entry 2008 (class 1255 OID 17357)
-- Dependencies: 5396 14
-- Name: schedule_tr_delete(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_count INTEGER;
  v_count_live INTEGER;
  v_count_extra INTEGER;
  v_oid_work char(36);
  v_oid_sotrWork char(36);
  v_time_s integer;
  v_time_po integer;
  v_first timestamp;
  v_last timestamp;
BEGIN
  select w.oid into v_oid_work from mir.workschedule w 
  where w.workdate = to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') and w.sysuser = old.sysuser and w.presctype=new.presctype and w.cabinet=old.cabinet;
  
  select count(s.oid) into v_count from mir.schedule s
  where s.people is null and s.state = 0 and s.isbron=0 and s.sysuser=old.sysuser and s.presctype=old.presctype and s.cabinet = old.cabinet
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'');
  
   select count(s.oid) into v_count_live from mir.schedule s
  where s.people is not null and s.state = 4 and s.sysuser=old.sysuser and s.presctype=old.presctype and s.cabinet = old.cabinet
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'');
  
  select count(s.oid) into v_count_extra from mir.schedule s
  where s.people is not null and s.state = 5 and s.sysuser=old.sysuser and s.presctype=old.presctype and s.cabinet = old.cabinet
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'');
  
  select max(s.endon), min(s.starton) into v_last, v_first from mir.schedule s
  where s.sysuser=old.sysuser and s.presctype=old.presctype and s.state != 4 and s.state!=5 and s.lpu = old.lpu and s.cabinet = old.cabinet
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'');
  
  v_time_s := 3600*cast(to_char(v_first, ''hh24'') as integer)+60*cast(to_char(v_first, ''mi'') as integer)+cast(to_char(v_first, ''ss'') as integer);
  v_time_po := 3600*cast(to_char(v_last, ''hh24'') as integer)+60*cast(to_char(v_last, ''mi'') as integer)+cast(to_char(v_last, ''ss'') as integer);
  
  IF(v_oid_work is null) then
  v_oid_sotrWork:=mir.new_uuid();
  insert into mir.sotrworkday(oid, dates, times, timepo, cabinet, sysuser)
  values (v_oid_sotrWork, to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy''), 
  v_time_s, v_time_po, old.cabinet, old.sysuser );
  v_oid_work := mir.new_uuid();
  insert into mir.workschedule (oid, sysuser, presctype, workdate, time_begin, time_end, cabinet, lpu, free_cnt, live_cnt, extra_cnt, sotrworkday)
  values (v_oid_work, old.sysuser, old.presctype, to_date(to_char(old.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy''),
  v_time_s, v_time_po, old.cabinet, old.lpu, v_count, v_count_live, v_count_extra, v_oid_sotrWork);
  
  ELSE
  
  update mir.workschedule  set free_cnt = v_count, 
  time_begin = v_time_s, 
  time_end = v_time_po,
  cabinet = old.cabinet, live_cnt=v_count_live, extra_cnt=v_count_extra 
  where oid = v_oid_work;
  update mir.sotrworkday set times = v_time_s, timepo = v_time_po, cabinet = old.cabinet where sysuser = old.sysuser and to_char(dates, ''dd.mm.yyyy'') = to_char(old.starton, ''dd.mm.yyyy'');
  end if;
  
END;
';


ALTER FUNCTION mir.schedule_tr_delete() OWNER TO postgres;

--
-- TOC entry 2009 (class 1255 OID 17358)
-- Dependencies: 5396 14
-- Name: schedule_trigger(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_count INTEGER;
  v_count_live INTEGER;
  v_count_extra INTEGER;
  v_oid_work char(36);
  v_oid_sotrWork char(36);
  v_time_s integer;
  v_time_po integer;
  v_first timestamp;
  v_last timestamp;
BEGIN
  select w.oid
  into v_oid_work
  from mir.workschedule w
  where w.workdate = CAST(old.starton AS date)
        and w.sysuser = old.sysuser
        and w.presctype = old.presctype
        and w.cabinet = old.cabinet
        and w.otdel = old.otdel;
  ----------

 select 
	count(case when s.state=0 and s.people is null and s.isbron=0 then 1 end),
    count(case when s.state=4 and s.people is not null then 1 end),
    count(case when s.state=5 and s.people is not null then 1 end) into v_count, v_count_live,  v_count_extra
from mir.schedule as s 
	where s.sysuser=old.sysuser 
    and s.presctype=old.presctype
    and s.cabinet = old.cabinet
    and s.starton = old.starton
    and s.otdel=old.otdel;

  select max(s.endon),
         min(s.starton)
  into v_last,
       v_first
  from mir.schedule s
  where s.sysuser = old.sysuser
        and s.presctype = old.presctype
        and s.cabinet = old.cabinet
        and s.starton = old.starton
        and s.otdel = old.otdel;
  ----------
  v_time_s := 3600*cast(to_char(v_first, ''hh24'') as integer)+60*cast(to_char(v_first, ''mi'') as integer)+cast(to_char(v_first, ''ss'') as integer);
  v_time_po := 3600*cast(to_char(v_last, ''hh24'') as integer)+60*cast(to_char(v_last, ''mi'') as integer)+cast(to_char(v_last, ''ss'') as integer);
  if (TG_OP=''DELETE'') then
    if(v_count!=0) then
      v_count=v_count-1;
    end if;
  end if;
  IF(v_oid_work is null) then
    v_oid_sotrWork:=mir.new_uuid();
    insert into mir.sotrworkday(oid, dates, times, timepo, cabinet, sysuser)
    values (v_oid_sotrWork, CAST(old.starton as date), v_time_s, v_time_po, old.cabinet, old.sysuser);
    v_oid_work := mir.new_uuid();
    insert into mir.workschedule(oid, sysuser, presctype, workdate, time_begin, time_end, cabinet, lpu, free_cnt, live_cnt, extra_cnt, sotrworkday, otdel)
    values (v_oid_work, old.sysuser, old.presctype, CAST(old.starton as date), v_time_s, v_time_po, old.cabinet, old.lpu, v_count, v_count_live, v_count_extra, v_oid_sotrWork, old.otdel)
    ;

    ELSE
    update mir.workschedule
    set free_cnt = v_count,
        live_cnt = v_count_live,
        extra_cnt = v_count_extra
    where oid = v_oid_work;
  end if;

  if (TG_OP=''DELETE'') then
    return old;
    else
    return new;
  end if;

  return new;
END;
';


ALTER FUNCTION mir.schedule_trigger() OWNER TO postgres;

--
-- TOC entry 2012 (class 1255 OID 17359)
-- Dependencies: 5396 14
-- Name: schedule_trigger_after(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_trigger_after() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_count INTEGER;
  v_count_live INTEGER;
  v_count_extra INTEGER;
  v_oid_work char(36);
  v_oid_sotrWork char(36);
  v_time_s integer;
  v_time_po integer;
  v_first timestamp;
  v_last timestamp;
  v_datestart date;
  v_dateval date;
BEGIN
	v_datestart := new.starton;
  select w.oid into v_oid_work 
  from mir.workschedule w 
  where w.workdate =  v_datestart::date
  and w.sysuser = new.sysuser 
  and w.presctype=new.presctype 
  and w.cabinet=new.cabinet 
  and w.otdel = new.otdel;
  
  select 
	count(case when s.state=0 and s.people is null and s.isbron=0 then 1 end),
    count(case when s.state=4 and s.people is not null then 1 end),
    count(case when s.state=5 and s.people is not null then 1 end) into v_count, v_count_live,  v_count_extra
from mir.schedule as s 
	where s.sysuser=new.sysuser 
    and s.presctype=new.presctype
    and s.cabinet = new.cabinet
    and s.starton = new.starton
    and s.otdel=new.otdel;
  
  select max(s.endon), min(s.starton) into v_last, v_first 
  from mir.schedule s
  where s.sysuser=new.sysuser 
  and s.presctype=new.presctype 
  and s.state != 4 
  and s.state != 5 
  and s.lpu = new.lpu 
  and s.cabinet = new.cabinet
  and s.starton = new.starton
  and s.otdel=new.otdel;
  
  v_time_s := 3600*cast(to_char(v_first, ''hh24'') as integer)+60*cast(to_char(v_first, ''mi'') as integer)+cast(to_char(v_first, ''ss'') as integer);
  v_time_po := 3600*cast(to_char(v_last, ''hh24'') as integer)+60*cast(to_char(v_last, ''mi'') as integer)+cast(to_char(v_last, ''ss'') as integer);
  
  IF(v_oid_work is null) then
	  v_oid_sotrWork:=mir.new_uuid();
	  insert into mir.sotrworkday(oid, dates, times, timepo, cabinet, sysuser)
	  values (v_oid_sotrWork, date(v_datestart), 
	  v_time_s, v_time_po, new.cabinet, new.sysuser );
	  v_oid_work := mir.new_uuid();
	  insert into mir.workschedule (oid, sysuser, presctype, workdate, time_begin, time_end, cabinet, lpu, free_cnt, live_cnt, extra_cnt, sotrworkday, otdel)
	  values (v_oid_work, new.sysuser, new.presctype, date(v_datestart),
	  v_time_s, v_time_po, new.cabinet, new.lpu, v_count, v_count_live, v_count_extra, v_oid_sotrWork, new.otdel);
  ELSE 
	  update mir.workschedule  set free_cnt = v_count, 
	  time_begin = v_time_s, 
	  time_end = v_time_po,
	  cabinet = new.cabinet, 
      live_cnt=v_count_live, 
      extra_cnt=v_count_extra 
	  where oid = v_oid_work;
	  update mir.sotrworkday set 
      times = v_time_s, 
      timepo = v_time_po, 
      cabinet = new.cabinet 
      where sysuser = NEW.sysuser 
      and dates = date(v_datestart);
    END IF;
  return new;
END;
';


ALTER FUNCTION mir.schedule_trigger_after() OWNER TO postgres;

--
-- TOC entry 2013 (class 1255 OID 17360)
-- Dependencies: 5396 14
-- Name: schedule_trigger_before(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_trigger_before() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  v_peopleold char(36);
  v_peoplenew char(36);
  v_starton TIMESTAMP;
  v_sysuser char(36);
  v_cabinet char(36);
  
BEGIN

  v_peopleold:=old.people;
  v_peoplenew:=new.people;
  v_starton:=new.starton;
  v_cabinet:=new.cabinet;
  v_sysuser:=new.sysuser;
  if (v_peoplenew is not null and v_peopleold is null) then

  -- записали пациента
  perform  mir.sms_insert_sms_new_doctorvisit(v_peoplenew,v_starton,v_sysuser,v_cabinet);
  perform   mir.email_insert_new_doctorvisit (v_peoplenew,v_starton,v_sysuser,v_cabinet,0,new.oid);
  
  end if;
    if (v_peoplenew is null and v_peopleold is not null) then
      perform  mir.sms_insert_sms_cancel_doctorvisit(v_peopleold,v_starton,v_sysuser,v_cabinet);
      perform  mir.email_cancel_doctorvisit(v_peopleold,v_starton,v_sysuser,v_cabinet);      

  end if;
  
return new;
END;
';


ALTER FUNCTION mir.schedule_trigger_before() OWNER TO postgres;

--
-- TOC entry 2014 (class 1255 OID 17361)
-- Dependencies: 5396 14
-- Name: schedule_trigger_web_buffer_transfer(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_trigger_web_buffer_transfer() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  pid NUMERIC;
  existI NUMERIC;
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_IS_CHANGED BOOLEAN;
  V_OID VARCHAR;
  V_LPU VARCHAR;
  V_STARTON TIMESTAMP;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  V_IS_CHANGED := FALSE;
  -- для заливки обновлений только по приемам пациентов в ФЭР, указываем как "PEOPLE"  (S.Ponomarenko)
  if TG_OP = ''UPDATE'' THEN
    IF ((coalesce(NEW.PEOPLESCHEDULEPLACE,-1) <> coalesce(OLD.PEOPLESCHEDULEPLACE,-1))
        OR (coalesce(NEW.PEOPLE,'''') <> coalesce(OLD.PEOPLE,''''))
        OR (coalesce(NEW.STATE,-1) <> coalesce(OLD.STATE,-1))
        OR (coalesce(NEW.UPDATEPEOPLEDATE,DATE ''01.01.1000'') <> coalesce(OLD.UPDATEPEOPLEDATE,DATE ''01.01.1000''))
      )
      THEN
      V_ACTION = ''PEOPLE'';
      V_IS_CHANGED := TRUE;
    END IF;

  -- берем  изменения только по определенным полям без "мусора" (S.Ponomarenko)
    IF ((coalesce(NEW.INFO,'''') <> coalesce(OLD.INFO,''''))
        OR (coalesce(NEW.OID,'''') <> coalesce(OLD.OID,''''))
        OR (coalesce(NEW.CABINET,'''') <> coalesce(OLD.CABINET,''''))
        OR (coalesce(NEW.INSITE,-1) <> coalesce(OLD.INSITE,-1))
        OR (coalesce(NEW.SYSUSER,'''') <> coalesce(OLD.SYSUSER,''''))
        OR (coalesce(NEW.PRESCTYPE,'''') <> coalesce(OLD.PRESCTYPE,''''))
        OR (coalesce(NEW.ISNAPRONLY,'''') <> coalesce(OLD.ISNAPRONLY,''''))
        OR (coalesce(NEW.TICKETNUMBER,'''') <> coalesce(OLD.TICKETNUMBER,''''))
        OR (coalesce(NEW.LPU,'''') <> coalesce(OLD.LPU,''''))
        OR (coalesce(NEW.ISBRON,-1) <> coalesce(OLD.ISBRON,-1))
        OR (coalesce(NEW.SCHEDULECALLSTATE,-1) <> coalesce(OLD.SCHEDULECALLSTATE,-1))
        OR (coalesce(NEW.SCHEDULECALLSTATECOMMENT,'''') <> coalesce(OLD.SCHEDULECALLSTATECOMMENT,''''))
        OR (coalesce(NEW.SCHEDULECALLSTATEDATE,DATE ''01.01.1000'') <> coalesce(OLD.SCHEDULECALLSTATEDATE,DATE ''01.01.1000''))
        OR (coalesce(NEW.SCHEDULECALLSTATESYSUSER,'''') <> coalesce(OLD.SCHEDULECALLSTATESYSUSER,''''))
        OR (coalesce(NEW.EXTRALINEREASON,'''') <> coalesce(OLD.EXTRALINEREASON,''''))
      )
      THEN
      V_ACTION = ''UPDATE'';
      V_IS_CHANGED := TRUE;
    END IF;

  END IF;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_IS_CHANGED := TRUE;
    V_OID = OLD.OID;
    V_LPU = OLD.lpu;
    V_STARTON = OLD.STARTON;
    ELSE
    V_OID = NEW.OID;
    V_LPU = NEW.lpu;
    V_STARTON = NEW.STARTON;
  END IF;

	if TG_OP = ''INSERT'' THEN
		V_IS_CHANGED := True;
  END IF;

  IF V_IS_CHANGED  THEN
  
    PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);

      
	-- буфер для передачи расписания на ФЭР  (S.Ponomarenko)
    PERFORM  mir.pkg_web_service_add_buffer_transfer_fer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU,
      V_STARTON);


	-- буфер для передачи расписания на региональную систему  (S.Ponomarenko)      
    PERFORM  mir.pkg_web_service_add_buffer_transfer_fer(
      V_TABLE_NAME || ''_REG'',
      V_ACTION,
      V_OID,
      V_LPU,
      V_STARTON);


  END IF;

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;

END;
';


ALTER FUNCTION mir.schedule_trigger_web_buffer_transfer() OWNER TO postgres;

--
-- TOC entry 2015 (class 1255 OID 17362)
-- Dependencies: 5396 14
-- Name: schedule_update_cabinet_for_link(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_update_cabinet_for_link(potdel character, pcabinet_name character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
cabinetoid char(36);
BEGIN
select ca.oid into cabinetoid 
    from mir.cabinet ca
    where ca.otdel = potdel
    and ca.cabinet_name = pcabinet_name;
    if cabinetoid is null THEN
    	return ''undefined'';
    else
		return cabinetoid;
    end if;
END;
';


ALTER FUNCTION mir.schedule_update_cabinet_for_link(potdel character, pcabinet_name character varying) OWNER TO postgres;

--
-- TOC entry 2016 (class 1255 OID 17363)
-- Dependencies: 5396 14
-- Name: schedule_update_people_state(character, character, numeric, numeric, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_update_people_state(poid character, ppeople character, pstate numeric, ppeoplescheduleplace numeric DEFAULT NULL::numeric, pdo_send_sms integer DEFAULT 1) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
    r INTEGER;
    
  BEGIN
    select trunc( 8999 * random() ) + 1000 into R;
    UPDATE MIR.SCHEDULE
       SET PEOPLE              = $2,
           STATE               = $3,
           PEOPLESCHEDULEPLACE = PUBLIC.NVL2(cast(PPEOPLESCHEDULEPLACE as "numeric"),
           						 PUBLIC.NVL2(PEOPLESCHEDULEPLACE,
                                           PEOPLESCHEDULEPLACE,
                                           PPEOPLESCHEDULEPLACE),
                                      NULL),
           TICKETNUMBER        = PUBLIC.NVL2(PPEOPLE, TICKETNUMBER, NULL)
     WHERE OID = $1;
  
    IF PDO_SEND_SMS = 1 AND PSTATE = mir.schedule_get_cn_schedulestate_bron() AND
       PPEOPLE IS NOT NULL THEN
      FOR C IN (SELECT SYSUSER, STARTON, CABINET, STATE
                  FROM MIR.SCHEDULE_INFO
                 WHERE OID = POID) LOOP
        --perform MIR.SMS_INSERT_SMS_NEW_DOCTORVISIT(PPEOPLE,
        --                                       C.STARTON,
        --                                       C.SYSUSER,
        --                                       C.CABINET,
        --                                      C.STATE,
        --                                       POID);
      END LOOP;
    END IF;
  
  END;
';


ALTER FUNCTION mir.schedule_update_people_state(poid character, ppeople character, pstate numeric, ppeoplescheduleplace numeric, pdo_send_sms integer) OWNER TO postgres;

--
-- TOC entry 2017 (class 1255 OID 17364)
-- Dependencies: 5396 14
-- Name: schedule_update_people_state_with_napr(character, character, numeric, numeric, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_update_people_state_with_napr(poid character, ppeople character, pstate numeric, ppeoplescheduleplace numeric DEFAULT NULL::numeric, pdo_send_sms integer DEFAULT 1, pdirectionoid character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    UPDATE MIR.SCHEDULE
       SET PEOPLE              = PPEOPLE,
           STATE               = PSTATE,
           PEOPLESCHEDULEPLACE = NVL2(cast(PPEOPLE as numeric),
                                      NVL2(PEOPLESCHEDULEPLACE,
                                           PEOPLESCHEDULEPLACE,
                                           PPEOPLESCHEDULEPLACE),
                                      NULL),
           TICKETNUMBER        = PDIRECTIONOID
     WHERE OID = POID;
  
    IF PDO_SEND_SMS = 1 AND PSTATE = MIR.schedule_get_cn_schedulestate_bron() AND
       PPEOPLE IS NOT NULL THEN
      FOR C IN (SELECT SYSUSER, STARTON, CABINET, STATE
                  FROM MIR.SCHEDULE_INFO
                 WHERE OID = POID) LOOP
        perform MIR.SMS_INSERT_SMS_NEW_DOCTORVISIT(PPEOPLE,
                                               C.STARTON,
                                               C.SYSUSER,
                                               C.CABINET,
                                               C.STATE,
                                               POID);
      END LOOP;
    END IF;  
  END;

';


ALTER FUNCTION mir.schedule_update_people_state_with_napr(poid character, ppeople character, pstate numeric, ppeoplescheduleplace numeric, pdo_send_sms integer, pdirectionoid character varying) OWNER TO postgres;

--
-- TOC entry 1960 (class 1255 OID 17365)
-- Dependencies: 5396 14
-- Name: schedule_update_schema(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_update_schema(psysuser character, plpu character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
outsotr char(36);
BEGIN
select max(st.oid) into outsotr
 from mir.sotr st
 inner join mir.otdel o
    on st.otdel = o.oid 
 where st.sysuser = psysuser 
   and o.lpu = plpu;
   return outsotr;
 END;
';


ALTER FUNCTION mir.schedule_update_schema(psysuser character, plpu character) OWNER TO postgres;

--
-- TOC entry 2018 (class 1255 OID 17366)
-- Dependencies: 5396 14
-- Name: schedule_update_sysuser_workday(character, timestamp without time zone, character, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION schedule_update_sysuser_workday(psysuser character, pdates timestamp without time zone, ppresctype character, pcabinet character varying, pduration numeric DEFAULT NULL::numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
    nOk integer;
  BEGIN
    --вставляем запись в график работы - чтобы была, для корректного отображения на вебталоне
    nOk := -1;
/*    
    for c in (select s.oid
                from MIR.SOTRWORKDAY S
               where S.DATES = TRUNC(PDATES) 
                 AND S.SYSUSER = PSYSUSER
             )
    loop
      nOk := 1;
    end loop;
    
    if nOk > 0 then
      UPDATE MIR.SOTRWORKDAY
         SET TIMES  = TO_CHAR(SCHEDULE_GET_SYSUSER_WORKDAY_START(PSYSUSER,
                                                        PDATES,
                                                        PPRESCTYPE),
                              ''SSSSS''),
             TIMEPO = TO_CHAR(SCHEDULE_GET_SYSUSER_WORKDAY_END(PSYSUSER,
                                                      PDATES,
                                                      PPRESCTYPE),
                              ''SSSSS'');
    else
      INSERT into MIR.SOTRWORKDAY
        (OID, TIMES, TIMEPO, CABINET, SYSUSER, DATES, ISHOLIDAY, DURATION)
      VALUES
        (MIR.NEW_UUID,
         TO_CHAR(mir.SCHEDULE_GET_SYSUSER_WORKDAY_START(PSYSUSER, PDATES, PPRESCTYPE),
                 ''SSSSS''),
         TO_CHAR(mir.SCHEDULE_GET_SYSUSER_WORKDAY_END(PSYSUSER, PDATES, PPRESCTYPE),
                 ''SSSSS''),
         PCABINET,
         PSYSUSER,
         cast(PDATES as date),
         0,
         PDURATION);
    end if;*/
    
    /*MERGE INTO MIR.SOTRWORKDAY S
    USING DUAL
    ON (DATES = TRUNC(PDATES) AND SYSUSER = PSYSUSER)
    WHEN NOT MATCHED THEN
      INSERT
        (OID, TIMES, TIMEPO, CABINET, SYSUSER, DATES, ISHOLIDAY, DURATION)
      VALUES
        (MIR.NEW_UUID,
         TO_CHAR(GET_SYSUSER_WORKDAY_START(PSYSUSER, PDATES, PPRESCTYPE),
                 ''SSSSS''),
         TO_CHAR(GET_SYSUSER_WORKDAY_END(PSYSUSER, PDATES, PPRESCTYPE),
                 ''SSSSS''),
         PCABINET,
         PSYSUSER,
         TRUNC(PDATES),
         0,
         PDURATION)
    WHEN MATCHED THEN
      UPDATE
         SET TIMES  = TO_CHAR(GET_SYSUSER_WORKDAY_START(PSYSUSER,
                                                        PDATES,
                                                        PPRESCTYPE),
                              ''SSSSS''),
             TIMEPO = TO_CHAR(GET_SYSUSER_WORKDAY_END(PSYSUSER,
                                                      PDATES,
                                                      PPRESCTYPE),
                              ''SSSSS'');*/
  END;
';


ALTER FUNCTION mir.schedule_update_sysuser_workday(psysuser character, pdates timestamp without time zone, ppresctype character, pcabinet character varying, pduration numeric) OWNER TO postgres;

--
-- TOC entry 2019 (class 1255 OID 17367)
-- Dependencies: 5396 14
-- Name: sendmail(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sendmail(psender character varying, precipient character varying, psubject character varying, pmessage character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    vMailhost  VARCHAR(80) := mir.settings_GET_PARAMETER(''IP_SAMOZAPIS''); -- IP адрес почтового сервера
    --mail_conn utl_smtp.connection;
  BEGIN
    /*
    mail_conn := utl_smtp.open_connection(vMailhost, 25);
  utl_smtp.helo(mail_conn, vMailhost);
  utl_smtp.command(mail_conn, ''AUTH LOGIN'');
  utl_smtp.command(mail_conn,utl_raw.cast_to_varchar2(utl_encode.base64_encode(utl_raw.cast_to_raw(''noreply@samozapis.ru''))));
  utl_smtp.command(mail_conn,utl_raw.cast_to_varchar2(utl_encode.base64_encode(utl_raw.cast_to_raw(''dcgjvyb cfv''))));

    --UTL_SMTP.AUTH (mail_conn,''noreply@samozapis.ru'',''dcgjvyb cfv'');
    utl_smtp.helo(mail_conn, vMailhost);
    utl_smtp.mail(mail_conn, pSender);
    utl_smtp.rcpt(mail_conn, pRecipient);
    utl_smtp.open_data(mail_conn);
  utl_smtp.write_raw_data(mail_conn, UTL_RAW.cast_to_raw(''From''||'': ''||pSender||utl_tcp.CRLF));
  utl_smtp.write_raw_data(mail_conn, UTL_RAW.cast_to_raw(''To''||'': ''||pRecipient||utl_tcp.CRLF));
  utl_smtp.write_raw_data(mail_conn, UTL_RAW.cast_to_raw(''Subject''||'': ''||pSubject||utl_tcp.CRLF));
  utl_smtp.write_raw_data(mail_conn, UTL_RAW.cast_to_raw(''MIME-Version: 1.0''||utl_tcp.CRLF));
  utl_smtp.write_raw_data(mail_conn, UTL_RAW.cast_to_raw(''Content-Type: text/html charset="windows-1251"''||utl_tcp.CRLF));
  utl_smtp.write_raw_data(mail_conn, utl_raw.cast_to_raw(chr(13)||chr(10)||pMessage));
    utl_smtp.close_data(mail_conn);
    utl_smtp.quit(mail_conn);*/
  END;

';


ALTER FUNCTION mir.sendmail(psender character varying, precipient character varying, psubject character varying, pmessage character varying) OWNER TO postgres;

--
-- TOC entry 2020 (class 1255 OID 17368)
-- Dependencies: 5396 14
-- Name: service_get_price_presc(character, character varying, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION service_get_price_presc(p_presc character, p_pay_type character varying, p_price_category character, p_lpu character, p_service character DEFAULT NULL::bpchar) RETURNS numeric
    LANGUAGE plpgsql
    AS '
-- Created 2013  by S.Ponomarenko
 -- Функция получает цену по назначению

DECLARE
  pres mir.service_price.price % TYPE;
BEGIN
--- работаем через функцию цен service_get_prices_presc
  SELECT sum(price)
  INTO pres
  FROM mir.service_get_prices_presc(p_presc, p_pay_type, p_price_category, p_lpu, p_service);

  RETURN(pres);

END;
';


ALTER FUNCTION mir.service_get_price_presc(p_presc character, p_pay_type character varying, p_price_category character, p_lpu character, p_service character) OWNER TO postgres;

--
-- TOC entry 177 (class 1259 OID 17369)
-- Dependencies: 6784 14
-- Name: service_price; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_price (
    oid character(36) NOT NULL,
    services character(36) NOT NULL,
    name character varying(500) NOT NULL,
    insurprogram character(36),
    service_price_category character(36),
    price numeric(15,2),
    fromdate date,
    todate date,
    prepay integer,
    CONSTRAINT ckc_prepay_mservice CHECK (((prepay IS NULL) OR ((prepay >= 0) AND (prepay <= 100))))
);


ALTER TABLE mir.service_price OWNER TO postgres;

--
-- TOC entry 11724 (class 0 OID 0)
-- Dependencies: 177
-- Name: TABLE service_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_price IS 'Стоимость услуг Author: Linnikov';


--
-- TOC entry 11725 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.oid IS 'ID';


--
-- TOC entry 11726 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.services; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.services IS 'Услуга [MSERVICE.ID]';


--
-- TOC entry 11727 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.name IS 'Наименование услуги';


--
-- TOC entry 11728 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.insurprogram; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.insurprogram IS 'Страховая программа [IPROGRAM.ID]';


--
-- TOC entry 11729 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.service_price_category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.service_price_category IS 'Категория цены (взрослые, дети и пр.)';


--
-- TOC entry 11730 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.price IS 'Цена';


--
-- TOC entry 11731 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.fromdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.fromdate IS 'Цена действует с';


--
-- TOC entry 11732 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.todate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.todate IS 'Цена действует по';


--
-- TOC entry 11733 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN service_price.prepay; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price.prepay IS '% предоплаты (от 0 - без предоплаты, до 100 - полная предоплата)';


--
-- TOC entry 2021 (class 1255 OID 17376)
-- Dependencies: 2617 5396 14
-- Name: service_get_prices_presc(character, character varying, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION service_get_prices_presc(p_presc character, p_pay_type character varying, p_price_category character, p_lpu character, p_service character DEFAULT NULL::bpchar) RETURNS SETOF service_price
    LANGUAGE plpgsql
    AS '
-- Created 2013  by S.Ponomarenko
 -- Функция получает список цен по назначению

DECLARE
  pinsurpogram mir.insurprogram.oid % TYPE;
  price_row mir.service_price % ROWTYPE;

BEGIN

  -- определяем работу со страховой программой только для ОМС
  if p_pay_type = mir.cn_paytype_oms() then
    SELECT lpu_insurprogram.insurprogram
    INTO pinsurpogram
    FROM mir.systemsettings systemsettings
         LEFT JOIN mir.lpusettings lpusettings ON lpusettings.settings = systemsettings.oid
         LEFT JOIN mir.lpu_insurprogram lpu_insurprogram ON lpu_insurprogram.lpu = lpusettings.lpu
    WHERE upper(param) = upper(''InsuranceProgramON'')
          AND lpusettings.custvaluepar = ''1''
          AND lpusettings.lpu = p_lpu;

    -- если insurprogram = null (нет настроек ценового профиля для ЛПУ), то price_category выключаем 
    if pinsurpogram is null then
      p_price_category = null;
    end if;
    ---
    else
    pinsurpogram= null;
    p_price_category = null;
  end if;
  ----------------------


  for price_row in
    (
  SELECT price.*
  FROM mir.presc presc
       LEFT JOIN mir.service_presctype service_presctype ON service_presctype.presctype = presc.presctype_id AND (service_presctype.datebegin <= presc.runbeg_dt OR
        service_presctype.datebegin IS NULL) AND (service_presctype.dateend >= presc.runbeg_dt OR service_presctype.dateend IS NULL)
       LEFT JOIN mir.services services ON services.oid = service_presctype.service
       LEFT JOIN mir.service_price price ON price.services = services.oid
       LEFT JOIN mir.service_group service_group ON service_group.oid = services.service_group
  WHERE 1 = 1
        AND presc.id = p_presc
        AND services.pay_type = p_pay_type
        AND price.fromdate <= presc.runbeg_dt
        AND (price.todate >= presc.runbeg_dt
        OR price.todate IS NULL)
         -- если service_group.show_insurprogram = 0 (нет настроек ценового профиля для группы), то price_category  и insurprogram выключаем 
        AND (CASE
               WHEN NOT p_price_category IS NULL AND service_group.show_insurprogram = 1 THEN price.service_price_category = p_price_category
               ELSE price.service_price_category IS NULL
             END)
        AND (CASE
               WHEN NOT pinsurpogram IS NULL AND service_group.show_insurprogram = 1 THEN price.insurprogram = pinsurpogram
               ELSE price.insurprogram IS NULL
             END)
        AND (CASE
               WHEN p_service IS NULL THEN 1 = 1
               ELSE services.oid = p_service
             END))
     
    LOOP
      RETURN NEXT price_row;
    END LOOP;
  
END;
';


ALTER FUNCTION mir.service_get_prices_presc(p_presc character, p_pay_type character varying, p_price_category character, p_lpu character, p_service character) OWNER TO postgres;

--
-- TOC entry 2022 (class 1255 OID 17377)
-- Dependencies: 5396 14
-- Name: service_import_price(character, character, character varying, character varying, character, character, character, character, numeric, date, date, integer, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION service_import_price(p_price_id character, p_service_id character, p_code character varying, p_name character varying, p_service_group character, p_insurprogram character, p_service_price_category character, p_paytype_id character, p_price numeric, p_fromdate date, p_todate date, p_event_update_service integer, p_event_update_date_price integer, p_events integer) RETURNS integer
    LANGUAGE plpgsql
    AS '
-- Created 2011.06.06 by S.Ponomarenko
 -- Функция импортирует цену в справочник услуг
  
  -- P_EVENTS:
  -- 100 - создание услуги, если ее нет
  -- 200 - обновляем услугу, если указано
  -- 300 - услуга есть
  -- +1 - с датой все нормально, создаем новую цену
  -- +2 - новая дата меньше старой, обновляем цены и даты, если указано
  -- +3 - изменение цены пропущено

DECLARE
  pres mir.service_price.oid % TYPE;
  pdate mir.service_price.fromdate % TYPE;

BEGIN
  if p_fromdate is null then
    p_fromdate = CURRENT_DATE;
  end if;
  -- получение услуги 

  SELECT max(OID)
  FROM mir.services
  WHERE CODE = P_CODE
  and pay_type = p_paytype_id
  and service_group = p_service_group
  INTO p_service_id;

  -- создание услуги, если ее нет
  if p_service_id is null then
    INSERT INTO mir.services(code, defaultname, service_group, pay_type)
    VALUES (P_CODE, P_NAME, p_service_group, p_paytype_id) RETURNING OID
    INTO p_service_id;
    P_EVENTS:=100;
    else
    P_EVENTS:=300;
    -- обновляем услугу, если указано
    if P_EVENT_UPDATE_SERVICE =1 then
      UPDATE mir.services
      SET defaultname = p_name,
          service_group = p_service_group,
          pay_type = p_paytype_id
      WHERE OID = p_service_id;
      P_EVENTS:=200;
    end if ;
  end if;

  --  == получение\ создание цены == 

  -- проверка последней даты

  SELECT max(fromdate)
  FROM mir.service_price
  WHERE services = p_service_id
    AND (case when p_insurprogram is null then insurprogram is null else insurprogram = p_insurprogram end)
    AND (case when p_service_price_category is null then service_price_category is null else service_price_category = p_service_price_category end)
  INTO pdate;

  --  с датой все нормально, создаем новую цену
  if (pdate is null) or pdate < P_FROMDATE then
    SELECT mir.service_set_price(NULL, p_service_id, p_name, p_insurprogram, p_service_price_category, p_price, p_fromdate, p_todate, 0, 1)
    INTO P_PRICE_ID;
    P_EVENTS:=P_EVENTS + 1;
    else
    -- новая дата меньше старой, обновляем цены и даты, если указано
    if P_EVENT_UPDATE_DATE_PRICE = 1 then
      -- удаляем все цены, с датой больше указанной
      DELETE
      FROM mir.service_price
      WHERE services = p_service_id
          AND (case when p_insurprogram is null then insurprogram is null else insurprogram = p_insurprogram end)
          AND (case when p_service_price_category is null then service_price_category is null else service_price_category = p_service_price_category end)
          AND fromdate >= p_fromdate;
          
      -- создаем новую цену

      SELECT mir.service_set_price(NULL, p_service_id, p_name, p_insurprogram, p_service_price_category, p_price, p_fromdate, p_todate, 0, 1)
      INTO P_PRICE_ID;
      P_EVENTS:=P_EVENTS + 2;
      ELSE
      --  изменение цены пропущено
      P_EVENTS:=P_EVENTS + 3;
    end if;
  end if;

  return  p_events;
END;
';


ALTER FUNCTION mir.service_import_price(p_price_id character, p_service_id character, p_code character varying, p_name character varying, p_service_group character, p_insurprogram character, p_service_price_category character, p_paytype_id character, p_price numeric, p_fromdate date, p_todate date, p_event_update_service integer, p_event_update_date_price integer, p_events integer) OWNER TO postgres;

--
-- TOC entry 2024 (class 1255 OID 17378)
-- Dependencies: 5396 14
-- Name: service_set_price(character, character, character varying, character, character, numeric, date, date, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION service_set_price(pid character, p_services character, p_name character varying, p_insurprogram character, p_service_price_category character, pprice numeric, pfromdate date, ptodate date, pprepay integer, pevent integer) RETURNS character
    LANGUAGE plpgsql
    AS '
-- Created 2011.06.06 by S.Ponomarenko
 -- Функция создает, удаляет Стоимость услуг

DECLARE
  pres mir.service_price.oid % TYPE;
  pdate mir.service_price.fromdate % TYPE;

BEGIN

  if pfromdate is null then 
    pfromdate = now();
  end if;

  -- создание
  IF pevent=1 then

   -- изменение даты окончания для крайней цены. считаем, что все поздние цены, больше pfromdate - удалены
  SELECT max(fromdate)
  FROM mir.service_price
  WHERE services = p_services
  AND (case when p_insurprogram is null then insurprogram is null else insurprogram = p_insurprogram end)
  AND (case when p_service_price_category is null then service_price_category is null else service_price_category = p_service_price_category end)
  INTO pdate;

    if not pdate is null then

      UPDATE mir.service_price
      SET todate = pfromdate - interval ''1 day''
      WHERE services = p_services
            AND fromdate = pdate
            AND (case when p_insurprogram is null then insurprogram is null else insurprogram=p_insurprogram end)
            AND (case when p_service_price_category is null then service_price_category is null else service_price_category = p_service_price_category end);

    end if;
    
    INSERT INTO mir.service_price(services, name, insurprogram, service_price_category, price, fromdate, todate, prepay)
    VALUES (p_services, p_name, p_insurprogram, p_service_price_category, pprice, pfromdate, ptodate, pprepay) RETURNING oid
    INTO pres;

  end if;

  -- изменение
  IF pevent=2 then
    UPDATE mir.service_price
    SET price = pprice,
        fromdate = pfromdate,
        todate = ptodate,
        prepay = pprepay,
        name = coalesce(p_name, name)
    WHERE OID = pid;

    pres:=pid;
  end if;

  -- удаление
  IF pevent=3 then
    DELETE
    FROM mir.service_price
    WHERE OID = pid;

    pres:=pid;
  end if;

  RETURN(pres);
END;
';


ALTER FUNCTION mir.service_set_price(pid character, p_services character, p_name character varying, p_insurprogram character, p_service_price_category character, pprice numeric, pfromdate date, ptodate date, pprepay integer, pevent integer) OWNER TO postgres;

--
-- TOC entry 2025 (class 1255 OID 17379)
-- Dependencies: 5396 14
-- Name: set_exchange_var(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_exchange_var(p_var_name character varying, p_var_value character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  v_cnt integer;
BEGIN
  SELECT Count(pc.relname) into v_cnt 
  FROM pg_catalog.pg_class pc, pg_namespace pn
  WHERE pc.relname = ''session_var_tbl''
    AND pc.relnamespace = pn.oid 
    AND pn.oid = pg_my_temp_schema();
  IF v_cnt = 0 THEN
    EXECUTE ''CREATE GLOBAL TEMPORARY TABLE session_var_tbl (var_name varchar(100) not null, var_value varchar(100))ON COMMIT preserve ROWS'';
  END IF;
  UPDATE session_var_tbl 
  SET var_value = p_var_value
  WHERE var_name = p_var_name;
  IF NOT FOUND THEN
    INSERT INTO session_var_tbl(var_name, var_value)
    VALUES (p_var_name, p_var_value);
  END IF;
END;
';


ALTER FUNCTION mir.set_exchange_var(p_var_name character varying, p_var_value character varying) OWNER TO postgres;

--
-- TOC entry 2026 (class 1255 OID 17380)
-- Dependencies: 5396 14
-- Name: set_mdoc_number(character, character, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_mdoc_number(pmdoc_id character, pmdoc_type_id character, pnum numeric, pyear numeric) RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    v_nres integer;
  begin
    if EXISTS(select 1 
                from mir.mdoc_number mdn 
               where mdn.mdoc_id = pmdoc_id
             ) then
      update mir.mdoc_number mdn
         set num = pnum,
             "year" = pyear,
             mdoc_type_id = pmdoc_type_id
       where mdn.mdoc_id = pmdoc_id; 
       
       v_nres := 0;        
    else
      INSERT INTO 
      mir.mdoc_number
      (
        mdoc_id,
        num,
        "year",
        date_generate,
        mdoc_type_id,
        prefix
      ) 
      VALUES (
        pmdoc_id,
        pnum,
        pyear,
        CURRENT_TIMESTAMP,
        pmdoc_type_id,
        null
      );
      
      v_nres := 1;
    end if;

    return v_nres;
  end;
  ';


ALTER FUNCTION mir.set_mdoc_number(pmdoc_id character, pmdoc_type_id character, pnum numeric, pyear numeric) OWNER TO postgres;

--
-- TOC entry 2027 (class 1255 OID 17381)
-- Dependencies: 5396 14
-- Name: set_mdoc_number_by_docobsl(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_mdoc_number_by_docobsl(pmdoc_id character, pdocobsl_id character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    v_nres integer;
    v_mdoc_type_id mir.docobsl.mdoc_type_id%type;
    v_num_doc mir.docobsl.num_doc%type;
    v_year_doc mir.docobsl.year_doc%type;
    c record;
  begin
    v_nres := 0;
    
    for c in (select dob.mdoc_type_id,
                     dob.num_doc,
                     dob.year_doc
                from mir.docobsl dob
               where dob.oid = pdocobsl_id
             )
    loop
        v_mdoc_type_id := c.mdoc_type_id;
        v_num_doc := c.num_doc;
        v_year_doc := c.year_doc;
        v_nres := 1;
    end loop;
  
    if ( v_nres = 1 ) then
        -- меняем тип документа
        update mir.mdoc md
           set mdoc_type_id = v_mdoc_type_id
         where md.id = pmdoc_id
           and ( ( md.mdoc_type_id <> v_mdoc_type_id )
                 or ( md.mdoc_type_id is null ) );
         
        -- обновляем номер документа
        v_nres := mir.set_mdoc_number(pmdoc_id, v_mdoc_type_id, v_num_doc, v_year_doc);
    end if;

    return v_nres;
  end;
  ';


ALTER FUNCTION mir.set_mdoc_number_by_docobsl(pmdoc_id character, pdocobsl_id character) OWNER TO postgres;

--
-- TOC entry 2028 (class 1255 OID 17382)
-- Dependencies: 5396 14
-- Name: set_stat_value(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_stat_value(mdoc character, syn character, sotr character, val character) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE

	TYPE_FIELD MIR.SMID.TYPE_FIELD%TYPE;
    SMID_OID MIR.SMID.OID%TYPE;
    SMID_VALUE VARCHAR(255);
    
BEGIN
	   
       SELECT S.TYPE_FIELD,S.OID FROM MIR.SMID S
       		INTO TYPE_FIELD,SMID_OID
            
       WHERE S.SYNONIM = syn
       LIMIT 1; 
       
       
       IF TYPE_FIELD IS NOT NULL THEN
       
         IF TYPE_FIELD = ''COMBOBOX''
         
         THEN	
         
            PERFORM MIR."tib_mdoc_write_smid"(mdoc,SMID_OID,sotr,val);
             
         END IF;
         
         IF TYPE_FIELD = ''EDIT''
         THEN	
         
         	PERFORM MIR."tib_mdoc_write_text"(mdoc,SMID_OID,sotr,val);
            
         END IF;
         
         IF TYPE_FIELD = ''DATE''
         THEN	
         
         	PERFORM MIR."tib_mdoc_write_date"(
            mdoc,
            SMID_OID,
            sotr,
            to_timestamp(val, ''DD.MM.YYYY HH24:MI:SS'')::timestamp without time zone);
            
         END IF;

       END IF;
       
       RETURN SMID_VALUE;
END;
';


ALTER FUNCTION mir.set_stat_value(mdoc character, syn character, sotr character, val character) OWNER TO postgres;

--
-- TOC entry 2029 (class 1255 OID 17383)
-- Dependencies: 5396 14
-- Name: set_ta_by_kladr(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_ta_by_kladr(pid character varying DEFAULT ''::character varying, phouse character varying DEFAULT ''::character varying, pkorp character varying DEFAULT NULL::character varying, poid_people character varying DEFAULT ''::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  V_TMP_STR    VARCHAR(100);
  V_HOUSE      VARCHAR(10);
  V_FULL_HOUSE VARCHAR(50);
  V_POS        integer;
  V_RESULT     VARCHAR(4000);
  V_RES        integer;
  c record;
BEGIN
 V_RESULT:= '' '';
  
 select MIR.ADDR_EXTRACT_HOUSE_INFO(PHOUSE, PKORP) into V_HOUSE, V_FULL_HOUSE, V_RES;
 
  IF V_RES = 0 THEN
    V_RESULT:= NULL;
  END IF;
if V_RESULT is not null then

  FOR C IN (SELECT UPPER(REPLACE(D.INCLUDEHOUSE, '' '', '''')) INCLUDEHOUSE, --используем replace, т.к. translate не поддерживает явный clob
                   UPPER(TRANSLATE(D.EXCLUDEHOUSE, ''_ '', ''_'')) EXCLUDEHOUSE,
                   D.DISTRICT,
                   STARTHOUSE,
                   ENDHOUSE,
                   DI.NAME,
                   DD.Lpu
              FROM MIR.DISTRICTSTREET D, MIR.DISTRICT DD, MIR.DICTIONARY DI
             WHERE D.TKLADR = PID
               AND DI.OID = DD.OID
               AND D.DISTRICT = DD.OID) LOOP
    BEGIN
      IF ((cast(V_HOUSE as integer) BETWEEN cast(C.STARTHOUSE as integer) AND
         cast(C.ENDHOUSE as integer)) OR
         INSTR('','' || C.INCLUDEHOUSE || '','', '','' || V_FULL_HOUSE || '','') > 0) AND
         NOT
          (INSTR('','' || C.EXCLUDEHOUSE || '','', '','' || V_FULL_HOUSE || '','') > 0) THEN
           insert into mir.peoplemoderation_ta
             (oid, lpu, district, pm_oid)
           values
             (lower(mir.new_uuid()), null,C.DISTRICT , poid_people);
            V_RESULT := V_RESULT || C.DISTRICT || '';'';
        END IF;

    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;

  END LOOP;

end if;
end;

';


ALTER FUNCTION mir.set_ta_by_kladr(pid character varying, phouse character varying, pkorp character varying, poid_people character varying) OWNER TO postgres;

--
-- TOC entry 2030 (class 1255 OID 17384)
-- Dependencies: 5396 14
-- Name: set_var(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_var(p_var_name character varying, p_var_value character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
  PERFORM set_config(''usrvar.''||p_var_name, p_var_value, false);
END;
';


ALTER FUNCTION mir.set_var(p_var_name character varying, p_var_value character varying) OWNER TO postgres;

--
-- TOC entry 2031 (class 1255 OID 17385)
-- Dependencies: 5396 14
-- Name: set_visit_by_mdoc(character, date, date, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION set_visit_by_mdoc(pmdoc_id character, pbegin_date date, pend_date date, psotr_id character, paddr_id character, ppay_method character) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    v_nres mir.visit.id%type;
    c record;
  begin
    v_nres := null;
    
    for c in (select v.id 
                from mir.visit v 
               where v.mdoc_id = pmdoc_id
             ) 
    loop
      v_nres := c.id;
    end loop;
    
    if v_nres is not null then
      update mir.visit v
         set beginv = pbegin_date,
             endv = pend_date,
             addr_id = COALESCE(paddr_id, addr_id),
             visit_state = 0,
             sotr_id = COALESCE(psotr_id, sotr_id),
             pay_method = COALESCE(ppay_method, pay_method)
       where v.mdoc_id = pmdoc_id; 
       
       v_nres := 0;        
    else
      INSERT INTO 
        mir.visit
      (
        id,
        beginv,
        endv,
        mdoc_id,
        pay_type_id,
        addr_id,
        visit_state,
        sotr_id,
        pay_method
      ) 
      VALUES (
        mir.new_uuid(),
        pbegin_date,
        pend_date,
        pmdoc_id,
        null,
        paddr_id,
        0,
        psotr_id,
        ppay_method
      )
      returning id into v_nres;
    end if;

    return v_nres;
  end;
  ';


ALTER FUNCTION mir.set_visit_by_mdoc(pmdoc_id character, pbegin_date date, pend_date date, psotr_id character, paddr_id character, ppay_method character) OWNER TO postgres;

--
-- TOC entry 2032 (class 1255 OID 17386)
-- Dependencies: 5396 14
-- Name: setpeopleschedule(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION setpeopleschedule() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  
BEGIN
 PERFORM prof.create_schedule_for_risk_people(new.oid);
 RETURN NEW;
END;
';


ALTER FUNCTION mir.setpeopleschedule() OWNER TO postgres;

--
-- TOC entry 2033 (class 1255 OID 17387)
-- Dependencies: 5396 14
-- Name: settings_get_parameter(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION settings_get_parameter(pname character varying, pdefault character varying DEFAULT NULL::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    c record;
  BEGIN
    FOR C IN (SELECT VALUEPAR FROM MIR.SETTINGS WHERE PARAM = PNAME) LOOP
      RETURN C.VALUEPAR;
    END LOOP;
    RETURN PDEFAULT;
  END;

';


ALTER FUNCTION mir.settings_get_parameter(pname character varying, pdefault character varying) OWNER TO postgres;

--
-- TOC entry 2034 (class 1255 OID 17388)
-- Dependencies: 5396 14
-- Name: settingsgetdbsettingwithcustomvalue(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION settingsgetdbsettingwithcustomvalue(plpu character, pparam character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
 v_res varchar(4000);
 c record;
 begin
 for c in (select valuepar,custvaluepar from mir.settings s
 left join mir.lpusettings ls on ls.settings=s.oid and lower(lpu)=lower(pLpu)
 where param=pParam) loop
 if (c.custvaluepar is null) then 
 v_res=c.valuepar; 
 end if;
 if (c.custvaluepar is not null) then 
 v_res=c.custvaluepar; 
 end if; 
 
-- v_res NULL nvl(c.custvaluepar),to_char(c.valuepar));
 end loop;
 return v_res;
 end;
';


ALTER FUNCTION mir.settingsgetdbsettingwithcustomvalue(plpu character, pparam character varying) OWNER TO postgres;

--
-- TOC entry 2035 (class 1255 OID 17389)
-- Dependencies: 5396 14
-- Name: settingsgetdbsettingwithcustomvalue_new(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION settingsgetdbsettingwithcustomvalue_new(plpu character, pparam character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
    v_res varchar(4000);
    c record;
  begin
    for c in (select valuepar,custvaluepar from mir.systemsettings s
                    left join  mir.lpusettings ls on ls.settings=s.oid and lower(lpu)=lower(pLpu)
                    where param=pParam) loop
                    if (c.custvaluepar is null) then 
                    v_res=c.valuepar;                   
                    end if;
                    if (c.custvaluepar is not null) then 
                    v_res=c.custvaluepar;                   
                    end if;                    
                    
--        v_res := nvl(c.custvaluepar),to_char(c.valuepar));
    end loop;
    return v_res;
  end;
';


ALTER FUNCTION mir.settingsgetdbsettingwithcustomvalue_new(plpu character, pparam character varying) OWNER TO postgres;

--
-- TOC entry 2036 (class 1255 OID 17390)
-- Dependencies: 5396 14
-- Name: smid_get_name(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION smid_get_name(psmidid character) RETURNS character
    LANGUAGE plpgsql
    AS '
  begin
  	-- Функция возвращает название smida по коду
    return coalesce( ( select max(s.name)
                         from mir.smid s
                        where s.oid = psmidid ), '''');
  end;
';


ALTER FUNCTION mir.smid_get_name(psmidid character) OWNER TO postgres;

--
-- TOC entry 2037 (class 1255 OID 17391)
-- Dependencies: 5396 14
-- Name: smid_get_name_by_syn(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION smid_get_name_by_syn(psyn character) RETURNS character
    LANGUAGE plpgsql
    AS '
  begin
    -- Функция возвращает название smida по синониму
    return coalesce( ( select max(s.name)
                         from mir.smid s
                        where s.synonim = psyn ), '''');
  end;
';


ALTER FUNCTION mir.smid_get_name_by_syn(psyn character) OWNER TO postgres;

--
-- TOC entry 2038 (class 1255 OID 17392)
-- Dependencies: 5396 14
-- Name: smid_get_parent_name(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION smid_get_parent_name(psmidid character) RETURNS character
    LANGUAGE plpgsql
    AS '
  begin
  	-- Функция возвращает название родителя smida по коду
    return coalesce( ( select max(sm.name)
                         from mir.smid sm
                        where sm.oid in 
                        	  (
                               select s.parent_id
                                 from mir.smid s
                                where s.oid = psmidid
                        	  ) ), '''');
  end;
';


ALTER FUNCTION mir.smid_get_parent_name(psmidid character) OWNER TO postgres;

--
-- TOC entry 2039 (class 1255 OID 17393)
-- Dependencies: 5396 14
-- Name: sms_insert_sms(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sms_insert_sms(ptel character varying, ptext character varying, pfromphone character varying DEFAULT ''::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_work     integer;
      v_countsms integer;
     BEGIN
       select ValuePar into v_work from mir.settings where Param=''SMS_SEND'';
       if (v_work=1) then
        select count(*) into  v_countsms  from mir.smstmp s
               where (sysdate-s.DATE_SMS)<1;

        if (LENGTH(pTel)>=10) and (pTel<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.PKG_SETTINGS.GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
        insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people,optimisticlockfield,fromphone)
                values
                     (lower(mir.new_uuid()), pTel,
                      pText ,0, SYSDATE, null,0,pFromPhone);
                      --На сайте Самозапись.ру появился новый ответ на заданный Вами вопрос.
        end if;
        end if;


     END;

';


ALTER FUNCTION mir.sms_insert_sms(ptel character varying, ptext character varying, pfromphone character varying) OWNER TO postgres;

--
-- TOC entry 2042 (class 1255 OID 17394)
-- Dependencies: 5396 14
-- Name: sms_insert_sms_cancel_doctorvisit(character, timestamp without time zone, character, character varying, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sms_insert_sms_cancel_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer DEFAULT 1, pschedule character DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_tel1        VARCHAR(200);
      v_tel2        VARCHAR(200);
      v_work        integer;
      v_Doctor      VARCHAR(200);
      v_lastname    VARCHAR(200);
      v_firstname   VARCHAR(200);
      v_middlename  VARCHAR(200);
      v_countsms integer;
      v_smsText VARCHAR(1500);
      v_lpu mir.schedule.lpu%type;
     BEGIN
     RAISE NOTICE ''step1'';
      v_lpu:='''';
-- Получаем ЛПУ , в которое записан пациент
      select max(lpu) into v_lpu from  mir.schedule where oid=pschedule;
      -- Есть ли возможность отправлять данный вид SMS у данного ЛПУ
       v_work:=mir.settingsgetdbsettingwithcustomvalue(v_lpu,
                                                          ''SMS_SEND_CANCEL_BRON'');

		v_work:=1;

     --  select ValuePar into v_work from mir.settings where Param=''SMS_SEND_CANCEL_BRON'';
       if (v_work=1) then
        select max(telsot1),max(telsot2) into v_tel1,v_tel2 from mir.people
        where oid=Ppeople;
        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.people
        where oid=psysuser;
       v_tel1:=translate(v_tel1,''_()-'',''_'');
       v_tel2:=translate(v_tel2,''_()-'',''_'');

       v_Doctor:=COALESCE(v_lastname,'''')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

--       select count(*) into  v_countsms  from mir.smstmp s
 --      where (CURRENT_DATE-s.DATE_SMS)<1;

if (ptypeSms=1) then
--   v_smsText:= ''Ваша запись на прием на ''||to_char(pDateTimeVisit, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'' к врачу ''||v_Doctor||'' аннулирована.'';
   v_smsText:= ''Ваш прием на ''||to_char(pDateTimeVisit, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'' к врачу ''||v_Doctor||'' отменен.'';
end if;

if (ptypeSms=4) then
   v_smsText:=''Ваша запись на прием на ''||to_char(pDateTimeVisit, ''dd.mm.yyyy'')||'' к врачу ''||v_Doctor||'' (по живой очечеди) аннулирована.'';
end if;

if (ptypeSms=5) then
   v_smsText:=''Ваша запись на прием на ''||to_char(pDateTimeVisit, ''dd.mm.yyyy'')||'' к врачу ''||v_Doctor||'' (без очереди) аннулирована.'';
end if;

--if length(v_smsText)>70 then
-- v_smsText:=mir.translit(v_smsText);
--end if ;
 insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel1,v_smsText , 0, CURRENT_TIMESTAMP,  Ppeople);

/*        if (LENGTH(v_tel1)>=10) and (v_tel1<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
        insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people,optimisticlockfield)
                values
                     (lower(mir.new_uuid()), v_tel1,v_smsText , 0, CURRENT_DATE,  Ppeople,0);
        end if;

        if (LENGTH(v_tel2)>=10)  and (v_tel2<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
        insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people,optimisticlockfield)
                values
                     (lower(mir.new_uuid()), v_tel2,v_smsText , 0, CURRENT_DATE,  Ppeople,0);
        end if;
*/
       end if;
     END;
';


ALTER FUNCTION mir.sms_insert_sms_cancel_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer, pschedule character) OWNER TO postgres;

--
-- TOC entry 2043 (class 1255 OID 17395)
-- Dependencies: 5396 14
-- Name: sms_insert_sms_move_doctorvisit(character, date, character, character varying, date, character, character varying, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sms_insert_sms_move_doctorvisit(ppeople character, pdatetimevisit1 date, psysuser1 character, pcabinet1 character varying, pdatetimevisit2 date, psysuser2 character, pcabinet2 character varying, ptypesms integer DEFAULT 1, pschedule character DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_tel1        VARCHAR(200);
      v_tel2        VARCHAR(200);
      v_work        integer;
      v_Doctor1      VARCHAR(200);
      v_Doctor2      VARCHAR(200);
      v_lastname    VARCHAR(200);
      v_firstname   VARCHAR(200);
      v_middlename  VARCHAR(200);
      v_countsms integer;
      v_smsText  VARCHAR(1500);
      v_lpu mir.schedule.lpu%type;
     BEGIN
--       select ValuePar into v_work from mir.settings where Param=''SMS_SEND'';

      v_lpu:='''';
-- Получаем ЛПУ , в которое записан пациент
      select max(lpu) into v_lpu from  mir.schedule where oid=pschedule;
      -- Есть ли возможность отправлять данный вид SMS у данного ЛПУ
       select mir.settingsgetdbsettingwithcustomvalue(v_lpu,
                                                          ''SMS_SEND'') into v_work;

       if (v_work=1) then
        select max(telsot1),max(telsot2) into v_tel1,v_tel2 from mir.people
        where oid=Ppeople;
        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.person
        where oid=psysuser1;
       v_tel1:=translate(v_tel1,''_()-'',''_'');
       v_tel2:=translate(v_tel2,''_()-'',''_'');


v_Doctor1:=nvl(v_lastname,'''')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

--        v_Doctor1:=nvl(v_lastname,'''')||'' ''||nvl(v_firstname,'''')||'' ''||nvl(v_middlename,'''')||'' '';

        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.person
        where oid=psysuser2;
 --       v_Doctor2:=nvl(v_lastname,'''')||'' ''||nvl(v_firstname,'''')||'' ''||nvl(v_middlename,'''')||'' '';
       v_Doctor2:=nvl(v_lastname,'''')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

select count(*) into  v_countsms  from mir.smstmp s
where (CURRENT_DATE-s.DATE_SMS)<1;
if (ptypeSms=1) then
--   v_smsText:= ''Ваша запись на прием на  ''||to_char(pDateTimeVisit1, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit1, ''hh24:mi'')||'' к врачу ''||v_Doctor1||''.,каб:''||pcabinet1||'' перенесена на ''||to_char(pDateTimeVisit2, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit2, ''hh24:mi'')||'' к врачу ''||v_Doctor2||''.,каб:''||pcabinet2;
    v_smsText:= ''Прием ''||to_char(pDateTimeVisit1, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit1, ''hh24:mi'')||'' врача ''||v_Doctor1||'' перенесен на ''||to_char(pDateTimeVisit2, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit2, ''hh24:mi'')||'' к врачу ''||v_Doctor2||'',каб:''||pcabinet2;

end if;


if (ptypeSms=4) then
   v_smsText:=''Ваша запись на прием на  ''||to_char(pDateTimeVisit1, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit1, ''hh24:mi'')||'' к врачу ''||v_Doctor1||''.,каб:''||pcabinet1||'' перенесена в живую очередь.'';
end if;
if (ptypeSms=5) then
   v_smsText:=''Ваша запись на прием на  ''||to_char(pDateTimeVisit1, ''dd.mm.yyyy'')||'' ''|| to_char(pDateTimeVisit1, ''hh24:mi'')||'' к врачу ''||v_Doctor1||''.,каб:''||pcabinet1||''изменила статус.(без очереди)'';
end if;

        if (LENGTH(v_tel1)>=10) and (v_tel1<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then





                insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people,optimisticlockfield)
                values
                     (lower(mir.new_uuid()), v_tel1,v_smsText, 0, CURRENT_DATE,  Ppeople,0);
        end if;

        if (LENGTH(v_tel2)>=10) and (v_tel2<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
        insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people,optimisticlockfield)
                values
                     (lower(mir.new_uuid()), v_tel2,v_smsText , 0, CURRENT_DATE,  Ppeople,0);
        end if;

       end if;
     END;

';


ALTER FUNCTION mir.sms_insert_sms_move_doctorvisit(ppeople character, pdatetimevisit1 date, psysuser1 character, pcabinet1 character varying, pdatetimevisit2 date, psysuser2 character, pcabinet2 character varying, ptypesms integer, pschedule character) OWNER TO postgres;

--
-- TOC entry 2044 (class 1255 OID 17396)
-- Dependencies: 5396 14
-- Name: sms_insert_sms_new_doctorvisit(character, timestamp without time zone, character, character varying, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sms_insert_sms_new_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer DEFAULT 1, pschedule character DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_tel1        VARCHAR(20);
      v_tel2        VARCHAR(20);
      v_work        integer;
      v_Doctor      VARCHAR(200);
      v_lastname    VARCHAR(200);
      v_firstname   VARCHAR(200);
      v_middlename  VARCHAR(200);
      v_countsms integer;
      v_telreg   mir.lpu.telreg%type;
      v_smsText VARCHAR(1500);
      v_countShecude integer;
      v_zapis integer;
      v_reklama  VARCHAR(200);
      v_TrueSendReklama  integer;
      v_lpu mir.schedule.lpu%type;
     BEGIN
      v_lpu:='''';      
  
-- Получаем ЛПУ , в которое записан пациент
      select max(lpu) into v_lpu from  mir.schedule where oid=pschedule;
       
      
      -- Есть ли возможность отправлять данный вид SMS у данного ЛПУ
       v_work:=1; --mir.settingsgetdbsettingwithcustomvalue(v_lpu,
                  --                                        ''SMS_SEND_NEW_BRON_REG'');
       if (v_work=1) then
        select max(telsot1),max(telsot2) into v_tel1,v_tel2 from mir.people
        where oid=Ppeople;
                                                                         
       
        select max(lastname),max(firstname),max(middlename) into v_lastname,v_firstname,v_middlename  from mir.people
        where oid=psysuser;
     
	   v_tel1:=translate(COALESCE(v_tel1,'' ''),''_()-'',''_'');
       v_tel2:=translate(COALESCE(v_tel2,'' ''),''_()-'',''_'');


        v_Doctor:=COALESCE(v_lastname,'' '')||'' ''||substr(v_firstname,1,1)||''.''||substr(v_middlename,1,1)||''.'';

                                                                 


     --   select max(l.telreg) into v_telreg from mir.schedule s
    --    left join mir.lpu l on l.oid=s.lpu
    --    where s.people=Ppeople and e.starton=pDateTimeVisit and s.sysuser=psysuser and s.cabinet=pcabinet;



--select count(*) into  v_countsms  from mir.smstmp s
--where (CURRENT_DATE-s.DATE_SMS)<1;

if ptypeSms=1 then
 -- RAISE NOTICE ''step8 %'', v_Doctor;                                                                          
--       v_smsText:= ''Вы записаны к врачу ''||v_Doctor||'' на ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'' каб. ''||pcabinet||'', Явка в регистратуру за 15 мин до приема, тел.''||v_telreg;
--         v_smsText:= ''Прием ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'', врач ''||v_Doctor||'', к.''||pcabinet||'', т.''||v_telreg;
         v_smsText:= ''Прием ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'', врач ''||v_Doctor||'', к.''||pcabinet;
--         v_smsText:= ''Прием ''||v_Doctor||'' на ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' ''|| to_char(pDateTimeVisit, ''hh24:mi'')||'' каб. ''||pcabinet||'', Явка в регистратуру за 15 мин до приема, тел.''||v_telreg;
end if;
 
if ptypeSms=4 then
       v_smsText:= ''Вы записаны к врачу ''||v_Doctor||'' на ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' каб. ''||pcabinet||'', в живую очередь.''||v_telreg;
end if;

if ptypeSms=5 then
       v_smsText:= ''Вы записаны к врачу ''||v_Doctor||'' на ''||to_char(pDateTimeVisit, ''dd.mm.yy'')||'' каб. ''||pcabinet||'', без очереди.''||v_telreg;
end if;
 
       v_reklama:=mir.settingsgetdbsettingwithcustomvalue(v_lpu,
                                                          ''SMS_TEXT_REKL'');
       v_TrueSendReklama:=mir.settingsgetdbsettingwithcustomvalue(v_lpu,
                                                          ''SMS_SEND_REKL'');
    if v_TrueSendReklama=1 then
        v_smsText:=v_smsText;--||'' ''||v_reklama;
    end if;
if length(v_tel1)>9 then
      insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel1,v_smsText, 0, CURRENT_TIMESTAMP,  Ppeople);
end if;

if length(v_tel2)>9 then
      insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel1,v_smsText, 0, CURRENT_TIMESTAMP,  Ppeople);
end if;


       end if;
      
     END;
';


ALTER FUNCTION mir.sms_insert_sms_new_doctorvisit(ppeople character, pdatetimevisit timestamp without time zone, psysuser character, pcabinet character varying, ptypesms integer, pschedule character) OWNER TO postgres;

--
-- TOC entry 2045 (class 1255 OID 17397)
-- Dependencies: 5396 14
-- Name: sms_insert_sms_new_homevisit(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sms_insert_sms_new_homevisit(ppeople character, psysuser character, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
      v_tel1       VARCHAR(4000);
      v_tel2       VARCHAR(200);
      v_fdoctor    VARCHAR(200) DEFAULT null;
      v_idoctor    VARCHAR(200) DEFAULT null;
      v_odoctor    VARCHAR(200) DEFAULT null;
      v_work     integer;
      v_countsms integer;
     BEGIN

      -- select ValuePar into v_work from mir.settings where Param=''SMS_SEND_NEW_VISIT'';

       select mir.settingsgetdbsettingwithcustomvalue(Plpu,
                                                          ''SMS_SEND_NEW_VISIT'') into v_work;

       if (v_work=1) then
        select max(TELSOT1),max(TELSOT2) into v_tel1,v_tel2 from mir.people  where oid=Ppeople;
       v_tel1:=translate(v_tel1,''_()-'',''_'');
       v_tel2:=translate(v_tel2,''_()-'',''_'');

        if not(Psysuser is NULL) then
        select max(firstname),max(lastname),max(middlename) into v_idoctor,v_fdoctor,v_odoctor from mir.person
        where oid=Psysuser;
        end if;

        if not(v_idoctor is null) then
            if (LENGTH(nvl(v_idoctor,''''))>2) then
            v_idoctor:=substr(v_idoctor,1,1)||''.'';
            end if;
        end if;

        if not(v_odoctor is null) then
            if (LENGTH(nvl(v_odoctor,''''))>2) then
                 v_odoctor:=substr(v_odoctor,1,1)||''.'';
            end if;
        end if;


select count(*) into  v_countsms  from mir.smstmp s
where (CURRENT_TIMESTAMP-s.DATE_SMS)<1;

        if (LENGTH(v_tel1)>=10) and (v_tel1<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
            if (Psysuser is null) then
                insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                    (lower(mir.new_uuid()), v_tel1, ''Ваш вызов на дом принят. Вас посетит врач ''||v_fdoctor||'' ''||v_idoctor||v_odoctor, 0, CURRENT_TIMESTAMP,  Ppeople);
                     else
                insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel1, ''Ваш вызов на дом принят. Вас посетит врач ''||v_fdoctor||'' ''||v_idoctor||v_odoctor, 0, CURRENT_TIMESTAMP,  Ppeople);
               end if;
        end if;

        if (LENGTH(v_tel2)>=10) and (v_tel2<>''+79999999999'') and (v_countsms<TO_NUMBER(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500''))) then
            if (Psysuser is null) then
                insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel2, ''Ваш вызов на дом принят. Вас посетит врач ''||v_fdoctor||'' ''||v_idoctor||v_odoctor, 0, CURRENT_TIMESTAMP,  Ppeople);
                     else
                insert into mir.smscenter
                     (oid, numbertel, smstext, smsst, dateincoming,  people)
                values
                     (lower(mir.new_uuid()), v_tel2, ''Ваш вызов на дом принят. Вас посетит врач ''||v_fdoctor||'' ''||v_idoctor||v_odoctor, 0, CURRENT_TIMESTAMP,  Ppeople);
               end if;
        end if;
      end if;
     END;

';


ALTER FUNCTION mir.sms_insert_sms_new_homevisit(ppeople character, psysuser character, plpu character) OWNER TO postgres;

--
-- TOC entry 2048 (class 1255 OID 17398)
-- Dependencies: 5396 14
-- Name: smstmp_ai_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION smstmp_ai_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  V_COUNT Integer;
  V_LIMIT Integer;
  c record;
BEGIN
  --Определяем кол-во попыток, так же как в PKG_SMS
  SELECT COUNT(1)
    INTO V_COUNT
    FROM MIR.SMSTMP S
   WHERE (CURRENT_TIMESTAMP - S.DATE_SMS) < 1;
  -- Значение лимита берем из настроек
  select cast(MIR.SETTINGS_GET_PARAMETER(''SMS_WARNING_COUNT'',
                                                      ''2500'') as integer) into V_LIMIT;

  IF V_COUNT >= V_LIMIT THEN
    FOR C IN (SELECT S.VALUEPAR
                FROM MIR.SETTINGS S
               WHERE S.PARAM = ''SMS_WARNING_RECIEVER''
                 AND S.VALUEPAR IS NOT NULL
                 AND NOT EXISTS
              --смс отсылаем один раз в 1 час
               (SELECT 1
                        FROM MIR.SMSCENTER
                       WHERE NUMBERTEL = S.VALUEPAR
                         AND CURRENT_TIMESTAMP - DATEINCOMING < 1 / 24)) LOOP
      INSERT INTO MIR.SMSCENTER
        (OID,
         NUMBERTEL,
         SMSTEXT,
         SMSST,
         DATEINCOMING,
         PEOPLE)
      VALUES
        (LOWER(MIR.NEW_UUID()),
         C.VALUEPAR,
         ''В mir.smstmp '' || V_LIMIT || '' записей. Смс не отправляются!!!!'',
         0,
         CURRENT_TIMESTAMP,
         NULL);
    END LOOP;
  END IF;
return new;

END;

';


ALTER FUNCTION mir.smstmp_ai_trg() OWNER TO postgres;

--
-- TOC entry 2049 (class 1255 OID 17399)
-- Dependencies: 5396 14
-- Name: sotr_aiud_init_default_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_aiud_init_default_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  c1 record;
BEGIN
  if TG_OP <> ''DELETE'' then
    --добавляем права на отделение
    insert into mir.sotr_otdel(sotr, otdel)
    select new.oid,
           new.otdel
     where not exists ( select 1
                          from mir.sotr_otdel so
                         where so.sotr = new.oid
                           and so.otdel = new.otdel
                      );      

    -- добавляем права на ЛПУ
    insert into mir.sotr_lpu(sotr, lpu)
    select new.oid,
           o.lpu
      from mir.otdel o
     where o.oid = new.otdel
       and not exists ( select 1
                          from mir.sotr_lpu so
                         where so.sotr = new.oid
                           and so.lpu = o.lpu
                      );
  end if;

  if TG_OP = ''DELETE'' then
    return old;
  else
    return new;
  end if;  
END;
';


ALTER FUNCTION mir.sotr_aiud_init_default_tr() OWNER TO postgres;

--
-- TOC entry 2050 (class 1255 OID 17400)
-- Dependencies: 5396 14
-- Name: sotr_dictionary_set(character, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_dictionary_set(psotr character, pdictionary character, paction character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_dictionary t
                     where t.sotr = psotr
                       and t.dictionary = pdictionary
                       and t.action = paction ) then
      insert into mir.sotr_dictionary ( sotr, "dictionary", "action" )
      values ( psotr, pdictionary, paction );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_dictionary_set(psotr character, pdictionary character, paction character varying) OWNER TO postgres;

--
-- TOC entry 2051 (class 1255 OID 17401)
-- Dependencies: 5396 14
-- Name: sotr_exchange_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_exchange_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  pid NUMERIC;
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_IS_CHANGED BOOLEAN;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    V_LPU = null;--OLD.lpu;
    ELSE
    V_OID = NEW.OID;
    V_LPU = null;-- NEW.lpu;
  END IF;

  PERFORM  mir.pkg_web_service_add_buffer_transfer(
    V_TABLE_NAME,
    V_ACTION,
    V_OID,
    V_LPU);


  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.sotr_exchange_tr() OWNER TO postgres;

--
-- TOC entry 2052 (class 1255 OID 17402)
-- Dependencies: 5396 14
-- Name: sotr_has_right(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_has_right(psotr character, pright character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  BEGIN
    if exists(  select 1
                  from mir.sotr_right_all sra
                 where sra.sotr = psotr
                   and sra.right = pright
                   ) then
        RETURN 1;
    else
        RETURN 0;
    end if;
  END;
';


ALTER FUNCTION mir.sotr_has_right(psotr character, pright character) OWNER TO postgres;

--
-- TOC entry 2053 (class 1255 OID 17403)
-- Dependencies: 5396 14
-- Name: sotr_ib_section_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_ib_section_set(psotr character, pib_section character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_ib_section t
                     where t.sotr = psotr
                       and t.ib_section = pib_section ) then
      insert into mir.sotr_ib_section ( sotr, ib_section )
      values ( psotr, pib_section );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_ib_section_set(psotr character, pib_section character) OWNER TO postgres;

--
-- TOC entry 2054 (class 1255 OID 17404)
-- Dependencies: 5396 14
-- Name: sotr_is_main_administrator(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_is_main_administrator(psotr character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  BEGIN
    if exists(  select 1
                  from mir.sotr so
                 inner join mir.sysuser s
                    on s.oid = so.sysuser
                 where so.oid = psotr
                   and s.isfulladministrator = 1
             ) then
        RETURN 1;
    else
        RETURN 0;
    end if;
  END;
';


ALTER FUNCTION mir.sotr_is_main_administrator(psotr character) OWNER TO postgres;

--
-- TOC entry 2055 (class 1255 OID 17405)
-- Dependencies: 5396 14
-- Name: sotr_lpu_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_lpu_set(psotr character, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_lpu t
                     where t.sotr = psotr
                       and t.lpu = plpu ) then
      insert into mir.sotr_lpu ( sotr, lpu )
      values ( psotr, plpu );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_lpu_set(psotr character, plpu character) OWNER TO postgres;

--
-- TOC entry 2056 (class 1255 OID 17406)
-- Dependencies: 5396 14
-- Name: sotr_otdel_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_otdel_set(psotr character, potdel character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_otdel t
                     where t.sotr = psotr
                       and t.otdel = potdel ) then
      insert into mir.sotr_otdel ( sotr, otdel )
      values ( psotr, potdel );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_otdel_set(psotr character, potdel character) OWNER TO postgres;

--
-- TOC entry 2057 (class 1255 OID 17407)
-- Dependencies: 5396 14
-- Name: sotr_presctype_set_appoint(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_presctype_set_appoint(psotr character, ppresctype character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.sotr_presctype t
                 where t.sotr = psotr
                   and t.presctype_id = ppresctype ) then
        update mir.sotr_presctype t
           set appoint = 1,
               otdel = (select max(s.otdel) from mir.sotr s where s.oid = psotr)
         where t.sotr = psotr
           and t.presctype_id = ppresctype
           and t.appoint = 0;
    else
      insert into mir.sotr_presctype ( oid, sotr, presctype_id, appoint, otdel )
      values ( mir.guid_generate(), psotr, ppresctype, 1, (select max(s.otdel) from mir.sotr s where s.oid = psotr));
    end if;
  end;
';


ALTER FUNCTION mir.sotr_presctype_set_appoint(psotr character, ppresctype character) OWNER TO postgres;

--
-- TOC entry 2010 (class 1255 OID 17408)
-- Dependencies: 5396 14
-- Name: sotr_presctype_set_execute(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_presctype_set_execute(psotr character, ppresctype character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.sotr_presctype t
                 where t.sotr = psotr
                   and t.presctype_id = ppresctype ) then
        update mir.sotr_presctype t
           set execute = 1,
               otdel = (select max(s.otdel) from mir.sotr s where s.oid = psotr)
         where t.sotr = psotr
           and t.presctype_id = ppresctype
           and t.execute = 0;
    else
      insert into mir.sotr_presctype ( oid, sotr, presctype_id, execute, otdel )
      values ( mir.guid_generate(), psotr, ppresctype, 1, (select max(s.otdel) from mir.sotr s where s.oid = psotr));
    end if;
  end;
';


ALTER FUNCTION mir.sotr_presctype_set_execute(psotr character, ppresctype character) OWNER TO postgres;

--
-- TOC entry 2023 (class 1255 OID 17409)
-- Dependencies: 5396 14
-- Name: sotr_presctypefolder_set_appoint(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_presctypefolder_set_appoint(psotr character, pfolder character) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
    update mir.sotr_presctype t
       set appoint = 1,
           otdel = (select max(s.otdel) from mir.sotr s where s.oid = psotr)
     where t.sotr = psotr
       and t.appoint = 0
       and t.presctype_id in 
           (
             with recursive q as 
             (
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
                        where ptf.id = pfolder
                        
                        union all
                        
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                        inner join q
                           on q.id = ptf.parent_id
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
             )
             select q.oid 
               from q 
           );
           
    insert into mir.sotr_presctype ( oid, sotr, presctype_id, appoint, otdel )
    select mir.guid_generate() as oid, 
         psotr as sotr, 
           pt.oid as presctype_id, 
           1 as appoint,
           (select max(s.otdel) from mir.sotr s where s.oid = psotr) as otdel
      from mir.presctype pt
     where pt.oid in 
           (
             with recursive q as 
             (
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
                        where ptf.id = pfolder
                        
                        union all
                        
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                        inner join q
                           on q.id = ptf.parent_id
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
             )
             select q.oid 
               from q 
           )
       and pt.oid not in
            ( select spt.presctype_id
               from mir.sotr_presctype spt
              where spt.sotr = psotr
           );
end;
';


ALTER FUNCTION mir.sotr_presctypefolder_set_appoint(psotr character, pfolder character) OWNER TO postgres;

--
-- TOC entry 2040 (class 1255 OID 17410)
-- Dependencies: 5396 14
-- Name: sotr_presctypefolder_set_execute(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_presctypefolder_set_execute(psotr character, pfolder character) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
    update mir.sotr_presctype t
       set execute = 1,
           otdel = (select max(s.otdel) from mir.sotr s where s.oid = psotr)
     where t.sotr = psotr
       and t.execute = 0
       and t.presctype_id in 
           ( 
             with recursive q as 
             (
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
                        where ptf.id = pfolder
                        
                        union all
                        
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                        inner join q
                           on q.id = ptf.parent_id
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
             )
             select q.oid 
               from q
           );
           
    insert into mir.sotr_presctype ( oid, sotr, presctype_id, execute, otdel )
    select mir.guid_generate() as oid, 
         psotr as sotr, 
           pt.oid as presctype_id, 
           1 as execute,
           (select max(s.otdel) from mir.sotr s where s.oid = psotr) as otdel
      from mir.presctype pt
     where pt.oid in 
           (
             with recursive q as 
             (
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
                        where ptf.id = pfolder
                        
                        union all
                        
                       select ptf.id,
                              pt.oid
                         from mir.presctypefolder ptf
                        inner join q
                           on q.id = ptf.parent_id
                         left join mir.presctype pt
                           on pt.presctypefolder_id = ptf.id
             )
             select q.oid 
               from q 
           )
       and pt.oid not in
            ( select spt.presctype_id
               from mir.sotr_presctype spt
              where spt.sotr = psotr
           );
end;
';


ALTER FUNCTION mir.sotr_presctypefolder_set_execute(psotr character, pfolder character) OWNER TO postgres;

--
-- TOC entry 2046 (class 1255 OID 17411)
-- Dependencies: 5396 14
-- Name: sotr_receptiontype_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_receptiontype_set(psotr character, preceptiontype character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_receptiontype t
                     where t.sotr = psotr
                       and t.receptiontype = preceptiontype ) then
      insert into mir.sotr_receptiontype ( sotr, receptiontype )
      values ( psotr, preceptiontype );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_receptiontype_set(psotr character, preceptiontype character) OWNER TO postgres;

--
-- TOC entry 1835 (class 1255 OID 17412)
-- Dependencies: 5396 14
-- Name: sotr_right_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_right_set(psotr character, pright character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_right t
                     where t.sotr = psotr
                       and t.right = pright ) then
      insert into mir.sotr_right ( sotr, "right" )
      values ( psotr, pright );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_right_set(psotr character, pright character) OWNER TO postgres;

--
-- TOC entry 2059 (class 1255 OID 17413)
-- Dependencies: 5396 14
-- Name: sotr_right_upd_all_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_right_upd_all_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if TG_OP = ''INSERT'' then
  	if not exists(select 1
                    from mir.sotr_right_all sra
                   where sra.sotr = new.sotr
                     and sra.right = new.right
                  ) then
       insert into mir.sotr_right_all(sotr, "right")
       values (new.sotr, new.right);
    end if; 
  else
  	if TG_OP = ''DELETE'' then
      -- если нет такого же права в роли, удаляем право 
      if not exists(select 1
                      from mir.sotr_role sr
                     inner join mir.role_right rr
                        on sr.role = rr.role
                     where sr.sotr = old.sotr
                       and rr.right = old.right ) then
          delete 
            from mir.sotr_right_all sra 
           where sra.sotr = old.sotr 
             and sra.right = old.right; 	  
      end if;  
    end if; 
  end if;
 
  RETURN OLD;  
END;
';


ALTER FUNCTION mir.sotr_right_upd_all_tr() OWNER TO postgres;

--
-- TOC entry 2060 (class 1255 OID 17414)
-- Dependencies: 5396 14
-- Name: sotr_role_set(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_role_set(psotr character, prole character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if not exists ( select 1
                      from mir.sotr_role t
                     where t.sotr = psotr
                       and t.role = prole ) then
      insert into mir.sotr_role ( sotr, "role" )
      values ( psotr, prole );
    end if;
  end;
';


ALTER FUNCTION mir.sotr_role_set(psotr character, prole character) OWNER TO postgres;

--
-- TOC entry 2061 (class 1255 OID 17415)
-- Dependencies: 5396 14
-- Name: sotr_role_upd_all_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_role_upd_all_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  c record;
  c1 record;
BEGIN
  if TG_OP = ''INSERT'' then
    -- вносим все права по роли, которых еще нет
    for c in ( select rr.right
                 from mir.role_right rr
                where rr.role = new.role
                  and rr.right not in
                  	  ( select sra.right
                          from mir.sotr_right_all sra
                         where sra.sotr = new.sotr                          
                      )
             )
    loop
      insert into mir.sotr_right_all(sotr, "right")
      values (new.sotr, c.right);
    end loop;
  else
  	if TG_OP = ''DELETE'' then
      --удаляем все права по роли которых нет в ролях сотрудника
      for c1 in ( select rr.right
                   from mir.role_right rr
                  where rr.role = old.role
                    and rr.right not in
                        ( select sr.right
                            from mir.sotr_right sr
                           where sr.sotr = old.sotr                          
                        )
               )
      loop
        delete 
          from mir.sotr_right_all sra 
         where sra.sotr = old.sotr 
           and sra.right = c1.right;
      end loop; 
    end if; 
  end if;
 
  RETURN OLD;  
END;
';


ALTER FUNCTION mir.sotr_role_upd_all_tr() OWNER TO postgres;

--
-- TOC entry 2062 (class 1255 OID 17416)
-- Dependencies: 5396 14
-- Name: sotr_tr_func(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_tr_func() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
/*  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    SELECT LPU INTO V_LPU FROM mir.otdel where oid = OLD.otdel;
    ELSE
    V_OID = NEW.OID;
    SELECT LPU INTO V_LPU FROM mir.otdel where oid = NEW.otdel;
  END IF;


  PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);
*/
  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.sotr_tr_func() OWNER TO postgres;

--
-- TOC entry 2063 (class 1255 OID 17417)
-- Dependencies: 5396 14
-- Name: sotr_tr_web_repl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotr_tr_web_repl() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));

  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    SELECT LPU INTO V_LPU FROM mir.otdel where oid = OLD.otdel; 
   ELSE
    V_OID = NEW.OID;
    SELECT LPU INTO V_LPU FROM mir.otdel where oid = NEW.otdel; 
  END IF;


  PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.sotr_tr_web_repl() OWNER TO postgres;

--
-- TOC entry 2064 (class 1255 OID 17418)
-- Dependencies: 5396 14
-- Name: sotrworkday$aiud_workscedule(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "sotrworkday$aiud_workscedule"() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  V_IS_CHANGED BOOLEAN;
BEGIN
  IF ( TG_OP = ''DELETE'' ) THEN
    perform MIR.WORKSCHEDULE_DO_LOG(OLD.SYSUSER,
                                OLD.PRESCTYPE,
                                OLD.LPU,
                                date_trunc(''day'', OLD.DATES),
                                ''SOTRWORKDAY'');
  END IF;

  IF ( TG_OP = ''UPDATE'' ) THEN

    IF --UPDATING(''DATE'') AND
       ((NEW.DATE <> OLD.DATE) OR
        (NEW.DATE IS NULL AND OLD.DATE IS NOT NULL) OR
        (NEW.DATE IS NOT NULL AND OLD.DATE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''TIMES'') AND
       ((NEW.TIMES <> OLD.TIMES) OR
        (NEW.TIMES IS NULL AND OLD.TIMES IS NOT NULL) OR
        (NEW.TIMES IS NOT NULL AND OLD.TIMES IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''TIMEPO'') AND
       ((NEW.TIMEPO <> OLD.TIMEPO) OR
        (NEW.TIMEPO IS NULL AND OLD.TIMEPO IS NOT NULL) OR
        (NEW.TIMEPO IS NOT NULL AND OLD.TIMEPO IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    /*    IF UPDATING(''DURATION'') AND
           ((NEW.DURATION <> OLD.DURATION) OR
            (NEW.DURATION IS NULL AND OLD.DURATION IS NOT NULL) OR
            (NEW.DURATION IS NOT NULL AND OLD.DURATION IS NULL)) THEN
          V_IS_CHANGED := TRUE;
        END IF;
    */
    IF --UPDATING(''CABINET'') AND
       ((NEW.CABINET <> OLD.CABINET) OR
        (NEW.CABINET IS NULL AND OLD.CABINET IS NOT NULL) OR
        (NEW.CABINET IS NOT NULL AND OLD.CABINET IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''SYSUSER'') AND
       ((NEW.SYSUSER <> OLD.SYSUSER) OR
        (NEW.SYSUSER IS NULL AND OLD.SYSUSER IS NOT NULL) OR
        (NEW.SYSUSER IS NOT NULL AND OLD.SYSUSER IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ISHOLIDAY'') AND
       ((NEW.ISHOLIDAY <> OLD.ISHOLIDAY) OR
        (NEW.ISHOLIDAY IS NULL AND OLD.ISHOLIDAY IS NOT NULL) OR
        (NEW.ISHOLIDAY IS NOT NULL AND OLD.ISHOLIDAY IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''DATES'') AND
       ((NEW.DATES <> OLD.DATES) OR
        (NEW.DATES IS NULL AND OLD.DATES IS NOT NULL) OR
        (NEW.DATES IS NOT NULL AND OLD.DATES IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''HOLIDAYREASON'') AND
       ((NEW.HOLIDAYREASON <> OLD.HOLIDAYREASON) OR
        (NEW.HOLIDAYREASON IS NULL AND OLD.HOLIDAYREASON IS NOT NULL) OR
        (NEW.HOLIDAYREASON IS NOT NULL AND OLD.HOLIDAYREASON IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''PRESCTYPE'') AND
       ((NEW.PRESCTYPE <> OLD.PRESCTYPE) OR
        (NEW.PRESCTYPE IS NULL AND OLD.PRESCTYPE IS NOT NULL) OR
        (NEW.PRESCTYPE IS NOT NULL AND OLD.PRESCTYPE IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''LPU'') AND
       ((NEW.LPU <> OLD.LPU) OR
        (NEW.LPU IS NULL AND OLD.LPU IS NOT NULL) OR
        (NEW.LPU IS NOT NULL AND OLD.LPU IS NULL)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

    IF --UPDATING(''ISLIVELINE'') AND 
      ((NEW.ISLIVELINE <> OLD.ISLIVELINE)) THEN
      V_IS_CHANGED := TRUE;
    END IF;

  END IF;

  IF V_IS_CHANGED OR ( TG_OP = ''INSERT'' ) THEN
    perform MIR.WORKSCHEDULE_DO_LOG(NEW.SYSUSER,
                                NEW.PRESCTYPE,
                                NEW.LPU,
                                date_trunc(''day'', NEW.DATES),
                                ''SOTRWORKDAY'');
  END IF;
  
return new;
END;

';


ALTER FUNCTION mir."sotrworkday$aiud_workscedule"() OWNER TO postgres;

--
-- TOC entry 2065 (class 1255 OID 17419)
-- Dependencies: 5396 14
-- Name: sotrworkday_tr_func(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotrworkday_tr_func() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    V_LPU = OLD.LPU;
   ELSE
    V_OID = NEW.OID;
    V_LPU = NEW.LPU;
  END IF;


  PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.sotrworkday_tr_func() OWNER TO postgres;

--
-- TOC entry 2067 (class 1255 OID 17420)
-- Dependencies: 5396 14
-- Name: sotrworkday_trigger(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sotrworkday_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  IsExchange VARCHAR;
  V_TABLE_NAME VARCHAR;
  V_ACTION VARCHAR;
  V_OID VARCHAR;
  V_LPU VARCHAR;
BEGIN
  V_ACTION = UPPER(TG_OP);
  V_TABLE_NAME = UPPER(CAST(TG_TABLE_NAME AS VARCHAR));
    
  select mir.get_exchange_var(''IS_EXHANGE'')
  INTO IsExchange;
  if IsExchange = ''TRUE'' then
    if TG_OP = ''DELETE'' THEN
      RETURN OLD;
      else
      RETURN NEW;
    end if;
  end if;

  -- запись в buffer_transfer
  if TG_OP = ''DELETE'' THEN
    V_OID = OLD.OID;
    V_LPU = OLD.lpu;
    ELSE
    V_OID = NEW.OID;
    V_LPU = NEW.lpu;
  END IF;

  IF V_IS_CHANGED  THEN
    PERFORM  mir.pkg_web_service_add_buffer_transfer(
      V_TABLE_NAME,
      V_ACTION,
      V_OID,
      V_LPU);
  END IF;

  if TG_OP = ''DELETE'' THEN
    RETURN OLD;
    ELSE
    RETURN NEW;
  END IF;
END;
';


ALTER FUNCTION mir.sotrworkday_trigger() OWNER TO postgres;

--
-- TOC entry 2068 (class 1255 OID 17421)
-- Dependencies: 5396 14
-- Name: stac_card_tabs_list(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION stac_card_tabs_list(pmdoc_id character varying, psotr_id character varying, pnew_mdoc_type character varying) RETURNS TABLE(tab_name character varying, is_visible integer)
    LANGUAGE plpgsql
    AS '
/*
    add Kulikovskiy E.V. 19/09/2012 
    возвращает список вкладок формы стационарной карты
*/
BEGIN
  return query  
    
  select cast( q.tab_name as varchar) as tab_name,
         cast( q.is_visible as integer) as is_visible
    from (
  select ''PatientCardHospitalPlanTab'' as tab_name, --Планирование госпитализаций
         case
           when ( mir.sotr_has_right(psotr_id, ''hospital_plan_menuitem'') = 1 ) and
                ( (
                  exists ( select 1
                             from mir.mdoc md
                            where md.id = pmdoc_id
                              and md.mdoc_type_id not in (''50e942b6-71c7-11e2-8351-83b9d3639625'') --История развития новорожденного
                          )
                          and
                  exists ( select 1
                             from hosp.hospital_queue hq
                            where hq.mdoc = pmdoc_id
                              and hq.status = 3
                          )        
                  )
                  or
                  (
                  not exists ( select 1
                                 from mir.mdoc md
                                where md.id = pmdoc_id
                              )
                          and
                  coalesce(pnew_mdoc_type, '''') not in (''50e942b6-71c7-11e2-8351-83b9d3639625'') --История развития новорожденного
                  ) 
                )
           then 1
           else 0
         end as is_visible
         
   union all
   
  select ''PatientCardStacInputTab'' as tab_name, --Данные при поступлении
         case
           when ( 
                 exists ( select 1
                           from mir.mdoc md
                          where md.id = pmdoc_id
                            and md.mdoc_type_id in (   ''88f67c00-f8af-11e1-a5f2-27dedb1e0610'',    --Обращение в стационар
                                                       ''2a641a68-cf05-11e1-ae25-c3c470ade501'',    --История болезни
                                                       ''3509b58e-f8b0-11e1-8fce-cf2a04df47d4'',    --История болезни сопровождающего
                                                       ''c38db896-f8b0-11e1-813a-4b9b95184264'',    --История болезни (ДС)
                                                       --''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'',    --История родов
                                                       ''71b21362-8b15-11e2-8440-d36b33ae7b67''--,    --Карта прерывания беременности
                                                       --''50e942b6-71c7-11e2-8351-83b9d3639625''     --История развития новорожденного
                                                      )
                        )
                )
           then 1
           else 0
         end as is_visible
         
   union all
   
  select ''PatientCardStacHospTab'' as tab_name,  --Данные при госпитализации
         coalesce ( max(
         case
           when ( md.mdoc_type_id in ( ''2a641a68-cf05-11e1-ae25-c3c470ade501'',    --История болезни
                                       ''3509b58e-f8b0-11e1-8fce-cf2a04df47d4'',    --История болезни сопровождающего
                                       ''c38db896-f8b0-11e1-813a-4b9b95184264'',    --История болезни (ДС)
                                       --''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'',    --История родов
                                       ''71b21362-8b15-11e2-8440-d36b33ae7b67''--,    --Карта прерывания беременности
                                       --''50e942b6-71c7-11e2-8351-83b9d3639625''     --История развития новорожденного
                                      ) )
                or
                ( exists ( select 1
                             from hosp.peresel p
                            inner join mir.docobsl dob
                               on dob.oid = p.docobsl_id
                            where p.mdoc_id = pmdoc_id
                              and dob.mdoc_type_id 
                                  in ( ''2a641a68-cf05-11e1-ae25-c3c470ade501'',  --История болезни
                                       ''3509b58e-f8b0-11e1-8fce-cf2a04df47d4'',  --История болезни сопровождающего
                                       ''c38db896-f8b0-11e1-813a-4b9b95184264'',  --История болезни (ДС)
                                       --''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'',  --История родов
                                       ''71b21362-8b15-11e2-8440-d36b33ae7b67''--,    --Карта прерывания беременности
                                       --''50e942b6-71c7-11e2-8351-83b9d3639625''   --История развития новорожденного
                                     )
                         )
                  and
                  md.mdoc_type_id in ( ''d505f440-f8af-11e1-aa61-7fb57fe04997'' ) --Врачебное заключение
                ) 
           then 1
           else 0
         end ), 0 ) as is_visible
    from mir.mdoc md
   where md.id = pmdoc_id
   
   union all
   
  select ''PatientCardStacMovingTab'' as tab_name, --Движение по стационару
         case
           when exists ( select 1
                           from mir.mdoc md
                          where md.id = pmdoc_id
                        )
           then 1
           else 0
         end as is_visible
   
   union all
   
  select ''PatientCardKlinikMinTab'' as tab_name, --Клинический минимум
         case
           when exists ( select 1
                           from mir.mdoc md
                          where md.id = pmdoc_id
                        )
           then 1
           else 0
         end as is_visible
   
   union all
   
  select ''PatientCardStacPregnTab'' as tab_name, --Сведения о беременности
         coalesce ( max(
         case
           when ( md.mdoc_type_id in ( ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8''     --История родов
                                      ) )
                or
                ( exists ( select 1
                             from hosp.peresel p
                            inner join mir.docobsl dob
                               on dob.oid = p.docobsl_id
                            where p.mdoc_id = pmdoc_id
                              and dob.mdoc_type_id 
                                  in ( ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8''   --История родов
                                     )
                         )
                  and
                  md.mdoc_type_id in ( ''d505f440-f8af-11e1-aa61-7fb57fe04997'' ) --Врачебное заключение
                ) 
           then 1
           else 0
         end
         ), 0 ) as is_visible
    from mir.mdoc md
   where md.id = pmdoc_id
   
   union all
   
  select ''PatientCardStacPregnAnamnesisTab'' as tab_name, --Анамнез роженицы
         coalesce ( max(
         case
           when ( md.mdoc_type_id in ( ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8''   --История родов
                                      ) )
                or
                ( exists ( select 1
                             from hosp.peresel p
                            inner join mir.docobsl dob
                               on dob.oid = p.docobsl_id
                            where p.mdoc_id = pmdoc_id
                              and dob.mdoc_type_id 
                                  in ( ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8''   --История родов
                                     )
                         )
                  and
                  md.mdoc_type_id in ( ''d505f440-f8af-11e1-aa61-7fb57fe04997'' ) --Врачебное заключение
                ) 
           then 1
           else 0
         end
         ), 0 ) as is_visible
    from mir.mdoc md
   where md.id = pmdoc_id
   
    union all
  
  select ''PatientStatCardTab'' as tab_name,  --Статкарта
         coalesce ( max(
         case
           when ( md.mdoc_type_id in ( ''2a641a68-cf05-11e1-ae25-c3c470ade501'',    --История болезни
                                       ''3509b58e-f8b0-11e1-8fce-cf2a04df47d4'',    --История болезни сопровождающего
                                       ''c38db896-f8b0-11e1-813a-4b9b95184264'',    --История болезни (ДС)
                                       ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'',    --История родов
                                       ''71b21362-8b15-11e2-8440-d36b33ae7b67'',    --Карта прерывания беременности
                                       ''50e942b6-71c7-11e2-8351-83b9d3639625''     --История развития новорожденного
                                      ) )
                or
                ( exists ( select 1
                             from hosp.peresel p
                            inner join mir.docobsl dob
                               on dob.oid = p.docobsl_id
                            where p.mdoc_id = pmdoc_id
                              and dob.mdoc_type_id 
                                  in ( ''2a641a68-cf05-11e1-ae25-c3c470ade501'',  --История болезни
                                       ''3509b58e-f8b0-11e1-8fce-cf2a04df47d4'',  --История болезни сопровождающего
                                       ''c38db896-f8b0-11e1-813a-4b9b95184264'',  --История болезни (ДС)
                                       ''37c924d0-03e1-11e2-b321-eb1b2cdb6ab8'',  --История родов
                                       ''71b21362-8b15-11e2-8440-d36b33ae7b67'',  --Карта прерывания беременности
                                       ''50e942b6-71c7-11e2-8351-83b9d3639625''   --История развития новорожденного
                                     )
                         )
                  and
                  md.mdoc_type_id in ( ''d505f440-f8af-11e1-aa61-7fb57fe04997'' ) --Врачебное заключение
                ) 
           then 1
           else 0
         end ), 0 ) as is_visible
    from mir.mdoc md
   where md.id = pmdoc_id
   
   union all
   
  select ''PatientCardStacSicklistTab'' as tab_name, --Лист нетрудоспособности
         0 as is_visible
         
   union all
   
  select ''PatientCardStacNewBaby'' as tab_name, --Данные новорожденного
         case 
           when ( mdt.synonim = ''STAC_IB_BABY'') 
           then 1
           else 0
         end as is_visible
    from mir.mdoc md
   inner join mir.mdoc_type mdt
      on mdt.id = md.mdoc_type_id
   where md.id = pmdoc_id
   
         ) q;
        
END;
';


ALTER FUNCTION mir.stac_card_tabs_list(pmdoc_id character varying, psotr_id character varying, pnew_mdoc_type character varying) OWNER TO postgres;

--
-- TOC entry 2069 (class 1255 OID 17423)
-- Dependencies: 5396 14
-- Name: sysuser_aiu_trg(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_aiu_trg() RETURNS trigger
    LANGUAGE plpgsql
    AS '
declare
  vuser varchar(255);
  --vpass varchar2(32);
BEGIN

  if ( TG_OP = ''INSERT'') OR 
     ( ( TG_OP = ''UPDATE'') and ( (new.UserName <> old.UserName) or (new.StoredPassword <> old.StoredPassword) ) ) then
    vuser := ''Z''||UPPER(new.UserName);
    --vpass := :new."StoredPassword";
    --mir.DoUser(vUser,vPass);
    insert into mir.ChangedUsers (Oid,Login) values (mir.new_uuid(),vuser);
    --dbms_job.broken(23, FALSE, sysdate);
  end if;
return new;
END;

';


ALTER FUNCTION mir.sysuser_aiu_trg() OWNER TO postgres;

--
-- TOC entry 2070 (class 1255 OID 17424)
-- Dependencies: 5396 14
-- Name: sysuser_change_Login(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "sysuser_change_Login"(newlogin character varying, oldlogin character varying, passwrd character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
--Функция удаляет пользователя со старым логином и создает пользователя с новым логином
--Podolskiy I.M. 2013.01.31
DECLARE
  nres integer;
  poralogin varchar(30);
  r record;
  isExists integer;
BEGIN
  nres := 0;
  poralogin := mir.GET_ORALOGIN_BY_MISLOGIN(oldlogin);
  isExists := 0;
  for r in (select 1 
               from pg_user u
              where u.usename = poralogin
            )
  loop
    isExists = 1;
  end loop;
  if isExists = 1 then
    if ( poralogin <> '''' )  AND (newlogin <>'''') then
     EXECUTE (''DROP USER "'' || poralogin||''"'');
     PERFORM  mir.create_ora_user(newlogin,passwrd);
     UPDATE  mir.sysuser sys SET username=newlogin WHERE sys.username=oldlogin; 
      nres := 1;
    end if;
  end if;
  RETURN nres;
END;
';


ALTER FUNCTION mir."sysuser_change_Login"(newlogin character varying, oldlogin character varying, passwrd character varying) OWNER TO postgres;

--
-- TOC entry 2071 (class 1255 OID 17425)
-- Dependencies: 5396 14
-- Name: sysuser_change_password(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_change_password(pusername character varying, ppassword character varying) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
  nres integer;
  poralogin varchar(30);
  r record;
  isExists integer;
BEGIN
  nres := 0;
  poralogin := mir.GET_ORALOGIN_BY_MISLOGIN(pUserName);
  
  isExists := 0;
  for r in (select 1 
               from pg_user u
              where u.usename = poralogin
            )
  loop
    isExists = 1;
  end loop;
   
  if isExists = 1 then
    if ( poralogin <> '''' ) and ( pPassword <> '''' ) then
      EXECUTE ('' alter user "''||poralogin||''" with password ''''''|| pPassword ||'''''''');
      nres := 1;
    end if;
  end if;
  
  RETURN nres;
END;
';


ALTER FUNCTION mir.sysuser_change_password(pusername character varying, ppassword character varying) OWNER TO postgres;

--
-- TOC entry 2072 (class 1255 OID 17426)
-- Dependencies: 5396 14
-- Name: sysuser_create_sysuser_from_people(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_create_sysuser_from_people(ppeople character, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare    
--by Spasskiy SN 30092011
    V_TMP VARCHAR(36);
	c record;
    v_uid VARCHAR(100);
  BEGIN
    SELECT MAX(OID) INTO V_TMP FROM MIR.SYSUSER WHERE OID = PPEOPLE;
    IF V_TMP IS NULL THEN
      perform MIR.CREATESYSUSERFROMPEOPLE(PPEOPLE);
      --если создаем нового - делаем его видимым
      perform mir.sysuser_update_sysuser(PPEOPLE, null, null, null,null,null,null,null,null,null,null,1);
    END IF;
    V_TMP := mir.sysuser_INSERT_SOTR(PPEOPLE, NULL, NULL, PLPU);
    FOR c IN (SELECT REGION FROM MIR.COMPANY  WHERE OID = PLPU) LOOP
      select MIR.NEW_UUID() into v_uid;
      INSERT INTO MIR.SYSUSER_REGION
        (OID, SYSUSER, REGION)
      VALUES
        (v_uid, PPEOPLE, C.REGION);
    END LOOP;
  END;
';


ALTER FUNCTION mir.sysuser_create_sysuser_from_people(ppeople character, plpu character) OWNER TO postgres;

--
-- TOC entry 2073 (class 1255 OID 17427)
-- Dependencies: 5396 14
-- Name: sysuser_drop_sysuser(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_drop_sysuser(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by Spasskiy SN 30092011
  BEGIN
    --DELETE FROM MIR.sysuser_presctype WHERE SYSUSERS = POID; commented by A.Nakorjakov
    --DELETE FROM MIR.SOTRWORKDAY WHERE SYSUSER = POID;  commented by A.Nakorjakov
    --DELETE FROM MIR.SOTR WHERE SYSUSER = POID; commented by A.Nakorjakov
    DELETE FROM MIR.SYSUSER WHERE OID = POID;
    --    MIR.PKG_PEOPLE_INFO.DROP_PEOPLE(C.SYSUSER);
  END;
';


ALTER FUNCTION mir.sysuser_drop_sysuser(poid character) OWNER TO postgres;

--
-- TOC entry 2074 (class 1255 OID 17428)
-- Dependencies: 5396 14
-- Name: sysuser_has_right(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_has_right(psususer_id character, pright character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  BEGIN
    if exists(  select 1
                  from mir.sysuser_right sr
                 where sr.sysuser = psususer_id
                   and sr.right = pright
                 
                 union all 
                 
                select 1
                  from mir.sysuser_role sr
                 inner join mir.role_right rr
                    on rr.role = sr.role
                 where sr.sysuser = psususer_id
                   and rr.right = pright
                   ) then
        RETURN 1;
    else
        RETURN 0;
    end if;
  END;
';


ALTER FUNCTION mir.sysuser_has_right(psususer_id character, pright character) OWNER TO postgres;

--
-- TOC entry 2075 (class 1255 OID 17429)
-- Dependencies: 5396 14
-- Name: sysuser_insert_sotr(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_insert_sotr(psysuser character, potdel character, ppost character, plpu character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare                     
--by Spasskiy SN 30092011
    V_OTDEL MIR.OTDEL.OID%TYPE;
    V_RES   MIR.SOTR.OID%TYPE;
    NTMP    integer;
  BEGIN
    V_OTDEL := POTDEL;
    SELECT COUNT(1)
      INTO NTMP
      FROM MIR.SYSUSER_LPU
     WHERE SYSUSER = PSYSUSER
       AND LPU = PLPU;
    IF NTMP > 0 THEN
      RETURN NULL;
    END IF;
    IF V_OTDEL IS NULL THEN
      SELECT MAX(OID) INTO V_OTDEL FROM MIR.OTDEL WHERE LPU = PLPU;
      IF V_OTDEL IS NULL THEN
        V_OTDEL := MIR.NEW_UUID();
        INSERT INTO MIR.OTDEL (OID, LPU, NAME, PARENT) VALUES (V_OTDEL, PLPU, V_OTDEL,
           ''Отделение для сопряжения'');
      END IF;
    END IF;

    V_RES := MIR.NEW_UUID();
    INSERT INTO MIR.SOTR
      (OID, SYSUSER, OTDEL, POST)
    VALUES
      (V_RES, PSYSUSER, V_OTDEL, PPOST);
    RETURN V_RES;
  END;

';


ALTER FUNCTION mir.sysuser_insert_sotr(psysuser character, potdel character, ppost character, plpu character) OWNER TO postgres;

--
-- TOC entry 2066 (class 1255 OID 17430)
-- Dependencies: 5396 14
-- Name: sysuser_set_sysuser_prectype(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_set_sysuser_prectype(psysuser character, ppresctype character) RETURNS character
    LANGUAGE plpgsql
    AS '
--by Spasskiy SN 30092011
  BEGIN
  
  select 1 from mir.sysuser_presctype where PRESCTYPES = PPRESCTYPE AND SYSUSERS = PSYSUSER;
  if not found then 
  	  INSERT into mir.sysuser_presctype
        (PRESCTYPES, SYSUSERS, OID)
      VALUES
        (PPRESCTYPE, PSYSUSER, MIR.NEW_UUID());
   end IF;        
  /* MERGE INTO MIR.sysusersysusers_presc_e1393ec2
    USING NULL
    ON (PRESCTYPES = PPRESCTYPE AND SYSUSERS = PSYSUSER)
    WHEN NOT MATCHED THEN
      INSERT
        (PRESCTYPES, SYSUSERS, OID)
      VALUES
        (PPRESCTYPE, PSYSUSER, MIR.NEW_UUID());
        */
  END;

';


ALTER FUNCTION mir.sysuser_set_sysuser_prectype(psysuser character, ppresctype character) OWNER TO postgres;

--
-- TOC entry 2077 (class 1255 OID 17431)
-- Dependencies: 5396 14
-- Name: sysuser_update_sysuser(character, date, character varying, character varying, numeric, numeric, character varying, numeric, numeric, numeric, date, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION sysuser_update_sysuser(poid character, ppasswordchagedate date DEFAULT NULL::date, pstoredpassword character varying DEFAULT NULL::character varying, pusername character varying DEFAULT NULL::character varying, pchangepasswordonfirstlogon numeric DEFAULT NULL::numeric, pisactive numeric DEFAULT NULL::numeric, pcodeuser character varying DEFAULT NULL::character varying, pisadministrator numeric DEFAULT NULL::numeric, pisfulladministrator numeric DEFAULT NULL::numeric, pisaspuser numeric DEFAULT NULL::numeric, preadmessages date DEFAULT NULL::date, pshowinsite numeric DEFAULT NULL::numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
--by Spasskiy SN 30092011

  BEGIN
    UPDATE MIR.SYSUSER S
       SET PASSWORDCHAGEDATE          = COALESCE(PPASSWORDCHAGEDATE,
                                            PASSWORDCHAGEDATE),
           STOREDPASSWORD             = NVL(PSTOREDPASSWORD, STOREDPASSWORD),
           USERNAME                   = NVL(PUSERNAME, USERNAME),
           CHANGEPASSWORDONFIRSTLOGON = NVL(PCHANGEPASSWORDONFIRSTLOGON,
                                            CHANGEPASSWORDONFIRSTLOGON),
           ISACTIVE                   = NVL(PISACTIVE, ISACTIVE),
           CODEUSER                   = NVL(PCODEUSER, CODEUSER),
           ISADMINISTRATOR            = NVL(PISADMINISTRATOR,
                                            ISADMINISTRATOR),
           ISFULLADMINISTRATOR        = NVL(PISFULLADMINISTRATOR,
                                            ISFULLADMINISTRATOR),
           ISASPUSER                  = NVL(PISASPUSER, ISASPUSER),
           READMESSAGES               = COALESCE(PREADMESSAGES, READMESSAGES),
           SHOWINSITE                 = NVL(PSHOWINSITE, SHOWINSITE)
     WHERE OID = POID;

  END;

';


ALTER FUNCTION mir.sysuser_update_sysuser(poid character, ppasswordchagedate date, pstoredpassword character varying, pusername character varying, pchangepasswordonfirstlogon numeric, pisactive numeric, pcodeuser character varying, pisadministrator numeric, pisfulladministrator numeric, pisaspuser numeric, preadmessages date, pshowinsite numeric) OWNER TO postgres;

--
-- TOC entry 2078 (class 1255 OID 17432)
-- Dependencies: 5396 14
-- Name: table_partition_by_lpu_trigger_function(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION table_partition_by_lpu_trigger_function() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  _schema_name varchar;
  _master_table_name varchar;
  _tablename text;
  _partition_id text;
  _result record;
BEGIN
  _schema_name := TG_ARGV[0];
  _master_table_name := TG_ARGV[1];
  
  --Формируем имя дочерней партиции исходя из входных параметров
  _partition_id := trim(NEW.lpu);
  _tablename := _master_table_name||_partition_id;
 
  -- Проверяем существование партиции для записи
  PERFORM 1
  FROM   pg_catalog.pg_class c
  JOIN   pg_catalog.pg_namespace n ON n.oid = c.relnamespace
  WHERE  c.relkind = ''r''
  AND    c.relname = _tablename
  AND    n.nspname = _schema_name;
 
  -- Если нужная партиция ещё не существует, создаем её
  IF NOT FOUND THEN
    EXECUTE ''CREATE TABLE ''|| _schema_name ||''.''|| quote_ident(_tablename) ||'' (
      oid CHAR(36) PRIMARY KEY,
      CHECK ( lpu = '' || quote_literal(_partition_id) || '')
    ) INHERITS (''||_schema_name||''.''||_master_table_name||'')'';
 
  -- Table permissions are not inherited from the parent.
  -- If permissions change on the master be sure to change them on the child also.
  EXECUTE ''ALTER TABLE ''||_schema_name||''.'' || quote_ident(_tablename) || '' OWNER TO postgres'';
  EXECUTE ''GRANT ALL ON TABLE ''||_schema_name||''.'' || quote_ident(_tablename) || '' TO asu'';
 
  -- Indexes are defined per child, so we assign a default index that uses the partition columns
  EXECUTE ''CREATE INDEX '' || quote_ident(_tablename||''_lpu_indx'') || '' ON ''||_schema_name||''.'' || quote_ident(_tablename) || '' (lpu)''; 
END IF;
 
-- Вставляем текущую запись в нужную партицию, которая уже точно есть
EXECUTE ''INSERT INTO ''||_schema_name||''.'' || quote_ident(_tablename) || '' VALUES ($1.*)'' USING NEW;
RETURN NULL;
END;
';


ALTER FUNCTION mir.table_partition_by_lpu_trigger_function() OWNER TO postgres;

--
-- TOC entry 2079 (class 1255 OID 17433)
-- Dependencies: 5396 14
-- Name: tablo_delete_tablo(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tablo_delete_tablo(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
  begin
    delete from mir.tablo where oid = poid;
  end;

';


ALTER FUNCTION mir.tablo_delete_tablo(poid character) OWNER TO postgres;

--
-- TOC entry 2080 (class 1255 OID 17434)
-- Dependencies: 5396 14
-- Name: tablo_insert_tablo(character varying, character, numeric, numeric, numeric, character varying, character varying, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tablo_insert_tablo(pname character varying, plpu character, ptablo_type numeric, plinecount numeric, prefreshtime numeric, pnote character varying, plinetext character varying, plpucreate character, pcss_type numeric) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011    
    v_oid mir.tablo.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.tablo
      (oid,
       name,
       lpu,
       tablo_type,
       linecount,
       refreshtime,
       note,
       linetext,
       lpucreate,
       css_type)
    values
      (v_oid,
       pname,
       plpu,
       ptablo_type,
       plinecount,
       prefreshtime,
       pnote,
       plinetext,
       plpucreate,
       pcss_type);
    return v_oid;
  end;

';


ALTER FUNCTION mir.tablo_insert_tablo(pname character varying, plpu character, ptablo_type numeric, plinecount numeric, prefreshtime numeric, pnote character varying, plinetext character varying, plpucreate character, pcss_type numeric) OWNER TO postgres;

--
-- TOC entry 2081 (class 1255 OID 17435)
-- Dependencies: 5396 14
-- Name: tablo_update_tablo(character, character varying, character, numeric, numeric, numeric, character varying, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tablo_update_tablo(poid character, pname character varying, plpu character, ptablo_type numeric, plinecount numeric, prefreshtime numeric, pnote character varying, plinetext character varying, pcss_type numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.tablo
       set name        = pname,
           lpu         = plpu,
           tablo_type  = ptablo_type,
           linecount   = plinecount,
           refreshtime = prefreshtime,
           note        = pnote,
           linetext    = plinetext,
           css_type    = pcss_type
     where oid = poid;
  end;

';


ALTER FUNCTION mir.tablo_update_tablo(poid character, pname character varying, plpu character, ptablo_type numeric, plinecount numeric, prefreshtime numeric, pnote character varying, plinetext character varying, pcss_type numeric) OWNER TO postgres;

--
-- TOC entry 2082 (class 1255 OID 17436)
-- Dependencies: 5396 14
-- Name: temp_foreignkey_cascade(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION temp_foreignkey_cascade() RETURNS SETOF character varying
    LANGUAGE plpgsql
    AS '
  declare
    c record;
    ptext text;
begin
  RETURN NEXT ''----------------------------------- Исходное значение FOREIGN KEY'';

    FOR C IN (
  SELECT tc.constraint_name,
         tc.table_name,
         tc.table_schema,
         kcu.column_name,
         ccu.table_name AS foreign_table_name,
         ccu.table_schema AS foreign_table_schema,
         ccu.column_name AS foreign_column_name,
     CASE pg_constraint.contype
            WHEN ''c'' THEN ''CHECK''
            WHEN ''f'' THEN ''FOREIGN KEY''
            WHEN ''p'' THEN ''PRIMARY KEY''
            WHEN ''u'' THEN ''UNIQUE''
          END AS "constraint_type",
          CASE WHEN pg_constraint.condeferrable = ''f'' THEN 0 ELSE 1 END AS is_deferrable,
          CASE WHEN pg_constraint.condeferred = ''f'' THEN 0 ELSE 1 END AS is_deferred,
--          array_to_string(pg_constraint.conkey, '' '') AS constraint_key,
          CASE confupdtype
            WHEN ''a'' THEN ''NO ACTION''
            WHEN ''r'' THEN ''RESTRICT''
            WHEN ''c'' THEN ''CASCADE''
            WHEN ''n'' THEN ''SET NULL''
            WHEN ''d'' THEN ''SET DEFAULT''
          END AS on_update,
          CASE confdeltype
            WHEN ''a'' THEN ''NO ACTION''
            WHEN ''r'' THEN ''RESTRICT''
            WHEN ''c'' THEN ''CASCADE''
            WHEN ''n'' THEN ''SET NULL''
            WHEN ''d'' THEN ''SET DEFAULT''
          END AS on_delete,
          CASE confmatchtype
            WHEN ''u'' THEN ''UNSPECIFIED''
            WHEN ''f'' THEN ''FULL''
            WHEN ''p'' THEN ''PARTIAL''
          END AS match_type
  FROM information_schema.table_constraints AS tc
       JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name
       JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name
       LEFT JOIN  pg_constraint ON pg_constraint.conname = tc.constraint_name
  WHERE 1 = 1
        and tc.constraint_type = ''FOREIGN KEY''
        AND tc.table_name = ''visit''
        and tc.constraint_schema in (''mir'', ''hosp'', ''medserv'', ''phar''))
  LOOP
    ptext= ''ALTER TABLE '' ||c.table_schema || ''.''||c.table_name || '' DROP CONSTRAINT '' ||c.constraint_name || ''  RESTRICT;'';
    RETURN NEXT ptext;

    ptext= ''ALTER TABLE  '' ||c.table_schema || ''.''||c.table_name ||
    ''  ADD CONSTRAINT ''||c.constraint_name||'' FOREIGN KEY (''||c.column_name||'')''||
    ''  REFERENCES ''||c.foreign_table_schema||''.''||c.foreign_table_name||''(''||c.foreign_column_name||'')'' ||
    '' ON DELETE ''|| c.on_delete ||'' ON UPDATE ''|| c.on_update||'' NOT DEFERRABLE;'';
    RETURN NEXT ptext;

  END LOOP;


  RETURN NEXT ''----------------------------------- Изменение на CASCADE'';
  FOR C IN (
  SELECT tc.constraint_name,
         tc.table_name,
         tc.table_schema,
         kcu.column_name,
         ccu.table_name AS foreign_table_name,
         ccu.table_schema AS foreign_table_schema,
         ccu.column_name AS foreign_column_name,
         CASE confupdtype
            WHEN ''a'' THEN ''NO ACTION''
            WHEN ''r'' THEN ''RESTRICT''
            WHEN ''c'' THEN ''CASCADE''
            WHEN ''n'' THEN ''SET NULL''
            WHEN ''d'' THEN ''SET DEFAULT''
          END AS on_update
  FROM information_schema.table_constraints AS tc
       JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name
       JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name
       LEFT JOIN  pg_constraint ON pg_constraint.conname = tc.constraint_name
  WHERE 1 = 1
        and tc.constraint_type = ''FOREIGN KEY''
        AND tc.table_name = ''pay_type''
        and tc.constraint_schema in (''mir'', ''hosp'', ''medserv'', ''phar''))
  LOOP
    ptext= ''ALTER TABLE '' ||c.table_schema || ''.''||c.table_name || '' DROP CONSTRAINT '' ||c.constraint_name || ''  RESTRICT;'';
    RETURN NEXT ptext;
  --  EXECUTE ptext;

    ptext= ''ALTER TABLE  '' ||c.table_schema || ''.''||c.table_name ||
    ''  ADD CONSTRAINT ''||c.constraint_name||'' FOREIGN KEY (''||c.column_name||'')''||
    ''  REFERENCES ''||c.foreign_table_schema||''.''||c.foreign_table_name||''(''||c.foreign_column_name||'')'' ||
    '' ON DELETE CASCADE ON UPDATE '' || c.on_update||'' NOT DEFERRABLE;  -----  готово '';
--    EXECUTE ptext;
    RETURN NEXT ptext;


  END LOOP;

  return NEXT ''commit;  '';--||lpuoid;
  end
';


ALTER FUNCTION mir.temp_foreignkey_cascade() OWNER TO postgres;

--
-- TOC entry 2083 (class 1255 OID 17437)
-- Dependencies: 5396 14
-- Name: terminal_delete_terminal(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION terminal_delete_terminal(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
  begin
    delete from mir.terminal where oid = poid;
  end;

';


ALTER FUNCTION mir.terminal_delete_terminal(poid character) OWNER TO postgres;

--
-- TOC entry 2084 (class 1255 OID 17438)
-- Dependencies: 5396 14
-- Name: terminal_insert_terminal(character varying, character, character, numeric, numeric, numeric, numeric, numeric, character varying, character, numeric, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION terminal_insert_terminal(pname character varying, pcity character, plpu character, pisotherlpu numeric, pisotherdistrict numeric, pishomevisit numeric, pisdistrict numeric, pispayment numeric, pnote character varying, plpucreate character, pisprinttalon numeric, pregion character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --by SpasskiySN 28.09.2011
      
    v_oid mir.terminal.oid%type;
  begin
    v_oid := mir.new_uuid();
    insert into mir.terminal
      (oid,
       name,
       city,
       lpu,
       isotherlpu,
       isotherdistrict,
       ishomevisit,
       note,
       lpucreate,
       isprinttalon,
       region,
       isdistrictvrach,
       ISPAYMENT)
    values
      (v_oid,
       pname,
       pcity,
       plpu,
       pisotherlpu,
       pisotherdistrict,
       pishomevisit,
       pnote,
       plpucreate,
       pisprinttalon,
       pregion,
       pisdistrict,
       pispayment);
    return v_oid;
  end;

';


ALTER FUNCTION mir.terminal_insert_terminal(pname character varying, pcity character, plpu character, pisotherlpu numeric, pisotherdistrict numeric, pishomevisit numeric, pisdistrict numeric, pispayment numeric, pnote character varying, plpucreate character, pisprinttalon numeric, pregion character) OWNER TO postgres;

--
-- TOC entry 2086 (class 1255 OID 17439)
-- Dependencies: 5396 14
-- Name: terminal_update_terminal(character, character varying, character, character, numeric, numeric, numeric, numeric, numeric, character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION terminal_update_terminal(poid character, pname character varying, pcity character, plpu character, pisotherlpu numeric, pisotherdistrict numeric, pishomevisit numeric, pisdistrict numeric, pispayment numeric, pnote character varying, pisprinttalon numeric DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.terminal
       set name            = pname,
           city            = pcity,
           lpu             = plpu,
           isotherlpu      = pisotherlpu,
           isotherdistrict = pisotherdistrict,
           ishomevisit     = pishomevisit,
           note            = pnote,
           isdistrictvrach = pisdistrict,
           ISPAYMENT =pispayment,
           isprinttalon    = pisprinttalon
     where oid = poid;
  end;

';


ALTER FUNCTION mir.terminal_update_terminal(poid character, pname character varying, pcity character, plpu character, pisotherlpu numeric, pisotherdistrict numeric, pishomevisit numeric, pisdistrict numeric, pispayment numeric, pnote character varying, pisprinttalon numeric) OWNER TO postgres;

--
-- TOC entry 2087 (class 1255 OID 17440)
-- Dependencies: 5396 14
-- Name: test2(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION test2("pSTR" character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
  
END;

';


ALTER FUNCTION mir.test2("pSTR" character varying) OWNER TO postgres;

--
-- TOC entry 2088 (class 1255 OID 17441)
-- Dependencies: 5396 14
-- Name: testFunction(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "testFunction"("pSTR" character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  f Varchar(255);
BEGIN
   f := $1||''dfdfdffdfffffffffffffffff'';
   return f;
END;

';


ALTER FUNCTION mir."testFunction"("pSTR" character varying) OWNER TO postgres;

--
-- TOC entry 2089 (class 1255 OID 17442)
-- Dependencies: 5396 14
-- Name: tib_clear_smid(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_clear_smid(pfk_id character, psmedit_id character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
      delete
        from mir.tib t
       where t.fk_id = pfk_id
         and t.smedit_id = psmedit_id;
  end;
  ';


ALTER FUNCTION mir.tib_clear_smid(pfk_id character, psmedit_id character) OWNER TO postgres;

--
-- TOC entry 2090 (class 1255 OID 17443)
-- Dependencies: 5396 14
-- Name: tib_dynamic_form_list(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_dynamic_form_list(plpu character varying, pmdoc_type_id character varying, psynonim character varying) RETURNS TABLE(oid character, form_name character varying)
    LANGUAGE plpgsql
    AS '
/*
    add Kulikovskiy E.V. 19/09/2012 
    возвращает список форм для отображения по синониму, ЛПУ и типу документа
*/
BEGIN
  return query      
           WITH RECURSIVE q AS 
                (
                      select fd.oid,
                             fd.parent_id,
                             fd.form_name,
                             fd.num_order,
                             0 as lev
                        from mir.form_dynamic fd
                       where fd.synonim = psynonim
                 
                       union all
                      
                      select fd.oid,
                             fd.parent_id,
                             fd.form_name,
                             fd.num_order,
                             q.lev + 1 as lev
                        from mir.form_dynamic fd
                       inner join q
                          on fd.parent_id = q.oid
                       where ( ( fd.lpu is null ) or ( fd.lpu = plpu ) )
                         and ( ( fd.mdoc_type_id is null ) or ( fd.mdoc_type_id = pmdoc_type_id ) )
                )
                select q.oid,
                       q.form_name
                  from q 
                 where q.lev > 0
                 order by q.num_order
                 ;
END;
';


ALTER FUNCTION mir.tib_dynamic_form_list(plpu character varying, pmdoc_type_id character varying, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 2091 (class 1255 OID 17444)
-- Dependencies: 5396 14
-- Name: tib_get_value(character, character varying, anyelement); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_get_value(pfk_id character, psynonim character varying, pdefault anyelement) RETURNS TABLE(val anyelement)
    LANGUAGE plpgsql
    AS '
  declare
    --v_resid "pg_catalog"."anyelement";
    nnum numeric(15, 3);
    snum varchar;
   -- c record;
  begin

    if ( pfk_id=''1'' ) then
        --select cast(5.435 as numeric(15, 3)) into nnum;
        return query select cast(5.435 as numeric(15, 3));
    else
        --select cast(''dfds'' as varchar) into snum;
        return query select cast(''dfds'' as varchar);
    end if;
    
   -- return v_resid;
  end;
';


ALTER FUNCTION mir.tib_get_value(pfk_id character, psynonim character varying, pdefault anyelement) OWNER TO postgres;

--
-- TOC entry 2092 (class 1255 OID 17445)
-- Dependencies: 5396 14
-- Name: tib_get_value2(anyelement, anyelement); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_get_value2(pvalue anyelement, pdefault anyelement) RETURNS anyelement
    LANGUAGE plpgsql
    AS '
BEGIN
 if pvalue is null then
 RETURN ''ddd'';
 else
 RETURN 8;
 end if;
END;
';


ALTER FUNCTION mir.tib_get_value2(pvalue anyelement, pdefault anyelement) OWNER TO postgres;

--
-- TOC entry 2093 (class 1255 OID 17446)
-- Dependencies: 5396 14
-- Name: tib_mdoc_clear_smid(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_clear_smid(pfk_id character, psmedit_id character) RETURNS void
    LANGUAGE plpgsql
    AS '
 begin
 delete
 from mir.tib_mdoc t
 where t.fk_id = pfk_id
 and t.smedit_id = psmedit_id;
 end;
 ';


ALTER FUNCTION mir.tib_mdoc_clear_smid(pfk_id character, psmedit_id character) OWNER TO postgres;

--
-- TOC entry 2094 (class 1255 OID 17447)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_selected_values_html(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_selected_values_html(pfk_id character, psmedit_id character, pparent_id character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    sres varchar;
  begin
    select string_agg(t.smid_name, '', '') into sres
      from (
                 select s.name ||
                        case
                          when sg.parent_id is not null
                          then '': ''
                          else ''''
                        end || ''<span id="''||s.oid||''" class="box-el">'' || 
                            COALESCE( mir.tib_mdoc_get_selected_values_html(pfk_id, psmedit_id, s.oid), 
                                case
                                  when sg.parent_id is not null
                                  then ''<...>''
                                  else ''''
                                end
                            ) || ''</span>'' as smid_name
                   from mir.tib_mdoc tmd
                  inner join mir.smid s
                     on tmd.vsmid_id = s.oid
                   left join ( select ss.parent_id
                                 from mir.smid ss
                                group by ss.parent_id
                        ) sg
                     on sg.parent_id = s.oid
                  where tmd.fk_id = pfk_id
                    and tmd.smedit_id = psmedit_id
                    and s.parent_id = pparent_id
                  order by s.num_order
           ) t;
  
    return sres;
  end;
';


ALTER FUNCTION mir.tib_mdoc_get_selected_values_html(pfk_id character, psmedit_id character, pparent_id character) OWNER TO postgres;

--
-- TOC entry 2095 (class 1255 OID 17448)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_selected_values_string(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_selected_values_string(pfk_id character, psmedit_id character, pparent_id character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  declare
    sres varchar;
  begin
    select string_agg(t.smid_name, '', '') into sres
      from (
                 select s.name ||
                        case
                          when sg.parent_id is not null
                          then '': ''
                          else ''''
                        end ||
                            COALESCE( mir.tib_mdoc_get_selected_values_string(pfk_id, psmedit_id, s.oid), '''')
                            as smid_name
                   from mir.tib_mdoc tmd
                  inner join mir.smid s
                     on tmd.vsmid_id = s.oid
                   left join ( select ss.parent_id
                                 from mir.smid ss
                                group by ss.parent_id
                        ) sg
                     on sg.parent_id = s.oid
                  where tmd.fk_id = pfk_id
                    and tmd.smedit_id = psmedit_id
                    and s.parent_id = pparent_id
                  order by s.num_order
           ) t;
  
    return sres;
  end;
';


ALTER FUNCTION mir.tib_mdoc_get_selected_values_string(pfk_id character, psmedit_id character, pparent_id character) OWNER TO postgres;

--
-- TOC entry 2076 (class 1255 OID 17449)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_vchar(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_vchar(pfk_id character, psynonim character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  sres varchar;
  c record;
begin
    sres := null;
    for c in ( select tmd.vchar
                 from mir.tib_mdoc tmd
                inner join mir.smid s
                   on s.oid = tmd.smedit_id
                where tmd.fk_id = pfk_id
                  and s.synonim = psynonim
             )
    loop
      sres := c.vchar;
    end loop;
    
    return sres;
end;
';


ALTER FUNCTION mir.tib_mdoc_get_vchar(pfk_id character, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1973 (class 1255 OID 17450)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_vcombobox(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_vcombobox(pfk_id character, psynonim character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  sres varchar;
  c record;
begin
    sres := null;
    for c in ( select (select ts.name from mir.smid ts where ts.oid=tmd.vsmid_id) as vsmid_id
                 from mir.tib_mdoc tmd
                inner join mir.smid s
                   on s.oid = tmd.smedit_id
                where tmd.fk_id = pfk_id
                  and s.synonim = psynonim
             )
    loop
      sres := c.vsmid_id;
    end loop;
    
    return sres;
end;
';


ALTER FUNCTION mir.tib_mdoc_get_vcombobox(pfk_id character, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 1856 (class 1255 OID 17451)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_vcombobox_oid(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_vcombobox_oid(pfk_id character, psynonim character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
begin
    return (   select max(tmd.vsmid_id)
                 from mir.tib_mdoc tmd
                inner join mir.smid s
                   on s.oid = tmd.smedit_id
                where tmd.fk_id = pfk_id
                  and s.synonim = psynonim
             );
end;
';


ALTER FUNCTION mir.tib_mdoc_get_vcombobox_oid(pfk_id character, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 2096 (class 1255 OID 17452)
-- Dependencies: 5396 14
-- Name: tib_mdoc_get_vnum(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_get_vnum(pfk_id character, psynonim character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS '
declare
  sres numeric(15,7);
  c record;
begin
    sres := null;
    for c in ( select tmd.vnum
                 from mir.tib_mdoc tmd
                inner join mir.smid s
                   on s.oid = tmd.smedit_id
                where tmd.fk_id = pfk_id
                  and s.synonim = psynonim
             )
    loop
      sres := c.vnum;
    end loop;
    
    return sres;
end;
';


ALTER FUNCTION mir.tib_mdoc_get_vnum(pfk_id character, psynonim character varying) OWNER TO postgres;

--
-- TOC entry 2097 (class 1255 OID 17453)
-- Dependencies: 5396 14
-- Name: tib_mdoc_write_date(character, character, character, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_mdoc t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_mdoc t
           set sotr_id = psotr_id,
               vdate = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_mdoc ( oid, fk_id, sotr_id, smedit_id, vdate, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_mdoc_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 2098 (class 1255 OID 17454)
-- Dependencies: 5396 14
-- Name: tib_mdoc_write_num(character, character, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_mdoc t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_mdoc t
           set sotr_id = psotr_id,
               vnum = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_mdoc ( oid, fk_id, sotr_id, smedit_id, vnum, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_mdoc_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) OWNER TO postgres;

--
-- TOC entry 2099 (class 1255 OID 17455)
-- Dependencies: 5396 14
-- Name: tib_mdoc_write_smid(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if pval is null then
      -- для combobox подходит, а для varchar нужно сначала tib_mdoc_clear_smid, затем добавлять значения
      delete
        from mir.tib_mdoc t
       where t.fk_id = pfk_id
         and t.smedit_id = psmedit_id;
    else
      if exists ( select 1
                    from mir.tib_mdoc t
                   where t.fk_id = pfk_id
                     and t.smedit_id = psmedit_id
                    -- and t.vsmid_id = pval 
                     ) then
          update mir.tib_mdoc t
             set sotr_id = psotr_id,
                 vsmid_id = pval
           where t.fk_id = pfk_id
             and t.smedit_id = psmedit_id
             --and t.vsmid_id = pval
             ;
      else
        insert into mir.tib_mdoc ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
        values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
      end if;
    end if;
  end;
';


ALTER FUNCTION mir.tib_mdoc_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2100 (class 1255 OID 17456)
-- Dependencies: 5396 14
-- Name: tib_mdoc_write_smid_varchar(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
      if exists ( select 1
                    from mir.tib_mdoc t
                   where t.fk_id = pfk_id
                     and t.smedit_id = psmedit_id
                     and t.vsmid_id = pval ) then
          update mir.tib_mdoc t
             set sotr_id = psotr_id
           where t.fk_id = pfk_id
             and t.smedit_id = psmedit_id
             and t.vsmid_id = pval;
      else
        insert into mir.tib_mdoc ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
        values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
      end if;
  end;
  ';


ALTER FUNCTION mir.tib_mdoc_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2101 (class 1255 OID 17457)
-- Dependencies: 5396 14
-- Name: tib_mdoc_write_text(character, character, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_mdoc_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_mdoc t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_mdoc t
           set sotr_id = psotr_id,
               vchar = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_mdoc ( oid, fk_id, sotr_id, smedit_id, vchar, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_mdoc_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) OWNER TO postgres;

--
-- TOC entry 2102 (class 1255 OID 17458)
-- Dependencies: 5396 14
-- Name: tib_people_clear_smid(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_clear_smid(pfk_id character, psmedit_id character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
      delete
        from mir.tib_people t
       where t.fk_id = pfk_id
         and t.smedit_id = psmedit_id;
  end;
  ';


ALTER FUNCTION mir.tib_people_clear_smid(pfk_id character, psmedit_id character) OWNER TO postgres;

--
-- TOC entry 2103 (class 1255 OID 17459)
-- Dependencies: 5396 14
-- Name: tib_people_write_date(character, character, character, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_people t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_people t
           set sotr_id = psotr_id,
               vdate = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_people ( oid, fk_id, sotr_id, smedit_id, vdate, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_people_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 2104 (class 1255 OID 17460)
-- Dependencies: 5396 14
-- Name: tib_people_write_num(character, character, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_people t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_people t
           set sotr_id = psotr_id,
               vnum = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_people ( oid, fk_id, sotr_id, smedit_id, vnum, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_people_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) OWNER TO postgres;

--
-- TOC entry 2106 (class 1255 OID 17461)
-- Dependencies: 5396 14
-- Name: tib_people_write_smid(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if pval is null then
      -- для combobox подходит, а для varchar нужно сначала tib_mdoc_clear_smid, затем добавлять значения
      delete
        from mir.tib_people t
       where t.fk_id = pfk_id
         and t.smedit_id = psmedit_id;
    else
      if exists ( select 1
                    from mir.tib_people t
                   where t.fk_id = pfk_id
                     and t.smedit_id = psmedit_id ) then
          update mir.tib_people t
             set sotr_id = psotr_id
           where t.fk_id = pfk_id
             and t.smedit_id = psmedit_id;
      else
        insert into mir.tib_people ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
        values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
      end if;
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_people_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2107 (class 1255 OID 17462)
-- Dependencies: 5396 14
-- Name: tib_people_write_smid_varchar(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_people t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id
                   and t.vsmid_id = pval ) then
        update mir.tib_people t
           set sotr_id = psotr_id
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id
           and t.vsmid_id = pval;
    else
      insert into mir.tib_people ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_people_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2108 (class 1255 OID 17463)
-- Dependencies: 5396 14
-- Name: tib_people_write_text(character, character, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_people_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib_people t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib_people t
           set sotr_id = psotr_id,
               vchar = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib_people ( oid, fk_id, sotr_id, smedit_id, vchar, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_people_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) OWNER TO postgres;

--
-- TOC entry 2109 (class 1255 OID 17464)
-- Dependencies: 5396 14
-- Name: tib_write_date(character, character, character, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib t
           set sotr_id = psotr_id,
               vdate = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib ( oid, fk_id, sotr_id, smedit_id, vdate, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_write_date(pfk_id character, psmedit_id character, psotr_id character, pval timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 2110 (class 1255 OID 17465)
-- Dependencies: 5396 14
-- Name: tib_write_num(character, character, character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib t
           set sotr_id = psotr_id,
               vnum = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib ( oid, fk_id, sotr_id, smedit_id, vnum, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_write_num(pfk_id character, psmedit_id character, psotr_id character, pval numeric) OWNER TO postgres;

--
-- TOC entry 2111 (class 1255 OID 17466)
-- Dependencies: 5396 14
-- Name: tib_write_smid(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if pval is null then
      -- для combobox подходит, а для varchar нужно сначала tib_mdoc_clear_smid, затем добавлять значения
      delete
        from mir.tib t
       where t.fk_id = pfk_id
         and t.smedit_id = psmedit_id;
    else
      if exists ( select 1
                    from mir.tib t
                   where t.fk_id = pfk_id
                     and t.smedit_id = psmedit_id ) then
          update mir.tib t
             set sotr_id = psotr_id
           where t.fk_id = pfk_id
             and t.smedit_id = psmedit_id;
      else
        insert into mir.tib ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
        values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
      end if;
    end if;

  end;
  ';


ALTER FUNCTION mir.tib_write_smid(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2112 (class 1255 OID 17467)
-- Dependencies: 5396 14
-- Name: tib_write_smid_varchar(character, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id
                   and t.vsmid_id = pval ) then
        update mir.tib t
           set sotr_id = psotr_id
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id
           and t.vsmid_id = pval;
    else
      insert into mir.tib ( oid, fk_id, sotr_id, smedit_id, vsmid_id, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_write_smid_varchar(pfk_id character, psmedit_id character, psotr_id character, pval character) OWNER TO postgres;

--
-- TOC entry 2113 (class 1255 OID 17468)
-- Dependencies: 5396 14
-- Name: tib_write_text(character, character, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tib_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  begin
    if exists ( select 1
                  from mir.tib t
                 where t.fk_id = pfk_id
                   and t.smedit_id = psmedit_id ) then
        update mir.tib t
           set sotr_id = psotr_id,
               vchar = pval
         where t.fk_id = pfk_id
           and t.smedit_id = psmedit_id;
    else
      insert into mir.tib ( oid, fk_id, sotr_id, smedit_id, vchar, create_date )
      values ( mir.guid_generate(), pfk_id, psotr_id, psmedit_id, pval, CURRENT_TIMESTAMP);
    end if;
  end;
  ';


ALTER FUNCTION mir.tib_write_text(pfk_id character, psmedit_id character, psotr_id character, pval character varying) OWNER TO postgres;

--
-- TOC entry 2114 (class 1255 OID 17469)
-- Dependencies: 5396 14
-- Name: tr_insert_service(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tr_insert_service() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
	if new.group_id is null then 
	 new.group_id = ''194B2578-F585-11E0-AB10-AA324924019B'';
	end if;
  RETURN NEW;  
END;
';


ALTER FUNCTION mir.tr_insert_service() OWNER TO postgres;

--
-- TOC entry 2105 (class 1255 OID 17470)
-- Dependencies: 5396 14
-- Name: tr_region_otdel(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION tr_region_otdel() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
regionid varchar;
regionName varchar;
cityid varchar;
cityName varchar;
BEGIN
IF(NEW.ADDRESSEX is not null) then
if(TG_OP = ''INSERT'' and NEW.addressex is not null) THEN
select (
         select name || '' '' || fc_prefix
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 1
       ),
       (
         select oid
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 1
       )
into regionName,
     regionid
from mir.addressex a
where a.oid = NEW . addressex;
select (
         select name
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 3 or
               fk_level = 4
       ),
       (
         select oid
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 3 or
               fk_level = 4
       )
into cityName,
     cityid
from mir.addressex a
where a.oid = NEW . addressex;
if(regionid is not null and regionName is not null and cityid is not null and
cityName is not null) then
insert into mir.otdel_region(otdel, region, region_name, city, city_name)
values (NEW . oid, regionid, regionName, cityid, cityName);
end if;
else
if(TG_OP = ''UPDATE'') then
select (
         select name || '' '' || fc_prefix
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 1
       ),
       (
         select oid
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 1
       )
into regionName,
     regionid
from mir.addressex a
where a.oid = NEW . addressex;
select (
         select name
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 3 or
               fk_level = 4
       ),
       (
         select oid
         from mir.get_tkladrspr_parents(a.tkladr)
         where fk_level = 3 or
               fk_level = 4
       )
into cityName,
     cityid
from mir.addressex a
where a.oid = NEW . addressex;
if(EXISTS(select *
          from mir.otdel_region
          where otdel = NEW . oid)) THEN
          if(regionid is not null and regionName is not null and cityid is not
          null and cityName is not null) then
          update mir.otdel_region
          set region = regionid,
              region_name = regionName,
              city = cityid,
              city_name = cityName
          where otdel = NEW . oid;
          end if;
          else
          if(regionid is not null and regionName is not null and cityid is not
          null and cityName is not null) then
          insert into mir.otdel_region(otdel, region, region_name, city,
          city_name)
          values (NEW . oid, regionid, regionName, cityid, cityName);
          end if;
end if;
end if;
end if;
end if;
  return NEW;
END;
';


ALTER FUNCTION mir.tr_region_otdel() OWNER TO postgres;

--
-- TOC entry 2116 (class 1255 OID 17471)
-- Dependencies: 5396 14
-- Name: translit(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION translit(str_in character varying DEFAULT ''::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    PRET                  VARCHAR (8000);
        P_STR    VARCHAR (4000);    
        P_STR_LAT VARCHAR (8000);
        P_RUS    VARCHAR (100);    
        P_LAT1    VARCHAR (100);    
        P_LAT2    VARCHAR (100);    
        P_LAT3    VARCHAR (100);                            
        P_I NUMERIC;
        P_POS NUMERIC;
        P_CH VARCHAR (2);                                   
    begin
        P_STR:=STR_IN;
        P_RUS:=''абвгдеёжзийклмнопрстуфхцчшщъыьэюя'';
        P_LAT1:=''abvgdejzzijklmnoprstufkccss"y''''ejj'';
        P_LAT2:=''      oh  j           h hhh   hua'';
        P_LAT3:=''                          h      '';
        P_I:=1;
        P_STR_LAT:='''';
        while P_I <= LENGTH(STR_IN)
        loop
            P_CH := SUBSTR(STR_IN, P_I, 1);
            P_POS := INSTR(P_RUS,lower(P_CH));
            if P_POS > 0 then

                if ASCII(upper(P_CH)) = ascii(lower(P_CH)) then 
                    P_STR_LAT := P_STR_LAT || upper(SUBSTR(P_LAT1, P_POS, 1)) || trim(SUBSTR(P_LAT2, P_POS, 1)) || trim(SUBSTR(P_LAT3, P_POS, 1));
                else
                    P_STR_LAT := P_STR_LAT || trim(SUBSTR(P_LAT1, P_POS, 1)) || trim(SUBSTR(P_LAT2, P_POS, 1)) || trim(SUBSTR(P_LAT3, P_POS, 1));                
                end if;
            else
                 P_STR_LAT := P_STR_LAT||P_CH;
            end if;
           P_I:= P_I + 1;
            
        end loop; 
      --  P_STR_LAT:=REPLACE(P_STR_LAT,'' '','''');
RETURN  P_STR_LAT;
END;

';


ALTER FUNCTION mir.translit(str_in character varying) OWNER TO postgres;

--
-- TOC entry 2117 (class 1255 OID 17472)
-- Dependencies: 2614 5396 14
-- Name: trashorrestorepresctypefolder(character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION trashorrestorepresctypefolder(p_id character varying, p_del integer) RETURNS tkladrspr
    LANGUAGE plpgsql
    AS '
/*
	add Ognev M.V. 22/03/2012 
*/
DECLARE
	r mir.presctypefolder%ROWTYPE;
 
  prectype_restore CURSOR FOR
    (
      WITH RECURSIVE
        q AS
        (
        SELECT  o.id, o."name", o.parent_id
        FROM    mir.presctypefolder o
        WHERE   o.id = p_id
        UNION ALL
        SELECT  op.id, op."name", op.parent_id
        FROM    mir.presctypefolder op
        JOIN    q
        ON      q.parent_id = op.id
        )
        SELECT  q.id, q.name, q.parent_id
        FROM    q
    );
    
    prectype CURSOR FOR
    (
      WITH RECURSIVE
        q AS
        (
        SELECT  o.id, o."name", o.parent_id
        FROM    mir.presctypefolder o
        WHERE   o.id = p_id
        UNION ALL
        SELECT  op.id, op."name", op.parent_id
        FROM    mir.presctypefolder op
        JOIN    q
        ON      op.parent_id = q.id
        )
        SELECT  q.id, q.name, q.parent_id
        FROM    q
    );
  
BEGIN

      for r in prectype
      loop
          update mir.presctypefolder set del = p_del where id = r.id and parent_id is not null;
          update mir.presctype set del = p_del where presctypefolder_id = r.id;
      end loop;
	
	if (p_del = 0) then
      for r in prectype_restore
      loop
          update mir.presctypefolder set del = p_del where id = r.id;
          if (p_id = r.id) then
          	update mir.presctype set del = p_del where presctypefolder_id = r.id;
          end if;
      end loop;
    end if; 

    return null;
END;
';


ALTER FUNCTION mir.trashorrestorepresctypefolder(p_id character varying, p_del integer) OWNER TO postgres;

--
-- TOC entry 2118 (class 1255 OID 17473)
-- Dependencies: 5396 14
-- Name: travm_get_travmfullname(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION travm_get_travmfullname(pid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  DECLARE
    vres  VARCHAR (1000);
  BEGIN
    WITH RECURSIVE rec ( ff, id, parent_id ) AS 
    (
    SELECT k.name as ff,
           k.oid,
           k.parent_id
      FROM mir.travm k
     WHERE k.oid = pid
     union all
    SELECT k.name as ff,
           k.oid,
           k.parent_id
      FROM mir.travm k
     inner join rec r
        on r.id = k.parent_id
    )

    select array_to_string(
           xpath(''/root/foo/text()'', 
                xmlelement(name root, 
                           xmlagg( xmlelement(name foo, r.ff ))
                          ) 
                ), '','' ) into vres 
      from rec r;

    RETURN (vres);
  END;
';


ALTER FUNCTION mir.travm_get_travmfullname(pid character) OWNER TO postgres;

--
-- TOC entry 2119 (class 1255 OID 17474)
-- Dependencies: 5396 14
-- Name: unblockuser(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION unblockuser(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN

update mir.lockusers
set block_end=CURRENT_TIMESTAMP,
state=2,
user_unblock=CURRENT_USER
where OID_PEOPLE=poid and  block_end is null;


END;

';


ALTER FUNCTION mir.unblockuser(poid character varying) OWNER TO postgres;

--
-- TOC entry 2120 (class 1255 OID 17475)
-- Dependencies: 5396 14
-- Name: uniondublicates(character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION uniondublicates(pgeneral character varying, pselect character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_general alias for $1;
  v_selected alias for $2;
BEGIN
  update mir.schedule set people = v_general where people=v_selected;
update mir.answerclientmessages set peopleanswer = v_general where peopleanswer=v_selected;
update mir.areal_people set people_oid = v_general where people_oid=v_selected;
update mir.award set people = v_general where people=v_selected;
update mir.benefit set people = v_general where people=v_selected;
update mir.cardemployee set people = v_general where people=v_selected;
update mir.changelpu set people = v_general where people=v_selected;
update mir.children_evolution_history set people_id =v_general where people_id=v_selected;
update mir.diplomaeducation set people =v_general where people=v_selected;
update mir.errorclientmessages set people =v_general where people=v_selected;
update mir.homevisit set people =v_general where people=v_selected;
update mir.infovalue set people =v_general where people=v_selected;
update mir.insurance set people =v_general where people=v_selected;
update mir.invalid set people =v_general where people=v_selected;
update mir.mdoc set people_id =v_general where people_id=v_selected;
update mir.nursing_baby set people_oid =v_general where people_oid=v_selected;
update mir.pacient set people =v_general where people=v_selected;
update mir.pay_agreement set people_id =v_general where people_id=v_selected;
update mir.people_address set people =v_general where people=v_selected;
update mir.people_status set people =v_general where people=v_selected;
update mir.peoplekartaplace set people =v_general where people=v_selected;
update mir.peoplephoneabsence set people =v_general where people=v_selected;
update mir.pollanswer_people set people =v_general where people=v_selected;
update mir.postgraduateeducation set people =v_general where people=v_selected;
update mir.pregnancies set people =v_general where people=v_selected;
update mir.premilitary set people_oid =v_general where people_oid=v_selected;
update mir.prenatal set people_oid =v_general where people_oid=v_selected;
update mir.qualification set people =v_general where people=v_selected;
update mir.referrals set people_oid =v_general where people_oid=v_selected;
update mir.retrainment set people =v_general where people=v_selected;
update mir.risk_factors_diabetes_second_type_people set people =v_general where people=v_selected;
update mir.risk_factors_ibs_people set people =v_general where people=v_selected;
update mir.schedule_log set patient =v_general where patient=v_selected;
update mir.sertificateeducation set people =v_general where people=v_selected;
update mir.sicklist set people_id =v_general where people_id=v_selected;
update mir.skillimprovement set people =v_general where people=v_selected;
update mir.skippayment set people =v_general where people=v_selected;
update mir.smscenter set people =v_general where people=v_selected;
update mir.territorialaccessory set people =v_general where people=v_selected;
update mir.tuberculez set people_oid =v_general where people_oid=v_selected;
update mir.vac_cancel set people_id =v_general where people_id=v_selected;
update mir.vac_map set people_id =v_general where people_id=v_selected;
update mir.vac_people set people_id =v_general where people_id=v_selected;
update mir.vac_people_test set people_id =v_general where people_id=v_selected;
update mir.vac_plan set people_id =v_general where people_id=v_selected;
update mir.vac_sicness set people_id =v_general where people_id=v_selected;
update mir.zayavka set people =v_general where people=v_selected;
delete from mir.people where oid=v_selected;
return v_general;
END;
';


ALTER FUNCTION mir.uniondublicates(pgeneral character varying, pselect character varying) OWNER TO postgres;

--
-- TOC entry 2121 (class 1255 OID 17476)
-- Dependencies: 5396 14
-- Name: update_company(character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION update_company(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vAddressEx mir.addressex.oid%type; -- GUID адреса
BEGIN
  select max(address) into vAddressEx from mir.company where oid=v_oid;
                                    
  if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
     vAddressEx := lower(MIR.NEW_UUID());
                                                            
    insert into mir.AddressEx
      (Oid, House, Building, Flat, Tkladr)
    values(vAddressEx, pHOUSE, pBUILDING,pFLAT, pTKLADR);
  else
    update  mir.AddressEx
       set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
    where Oid=vAddressEx;
  end if;
                                      
  update mir.company
     set fullname = v_fullname,
    shortname = v_shortname,
    phone = v_phone,
    fax = v_fax,
    okonh = v_okonh,
    okpo = v_okpo,
    inn = v_inn,
    ogrn = v_ogrn,
    address = vAddressEx,
    home =v_home,
    kpp = v_kpp,
    raschschet = v_raschschet,
    bank = v_bank,
    bik = v_bik,
    korschet = v_korschet
  where oid = v_oid;
END;

';


ALTER FUNCTION mir.update_company(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying) OWNER TO postgres;

--
-- TOC entry 2115 (class 1255 OID 17477)
-- Dependencies: 5396 14
-- Name: update_diagnos_in_demand(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION update_diagnos_in_demand(pdemand character, pstandart character) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  DELETE FROM MIR.DEMAND_STANDART DD WHERE DD.DEMAND = PDEMAND AND DD.SERVICE NOT IN (SELECT S.SERVICE
              FROM MIR.STANDART_GOSP_SERVICE S
             WHERE S.OID_STANDART = PSTANDART);
             
  perform MIR.ADD_DIAGNOS_IN_DEMAND(PDEMAND, PSTANDART);
end;

';


ALTER FUNCTION mir.update_diagnos_in_demand(pdemand character, pstandart character) OWNER TO postgres;

--
-- TOC entry 2124 (class 1255 OID 17478)
-- Dependencies: 5396 14
-- Name: update_lpu(character, character, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, numeric, numeric, character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION update_lpu(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_transport character varying, v_telreg character varying, v_telspr character varying, v_kvota character varying, lic character varying, datelic date, pis_private numeric, allowzapis numeric, ta character, psite character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
  vAddressEx mir.addressex.oid%type; -- GUID адреса
BEGIN
  select max(address) into vAddressEx from mir.company where oid=v_oid;
                                    
  if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
     vAddressEx := lower(MIR.NEW_UUID());
                                                            
    insert into mir.AddressEx
      (Oid, House, Building, Flat, Tkladr)
    values(vAddressEx, pHOUSE, pBUILDING,pFLAT, pTKLADR);
  else
    update  mir.AddressEx
       set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
    where Oid=vAddressEx;
  end if;
                                      
  update mir.company
     set fullname = v_fullname,
    shortname = v_shortname,
    phone = v_phone,
    fax = v_fax,
    okonh = v_okonh,
    okpo = v_okpo,
    inn = v_inn,
    ogrn = v_ogrn,
    address = vAddressEx,
    home =v_home,
    kpp = v_kpp,
    raschschet = v_raschschet,
    bank = v_bank,
    bik = v_bik,
    korschet = v_korschet
  where oid = v_oid;
  
  update mir.lpu
     set transport = v_transport,
    telreg = v_telreg,
    telspr = v_telspr, 
    show_in_site=1,
    is_kvota=v_kvota, 
    license=LIC, 
    datelicense=DATELIC, 
    is_private = pis_private, 
    is_allow_zapis = allowzapis,
    TERRITORYAFFILATION = ta, 
    site = psite
  where oid = v_oid;
END;

';


ALTER FUNCTION mir.update_lpu(v_oid character, ptkladr character, phouse character varying, pbuilding character varying, pflat character varying, v_fullname character varying, v_shortname character varying, v_phone character varying, v_fax character varying, v_okonh character varying, v_okpo character varying, v_inn character varying, v_ogrn character varying, v_home character varying, v_kpp character varying, v_raschschet character varying, v_bank character varying, v_bik character varying, v_korschet character varying, v_transport character varying, v_telreg character varying, v_telspr character varying, v_kvota character varying, lic character varying, datelic date, pis_private numeric, allowzapis numeric, ta character, psite character varying) OWNER TO postgres;

--
-- TOC entry 2125 (class 1255 OID 17479)
-- Dependencies: 5396 14
-- Name: update_number_for_card(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION update_number_for_card() RETURNS boolean
    LANGUAGE plpgsql
    AS '
/*
	add Ognev M.V. 1/06/2012 
*/
DECLARE
	r mir.mdoc_number%ROWTYPE;
 
   mdoc CURSOR FOR
    (
     	select * from mir.mdoc
    );
  
BEGIN
    for r in mdoc
    loop
        update mir.mdoc_number set num = (
            select max(m.num)+1 num from mir.mdoc md
            	   join mir.mdoc_number m on md.id = m.mdoc_id
            where md.mdoc_type_id = r.mdoc_type_id and md.lpu = r.lpu       
        ) where mdoc_id = r.id;
    end loop;
    return null;
END;
';


ALTER FUNCTION mir.update_number_for_card() OWNER TO postgres;

--
-- TOC entry 2126 (class 1255 OID 17480)
-- Dependencies: 5396 14
-- Name: update_schedule_replace_sysuser_presctype(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION update_schedule_replace_sysuser_presctype(poldpresc character varying, pnewpresc character varying, psysuser character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  
BEGIN
  update mir.schedule 
  set presctype=pnewpresc 
  where presctype=poldpresc 
  and sysuser=psysuser 
  and to_date(to_char(starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'')>= CURRENT_DATE;
  return '''';
END;
';


ALTER FUNCTION mir.update_schedule_replace_sysuser_presctype(poldpresc character varying, pnewpresc character varying, psysuser character varying) OWNER TO postgres;

--
-- TOC entry 2127 (class 1255 OID 17481)
-- Dependencies: 5396 14
-- Name: updatepolisfromexport(character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION updatepolisfromexport(seria_value character varying, number_value character varying, family_value character varying, name_value character varying, father_value character varying, sex_value character varying, birthday_value character varying, ils_value character varying, region_value character varying, district_value character varying, city_value character varying, street_value character varying, house_value character varying, courp_value character varying, flat_value character varying, people_value character varying, polis_type character varying, shcompany_code character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS '
declare

 
 tkladr_id VARCHAR;
 people_id VARCHAR;
 addresex_id VARCHAR;
 sex_id INTEGER;
 date_birthday date;
 company_oid VARCHAR;
 

BEGIN
 
 
 IF people_value IS NULL THEN
 tkladr_id = mir.updatepolisfromexportgetkladr(region_value,district_value,city_value,street_value);
 select a.oid into addresex_id from mir.addressex a 
 where a.tkladr = tkladr_id 
 and a.house = house_value
 and a.corps = courp_value
 and a.flat = flat_value limit 1;
 
 IF addresex_id IS NULL THEN
 addresex_id = mir.guid_generate();
 
 insert into mir.addressex ("oid", "tkladr", "house", "corps", "flat")
 values (addresex_id, tkladr_id, house_value, courp_value, flat_value);
 END IF;
 
 people_id = mir.guid_generate();
 IF lower(sex_value) = ''М'' THEN 
 sex_id = 2;
 ELSE 
 sex_id = 1; 
 END IF;
 
 BEGIN
 date_birthday = CAST(birthday_value as date);
 EXCEPTION WHEN OTHERS THEN
 date_birthday = now();
 END;
 
 insert into mir.people("oid", "dtcreation", "sex", "lastname", "firstname", "middlename", "birthday", "snils", "addressex2", "gasurf_oid")
 values (people_id, now(), sex_id , family_value, name_value, father_value, date_birthday, ils_value, addresex_id, trim(seria_value)||trim(number_value));
 
 

 ELSE
 people_id = people_value;
 END IF;
 
 update mir.insurance SET "state" = 0 WHERE "people" = people_id;
 select c.oid into company_oid from mir.company c where c.foms_code = shcompany_code limit 1;
 
 
 insert into mir.insurance("oid", "people", "ser", "num", "pay_type", "state", "insur_oms_type", "insurance_number", "begindate" , "enddate", "canceldate","insurance_state", "company" )
 values (mir.guid_generate(), people_id, trim(seria_value), trim(number_value), mir.cn_paytype_oms(), 1, polis_type, trim(seria_value)||trim(number_value), null , null, null, 1,company_oid);
 
 
 
return true;
END;
';


ALTER FUNCTION mir.updatepolisfromexport(seria_value character varying, number_value character varying, family_value character varying, name_value character varying, father_value character varying, sex_value character varying, birthday_value character varying, ils_value character varying, region_value character varying, district_value character varying, city_value character varying, street_value character varying, house_value character varying, courp_value character varying, flat_value character varying, people_value character varying, polis_type character varying, shcompany_code character varying) OWNER TO postgres;

--
-- TOC entry 2128 (class 1255 OID 17482)
-- Dependencies: 5396 14
-- Name: updatepolisfromexportgetkladr(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION updatepolisfromexportgetkladr(region character varying, district character varying, city character varying, street character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
 tkladr_oid VARCHAR;
BEGIN
	
    if district is NULL THEN
    
    select COALESCE(tc.oid,COALESCE(td.oid,t.oid)) as oid into tkladr_oid from mir.tkladrspr t 
        left join mir.tkladrspr td on td.parent = t.oid
        and (lower(td.fc_prefix||''. ''||td.name) like lower(city) 
        or lower(td.name||'' ''||td.fc_prefix||''.'')like lower(city) 
        or lower(td.fc_prefix||''.''||td.name) like lower(city) 
        or lower(td.name) like lower(city))

        left join mir.tkladrspr tc on tc.parent = td.oid
        and (lower(tc.fc_prefix||''. ''||tc.name) like lower(street) 
        or lower(tc.name||'' ''||tc.fc_prefix||''.'')like lower(street) 
        or lower(tc.fc_prefix||''.''||tc.name) like lower(street) 
        or lower(tc.name) like lower(street))

        where t.parent= ''3a903d16-daf5-44f1-b6cc-e3e0b7441060''
        and (lower(t.fc_prefix||''. ''||t.name) like lower(region) 
        or lower(t.name||'' ''||t.fc_prefix||''.'')like lower(region) 
        or lower(t.fc_prefix||''.''||t.name) like lower(region) 
        or lower(t.name) like lower(region));
    ELSE
    	select COALESCE(distr.oid,COALESCE(tc.oid,COALESCE(td.oid,t.oid))) as oid into tkladr_oid from mir.tkladrspr t
        
        left join mir.tkladrspr distr on distr.parent = t.oid
        and (lower(distr.fc_prefix||''. ''||distr.name) like lower(district) 
        or lower(distr.name||'' ''||distr.fc_prefix||''.'')like lower(district) 
        or lower(distr.fc_prefix||''.''||distr.name) like lower(district) 
        or lower(distr.name) like lower(district))
         
        left join mir.tkladrspr td on td.parent = distr.oid
        and (lower(td.fc_prefix||''. ''||td.name) like lower(city) 
        or lower(td.name||'' ''||td.fc_prefix||''.'')like lower(city) 
        or lower(td.fc_prefix||''.''||td.name) like lower(city) 
        or lower(td.name) like lower(city))

        left join mir.tkladrspr tc on tc.parent = td.oid
        and (lower(tc.fc_prefix||''. ''||tc.name) like lower(street) 
        or lower(tc.name||'' ''||tc.fc_prefix||''.'')like lower(street) 
        or lower(tc.fc_prefix||''.''||tc.name) like lower(street) 
        or lower(tc.name) like lower(street))

        where t.parent= ''3a903d16-daf5-44f1-b6cc-e3e0b7441060''
        and (lower(t.fc_prefix||''. ''||t.name) like lower(region) 
        or lower(t.name||'' ''||t.fc_prefix||''.'')like lower(region) 
        or lower(t.fc_prefix||''.''||t.name) like lower(region) 
        or lower(t.name) like lower(region));    
    END IF;
    RETURN tkladr_oid;
END;
';


ALTER FUNCTION mir.updatepolisfromexportgetkladr(region character varying, district character varying, city character varying, street character varying) OWNER TO postgres;

--
-- TOC entry 2129 (class 1255 OID 17483)
-- Dependencies: 5396 14
-- Name: uptakeandmorbidity(integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION uptakeandmorbidity(sign integer, presence integer) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
RESULTSUM INTEGER;
Sig INTEGER;
Pres INTEGER;
BEGIN
IF sign IS NOT NULL
THEN Sig:=sign;
ELSE Sig:=0;
end if;
IF presence IS NOT NULL
THEN Pres:=presence;
ELSE Pres:=0;
end if;
RESULTSUM:=Sig+Pres;
RETURN RESULTSUM;
END;
';


ALTER FUNCTION mir.uptakeandmorbidity(sign integer, presence integer) OWNER TO postgres;

--
-- TOC entry 2130 (class 1255 OID 17484)
-- Dependencies: 5396 14
-- Name: uptakeandmorbidity(integer, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION uptakeandmorbidity(done integer, not_done integer, presence integer) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
RESULTSUM INTEGER;
Donm INTEGER;
NtDone INTEGER;
Pres INTEGER;
BEGIN
IF done IS NOT NULL
THEN Donm:=done;
ELSE Donm:=0;
end if;
IF Not_done IS NOT NULL
THEN NtDone:=not_done;
ELSE NtDone:=0;
end if;
IF presence IS NOT NULL
THEN Pres:=presence;
ELSE Pres:=0;
end if;
RESULTSUM:=Donm+NtDone+Pres;
RETURN RESULTSUM;
END;
';


ALTER FUNCTION mir.uptakeandmorbidity(done integer, not_done integer, presence integer) OWNER TO postgres;

--
-- TOC entry 2131 (class 1255 OID 17485)
-- Dependencies: 5396 14
-- Name: vac_map_delete(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vac_map_delete(pid character) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  update mir.vac_map
     set fl_del = 1
   where oid = pid;  
end;
';


ALTER FUNCTION mir.vac_map_delete(pid character) OWNER TO postgres;

--
-- TOC entry 2132 (class 1255 OID 17486)
-- Dependencies: 5396 14
-- Name: vac_plan_insert(character, character, character, date, character, character, integer, integer, integer, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vac_plan_insert(ppeople_id character, pinfection_id character, pkratn_id character, pplan_date date, pstatus_id character, pvac_cancel_id character, pis_not_vaccin integer DEFAULT NULL::integer, pis_not_exists_prev_vaccin integer DEFAULT NULL::integer, pvaccin_period integer DEFAULT NULL::integer, pvac_people_id character DEFAULT NULL::bpchar, pemp_id character DEFAULT NULL::bpchar) RETURNS character
    LANGUAGE plpgsql
    AS '
  declare
    nres mir.vac_plan.oid%type;
    soid mir.vac_plan.oid%type;
  begin
    select mir.guid_generate() into soid;
    
    insert into mir.vac_plan
      (oid, people_id, infection_id, kratn_id,  plan_date , status_id,
       vac_cancel_id, is_not_vaccin, is_not_exists_prev_vaccin, vaccin_period, 
       vac_people_id, emp_id )
    values
      (soid, ppeople_id, pinfection_id, pkratn_id, pplan_date , pstatus_id, 
       pvac_cancel_id, pis_not_vaccin, pis_not_exists_prev_vaccin, pvaccin_period,
       pvac_people_id, pemp_id)
    returning oid into nres;
    
    return nres;
  end;
';


ALTER FUNCTION mir.vac_plan_insert(ppeople_id character, pinfection_id character, pkratn_id character, pplan_date date, pstatus_id character, pvac_cancel_id character, pis_not_vaccin integer, pis_not_exists_prev_vaccin integer, pvaccin_period integer, pvac_people_id character, pemp_id character) OWNER TO postgres;

--
-- TOC entry 2122 (class 1255 OID 17487)
-- Dependencies: 5396 14
-- Name: vaccin_form6_recalc(character, date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_form6_recalc(plpuid character, pdate_from date, pdate_to date) RETURNS integer
    LANGUAGE plpgsql
    AS '
declare
  LpuId mir.company.oid%type;
  dDateFrom Date;
  dDateTo Date;
  dCalcDate timestamp;
  rec record;
begin
  if ( plpuid is null ) or ( pdate_from is null ) then
     return -1;
  end if;
  
  LpuId := plpuid;
  dDateFrom := cast(date_trunc(''month'', pdate_from) as date);
  
  if pdate_to is NULL then
    dDateTo := cast(date_trunc(''month'', CURRENT_DATE) + interval ''1 month'' as date) - interval ''1 day'';
  else
    dDateTo := cast(date_trunc(''month'', pdate_to) + interval ''1 month'' as date) - interval ''1 day'';
  end if;
  
  delete from mir.form6_calc c
   where c.lpu = LpuId
     and c.date_on between dDateFrom and dDateTo;
     
  dCalcDate := CURRENT_TIMESTAMP;
    
  insert into mir.form6_calc ( lpu, yr, mon, infection_id, type_id, 
      num_1, num_2, num_3, num_4, num_5, 
      num_6, num_7, num_8, num_9, num_10,
      num_11, num_12, num_13, num_14, num_15,
      num_16, num_17, num_18, num_19, num_20,
      num_21, num_22, num_23, num_24, num_25,
      num_26, num_27, num_28, num_29, num_30,
      num_31, num_32, date_on, calc_date )
  select n.lpu,
         n.yr,
         n.mon,
         n.infection_id,
         n.type_id,
         sum(n.num_1) as num_1,
         sum(n.num_2) as num_2,
         sum(n.num_3) as num_3,
         sum(n.num_4) as num_4,
         sum(n.num_5) as num_5,
         sum(n.num_6) as num_6,
         sum(n.num_7) as num_7,
         sum(n.num_8) as num_8,
         sum(n.num_9) as num_9,
         sum(n.num_10) as num_10,
         sum(n.num_11) as num_11,
         sum(n.num_12) as num_12,
         sum(n.num_13) as num_13,
         sum(n.num_14) as num_14,
         sum(n.num_15) as num_15,
         sum(n.num_16) as num_16,
         sum(n.num_17) as num_17,
         sum(n.num_18) as num_18,
         sum(n.num_19) as num_19,
         sum(n.num_20) as num_20,
         sum(n.num_21) as num_21,
         sum(n.num_22) as num_22,
         sum(n.num_23) as num_23,
         sum(n.num_24) as num_24,
         sum(n.num_25) as num_25,
         sum(n.num_26) as num_26,
         sum(n.num_27) as num_27,
         sum(n.num_28) as num_28,
         sum(n.num_29) as num_29,
         sum(n.num_30) as num_30,
         sum(n.num_31) as num_31,
         sum(n.num_32) as num_32,
         to_date( ''01.''||n.mon||''.''||n.yr, ''dd.mm.yyyy'' ) as date_on,
         dCalcDate as calc_date
    from (
          select t.lpu,
                 t.yr,
                 t.mon,
                 t.infection_id,
                 t.type_id,
                 t.people_id,
                 case 
                   when t.age < interval ''1 year'' 
                   then 1 
                   else 0 
                 end as num_1,
                 case 
                   when t.age < interval ''3 month'' 
                   then 1 
                   else 0 
                 end as num_2,
                 case 
                   when ( t.age >= interval ''3 month'' ) and ( t.age < interval ''6 month'' )
                   then 1 
                   else 0 
                 end as num_3,
                 case 
                   when ( t.age >= interval ''6 month'' ) and ( t.age < interval ''1 year'' )
                   then 1 
                   else 0 
                 end as num_4,
                 case 
                   when ( t.age >= interval ''1 year'' ) and ( t.age < interval ''2 year'' )
                   then 1 
                   else 0 
                 end as num_5,
                 case 
                   when ( t.age >= interval ''2 year'' ) and ( t.age < interval ''3 year'' )
                   then 1 
                   else 0 
                 end as num_6,
                 case 
                   when ( t.age >= interval ''3 year'' ) and ( t.age < interval ''4 year'' )
                   then 1 
                   else 0 
                 end as num_7,
                 case 
                   when ( t.age >= interval ''4 year'' ) and ( t.age < interval ''5 year'' )
                   then 1 
                   else 0 
                 end as num_8,
                 case 
                   when ( t.age >= interval ''5 year'' ) and ( t.age < interval ''6 year'' )
                   then 1 
                   else 0 
                 end as num_9,
                 case 
                   when ( t.age >= interval ''6 year'' ) and ( t.age < interval ''7 year'' )
                   then 1 
                   else 0 
                 end as num_10,
                 case 
                   when ( t.age >= interval ''7 year'' ) and ( t.age < interval ''8 year'' )
                   then 1 
                   else 0 
                 end as num_11,
                 case 
                   when ( t.age >= interval ''8 year'' ) and ( t.age < interval ''9 year'' )
                   then 1 
                   else 0 
                 end as num_12,
                 case 
                   when ( t.age >= interval ''9 year'' ) and ( t.age < interval ''10 year'' )
                   then 1 
                   else 0 
                 end as num_13,
                 case 
                   when ( t.age >= interval ''10 year'' ) and ( t.age < interval ''11 year'' )
                   then 1 
                   else 0 
                 end as num_14,
                 case 
                   when ( t.age >= interval ''11 year'' ) and ( t.age < interval ''12 year'' )
                   then 1 
                   else 0 
                 end as num_15,
                 case 
                   when ( t.age >= interval ''12 year'' ) and ( t.age < interval ''13 year'' )
                   then 1 
                   else 0 
                 end as num_16,
                 case 
                   when ( t.age >= interval ''13 year'' ) and ( t.age < interval ''14 year'' )
                   then 1 
                   else 0 
                 end as num_17,
                 case 
                   when ( t.age >= interval ''14 year'' ) and ( t.age < interval ''15 year'' )
                   then 1 
                   else 0 
                 end as num_18,
                 case 
                   when ( t.age < interval ''15 year'' )
                   then 1 
                   else 0 
                 end as num_19,
                 case 
                   when ( t.age >= interval ''15 year'' ) and ( t.age < interval ''16 year'' )
                   then 1 
                   else 0 
                 end as num_20,
                 case 
                   when ( t.age >= interval ''16 year'' ) and ( t.age < interval ''17 year'' )
                   then 1 
                   else 0 
                 end as num_21,
                 case 
                   when ( t.age >= interval ''17 year'' ) and ( t.age < interval ''18 year'' )
                   then 1 
                   else 0 
                 end as num_22,
                 case 
                   when ( t.age >= interval ''15 year'' ) and ( t.age < interval ''18 year'' )
                   then 1 
                   else 0 
                 end as num_23,
                 case 
                   when ( t.age >= interval ''18 year'' ) and ( t.age < interval ''20 year'' )
                   then 1 
                   else 0 
                 end as num_24,
                 case 
                   when ( t.age >= interval ''20 year'' ) and ( t.age < interval ''30 year'' )
                   then 1 
                   else 0 
                 end as num_25,
                 case 
                   when ( t.age >= interval ''30 year'' ) and ( t.age < interval ''40 year'' )
                   then 1 
                   else 0 
                 end as num_26,
                 case 
                   when ( t.age >= interval ''30 year'' ) and ( t.age < interval ''36 year'' )
                   then 1 
                   else 0 
                 end as num_27,
                 case 
                   when ( t.age >= interval ''40 year'' ) and ( t.age < interval ''50 year'' )
                   then 1 
                   else 0 
                 end as num_28,
                 case 
                   when ( t.age >= interval ''50 year'' ) and ( t.age < interval ''60 year'' )
                   then 1 
                   else 0 
                 end as num_29,
                 case 
                   when ( t.age >= interval ''50 year'' ) and ( t.age < interval ''56 year'' )
                   then 1 
                   else 0 
                 end as num_30,
                 case 
                   when ( t.age >= interval ''60 year'' )
                   then 1 
                   else 0 
                 end as num_31,
                 1 as num_32
            from 
                 ( --прививки
                  select vp.people_id,
                         vm.own_company_id as lpu,
                         date_part(''year'', vp.create_date) as yr,
                         date_part(''month'', vp.create_date) as mon,
                         age(cast ( vp.create_date  as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                         vk.infection_id,
                         vkn.oid as type_id   
                    from mir.people p,
                         mir.vac_map vm,
                         mir.vac_people vp,
                         mir.vac_kratn vk,
                         mir.vac_kratn_name vkn
                   where p.oid = vm.people_id
                     and p.oid = vp.people_id
                     and vk.vac_people_id = vp.oid
                     and vkn.oid = vk.kratn_id
                     and vm.own_company_id = LpuId
                     and vp.create_date >= dDateFrom
                     and vp.create_date <= dDateTo
                   group by vp.people_id,
                         vm.own_company_id,
                         date_part(''year'', vp.create_date),
                         date_part(''month'', vp.create_date),
                         age(cast ( vp.create_date  as "timestamp" ), cast ( p.birthday as "timestamp" )),
                         vk.infection_id,
                         vkn.oid
                         
                   /*union all -- имеют постоянные отводы
                   
                  select vc.people_id,
                         vm.own_company_id as lpu,
                         date_part(''year'', vc.begin_date) as yr,
                         date_part(''month'', vc.begin_date) as mon,
                         age(cast ( vc.begin_date as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                         null as infection_id,
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''HAVE_CONST_CANCEL'' ) as type_id   
                    from mir.people p,
                         mir.vac_map vm,
                         mir.vac_cancel vc,
                         mir.vac_cancel_type vct
                   where p.oid = vm.people_id
                     and p.oid = vc.people_id
                     and vct.oid = vc.type_id
                     and vct.permanent = 1
                     and vm.own_company_id = LpuId
                     and vc.end_date >= dDateFrom
                     and vc.end_date <= dDateTo
                   group by vc.people_id,
                         vm.own_company_id,
                         date_part(''year'', vc.begin_date),
                         date_part(''month'', vc.begin_date),
                         age(cast ( vc.begin_date as "timestamp" ), cast ( p.birthday as "timestamp" )),
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''HAVE_CONST_CANCEL'' )*/
                         
                   union all -- переболели
                         
                  select vs.people_id,
                         vm.own_company_id as lpu,
                         date_part(''year'', vs.end_date) as yr,
                         date_part(''month'', vs.end_date) as mon,
                         age(cast ( vs.end_date as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                         vs.infection_id as infection_id,
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''BE_ILL'' ) as type_id   
                    from mir.people p,
                         mir.vac_map vm,
                         mir.vac_sicness vs
                   where p.oid = vm.people_id
                     and p.oid = vs.people_id
                     and vm.own_company_id = LpuId
                     and vs.end_date >= dDateFrom
                     and vs.end_date <= dDateTo
                   group by vs.people_id,
                         vm.own_company_id,
                         date_part(''year'', vs.end_date),
                         date_part(''month'', vs.end_date),
                         age(cast ( vs.end_date as "timestamp" ), cast ( p.birthday as "timestamp" )),
                         vs.infection_id,
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''BE_ILL'' )
                         
                   union all -- переболели после прививок
                         
                  select vs.people_id,
                         vm.own_company_id as lpu,
                         date_part(''year'', vs.end_date) as yr,
                         date_part(''month'', vs.end_date) as mon,
                         age(cast ( vs.end_date as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                         vs.infection_id as infection_id,
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''BE_ILL_AFTER_VAC'' ) as type_id
                    from mir.people p
                   inner join mir.vac_map vm
                      on p.oid = vm.people_id
                   inner join mir.vac_sicness vs
                      on p.oid = vs.people_id
                   inner join mir.vac_people vp
                      on vp.people_id = p.oid
                     and vp.create_date < vs.end_date
                   inner join mir.vac_kratn vk
                      on vk.vac_people_id = vp.oid
                     and vk.infection_id = vs.infection_id
                   where vm.own_company_id = LpuId
                     and vs.end_date >= dDateFrom
                     and vs.end_date <= dDateTo
                   group by vs.people_id,
                         vm.own_company_id,
                         date_part(''year'', vs.end_date),
                         date_part(''month'', vs.end_date),
                         age(cast ( vs.end_date as "timestamp" ), cast ( p.birthday as "timestamp" )),
                         vs.infection_id,
                         ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''BE_ILL_AFTER_VAC'' )
                      
                   union all -- пробы Манту
                   
                  select vpt.people_id,
                         vm.own_company_id as lpu,
                         date_part(''year'', vpt.test_date) as yr,
                         date_part(''month'', vpt.test_date) as mon,
                         age(cast ( vpt.test_date as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                         null as infection_id,
                         vpt.vac_test_result_id as type_id  
                    from mir.people p,
                         mir.vac_map vm,
                         mir.vac_people_test vpt,
                         mir.vac_test_result vtr
                   where p.oid = vm.people_id
                     and p.oid = vpt.people_id
                     and vtr.oid = vpt.vac_test_result_id
                     and vpt.vac_test_id = ''0cfdd420-1b62-11e1-9186-c3d010fa19ed'' --mantu
                     and vm.own_company_id = LpuId
                     and vpt.test_date >= dDateFrom
                     and vpt.test_date <= dDateTo
                   group by vpt.people_id,
                         vm.own_company_id,
                         date_part(''year'', vpt.test_date),
                         date_part(''month'', vpt.test_date),
                         age(cast ( vpt.test_date as "timestamp" ), cast ( p.birthday as "timestamp" )),
                         vpt.vac_test_result_id
                  ) t
           where t.age > interval ''1 sec''
         ) n
   group by n.lpu,
         n.yr,
         n.mon,
         n.infection_id,
         n.type_id;
         
  for rec in (select t.date_on
              from (
                        WITH RECURSIVE rec ( date_on ) AS 
                        (
                        SELECT cast(date_trunc(''month'', dDateFrom) + interval ''1 month'' as date) - interval ''1 day'' as date_on
               
                         union all
             
                        SELECT cast(date_trunc(''month'', r.date_on) + interval ''2 month'' as date) - interval ''1 day'' as date_on
                          FROM rec r
                         WHERE r.date_on < cast(date_trunc(''month'', dDateTo ) as date)
                        )
            
                        select r.date_on
                          from rec r
                         ORDER BY r.date_on
                   ) t
              ) 
  loop
    insert into mir.form6_calc ( lpu, yr, mon, infection_id, type_id, 
        num_1, num_2, num_3, num_4, num_5, 
        num_6, num_7, num_8, num_9, num_10,
        num_11, num_12, num_13, num_14, num_15,
        num_16, num_17, num_18, num_19, num_20,
        num_21, num_22, num_23, num_24, num_25,
        num_26, num_27, num_28, num_29, num_30,
        num_31, num_32, date_on, calc_date )        
    select n.lpu,
           n.yr,
           n.mon,
           n.infection_id,
           n.type_id,
           sum(n.num_1) as num_1,
           sum(n.num_2) as num_2,
           sum(n.num_3) as num_3,
           sum(n.num_4) as num_4,
           sum(n.num_5) as num_5,
           sum(n.num_6) as num_6,
           sum(n.num_7) as num_7,
           sum(n.num_8) as num_8,
           sum(n.num_9) as num_9,
           sum(n.num_10) as num_10,
           sum(n.num_11) as num_11,
           sum(n.num_12) as num_12,
           sum(n.num_13) as num_13,
           sum(n.num_14) as num_14,
           sum(n.num_15) as num_15,
           sum(n.num_16) as num_16,
           sum(n.num_17) as num_17,
           sum(n.num_18) as num_18,
           sum(n.num_19) as num_19,
           sum(n.num_20) as num_20,
           sum(n.num_21) as num_21,
           sum(n.num_22) as num_22,
           sum(n.num_23) as num_23,
           sum(n.num_24) as num_24,
           sum(n.num_25) as num_25,
           sum(n.num_26) as num_26,
           sum(n.num_27) as num_27,
           sum(n.num_28) as num_28,
           sum(n.num_29) as num_29,
           sum(n.num_30) as num_30,
           sum(n.num_31) as num_31,
           sum(n.num_32) as num_32,
           n.date_on,
           dCalcDate as calc_date 
      from (
            select t.lpu,
                   t.yr,
                   t.mon,
                   t.infection_id,
                   t.type_id,
                   t.people_id,
                   case 
                     when t.age < interval ''1 year'' 
                     then 1 
                     else 0 
                   end as num_1,
                   case 
                     when t.age < interval ''3 month'' 
                     then 1 
                     else 0 
                   end as num_2,
                   case 
                     when ( t.age >= interval ''3 month'' ) and ( t.age < interval ''6 month'' )
                     then 1 
                     else 0 
                   end as num_3,
                   case 
                     when ( t.age >= interval ''6 month'' ) and ( t.age < interval ''1 year'' )
                     then 1 
                     else 0 
                   end as num_4,
                   case 
                     when ( t.age >= interval ''1 year'' ) and ( t.age < interval ''2 year'' )
                     then 1 
                     else 0 
                   end as num_5,
                   case 
                     when ( t.age >= interval ''2 year'' ) and ( t.age < interval ''3 year'' )
                     then 1 
                     else 0 
                   end as num_6,
                   case 
                     when ( t.age >= interval ''3 year'' ) and ( t.age < interval ''4 year'' )
                     then 1 
                     else 0 
                   end as num_7,
                   case 
                     when ( t.age >= interval ''4 year'' ) and ( t.age < interval ''5 year'' )
                     then 1 
                     else 0 
                   end as num_8,
                   case 
                     when ( t.age >= interval ''5 year'' ) and ( t.age < interval ''6 year'' )
                     then 1 
                     else 0 
                   end as num_9,
                   case 
                     when ( t.age >= interval ''6 year'' ) and ( t.age < interval ''7 year'' )
                     then 1 
                     else 0 
                   end as num_10,
                   case 
                     when ( t.age >= interval ''7 year'' ) and ( t.age < interval ''8 year'' )
                     then 1 
                     else 0 
                   end as num_11,
                   case 
                     when ( t.age >= interval ''8 year'' ) and ( t.age < interval ''9 year'' )
                     then 1 
                     else 0 
                   end as num_12,
                   case 
                     when ( t.age >= interval ''9 year'' ) and ( t.age < interval ''10 year'' )
                     then 1 
                     else 0 
                   end as num_13,
                   case 
                     when ( t.age >= interval ''10 year'' ) and ( t.age < interval ''11 year'' )
                     then 1 
                     else 0 
                   end as num_14,
                   case 
                     when ( t.age >= interval ''11 year'' ) and ( t.age < interval ''12 year'' )
                     then 1 
                     else 0 
                   end as num_15,
                   case 
                     when ( t.age >= interval ''12 year'' ) and ( t.age < interval ''13 year'' )
                     then 1 
                     else 0 
                   end as num_16,
                   case 
                     when ( t.age >= interval ''13 year'' ) and ( t.age < interval ''14 year'' )
                     then 1 
                     else 0 
                   end as num_17,
                   case 
                     when ( t.age >= interval ''14 year'' ) and ( t.age < interval ''15 year'' )
                     then 1 
                     else 0 
                   end as num_18,
                   case 
                     when ( t.age < interval ''15 year'' )
                     then 1 
                     else 0 
                   end as num_19,
                   case 
                     when ( t.age >= interval ''15 year'' ) and ( t.age < interval ''16 year'' )
                     then 1 
                     else 0 
                   end as num_20,
                   case 
                     when ( t.age >= interval ''16 year'' ) and ( t.age < interval ''17 year'' )
                     then 1 
                     else 0 
                   end as num_21,
                   case 
                     when ( t.age >= interval ''17 year'' ) and ( t.age < interval ''18 year'' )
                     then 1 
                     else 0 
                   end as num_22,
                   case 
                     when ( t.age >= interval ''15 year'' ) and ( t.age < interval ''18 year'' )
                     then 1 
                     else 0 
                   end as num_23,
                   case 
                     when ( t.age >= interval ''18 year'' ) and ( t.age < interval ''20 year'' )
                     then 1 
                     else 0 
                   end as num_24,
                   case 
                     when ( t.age >= interval ''20 year'' ) and ( t.age < interval ''30 year'' )
                     then 1 
                     else 0 
                   end as num_25,
                   case 
                     when ( t.age >= interval ''30 year'' ) and ( t.age < interval ''40 year'' )
                     then 1 
                     else 0 
                   end as num_26,
                   case 
                     when ( t.age >= interval ''30 year'' ) and ( t.age < interval ''36 year'' )
                     then 1 
                     else 0 
                   end as num_27,
                   case 
                     when ( t.age >= interval ''40 year'' ) and ( t.age < interval ''50 year'' )
                     then 1 
                     else 0 
                   end as num_28,
                   case 
                     when ( t.age >= interval ''50 year'' ) and ( t.age < interval ''60 year'' )
                     then 1 
                     else 0 
                   end as num_29,
                   case 
                     when ( t.age >= interval ''50 year'' ) and ( t.age < interval ''56 year'' )
                     then 1 
                     else 0 
                   end as num_30,
                   case 
                     when ( t.age >= interval ''60 year'' )
                     then 1 
                     else 0 
                   end as num_31,
                   1 as num_32,
                   t.date_on
              from  
                   (                     
                     -- имеют постоянные отводы                   
                    select vc.people_id,
                           vm.own_company_id as lpu,
                           date_part(''year'', cast( rec.date_on as date )) as yr,
                           date_part(''month'', cast( rec.date_on as date )) as mon,
                           age(cast ( vc.begin_date as timestamp ), cast ( p.birthday as timestamp )) as age,
                           cast( '''' as varchar ) as infection_id,
                           ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''HAVE_CONST_CANCEL'' ) as type_id,
                           cast( rec.date_on as date ) as date_on   
                      from mir.people p,
                           mir.vac_map vm,
                           mir.vac_cancel vc,
                           mir.vac_cancel_type vct
                     where p.oid = vm.people_id
                       and p.oid = vc.people_id
                       and vct.oid = vc.type_id
                       and vct.permanent = 1
                       and vm.own_company_id = LpuId
                       and COALESCE( vc.begin_date, cast( rec.date_on as date ) ) <= cast( rec.date_on as date )
                     group by vc.people_id,
                           vm.own_company_id,
                           date_part(''year'', cast( rec.date_on as date )),
                           date_part(''month'', cast( rec.date_on as date )),
                           age(cast ( vc.begin_date as timestamp ), cast ( p.birthday as timestamp )),
                           ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''HAVE_CONST_CANCEL'' ),
                           cast( rec.date_on as date )
                           
                     union all -- состоит на учете
                     
                    select vm.people_id,
                           vm.own_company_id as lpu,
                           date_part(''year'', cast( rec.date_on as date )) as yr,
                           date_part(''month'', cast( rec.date_on as date )) as mon,
                           age(cast ( rec.date_on as "timestamp" ), cast ( p.birthday as "timestamp" )) as age,
                           null as infection_id,
                           ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''UCHET'' ) as type_id,
                           cast( rec.date_on as date ) as date_on   
                      from mir.people p,
                           mir.vac_map vm
                     where p.oid = vm.people_id
                       and vm.own_company_id = LpuId
                       and COALESCE( vm.begin_date, cast( rec.date_on as date ) ) <= cast( rec.date_on as date )
                       and COALESCE( vm.end_date, cast( rec.date_on as date ) ) >= cast( rec.date_on as date )
                     group by vm.people_id,
                           vm.own_company_id,
                           date_part(''year'', cast( rec.date_on as date )),
                           date_part(''month'', cast( rec.date_on as date )),
                           age(cast ( rec.date_on as "timestamp" ), cast ( p.birthday as "timestamp" )),
                           ( select max( ft.oid ) from mir.form6_types ft where ft.syn =''UCHET'' ),
                           cast( rec.date_on as date )
                             
                    ) t
             where t.age > interval ''1 sec''
           ) n
     group by n.lpu,
           n.yr,
           n.mon,
           n.infection_id,
           n.type_id,
           n.date_on; 
  end loop;
         
  return 1;
end;
';


ALTER FUNCTION mir.vaccin_form6_recalc(plpuid character, pdate_from date, pdate_to date) OWNER TO postgres;

--
-- TOC entry 2133 (class 1255 OID 17489)
-- Dependencies: 5396 14
-- Name: vaccin_get_next_kratn_by_id(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_get_next_kratn_by_id(ppeople_id character, pinfection_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
    nres mir.vac_kratn_name.oid%type;
    pkratn_id char(36);
    rec record;
  begin
    pkratn_id := null;
    
    for rec in (
                select k.oid
                  from (
                        select row_number() over() as rownum, 
                               t.oid
                          from (
                                select vkn.oid
                                  from mir.vac_people vp
                                 inner join mir.vac_kratn vk
                                    on vk.vac_people_id = vp.oid
                                 inner join mir.vac_kratn_name vkn
                                    on vkn.oid = vk.kratn_id
                                 where vp.people_id = ppeople_id
                                   and vk.infection_id = pinfection_id
                                 order by vkn.type desc, vkn.num desc
                               ) t
                       ) k
                 where k.rownum = 1
                )
    loop 
      pkratn_id := rec.oid;
    end loop;
    
    select k.oid
      into nres
      from mir.vac_kratn_name k
      left join mir.vac_kratn_name k2
        on k2.oid = pkratn_id--''8b5a58a0-141b-11e1-86ed-5fcb832010fa''
     where ( ( k2.oid is not null ) and ( ( (k."type" = k2."type") and ( k.num > k2.num ) ) or ( (k."type" > k2."type") ) ) )
        or k2.oid is null
     order by k."type", k.num
     limit 1;
  
    /*if pkratn_id = 0 then
        nres := 10;
    end if;
  
    if pkratn_id = 10 then
        nres := 20;
    end if;
    
    if pkratn_id = 11 then
        nres := 12;
    end if;
    
    if pkratn_id = 12 then
        nres := 13;
    end if;
    
    if pkratn_id = 13 then
        nres := 14;
    end if;
    
    if pkratn_id = 14 then
        nres := 15;
    end if;
    
    if pkratn_id = 15 then
        nres := 20;
    end if;
    
    if pkratn_id = 20 then
        nres := 30;
    end if;
    
    if pkratn_id = 21 then
        nres := 22;
    end if;
    
    if pkratn_id = 22 then
        nres := 23;
    end if;
    
    if pkratn_id = 23 then
        nres := 30;
    end if;
    
    if pkratn_id = 30 then
        nres := 40;
    end if;
    
    if pkratn_id = 40 then
        nres := 50;
    end if;
    
    if pkratn_id = 50 then
        nres := 60;
    end if;*/
    
    return nres;
  end;
';


ALTER FUNCTION mir.vaccin_get_next_kratn_by_id(ppeople_id character, pinfection_id character) OWNER TO postgres;

--
-- TOC entry 2134 (class 1255 OID 17490)
-- Dependencies: 5396 14
-- Name: vaccin_get_next_kratn_by_id2(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_get_next_kratn_by_id2(pkratn_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
    nres mir.vac_kratn_name.oid%type;
  begin
    select k.oid
      into nres
      from mir.vac_kratn_name k
      left join mir.vac_kratn_name k2
        on k2.oid = pkratn_id--''8b5a58a0-141b-11e1-86ed-5fcb832010fa''
     where ( ( k2.oid is not null ) and ( ( (k."type" = k2."type") and ( k.num > k2.num ) ) or ( (k."type" > k2."type") ) ) )
        or k2.oid is null
     order by k."type", k.num
     limit 1;
  
    /*if pkratn_id = 0 then
        nres := 10;
    end if;
  
    if pkratn_id = 10 then
        nres := 20;
    end if;
    
    if pkratn_id = 11 then
        nres := 12;
    end if;
    
    if pkratn_id = 12 then
        nres := 13;
    end if;
    
    if pkratn_id = 13 then
        nres := 14;
    end if;
    
    if pkratn_id = 14 then
        nres := 15;
    end if;
    
    if pkratn_id = 15 then
        nres := 20;
    end if;
    
    if pkratn_id = 20 then
        nres := 30;
    end if;
    
    if pkratn_id = 21 then
        nres := 22;
    end if;
    
    if pkratn_id = 22 then
        nres := 23;
    end if;
    
    if pkratn_id = 23 then
        nres := 30;
    end if;
    
    if pkratn_id = 30 then
        nres := 40;
    end if;
    
    if pkratn_id = 40 then
        nres := 50;
    end if;
    
    if pkratn_id = 50 then
        nres := 60;
    end if;*/
    
    return nres;
  end;
';


ALTER FUNCTION mir.vaccin_get_next_kratn_by_id2(pkratn_id character) OWNER TO postgres;

--
-- TOC entry 2135 (class 1255 OID 17491)
-- Dependencies: 5396 14
-- Name: vaccin_is_add_vac_plan(character, character, character, date, integer, integer, integer, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_is_add_vac_plan(ppeople_id character, pinfection_id character, pkratn_id character, pplan_date date, pis_not_vaccin integer DEFAULT NULL::integer, pis_not_exists_prev_vaccin integer DEFAULT NULL::integer, pvaccin_period integer DEFAULT NULL::integer, pemp_id character DEFAULT NULL::bpchar) RETURNS integer
    LANGUAGE plpgsql
    AS '
  DECLARE
    c_plan_status           char(36);
    c_exec_status           char(36);
    vac_people_id           char(36);
    vac_plan_id             char(36);
    n_result                integer;
  BEGIN
    n_result := 0;
    
    select mir.cn_vac_plan_status_plan() into c_plan_status;
    select mir.cn_vac_plan_status_exec() into c_exec_status;
    
    -- Планируемую прививку добавляем только тогда, когда её нет.
    select mir.vaccin_is_exist_vac_plan(ppeople_id, pinfection_id, pkratn_id) into vac_plan_id; 

    IF ( vac_plan_id = '''') or ( vac_plan_id is null ) THEN
      -- Проверяем, может прививка уже сделана.
      -- Если сделана, то получаем препарат
      select mir.vaccin_is_exist_vac_people(ppeople_id, pinfection_id, pkratn_id) into vac_people_id;
      
      IF ( vac_people_id <> '''' ) and ( vac_people_id is not null ) THEN
        -- Прививка уже сделана, следовательно помечаем в плане
        -- как выполнено.
        select mir.vac_plan_insert(ppeople_id, pinfection_id, pkratn_id,
                            pplan_date, c_exec_status, NULL,
                            pis_not_vaccin, pis_not_exists_prev_vaccin, pvaccin_period,
                            vac_people_id, pemp_id) into vac_plan_id;
                            

        -- Согласно условию формирования планируемой прививки, она
        -- должна выполняться через указанный период после последней вакцинации
        IF pvaccin_period > 0 THEN
          perform mir.vac_plan_insert(ppeople_id, pinfection_id, pkratn_id,
                            pplan_date, c_plan_status, NULL,
                            pis_not_vaccin, pis_not_exists_prev_vaccin, pvaccin_period,
                            null, pemp_id);
        END IF;
      ELSE
        select mir.vac_plan_insert(ppeople_id, pinfection_id, pkratn_id,
                            pplan_date, c_plan_status, NULL,
                            pis_not_vaccin, pis_not_exists_prev_vaccin, pvaccin_period,
                            null, pemp_id) into vac_plan_id;
      END IF;
      
      n_result := 1;
    END IF;

    RETURN n_result;
  END;
';


ALTER FUNCTION mir.vaccin_is_add_vac_plan(ppeople_id character, pinfection_id character, pkratn_id character, pplan_date date, pis_not_vaccin integer, pis_not_exists_prev_vaccin integer, pvaccin_period integer, pemp_id character) OWNER TO postgres;

--
-- TOC entry 2136 (class 1255 OID 17492)
-- Dependencies: 5396 14
-- Name: vaccin_is_exist_vac_people(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_is_exist_vac_people(ppeople_id character, pinfection_id character, pkratn_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
  DECLARE
    n_result       mir.vac_people.oid%type;
    rec            record;
  BEGIN
    n_result := '''';
    
    for rec in (SELECT vp.oid
                  FROM mir.vac_kratn vk,
                       mir.vac_people vp
                 WHERE vk.vac_people_id = vp.oid     
                   and vp.people_id = ppeople_id
                   and vk.infection_id = pinfection_id
                   and vk.kratn_id = pkratn_id)
    loop
        n_result := rec.oid;
    end loop;

    RETURN n_result;
  END;
';


ALTER FUNCTION mir.vaccin_is_exist_vac_people(ppeople_id character, pinfection_id character, pkratn_id character) OWNER TO postgres;

--
-- TOC entry 2137 (class 1255 OID 17493)
-- Dependencies: 5396 14
-- Name: vaccin_is_exist_vac_plan(character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_is_exist_vac_plan(ppeople_id character, pinfection_id character, pkratn_id character) RETURNS character
    LANGUAGE plpgsql
    AS '
  DECLARE
    n_result       mir.vac_plan.oid%type;
    rec            record;
  BEGIN
    n_result := null;
    
    for rec in (SELECT vp.oid
                  FROM mir.vac_plan vp
                 WHERE vp.people_id = ppeople_id
                   and vp.infection_id = pinfection_id
                   and vp.kratn_id = pkratn_id)
    loop
        n_result := rec.oid;
    end loop;

    RETURN n_result;
  END;
';


ALTER FUNCTION mir.vaccin_is_exist_vac_plan(ppeople_id character, pinfection_id character, pkratn_id character) OWNER TO postgres;

--
-- TOC entry 2138 (class 1255 OID 17494)
-- Dependencies: 5396 14
-- Name: vaccin_is_not_cancel_people(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_is_not_cancel_people(ppeople_id character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    n_result       INTEGER;
    rec            record;
  BEGIN
    n_result := 1;

    -- Проверяем, есть ли у пациента постоянный отвод
    -- от всех болезней и вакцин.       
    
    for rec in (SELECT 1
                  FROM mir.vac_cancel vc, 
                       mir.vac_cancel_type vct
                 WHERE vc.type_id = vct.oid
                   AND vct.is_all = 1
                   and vct.permanent = 1
                   AND vc.people_id = ppeople_id)
    loop
        -- У пациента есть отвод от всех болезней и вакцин.
        n_result := 0;
    end loop;

    RETURN n_result;
  END;
';


ALTER FUNCTION mir.vaccin_is_not_cancel_people(ppeople_id character) OWNER TO postgres;

--
-- TOC entry 2139 (class 1255 OID 17495)
-- Dependencies: 5396 14
-- Name: vaccin_is_vaccin_plan_nat_calendar(character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION vaccin_is_vaccin_plan_nat_calendar(ppeople_id character, emp_id character) RETURNS integer
    LANGUAGE plpgsql
    AS '
  declare
    --c_plan_source           integer := 2;
    --c_add_plan_for_calendar integer := 16;
    n_result                integer;
    
    v_birthday              DATE;
    v_people_sex            integer;
    v_add_result            integer;
    
    rsex record;
    nat_calendar_cur record;
  BEGIN
    n_result := 0;

    --USER_LOG.PKG_LOG_MNG.BEGIN_LOG_GROUP_ACTION(
    --    c_add_plan_for_calendar, c_plan_source);

    -- Нет смысла формировать план, если есть постоянный отвод.
    IF ( mir.vaccin_is_not_cancel_people( ppeople_id ) = 1 ) THEN

    v_people_sex := -1;
    v_birthday := null;
    -- Получаем пол пациента
    for rsex in ( SELECT p.sex, 
                         p.birthday
                    FROM mir.people p
                   WHERE p.oid = ppeople_id )
    loop
      v_people_sex := rsex.sex;
      v_birthday := rsex.birthday;
    end loop;
    
    if ( v_people_sex < 0 ) then
        n_result := -1;
        return n_result;
    end if;
    
    if ( v_birthday is null ) then
        n_result := -2;
        return n_result;
    end if;
    
    FOR nat_calendar_cur IN 
          (
          SELECT t.fk_infection, t.kratn, t.plan_date, t.sex,
                 t.vaccin_period, t.not_vaccin
            FROM (SELECT ''bbdb76e0-1b63-11e1-9f42-f3b844cea0c9'' as fk_infection, -- Гепатит В
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + 1 as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-b7da-831b009c2681'' as fk_infection, -- Туберкулез
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + 7 as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-9f42-f3b844cea0c9'' as fk_infection, -- Гепатит В
                         ''be69f2a0-1b69-11e1-8bc6-139d55b34e21'' as kratn, --V2
                         v_birthday + interval ''1 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''3 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-886c-1b349f2f2c4d'' as fk_infection, -- Коклюш
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''3 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''3 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''3 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be69f2a0-1b69-11e1-8bc6-139d55b34e21'' as kratn, --V2
                         v_birthday + interval ''5 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-886c-1b349f2f2c4d'' as fk_infection, -- Коклюш
                         ''be69f2a0-1b69-11e1-8bc6-139d55b34e21'' as kratn, --V2
                         v_birthday + interval ''5 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be69f2a0-1b69-11e1-8bc6-139d55b34e21'' as kratn, --V2
                         v_birthday + interval ''5 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be69f2a0-1b69-11e1-8bc6-139d55b34e21'' as kratn, --V2
                         v_birthday + interval ''5 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be69f2a0-1b69-11e1-8e63-cf56b9bc26cd'' as kratn, --V3
                         v_birthday + interval ''6 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-886c-1b349f2f2c4d'' as fk_infection, -- Коклюш
                         ''be69f2a0-1b69-11e1-8e63-cf56b9bc26cd'' as kratn, --V3
                         v_birthday + interval ''6 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be69f2a0-1b69-11e1-8e63-cf56b9bc26cd'' as kratn, --V3
                         v_birthday + interval ''6 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be69f2a0-1b69-11e1-8e63-cf56b9bc26cd'' as kratn, --V3
                         v_birthday + interval ''6 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-9f42-f3b844cea0c9'' as fk_infection, -- Гепатит В
                         ''be69f2a0-1b69-11e1-8e63-cf56b9bc26cd'' as kratn, --V3
                         v_birthday + interval ''6 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-aec9-efd64af79fc8'' as fk_infection, -- Корь
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''12 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-93d1-d374975d2dc3'' as fk_infection, -- Краснуха
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''12 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-b78f-c31fdc8dd261'' as fk_infection, -- Паротит
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''12 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''18 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-886c-1b349f2f2c4d'' as fk_infection, -- Коклюш
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''18 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''18 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''18 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be69f2a0-1b69-11e1-8659-53500fe04c6a'' as kratn, --RV2
                         v_birthday + interval ''20 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-aec9-efd64af79fc8'' as fk_infection, -- Корь
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''72 month'' as plan_date, 
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-93d1-d374975d2dc3'' as fk_infection, -- Краснуха
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''72 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-b78f-c31fdc8dd261'' as fk_infection, -- Паротит
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''72 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-b7da-831b009c2681'' as fk_infection, -- Туберкулез
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''84 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be6c5400-1b69-11e1-9c6f-b7a0cd15f300'' as kratn, --R2
                         v_birthday + interval ''84 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be6c5400-1b69-11e1-9c6f-b7a0cd15f300'' as kratn, --R2
                         v_birthday + interval ''84 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbd6b420-1b63-11e1-93d1-d374975d2dc3'' as fk_infection, -- Краснуха
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''156 month'' as plan_date,
                         0 as sex,
                         0 as vaccin_period,
                         1 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-9f42-f3b844cea0c9'' as fk_infection, -- Гепатит В
                         ''be69f2a0-1b69-11e1-beac-577c94e79579'' as kratn, --V
                         v_birthday + interval ''156 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         1 as not_vaccin
                   UNION ALL
                  --
                  SELECT ''bbdb76e0-1b63-11e1-a529-1b3d799ccb35'' as fk_infection, -- Дифтерия
                         ''be6c5400-1b69-11e1-a7fd-1b2c8d006926'' as kratn, --R3
                         v_birthday + interval ''168 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-bf72-3bfd98c1f050'' as fk_infection, -- Столбняк
                         ''be6c5400-1b69-11e1-a7fd-1b2c8d006926'' as kratn, --R3
                         v_birthday + interval ''168 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                   UNION ALL
                  SELECT ''bbdb76e0-1b63-11e1-b7da-831b009c2681'' as fk_infection, -- Туберкулез
                         ''be69f2a0-1b69-11e1-b693-1bd4af439c84'' as kratn, --R
                         v_birthday + interval ''168 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         1 as not_vaccin
                   UNION ALL
                  SELECT ''bbd6b420-1b63-11e1-bb90-fb34f9fa19a7'' as fk_infection, -- Полиомиелит
                         ''be6c5400-1b69-11e1-a7fd-1b2c8d006926'' as kratn, --R3
                         v_birthday + interval ''168 month'' as plan_date,
                         2 as sex,
                         0 as vaccin_period,
                         0 as not_vaccin
                 ) t
           WHERE (t.plan_date >= CURRENT_DATE)
             AND ((t.sex = 2)            -- любой
                  OR ((t.sex = 0) and 
                      (v_people_sex = 1) -- женский
                     )
                 )) 
      LOOP
        -- Формируем индивидуальный план.
        select mir.vaccin_is_add_vac_plan(ppeople_id, cast( nat_calendar_cur.fk_infection as char(36) ),
             cast( nat_calendar_cur.kratn as char(36) ), cast( nat_calendar_cur.plan_date as date ),
             cast( nat_calendar_cur.not_vaccin as integer ), 0,
             cast( nat_calendar_cur.vaccin_period as integer )) into v_add_result;

        -- Если хотя бы один пункт плана был добавлен,
        -- значит план считается сформирован.
        IF v_add_result > 0 THEN
          n_result := 1;
        END IF;
      END LOOP;
    END IF;

    --USER_LOG.PKG_LOG_MNG.END_LOG_GROUP_ACTION;

    RETURN n_result;
  END;
';


ALTER FUNCTION mir.vaccin_is_vaccin_plan_nat_calendar(ppeople_id character, emp_id character) OWNER TO postgres;

--
-- TOC entry 2140 (class 1255 OID 17497)
-- Dependencies: 5396 14
-- Name: web_dictionary$tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION "web_dictionary$tr"() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.oid is null then
    new.oid = (SELECT *  FROM public.guid_generate());
  end if;
  
  new.syn_our=upper(new.syn_our);
  new.syn_their = upper(new.syn_their);

  RETURN NEW;
END;
';


ALTER FUNCTION mir."web_dictionary$tr"() OWNER TO postgres;

--
-- TOC entry 2142 (class 1255 OID 17498)
-- Dependencies: 5396 14
-- Name: web_get_schedule_by_location(character varying, timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_get_schedule_by_location(plocation_id character varying, pstarton timestamp without time zone, pendon timestamp without time zone) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
    P_RESULT          VARCHAR (100);
    c record;
    --kulikovskiy 21_12_2012
BEGIN
    P_RESULT := '''';

    for c in (
            select si.OID
              from mir.schedule si
             where si.OID in
                 (
                   select wsf.oid 
                     from mir.web_schedule_fs wsf 
                    where wsf.location_id = PLOCATION_ID
                      and wsf.rule_id in 
                        (
                          select wsr.rule_id 
                            from mir.web_schedule_rule wsr 
                           where wsr.location_id = PLOCATION_ID
                             and wsr.start_date <= PSTARTON
                             and wsr.end_date >= PSTARTON
                        )
                 )
               and si.STARTON = PSTARTON
               and si.ENDON = PENDON
             )
    loop
      P_RESULT := c.oid;
    end loop;

    RETURN P_RESULT;
END;
';


ALTER FUNCTION mir.web_get_schedule_by_location(plocation_id character varying, pstarton timestamp without time zone, pendon timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 2143 (class 1255 OID 17499)
-- Dependencies: 5396 14
-- Name: web_service_add_buffer_transfer(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_service_add_buffer_transfer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    nOk integer;
    c record;
  BEGIN
    nOk := -1;
    
    for c in (select 1
                from MIR.WEB_BUFFER_TRANSFER t
               where t.TABLE_NAME = PTABLE_NAME 
                 AND t.KEY_FIELD_VALUE = PKEY_FIELD_VALUE
             )
    loop
      nOk := 1;
    end loop;
    
    if nOk > 0 then
      UPDATE MIR.WEB_BUFFER_TRANSFER
         SET REGIST_DATE = CURRENT_TIMESTAMP, 
             ACTION = PACTION, 
             LPU = NVL(PLPU, LPU)
       where t.TABLE_NAME = PTABLE_NAME 
         AND t.KEY_FIELD_VALUE = PKEY_FIELD_VALUE;
    else
      INSERT INTO MIR.WEB_BUFFER_TRANSFER
        (REGIST_DATE, TABLE_NAME, KEY_FIELD_VALUE, ACTION, LPU)
      VALUES
        (CURRENT_TIMESTAMP, PTABLE_NAME, PKEY_FIELD_VALUE, PACTION, PLPU);
    end if;
    /*
    MERGE INTO MIR.WEB_BUFFER_TRANSFER
    USING DUAL
    ON (TABLE_NAME = PTABLE_NAME AND KEY_FIELD_VALUE = PKEY_FIELD_VALUE)
    WHEN MATCHED THEN
      UPDATE
         SET REGIST_DATE = SYSDATE, ACTION = PACTION, LPU = NVL(PLPU, LPU)
    WHEN NOT MATCHED THEN
      INSERT
        (REGIST_DATE, TABLE_NAME, KEY_FIELD_VALUE, ACTION, LPU)
      VALUES
        (SYSDATE, PTABLE_NAME, PKEY_FIELD_VALUE, PACTION, PLPU);*/
  END;

';


ALTER FUNCTION mir.web_service_add_buffer_transfer(ptable_name character varying, paction character varying, pkey_field_value character varying, plpu character varying) OWNER TO postgres;

--
-- TOC entry 2144 (class 1255 OID 17500)
-- Dependencies: 5396 14
-- Name: web_service_is_lpu_online(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_service_is_lpu_online(plpu character) RETURNS integer
    LANGUAGE plpgsql
    AS '
DECLARE
    V_RES INTEGER;
    C record;
  BEGIN
    V_RES := 1;
    IF MIR.SETTINGSGETDBSETTINGWITHCUSTOMVALUE(PLPU, ''WS_LPU_EXCHANGE'') = ''1'' THEN
      FOR C IN (SELECT CURRENT_TIMESTAMP as SYSDATE,
                       (S.CONNECT_DATE +
                       cast(CAST((MIR.SETTINGSGETDBSETTINGWITHCUSTOMVALUE(PLPU,
                                                                                         ''WS_LPU_EXCHANGE_INTERVAL''),
                                            20) as varchar )||'' sec'' as interval)) NEXT_DATE
                  FROM MIR.WEB_LPU_INFO S
                 WHERE S.LPU = PLPU) 
      LOOP
        IF C.SYSDATE > C.NEXT_DATE THEN
          V_RES := 0;
        END IF;
      END LOOP;
    END IF;
    RETURN V_RES;
  END;

';


ALTER FUNCTION mir.web_service_is_lpu_online(plpu character) OWNER TO postgres;

--
-- TOC entry 2145 (class 1255 OID 17501)
-- Dependencies: 5396 14
-- Name: web_service_is_repl(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_service_is_repl() RETURNS boolean
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN false;
  END;

';


ALTER FUNCTION mir.web_service_is_repl() OWNER TO postgres;

--
-- TOC entry 2146 (class 1255 OID 17502)
-- Dependencies: 5396 14
-- Name: web_set_people_fs(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_set_people_fs(poid character, pclient_id character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare 
  c record;
begin
  if exists ( select 1
                from mir.Web_People_Fs d
               where d.oid = POID
            ) then
     update mir.Web_People_Fs
        set CLIENT_ID = PCLIENT_ID  
      where oid = POID;
  else
    insert into MIR.Web_People_Fs(OID, CLIENT_ID)
    values (POID, PCLIENT_ID);
  end if;
end;
';


ALTER FUNCTION mir.web_set_people_fs(poid character, pclient_id character varying) OWNER TO postgres;

--
-- TOC entry 2147 (class 1255 OID 17503)
-- Dependencies: 5396 14
-- Name: web_upd_schedule_fs_slot_id(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION web_upd_schedule_fs_slot_id(poid character, pslot_id character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  update mir.web_schedule_fs
     set slot_id = PSLOT_ID
   where oid = POID;
end;
';


ALTER FUNCTION mir.web_upd_schedule_fs_slot_id(poid character, pslot_id character varying) OWNER TO postgres;

--
-- TOC entry 2148 (class 1255 OID 17504)
-- Dependencies: 5396 14
-- Name: webuser_doautocreatewebuser(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_doautocreatewebuser(poid character) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE   
    V_LASTNAME  MIR.people.LASTNAME%TYPE;
    V_SN        VARCHAR(200);
    V_OID_LOGIN VARCHAR(200);
    V_SN_R      VARCHAR(200) := NULL;
    V_WASLOGIN  MIR.people.WASLOGIN%TYPE;
    VSUCCESS    BOOLEAN;
    I           integer;
    V_PHONE     VARCHAR(200);
    -- Создание пользователя
    -- Сreated by Spasskiy S.N. 28.01.2011
    -- Возвращает логин пользователя, в случае его создания/изменения, если он отличается от стандартного
  BEGIN
    SELECT MAX(P.LASTNAME),
           MAX(I.SER || I.NUM) SN,
           MAX(P.WASLOGIN),
           MAX(P.TELSOT1),
           MAX(P.LOGIN)
      INTO V_LASTNAME, V_SN, V_WASLOGIN, V_PHONE, V_OID_LOGIN
      FROM MIR.PEOPLE P, MIR.INSURANCE I
     WHERE P.OID = POID
       AND I.STATE = 0
       AND I.PEOPLE = P.OID;
    IF (V_WASLOGIN = 0) THEN
      VSUCCESS := FALSE;
      I        := 0;
      WHILE NOT VSUCCESS LOOP
        EXIT WHEN I > 50;
        IF I = 0 THEN
          V_SN_R := V_SN;
        ELSE
          V_SN_R := V_SN || ''_'' || I;
        END IF;
        I := I + 1;
        BEGIN
          UPDATE MIR.people P
             SET P."PASSWORD" = mir.webuser_getpassword(LOWER(V_LASTNAME)),
                 P.LOGIN      = LOWER(V_SN_R)
           WHERE P.OID = POID;
          VSUCCESS := TRUE;
        EXCEPTION
          WHEN OTHERS THEN
            NULL;
        END;
      END LOOP;
      IF V_SN_R IS NOT NULL AND V_SN IS NOT NULL AND
         (NVL(V_OID_LOGIN, V_SN) <> V_SN_R) THEN
        perform MIR.SMS_INSERT_SMS(V_PHONE,
                               ''Ваш логин для входа в личный кабинет '' ||
                               V_SN_R);
      END IF;
    END IF;
  
    RETURN V_SN_R;
  
  END;

';


ALTER FUNCTION mir.webuser_doautocreatewebuser(poid character) OWNER TO postgres;

--
-- TOC entry 2149 (class 1255 OID 17505)
-- Dependencies: 5396 14
-- Name: webuser_dochangepassword(character, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_dochangepassword(poid character, ppassword character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  BEGIN
    UPDATE MIR.people
       SET PASSWORD = $2
     WHERE OID = $1;
  END;
';


ALTER FUNCTION mir.webuser_dochangepassword(poid character, ppassword character varying) OWNER TO postgres;

--
-- TOC entry 2150 (class 1255 OID 17506)
-- Dependencies: 5396 14
-- Name: webuser_dochangepasswordpagesave(character, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_dochangepasswordpagesave(poid character, plogin character varying, ppassword character varying, ptelsot1 character varying, ptelhome character varying, pemail character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
  BEGIN
    UPDATE MIR.PEOPLE
       SET TELSOT1  = PTELSOT1, /*p.telhome = ptelhome, с формы убрал домашний адрес*/
           EMAIL    = PEMAIL,
           WEBMAIL  = PEMAIL,
           WEBPHONE = PTELSOT1,
           LOGIN    = PLOGIN,
           PASSWORD = PPASSWORD,
           WASLOGIN = 1
     WHERE OID = POID;
  END;
';


ALTER FUNCTION mir.webuser_dochangepasswordpagesave(poid character, plogin character varying, ppassword character varying, ptelsot1 character varying, ptelhome character varying, pemail character varying) OWNER TO postgres;

--
-- TOC entry 2152 (class 1255 OID 17507)
-- Dependencies: 5396 14
-- Name: webuser_dowebpeopleuser(character varying, character varying, character varying, character varying, date, character varying, character varying, integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, date, date, character varying, character varying, character varying, character, numeric, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_dowebpeopleuser(poid character varying, psurname character varying, pim character varying, potch character varying, pbirth date, pemail character varying, ppassword character varying, psex integer, pphonedom character varying, pphonesot1 character varying, pphonesot2 character varying, pphonework character varying, ppeopledoctype character varying, ppeopledocser character varying, ppeopledocnum character varying, pkladrid character varying, phouse character varying, pbuilding character varying, pflat character varying, pinsurser character varying, pinsurnum character varying, pinsurcompany character varying, pinsurbegin date, pinsurend date, paddressex1 character varying, ppaytype character varying, plogin character varying, pinsuroid character, pnotenddate numeric, "pkladrAddrstr" character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  DECLARE
    VOID       VARCHAR(1000);
    VADDRESS   MIR.ADDRESSEX.OID%TYPE;
    VINSURANCE MIR.INSURANCE.OID%TYPE;
  BEGIN
    IF (POID IS NULL) THEN
      VOID := LOWER(MIR.NEW_UUID());
    
      IF (PKLADRID IS NOT NULL) THEN
        VADDRESS := LOWER(MIR.NEW_UUID());
      
        INSERT INTO MIR.ADDRESSEX
          (OID, TKLADR, HOUSE, BUILDING, FLAT)
        VALUES
          (VADDRESS, PKLADRID, PHOUSE, PBUILDING, PFLAT);
      ELSE
        VADDRESS := NULL;
      END IF;
      INSERT INTO MIR.PEOPLE
        (OID,
         LASTNAME,
         FIRSTNAME,
         MIDDLENAME,
         BIRTHDAY,
         EMAIL,
         PASSWORD,
         LOGIN,
         SEX,
         ADDRESSEX2,
         EMAIL,
         TELHOME,
         TELWORK,
         TELSOT1,
         TELSOT2,
         PEOPLEDOCTYPE,
         PEOPLEDOCSER,
         PEOPLEDOCNUM,
         WEBPHONE,
         WEBMAIL)
      VALUES
        (VOID,
         PSURNAME,
         PIM,
         POTCH,
         PBIRTH,
         PEMAIL,
         PPASSWORD,
         PLOGIN,
         PSEX,
         VADDRESS,
         PEMAIL,
         PPHONEDOM,
         PPHONEWORK,
         PPHONESOT1,
         PPHONESOT2,
         PPEOPLEDOCTYPE,
         PPEOPLEDOCSER,
         PPEOPLEDOCNUM,
         PPHONESOT1,
         PEMAIL);
    
      IF (ppaytype IS NOT NULL) THEN
        VINSURANCE := MIR.NEW_UUID();
        INSERT INTO MIR.INSURANCE
          (OID,
           PEOPLE,
           SER,
           NUM,
           BEGINDATE,
           ENDDATE,
           COMPANY,
           paytype,
           NOTENDDATE)
        VALUES
          (VINSURANCE,
           VOID,
           PINSURSER,
           PINSURNUM,
           PINSURBEGIN,
           PINSUREND,
           PINSURCOMPANY,
           ppaytype,
           PNOTENDDATE);
      END IF;
    ELSE
      VOID := POID;

      IF (PADDRESSEX1 IS NULL) THEN
        IF (PKLADRID IS NOT NULL) THEN
          VADDRESS := LOWER(MIR.NEW_UUID());

          INSERT INTO MIR.ADDRESSEX
            (OID, TKLADR, HOUSE, BUILDING, FLAT, ADDR_STR)
          VALUES
            (VADDRESS, PKLADRID, PHOUSE, PBUILDING, PFLAT, $30);
        ELSE
          VADDRESS := NULL;
        END IF;
      ELSE
        VADDRESS := PADDRESSEX1;
        UPDATE MIR.ADDRESSEX
           SET TKLADR   = PKLADRID,
               HOUSE    = PHOUSE,
               BUILDING = PBUILDING,
               FLAT     = PFLAT,
               ADDR_STR = $30
         WHERE OID = VADDRESS;
      END IF;
      UPDATE MIR.PEOPLE
         SET LASTNAME   = PSURNAME,
             FIRSTNAME  = PIM,
             MIDDLENAME = POTCH,
             BIRTHDAY   = PBIRTH,
             EMAIL      = PEMAIL,
             SEX           = PSEX,
             ADDRESSEX2    = VADDRESS,
             TELHOME       = PPHONEDOM,
             TELWORK       = PPHONEWORK,
             TELSOT1       = PPHONESOT1,
             TELSOT2       = PPHONESOT2,
             PEOPLEDOCTYPE = PPEOPLEDOCTYPE,
             PEOPLEDOCSER  = PPEOPLEDOCSER,
             PEOPLEDOCNUM  = PPEOPLEDOCNUM,
             WEBMAIL       = PEMAIL,
             WEBPHONE      = PPHONESOT1
       WHERE OID = VOID;
      IF (PINSUROID IS NOT NULL) THEN
        UPDATE MIR.INSURANCE
           SET SER        = PINSURSER,
               NUM        = PINSURNUM,
               BEGINDATE  = PINSURBEGIN,
               ENDDATE    = PINSUREND,
               COMPANY    = PINSURCOMPANY,
               paytype    = ppaytype,
               NOTENDDATE = PNOTENDDATE
         WHERE OID = PINSUROID;
      ELSE
        IF (ppaytype IS NOT NULL) THEN
          VINSURANCE := MIR.NEW_UUID();
          INSERT INTO MIR.INSURANCE
            (OID,
             PEOPLE,
             SER,
             NUM,
             BEGINDATE,
             ENDDATE,
             COMPANY,
             paytype,
             NOTENDDATE)
          VALUES
            (VINSURANCE,
             VOID,
             PINSURSER,
             PINSURNUM,
             PINSURBEGIN,
             PINSUREND,
             PINSURCOMPANY,
             ppaytype,
             PNOTENDDATE);
        END IF;
      END IF;
    END IF;
    perform MIR.PEOPLE_INFO_UPDATE_PEOPLE_TA(VOID);
    RETURN VOID;
  END;
';


ALTER FUNCTION mir.webuser_dowebpeopleuser(poid character varying, psurname character varying, pim character varying, potch character varying, pbirth date, pemail character varying, ppassword character varying, psex integer, pphonedom character varying, pphonesot1 character varying, pphonesot2 character varying, pphonework character varying, ppeopledoctype character varying, ppeopledocser character varying, ppeopledocnum character varying, pkladrid character varying, phouse character varying, pbuilding character varying, pflat character varying, pinsurser character varying, pinsurnum character varying, pinsurcompany character varying, pinsurbegin date, pinsurend date, paddressex1 character varying, ppaytype character varying, plogin character varying, pinsuroid character, pnotenddate numeric, "pkladrAddrstr" character varying) OWNER TO postgres;

--
-- TOC entry 2153 (class 1255 OID 17508)
-- Dependencies: 5396 14
-- Name: webuser_getpassword(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_getpassword(ppass character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
    RETURN MIR.MEDOTRADEHASH(PPASS, PPASS);
  END;

';


ALTER FUNCTION mir.webuser_getpassword(ppass character varying) OWNER TO postgres;

--
-- TOC entry 2154 (class 1255 OID 17509)
-- Dependencies: 5396 14
-- Name: webuser_insertphonecode(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_insertphonecode(poid character) RETURNS integer
    LANGUAGE plpgsql
    AS '
declare
    V_R INTEGER;
  BEGIN
    V_R := trunc( 100000 + 899999*random() ); --TRUNC(DBMS_RANDOM.VALUE(100000, 999999));
    UPDATE MIR.people  SET PHONECODE = V_R WHERE OID = $1;
    RETURN V_R;
  END;
';


ALTER FUNCTION mir.webuser_insertphonecode(poid character) OWNER TO postgres;

--
-- TOC entry 2155 (class 1255 OID 17510)
-- Dependencies: 5396 14
-- Name: webuser_insertwebpaconpriem(character, character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION webuser_insertwebpaconpriem(ppeopleoid character, pschedule character, ppeoplescheduleplace integer DEFAULT 2) RETURNS character varying
    LANGUAGE plpgsql
    AS '
  DECLARE
    V_LASTNAME MIR.PERSON.LASTNAME%TYPE;
    R          INTEGER;
    VSTARTON   MIR.EVENT.STARTON%TYPE;
    VSYSUSER   MIR.SCHEDULE.SYSUSER%TYPE;
    VCABINET   MIR.SCHEDULE.CABINET%TYPE;
  BEGIN
    select trunc( 8999 * random() ) + 1000 into R;
    
    SELECT MAX(P.LASTNAME)
      INTO V_LASTNAME
      FROM MIR.PERSON P
     WHERE P.OID = PPEOPLEOID;
     
    UPDATE MIR.SCHEDULE
       SET PEOPLE              = PPEOPLEOID,
           STATE               = 1,
           SYNC				   = 1,
           TICKETNUMBER        = R,
           UPDATEPEOPLEDATE    = CURRENT_TIMESTAMP,
           PEOPLESCHEDULEPLACE = PPEOPLESCHEDULEPLACE
     WHERE OID = PSCHEDULE
    RETURNING SYSUSER, CABINET INTO VSYSUSER, VCABINET;
    UPDATE MIR.EVENT
       SET DESCRIPTION = V_LASTNAME, SUBJECT = V_LASTNAME
     WHERE OID = PSCHEDULE
    RETURNING STARTON INTO VSTARTON;
    
    perform MIR.ZINCZAPISSTATICTICS();
   -- perform MIR.SMS_INSERT_SMS_NEW_DOCTORVISITRIS(PPEOPLEOID,
   --                                           VSTARTON,
   --                                           VSYSUSER,
   --                                           VCABINET,
   --                                           R,
   --                                           PSCHEDULE);
    RETURN R;
  END;
';


ALTER FUNCTION mir.webuser_insertwebpaconpriem(ppeopleoid character, pschedule character, ppeoplescheduleplace integer) OWNER TO postgres;

--
-- TOC entry 2156 (class 1255 OID 17511)
-- Dependencies: 5396 14
-- Name: workday_addreplacesotr(character, character, date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_addreplacesotr(pfromsysuser character, ptosysuser character, ps date, ppo date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  c record;
  --by SpasskiySN 28.09.2011
  begin
    for c in (select * from mir.sotrworkday s where s.sysuser = pfromsysuser
                     and s.dates between date_trunc(''day'', ps) and date_trunc(''day'', ppo)+time ''23:59:59'') loop
        delete from mir.workday_replace w
        where w.sotrworkday = c.oid
              and w.sysuser = ptosysuser;
        insert into mir.workday_replace (oid, sotrworkday, sysuser)
        values (mir.new_uuid(), c.oid, ptosysuser);
    end loop;
  end;

';


ALTER FUNCTION mir.workday_addreplacesotr(pfromsysuser character, ptosysuser character, ps date, ppo date) OWNER TO postgres;

--
-- TOC entry 2157 (class 1255 OID 17512)
-- Dependencies: 5396 14
-- Name: workday_cancelpriem(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_cancelpriem(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.schedule 
       set state                    = mir.schedule_get_cn_schedulestate_free(),
           people                   = null,
           peoplescheduleplace      = null,
           schedulecallstatedate    = null,
           schedulecallstatesysuser = null,
           extralinereason          = null
     where oid = poid;
  end;

';


ALTER FUNCTION mir.workday_cancelpriem(poid character) OWNER TO postgres;

--
-- TOC entry 2158 (class 1255 OID 17513)
-- Dependencies: 5396 14
-- Name: workday_deletereplacesotr(character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_deletereplacesotr(poid character) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.workday_replace where oid = poid;
  end;

';


ALTER FUNCTION mir.workday_deletereplacesotr(poid character) OWNER TO postgres;

--
-- TOC entry 2159 (class 1255 OID 17514)
-- Dependencies: 5396 14
-- Name: workday_deleteschedule(text); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_deleteschedule(poid text) RETURNS text
    LANGUAGE plpgsql
    AS '
  declare 
  c record;
  poids TEXT[];
BEGIN
  
  poids := string_to_array(poid, '','');
  --select * from unnest(string_to_array(poid,'','')) as poids(x);
  for c in (select s.oid
              from mir.schedule s
             where s.oid = ANY(poids)
               and s.people is null) 
  loop
      delete from mir.schedule_history s where s.old_oid = c.oid or s.new_oid = c.oid;
      delete from mir.schedule s where s.oid = c.oid;
      delete from mir.event e where e.oid = c.oid;
    end loop;
    RETURN '''';
END
';


ALTER FUNCTION mir.workday_deleteschedule(poid text) OWNER TO postgres;

--
-- TOC entry 2160 (class 1255 OID 17515)
-- Dependencies: 5396 14
-- Name: workday_deleteschedule_by_period_sysuser(timestamp without time zone, timestamp without time zone, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_deleteschedule_by_period_sysuser(pstarton timestamp without time zone, pendon timestamp without time zone, psysuser character, plpu character, potdel character DEFAULT ''::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
declare 
c record;
  begin
    for c in (select s.oid
                from mir.schedule s
               where s.starton between pstarton and pendon
                 and s.people is null
                 and s.sysuser = psysuser
                 and s.lpu = plpu
                 and s.otdel = potdel) loop
      PERFORM mir.workday_deleteschedule(c.oid);
    end loop;
  end;
';


ALTER FUNCTION mir.workday_deleteschedule_by_period_sysuser(pstarton timestamp without time zone, pendon timestamp without time zone, psysuser character, plpu character, potdel character) OWNER TO postgres;

--
-- TOC entry 2151 (class 1255 OID 17516)
-- Dependencies: 5396 14
-- Name: workday_deleteschedule_by_period_sysuser_new(timestamp without time zone, timestamp without time zone, character, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_deleteschedule_by_period_sysuser_new(pstarton timestamp without time zone, pendon timestamp without time zone, psotr character, plpu character, potdel character DEFAULT ''::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
--by UkhinAD 18.07.2012
declare 
c record;
  begin
    for c in (select s.oid
                from mir.schedule s
               where s.starton between pstarton and pendon
                 and s.people is null
                 and s.sotr = psotr
                 and s.lpu = plpu
                 and s.otdel = potdel) loop
      PERFORM mir.workday_deleteschedule(c.oid);
    end loop;
  end;
';


ALTER FUNCTION mir.workday_deleteschedule_by_period_sysuser_new(pstarton timestamp without time zone, pendon timestamp without time zone, psotr character, plpu character, potdel character) OWNER TO postgres;

--
-- TOC entry 2161 (class 1255 OID 17517)
-- Dependencies: 5396 14
-- Name: workday_deletesotrworkday(character, date, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_deletesotrworkday(psysuser character, ps date, ppo date) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    delete from mir.sotrworkday 
     where sysuser = psysuser
       and dates between date_trunc(''day'', ps) and date_trunc(''day'', ppo) + time ''23:59:59'';
  end;

';


ALTER FUNCTION mir.workday_deletesotrworkday(psysuser character, ps date, ppo date) OWNER TO postgres;

--
-- TOC entry 1305 (class 1255 OID 17518)
-- Dependencies: 5396 14
-- Name: workday_doautomakeschedule(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_doautomakeschedule() RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
declare
    v_date     date;
    v_start    date;
    v_datetmp  date;
    v_period   INTEGER;
    v_cnt1     numeric;
    v_cnt2     NUMERIC;
    v_sche     mir.schedule.oid%type;
    v_otpusk   NUMERIC;
    v_prevdate date;
    --type t_holiday_date is table of date index by binary_integer;
    --holiday_date  t_holiday_date;
    holiday_date  date[];
    v_isotpuskday boolean;
    v_iter        INTEGER;
    c record;
    cc record;
    
  begin
    execute immediate ''alter session set nls_date_language=american'';
    for c in (select *
                from mir.scheduleautomake m
               where m.isenable = 1
                 and m.copyfor is not null) loop
      v_date := null;
      if (c.copyfor = 0) then
        --на неделю
        v_period := 7; --sysdate
        v_date   := trunc(sysdate) + v_period;
        v_start  := v_date - v_period; --sysdate - 7
        if (c.iscopyweek = 1) then
          v_start := next_day(v_start - 7, to_char(v_date, ''dy''));
        end if;
      end if;
      if (c.copyfor = 1) then
        --на 2 недели
        v_period := 14;
        v_date   := trunc(sysdate) + v_period;
        v_start  := v_date - v_period;
        if (c.iscopyweek = 1) then
          v_start := next_day(v_start - 7, to_char(v_date, ''dy''));
        end if;
      end if;
      if (c.copyfor = 2) then
        --на месяц
        v_date   := add_months(trunc(sysdate), 1);
        v_period := v_date - add_months(v_date, -1);
        v_start  := v_date - v_period;
        if (c.iscopyweek = 1) then
          v_start := next_day(v_start - 7, ''monday''/*to_char(v_date, ''dy'')*/);
          v_datetmp := next_day(v_date - 7, ''monday'');
          v_period := v_period - trunc(v_start + v_period - v_datetmp);
          v_date := v_datetmp;
        end if;
      end if;
      select count(1)
        into v_cnt1
        from mir.schedule_info s
       where s.starton > trunc(v_date) + 0.99999 - 1
         and s.sysuser = c.sysuser
         and s.state in (mir.schedule_get_cn_schedulestate_free,
              mir.schedule_get_cn_schedulestate_done,
              mir.schedule_get_cn_schedulestate_used);

      if (v_cnt1 = 0) then
        --нет приемов

        select count(1)
          into v_cnt2
          from mir.sotrworkday s
         where s.dates between trunc(v_date) and trunc(v_date + v_period)
           and s.sysuser = c.sysuser
           and nvl(s.holidayreason,0) in (1,2);
        --нет отпусков, выходных
        if (v_cnt2 = 0) then

          --выяснить есть ли больничный или отпуск в копируемом интервале
          select count(1)
            into v_otpusk
            from mir.sotrworkday s
           where s.sysuser = c.sysuser
             and s.dates between v_start and v_start + v_period
             and s.holidayreason in (1, 2); -- 1 - больничный, 2- отпуск

          -- чистим коллекции
          holiday_date := ''{}'';
          --holiday_date.delete;

          if (v_otpusk > 0) then
            /*for cc in (select distinct (trunc(s.dates)) dates
                         from mir.sotrworkday s
                        where s.sysuser = c.sysuser
                          and s.dates between v_start and v_start + v_period
                          and s.holidayreason in (1, 2)) loop
              --заполнить массив выходных дней
              holiday_date(nvl(holiday_date.last, 0) + 1) := cc.dates;
            end loop;*/
              insert into holiday_date
              select distinct (trunc(s.dates)) dates
                         from mir.sotrworkday s
                        where s.sysuser = c.sysuser
                          and s.dates between v_start and v_start + v_period
                          and s.holidayreason in (1, 2);
          end if;

          for cc in (select *
                       from mir.schedule_info s
                      where s.sysuser = c.sysuser
                        and s.starton between v_start and v_start + v_period
                        and s.state in
                            (mir.schedule_get_cn_schedulestate_free,
                             mir.schedule_get_cn_schedulestate_done,
                             mir.schedule_get_cn_schedulestate_used)) loop

            v_isotpuskday := false;
            if (v_otpusk > 0) then
              for i in holiday_date.first .. holiday_date.last loop
                if (holiday_date(i) = trunc(cc.starton)) then
                  v_isotpuskday := true;
                end if;
              end loop;
            end if;
            if (v_isotpuskday) then
              --если отпуск или больничный прорускаем для того, чтобы заполнить далее
              null;
            else
              --выходных/больничных нет
              --вставка всех точек расписания
              v_sche := mir.schedule_insert_schedule(poid        => null,
                                                         psysuser    => cc.sysuser,
                                                         ppresctype  => cc.presctype,
                                                         ppeople     => null,
                                                         plpu        => cc.lpu,
                                                         pstarton    => cc.starton +
                                                                        v_period,
                                                         pendon      => cc.endon +
                                                                        v_period,
                                                         pstate      => mir.schedule_cn_schedulestate_free,
                                                         pinsite     => cc.insite,
                                                         pisnapronly => cc.isnapronly,
                                                         pisbron     => cc.isbron,
                                                         pcabinet    => cc.cabinet);
            end if;
          end loop;
          if (v_otpusk > 0) then
            for i in holiday_date.first .. holiday_date.last loop
              v_prevdate := getprevfreeday(c.sysuser,
                                           holiday_date(i),
                                           v_period,
                                           1,
                                           v_iter);
              if (v_prevdate) is not null then

                --заполнить пропущенные отпуск и больничные днями, из более ранних интервалов
                for cc in (select *
                             from mir.schedule_info s
                            where s.sysuser = c.sysuser
                              and s.starton between v_prevdate and
                                  v_prevdate + 0.99999
                              and s.state in
                                  (mir.schedule_get_cn_schedulestate_free,
                                   mir.schedule_get_cn_schedulestate_done,
                                   mir.schedule_get_cn_schedulestate_used)) loop
                  v_sche := mir.schedule_insert_schedule(poid        => null,
                                                             psysuser    => cc.sysuser,
                                                             ppresctype  => cc.presctype,
                                                             ppeople     => null,
                                                             plpu        => cc.lpu,
                                                             pstarton    => cc.starton +
                                                                            v_period *
                                                                            (v_iter+1),
                                                             pendon      => cc.endon +
                                                                            v_period *
                                                                            (v_iter+1),
                                                             pstate      => mir.schedule_cn_schedulestate_free,
                                                             pinsite     => cc.insite,
                                                             pisnapronly => cc.isnapronly,
                                                             pisbron     => cc.isbron,
                                                             pcabinet    => cc.cabinet);
                end loop;
                for cc in (select *
                             from mir.sotrworkday s
                            where s.sysuser = c.sysuser
                              and s.dates between v_prevdate and
                                  v_prevdate + time ''23:59:59'') loop
                  --вставка графика работы
                  perform mir.workday_makeworkday(cc.cabinet,
                                              cc.dates + v_period * (v_iter+1),
                                              cc.duration,
                                              cc.isholiday,
                                              cc.sysuser,
                                              cc.times,
                                              cc.timepo,
                                              cc.holidayreason,
                                              cc.isliveline);
                end loop;
              end if;
            end loop;
          end if;
          for cc in (select *
                       from mir.sotrworkday s
                      where s.sysuser = c.sysuser
                        and s.dates between v_start and v_start + v_period) loop
            v_isotpuskday := false;
            if (v_otpusk > 0) then
              for i in holiday_date.first .. holiday_date.last loop
                if (holiday_date(i) = trunc(cc.dates)) then
                  v_isotpuskday := true;
                end if;
              end loop;
            end if;
            if (v_isotpuskday) then
              --если отпуск или больничный прорускаем для того, чтобы заполнить далее
              null;
            else
              --вставка графика работы
              perform mir.workday_makeworkday(cc.cabinet,
                                          cc.dates + v_period,
                                          cc.duration,
                                          cc.isholiday,
                                          cc.sysuser,
                                          cc.times,
                                          cc.timepo,
                                          cc.holidayreason,
                                          cc.isliveline);
            end if;
          end loop;
        end if;
      end if;
    end loop;
  end;

';


ALTER FUNCTION mir.workday_doautomakeschedule() OWNER TO postgres;

--
-- TOC entry 2162 (class 1255 OID 17520)
-- Dependencies: 5396 14
-- Name: workday_getprevfreeday(character, date, integer, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_getprevfreeday(psysuser character, pstartdate date, pperiod integer, piteration numeric, OUT pit numeric, OUT resdate date) RETURNS record
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  DECLARE 
    v_holidayreason NUMERIC;

  begin
    if piteration = 4 then
      pit := piteration;
      resdate := null;
    end if;
    select nvl(max(s.holidayreason), 0)
      from mir.sotrworkday s
     where s.sysuser = psysuser
       and s.dates between date_trunc(''day'', pstartdate-pperiod) and
           date_trunc(''day'', pstartdate-pperiod) + time ''23:59:59'' into v_holidayreason;
           
    if (v_holidayreason = 0) then
      pit := piteration;
      resdate := date_trunc(''day'', pstartdate - pperiod);
    else
      select  MIR.workday_getprevfreeday(psysuser,
                            pstartdate - pperiod,
                            pperiod,
                            piteration + 1,
                            pit, 
                            resdate);
    end if;
  end;

';


ALTER FUNCTION mir.workday_getprevfreeday(psysuser character, pstartdate date, pperiod integer, piteration numeric, OUT pit numeric, OUT resdate date) OWNER TO postgres;

--
-- TOC entry 2163 (class 1255 OID 17521)
-- Dependencies: 5396 14
-- Name: workday_getsysuserworkday(character, date, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_getsysuserworkday(psysuser character, pdate date, isstart numeric) RETURNS date
    LANGUAGE plpgsql
    AS '
declare 
c record;
 begin
  --by SpasskiySN 28.09.2011
    if (isstart = 1) then
      for c in (select min(s.starton) d
                  from mir.schedule_info s
                 where s.sysuser = psysuser
                   and s.state not in
                       (mir.schedule_get_cn_schedulestate_liveline(),
                        mir.schedule_get_cn_schedulestate_extraline())
                   and s.starton between date_trunc(''day'', pdate) and
                       date_trunc(''day'', pdate) + time ''23:59:59'') loop
        return c.d;
      end loop;
    else
      for c in (select max(s.endon) d
                  from mir.schedule_info as s
                 where s.sysuser = psysuser
                   and s.state not in
                       (mir.schedule_get_cn_schedulestate_liveline(),
                        mir.schedule_get_cn_schedulestate_extraline())
                   and s.starton between date_trunc(''day'', pdate) and
                       date_trunc(''day'', pdate) + time ''23:59:59'') loop
        return c.d;
      end loop;
    end if;
  end;

';


ALTER FUNCTION mir.workday_getsysuserworkday(psysuser character, pdate date, isstart numeric) OWNER TO postgres;

--
-- TOC entry 2164 (class 1255 OID 17522)
-- Dependencies: 5396 14
-- Name: workday_makeworkday(character varying, date, numeric, numeric, character, double precision, double precision, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_makeworkday(pcabinet character varying, pdates date, pduration numeric, pisholiday numeric, psysuser character, ptimes double precision, ptimepo double precision, pholidayreason numeric DEFAULT NULL::numeric, pisliveline numeric DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  declare
   i INTEGER;
  begin
    update mir.sotrworkday
       set cabinet       = pcabinet,
           dates         = pdates,
           duration      = pduration,
           isholiday     = pisholiday,
           sysuser       = psysuser,
           times         = ptimes,
           timepo        = ptimepo,
           holidayreason = pholidayreason,
           isliveline = pisliveline
     where sysuser = psysuser
       and dates = pdates;
    GET DIAGNOSTICS i = ROW_COUNT;
    if (i = 0) then
      insert into mir.sotrworkday
        (oid,
         times,
         timepo,
         duration,
         cabinet,
         sysuser,
         isholiday,
         dates,
         holidayreason,
         isliveline)
      values
        (mir.new_uuid(),
         ptimes,
         ptimepo,
         pduration,
         pcabinet,
         psysuser,
         pisholiday,
         pdates,
         pholidayreason,
         pisliveline);
    end if;
  end;
';


ALTER FUNCTION mir.workday_makeworkday(pcabinet character varying, pdates date, pduration numeric, pisholiday numeric, psysuser character, ptimes double precision, ptimepo double precision, pholidayreason numeric, pisliveline numeric) OWNER TO postgres;

--
-- TOC entry 2165 (class 1255 OID 17523)
-- Dependencies: 5396 14
-- Name: workday_markbronschedule(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_markbronschedule(poid character, pisbron numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.schedule set isbron = pisbron where oid = poid;
  end;
';


ALTER FUNCTION mir.workday_markbronschedule(poid character, pisbron numeric) OWNER TO postgres;

--
-- TOC entry 2166 (class 1255 OID 17524)
-- Dependencies: 5396 14
-- Name: workday_markholiday(character, date); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_markholiday(psysuser character, pdate date) RETURNS void
    LANGUAGE plpgsql
    AS '
declare 
i INTEGER;
BEGIN
  --by SpasskiySN 28.09.2011
    update mir.sotrworkday 
       set isholiday = 1
     where sysuser = psysuser
       and dates = pdate;
	GET DIAGNOSTICS i = ROW_COUNT;
    if (i  = 0) then
      insert into mir.sotrworkday
        (oid, sysuser, isholiday, dates)
      values
        (mir.new_uuid(), psysuser, 1, pdate);
    end if;
END;
';


ALTER FUNCTION mir.workday_markholiday(psysuser character, pdate date) OWNER TO postgres;

--
-- TOC entry 2167 (class 1255 OID 17525)
-- Dependencies: 5396 14
-- Name: workday_setautoschedule(character, numeric, numeric, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_setautoschedule(psysuser character, pisenable numeric, pcopyfor numeric, piscopyweek numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
 i INTEGER;
  --by SpasskiySN 28.09.2011
  begin
    update mir.scheduleautomake 
       set isenable   = pisenable,
           copyfor    = pcopyfor,
           iscopyweek = piscopyweek
     where sysuser = psysuser;
    GET DIAGNOSTICS i = ROW_COUNT;
    if (i = 0) then
      insert into mir.scheduleautomake
        (oid, sysuser, isenable, copyfor, iscopyweek)
      values
        (mir.new_uuid(), psysuser, pisenable, pcopyfor, piscopyweek);
    end if;
  end;

';


ALTER FUNCTION mir.workday_setautoschedule(psysuser character, pisenable numeric, pcopyfor numeric, piscopyweek numeric) OWNER TO postgres;

--
-- TOC entry 2168 (class 1255 OID 17526)
-- Dependencies: 5396 14
-- Name: workday_updateschedule(character, character varying, numeric, character, character, character, character, timestamp without time zone, timestamp without time zone, numeric, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workday_updateschedule(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pisnapronly character, pstarton timestamp without time zone, pendon timestamp without time zone, pisbron numeric, pinfo character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
--by SpasskiySN 28.09.2011
  begin
    update mir.schedule 
       set cabinet    = pcabinet,
           insite     = pinsite,
           sysuser    = psysuser,
           presctype  = ppresctype,
           people     = ppeople,
           isnapronly = pisnapronly,
           isbron     = pisbron,
           info       = pinfo,
           starton 	= pstarton, 
           endon 		= pendon
     where oid = poid;
  end;
';


ALTER FUNCTION mir.workday_updateschedule(poid character, pcabinet character varying, pinsite numeric, psysuser character, ppresctype character, ppeople character, pisnapronly character, pstarton timestamp without time zone, pendon timestamp without time zone, pisbron numeric, pinfo character varying) OWNER TO postgres;

--
-- TOC entry 2169 (class 1255 OID 17527)
-- Dependencies: 5396 14
-- Name: workschedule_add_schedule_buffer(character varying, character varying, character varying, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workschedule_add_schedule_buffer(psysuser character varying, ppresctype character varying, plpu character varying, pdate date, poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    --REC V_SCHEDULE_BUFFER_REC;
  BEGIN
  /*
    IF NOT V_SCHEDULE_BUFFER.EXISTS(POID) THEN
      REC.SYSUSER   := PSYSUSER;
      REC.PRESCTYPE := PPRESCTYPE;
      REC.LPU       := PLPU;
      REC.D         := PDATE;
    ELSE
      REC := V_SCHEDULE_BUFFER(POID);
      IF PSYSUSER IS NOT NULL THEN
        REC.SYSUSER := PSYSUSER;
      END IF;
      IF PSYSUSER IS NOT NULL THEN
        REC.PRESCTYPE := PPRESCTYPE;
      END IF;
      IF PSYSUSER IS NOT NULL THEN
        REC.LPU := PLPU;
      END IF;
      IF PSYSUSER IS NOT NULL THEN
        REC.D := PDATE;
      END IF;
    
    END IF;
    V_SCHEDULE_BUFFER(POID) := REC;*/
  END;

';


ALTER FUNCTION mir.workschedule_add_schedule_buffer(psysuser character varying, ppresctype character varying, plpu character varying, pdate date, poid character varying) OWNER TO postgres;

--
-- TOC entry 2141 (class 1255 OID 17528)
-- Dependencies: 5396 14
-- Name: workschedule_apply_schedule_buffer(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workschedule_apply_schedule_buffer() RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    V_OID CHAR(36);
  BEGIN
    /*V_OID := V_SCHEDULE_BUFFER.FIRST;
  
    LOOP
      EXIT WHEN V_OID IS NULL;
    
      UPDATE_FREE_CNT(V_SCHEDULE_BUFFER(V_OID).SYSUSER,
                      V_SCHEDULE_BUFFER(V_OID).PRESCTYPE,
                      V_SCHEDULE_BUFFER(V_OID).LPU,
                      V_SCHEDULE_BUFFER(V_OID).D);
    
      V_OID := V_SCHEDULE_BUFFER.NEXT(V_OID);
    END LOOP;*/
  END;

';


ALTER FUNCTION mir.workschedule_apply_schedule_buffer() OWNER TO postgres;

--
-- TOC entry 2171 (class 1255 OID 17529)
-- Dependencies: 5396 14
-- Name: workschedule_do_log(character varying, character varying, character varying, date, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workschedule_do_log(psysuser character varying, ppresctype character varying, plpu character varying, pdate date, ptable_name character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
DECLARE
    nOk Integer;
    c record;
  BEGIN
    nOk := -1;
    
    for c in ( select 1
                 from MIR.WORKSCHEDULE_CHANGE_BUFFER B
                where B.SYSUSER = PSYSUSER 
                  AND B.PRESCTYPE = PPRESCTYPE 
                  AND B.LPU = PLPU 
                  AND B.WORK_DATE = date_trunc(''day'', PDATE) 
                  AND TABLE_NAME = PTABLE_NAME
             )
    loop
      nOk := 1;
    end loop;
    
    if nOk <= 0 then
      INSERT INTO MIR.WORKSCHEDULE_CHANGE_BUFFER
        (SYSUSER, PRESCTYPE, WORK_DATE, REGIST_DATE, REGIST_SYSUSER, LPU, ID, TABLE_NAME)
      VALUES
        (PSYSUSER, PPRESCTYPE, PDATE, CURRENT_TIMESTAMP, MIR.getcurrentsysuser(), PLPU, null, PTABLE_NAME);    
    end if;
    /*
    MERGE INTO MIR.WORKSCHEDULE_CHANGE_BUFFER B
    USING DUAL
    ON (B.SYSUSER = PSYSUSER AND B.PRESCTYPE = PPRESCTYPE AND B.LPU = PLPU AND B.WORK_DATE = TRUNC(PDATE) AND TABLE_NAME = PTABLE_NAME)
    WHEN NOT MATCHED THEN
      INSERT
      VALUES
        (PSYSUSER,
         PPRESCTYPE,
         PDATE,
         SYSDATE,
         MIR.GETCURRENTSYSUSER,
         PLPU,
         NULL,
         PTABLE_NAME);*/
  
  END;

';


ALTER FUNCTION mir.workschedule_do_log(psysuser character varying, ppresctype character varying, plpu character varying, pdate date, ptable_name character varying) OWNER TO postgres;

--
-- TOC entry 2172 (class 1255 OID 17530)
-- Dependencies: 5396 14
-- Name: workschedule_init_schedule_buffer(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION workschedule_init_schedule_buffer() RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    --V_SCHEDULE_BUFFER.DELETE;
  END;

';


ALTER FUNCTION mir.workschedule_init_schedule_buffer() OWNER TO postgres;

--
-- TOC entry 2173 (class 1255 OID 17531)
-- Dependencies: 5396 14
-- Name: zayavka_tr(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zayavka_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS '
DECLARE
  Fam varchar(255);
  Im VARCHAR(255);
  Otch VARCHAR(255);
  email VARCHAR(255);
  phone VARCHAR(255);
  borndt date;
  oidpeople char(36);
BEGIN
  Fam:=new.Fam;
  Im:=new.Im;
  Otch:=new.Otch;
  borndt:=new.borndt;
  oidpeople := NULL;
  phone :=new.phone;
  email :=new.email;

  BEGIN
    SELECT OID
    INTO oidpeople
    FROM mir.people pp
    WHERE upper(pp.lastname) = upper(Fam)
          AND upper(pp.Firstname) = upper(Im)
          AND upper(pp.middlename) = upper(Otch)
          AND pp.birthday = borndt;
    EXCEPTION
    WHEN OTHERS THEN
    oidpeople := NULL;
  END;

  if oidpeople is not null then
    new.people:=oidpeople;
  end if;
  if oidpeople is null then
    new.people:= mir.people_info_insert_people(null,Im, Fam, Otch,borndt,null,email,phone,NULL,null);
  end if;
  return new;
END;
';


ALTER FUNCTION mir.zayavka_tr() OWNER TO postgres;

--
-- TOC entry 2174 (class 1255 OID 17532)
-- Dependencies: 5396 14
-- Name: zcancelpacvisit(character, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zcancelpacvisit(pschedule character, pnote character varying, pisotmena integer) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  vSchedule         mir.schedule%rowtype;
  vEvent            mir.event%rowtype;
  vDayEnd           Date;
  vNew              mir.schedule.oid%type;
  vCurrentUserLogin varchar(255);
  vCurrentUserOid   varchar(255);
  c                 record;
begin
  if pIsOtmena = 1 then
    perform mir.schedule_cancel_schedule(pSchedule, mir.getcurrentsysuser());
  else
    for c in (select * from mir.schedule s where s.oid = pSchedule) loop
      vSchedule := c;
    end loop;
    for c in (select * from mir.event s where s.oid = pSchedule) loop
      vEvent := c;
    end loop;
    
    select mir.schedule_get_sysuser_workday_end(vSchedule.Sysuser,
                                                        vEvent.Starton) into vDayEnd;
    /*for c in (SELECT USERNAME
                FROM V$SESSION
               WHERE AUDSID = USERENV(''SESSIONID'')) loop
      vCurrentUserLogin := c.username;
    end loop;*/
    select max(s.oid)
      into vCurrentUserOid
      from mir.sysuser s
     where ''Z'' || trim(upper(s.username)) = CURRENT_USER;

    select mir.schedule_insert_schedule(null,
                                             vSchedule.Cabinet,
                                             0,
                                             vSchedule.Sysuser,
                                             vSchedule.presctype,
                                             vSchedule.People,
                                             mir.schedule_get_cn_schedulestate_liveline(),
                                             null,
                                             vSchedule.Isnapronly,
                                             null,
                                             vSchedule.Lpu,
                                             vDayEnd,
                                             vDayEnd,
                                             null) into vNew;
    perform mir.schedule_move_schedule(pSchedule,
                                   vNew,
                                   vCurrentUserOid,
                                   CURRENT_DATE,
                                   pNote);
  end if;
end;

';


ALTER FUNCTION mir.zcancelpacvisit(pschedule character, pnote character varying, pisotmena integer) OWNER TO postgres;

--
-- TOC entry 2175 (class 1255 OID 17533)
-- Dependencies: 5396 14
-- Name: zdelete_district(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_district(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.sotrsotrs_districtdistrict where district=POID;
    update mir.homevisit hv set hv.district=null where  hv.district=POID;
    delete from mir.district  where oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_district(poid character varying) OWNER TO postgres;

--
-- TOC entry 2176 (class 1255 OID 17534)
-- Dependencies: 5396 14
-- Name: zdelete_lpu(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_lpu(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.otdel where lpu=POID;
    delete from mir.lpu_receptiontype where lpu2=POID;
    delete from mir.lpu where oid=POID;
    delete from mir.company where oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_lpu(poid character varying) OWNER TO postgres;

--
-- TOC entry 2177 (class 1255 OID 17535)
-- Dependencies: 5396 14
-- Name: zdelete_null_insurcompany(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_null_insurcompany(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.insurcompany where oid=POID;
    delete from mir.company where oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_null_insurcompany(poid character varying) OWNER TO postgres;

--
-- TOC entry 2178 (class 1255 OID 17536)
-- Dependencies: 5396 14
-- Name: zdelete_null_lpu(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_null_lpu(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.otdel where lpu=POID;
    delete from mir.lpu_receptiontype where lpu2=POID;
    delete from mir.lpu where oid=POID;
    delete from mir.company where oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_null_lpu(poid character varying) OWNER TO postgres;

--
-- TOC entry 2179 (class 1255 OID 17537)
-- Dependencies: 5396 14
-- Name: zdelete_profile(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_profile(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.profile_gosp_standart where oid_profile = POID;
    delete from mir.profile_gosp_mkb where oid_profile = POID;
    delete from mir.profile_gosp where oid = POID;
END;

';


ALTER FUNCTION mir.zdelete_profile(poid character varying) OWNER TO postgres;

--
-- TOC entry 2180 (class 1255 OID 17538)
-- Dependencies: 5396 14
-- Name: zdelete_sotr(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_sotr(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.sotrsotrs_districtdistrict  where sotrs=POID;   
    delete from mir.sotr  where oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_sotr(poid character varying) OWNER TO postgres;

--
-- TOC entry 2181 (class 1255 OID 17539)
-- Dependencies: 5396 14
-- Name: zdelete_standart_gosp(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_standart_gosp(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.standart_gosp_mkb where oid_standart=POID;
    delete from mir.standart_gosp_service where oid_standart = POID;
    delete from mir.standart_gosp where oid = POID;
END;

';


ALTER FUNCTION mir.zdelete_standart_gosp(poid character varying) OWNER TO postgres;

--
-- TOC entry 2182 (class 1255 OID 17540)
-- Dependencies: 5396 14
-- Name: zdelete_sysuser(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_sysuser(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
 -- Удаляем участки ,привязанные к сотруднику
    delete from mir.sotrsotrs_districtdistrict  where sotrs in (select oid from mir.sotr  where sysuser=POID );
 --Удаляем роли привязанные к sysuser                            
    delete from mir.sysuserusers_sysroleroles   where users=POID;                                                                    
 --Удаляем специальности привязанные к sysuser                                                                             
    delete from mir.sysuser_presctype  where sysusers=POID; 
 --Удаляем сотрудника                        
    delete from mir.sotr  where sysuser=POID;
END;

';


ALTER FUNCTION mir.zdelete_sysuser(poid character varying) OWNER TO postgres;

--
-- TOC entry 2186 (class 1255 OID 17541)
-- Dependencies: 5396 14
-- Name: zdelete_sysuser_ex(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdelete_sysuser_ex(poid character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
    delete from mir.schedule h where  h.sysuser=POID;
    delete from mir.sotrsotrs_districtdistrict d 
     where d.sotrs=(select max(oid) from mir.sotr so where so.sysuser=POID);

    delete from mir.sotr s where s.sysuser=POID;
    delete from mir.sotrworkday tt where tt.sysuser=POID;
    delete from mir.sysuser_presctype ttq where ttq.sysusers=POID;
    delete from mir.sysuserusers_sysroleroles rtq where rtq.users=POID;
    delete from mir.scheduleautomake w where w.sysuser=POID;
    delete from mir.sysuser ss where ss.oid=POID;
    delete from mir.people ss2 where ss2.oid=POID;
END;

';


ALTER FUNCTION mir.zdelete_sysuser_ex(poid character varying) OWNER TO postgres;

--
-- TOC entry 2187 (class 1255 OID 17542)
-- Dependencies: 5396 14
-- Name: zdo_log_download_help(character, date, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zdo_log_download_help(psysuser character, pdate date, phelp_reference_oid character, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
BEGIN
  INSERT INTO MIR.HELP_REFERENCE_DOWNLOAD_LOG
    (SYSUSER, DOWNLOAD_DATE, HELP_REFERENCE_OID, LPU)
  VALUES
    (PSYSUSER, PDATE, PHELP_REFERENCE_OID, PLPU);
END;

';


ALTER FUNCTION mir.zdo_log_download_help(psysuser character, pdate date, phelp_reference_oid character, plpu character) OWNER TO postgres;

--
-- TOC entry 2188 (class 1255 OID 17543)
-- Dependencies: 5396 14
-- Name: zgetdictionaryoid(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetdictionaryoid(syn character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  vRes mir.dictionary.oid%type;
  c record;
begin
  for c in (select * from mir.dictionary d where d."SYNONYM" = syn) loop
    vRes := c.Oid;
  end loop;
  return vRes;
end;

';


ALTER FUNCTION mir.zgetdictionaryoid(syn character varying) OWNER TO postgres;

--
-- TOC entry 2189 (class 1255 OID 17544)
-- Dependencies: 5396 14
-- Name: zgethkf(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgethkf(phouse character varying, pkorp character varying, pflat character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
--by Spasskiy SN 29.09.2011
declare 
  vRes varchar(32000);
begin
  select case when pHouse is null then  null else''д.'' || pHouse ||'' '' end ||
       case when pKorp is null then null else  ''корп.'' || pKorp||'' '' end ||
       case when pFlat is null then null else  ''кв.'' || pFlat end 
  into vRes;

  return vRes;
end;

';


ALTER FUNCTION mir.zgethkf(phouse character varying, pkorp character varying, pflat character varying) OWNER TO postgres;

--
-- TOC entry 2190 (class 1255 OID 17545)
-- Dependencies: 5396 14
-- Name: zgetkladritemstr(character, numeric, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetkladritemstr(pkladrid character, plevel numeric, pshowprefix integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  VRES VARCHAR(32000);
  /*
    CREATED BY SPASSKIY S.N. 26.11.2010
    ВОЗВРАЩАЕТ ЭЛЕМЕНТ КЛАДР
  */
  c record;
BEGIN
  FOR C IN ( WITH RECURSIVE rec ( oid, name, fk_level, fc_prefix, parent, level ) AS 
            (
            SELECT k.oid,
                   k.name,
                   k.fk_level,
                   k.fc_prefix,
                   k.parent,
                   0 as level
              FROM MIR.TKLADRSPR k
             WHERE k.fk_level >= PLEVEL
               AND k.oid = pKladrID
               
             union all
             
            SELECT k.oid,
                   k.name,
                   k.fk_level,
                   k.fc_prefix,
                   k.parent,
                   r.level + 1 as level
              FROM MIR.TKLADRSPR k
             inner join rec r
                on r.oid = k.parent
             WHERE k.fk_level >= PLEVEL
            )
            
            select r.name,
                   r.fk_level,
                   r.FC_PREFIX as PREF 
              from rec r
             ORDER BY r.LEVEL DESC
     
            ) LOOP
    IF PSHOWPREFIX = 1 THEN
      VRES := VRES || C.PREF || ''.'';
    END IF;
    VRES := VRES || C.NAME || '','';
  END LOOP;
  RETURN TRIM('','' FROM VRES);
END;

';


ALTER FUNCTION mir.zgetkladritemstr(pkladrid character, plevel numeric, pshowprefix integer) OWNER TO postgres;

--
-- TOC entry 2191 (class 1255 OID 17546)
-- Dependencies: 5396 14
-- Name: zgetkladrrootid(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetkladrrootid() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res mir.settings.valuepar%type;
BEGIN
  select max(s.ValuePar)
    into res
    from mir.Settings s
   where s.Param = ''START_KLADR_OBJECT'';
  return res;
END;

';


ALTER FUNCTION mir.zgetkladrrootid() OWNER TO postgres;

--
-- TOC entry 2192 (class 1255 OID 17547)
-- Dependencies: 5396 14
-- Name: zgetkladrstr(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetkladrstr(pkladrid character, plevel numeric DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  vRes VARCHAR(32000);
  /*
    Edited by Spasskiy S.N. 12072010

  */
  c record;
BEGIN
/*  VRES = '''';
  FOR c IN (
            WITH RECURSIVE rec ( oid, name, fk_level, fc_prefix, parent, level ) AS 
            (
            SELECT k.oid,
                   k.name,
                   k.fk_level,
                   coalesce(k.fc_prefix, ''''),
                   k.parent,
                   0 as level
              FROM MIR.TKLADRSPR k
             WHERE k.fk_level >= PLEVEL
               AND k.oid = pKladrID
               
             union all
             
            SELECT k.oid,
                   k.name,
                   k.fk_level,
                   coalesce(k.fc_prefix, ''''),
                   k.parent,
                   r.level + 1 as level
              FROM MIR.TKLADRSPR k
             inner join rec r
                on r.parent = k.oid
             WHERE k.fk_level >= PLEVEL
            )
            
            select r.name,
                   r.fk_level,
                   r.FC_PREFIX as PREF 
              from rec r
             ORDER BY r.LEVEL DESC
     */
     
--         Edited by Ponomarenko SA 09122011
  VRES = '''';
  FOR c IN (select * from mir.get_tkladrspr_parents(pkladrid) where fk_level>=plevel)
  LOOP
    VRES := (case when VRES = '''' then VRES else VRES || '', '' end ) ||
    	 (case when C.fc_prefix = '''' then '''' else C.fc_prefix || ''.'' end ) || C.NAME ;
  END LOOP;
  RETURN vRes;
END;
';


ALTER FUNCTION mir.zgetkladrstr(pkladrid character, plevel numeric) OWNER TO postgres;

--
-- TOC entry 2195 (class 1255 OID 17548)
-- Dependencies: 5396 14
-- Name: zgetpeopleaddress(character, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetpeopleaddress(ppeople character, paddressnumber integer DEFAULT 1, pisshort integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  v_addressex mir.people.addressex1%type;
  v_addressex1 mir.people.addressex1%type;
  v_addressex2 mir.people.addressex2%type;
  v_kladr mir.addressex.tkladr%type;
  v_house mir.addressex.house%type;
  v_building mir.addressex.building%type;
  v_flat mir.addressex.flat%type;
  v_addressstr varchar(32000);
  c record;
begin
  for c in (select addressex1, addressex2 from mir.people p where p.oid = pPeople) loop
      v_addressex1 := c.addressex1;
      v_addressex2 := c.addressex2;
  end loop;
  if (pAddressNumber = 1) then
     v_addressex := v_addressex1;
  else
     v_addressex := v_addressex2;
  end if;
  for c in (select * from mir.addressex a where a.oid = v_addressex) loop
      v_kladr:=c.tkladr;
      v_house:=c.house;
      v_building:=c.building;
      v_flat:=c.flat;
  end loop;
  v_addressstr := mir.zgetkladrstr(v_kladr);
  if (v_addressstr is not null) then
    if (pIsShort=1) then
       v_addressstr := SUBSTR(v_addressstr,instr(v_addressstr,'','',1)+2,LENGTH(v_addressstr)-instr(v_addressstr,'','',1)-2);
    end if;
    if (v_house is not null) then
       v_addressstr := v_addressstr || '' д.''||v_house;
    end if;
    if (v_building is not null) then
       v_addressstr := v_addressstr || '' к.''||v_building;
    end if;
    if (v_flat is not null) then
       v_addressstr := v_addressstr || '' кв.''||v_flat;
    end if;
    return v_addressstr;
  else
     return null;
  end if;
end;

';


ALTER FUNCTION mir.zgetpeopleaddress(ppeople character, paddressnumber integer, pisshort integer) OWNER TO postgres;

--
-- TOC entry 2196 (class 1255 OID 17549)
-- Dependencies: 5396 14
-- Name: zgetpeopledistrict(character, character, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetpeopledistrict(ppeople character, plpu character DEFAULT NULL::bpchar, pisreturnname integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  v_addressex mir.people.addressex1%type;
  v_kladr     mir.addressex.tkladr%type;
  v_house     mir.addressex.house%type;
  v_building  mir.addressex.building%type;
  v_flat      mir.addressex.flat%type;
  c           record;
  v_res       varchar (4000);
begin
  for c in (select addressex1, addressex2
              from mir.people p
             where p.oid = ppeople) loop
    v_addressex := c.addressex2;
  end loop;
  for c in (select * from mir.addressex a where a.oid = v_addressex) loop
    v_kladr    := c.tkladr;
    v_house    := c.house;
    v_building := c.building;
    v_flat     := c.flat;
  end loop;
  
  select mir.get_district_by_kladr2(v_kladr,v_house,pisreturnname,plpu) into v_res;
  
  return v_res;
end;

';


ALTER FUNCTION mir.zgetpeopledistrict(ppeople character, plpu character, pisreturnname integer) OWNER TO postgres;

--
-- TOC entry 2197 (class 1255 OID 17550)
-- Dependencies: 5396 14
-- Name: zgetpersonfio(character varying, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetpersonfio("pPerson" character varying, "IsShort" numeric DEFAULT 0) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
 vRes varchar(32000);
 c record;
begin
--by SpasskiySN 27.09.2011
  for c in (select Firstname, LastName, MiddleName from mir.people where oid = $1) loop
    if ($2 = 0) then
       -- vRes := c.lastname || '' ''|| c.firstname || '' '' || c.middlename;
       vRes := trim(trim(coalesce(c.lastname,'''') || '' '' || coalesce(c.firstname, '''')) || '' '' || coalesce(c.middlename,''''));
    else
       -- vRes := c.lastname || '' ''|| substr(c.firstname,0,2) || ''.'' || substr(c.middlename,0,2)||''.'';
       vRes := trim(trim(coalesce(c.lastname,'''')
         || '' '' || coalesce((substr(c.firstname,0,2) || ''.''), '''')) 
         || '' '' || coalesce((substr(c.middlename,0,2) || ''.''), ''''));
    end if;
  end loop;
  return vRes;
end;
';


ALTER FUNCTION mir.zgetpersonfio("pPerson" character varying, "IsShort" numeric) OWNER TO postgres;

--
-- TOC entry 2198 (class 1255 OID 17551)
-- Dependencies: 5396 14
-- Name: zgetpresccost(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetpresccost(ppresctype character varying, psysuser character varying, plpu character varying, preceptiontype character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res varchar(20);
  syn mir.Dictionary.synonym%type;
BEGIN
  select max(d.synonym)
    into syn
    from mir.ReceptionType r, mir.Dictionary d
   where r.Oid = d.Oid
     and d.synonym = ''SYN_PLAT''
     and r.oid = pReceptionType;

  if (syn = ''SYN_PLAT'') then
select COALESCE(rtrim(ltrim(CAST(t.cost as varchar))), ''Не указана'')     into res
from
(
    select max(hc.cost) as cost

  from mir.heal_lpu_cost hc
  left join mir.heal_lpu hl on hl.oid = hc.heal_lpu
  left join mir.heal_presc hp on hp.oidheallpu = hl.oid
 where hc.startdate = (select max(h.startdate)
                         from mir.heal_lpu_cost h
                        where h.startdate <= CURRENT_TIMESTAMP
                          and h.heal_lpu = hl.oid)
   and hl.lpu = pLPU
   and hp.oidpresc=pPrescType
  LIMIT 1
 ) t;
  else
    res := '''';
  end if;
  return res;
END;
';


ALTER FUNCTION mir.zgetpresccost(ppresctype character varying, psysuser character varying, plpu character varying, preceptiontype character varying) OWNER TO postgres;

--
-- TOC entry 2199 (class 1255 OID 17552)
-- Dependencies: 5396 14
-- Name: zgetpresccostname(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetpresccostname(ppresctype character varying, psysuser character varying, plpu character varying, preceptiontype character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res mir.heal_lpu.name%type;
  syn mir.Dictionary.synonym%type;
BEGIN
  select max(d.synonym)
    into syn
    from mir.ReceptionType r, mir.Dictionary d
   where r.Oid = d.Oid
     and d.synonym = ''SYN_PLAT''
     and r.oid = pReceptionType;

  if (syn = ''SYN_PLAT'') then
  select COALESCE(rtrim(ltrim(t.cost)), ''Не указана'')     into res
from
(
    select max(hl.name) as cost
  from mir.heal_lpu_cost hc
  left join mir.heal_lpu hl on hl.oid = hc.heal_lpu
  left join mir.heal_presc hp on hp.oidheallpu = hl.oid
 where hc.startdate = (select max(h.startdate)
                         from mir.heal_lpu_cost h
                        where h.startdate <= CURRENT_TIMESTAMP
                          and h.heal_lpu = hl.oid)
   and hl.lpu = pLPU
   and hp.oidpresc=pPrescType
   --and rownum=1
   limit 1
   ) t;
  else
    res := '''';
  end if;
  return res;
END;
';


ALTER FUNCTION mir.zgetpresccostname(ppresctype character varying, psysuser character varying, plpu character varying, preceptiontype character varying) OWNER TO postgres;

--
-- TOC entry 2200 (class 1255 OID 17553)
-- Dependencies: 5396 14
-- Name: zgetregistkartahtung(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetregistkartahtung() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res mir.settings.valuepar%Type;
BEGIN
   select max(s.ValuePar)
   into res
   from mir.Settings s where s.Param = ''REGIST_KARTA_AHTUNG'';
   return res;
END;

';


ALTER FUNCTION mir.zgetregistkartahtung() OWNER TO postgres;

--
-- TOC entry 2193 (class 1255 OID 17554)
-- Dependencies: 5396 14
-- Name: zgetschedulefreecnt(character, character varying, character varying, character varying, timestamp with time zone, timestamp with time zone, character varying, timestamp with time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetschedulefreecnt(potdel character, preceptiontype character varying, ppresctype character varying, psysuser character varying, pstart timestamp with time zone, pend timestamp with time zone, plpu character varying, pregionsysdate timestamp with time zone DEFAULT now()) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  cnt Varchar(100);
BEGIN
  if (pReceptionType is null) then
    select count(1)
      into cnt
      from mir.Schedule sc
     where 1 = 1
       and pPrescType = sc.PrescType
       and pSysUser = sc.SysUser
       and sc.people is null
       and sc.lpu = pLPU
       and sc.state <> 4
       and COALESCE(sc.isbron,0) = 0
       and sc.StartOn >= pStart
       and sc.starton >= pRegionSysdate
       and sc.StartOn <= pEnd and sc.otdel = potdel;
  else
    select count(1)
      into cnt
      from mir.Schedule sc
     where 1 = 1
       and pPrescType = sc.PrescType
       and pSysUser = sc.SysUser
       and sc.lpu = pLPU
       and sc.state <> 4
       and COALESCE(sc.isbron,0) = 0
       and sc.people is null
       and sc.IsNaprOnly = pReceptionType
       and sc.StartOn >= pStart
       and sc.starton >= pRegionSysdate
       and sc.StartOn <= pEnd and sc.otdel = potdel;
  end if;
  if (cnt <> ''0'') then
    cnt := '' (''||cnt||'')'';
  else
    --cnt := '''';
    cnt := '' (''||cnt||'')'';
  end if;
  return cnt;
END;
';


ALTER FUNCTION mir.zgetschedulefreecnt(potdel character, preceptiontype character varying, ppresctype character varying, psysuser character varying, pstart timestamp with time zone, pend timestamp with time zone, plpu character varying, pregionsysdate timestamp with time zone) OWNER TO postgres;

--
-- TOC entry 2201 (class 1255 OID 17555)
-- Dependencies: 5396 14
-- Name: zgetscheduler_show_day(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetscheduler_show_day() RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  res mir.settings.valuepar%Type;
BEGIN
   select max(s.ValuePar)
   into res
   from mir.Settings s where s.Param = ''SCHEDULER_SHOW_DAY_COUNT'';
   return res;
END;
';


ALTER FUNCTION mir.zgetscheduler_show_day() OWNER TO postgres;

--
-- TOC entry 2202 (class 1255 OID 17556)
-- Dependencies: 5396 14
-- Name: zgetsettingvalue(character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetsettingvalue(pparam character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS '
declare
  vRes mir.settings.valuepar%type;
BEGIN
  select max(s.valuepar)
  into vRes
  from mir.Settings s where s.Param = pParam;
  return vRes;
END;
';


ALTER FUNCTION mir.zgetsettingvalue(pparam character varying) OWNER TO postgres;

--
-- TOC entry 1664 (class 1255 OID 17557)
-- Dependencies: 5396 14
-- Name: zgetspo(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetspo(ps timestamp without time zone, ppo timestamp without time zone) RETURNS character varying
    LANGUAGE plpgsql
    AS '
BEGIN
  if (pS is null) or (pPo is null) then
    return null;
  else
    return to_char(pS, ''hh24:mi'') || ''-'' || to_char(pPo, ''hh24:mi'');
  end if;
END;
';


ALTER FUNCTION mir.zgetspo(ps timestamp without time zone, ppo timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 2203 (class 1255 OID 17558)
-- Dependencies: 5396 14
-- Name: zgetstart(character varying, character varying, character varying, integer, integer, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetstart(preceptiontype character varying, ppresctype character varying, psysuser character varying, pismin integer, paddday integer, plpu character varying) RETURNS date
    LANGUAGE plpgsql
    AS '
DECLARE
  RES DATE;
BEGIN
  IF (PRECEPTIONTYPE IS NULL) THEN
    IF (PISMIN = 1) THEN
      SELECT MIN(E.STARTON)
        INTO RES
        FROM EVENT E
       WHERE E.OID IN
             (SELECT EV.OID
                FROM SCHEDULE SC, EVENT EV
               WHERE 1 = 1
                 AND PPRESCTYPE = SC.PRESCTYPE
                 AND PSYSUSER = SC.SYSUSER
                 AND EV.OID = SC.OID
                 AND SC.LPU = PLPU
                 AND EV.STARTON >= CAST(CURRENT_DATE + cast( cast(PADDDAY as varchar ) || '' day'' as interval ) AS DATE)
                 AND EV.STARTON <
                     CAST(CURRENT_DATE + cast( cast(PADDDAY + 1 as varchar ) || '' day'' as interval ) AS DATE)
                    --Edited by Spasskiy S.N. не отображаем 00:00
                 AND EV.STARTON <> date_TRUNC(''day'', EV.STARTON));
    ELSE
      SELECT MAX(E.ENDON)
        INTO RES
        FROM EVENT E
       WHERE E.OID IN
             (SELECT EV.OID
                FROM SCHEDULE SC, EVENT EV
               WHERE 1 = 1
                 AND PPRESCTYPE = SC.PRESCTYPE
                 AND PSYSUSER = SC.SYSUSER
                 AND EV.OID = SC.OID
                 AND SC.LPU = PLPU
                 AND EV.STARTON >= CAST((CURRENT_DATE + cast( cast(PADDDAY as varchar ) || '' day'' as interval )) AS DATE)
                 AND EV.STARTON <
                     CAST(CURRENT_DATE + cast( cast(PADDDAY + 1 as varchar ) || '' day'' as interval ) AS DATE)
                    --Edited by Spasskiy S.N. не отображаем 00:00
                 AND EV.STARTON <> date_TRUNC(''day'', EV.STARTON));
    END IF;
  ELSE
    IF (PISMIN = 1) THEN
      SELECT MIN(E.STARTON)
        INTO RES
        FROM EVENT E
       WHERE E.OID IN
             (SELECT EV.OID
                FROM SCHEDULE SC, EVENT EV
               WHERE 1 = 1
                 AND PPRESCTYPE = SC.PRESCTYPE
                 AND PSYSUSER = SC.SYSUSER
                 AND SC.ISNAPRONLY = PRECEPTIONTYPE
                 AND EV.OID = SC.OID
                 AND SC.LPU = PLPU
                 AND EV.STARTON >= CAST(CURRENT_DATE + cast( cast(PADDDAY as varchar ) || '' day'' as interval ) AS DATE)
                 AND EV.STARTON <
                     CAST(CURRENT_DATE + cast( cast(PADDDAY + 1 as varchar ) || '' day'' as interval ) AS DATE)
                    --Edited by Spasskiy S.N. не отображаем 00:00
                 AND EV.STARTON <> date_TRUNC(''day'', EV.STARTON));
    ELSE
      SELECT MAX(E.ENDON)
        INTO RES
        FROM EVENT E
       WHERE E.OID IN
             (SELECT EV.OID
                FROM SCHEDULE SC, EVENT EV
               WHERE 1 = 1
                 AND PPRESCTYPE = SC.PRESCTYPE
                 AND PSYSUSER = SC.SYSUSER
                 AND SC.ISNAPRONLY = PRECEPTIONTYPE
                 AND EV.OID = SC.OID
                 AND SC.LPU = PLPU
                 AND EV.STARTON >= CAST((CURRENT_DATE + cast( cast(PADDDAY as varchar ) || '' day'' as interval )) AS DATE)
                 AND EV.STARTON <
                     CAST(CURRENT_DATE + cast( cast(PADDDAY + 1 as varchar ) || '' day'' as interval ) AS DATE)
                    --Edited by Spasskiy S.N. не отображаем 00:00
                 AND EV.STARTON <> date_TRUNC(''day'', EV.STARTON));
    END IF;
  END IF;
  RETURN RES;
END;
';


ALTER FUNCTION mir.zgetstart(preceptiontype character varying, ppresctype character varying, psysuser character varying, pismin integer, paddday integer, plpu character varying) OWNER TO postgres;

--
-- TOC entry 2204 (class 1255 OID 17559)
-- Dependencies: 5396 14
-- Name: zgetstart2(character, character varying, character varying, character varying, integer, character varying, timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zgetstart2(potdel character, preceptiontype character varying, ppresctype character varying, psysuser character varying, paddday integer, plpu character varying, pfromdate timestamp with time zone, pregionsysdate timestamp with time zone DEFAULT now()) RETURNS character varying
    LANGUAGE plpgsql
    AS '
DECLARE
  v_min TIMESTAMP;
  v_max TIMESTAMP;
  v_cnt VARCHAR(100);
  v_holiday numeric;
  c record;
BEGIN
select count(s.isholiday) into v_holiday from mir.sotrworkday s where s.dates=date_TRUNC(''day'', pFromDate) + cast( cast( PADDDAY as varchar ) || '' day'' as interval )
and s.sysuser=psysuser and s.isholiday =1;
if(v_holiday=0) then
  select min(s.starton), max(s.endon) into v_min, v_max from mir.schedule s
  where s.sysuser=psysuser and s.starton<>s.endon and s.otdel=potdel and s.presctype=ppresctype and s.financingtype=0
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = date_TRUNC(''day'', pFromDate) + cast( cast( PADDDAY as varchar ) || '' day'' as interval );
  select count(*) into v_cnt from mir.schedule s
  where s.sysuser=psysuser and s.starton<>s.endon and s.otdel=potdel and s.presctype=ppresctype
  and to_date(to_char(s.starton, ''dd.mm.yyyy''), ''dd.mm.yyyy'') = date_TRUNC(''day'', pFromDate) + cast( cast( PADDDAY as varchar ) || '' day'' as interval )
  and s.insite=1 and s.isbron=0 and s.state=0 and s.financingtype=0;
  return to_char(v_min, ''hh24:mi'')||''-''||to_char(v_max, ''hh24:mi'')||''(''||v_cnt||'')'';
  else 
  return null;
  end if;
END;
';


ALTER FUNCTION mir.zgetstart2(potdel character, preceptiontype character varying, ppresctype character varying, psysuser character varying, paddday integer, plpu character varying, pfromdate timestamp with time zone, pregionsysdate timestamp with time zone) OWNER TO postgres;

--
-- TOC entry 2205 (class 1255 OID 17560)
-- Dependencies: 5396 14
-- Name: zinczapisstatictics(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinczapisstatictics() RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  vCnt varchar(1000);
  i integer;
begin
 begin
   select mir.zGetSettingValue(''ZAPIS_ALL_CNT'') into vCnt;
   if (vCnt is null) then
     i := 0;
   else
     i := vCnt;
   end if;

   perform mir.zinsertsetting(''ZAPIS_ALL_CNT'',i+1,''Сколько записано всего'');
  exception
    when others then
      null;
  end;

  begin
   select mir.zGetSettingValue(''ZAPIS_DAY_CNT'') into vCnt;
   if (vCnt is null) then
     i := 0;
   else
     i := vCnt;
   end if;
    perform mir.zinsertsetting(''ZAPIS_DAY_CNT'',i+1,''Сколько записано сегодня'');
  exception
    when others then
      null;
  end;
end;
';


ALTER FUNCTION mir.zinczapisstatictics() OWNER TO postgres;

--
-- TOC entry 2206 (class 1255 OID 17561)
-- Dependencies: 5396 14
-- Name: zinsertambtalon(date, character varying, character varying, integer, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertambtalon(popendate date, parriveplace character varying, parrivereason character varying, pambtalonsost integer, pinsurance character varying, ppacient character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vOID       mir.ambtalon.oid%type;
  vOID_PACIENT mir.pacient.oid%type;
BEGIN
  vOID:= lower(MIR.NEW_UUID());

   select max(e.oid)
      into vOID_PACIENT
   from pacient e where e.people=ppacient;

        if (vOID_PACIENT is null)   then
            vOID_PACIENT:= lower(MIR.NEW_UUID());

        insert into  mir.pacient (oid,people)
        values (vOID_PACIENT,ppacient);

  end if;


  insert into mir.ambtalon(oid,opendate,arriveplace,arrivereason,ambtalonsost,insurance,pacient)
  values  (vOID,popendate,parriveplace,parrivereason,pambtalonsost,pinsurance,vOID_PACIENT);
  return vOID;
END;

';


ALTER FUNCTION mir.zinsertambtalon(popendate date, parriveplace character varying, parrivereason character varying, pambtalonsost integer, pinsurance character varying, ppacient character varying) OWNER TO postgres;

--
-- TOC entry 2207 (class 1255 OID 17562)
-- Dependencies: 5396 14
-- Name: zinserterrorclientmessage(text, character varying, character varying, character varying, character varying, numeric, numeric, character varying, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinserterrorclientmessage(pmess text, pcontact character varying, pip character varying, puserasp character varying, pformname character varying, pnum numeric, ptypemessage numeric, pemail character varying, plpu character DEFAULT NULL::bpchar, pregion character DEFAULT NULL::bpchar) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  insert into mir.errorclientmessages
    (mess,
     contact,
     oid,
     ip,
     userasp,
     formname,
     num,
     typemessage,
     email,
     lpu,
     rismessage,
     region)
  values
    (pmess,
     pcontact,
     mir.new_uuid(),
     pip,
     puserasp,
     pformname,
     null,
     ptypemessage,
     pemail,
     plpu,
     1,
     pregion);
end;
';


ALTER FUNCTION mir.zinserterrorclientmessage(pmess text, pcontact character varying, pip character varying, puserasp character varying, pformname character varying, pnum numeric, ptypemessage numeric, pemail character varying, plpu character, pregion character) OWNER TO postgres;

--
-- TOC entry 2208 (class 1255 OID 17563)
-- Dependencies: 5396 14
-- Name: zinsertnewhomevisit(character varying, character varying, character varying, date, integer, character varying, character varying, character varying, character varying, character varying, date, character varying, character varying, integer, integer, character varying, date, character varying, character varying, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertnewhomevisit(plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, psex integer, ptelsot1 character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pregistdate date, ppeople character varying, psotr character varying, pisdone integer, pisskhelp integer, pcomplaint character varying, pvisitdate date, plpu character varying, pemail character varying, ptelhome character varying, pmestowork character varying, pcomment character varying, pdistrict character varying, precismade integer) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vOID       mir.people.oid%type;-- GUID нового people
  vOIDHV     mir.homevisit.oid%type;  -- GUID нового вызова
  vAddressEx mir.addressex.oid%type; -- GUID адреса
BEGIN
  vOID := PPEOPLE;
  if length(vOID)>0 then
   --Указан  oid people делаем update People
      select max(addressex2) into vAddressEx from mir.people where oid=vOID;
      if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
              vAddressEx := lower(MIR.NEW_UUID());
              insert into mir.AddressEx
                                  (Oid, House, Building, Flat, Tkladr)
                            values(vAddressEx, pHOUSE, pBUILDING, pFLAT, pTKLADR);
      else

               update  mir.AddressEx
                    set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
               where Oid=vAddressEx;

      end if;

      update mir.People
         set LastName=pLastname,FirstName=pFirstname,MiddleName=pMIddlename,Birthday=pBirthday,
             TelSot1=pTELSOT1,sex=psex,addressex2=vAddressEx,email=PEMAIL,TELHOME=PTELHOME
      where Oid=vOID;
  else
   --создаем  oid people
    vOID := lower(MIR.NEW_UUID());
    vAddressEx := lower(MIR.NEW_UUID());

  insert into mir.AddressEx
    (Oid, House, Building, Flat, Tkladr)
  values
    (vAddressEx, pHOUSE, pBUILDING, pFLAT, pTKLADR);

  insert into mir.People
    (Oid, TelSot1,sex,addressex2,email,TELHOME,mestorab, LastName, FirstName, MiddleName, Birthday)
  values
    (vOID, pTELSOT1,psex,vAddressEx,PEMAIL,PTELHOME,PMESTOWORK, pLastname, pFirstname, pMIddlename, pBirthday);

  end if;

 vOIDHV:=lower(MIR.NEW_UUID());



insert into mir.homevisit (
    OID,
    REGISTDATE,PEOPLE,SOTR,ISDONE,ISSKHELP,COMPLAINT,
    VISITDATE,OPTIMISTICLOCKFIELD,LPU,COMMENT,district,RECISMADE)
values
 (vOIDHV
 ,PREGISTDATE

 ,vOID
 ,PSOTR
 ,PISDONE
 ,PISSKHELP
 ,PCOMPLAINT
 ,PVISITDATE
 ,0
 ,PLPU,PCOMMENT,PDISTRICT,PRECISMADE);


   return vOIDHV;

END;
';


ALTER FUNCTION mir.zinsertnewhomevisit(plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, psex integer, ptelsot1 character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pregistdate date, ppeople character varying, psotr character varying, pisdone integer, pisskhelp integer, pcomplaint character varying, pvisitdate date, plpu character varying, pemail character varying, ptelhome character varying, pmestowork character varying, pcomment character varying, pdistrict character varying, precismade integer) OWNER TO postgres;

--
-- TOC entry 2209 (class 1255 OID 17564)
-- Dependencies: 5396 14
-- Name: zinsertnewsysuser(); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertnewsysuser() RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vOID       mir.people.oid%type;
  v_region mir.vregion.oid%type;
BEGIN
  vOID := lower(MIR.NEW_UUID());
  insert into mir.people
    (Oid)
  values
    (vOID);

  insert into mir.sysuser (oid) values (vOID);

  select max(r.region)
    into v_region
    from mir.sysuser_region r
   where r.sysuser = mir.getcurrentsysuser();
  if (v_region is not null) then
    insert into mir.sysuser_region
      (oid, sysuser, region)
    values
      (mir.new_uuid(), vOID, v_region);
  end if;

   return vOID;
END;
';


ALTER FUNCTION mir.zinsertnewsysuser() OWNER TO postgres;

--
-- TOC entry 2211 (class 1255 OID 17565)
-- Dependencies: 5396 14
-- Name: zinsertpeoplekartaplace(character, character varying, character varying, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertpeoplekartaplace(pschedule character, pcomment character varying, pkartaplacesyn character varying, plpu character) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  v_people mir.schedule.people%type;
begin
  select max(s.people)
  into v_people
  from mir.schedule s where s.oid = pSchedule;
  if (v_people is not null) then
    delete from mir.peoplekartaplace k where k.people = v_people and k.lpu = plpu;
    insert into mir.peoplekartaplace
           (oid, people, COMMENT, kartaplace, lpu)
    values
           (mir.new_uuid(), v_people, pComment, mir.zgetdictionaryoid(pkartaplacesyn), plpu);
  end if;
end;

';


ALTER FUNCTION mir.zinsertpeoplekartaplace(pschedule character, pcomment character varying, pkartaplacesyn character varying, plpu character) OWNER TO postgres;

--
-- TOC entry 2212 (class 1255 OID 17566)
-- Dependencies: 5396 14
-- Name: zinsertpolis(character varying, date, date, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertpolis(v_people character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_autocreatewebuser integer DEFAULT 1) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  VOID MIR.INSURANCE.OID%TYPE;
BEGIN
  VOID := LOWER(MIR.NEW_UUID());
  
  INSERT INTO MIR.INSURANCE
    (OID,
     PEOPLE,
     SER,
     NUM,
     BEGINDATE,
     ENDDATE,
     COMPANY,
     pay_type,
     OPTIMISTICLOCKFIELD)
  VALUES
    (VOID,
     V_PEOPLE,
     V_SER,
     V_NUM,
     V_BEGINDATE,
     V_ENDDATE,
     V_COMPANY,
     V_pay_type,
     0);
     
  IF (V_AUTOCREATEWEBUSER = 1) THEN
    perform MIR.WEBUSER_DOAUTOCREATEWEBUSER(V_PEOPLE);
  END IF;

  RETURN VOID;
END;
';


ALTER FUNCTION mir.zinsertpolis(v_people character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_autocreatewebuser integer) OWNER TO postgres;

--
-- TOC entry 2213 (class 1255 OID 17567)
-- Dependencies: 5396 14
-- Name: zinsertpolis2(character varying, date, date, character varying, character varying, character varying, character varying, integer, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertpolis2(v_people character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_notend integer, v_autocreatewebuser integer DEFAULT 1) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  VOID MIR.INSURANCE.OID%TYPE;
BEGIN
  VOID := LOWER(MIR.NEW_UUID());
  
  INSERT INTO MIR.INSURANCE
    (OID,
     PEOPLE,
     SER,
     NUM,
     BEGINDATE,
     ENDDATE,
     COMPANY,
     pay_type,
     NOTENDDATE)
  VALUES
    (VOID,
     V_PEOPLE,
     V_SER,
     V_NUM,
     V_BEGINDATE,
     V_ENDDATE,
     V_COMPANY,
     V_pay_type,
     v_notend);
     
  IF (V_AUTOCREATEWEBUSER = 1) THEN
    perform MIR.WEBUSER_DOAUTOCREATEWEBUSER(V_PEOPLE);
  END IF;

  RETURN VOID;
END;
';


ALTER FUNCTION mir.zinsertpolis2(v_people character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_notend integer, v_autocreatewebuser integer) OWNER TO postgres;

--
-- TOC entry 2214 (class 1255 OID 17568)
-- Dependencies: 5396 14
-- Name: zinsertsetting(character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertsetting(pparam character varying, pvalue character varying, pdescription character varying) RETURNS void
    LANGUAGE plpgsql
    AS '
declare
  vOid mir.settings.oid%type;
begin
  select max(Oid)
    into vOid
    from mir.settings s
   where s.param = pParam;
  if (vOid is null) then
    insert into mir.settings
      (oid,
       param,
       valuepar,
       description,
       settingstate)
    values
      (mir.new_uuid(), pParam, pValue, pDescription, 1);
  else
    update mir.settings s set s.valuepar = pValue where Oid = vOid;
  end if;
end;
';


ALTER FUNCTION mir.zinsertsetting(pparam character varying, pvalue character varying, pdescription character varying) OWNER TO postgres;

--
-- TOC entry 2215 (class 1255 OID 17569)
-- Dependencies: 5396 14
-- Name: zinsertwebhomevisit(character varying, character, character varying, numeric, character, character); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zinsertwebhomevisit(pzalobi character varying, plpu character, pcomment character varying, precismade numeric, ppeople character, psotr character) RETURNS character
    LANGUAGE plpgsql
    AS '
declare
  --vOID       mir.party.oid%TYPE;
  vOID       mir.homevisit.oid%TYPE;
  --vAddressEx mir.addressex.oid%TYPE;
  vDistrict  VARCHAR(32000);
  vSQL       VARCHAR(32000);
  --TYPE refcursor IS REF CURSOR;
  v_refcursor refcursor;
  v_sysuser   mir.homevisit.sotr%TYPE;
  v_district mir.district.oid%type;

  v_kladr mir.tkladrspr.oid%type;
  v_house mir.addressex.house%type;
BEGIN
  select max(a.tkladr), max(a.house)
  into v_kladr, v_house
  from mir.people p, mir.addressex a
  where p.oid = ppeople
        and p.addressex2 = a.oid;
  SELECT MAX(case when q.d is NULL then null
                  else '''''''' || REPLACE(q.d, '';'', '''''','''''') || ''-1''''''
             end)
    INTO vDistrict
    FROM (SELECT MIR.GET_DISTRICT_BY_KLADR2(v_kladr, v_house) d) q
   WHERE d IS NOT NULL;
/*
  IF (vDistrict IS NOT NULL) THEN
    vSQL := '' SELECT p.oid as sysuser, b.oid district
                        FROM mir.district b
                        left join mir.company d on d.oid = b.otdel
                        left join mir.dictionary d3 on d3.oid= b.helptype
                        left join mir.sotrsotrs_districtdistrict s on s.district = b.oid
                        left join mir.sotr ss on ss.oid = s.sotrs
                        left join mir.people p  on p.oid=ss.sysuser
                        where
                        d.oid = :LPU
                        and b.oid in ('' || vDistrict ||
            '') and sysuser is not null '';
    OPEN v_refcursor FOR vsql
     -- USING plpu;
    LOOP
      FETCH v_refcursor
        INTO v_sysuser, v_district;
      EXIT WHEN v_refcursor%NOTFOUND;
    END LOOP;
    CLOSE v_refcursor;
  ELSE
    v_sysuser := NULL;
  END IF;
  if (v_district is null) then
    vSQL := '' SELECT b.oid district
                        FROM mir.district b, mir.company d
                        where
                        d.oid = b.otdel
                        and d.oid = :LPU
                        and b.oid in ('' || vDistrict ||
            '') '';
    OPEN v_refcursor FOR vsql
      --USING plpu;
    LOOP
      FETCH v_refcursor
        INTO v_district;
      EXIT WHEN v_refcursor%NOTFOUND;
    END LOOP;
    CLOSE v_refcursor;
  end if;*/

 
  vOID := lower(MIR.NEW_UUID());
  INSERT INTO mir.HomeVisit
    (OID,
     RegistDate,
     VisitDate,
     People,
     Complaint,
     LPU,
     COMMENT,
     Sotr,
     RecIsMade,
     District)
  VALUES
    (vOID,
     CURRENT_TIMESTAMP,
     CURRENT_TIMESTAMP,
     pPeople,
     pZalobi,
     pLPU,
     pComment,
     psotr,
     pRecIsMade,
     v_district);
     
  perform mir.zIncZapisStatictics();

  RETURN vOID;
END;
';


ALTER FUNCTION mir.zinsertwebhomevisit(pzalobi character varying, plpu character, pcomment character varying, precismade numeric, ppeople character, psotr character) OWNER TO postgres;

--
-- TOC entry 2216 (class 1255 OID 17570)
-- Dependencies: 5396 14
-- Name: zschedulemarkcall(character, numeric); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zschedulemarkcall(pschedule character, pval numeric) RETURNS void
    LANGUAGE plpgsql
    AS '
begin
  update mir.schedule s set s.schedulecallstate = pVal, 
  s.schedulecallstatedate = CURRENT_DATE, s.schedulecallstatesysuser = mir.GetCurrentSysUser()
  where s.oid = pSchedule;
end;

';


ALTER FUNCTION mir.zschedulemarkcall(pschedule character, pval numeric) OWNER TO postgres;

--
-- TOC entry 2217 (class 1255 OID 17571)
-- Dependencies: 5396 14
-- Name: zupdatehomevisit(character varying, character varying, character varying, date, integer, character varying, character varying, character varying, character varying, character varying, date, character varying, character varying, integer, integer, character varying, date, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zupdatehomevisit(plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, psex integer, ptelsot1 character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pregistdate date, ppeople character varying, psotr character varying, pisdone integer, pisskhelp integer, pcomplaint character varying, pvisitdate date, plpu character varying, poidhv character varying, pemail character varying, ptelhome character varying, pmestowork character varying, pcomment character varying, pdistrict character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vOID     mir.people.oid%type;
  vOIDHV     mir.homevisit.oid%type;  -- GUID нового вызова
  vAddressEx mir.addressex.oid%type; -- GUID адреса
BEGIN
  vOID := PPEOPLE;
  if length(vOID)>0 then
   --Указан  oid people делаем update People
      select max(addressex2) into vAddressEx from mir.people where oid=vOID;
      if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
              vAddressEx := lower(MIR.NEW_UUID());
              insert into mir.AddressEx
                                  (Oid, House, Building, Flat, Tkladr)
                            values(vAddressEx, pHOUSE, pBUILDING, pFLAT, pTKLADR);
      else

               update  mir.AddressEx
                    set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
               where Oid=vAddressEx;

      end if;

      update mir.People
        set LastName=pLastname,FirstName=pFirstname,MiddleName=pMIddlename,Birthday=pBirthday,
            TelSot1=pTELSOT1,sex=psex,addressex2=vAddressEx,email=PEMAIL,TELHOME=PTELHOME,mestorab=PMESTOWORK
      where Oid=vOID;
  end if;

 vOIDHV:=POIDHV;

update mir.homevisit
set
REGISTDATE=PREGISTDATE,
PEOPLE=vOID,
SOTR=PSOTR,
ISDONE=PISDONE,
ISSKHELP=PISSKHELP,
COMPLAINT=PCOMPLAINT,
VISITDATE=PVISITDATE,
OPTIMISTICLOCKFIELD=0,
LPU=PLPU,
COMMENT=PCOMMENT,
DISTRICT=PDISTRICT
where OID=vOIDHV;
return vOIDHV;
END;

';


ALTER FUNCTION mir.zupdatehomevisit(plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, psex integer, ptelsot1 character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pregistdate date, ppeople character varying, psotr character varying, pisdone integer, pisskhelp integer, pcomplaint character varying, pvisitdate date, plpu character varying, poidhv character varying, pemail character varying, ptelhome character varying, pmestowork character varying, pcomment character varying, pdistrict character varying) OWNER TO postgres;

--
-- TOC entry 2219 (class 1255 OID 17572)
-- Dependencies: 5396 14
-- Name: zupdatepolis(character varying, date, date, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zupdatepolis(v_oid character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  V_PEOPLE MIR.INSURANCE.PEOPLE%TYPE;
BEGIN
  /*
  insert into insurance
    (oid,
  --   people,
     ser,
     num,
     begindate,
     enddate,
     company,
     pay_type,
     optimisticlockfield,
    )
  values
    (v_oid,
  --   v_people,
     v_ser,
     v_num,
     v_begindate,
     v_enddate,
     v_company,
     v_pay_type,
     0,
     );
  */

  UPDATE mir.insurance
     SET --       people = v_people,
              ser = v_ser,
         num       = v_num,
         begindate = v_begindate,
         enddate   = v_enddate,
         company   = v_company,
         pay_type = v_pay_type
  --      , optimisticlockfield = v_optimisticlockfield,
  --       gcrecord = v_gcrecord
   WHERE OID = v_oid
  RETURNING people INTO V_PEOPLE;
  
  perform MIR.WEBUSER_DOAUTOCREATEWEBUSER(V_PEOPLE);
  
  RETURN v_oid;
END;
';


ALTER FUNCTION mir.zupdatepolis(v_oid character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying) OWNER TO postgres;

--
-- TOC entry 2220 (class 1255 OID 17573)
-- Dependencies: 5396 14
-- Name: zupdatepolis2(character varying, date, date, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zupdatepolis2(v_oid character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_notend integer) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  V_PEOPLE MIR.INSURANCE.PEOPLE%TYPE;
BEGIN

  UPDATE mir.insurance
     SET --       people = v_people,
              ser = v_ser,
         num       = v_num,
         begindate = v_begindate,
         enddate   = v_enddate,
         company   = v_company,
         pay_type = v_pay_type,
         notenddate = v_notend
  --      , optimisticlockfield = v_optimisticlockfield,
  --       gcrecord = v_gcrecord
   WHERE OID = v_oid
  RETURNING people INTO V_PEOPLE;
  
  perform MIR.WEBUSER_DOAUTOCREATEWEBUSER(V_PEOPLE);
  RETURN v_oid;
END;
';


ALTER FUNCTION mir.zupdatepolis2(v_oid character varying, v_begindate date, v_enddate date, v_ser character varying, v_num character varying, v_company character varying, v_pay_type character varying, v_notend integer) OWNER TO postgres;

--
-- TOC entry 2221 (class 1255 OID 17574)
-- Dependencies: 5396 14
-- Name: zupdatesysuser(character varying, character varying, character varying, character varying, date, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, integer, character varying, integer, integer, integer, character varying, character varying, character varying); Type: FUNCTION; Schema: mir; Owner: postgres
--

CREATE FUNCTION zupdatesysuser(psysuser character varying, plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, ptelsot1 character varying, ptelsot2 character varying, ptelhome character varying, ptelwork character varying, pemail character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pusername character varying, pisactive integer, pcodeuser character varying, pisadministrator integer, pshowinsite integer, psex integer, ppeopledoctype character varying, ppeopledocser character varying, ppeopledocnum character varying) RETURNS character
    LANGUAGE plpgsql
    AS '
DECLARE
  vOID     mir.people.oid%type;
--  vOIDHV     mir.homevisit.oid%type;  -- GUID нового вызова
  vAddressEx mir.addressex.oid%type; -- GUID адреса
BEGIN
  vOID := pSYSUSER;
  if length(vOID)>0 then
   --Указан  oid people делаем update People
      select max(addressex2) into vAddressEx from mir.people where oid=vOID;

      if vAddressEx is null then -- Если не заполнено пле КЛАДР  создаем новое
              vAddressEx := lower(MIR.NEW_UUID());
              
              insert into mir.AddressEx
                                  (Oid, House, Building, Flat, Tkladr)
                            values(vAddressEx, pHOUSE, pBUILDING, pFLAT, pTKLADR);
      else
               update  mir.AddressEx
                    set House=pHOUSE,Building=pBUILDING, Flat=pFLAT, Tkladr=pTKLADR
               where Oid=vAddressEx;
      end if;

-- update mir.People
      update mir.People
         set TelSot1    = pTELSOT1,
             sex        = psex,
             addressex2 = vAddressEx,
             email      = PEMAIL,
             TELHOME    = PTELHOME,
             TELSOT2    = PTELSOT2,
             TELWORK    = PTELWORK,
             PEOPLEDOCTYPE = pPEOPLEDOCTYPE,
             PEOPLEDOCSER = pPEOPLEDOCSER,
             PEOPLEDOCNUM = pPEOPLEDOCNUM,
             LastName=pLastname,
             FirstName=pFirstname,
             MiddleName=pMIddlename,
             Birthday=pBirthday
       where Oid = vOID;

       update mir.sysuser
          set username = pUSERNAME,
              isactive = PISACTIVE,
              codeuser = PCODEUSER,
              isadministrator = PISADMINISTRATOR,
              SHOWINSITE = PSHOWINSITE

        where oid = vOID;
  end if;
return pSYSUSER;
END;

';


ALTER FUNCTION mir.zupdatesysuser(psysuser character varying, plastname character varying, pmiddlename character varying, pfirstname character varying, pbirthday date, ptelsot1 character varying, ptelsot2 character varying, ptelhome character varying, ptelwork character varying, pemail character varying, ptkladr character varying, phouse character varying, pbuilding character varying, pflat character varying, pusername character varying, pisactive integer, pcodeuser character varying, pisadministrator integer, pshowinsite integer, psex integer, ppeopledoctype character varying, ppeopledocser character varying, ppeopledocnum character varying) OWNER TO postgres;

SET search_path = mypacs, pg_catalog;

--
-- TOC entry 2286 (class 1255 OID 57524)
-- Dependencies: 5396 17
-- Name: f_conclusions(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_conclusions() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_conclusions_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_conclusions() OWNER TO postgres;

--
-- TOC entry 2282 (class 1255 OID 57551)
-- Dependencies: 5396 17
-- Name: f_devices(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_devices() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_devices_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_devices() OWNER TO postgres;

--
-- TOC entry 2294 (class 1255 OID 59904)
-- Dependencies: 5396 17
-- Name: f_diagnoz(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_diagnoz() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_diagnoz_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_diagnoz() OWNER TO postgres;

--
-- TOC entry 2283 (class 1255 OID 57574)
-- Dependencies: 5396 17
-- Name: f_events(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_events() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_events_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_events() OWNER TO postgres;

--
-- TOC entry 2274 (class 1255 OID 57708)
-- Dependencies: 5396 17
-- Name: f_events_rsnd_del(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_events_rsnd_del() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  delete from mypacs.events_rsnd_err_lst where fk_id_rsnd=old.fk_id;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_events_rsnd_del() OWNER TO postgres;

--
-- TOC entry 2287 (class 1255 OID 57710)
-- Dependencies: 5396 17
-- Name: f_events_rsnd_ins(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_events_rsnd_ins() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_events_rsnd_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_events_rsnd_ins() OWNER TO postgres;

--
-- TOC entry 2288 (class 1255 OID 57753)
-- Dependencies: 5396 17
-- Name: f_events_wl(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_events_wl() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_eventswl_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_events_wl() OWNER TO postgres;

--
-- TOC entry 2289 (class 1255 OID 57751)
-- Dependencies: 5396 17
-- Name: f_hospitals(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_hospitals() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.p_id is null then
    new.p_id=nextval(''mypacs.gen_hospitals_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_hospitals() OWNER TO postgres;

--
-- TOC entry 2285 (class 1255 OID 57749)
-- Dependencies: 5396 17
-- Name: f_patients_dl(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_patients_dl() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  delete from mypacs.studies where p_pid = old.p_pid;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_patients_dl() OWNER TO postgres;

--
-- TOC entry 2290 (class 1255 OID 57747)
-- Dependencies: 5396 17
-- Name: f_rules(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_rules() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_rules_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_rules() OWNER TO postgres;

--
-- TOC entry 2295 (class 1255 OID 57760)
-- Dependencies: 5396 17
-- Name: f_studies_bd(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_studies_bd() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  delete from mypacs.series where studyuid = old.studyuid;
  delete from mypacs.images where studyuid = old.studyuid;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_studies_bd() OWNER TO postgres;

--
-- TOC entry 2291 (class 1255 OID 57766)
-- Dependencies: 5396 17
-- Name: f_templates(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_templates() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_templates_id'');
    new.fn_is_del = 0;
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_templates() OWNER TO postgres;

--
-- TOC entry 2292 (class 1255 OID 57770)
-- Dependencies: 5396 17
-- Name: f_users(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_users() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_users_id'');
    new.fn_del = 0;
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_users() OWNER TO postgres;

--
-- TOC entry 2293 (class 1255 OID 57777)
-- Dependencies: 5396 17
-- Name: f_worklist(); Type: FUNCTION; Schema: mypacs; Owner: postgres
--

CREATE FUNCTION f_worklist() RETURNS trigger
    LANGUAGE plpgsql
    AS '
BEGIN
  if new.fk_id is null then
    new.fk_id=nextval(''mypacs.gen_worklist_id'');
  end if;
  RETURN new;
END;
';


ALTER FUNCTION mypacs.f_worklist() OWNER TO postgres;

SET search_path = mir, pg_catalog;

--
-- TOC entry 212 (class 1259 OID 17855)
-- Dependencies: 6785 6786 14
-- Name: address_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE address_type (
    oid character(36) NOT NULL,
    address_type_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    gasurf_id integer,
    CONSTRAINT "ck_address_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.address_type OWNER TO postgres;

--
-- TOC entry 11734 (class 0 OID 0)
-- Dependencies: 212
-- Name: TABLE address_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE address_type IS 'Тип адреса: фактический, юридический, прописки, постоянный, временный, адрес бенифициара и т.д.';


--
-- TOC entry 11735 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.oid IS 'oid';


--
-- TOC entry 11736 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.address_type_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.address_type_name IS 'address_type_name';


--
-- TOC entry 11737 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 11738 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 11739 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 11740 (class 0 OID 0)
-- Dependencies: 212
-- Name: COLUMN address_type.gasurf_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN address_type.gasurf_id IS 'Идентификатор сторонней системы';


--
-- TOC entry 213 (class 1259 OID 17863)
-- Dependencies: 6787 14
-- Name: addressex; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE addressex (
    oid character(36) NOT NULL,
    tkladr character(36),
    address_type character(36),
    house character varying(100),
    corps character varying(255),
    building character varying(100),
    flat character varying(100),
    addr_str character varying,
    registrationdate date,
    sysdate timestamp(0) without time zone DEFAULT now()
);


ALTER TABLE mir.addressex OWNER TO postgres;

--
-- TOC entry 11741 (class 0 OID 0)
-- Dependencies: 213
-- Name: TABLE addressex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE addressex IS 'Адреса';


--
-- TOC entry 11742 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.oid IS 'oid';


--
-- TOC entry 11743 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.tkladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.tkladr IS 'tkladr';


--
-- TOC entry 11744 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.address_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.address_type IS 'тип адреса';


--
-- TOC entry 11745 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.house; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.house IS 'дом';


--
-- TOC entry 11746 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.corps; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.corps IS 'корпус';


--
-- TOC entry 11747 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.building IS 'строение';


--
-- TOC entry 11748 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.flat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.flat IS 'квартира';


--
-- TOC entry 11749 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.addr_str; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.addr_str IS 'Строка адреса для запросов by Spasskiy S.N. 02.08.2011';


--
-- TOC entry 11750 (class 0 OID 0)
-- Dependencies: 213
-- Name: COLUMN addressex.registrationdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex.registrationdate IS 'Дата регистрации';


--
-- TOC entry 214 (class 1259 OID 17870)
-- Dependencies: 6788 6789 6790 14
-- Name: people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people (
    oid character(36) NOT NULL,
    dtcreation date,
    id numeric,
    sex numeric DEFAULT 2,
    livein numeric,
    sstate numeric,
    pacient character(36),
    addressex1 character(36),
    addressex2 character(36),
    lpu character(36),
    email character varying(100),
    telhome character varying(100),
    telwork character varying(100),
    telsot1 character varying(100),
    telsot2 character varying(100),
    district character(36),
    company character(36),
    peopledoctype character(36),
    peopledocser character varying(100),
    peopledocnum character varying(100),
    dispuchet numeric(1,0),
    benefittype character(36),
    benefitdoctype character(36),
    benefitdocnum character varying(100),
    profession character(36),
    peoplepost character(36),
    dependant numeric(1,0),
    webmail character varying(100),
    webphone character varying(100),
    region character(36),
    category character(36),
    placework character varying(250),
    firstname character varying(100),
    lastname character varying(100),
    middlename character varying(100),
    birthday date,
    login character varying(100),
    waslogin numeric(1,0),
    password character varying(100),
    deathdate date,
    gasurf_oid character varying(255),
    peopledocgive character varying(255),
    peopledocgivedate date,
    phonecode character varying(100),
    karta character varying(255),
    importcode character varying(255) DEFAULT 0,
    sysdate timestamp(0) without time zone DEFAULT now(),
    description character varying(255),
    snils2 numeric(11,0),
    snils character varying(100),
    issuedate date,
    issuedby character varying(250)
);


ALTER TABLE mir.people OWNER TO postgres;

--
-- TOC entry 11751 (class 0 OID 0)
-- Dependencies: 214
-- Name: TABLE people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people IS 'пипл';


--
-- TOC entry 11752 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.oid IS 'oid';


--
-- TOC entry 11753 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.dtcreation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.dtcreation IS 'dtcreation';


--
-- TOC entry 11754 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.id IS 'id';


--
-- TOC entry 11755 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.sex IS 'sex';


--
-- TOC entry 11756 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.livein; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.livein IS 'livein';


--
-- TOC entry 11757 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.sstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.sstate IS 'sstate';


--
-- TOC entry 11758 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.pacient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.pacient IS 'pacient';


--
-- TOC entry 11759 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.addressex1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.addressex1 IS 'юридический адрес, адрес прописки';


--
-- TOC entry 11760 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.addressex2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.addressex2 IS 'Физический адрес, адрес проживания';


--
-- TOC entry 11761 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.lpu IS 'lpu';


--
-- TOC entry 11762 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.email IS 'email';


--
-- TOC entry 11763 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.telhome; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.telhome IS 'telhome';


--
-- TOC entry 11764 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.telwork; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.telwork IS 'telwork';


--
-- TOC entry 11765 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.telsot1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.telsot1 IS 'telsot1';


--
-- TOC entry 11766 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.telsot2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.telsot2 IS 'telsot2';


--
-- TOC entry 11767 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.district IS 'district';


--
-- TOC entry 11768 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.company IS 'company';


--
-- TOC entry 11769 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peopledoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peopledoctype IS 'peopledoctype';


--
-- TOC entry 11770 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peopledocser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peopledocser IS 'peopledocser';


--
-- TOC entry 11771 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peopledocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peopledocnum IS 'peopledocnum';


--
-- TOC entry 11772 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.dispuchet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.dispuchet IS 'dispuchet';


--
-- TOC entry 11773 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.benefittype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.benefittype IS 'benefittype';


--
-- TOC entry 11774 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.benefitdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.benefitdoctype IS 'benefitdoctype';


--
-- TOC entry 11775 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.benefitdocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.benefitdocnum IS 'benefitdocnum';


--
-- TOC entry 11776 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.profession; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.profession IS 'profession';


--
-- TOC entry 11777 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peoplepost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peoplepost IS 'peoplepost';


--
-- TOC entry 11778 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.dependant; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.dependant IS 'dependant';


--
-- TOC entry 11779 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.webmail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.webmail IS 'webmail';


--
-- TOC entry 11780 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.webphone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.webphone IS 'webphone';


--
-- TOC entry 11781 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.region IS 'region';


--
-- TOC entry 11782 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.category IS 'category';


--
-- TOC entry 11783 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.placework; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.placework IS 'placework';


--
-- TOC entry 11784 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.firstname IS 'firstname';


--
-- TOC entry 11785 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.lastname IS 'lastname';


--
-- TOC entry 11786 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.middlename IS 'middlename';


--
-- TOC entry 11787 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.birthday IS 'birthday';


--
-- TOC entry 11788 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.login IS 'login';


--
-- TOC entry 11789 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.waslogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.waslogin IS 'waslogin';


--
-- TOC entry 11790 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.password IS 'password';


--
-- TOC entry 11791 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.deathdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.deathdate IS 'Дата смерти';


--
-- TOC entry 11792 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.gasurf_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.gasurf_oid IS 'идентификатор в ис минздавсоцразвития';


--
-- TOC entry 11793 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peopledocgive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peopledocgive IS 'кто выдал документ удостоверяющий личноcть';


--
-- TOC entry 11794 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.peopledocgivedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.peopledocgivedate IS 'когда выдали документ удостоверяющий личноcть';


--
-- TOC entry 11795 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.phonecode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.phonecode IS 'Телефонный код';


--
-- TOC entry 11796 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.karta; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.karta IS 'без описания, значит УДАЛИТЬ!';


--
-- TOC entry 11797 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.importcode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.importcode IS 'без описания, значит УДАЛИТЬ!';


--
-- TOC entry 11798 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.description IS 'Описание места работы';


--
-- TOC entry 11799 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.snils2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.snils2 IS 'СНИЛС (11 цифр)';


--
-- TOC entry 11800 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.snils; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.snils IS 'УДАЛИТЬ! т.к. нельзя сделать уникальным';


--
-- TOC entry 11801 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.issuedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.issuedate IS 'Когда выдан';


--
-- TOC entry 11802 (class 0 OID 0)
-- Dependencies: 214
-- Name: COLUMN people.issuedby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people.issuedby IS 'Кем выдан';


--
-- TOC entry 215 (class 1259 OID 17879)
-- Dependencies: 14
-- Name: people_address; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_address (
    people character(36) NOT NULL,
    address character(36) NOT NULL
);


ALTER TABLE mir.people_address OWNER TO postgres;

--
-- TOC entry 11803 (class 0 OID 0)
-- Dependencies: 215
-- Name: TABLE people_address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_address IS 'people_address';


--
-- TOC entry 11804 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN people_address.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_address.people IS 'people';


--
-- TOC entry 11805 (class 0 OID 0)
-- Dependencies: 215
-- Name: COLUMN people_address.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_address.address IS 'address';


--
-- TOC entry 216 (class 1259 OID 17882)
-- Dependencies: 14
-- Name: tkladr_prefix; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tkladr_prefix (
    oid character(36) NOT NULL,
    prefix character varying(20),
    mtrcity_id integer,
    mtrstreet_id integer,
    name character varying(255)
);


ALTER TABLE mir.tkladr_prefix OWNER TO postgres;

--
-- TOC entry 11806 (class 0 OID 0)
-- Dependencies: 216
-- Name: TABLE tkladr_prefix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tkladr_prefix IS 'коды видов и типов населеных пунктов ';


--
-- TOC entry 11807 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN tkladr_prefix.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladr_prefix.oid IS 'ID';


--
-- TOC entry 11808 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN tkladr_prefix.prefix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladr_prefix.prefix IS 'Тип названия (г - город, ул - улица и т.п.)';


--
-- TOC entry 11809 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN tkladr_prefix.mtrcity_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladr_prefix.mtrcity_id IS 'MTRCITY – справочник видов населенных пунктов при межтерриториальных расчетах';


--
-- TOC entry 11810 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN tkladr_prefix.mtrstreet_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladr_prefix.mtrstreet_id IS 'MTRSTREET – справочник типов наименования улиц при межтерриториальных расчетах';


--
-- TOC entry 11811 (class 0 OID 0)
-- Dependencies: 216
-- Name: COLUMN tkladr_prefix.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tkladr_prefix.name IS 'Полное наименование из справочников';


--
-- TOC entry 302 (class 1259 OID 18263)
-- Dependencies: 14
-- Name: academicdegree; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE academicdegree (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.academicdegree OWNER TO postgres;

--
-- TOC entry 11812 (class 0 OID 0)
-- Dependencies: 302
-- Name: TABLE academicdegree; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE academicdegree IS 'ученая степень
';


--
-- TOC entry 11813 (class 0 OID 0)
-- Dependencies: 302
-- Name: COLUMN academicdegree.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN academicdegree.oid IS 'oid';


--
-- TOC entry 11814 (class 0 OID 0)
-- Dependencies: 302
-- Name: COLUMN academicdegree.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN academicdegree.id IS 'id';


--
-- TOC entry 11815 (class 0 OID 0)
-- Dependencies: 302
-- Name: COLUMN academicdegree.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN academicdegree.name IS 'name';


--
-- TOC entry 303 (class 1259 OID 18266)
-- Dependencies: 14
-- Name: actmat_iic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actmat_iic (
    matterid integer NOT NULL,
    uniqid integer NOT NULL,
    phgrid integer NOT NULL
);


ALTER TABLE mir.actmat_iic OWNER TO postgres;

--
-- TOC entry 11816 (class 0 OID 0)
-- Dependencies: 303
-- Name: TABLE actmat_iic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE actmat_iic IS 'МКБ-классификация ДВ';


--
-- TOC entry 11817 (class 0 OID 0)
-- Dependencies: 303
-- Name: COLUMN actmat_iic.matterid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_iic.matterid IS 'ВК на таблицу ACTMATTERS';


--
-- TOC entry 11818 (class 0 OID 0)
-- Dependencies: 303
-- Name: COLUMN actmat_iic.uniqid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_iic.uniqid IS 'ВК на таблицу CLSIIC';


--
-- TOC entry 11819 (class 0 OID 0)
-- Dependencies: 303
-- Name: COLUMN actmat_iic.phgrid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_iic.phgrid IS 'ВК на таблицу CLSPHARMAGROUP';


--
-- TOC entry 304 (class 1259 OID 18269)
-- Dependencies: 14
-- Name: actmat_phact; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actmat_phact (
    matterid integer NOT NULL,
    phactid integer NOT NULL,
    number smallint NOT NULL
);


ALTER TABLE mir.actmat_phact OWNER TO postgres;

--
-- TOC entry 11820 (class 0 OID 0)
-- Dependencies: 304
-- Name: TABLE actmat_phact; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE actmat_phact IS 'Фармдействия для описаний ДВ';


--
-- TOC entry 11821 (class 0 OID 0)
-- Dependencies: 304
-- Name: COLUMN actmat_phact.matterid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_phact.matterid IS 'ВК на таблицу ACTMATTERS';


--
-- TOC entry 11822 (class 0 OID 0)
-- Dependencies: 304
-- Name: COLUMN actmat_phact.phactid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_phact.phactid IS 'ВК на таблицу PHARMAACTIONS';


--
-- TOC entry 11823 (class 0 OID 0)
-- Dependencies: 304
-- Name: COLUMN actmat_phact.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_phact.number IS 'Порядковый номер';


--
-- TOC entry 305 (class 1259 OID 18272)
-- Dependencies: 14
-- Name: actmat_phgr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actmat_phgr (
    matterid integer NOT NULL,
    uniqid integer NOT NULL
);


ALTER TABLE mir.actmat_phgr OWNER TO postgres;

--
-- TOC entry 11824 (class 0 OID 0)
-- Dependencies: 305
-- Name: TABLE actmat_phgr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE actmat_phgr IS 'Классификация ДВ по фармгруппам';


--
-- TOC entry 11825 (class 0 OID 0)
-- Dependencies: 305
-- Name: COLUMN actmat_phgr.matterid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_phgr.matterid IS 'ВК на таблицу ACTMATTERS';


--
-- TOC entry 11826 (class 0 OID 0)
-- Dependencies: 305
-- Name: COLUMN actmat_phgr.uniqid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmat_phgr.uniqid IS 'ВК на таблицу CLSPHARMAGROUP';


--
-- TOC entry 306 (class 1259 OID 18275)
-- Dependencies: 14
-- Name: actmatters; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actmatters (
    id integer NOT NULL,
    rusname character varying(256),
    latname character varying(256),
    stronggroupid integer,
    narcogroupid integer,
    chemicalname text,
    characters text,
    pharmacology text,
    indications text,
    usage text,
    contraindications text,
    uselimitations text,
    sideactions text,
    interactions text,
    usemethodanddoses text,
    overdose text,
    pregnancyuse text,
    precautions text,
    specialguidelines text,
    literature text
);


ALTER TABLE mir.actmatters OWNER TO postgres;

--
-- TOC entry 11827 (class 0 OID 0)
-- Dependencies: 306
-- Name: TABLE actmatters; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE actmatters IS 'Действующие ве-ва';


--
-- TOC entry 11828 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.id IS 'Код ДВ - первичный ключ';


--
-- TOC entry 11829 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.rusname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.rusname IS 'Русское название';


--
-- TOC entry 11830 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.latname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.latname IS 'Латинское название';


--
-- TOC entry 11831 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.stronggroupid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.stronggroupid IS 'ВК на таблицу STRONGGROUPS';


--
-- TOC entry 11832 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.narcogroupid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.narcogroupid IS 'ВК на талицу NARCOGROUPS';


--
-- TOC entry 11833 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.chemicalname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.chemicalname IS 'Химическое название';


--
-- TOC entry 11834 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.characters; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.characters IS 'Характеристика';


--
-- TOC entry 11835 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.pharmacology; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.pharmacology IS 'Фармакология';


--
-- TOC entry 11836 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.indications; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.indications IS 'Показания';


--
-- TOC entry 11837 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.usage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.usage IS 'Применение';


--
-- TOC entry 11838 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.contraindications; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.contraindications IS 'Противопоказания';


--
-- TOC entry 11839 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.uselimitations; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.uselimitations IS 'Ограничения к применению';


--
-- TOC entry 11840 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.sideactions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.sideactions IS 'Побочные действия';


--
-- TOC entry 11841 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.interactions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.interactions IS 'Взаимодействие';


--
-- TOC entry 11842 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.usemethodanddoses; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.usemethodanddoses IS 'Способ применения и дозы';


--
-- TOC entry 11843 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.overdose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.overdose IS 'Передозировка';


--
-- TOC entry 11844 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.pregnancyuse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.pregnancyuse IS 'Применение при беременности и кормлении грудью';


--
-- TOC entry 11845 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.precautions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.precautions IS 'Меры предосторожности';


--
-- TOC entry 11846 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.specialguidelines; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.specialguidelines IS 'Особые указания';


--
-- TOC entry 11847 (class 0 OID 0)
-- Dependencies: 306
-- Name: COLUMN actmatters.literature; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actmatters.literature IS 'Литература';


--
-- TOC entry 307 (class 1259 OID 18281)
-- Dependencies: 14
-- Name: actmatters_drugforms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actmatters_drugforms (
    actmatterid bigint NOT NULL,
    drugformid bigint NOT NULL,
    mz_phgr_id bigint NOT NULL
);


ALTER TABLE mir.actmatters_drugforms OWNER TO postgres;

--
-- TOC entry 308 (class 1259 OID 18284)
-- Dependencies: 14
-- Name: actunits; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE actunits (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.actunits OWNER TO postgres;

--
-- TOC entry 11848 (class 0 OID 0)
-- Dependencies: 308
-- Name: TABLE actunits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE actunits IS 'Названия единиц действия препаратов';


--
-- TOC entry 11849 (class 0 OID 0)
-- Dependencies: 308
-- Name: COLUMN actunits.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actunits.id IS 'Код названия - первичный ключ';


--
-- TOC entry 11850 (class 0 OID 0)
-- Dependencies: 308
-- Name: COLUMN actunits.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actunits.fullname IS 'Полное название';


--
-- TOC entry 11851 (class 0 OID 0)
-- Dependencies: 308
-- Name: COLUMN actunits.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN actunits.shortname IS 'Краткое название';


--
-- TOC entry 309 (class 1259 OID 18290)
-- Dependencies: 14
-- Name: addressex_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE addressex_history (
    oid character(36) NOT NULL,
    tkladr character(36),
    address_type character(36),
    house character varying(100),
    corps character varying(255),
    building character varying(100),
    flat character varying(100),
    addr_str character varying(500),
    registrationdate date
);


ALTER TABLE mir.addressex_history OWNER TO postgres;

--
-- TOC entry 11852 (class 0 OID 0)
-- Dependencies: 309
-- Name: TABLE addressex_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE addressex_history IS 'Адреса';


--
-- TOC entry 11853 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.oid IS 'oid';


--
-- TOC entry 11854 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.tkladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.tkladr IS 'tkladr';


--
-- TOC entry 11855 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.address_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.address_type IS 'тип адреса';


--
-- TOC entry 11856 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.house; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.house IS 'дом';


--
-- TOC entry 11857 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.corps; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.corps IS 'корпус';


--
-- TOC entry 11858 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.building IS 'строение';


--
-- TOC entry 11859 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.flat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.flat IS 'квартира';


--
-- TOC entry 11860 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.addr_str; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.addr_str IS 'Строка адреса для запросов by Spasskiy S.N. 02.08.2011';


--
-- TOC entry 11861 (class 0 OID 0)
-- Dependencies: 309
-- Name: COLUMN addressex_history.registrationdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN addressex_history.registrationdate IS 'дата регистрации';


--
-- TOC entry 310 (class 1259 OID 18296)
-- Dependencies: 14
-- Name: addressextmp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE addressextmp (
    oid character(36) NOT NULL,
    fk_id_oracle character(36),
    house character varying(100),
    building character varying(100),
    flat character varying(100),
    addr_str character varying(500)
);


ALTER TABLE mir.addressextmp OWNER TO postgres;

--
-- TOC entry 311 (class 1259 OID 18302)
-- Dependencies: 6791 6792 14
-- Name: age_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE age_group (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    age_group_type character(36) NOT NULL,
    townspeople integer DEFAULT 0,
    country_people integer DEFAULT 0
);


ALTER TABLE mir.age_group OWNER TO postgres;

--
-- TOC entry 11862 (class 0 OID 0)
-- Dependencies: 311
-- Name: TABLE age_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE age_group IS 'Возрастные группы';


--
-- TOC entry 11863 (class 0 OID 0)
-- Dependencies: 311
-- Name: COLUMN age_group.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group.oid IS 'oid';


--
-- TOC entry 11864 (class 0 OID 0)
-- Dependencies: 311
-- Name: COLUMN age_group.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group.otdel IS 'otdel';


--
-- TOC entry 11865 (class 0 OID 0)
-- Dependencies: 311
-- Name: COLUMN age_group.age_group_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group.age_group_type IS 'возрастные группы';


--
-- TOC entry 11866 (class 0 OID 0)
-- Dependencies: 311
-- Name: COLUMN age_group.townspeople; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group.townspeople IS 'городское';


--
-- TOC entry 11867 (class 0 OID 0)
-- Dependencies: 311
-- Name: COLUMN age_group.country_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group.country_people IS 'сельское';


--
-- TOC entry 312 (class 1259 OID 18307)
-- Dependencies: 6793 6794 6795 14
-- Name: age_group_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE age_group_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    otdel character(36),
    age_group_type character(36) NOT NULL,
    townspeople integer DEFAULT 0,
    country_people integer DEFAULT 0
);


ALTER TABLE mir.age_group_history OWNER TO postgres;

--
-- TOC entry 11868 (class 0 OID 0)
-- Dependencies: 312
-- Name: TABLE age_group_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE age_group_history IS 'Возрастные группы';


--
-- TOC entry 11869 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.hid IS 'hid';


--
-- TOC entry 11870 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.h_date IS 'h_date';


--
-- TOC entry 11871 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.h_date_end IS 'h_date_end';


--
-- TOC entry 11872 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.sysdate IS 'sysdate';


--
-- TOC entry 11873 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.oid IS 'oid';


--
-- TOC entry 11874 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.otdel IS 'otdel';


--
-- TOC entry 11875 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.age_group_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.age_group_type IS 'возрастные группы';


--
-- TOC entry 11876 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.townspeople; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.townspeople IS 'городское';


--
-- TOC entry 11877 (class 0 OID 0)
-- Dependencies: 312
-- Name: COLUMN age_group_history.country_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_history.country_people IS 'сельское';


--
-- TOC entry 313 (class 1259 OID 18313)
-- Dependencies: 6796 6797 6798 6799 6800 6801 14
-- Name: age_group_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE age_group_type (
    oid character(36) NOT NULL,
    name character varying(255),
    age_from integer DEFAULT 0 NOT NULL,
    age_to integer DEFAULT 0 NOT NULL,
    name2 character varying(255),
    age_from2 integer,
    age_to2 integer,
    show numeric(1,0) DEFAULT 1,
    status integer,
    CONSTRAINT "ck_age_group_type$age_from" CHECK (((age_from >= 0) AND (age_from <= 120))),
    CONSTRAINT "ck_age_group_type$age_to" CHECK (((age_to >= 0) AND (age_to <= 120))),
    CONSTRAINT "ck_age_group_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.age_group_type OWNER TO postgres;

--
-- TOC entry 11878 (class 0 OID 0)
-- Dependencies: 313
-- Name: TABLE age_group_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE age_group_type IS 'Тип возрастных групп
SELECT oid, name || ''  ['' || trim(to_char(age_from, ''999'')) || '' - '' || trim(to_char(age_to, ''999'')) || '']'' as name
FROM mir.age_group_type
';


--
-- TOC entry 11879 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.oid IS 'oid';


--
-- TOC entry 11880 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.name IS 'name';


--
-- TOC entry 11881 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.age_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.age_from IS 'возраст от';


--
-- TOC entry 11882 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.age_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.age_to IS 'возраст до';


--
-- TOC entry 11883 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 11884 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.age_from2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.age_from2 IS 'возраст от - для подтверждения';


--
-- TOC entry 11885 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.age_to2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.age_to2 IS 'возраст до - для подтверждения';


--
-- TOC entry 11886 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 11887 (class 0 OID 0)
-- Dependencies: 313
-- Name: COLUMN age_group_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN age_group_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 314 (class 1259 OID 18325)
-- Dependencies: 14
-- Name: am_df_limp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE am_df_limp (
    actmatterid bigint NOT NULL,
    drugformid bigint NOT NULL,
    limp_phgr_id bigint NOT NULL
);


ALTER TABLE mir.am_df_limp OWNER TO postgres;

--
-- TOC entry 315 (class 1259 OID 18328)
-- Dependencies: 14
-- Name: ambtalon; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ambtalon (
    oid character(36) NOT NULL,
    opendate date,
    spec1 character(36),
    spec2 character(36),
    dtregistlastdiag date,
    xarakterzabolev numeric,
    prichinabolnich numeric,
    bolnich numeric,
    travmaneproizv numeric,
    travmaproizv numeric,
    pouxodu numeric,
    recept1 character varying(100),
    recept2 character varying(100),
    recept3 character varying(100),
    recept4 character varying(100),
    ambtalonsost numeric,
    arrivereason character(36),
    arriveplace character(36),
    talonresult character(36),
    insurance character(36),
    pacient character(36),
    fullinfoformat character varying(100)
);


ALTER TABLE mir.ambtalon OWNER TO postgres;

--
-- TOC entry 11888 (class 0 OID 0)
-- Dependencies: 315
-- Name: TABLE ambtalon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ambtalon IS 'Амбулаторный талон';


--
-- TOC entry 11889 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.oid IS 'oid';


--
-- TOC entry 11890 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.opendate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.opendate IS 'opendate';


--
-- TOC entry 11891 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.spec1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.spec1 IS 'spec1';


--
-- TOC entry 11892 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.spec2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.spec2 IS 'spec2';


--
-- TOC entry 11893 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.dtregistlastdiag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.dtregistlastdiag IS 'dtregistlastdiag';


--
-- TOC entry 11894 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.xarakterzabolev; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.xarakterzabolev IS 'xarakterzabolev';


--
-- TOC entry 11895 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.prichinabolnich; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.prichinabolnich IS 'prichinabolnich';


--
-- TOC entry 11896 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.bolnich; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.bolnich IS 'bolnich';


--
-- TOC entry 11897 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.travmaneproizv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.travmaneproizv IS 'travmaneproizv';


--
-- TOC entry 11898 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.travmaproizv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.travmaproizv IS 'travmaproizv';


--
-- TOC entry 11899 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.pouxodu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.pouxodu IS 'pouxodu';


--
-- TOC entry 11900 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.recept1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.recept1 IS 'recept1';


--
-- TOC entry 11901 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.recept2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.recept2 IS 'recept2';


--
-- TOC entry 11902 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.recept3; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.recept3 IS 'recept3';


--
-- TOC entry 11903 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.recept4; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.recept4 IS 'recept4';


--
-- TOC entry 11904 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.ambtalonsost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.ambtalonsost IS 'ambtalonsost';


--
-- TOC entry 11905 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.arrivereason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.arrivereason IS 'arrivereason';


--
-- TOC entry 11906 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.arriveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.arriveplace IS 'arriveplace';


--
-- TOC entry 11907 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.talonresult; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.talonresult IS 'talonresult';


--
-- TOC entry 11908 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.insurance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.insurance IS 'insurance';


--
-- TOC entry 11909 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.pacient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.pacient IS 'pacient';


--
-- TOC entry 11910 (class 0 OID 0)
-- Dependencies: 315
-- Name: COLUMN ambtalon.fullinfoformat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtalon.fullinfoformat IS 'fullinfoformat';


--
-- TOC entry 316 (class 1259 OID 18334)
-- Dependencies: 14
-- Name: dictionary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dictionary (
    oid character(36) NOT NULL,
    name character varying(255),
    synonym character varying(100),
    fomscorrelation integer,
    dictionary_schema character varying(32)
);


ALTER TABLE mir.dictionary OWNER TO postgres;

--
-- TOC entry 11911 (class 0 OID 0)
-- Dependencies: 316
-- Name: TABLE dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dictionary IS 'Справочники';


--
-- TOC entry 11912 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN dictionary.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary.oid IS 'oid';


--
-- TOC entry 11913 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN dictionary.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary.name IS 'name';


--
-- TOC entry 11914 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN dictionary.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary.synonym IS 'synonym';


--
-- TOC entry 11915 (class 0 OID 0)
-- Dependencies: 316
-- Name: COLUMN dictionary.dictionary_schema; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary.dictionary_schema IS 'схема табл. БД';


--
-- TOC entry 317 (class 1259 OID 18337)
-- Dependencies: 6802 6803 6804 14
-- Name: insurance; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insurance (
    oid character(36) NOT NULL,
    people character(36),
    ser character varying(100),
    num character varying(100),
    begindate date,
    enddate date,
    company character(36),
    pay_type character(36),
    state numeric DEFAULT 0,
    notenddate numeric DEFAULT 0,
    insur_oms_type character(36),
    extendeddate date,
    canceldate date,
    insurance_number character varying(100),
    insurance_state character(36),
    sysdate timestamp(0) without time zone DEFAULT now(),
    contract_id character(36)
);


ALTER TABLE mir.insurance OWNER TO postgres;

--
-- TOC entry 11916 (class 0 OID 0)
-- Dependencies: 317
-- Name: TABLE insurance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insurance IS 'Страховой полис';


--
-- TOC entry 11917 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.oid IS 'oid';


--
-- TOC entry 11918 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.people IS 'people';


--
-- TOC entry 11919 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.ser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.ser IS 'ser';


--
-- TOC entry 11920 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.num IS 'num';


--
-- TOC entry 11921 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.begindate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.begindate IS 'begindate';


--
-- TOC entry 11922 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.enddate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.enddate IS 'enddate';


--
-- TOC entry 11923 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.company IS 'company';


--
-- TOC entry 11924 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.pay_type IS 'тип оплаты';


--
-- TOC entry 11925 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.state IS 'Сейчас статус договора "активный" - 1
//Статус договора(0- активный) (by Spasskiy //S.N. 12012011)';


--
-- TOC entry 11926 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.notenddate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.notenddate IS 'Статус бессрочного полиса (1 - полис не имеет срока окончания)';


--
-- TOC entry 11927 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.insur_oms_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.insur_oms_type IS 'Тип документа ОМС, для всех остальных типов = null';


--
-- TOC entry 11928 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.extendeddate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.extendeddate IS 'продлен до';


--
-- TOC entry 11929 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.canceldate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.canceldate IS 'дата анулирования';


--
-- TOC entry 11930 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.insurance_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.insurance_number IS 'единый номер полиса (он же Страховой номер, он же Номер социального страхования)';


--
-- TOC entry 11931 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.insurance_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.insurance_state IS 'статус полиса';


--
-- TOC entry 11932 (class 0 OID 0)
-- Dependencies: 317
-- Name: COLUMN insurance.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance.contract_id IS 'mir.counterpart_contract код договора';


--
-- TOC entry 318 (class 1259 OID 18346)
-- Dependencies: 14
-- Name: pacient; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pacient (
    oid character(36) NOT NULL,
    year numeric,
    num numeric,
    people character(36)
);


ALTER TABLE mir.pacient OWNER TO postgres;

--
-- TOC entry 11933 (class 0 OID 0)
-- Dependencies: 318
-- Name: TABLE pacient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pacient IS 'PACIENT';


--
-- TOC entry 11934 (class 0 OID 0)
-- Dependencies: 318
-- Name: COLUMN pacient.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pacient.oid IS 'oid';


--
-- TOC entry 11935 (class 0 OID 0)
-- Dependencies: 318
-- Name: COLUMN pacient.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pacient.year IS 'year';


--
-- TOC entry 11936 (class 0 OID 0)
-- Dependencies: 318
-- Name: COLUMN pacient.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pacient.num IS 'num';


--
-- TOC entry 11937 (class 0 OID 0)
-- Dependencies: 318
-- Name: COLUMN pacient.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pacient.people IS 'people';


--
-- TOC entry 319 (class 1259 OID 18352)
-- Dependencies: 6757 14
-- Name: ambtalon_list; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW ambtalon_list AS
    SELECT a.oid, to_char((a.opendate)::timestamp with time zone, 'dd.mm.yyyy'::text) AS opendate, CASE WHEN (COALESCE(a.ambtalonsost, (0)::numeric) = (0)::numeric) THEN 'Ioe?uo'::text ELSE 'Cae?uo'::text END AS ambtalonsost, a.talonresult, a.pacient AS pacient_oid, p.people AS people_oid, arp.name AS arriveplace, arr.name AS arrivereason, (((ins.ser)::text || ' '::text) || (ins.num)::text) AS numpolis, a.insurance FROM ((((ambtalon a LEFT JOIN pacient p ON ((p.oid = a.pacient))) LEFT JOIN dictionary arp ON ((arp.oid = a.arriveplace))) LEFT JOIN dictionary arr ON ((arr.oid = a.arrivereason))) LEFT JOIN insurance ins ON ((ins.oid = a.insurance)));


ALTER TABLE mir.ambtalon_list OWNER TO postgres;

--
-- TOC entry 11938 (class 0 OID 0)
-- Dependencies: 319
-- Name: VIEW ambtalon_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW ambtalon_list IS 'AMBTALON_LIST';


--
-- TOC entry 320 (class 1259 OID 18357)
-- Dependencies: 14
-- Name: ambtick_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ambtick_diag (
    oid character(36) NOT NULL,
    ticket_oid character(36) NOT NULL,
    diag_oid character(36) NOT NULL,
    mdoc_oid character(36) NOT NULL
);


ALTER TABLE mir.ambtick_diag OWNER TO postgres;

--
-- TOC entry 11939 (class 0 OID 0)
-- Dependencies: 320
-- Name: TABLE ambtick_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ambtick_diag IS 'Таблица соотв. диагнозов амб. талонам (added by Arslanov I.I.)';


--
-- TOC entry 11940 (class 0 OID 0)
-- Dependencies: 320
-- Name: COLUMN ambtick_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_diag.oid IS 'OID';


--
-- TOC entry 11941 (class 0 OID 0)
-- Dependencies: 320
-- Name: COLUMN ambtick_diag.ticket_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_diag.ticket_oid IS '[AMBTICKET.ID] Амбулаторный талон';


--
-- TOC entry 11942 (class 0 OID 0)
-- Dependencies: 320
-- Name: COLUMN ambtick_diag.diag_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_diag.diag_oid IS '[DIAG.ID] Диагноз';


--
-- TOC entry 11943 (class 0 OID 0)
-- Dependencies: 320
-- Name: COLUMN ambtick_diag.mdoc_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_diag.mdoc_oid IS '[MDOC.ID] Мед. документ';


--
-- TOC entry 321 (class 1259 OID 18360)
-- Dependencies: 14
-- Name: ambtick_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ambtick_status (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.ambtick_status OWNER TO postgres;

--
-- TOC entry 11944 (class 0 OID 0)
-- Dependencies: 321
-- Name: TABLE ambtick_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ambtick_status IS 'Статус амбулаторного талона
 Author: A.Nakorjakov';


--
-- TOC entry 11945 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN ambtick_status.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_status.id IS 'SEQUENCE=[MIS.SQ_AMBTICK_STATUS]';


--
-- TOC entry 11946 (class 0 OID 0)
-- Dependencies: 321
-- Name: COLUMN ambtick_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambtick_status.name IS 'Название статуса';


--
-- TOC entry 322 (class 1259 OID 18363)
-- Dependencies: 6805 6806 6807 14
-- Name: ambticket; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ambticket (
    id character(36) NOT NULL,
    empo_id character(36),
    empc_id character(36),
    servplace_id character(36),
    goal_id character(36),
    travm_id character(36),
    idoc_id character(36),
    result_id character(36),
    empcancel_id character(36),
    cancel_date date,
    status_id character(36),
    refer_id character(36),
    travm_date date,
    dispstate_id character(36),
    subresult_id character(36),
    med_help_id character(36),
    refer_num character varying(255),
    refer_date date,
    otdel character(36),
    sysdate timestamp(0) without time zone DEFAULT now(),
    course numeric(1,0),
    child_number integer,
    medicalcare character(36),
    export_foms numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_ambticket$export_foms" CHECK (((export_foms IS NULL) OR ((export_foms >= (0)::numeric) AND (export_foms <= (1)::numeric))))
);


ALTER TABLE mir.ambticket OWNER TO postgres;

--
-- TOC entry 11947 (class 0 OID 0)
-- Dependencies: 322
-- Name: TABLE ambticket; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ambticket IS 'Специфические атрибуты амбулаторного талона Author: A.Nakorjakov';


--
-- TOC entry 11948 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.id IS 'SEQUENCE=[SQ_VISIT]';


--
-- TOC entry 11949 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.empo_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.empo_id IS 'Сотрудник, открывший талон';


--
-- TOC entry 11950 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.empc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.empc_id IS 'Сотрудник, закрывший талон';


--
-- TOC entry 11951 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.servplace_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.servplace_id IS 'Место обслуживания';


--
-- TOC entry 11952 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.goal_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.goal_id IS 'Цель посещения (VISIT_GOAL.ID)';


--
-- TOC entry 11953 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.travm_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.travm_id IS 'Вид травмы (TRAVM.ID)';


--
-- TOC entry 11954 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.idoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.idoc_id IS 'Полис (INSURANCE.ID)';


--
-- TOC entry 11955 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.result_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.result_id IS 'Результат лечения (TIСK_RES.ID)';


--
-- TOC entry 11956 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.empcancel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.empcancel_id IS 'Сотрудник, отенивший подпись';


--
-- TOC entry 11957 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.cancel_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.cancel_date IS 'Дата отмены подписи';


--
-- TOC entry 11958 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.status_id IS 'Статус талона';


--
-- TOC entry 11959 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.refer_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.refer_id IS 'Направившее учреждение COMPANY.ID';


--
-- TOC entry 11960 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.travm_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.travm_date IS 'travm_date';


--
-- TOC entry 11961 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.dispstate_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.dispstate_id IS 'Диспансерный учет (DISPSTATE.ID)';


--
-- TOC entry 11962 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.subresult_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.subresult_id IS 'Дополнительный результат лечения (TICK_SUBRES.ID)';


--
-- TOC entry 11963 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.med_help_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.med_help_id IS 'Стандарт медицинской помощи (STANDART_MED_HELP.ID)';


--
-- TOC entry 11964 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.refer_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.refer_num IS 'номер направления из направившего учреждения';


--
-- TOC entry 11965 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.refer_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.refer_date IS 'дата направления из направившего учреждения';


--
-- TOC entry 11966 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.otdel IS 'otdel';


--
-- TOC entry 11967 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.course; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.course IS 'Наличие курса';


--
-- TOC entry 11968 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.child_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.child_number IS 'номер ребенка без государственной регистрации';


--
-- TOC entry 11969 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.medicalcare; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.medicalcare IS 'Вид МП';


--
-- TOC entry 11970 (class 0 OID 0)
-- Dependencies: 322
-- Name: COLUMN ambticket.export_foms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambticket.export_foms IS 'Признак выгруженноси в ФОМС. Блокирует отмену подписи.';


--
-- TOC entry 323 (class 1259 OID 18372)
-- Dependencies: 14
-- Name: ambul_card_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ambul_card_info (
    oid character(36) NOT NULL,
    disp_type character(36)
);
ALTER TABLE ONLY ambul_card_info ALTER COLUMN disp_type SET STATISTICS 100;


ALTER TABLE mir.ambul_card_info OWNER TO postgres;

--
-- TOC entry 11971 (class 0 OID 0)
-- Dependencies: 323
-- Name: TABLE ambul_card_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ambul_card_info IS 'Дополнительная информация для типа документа «Амбулаторная карта»';


--
-- TOC entry 11972 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN ambul_card_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambul_card_info.oid IS 'oid';


--
-- TOC entry 11973 (class 0 OID 0)
-- Dependencies: 323
-- Name: COLUMN ambul_card_info.disp_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ambul_card_info.disp_type IS 'Тип диспансеризации';


--
-- TOC entry 324 (class 1259 OID 18375)
-- Dependencies: 14
-- Name: anamnesis; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE anamnesis (
    people_id character varying(36) NOT NULL,
    content text
);


ALTER TABLE mir.anamnesis OWNER TO postgres;

--
-- TOC entry 325 (class 1259 OID 18381)
-- Dependencies: 14
-- Name: answerclientmessages; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE answerclientmessages (
    oid character(36) NOT NULL,
    errmess character(36),
    peopleanswer character(36),
    ip character varying(100),
    dtanswer date,
    messanswer text,
    optimisticlockfield numeric,
    gcrecord numeric,
    sendemail character varying(100),
    sendsms character varying(100)
);


ALTER TABLE mir.answerclientmessages OWNER TO postgres;

--
-- TOC entry 11974 (class 0 OID 0)
-- Dependencies: 325
-- Name: TABLE answerclientmessages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE answerclientmessages IS 'ANSWERCLIENTMESSAGES';


--
-- TOC entry 11975 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.oid IS 'oid';


--
-- TOC entry 11976 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.errmess; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.errmess IS 'errmess';


--
-- TOC entry 11977 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.peopleanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.peopleanswer IS 'peopleanswer';


--
-- TOC entry 11978 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.ip IS 'ip';


--
-- TOC entry 11979 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.dtanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.dtanswer IS 'dtanswer';


--
-- TOC entry 11980 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.messanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.messanswer IS 'messanswer';


--
-- TOC entry 11981 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 11982 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.gcrecord IS 'gcrecord';


--
-- TOC entry 11983 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.sendemail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.sendemail IS 'sendemail';


--
-- TOC entry 11984 (class 0 OID 0)
-- Dependencies: 325
-- Name: COLUMN answerclientmessages.sendsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN answerclientmessages.sendsms IS 'sendsms';


--
-- TOC entry 326 (class 1259 OID 18387)
-- Dependencies: 14
-- Name: area_list; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE area_list (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    region character(36) NOT NULL
);


ALTER TABLE mir.area_list OWNER TO postgres;

--
-- TOC entry 11985 (class 0 OID 0)
-- Dependencies: 326
-- Name: TABLE area_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE area_list IS 'СПИСОК ОКРУГОВ';


--
-- TOC entry 11986 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN area_list.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_list.oid IS 'ID';


--
-- TOC entry 11987 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN area_list.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_list.name IS 'НАЗВАНИЕ';


--
-- TOC entry 11988 (class 0 OID 0)
-- Dependencies: 326
-- Name: COLUMN area_list.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_list.region IS 'РЕГИОН';


--
-- TOC entry 327 (class 1259 OID 18390)
-- Dependencies: 14
-- Name: area_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE area_lpu (
    oid character(36) NOT NULL,
    area_id character(36) NOT NULL,
    lpu character(36) NOT NULL
);


ALTER TABLE mir.area_lpu OWNER TO postgres;

--
-- TOC entry 11989 (class 0 OID 0)
-- Dependencies: 327
-- Name: TABLE area_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE area_lpu IS 'AREA_LPU';


--
-- TOC entry 11990 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN area_lpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_lpu.oid IS 'ID';


--
-- TOC entry 11991 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN area_lpu.area_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_lpu.area_id IS 'ID ОКРУГА';


--
-- TOC entry 11992 (class 0 OID 0)
-- Dependencies: 327
-- Name: COLUMN area_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN area_lpu.lpu IS 'ID ЛПУ';


--
-- TOC entry 328 (class 1259 OID 18393)
-- Dependencies: 14
-- Name: areal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal (
    name character varying(100),
    description character varying(100),
    company_id integer,
    car integer,
    ware integer,
    workspace_gp numeric,
    workspace_any numeric,
    otdel_id character(36),
    oid character(36) NOT NULL,
    arealtype_oid character(36),
    distanceareal numeric(10,2),
    quantity_norm integer
);


ALTER TABLE mir.areal OWNER TO postgres;

--
-- TOC entry 11993 (class 0 OID 0)
-- Dependencies: 328
-- Name: TABLE areal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal IS 'Участки .  Author: Blazko';


--
-- TOC entry 11994 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.name IS 'Участок';


--
-- TOC entry 11995 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.description IS 'Доп описание';


--
-- TOC entry 11996 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.company_id IS 'ЛПУ';


--
-- TOC entry 11997 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.car; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.car IS 'Наличие автотранспорта';


--
-- TOC entry 11998 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.ware; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.ware IS 'оснащенность кабинета врача установленным оборудованием';


--
-- TOC entry 11999 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.workspace_gp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.workspace_gp IS 'Площадь кабинета врача';


--
-- TOC entry 12000 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.workspace_any; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.workspace_any IS 'Площадь кабинетов участка';


--
-- TOC entry 12001 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.otdel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.otdel_id IS 'otdel_id';


--
-- TOC entry 12002 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.oid IS 'oid';


--
-- TOC entry 12003 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.arealtype_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.arealtype_oid IS 'arealType_oid';


--
-- TOC entry 12004 (class 0 OID 0)
-- Dependencies: 328
-- Name: COLUMN areal.quantity_norm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal.quantity_norm IS 'Норма прикрепления';


--
-- TOC entry 329 (class 1259 OID 18399)
-- Dependencies: 6808 14
-- Name: areal_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    name character varying(100),
    description character varying(100),
    company_id integer,
    car integer,
    ware integer,
    workspace_gp numeric,
    workspace_any numeric,
    otdel_id character(36),
    oid character(36) NOT NULL,
    arealtype_oid character(36),
    distanceareal numeric(10,2),
    quantity_norm integer
);


ALTER TABLE mir.areal_history OWNER TO postgres;

--
-- TOC entry 12005 (class 0 OID 0)
-- Dependencies: 329
-- Name: TABLE areal_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_history IS 'Терапевтические участки .  Author: Blazko';


--
-- TOC entry 12006 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.hid IS 'hid';


--
-- TOC entry 12007 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.h_date IS 'h_date';


--
-- TOC entry 12008 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.h_date_end IS 'h_date_end';


--
-- TOC entry 12009 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.sysdate IS 'sysdate';


--
-- TOC entry 12010 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.name IS 'Участок';


--
-- TOC entry 12011 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.description IS 'Доп описание';


--
-- TOC entry 12012 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.company_id IS 'ЛПУ';


--
-- TOC entry 12013 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.car; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.car IS 'Наличие автотранспорта';


--
-- TOC entry 12014 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.ware; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.ware IS 'оснащенность кабинета врача установленным оборудованием';


--
-- TOC entry 12015 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.workspace_gp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.workspace_gp IS 'Площадь кабинета врача';


--
-- TOC entry 12016 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.workspace_any; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.workspace_any IS 'Площадь кабинетов участка';


--
-- TOC entry 12017 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.otdel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.otdel_id IS 'otdel_id';


--
-- TOC entry 12018 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.oid IS 'oid';


--
-- TOC entry 12019 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.arealtype_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.arealtype_oid IS 'arealtype_oid';


--
-- TOC entry 12020 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.distanceareal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.distanceareal IS 'distanceareal';


--
-- TOC entry 12021 (class 0 OID 0)
-- Dependencies: 329
-- Name: COLUMN areal_history.quantity_norm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_history.quantity_norm IS 'Норма прикрепления';


--
-- TOC entry 330 (class 1259 OID 18406)
-- Dependencies: 14
-- Name: areal_kladr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_kladr (
    inrange character varying(1000),
    outrange character varying(1000),
    inrooms character varying(1000),
    kladr_oid character(36),
    oid character(36) NOT NULL,
    areal_oid character(36)
);


ALTER TABLE mir.areal_kladr OWNER TO postgres;

--
-- TOC entry 12022 (class 0 OID 0)
-- Dependencies: 330
-- Name: TABLE areal_kladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_kladr IS 'Адреса участков.  Author: Blazko';


--
-- TOC entry 12023 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.inrange; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.inrange IS 'Перечень включённых домов (10-20,25,35,40-50)';


--
-- TOC entry 12024 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.outrange; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.outrange IS 'Перечень домов не включённых в список';


--
-- TOC entry 12025 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.inrooms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.inrooms IS 'Список квартир   -дом(квартиры)  10(1-50,60)12(20-30,33)';


--
-- TOC entry 12026 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.kladr_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.kladr_oid IS 'kladr_oid';


--
-- TOC entry 12027 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.oid IS 'oid';


--
-- TOC entry 12028 (class 0 OID 0)
-- Dependencies: 330
-- Name: COLUMN areal_kladr.areal_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_kladr.areal_oid IS 'areal_oid';


--
-- TOC entry 331 (class 1259 OID 18412)
-- Dependencies: 14
-- Name: areal_move_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_move_type (
    oid character(36) NOT NULL,
    move_name character varying(30)
);


ALTER TABLE mir.areal_move_type OWNER TO postgres;

--
-- TOC entry 12029 (class 0 OID 0)
-- Dependencies: 331
-- Name: TABLE areal_move_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_move_type IS 'Типы перемещения пациентов по участкам ( Прибытие, Выбытие )';


--
-- TOC entry 12030 (class 0 OID 0)
-- Dependencies: 331
-- Name: COLUMN areal_move_type.move_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_move_type.move_name IS 'Тип перемещения пациента по участкам';


--
-- TOC entry 332 (class 1259 OID 18415)
-- Dependencies: 14
-- Name: areal_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_people (
    in_dt date,
    emp_id character(36),
    check_dt date,
    emp_id_check character(36),
    icd10_id character(36),
    people_oid character(36),
    oid character(36) NOT NULL,
    areal_oid character(36)
);


ALTER TABLE mir.areal_people OWNER TO postgres;

--
-- TOC entry 12031 (class 0 OID 0)
-- Dependencies: 332
-- Name: TABLE areal_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_people IS 'Таблица текущей приписки пациента к участку.  Author: Blazko';


--
-- TOC entry 12032 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.in_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.in_dt IS 'Дата поступления (+ в истории)';


--
-- TOC entry 12033 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.emp_id IS 'Внесший сотрудник';


--
-- TOC entry 12034 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.check_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.check_dt IS 'Дата сверки';


--
-- TOC entry 12035 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.emp_id_check; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.emp_id_check IS 'Сотрудник сверивший';


--
-- TOC entry 12036 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.icd10_id IS 'Текущий диагноз';


--
-- TOC entry 12037 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.people_oid IS 'oid пациента';


--
-- TOC entry 12038 (class 0 OID 0)
-- Dependencies: 332
-- Name: COLUMN areal_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people.oid IS 'oid';


--
-- TOC entry 333 (class 1259 OID 18418)
-- Dependencies: 6809 14
-- Name: areal_people_hist; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_people_hist (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    areal character(36) NOT NULL,
    date_in date,
    date_move timestamp without time zone DEFAULT now() NOT NULL,
    sotr character(36),
    type_move character(36),
    reason_move character(36)
);


ALTER TABLE mir.areal_people_hist OWNER TO postgres;

--
-- TOC entry 12039 (class 0 OID 0)
-- Dependencies: 333
-- Name: TABLE areal_people_hist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_people_hist IS 'История перемещения пациента по участкам kulikovskiy 13_05_2013';


--
-- TOC entry 12040 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.oid IS 'Код';


--
-- TOC entry 12041 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.people IS 'Код пациента mir.people';


--
-- TOC entry 12042 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.areal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.areal IS 'Код участка mir.areal';


--
-- TOC entry 12043 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.date_in; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.date_in IS 'Дата постановки на участок';


--
-- TOC entry 12044 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.date_move; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.date_move IS 'Дата перемещения';


--
-- TOC entry 12045 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.sotr IS 'Сотрудник, выполнивший перемещение mir.sotr';


--
-- TOC entry 12046 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.type_move; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.type_move IS 'Тип перемещения mir.areal_move_type';


--
-- TOC entry 12047 (class 0 OID 0)
-- Dependencies: 333
-- Name: COLUMN areal_people_hist.reason_move; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_people_hist.reason_move IS 'Причина выбытия или перемещения mir.areal_reason';


--
-- TOC entry 334 (class 1259 OID 18422)
-- Dependencies: 14
-- Name: areal_reason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_reason (
    id character(36) NOT NULL,
    name character(30)
);


ALTER TABLE mir.areal_reason OWNER TO postgres;

--
-- TOC entry 12048 (class 0 OID 0)
-- Dependencies: 334
-- Name: TABLE areal_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_reason IS 'Причины выбытия с участка.  Author: Blazko';


--
-- TOC entry 12049 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN areal_reason.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_reason.id IS 'id';


--
-- TOC entry 12050 (class 0 OID 0)
-- Dependencies: 334
-- Name: COLUMN areal_reason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_reason.name IS 'Название причины выбытия';


--
-- TOC entry 335 (class 1259 OID 18425)
-- Dependencies: 6810 6811 14
-- Name: areal_sotr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_sotr (
    oid character(36) NOT NULL,
    sotr_id character(36),
    areal_id character(36),
    isminesotr numeric(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT "CK_AREAL_SOTR$ISMINESOTR" CHECK (((isminesotr >= (0)::numeric) AND (isminesotr <= (1)::numeric)))
);


ALTER TABLE mir.areal_sotr OWNER TO postgres;

--
-- TOC entry 12051 (class 0 OID 0)
-- Dependencies: 335
-- Name: TABLE areal_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_sotr IS 'Врачи на участках';


--
-- TOC entry 12052 (class 0 OID 0)
-- Dependencies: 335
-- Name: COLUMN areal_sotr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_sotr.oid IS 'oid';


--
-- TOC entry 12053 (class 0 OID 0)
-- Dependencies: 335
-- Name: COLUMN areal_sotr.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_sotr.sotr_id IS 'Врач';


--
-- TOC entry 12054 (class 0 OID 0)
-- Dependencies: 335
-- Name: COLUMN areal_sotr.areal_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_sotr.areal_id IS 'Участок';


--
-- TOC entry 12055 (class 0 OID 0)
-- Dependencies: 335
-- Name: COLUMN areal_sotr.isminesotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_sotr.isminesotr IS 'Основной врач, обслуживающий участок';


--
-- TOC entry 336 (class 1259 OID 18430)
-- Dependencies: 14
-- Name: areal_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE areal_type (
    oid character(36) NOT NULL,
    name character varying(30)
);


ALTER TABLE mir.areal_type OWNER TO postgres;

--
-- TOC entry 12056 (class 0 OID 0)
-- Dependencies: 336
-- Name: TABLE areal_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE areal_type IS 'Тип участка.  Author: Blazko';


--
-- TOC entry 12057 (class 0 OID 0)
-- Dependencies: 336
-- Name: COLUMN areal_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_type.oid IS 'oid';


--
-- TOC entry 12058 (class 0 OID 0)
-- Dependencies: 336
-- Name: COLUMN areal_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN areal_type.name IS 'Тип участка';


--
-- TOC entry 337 (class 1259 OID 18433)
-- Dependencies: 14
-- Name: arrivals; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE arrivals (
    oid character(36) NOT NULL,
    sanatorium character(36) NOT NULL,
    arrivals_date date,
    peoples integer,
    days integer
);


ALTER TABLE mir.arrivals OWNER TO postgres;

--
-- TOC entry 12059 (class 0 OID 0)
-- Dependencies: 337
-- Name: TABLE arrivals; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE arrivals IS 'Заезды';


--
-- TOC entry 12060 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN arrivals.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivals.oid IS 'oid';


--
-- TOC entry 12061 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN arrivals.sanatorium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivals.sanatorium IS 'sanatorium';


--
-- TOC entry 12062 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN arrivals.arrivals_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivals.arrivals_date IS 'дата';


--
-- TOC entry 12063 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN arrivals.peoples; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivals.peoples IS 'количество человек в заезд';


--
-- TOC entry 12064 (class 0 OID 0)
-- Dependencies: 337
-- Name: COLUMN arrivals.days; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivals.days IS 'длительность лечения (дн)';


--
-- TOC entry 338 (class 1259 OID 18436)
-- Dependencies: 14
-- Name: arriveplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE arriveplace (
    oid character(36) NOT NULL
);


ALTER TABLE mir.arriveplace OWNER TO postgres;

--
-- TOC entry 12065 (class 0 OID 0)
-- Dependencies: 338
-- Name: TABLE arriveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE arriveplace IS 'Место обслуживания';


--
-- TOC entry 12066 (class 0 OID 0)
-- Dependencies: 338
-- Name: COLUMN arriveplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arriveplace.oid IS 'oid';


--
-- TOC entry 339 (class 1259 OID 18439)
-- Dependencies: 14
-- Name: arrivereason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE arrivereason (
    oid character(36) NOT NULL
);


ALTER TABLE mir.arrivereason OWNER TO postgres;

--
-- TOC entry 12067 (class 0 OID 0)
-- Dependencies: 339
-- Name: TABLE arrivereason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE arrivereason IS 'Причина обращения';


--
-- TOC entry 12068 (class 0 OID 0)
-- Dependencies: 339
-- Name: COLUMN arrivereason.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN arrivereason.oid IS 'oid';


--
-- TOC entry 340 (class 1259 OID 18442)
-- Dependencies: 14
-- Name: aspusers; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE aspusers (
    username character varying(255),
    sessionid character varying(255),
    userb character(1)
);


ALTER TABLE mir.aspusers OWNER TO postgres;

--
-- TOC entry 12069 (class 0 OID 0)
-- Dependencies: 340
-- Name: TABLE aspusers; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE aspusers IS 'Сессии пользователей';


--
-- TOC entry 12070 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN aspusers.username; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN aspusers.username IS 'username';


--
-- TOC entry 12071 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN aspusers.sessionid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN aspusers.sessionid IS 'sessionid';


--
-- TOC entry 12072 (class 0 OID 0)
-- Dependencies: 340
-- Name: COLUMN aspusers.userb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN aspusers.userb IS 'userb';


--
-- TOC entry 341 (class 1259 OID 18448)
-- Dependencies: 14
-- Name: audit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE audit (
    oid character(36) NOT NULL,
    sysuser character(36),
    auditactiontype integer NOT NULL,
    actiondatetime timestamp without time zone NOT NULL
);


ALTER TABLE mir.audit OWNER TO postgres;

--
-- TOC entry 12073 (class 0 OID 0)
-- Dependencies: 341
-- Name: TABLE audit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE audit IS 'аудит действий пользователя';


--
-- TOC entry 12074 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN audit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN audit.oid IS 'oid';


--
-- TOC entry 12075 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN audit.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN audit.sysuser IS 'sysuser';


--
-- TOC entry 12076 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN audit.auditactiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN audit.auditactiontype IS 'тип действия';


--
-- TOC entry 12077 (class 0 OID 0)
-- Dependencies: 341
-- Name: COLUMN audit.actiondatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN audit.actiondatetime IS 'время действия';


--
-- TOC entry 342 (class 1259 OID 18451)
-- Dependencies: 14
-- Name: auditactiontypes; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE auditactiontypes (
    oid integer NOT NULL,
    synonym character(36) NOT NULL,
    description character(36) NOT NULL
);


ALTER TABLE mir.auditactiontypes OWNER TO postgres;

--
-- TOC entry 12078 (class 0 OID 0)
-- Dependencies: 342
-- Name: TABLE auditactiontypes; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE auditactiontypes IS 'аудит действий пользователя';


--
-- TOC entry 12079 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN auditactiontypes.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditactiontypes.oid IS 'oid';


--
-- TOC entry 12080 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN auditactiontypes.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditactiontypes.synonym IS 'синоним типа действия';


--
-- TOC entry 12081 (class 0 OID 0)
-- Dependencies: 342
-- Name: COLUMN auditactiontypes.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditactiontypes.description IS 'описание типа действия';


--
-- TOC entry 343 (class 1259 OID 18454)
-- Dependencies: 14
-- Name: auditfailedlogin; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE auditfailedlogin (
    oid character(36) NOT NULL,
    login character(100) NOT NULL,
    password character(100) NOT NULL,
    isuserexists boolean NOT NULL,
    ip character(25) NOT NULL
);


ALTER TABLE mir.auditfailedlogin OWNER TO postgres;

--
-- TOC entry 12082 (class 0 OID 0)
-- Dependencies: 343
-- Name: TABLE auditfailedlogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE auditfailedlogin IS 'аудит неудачных попыток логина пользователя';


--
-- TOC entry 12083 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN auditfailedlogin.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditfailedlogin.oid IS 'oid';


--
-- TOC entry 12084 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN auditfailedlogin.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditfailedlogin.login IS 'введенное имя пользователя';


--
-- TOC entry 12085 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN auditfailedlogin.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditfailedlogin.password IS 'введенный пароль';


--
-- TOC entry 12086 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN auditfailedlogin.isuserexists; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditfailedlogin.isuserexists IS 'время действия';


--
-- TOC entry 12087 (class 0 OID 0)
-- Dependencies: 343
-- Name: COLUMN auditfailedlogin.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditfailedlogin.ip IS 'IP';


--
-- TOC entry 344 (class 1259 OID 18457)
-- Dependencies: 14
-- Name: auditinout; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE auditinout (
    oid character varying(36),
    oid_people character varying(36),
    date_in date,
    date_out date,
    ip character varying(36)
);


ALTER TABLE mir.auditinout OWNER TO postgres;

--
-- TOC entry 12088 (class 0 OID 0)
-- Dependencies: 344
-- Name: TABLE auditinout; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE auditinout IS 'аудит входа выхода';


--
-- TOC entry 12089 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN auditinout.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditinout.oid IS 'oid';


--
-- TOC entry 12090 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN auditinout.oid_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditinout.oid_people IS 'oid_people';


--
-- TOC entry 12091 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN auditinout.date_in; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditinout.date_in IS 'date_in';


--
-- TOC entry 12092 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN auditinout.date_out; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditinout.date_out IS 'date_out';


--
-- TOC entry 12093 (class 0 OID 0)
-- Dependencies: 344
-- Name: COLUMN auditinout.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN auditinout.ip IS 'ip';


--
-- TOC entry 345 (class 1259 OID 18460)
-- Dependencies: 6812 14
-- Name: award; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE award (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    number character varying(255),
    name character varying(255),
    date_award date,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.award OWNER TO postgres;

--
-- TOC entry 12094 (class 0 OID 0)
-- Dependencies: 345
-- Name: TABLE award; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE award IS 'награды';


--
-- TOC entry 12095 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.oid IS 'oid';


--
-- TOC entry 12096 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.people IS 'people';


--
-- TOC entry 12097 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.number IS 'number';


--
-- TOC entry 12098 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.name IS 'name';


--
-- TOC entry 12099 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.date_award; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.date_award IS 'date_award';


--
-- TOC entry 12100 (class 0 OID 0)
-- Dependencies: 345
-- Name: COLUMN award.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN award.sysdate IS 'sysdate';


--
-- TOC entry 346 (class 1259 OID 18467)
-- Dependencies: 14
-- Name: bank_account; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bank_account (
    oid character(36) NOT NULL,
    lpu character(36),
    company character(36) NOT NULL,
    correspondent_account character varying(255),
    current_account character varying(255)
);


ALTER TABLE mir.bank_account OWNER TO postgres;

--
-- TOC entry 12101 (class 0 OID 0)
-- Dependencies: 346
-- Name: TABLE bank_account; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bank_account IS 'счета в банках';


--
-- TOC entry 12102 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN bank_account.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account.oid IS 'oid';


--
-- TOC entry 12103 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN bank_account.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account.lpu IS 'lpu';


--
-- TOC entry 12104 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN bank_account.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account.company IS 'банк';


--
-- TOC entry 12105 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN bank_account.correspondent_account; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account.correspondent_account IS 'корреспондентский счет';


--
-- TOC entry 12106 (class 0 OID 0)
-- Dependencies: 346
-- Name: COLUMN bank_account.current_account; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account.current_account IS 'расчетный счет';


--
-- TOC entry 347 (class 1259 OID 18473)
-- Dependencies: 6813 14
-- Name: bank_account_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bank_account_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36) NOT NULL,
    lpu character(36),
    company character(36) NOT NULL,
    correspondent_account character varying(255),
    current_account character varying(255)
);


ALTER TABLE mir.bank_account_history OWNER TO postgres;

--
-- TOC entry 12107 (class 0 OID 0)
-- Dependencies: 347
-- Name: TABLE bank_account_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bank_account_history IS 'счета в банках историчность';


--
-- TOC entry 12108 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.hid IS 'hid';


--
-- TOC entry 12109 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.h_date IS 'h_date';


--
-- TOC entry 12110 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.h_date_end IS 'h_date_end';


--
-- TOC entry 12111 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.sysdate IS 'sysdate';


--
-- TOC entry 12112 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.oid IS 'oid';


--
-- TOC entry 12113 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.lpu IS 'lpu';


--
-- TOC entry 12114 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.company IS 'банк';


--
-- TOC entry 12115 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.correspondent_account; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.correspondent_account IS 'корреспондентский счет';


--
-- TOC entry 12116 (class 0 OID 0)
-- Dependencies: 347
-- Name: COLUMN bank_account_history.current_account; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bank_account_history.current_account IS 'расчетный счет';


--
-- TOC entry 348 (class 1259 OID 18480)
-- Dependencies: 6814 6815 6816 6817 6818 6819 14
-- Name: bed; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed (
    oid character(36) NOT NULL,
    room character(36) NOT NULL,
    scheduled_days integer,
    actual_days integer,
    bed_dynamic numeric(1,0) DEFAULT 0,
    bed_day numeric(1,0) DEFAULT 0,
    bed_children numeric(1,0) DEFAULT 0,
    bed_profile character(36),
    CONSTRAINT "ck_bed$bed_children" CHECK (((bed_children IS NULL) OR ((bed_children >= (0)::numeric) AND (bed_children <= (1)::numeric)))),
    CONSTRAINT "ck_bed$bed_day" CHECK (((bed_day IS NULL) OR ((bed_day >= (0)::numeric) AND (bed_day <= (1)::numeric)))),
    CONSTRAINT "ck_bed$bed_dynamic" CHECK (((bed_dynamic IS NULL) OR ((bed_dynamic >= (0)::numeric) AND (bed_dynamic <= (1)::numeric))))
);


ALTER TABLE mir.bed OWNER TO postgres;

--
-- TOC entry 12117 (class 0 OID 0)
-- Dependencies: 348
-- Name: TABLE bed; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed IS 'Койка МУ';


--
-- TOC entry 12118 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.oid IS 'oid';


--
-- TOC entry 12119 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.room IS 'room';


--
-- TOC entry 12120 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.scheduled_days; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.scheduled_days IS 'плановых дней работы в году';


--
-- TOC entry 12121 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.actual_days; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.actual_days IS 'фактических дней работы в году';


--
-- TOC entry 12122 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.bed_dynamic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.bed_dynamic IS 'койка динамического наблюдения';


--
-- TOC entry 12123 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.bed_day; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.bed_day IS 'койка дневного стационара';


--
-- TOC entry 12124 (class 0 OID 0)
-- Dependencies: 348
-- Name: COLUMN bed.bed_children; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed.bed_children IS 'детская койка';


--
-- TOC entry 349 (class 1259 OID 18489)
-- Dependencies: 6820 6821 6822 6823 6824 6825 6826 14
-- Name: bed_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    room character(36),
    bed_profile character(36),
    scheduled_days integer,
    actual_days integer,
    bed_dynamic numeric(1,0) DEFAULT 0,
    bed_day numeric(1,0) DEFAULT 0,
    bed_children numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_bed_history$bed_children" CHECK (((bed_children IS NULL) OR ((bed_children >= (0)::numeric) AND (bed_children <= (1)::numeric)))),
    CONSTRAINT "ck_bed_history$bed_day" CHECK (((bed_day IS NULL) OR ((bed_day >= (0)::numeric) AND (bed_day <= (1)::numeric)))),
    CONSTRAINT "ck_bed_history$bed_dynamic" CHECK (((bed_dynamic IS NULL) OR ((bed_dynamic >= (0)::numeric) AND (bed_dynamic <= (1)::numeric))))
);


ALTER TABLE mir.bed_history OWNER TO postgres;

--
-- TOC entry 12125 (class 0 OID 0)
-- Dependencies: 349
-- Name: TABLE bed_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed_history IS 'Койка МУ';


--
-- TOC entry 12126 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.hid IS 'hid';


--
-- TOC entry 12127 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.h_date IS 'h_date';


--
-- TOC entry 12128 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.h_date_end IS 'h_date_end';


--
-- TOC entry 12129 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.sysdate IS 'sysdate';


--
-- TOC entry 12130 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.oid IS 'oid';


--
-- TOC entry 12131 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.room IS 'room';


--
-- TOC entry 12132 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.bed_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.bed_profile IS 'профиль койки';


--
-- TOC entry 12133 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.scheduled_days; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.scheduled_days IS 'плановых дней работы в году';


--
-- TOC entry 12134 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.actual_days; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.actual_days IS 'фактических дней работы в году';


--
-- TOC entry 12135 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.bed_dynamic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.bed_dynamic IS 'койка динамического наблюдения';


--
-- TOC entry 12136 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.bed_day; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.bed_day IS 'койка дневного стационара';


--
-- TOC entry 12137 (class 0 OID 0)
-- Dependencies: 349
-- Name: COLUMN bed_history.bed_children; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_history.bed_children IS 'детская койка';


--
-- TOC entry 350 (class 1259 OID 18499)
-- Dependencies: 6827 14
-- Name: bed_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed_info (
    oid character(36) NOT NULL,
    bed character(36) NOT NULL,
    bed_profile character(36) NOT NULL,
    date_begin timestamp without time zone,
    date_end timestamp without time zone,
    is_active boolean DEFAULT true
);


ALTER TABLE mir.bed_info OWNER TO postgres;

--
-- TOC entry 12138 (class 0 OID 0)
-- Dependencies: 350
-- Name: TABLE bed_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed_info IS 'bed_info';


--
-- TOC entry 12139 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.oid IS 'Идентификатор';


--
-- TOC entry 12140 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.bed; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.bed IS 'Ссылка на койку';


--
-- TOC entry 12141 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.bed_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.bed_profile IS 'Ссылка на профиль койки';


--
-- TOC entry 12142 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.date_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.date_begin IS 'Начала периода';


--
-- TOC entry 12143 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.date_end IS 'Окончание периода';


--
-- TOC entry 12144 (class 0 OID 0)
-- Dependencies: 350
-- Name: COLUMN bed_info.is_active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_info.is_active IS 'Является ли койка активной';


--
-- TOC entry 351 (class 1259 OID 18503)
-- Dependencies: 14
-- Name: bed_oper; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed_oper (
    oid character(36) NOT NULL,
    bed character(36) NOT NULL,
    bed_oper_type character(36) NOT NULL,
    date_oper timestamp without time zone
);


ALTER TABLE mir.bed_oper OWNER TO postgres;

--
-- TOC entry 12145 (class 0 OID 0)
-- Dependencies: 351
-- Name: TABLE bed_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed_oper IS 'Операции с койкой';


--
-- TOC entry 12146 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN bed_oper.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper.oid IS 'oid';


--
-- TOC entry 12147 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN bed_oper.bed; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper.bed IS 'bed';


--
-- TOC entry 12148 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN bed_oper.bed_oper_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper.bed_oper_type IS 'bed_oper_type';


--
-- TOC entry 12149 (class 0 OID 0)
-- Dependencies: 351
-- Name: COLUMN bed_oper.date_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper.date_oper IS 'дата';


--
-- TOC entry 352 (class 1259 OID 18506)
-- Dependencies: 6828 6829 14
-- Name: bed_oper_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed_oper_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_bed_oper_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.bed_oper_type OWNER TO postgres;

--
-- TOC entry 12150 (class 0 OID 0)
-- Dependencies: 352
-- Name: TABLE bed_oper_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed_oper_type IS 'Тип операции с койкой';


--
-- TOC entry 12151 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN bed_oper_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper_type.oid IS 'oid';


--
-- TOC entry 12152 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN bed_oper_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper_type.name IS 'name';


--
-- TOC entry 12153 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN bed_oper_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12154 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN bed_oper_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12155 (class 0 OID 0)
-- Dependencies: 352
-- Name: COLUMN bed_oper_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_oper_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 353 (class 1259 OID 18514)
-- Dependencies: 6830 6831 14
-- Name: bed_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bed_profile (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_bed_profile$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.bed_profile OWNER TO postgres;

--
-- TOC entry 12156 (class 0 OID 0)
-- Dependencies: 353
-- Name: TABLE bed_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bed_profile IS 'Профили коек';


--
-- TOC entry 12157 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN bed_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_profile.oid IS 'oid';


--
-- TOC entry 12158 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN bed_profile.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_profile.name IS 'name';


--
-- TOC entry 12159 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN bed_profile.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_profile.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12160 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN bed_profile.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_profile.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12161 (class 0 OID 0)
-- Dependencies: 353
-- Name: COLUMN bed_profile.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bed_profile.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 354 (class 1259 OID 18522)
-- Dependencies: 6832 6833 6834 6835 14
-- Name: benefit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    benefit_type character(36),
    nosology character(36),
    mkb10 character(36),
    date_begin date,
    date_end date,
    justification text,
    code character varying(255),
    order178 numeric(1,0) DEFAULT 0,
    order890 numeric(1,0) DEFAULT 0,
    benefit_financing character(36),
    CONSTRAINT "ck_benefit$order178" CHECK (((order178 IS NULL) OR ((order178 >= (0)::numeric) AND (order178 <= (1)::numeric)))),
    CONSTRAINT "ck_benefit$order890" CHECK (((order890 IS NULL) OR ((order890 >= (0)::numeric) AND (order890 <= (1)::numeric))))
);


ALTER TABLE mir.benefit OWNER TO postgres;

--
-- TOC entry 12162 (class 0 OID 0)
-- Dependencies: 354
-- Name: TABLE benefit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit IS 'льготы пациента
';


--
-- TOC entry 12163 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.oid IS 'oid';


--
-- TOC entry 12164 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.people IS 'пипл';


--
-- TOC entry 12165 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.benefit_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.benefit_type IS 'код категории льготы';


--
-- TOC entry 12166 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.nosology; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.nosology IS 'нозология';


--
-- TOC entry 12167 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.mkb10 IS 'мкб-10';


--
-- TOC entry 12168 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.date_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.date_begin IS 'дата внесения в регистр';


--
-- TOC entry 12169 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.date_end IS 'дата исключения из регистра';


--
-- TOC entry 12170 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.justification; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.justification IS 'обоснование назначения лекарственной терапии';


--
-- TOC entry 12171 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.code IS 'уникальный номер';


--
-- TOC entry 12172 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.order178; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.order178 IS 'принадлежность к приказу 178';


--
-- TOC entry 12173 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.order890; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.order890 IS 'принадлежность к приказу 890';


--
-- TOC entry 12174 (class 0 OID 0)
-- Dependencies: 354
-- Name: COLUMN benefit.benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit.benefit_financing IS 'Источник финансирования льготы';


--
-- TOC entry 355 (class 1259 OID 18532)
-- Dependencies: 14
-- Name: benefit_7nos_upload; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_7nos_upload (
    oid character(36),
    ss character(40),
    sn_pol character(25),
    fam character(40),
    im character(40),
    ot character(40),
    w character(1),
    dr date,
    sn_doc character(16),
    c_doc numeric(20,0),
    adres character(200),
    dom character(7),
    kor character(5),
    kv character(5),
    okato numeric(20,0),
    terr numeric(20,0),
    s_edv numeric(20,0),
    db_edv date,
    de_edv date,
    c_kat1 character(3),
    c_kat2 character(3),
    date_rsb character(10),
    date_rse character(10),
    u_type numeric(20,0),
    d_type character(3),
    c_finl numeric(20,0),
    mesto_pr character(1),
    nozol numeric(20,0),
    mkb character(6),
    urnz numeric(20,0),
    fl178 numeric(1,0),
    fl890 numeric(1,0),
    foms_title character(36)
);


ALTER TABLE mir.benefit_7nos_upload OWNER TO postgres;

--
-- TOC entry 356 (class 1259 OID 18538)
-- Dependencies: 14
-- Name: benefit_employee_upload; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_employee_upload (
    oid character(36) NOT NULL,
    foms_title character(36),
    company_okato character varying(12),
    company_foms_code character varying(10),
    employee_code character varying(255),
    lastname character varying(255),
    firstname character varying(255),
    middlename character varying(255),
    company_ogrn character varying(15),
    post_code integer,
    post_name character varying(255),
    date_post_begin date,
    date_qualification date,
    speciality_code character varying(10),
    qualification_code integer,
    benefit_datebegin date,
    benefit_dateend date,
    benefit_description character varying(255)
);


ALTER TABLE mir.benefit_employee_upload OWNER TO postgres;

--
-- TOC entry 12175 (class 0 OID 0)
-- Dependencies: 356
-- Name: TABLE benefit_employee_upload; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_employee_upload IS 'Загружаемый справочник врачей, имеющих право выписки льготных рецептов (по ОНЛС)
(для автоназначения льготы при создании сотрудника)
(Ponomarenko S.)';


--
-- TOC entry 12176 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.oid IS 'oid';


--
-- TOC entry 12177 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.foms_title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.foms_title IS 'Код задачи загрузки';


--
-- TOC entry 12178 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.company_okato; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.company_okato IS 'Код территории по классификатору ОКАТО';


--
-- TOC entry 12179 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.company_foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.company_foms_code IS 'Код ЛПУ в кодировке ТФОМС';


--
-- TOC entry 12180 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.employee_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.employee_code IS 'Идентификационный номер (код) врача';


--
-- TOC entry 12181 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.lastname IS 'Фамилия врача';


--
-- TOC entry 12182 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.firstname IS 'Имя врача';


--
-- TOC entry 12183 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.middlename IS 'Отчество врача';


--
-- TOC entry 12184 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.company_ogrn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.company_ogrn IS 'ОГРН медицинского учреждения места работы';


--
-- TOC entry 12185 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.post_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.post_code IS 'Код врачебной должности';


--
-- TOC entry 12186 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.post_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.post_name IS 'Занимаемая должность';


--
-- TOC entry 12187 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.date_post_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.date_post_begin IS 'Дата приема на работу';


--
-- TOC entry 12188 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.date_qualification; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.date_qualification IS 'Дата выдачи сертификата';


--
-- TOC entry 12189 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.speciality_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.speciality_code IS 'Код специальности медицинского работника';


--
-- TOC entry 12190 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.qualification_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.qualification_code IS 'Квалификационная категория врача';


--
-- TOC entry 12191 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.benefit_datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.benefit_datebegin IS 'Дата включения в регистр врачей, имеющих право на выписку льготных рецептов';


--
-- TOC entry 12192 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.benefit_dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.benefit_dateend IS 'Дата исключения из регистра';


--
-- TOC entry 12193 (class 0 OID 0)
-- Dependencies: 356
-- Name: COLUMN benefit_employee_upload.benefit_description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_employee_upload.benefit_description IS 'Примечание';


--
-- TOC entry 357 (class 1259 OID 18544)
-- Dependencies: 6836 6837 14
-- Name: benefit_financing; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_financing (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    show numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_benefit_financing$show" CHECK (((show >= (0)::numeric) AND (show <= (1)::numeric)))
);


ALTER TABLE mir.benefit_financing OWNER TO postgres;

--
-- TOC entry 12194 (class 0 OID 0)
-- Dependencies: 357
-- Name: TABLE benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_financing IS 'Источник финансирования (федеральная, муниципальная и др.)';


--
-- TOC entry 12195 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN benefit_financing.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_financing.oid IS 'oid';


--
-- TOC entry 12196 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN benefit_financing.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_financing.name IS 'name';


--
-- TOC entry 12197 (class 0 OID 0)
-- Dependencies: 357
-- Name: COLUMN benefit_financing.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_financing.foms_code IS 'код фомс';


--
-- TOC entry 358 (class 1259 OID 18549)
-- Dependencies: 14
-- Name: benefit_finansing_lgot_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_finansing_lgot_type (
    oid character(36) NOT NULL,
    benefit_finansing character(36) NOT NULL,
    lgot_type character(36) NOT NULL
);


ALTER TABLE mir.benefit_finansing_lgot_type OWNER TO postgres;

--
-- TOC entry 12198 (class 0 OID 0)
-- Dependencies: 358
-- Name: TABLE benefit_finansing_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_finansing_lgot_type IS 'Связь типа льготы и источника финансирования';


--
-- TOC entry 12199 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN benefit_finansing_lgot_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_finansing_lgot_type.oid IS 'oid';


--
-- TOC entry 12200 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN benefit_finansing_lgot_type.benefit_finansing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_finansing_lgot_type.benefit_finansing IS 'Финансирование льготы';


--
-- TOC entry 12201 (class 0 OID 0)
-- Dependencies: 358
-- Name: COLUMN benefit_finansing_lgot_type.lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_finansing_lgot_type.lgot_type IS 'Тип льготы';


--
-- TOC entry 359 (class 1259 OID 18552)
-- Dependencies: 6838 6839 6840 6841 6842 6843 14
-- Name: benefit_medic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_medic (
    oid character(36) NOT NULL,
    benefit_financing character(36),
    tradenames character(36),
    latinnames character(36),
    typesyn numeric(1,0) DEFAULT 0,
    measunit numeric(2,0),
    typelist numeric(1,0) DEFAULT 1,
    drugdoze numeric(15,2),
    dn98 numeric(1,0) DEFAULT 0,
    code_mnn numeric(13,0),
    code_trn numeric(13,0),
    code numeric(14,0),
    CONSTRAINT "ck_benefit_medic$dn98" CHECK (((dn98 IS NULL) OR ((dn98 >= (0)::numeric) AND (dn98 <= (1)::numeric)))),
    CONSTRAINT "ck_benefit_medic$typelist" CHECK (((typelist IS NULL) OR ((typelist >= (0)::numeric) AND (typelist <= (1)::numeric)))),
    CONSTRAINT "ck_benefit_medic$typesyn" CHECK (((typesyn IS NULL) OR ((typesyn >= (0)::numeric) AND (typesyn <= (1)::numeric))))
);


ALTER TABLE mir.benefit_medic OWNER TO postgres;

--
-- TOC entry 12202 (class 0 OID 0)
-- Dependencies: 359
-- Name: TABLE benefit_medic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_medic IS 'Льготные лекарственные средства "Тарифное соглашение"
created by S.Ponomarenko';


--
-- TOC entry 12203 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.oid IS 'Код ЛС';


--
-- TOC entry 12204 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.benefit_financing IS 'Источник финансирования';


--
-- TOC entry 12205 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.tradenames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.tradenames IS 'tradenames';


--
-- TOC entry 12206 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.latinnames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.latinnames IS 'latinnames';


--
-- TOC entry 12207 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.typesyn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.typesyn IS 'что сие значит, не знаю';


--
-- TOC entry 12208 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.measunit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.measunit IS 'что сие значит, не знаю';


--
-- TOC entry 12209 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.typelist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.typelist IS 'что сие значит, не знаю';


--
-- TOC entry 12210 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.drugdoze; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.drugdoze IS 'Дозировка ЛС';


--
-- TOC entry 12211 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.dn98; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.dn98 IS 'что сие значит, не знаю';


--
-- TOC entry 12212 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.code_mnn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.code_mnn IS 'Код лекарственного средства по международному непатентованному наименованию (МНН)';


--
-- TOC entry 12213 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.code_trn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.code_trn IS 'Код лекарственного средства по торговому наименованию';


--
-- TOC entry 12214 (class 0 OID 0)
-- Dependencies: 359
-- Name: COLUMN benefit_medic.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic.code IS 'Код ЛС из поля файла загрузки CODE';


--
-- TOC entry 360 (class 1259 OID 18561)
-- Dependencies: 6844 6845 14
-- Name: benefit_medic_price; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_medic_price (
    oid character(36) NOT NULL,
    benefit_medic character(36) NOT NULL,
    datebegin date DEFAULT ('now'::text)::date,
    dateend date,
    price numeric(15,2) DEFAULT 0
);


ALTER TABLE mir.benefit_medic_price OWNER TO postgres;

--
-- TOC entry 12215 (class 0 OID 0)
-- Dependencies: 360
-- Name: TABLE benefit_medic_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_medic_price IS 'Цены на льготные лекарственные средства "Тарифное соглашение"
created by S.Ponomarenko';


--
-- TOC entry 12216 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN benefit_medic_price.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic_price.oid IS 'oid';


--
-- TOC entry 12217 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN benefit_medic_price.benefit_medic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic_price.benefit_medic IS 'Код ЛС';


--
-- TOC entry 12218 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN benefit_medic_price.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic_price.datebegin IS 'datebegin';


--
-- TOC entry 12219 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN benefit_medic_price.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic_price.dateend IS 'dateend';


--
-- TOC entry 12220 (class 0 OID 0)
-- Dependencies: 360
-- Name: COLUMN benefit_medic_price.price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_medic_price.price IS 'price';


--
-- TOC entry 361 (class 1259 OID 18566)
-- Dependencies: 14
-- Name: benefit_medic_upload; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_medic_upload (
    oid character(36) NOT NULL,
    foms_title character(36),
    code numeric(14,0),
    name character(150),
    typesyn numeric(1,0),
    measunit numeric(2,0),
    tprice numeric(9,2),
    dbegin date,
    dend date,
    typelist numeric(1,0),
    doze numeric(8,1),
    dn98 numeric(1,0),
    finsour numeric(2,0),
    latname character(150),
    c_mnn numeric(13,0),
    c_trn numeric(13,0)
);


ALTER TABLE mir.benefit_medic_upload OWNER TO postgres;

--
-- TOC entry 362 (class 1259 OID 18569)
-- Dependencies: 6846 6847 14
-- Name: benefit_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_type (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    show numeric(1,0) DEFAULT 0,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_benefit_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.benefit_type OWNER TO postgres;

--
-- TOC entry 12221 (class 0 OID 0)
-- Dependencies: 362
-- Name: TABLE benefit_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefit_type IS 'benefit_type';


--
-- TOC entry 12222 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.oid IS 'oid';


--
-- TOC entry 12223 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.name IS 'name';


--
-- TOC entry 12224 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.foms_code IS 'код фомс';


--
-- TOC entry 12225 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12226 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12227 (class 0 OID 0)
-- Dependencies: 362
-- Name: COLUMN benefit_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefit_type.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 363 (class 1259 OID 18577)
-- Dependencies: 14
-- Name: benefit_upload; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefit_upload (
    oid character(36) NOT NULL,
    foms_title character(36),
    snils numeric(11,0),
    scard numeric(16,0),
    terr numeric(4,0),
    sname character(15),
    fi character(15),
    si character(15),
    borndt date,
    smk numeric(4,0),
    prgr1 numeric(4,0),
    prgr2 numeric(4,0),
    prgr3 numeric(4,0),
    dbegin date,
    dend date
);


ALTER TABLE mir.benefit_upload OWNER TO postgres;

--
-- TOC entry 364 (class 1259 OID 18580)
-- Dependencies: 14
-- Name: benefittype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE benefittype (
    oid character(36) NOT NULL,
    kodbenefittype character varying(100)
);


ALTER TABLE mir.benefittype OWNER TO postgres;

--
-- TOC entry 12228 (class 0 OID 0)
-- Dependencies: 364
-- Name: TABLE benefittype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE benefittype IS 'Категория льготы';


--
-- TOC entry 12229 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN benefittype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefittype.oid IS 'oid';


--
-- TOC entry 12230 (class 0 OID 0)
-- Dependencies: 364
-- Name: COLUMN benefittype.kodbenefittype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN benefittype.kodbenefittype IS 'kodbenefittype';


--
-- TOC entry 365 (class 1259 OID 18583)
-- Dependencies: 6848 6849 14
-- Name: bill; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bill (
    oid character(36) NOT NULL,
    appendix_id character(36) NOT NULL,
    sotr_create character(36) NOT NULL,
    sotr_pay character(36),
    create_dt timestamp without time zone NOT NULL,
    pay_dt timestamp without time zone,
    pay_status integer DEFAULT 0 NOT NULL,
    num character varying(10) NOT NULL,
    annul_dt timestamp without time zone,
    sotr_annul character(36),
    pay_sum numeric DEFAULT 0
);


ALTER TABLE mir.bill OWNER TO postgres;

--
-- TOC entry 12231 (class 0 OID 0)
-- Dependencies: 365
-- Name: TABLE bill; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bill IS 'Таблица счетов для платных услуг - by Shpielevoy D. I.';


--
-- TOC entry 12232 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.oid IS 'oid';


--
-- TOC entry 12233 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.appendix_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.appendix_id IS 'APPENDIX.OID';


--
-- TOC entry 12234 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.sotr_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.sotr_create IS 'Сотрудник создавший счет';


--
-- TOC entry 12235 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.sotr_pay; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.sotr_pay IS 'Сотрудник, принявший оплату';


--
-- TOC entry 12236 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.create_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.create_dt IS 'Дата создания счета';


--
-- TOC entry 12237 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.pay_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.pay_dt IS 'Дата оплаты по счету';


--
-- TOC entry 12238 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.pay_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.pay_status IS '0- не оплачен; 1- оплачен; 2- аннулирован';


--
-- TOC entry 12239 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.num IS 'Номер счета';


--
-- TOC entry 12240 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.annul_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.annul_dt IS 'Дата аннулирования';


--
-- TOC entry 12241 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.sotr_annul; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.sotr_annul IS 'Кто анулировал';


--
-- TOC entry 12242 (class 0 OID 0)
-- Dependencies: 365
-- Name: COLUMN bill.pay_sum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill.pay_sum IS 'Внесённая сумма';


--
-- TOC entry 366 (class 1259 OID 18591)
-- Dependencies: 6850 14
-- Name: bill_uslug; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE bill_uslug (
    oid character(36) NOT NULL,
    bill_id character(36) NOT NULL,
    presc_id character(36) NOT NULL,
    cost numeric DEFAULT 0 NOT NULL
);


ALTER TABLE mir.bill_uslug OWNER TO postgres;

--
-- TOC entry 12243 (class 0 OID 0)
-- Dependencies: 366
-- Name: TABLE bill_uslug; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE bill_uslug IS 'Таблица связок счета с услугами - by Shpielevoy D. I.';


--
-- TOC entry 12244 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN bill_uslug.bill_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill_uslug.bill_id IS 'BILL.ID';


--
-- TOC entry 12245 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN bill_uslug.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill_uslug.presc_id IS 'ссылка на назначение';


--
-- TOC entry 12246 (class 0 OID 0)
-- Dependencies: 366
-- Name: COLUMN bill_uslug.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN bill_uslug.cost IS 'сумма оплаты по каждой услуге';


--
-- TOC entry 367 (class 1259 OID 18598)
-- Dependencies: 6851 14
-- Name: birth_place; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE birth_place (
    oid character(36) NOT NULL,
    name character varying(255),
    synonym character varying(64),
    CONSTRAINT "ck_birth_place$synonym" CHECK (((synonym IS NULL) OR ((synonym)::text = upper((synonym)::text))))
);


ALTER TABLE mir.birth_place OWNER TO postgres;

--
-- TOC entry 12247 (class 0 OID 0)
-- Dependencies: 367
-- Name: TABLE birth_place; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE birth_place IS 'Место где прошли роды ';


--
-- TOC entry 12248 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN birth_place.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN birth_place.oid IS 'oid';


--
-- TOC entry 12249 (class 0 OID 0)
-- Dependencies: 367
-- Name: COLUMN birth_place.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN birth_place.name IS 'name';


--
-- TOC entry 368 (class 1259 OID 18602)
-- Dependencies: 6852 6853 6854 14
-- Name: blog; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE blog (
    oid character(36) NOT NULL,
    title character varying(255),
    sotr_create character(36) NOT NULL,
    date_create timestamp without time zone DEFAULT now(),
    is_delete numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_blog$is_delete" CHECK (((is_delete IS NULL) OR ((is_delete >= (0)::numeric) AND (is_delete <= (1)::numeric))))
);


ALTER TABLE mir.blog OWNER TO postgres;

--
-- TOC entry 12250 (class 0 OID 0)
-- Dependencies: 368
-- Name: TABLE blog; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE blog IS 'blog';


--
-- TOC entry 12251 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN blog.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog.oid IS 'oid';


--
-- TOC entry 12252 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN blog.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog.title IS 'title';


--
-- TOC entry 12253 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN blog.sotr_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog.sotr_create IS 'sotr_create';


--
-- TOC entry 12254 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN blog.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog.date_create IS 'date_create';


--
-- TOC entry 12255 (class 0 OID 0)
-- Dependencies: 368
-- Name: COLUMN blog.is_delete; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog.is_delete IS 'is_delete';


--
-- TOC entry 369 (class 1259 OID 18608)
-- Dependencies: 6855 6856 6857 6858 14
-- Name: blog_article; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE blog_article (
    oid character(36) NOT NULL,
    blog character(36) NOT NULL,
    title character varying NOT NULL,
    subtitle character varying,
    description character varying,
    text character varying NOT NULL,
    date_create timestamp without time zone DEFAULT now() NOT NULL,
    sotr_create character(36) NOT NULL,
    is_delete numeric(1,0) DEFAULT 0 NOT NULL,
    is_publish numeric(1,0) DEFAULT 0 NOT NULL,
    date_publish timestamp without time zone,
    CONSTRAINT "ck_blog_art$is_delete" CHECK (((is_delete >= (0)::numeric) AND (is_delete <= (1)::numeric)))
);


ALTER TABLE mir.blog_article OWNER TO postgres;

--
-- TOC entry 12256 (class 0 OID 0)
-- Dependencies: 369
-- Name: TABLE blog_article; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE blog_article IS 'blog_article';


--
-- TOC entry 12257 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.oid IS 'oid';


--
-- TOC entry 12258 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.blog; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.blog IS 'blog';


--
-- TOC entry 12259 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.title IS 'title';


--
-- TOC entry 12260 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.subtitle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.subtitle IS 'subtitle';


--
-- TOC entry 12261 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.description IS 'description';


--
-- TOC entry 12262 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.text IS 'text';


--
-- TOC entry 12263 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.date_create IS 'date_create';


--
-- TOC entry 12264 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.sotr_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.sotr_create IS 'sotr_create';


--
-- TOC entry 12265 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.is_delete; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.is_delete IS 'is_delete';


--
-- TOC entry 12266 (class 0 OID 0)
-- Dependencies: 369
-- Name: COLUMN blog_article.date_publish; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_article.date_publish IS 'date_publish';


--
-- TOC entry 370 (class 1259 OID 18618)
-- Dependencies: 6859 14
-- Name: blog_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE blog_log (
    oid character(36) NOT NULL,
    sotr_action character(36) NOT NULL,
    action character varying NOT NULL,
    object_type character varying(255) NOT NULL,
    object character(36),
    action_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.blog_log OWNER TO postgres;

--
-- TOC entry 12267 (class 0 OID 0)
-- Dependencies: 370
-- Name: TABLE blog_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE blog_log IS 'blog_log';


--
-- TOC entry 12268 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.oid IS 'oid';


--
-- TOC entry 12269 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.sotr_action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.sotr_action IS 'sotr_action';


--
-- TOC entry 12270 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.action IS 'action';


--
-- TOC entry 12271 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.object_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.object_type IS 'object_type';


--
-- TOC entry 12272 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.object; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.object IS 'object';


--
-- TOC entry 12273 (class 0 OID 0)
-- Dependencies: 370
-- Name: COLUMN blog_log.action_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_log.action_date IS 'action_date';


--
-- TOC entry 371 (class 1259 OID 18625)
-- Dependencies: 6860 14
-- Name: blog_rating; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE blog_rating (
    oid character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now(),
    people character(36) NOT NULL,
    blog_article character(36) NOT NULL,
    rating numeric NOT NULL
);


ALTER TABLE mir.blog_rating OWNER TO postgres;

--
-- TOC entry 12274 (class 0 OID 0)
-- Dependencies: 371
-- Name: TABLE blog_rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE blog_rating IS 'blog_rating';


--
-- TOC entry 12275 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN blog_rating.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_rating.oid IS 'oid';


--
-- TOC entry 12276 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN blog_rating.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_rating.add_date IS 'add_date';


--
-- TOC entry 12277 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN blog_rating.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_rating.people IS 'people';


--
-- TOC entry 12278 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN blog_rating.blog_article; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_rating.blog_article IS 'blog_article';


--
-- TOC entry 12279 (class 0 OID 0)
-- Dependencies: 371
-- Name: COLUMN blog_rating.rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN blog_rating.rating IS 'rating';


--
-- TOC entry 372 (class 1259 OID 18632)
-- Dependencies: 6861 6862 6863 6864 6865 6866 6867 6868 6869 6870 6871 6872 6873 6874 6875 6876 6877 6878 6879 6880 6881 6882 6883 6884 6885 6886 6887 6888 6889 6890 6891 6892 6893 6894 6895 6896 6897 6898 6899 6900 6901 6902 6903 6904 6905 6906 6907 6908 6909 6910 6911 6912 14
-- Name: building; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building (
    oid character(36) NOT NULL,
    plot character(36) NOT NULL,
    building_name character varying(255),
    identifier character varying(255) NOT NULL,
    building_type character(36),
    address character(36),
    building_purpose character(36),
    equipment_ownership character(36),
    balance numeric(1,0) DEFAULT 0,
    beds integer,
    visits integer,
    beds_actual integer,
    stationary_seats numeric(1,0) DEFAULT 0,
    outpatient_seats numeric(1,0) DEFAULT 0,
    volume numeric(15,2),
    area_total numeric(15,2),
    area_useful numeric(15,2),
    area_room numeric(15,2),
    area_offices numeric(15,2),
    fire_alarms numeric(1,0) DEFAULT 0,
    burglar_alarms numeric(1,0) DEFAULT 0,
    button_police numeric(1,0) DEFAULT 0,
    fire_warning numeric(1,0) DEFAULT 0,
    fire_water numeric(1,0) DEFAULT 0,
    fire_department_alarm numeric(1,0) DEFAULT 0,
    fire_department_connection numeric(1,0) DEFAULT 0,
    fire_violations integer,
    emergency_exits numeric(1,0) DEFAULT 0,
    personal_protection numeric(1,0) DEFAULT 0,
    litter numeric(1,0) DEFAULT 0,
    fire_department_distance numeric(15,2),
    security numeric(1,0) DEFAULT 0,
    metal_doors numeric(1,0) DEFAULT 0,
    video_monitoring numeric(1,0) DEFAULT 0,
    room_attendants numeric(1,0) DEFAULT 0,
    fencing_area numeric(1,0) DEFAULT 0,
    suitability_disabilities numeric(1,0) DEFAULT 0,
    project_type character(36),
    project_number character varying(255),
    project_date date,
    construction_date date,
    repair_date date,
    airing numeric(1,0) DEFAULT 0,
    supporting_structure character(36),
    floor_type character(36),
    floor_count integer,
    conditioning numeric(1,0) DEFAULT 0,
    power_supply character(36),
    water_supply numeric(1,0) DEFAULT 0,
    hot_water_type character(36),
    heating_type character(36),
    sewerage_type character(36),
    medical_gas_supply numeric(1,0) DEFAULT 0,
    gas_supply numeric(1,0) DEFAULT 0,
    communication_type character(36),
    passenger_lift numeric(1,0) DEFAULT 0,
    medical_lift numeric(1,0) DEFAULT 0,
    cost_primary numeric(15,2),
    CONSTRAINT "ck_building$airing" CHECK (((airing IS NULL) OR ((airing >= (0)::numeric) AND (airing <= (1)::numeric)))),
    CONSTRAINT "ck_building$balance" CHECK (((balance IS NULL) OR ((balance >= (0)::numeric) AND (balance <= (1)::numeric)))),
    CONSTRAINT "ck_building$burglar_alarms" CHECK (((burglar_alarms IS NULL) OR ((burglar_alarms >= (0)::numeric) AND (burglar_alarms <= (1)::numeric)))),
    CONSTRAINT "ck_building$button_police" CHECK (((button_police IS NULL) OR ((button_police >= (0)::numeric) AND (button_police <= (1)::numeric)))),
    CONSTRAINT "ck_building$conditioning" CHECK (((conditioning IS NULL) OR ((conditioning >= (0)::numeric) AND (conditioning <= (1)::numeric)))),
    CONSTRAINT "ck_building$emergency_exits" CHECK (((emergency_exits IS NULL) OR ((emergency_exits >= (0)::numeric) AND (emergency_exits <= (1)::numeric)))),
    CONSTRAINT "ck_building$fencing_area" CHECK (((fencing_area IS NULL) OR ((fencing_area >= (0)::numeric) AND (fencing_area <= (1)::numeric)))),
    CONSTRAINT "ck_building$fire_alarms" CHECK (((fire_alarms IS NULL) OR ((fire_alarms >= (0)::numeric) AND (fire_alarms <= (1)::numeric)))),
    CONSTRAINT "ck_building$fire_department_a" CHECK (((fire_department_alarm IS NULL) OR ((fire_department_alarm >= (0)::numeric) AND (fire_department_alarm <= (1)::numeric)))),
    CONSTRAINT "ck_building$fire_department_c" CHECK (((fire_department_connection IS NULL) OR ((fire_department_connection >= (0)::numeric) AND (fire_department_connection <= (1)::numeric)))),
    CONSTRAINT "ck_building$fire_warning" CHECK (((fire_warning IS NULL) OR ((fire_warning >= (0)::numeric) AND (fire_warning <= (1)::numeric)))),
    CONSTRAINT "ck_building$fire_water" CHECK (((fire_water IS NULL) OR ((fire_water >= (0)::numeric) AND (fire_water <= (1)::numeric)))),
    CONSTRAINT "ck_building$gas_supply" CHECK (((gas_supply IS NULL) OR ((gas_supply >= (0)::numeric) AND (gas_supply <= (1)::numeric)))),
    CONSTRAINT "ck_building$litter" CHECK (((litter IS NULL) OR ((litter >= (0)::numeric) AND (litter <= (1)::numeric)))),
    CONSTRAINT "ck_building$medical_gas_suppl" CHECK (((medical_gas_supply IS NULL) OR ((medical_gas_supply >= (0)::numeric) AND (medical_gas_supply <= (1)::numeric)))),
    CONSTRAINT "ck_building$medical_lift" CHECK (((medical_lift IS NULL) OR ((medical_lift >= (0)::numeric) AND (medical_lift <= (1)::numeric)))),
    CONSTRAINT "ck_building$metal_doors" CHECK (((metal_doors IS NULL) OR ((metal_doors >= (0)::numeric) AND (metal_doors <= (1)::numeric)))),
    CONSTRAINT "ck_building$outpatient_seats" CHECK (((outpatient_seats IS NULL) OR ((outpatient_seats >= (0)::numeric) AND (outpatient_seats <= (1)::numeric)))),
    CONSTRAINT "ck_building$passenger_lift" CHECK (((passenger_lift IS NULL) OR ((passenger_lift >= (0)::numeric) AND (passenger_lift <= (1)::numeric)))),
    CONSTRAINT "ck_building$personal_protecti" CHECK (((personal_protection IS NULL) OR ((personal_protection >= (0)::numeric) AND (personal_protection <= (1)::numeric)))),
    CONSTRAINT "ck_building$room_attendants" CHECK (((room_attendants IS NULL) OR ((room_attendants >= (0)::numeric) AND (room_attendants <= (1)::numeric)))),
    CONSTRAINT "ck_building$security" CHECK (((security IS NULL) OR ((security >= (0)::numeric) AND (security <= (1)::numeric)))),
    CONSTRAINT "ck_building$stationary_seats" CHECK (((stationary_seats IS NULL) OR ((stationary_seats >= (0)::numeric) AND (stationary_seats <= (1)::numeric)))),
    CONSTRAINT "ck_building$suitability_disab" CHECK (((suitability_disabilities IS NULL) OR ((suitability_disabilities >= (0)::numeric) AND (suitability_disabilities <= (1)::numeric)))),
    CONSTRAINT "ck_building$video_monitoring" CHECK (((video_monitoring IS NULL) OR ((video_monitoring >= (0)::numeric) AND (video_monitoring <= (1)::numeric)))),
    CONSTRAINT "ck_building$water_supply" CHECK (((water_supply IS NULL) OR ((water_supply >= (0)::numeric) AND (water_supply <= (1)::numeric))))
);


ALTER TABLE mir.building OWNER TO postgres;

--
-- TOC entry 12280 (class 0 OID 0)
-- Dependencies: 372
-- Name: TABLE building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building IS 'здание';


--
-- TOC entry 12281 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.oid IS 'oid';


--
-- TOC entry 12282 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.plot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.plot IS 'земельные участки';


--
-- TOC entry 12283 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.building_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.building_name IS 'наименование';


--
-- TOC entry 12284 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.identifier IS 'идентификатор';


--
-- TOC entry 12285 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.building_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.building_type IS 'тип здания';


--
-- TOC entry 12286 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.address IS 'адрес здания';


--
-- TOC entry 12287 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.building_purpose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.building_purpose IS 'назначение';


--
-- TOC entry 12288 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.equipment_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.equipment_ownership IS 'форма владения';


--
-- TOC entry 12289 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.balance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.balance IS 'на балансе';


--
-- TOC entry 12290 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.beds; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.beds IS 'мощность по проекту, число коек';


--
-- TOC entry 12291 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.visits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.visits IS 'мощность по проекту, число посещений';


--
-- TOC entry 12292 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.beds_actual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.beds_actual IS 'фактическое число коек';


--
-- TOC entry 12293 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.stationary_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.stationary_seats IS 'стационарные места';


--
-- TOC entry 12294 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.outpatient_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.outpatient_seats IS 'амбулаторные места';


--
-- TOC entry 12295 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.volume; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.volume IS 'объем (м3)';


--
-- TOC entry 12296 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.area_total; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.area_total IS 'площадь здания общая (м2)';


--
-- TOC entry 12297 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.area_useful; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.area_useful IS 'площадь здания полезная (м2)';


--
-- TOC entry 12298 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.area_room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.area_room IS 'площадь коечных отделений (м2)';


--
-- TOC entry 12299 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.area_offices; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.area_offices IS 'площадь кабинетов  (м2)';


--
-- TOC entry 12300 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_alarms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_alarms IS 'автоматическая пожарная сигнализация';


--
-- TOC entry 12301 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.burglar_alarms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.burglar_alarms IS 'охранная сигнализация';


--
-- TOC entry 12302 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.button_police; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.button_police IS 'кнопка экстренного вызова милиции';


--
-- TOC entry 12303 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_warning; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_warning IS 'система оповещения при пожаре';


--
-- TOC entry 12304 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_water; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_water IS 'противопожарное водоснабжение';


--
-- TOC entry 12305 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_department_alarm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_department_alarm IS 'вывод сигнала противопож.защиты в пож.депо';


--
-- TOC entry 12306 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_department_connection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_department_connection IS 'связь с подразделением пожарной  охраны';


--
-- TOC entry 12307 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_violations; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_violations IS 'количество нарушений пож.без.';


--
-- TOC entry 12308 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.emergency_exits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.emergency_exits IS 'состояние эвакуационных выходов';


--
-- TOC entry 12309 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.personal_protection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.personal_protection IS 'персонал обеспечен индивид.защитой';


--
-- TOC entry 12310 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.litter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.litter IS 'наличие носилок';


--
-- TOC entry 12311 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fire_department_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fire_department_distance IS 'удаление от пож. подраздел.( км)';


--
-- TOC entry 12312 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.security; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.security IS 'наличие охраны';


--
-- TOC entry 12313 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.metal_doors; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.metal_doors IS 'металлические входные двери';


--
-- TOC entry 12314 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.video_monitoring; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.video_monitoring IS 'видеонаблюдение';


--
-- TOC entry 12315 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.room_attendants; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.room_attendants IS 'проживание сопровождающих лиц';


--
-- TOC entry 12316 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.fencing_area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.fencing_area IS 'ограждение территории';


--
-- TOC entry 12317 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.suitability_disabilities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.suitability_disabilities IS 'приспособленность для пациентов с ограниченными возможностями';


--
-- TOC entry 12318 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.project_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.project_type IS 'тип проекта';


--
-- TOC entry 12319 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.project_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.project_number IS 'номер проекта';


--
-- TOC entry 12320 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.project_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.project_date IS 'дата утверждения проекта';


--
-- TOC entry 12321 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.construction_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.construction_date IS 'дата постройки';


--
-- TOC entry 12322 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.repair_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.repair_date IS 'дата реконструкции';


--
-- TOC entry 12323 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.airing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.airing IS 'вентиляция';


--
-- TOC entry 12324 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.supporting_structure; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.supporting_structure IS 'несущие конструкции';


--
-- TOC entry 12325 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.floor_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.floor_type IS 'перекрытия';


--
-- TOC entry 12326 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.floor_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.floor_count IS 'этажность';


--
-- TOC entry 12327 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.conditioning; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.conditioning IS 'кондиционирование';


--
-- TOC entry 12328 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.power_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.power_supply IS 'электроснабжение';


--
-- TOC entry 12329 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.water_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.water_supply IS 'холодное водоснабжение';


--
-- TOC entry 12330 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.hot_water_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.hot_water_type IS 'горячее водоснабжение';


--
-- TOC entry 12331 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.heating_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.heating_type IS 'отопление';


--
-- TOC entry 12332 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.sewerage_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.sewerage_type IS 'канализация';


--
-- TOC entry 12333 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.medical_gas_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.medical_gas_supply IS 'лечебное газоснабжение';


--
-- TOC entry 12334 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.gas_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.gas_supply IS 'бытовое газоснабжение';


--
-- TOC entry 12335 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.communication_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.communication_type IS 'канал связи';


--
-- TOC entry 12336 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.passenger_lift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.passenger_lift IS 'пассажирский лифт';


--
-- TOC entry 12337 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.medical_lift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.medical_lift IS 'медицинский лифт';


--
-- TOC entry 12338 (class 0 OID 0)
-- Dependencies: 372
-- Name: COLUMN building.cost_primary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building.cost_primary IS 'первоначальная стоимость';


--
-- TOC entry 373 (class 1259 OID 18690)
-- Dependencies: 6913 6914 14
-- Name: building_communication_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_communication_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_communica$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_communication_type OWNER TO postgres;

--
-- TOC entry 12339 (class 0 OID 0)
-- Dependencies: 373
-- Name: TABLE building_communication_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_communication_type IS 'тип канала связи';


--
-- TOC entry 12340 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN building_communication_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_communication_type.oid IS 'oid';


--
-- TOC entry 12341 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN building_communication_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_communication_type.name IS 'name';


--
-- TOC entry 12342 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN building_communication_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_communication_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12343 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN building_communication_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_communication_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12344 (class 0 OID 0)
-- Dependencies: 373
-- Name: COLUMN building_communication_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_communication_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 374 (class 1259 OID 18698)
-- Dependencies: 6915 6916 14
-- Name: building_floor_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_floor_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_floor_typ$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_floor_type OWNER TO postgres;

--
-- TOC entry 12345 (class 0 OID 0)
-- Dependencies: 374
-- Name: TABLE building_floor_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_floor_type IS 'тип перекрытия';


--
-- TOC entry 12346 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN building_floor_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_floor_type.oid IS 'oid';


--
-- TOC entry 12347 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN building_floor_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_floor_type.name IS 'name';


--
-- TOC entry 12348 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN building_floor_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_floor_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12349 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN building_floor_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_floor_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12350 (class 0 OID 0)
-- Dependencies: 374
-- Name: COLUMN building_floor_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_floor_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 375 (class 1259 OID 18706)
-- Dependencies: 6917 6918 14
-- Name: building_heating_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_heating_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_heating_t$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_heating_type OWNER TO postgres;

--
-- TOC entry 12351 (class 0 OID 0)
-- Dependencies: 375
-- Name: TABLE building_heating_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_heating_type IS 'отопление';


--
-- TOC entry 12352 (class 0 OID 0)
-- Dependencies: 375
-- Name: COLUMN building_heating_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_heating_type.oid IS 'oid';


--
-- TOC entry 12353 (class 0 OID 0)
-- Dependencies: 375
-- Name: COLUMN building_heating_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_heating_type.name IS 'name';


--
-- TOC entry 12354 (class 0 OID 0)
-- Dependencies: 375
-- Name: COLUMN building_heating_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_heating_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12355 (class 0 OID 0)
-- Dependencies: 375
-- Name: COLUMN building_heating_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_heating_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12356 (class 0 OID 0)
-- Dependencies: 375
-- Name: COLUMN building_heating_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_heating_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 376 (class 1259 OID 18714)
-- Dependencies: 6919 6920 6921 6922 6923 6924 6925 6926 6927 6928 6929 6930 6931 6932 6933 6934 6935 6936 6937 6938 6939 6940 6941 6942 6943 6944 6945 6946 6947 6948 6949 6950 6951 6952 6953 6954 6955 6956 6957 6958 6959 6960 6961 6962 6963 6964 6965 6966 6967 6968 6969 6970 6971 14
-- Name: building_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    plot character(36),
    building_name character varying(255),
    identifier character varying(255),
    building_type character(36),
    address character(36),
    building_purpose character(36),
    equipment_ownership character(36),
    balance numeric(1,0) DEFAULT 0,
    cost_primary numeric(15,2),
    beds integer,
    visits integer,
    beds_actual integer,
    stationary_seats numeric(1,0) DEFAULT 0,
    outpatient_seats numeric(1,0) DEFAULT 0,
    volume numeric(15,2),
    area_total numeric(15,2),
    area_useful numeric(15,2),
    area_room numeric(15,2),
    area_offices numeric(15,2),
    fire_alarms numeric(1,0) DEFAULT 0,
    burglar_alarms numeric(1,0) DEFAULT 0,
    button_police numeric(1,0) DEFAULT 0,
    fire_warning numeric(1,0) DEFAULT 0,
    fire_water numeric(1,0) DEFAULT 0,
    fire_department_alarm numeric(1,0) DEFAULT 0,
    fire_department_connection numeric(1,0) DEFAULT 0,
    fire_violations integer,
    emergency_exits numeric(1,0) DEFAULT 0,
    personal_protection numeric(1,0) DEFAULT 0,
    litter numeric(1,0) DEFAULT 0,
    fire_department_distance numeric(15,2),
    security numeric(1,0) DEFAULT 0,
    metal_doors numeric(1,0) DEFAULT 0,
    video_monitoring numeric(1,0) DEFAULT 0,
    room_attendants numeric(1,0) DEFAULT 0,
    fencing_area numeric(1,0) DEFAULT 0,
    suitability_disabilities numeric(1,0) DEFAULT 0,
    project_type character(36),
    project_number character varying(255),
    project_date timestamp without time zone,
    construction_date timestamp without time zone,
    repair_date timestamp without time zone,
    supporting_structure character(36),
    floor_type character(36),
    floor_count integer,
    airing numeric(1,0) DEFAULT 0,
    conditioning numeric(1,0) DEFAULT 0,
    power_supply character(36),
    water_supply numeric(1,0) DEFAULT 0,
    hot_water_type character(36),
    heating_type character(36),
    sewerage_type character(36),
    medical_gas_supply numeric(1,0) DEFAULT 0,
    gas_supply numeric(1,0) DEFAULT 0,
    communication_type character(36),
    passenger_lift numeric(1,0) DEFAULT 0,
    medical_lift numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_building_history$airing" CHECK (((airing IS NULL) OR ((airing >= (0)::numeric) AND (airing <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$balance" CHECK (((balance IS NULL) OR ((balance >= (0)::numeric) AND (balance <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$burglar_alarms" CHECK (((burglar_alarms IS NULL) OR ((burglar_alarms >= (0)::numeric) AND (burglar_alarms <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$button_police" CHECK (((button_police IS NULL) OR ((button_police >= (0)::numeric) AND (button_police <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$conditioning" CHECK (((conditioning IS NULL) OR ((conditioning >= (0)::numeric) AND (conditioning <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$emergency_exits" CHECK (((emergency_exits IS NULL) OR ((emergency_exits >= (0)::numeric) AND (emergency_exits <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fencing_area" CHECK (((fencing_area IS NULL) OR ((fencing_area >= (0)::numeric) AND (fencing_area <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fire_alarms" CHECK (((fire_alarms IS NULL) OR ((fire_alarms >= (0)::numeric) AND (fire_alarms <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fire_department_a" CHECK (((fire_department_alarm IS NULL) OR ((fire_department_alarm >= (0)::numeric) AND (fire_department_alarm <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fire_department_c" CHECK (((fire_department_connection IS NULL) OR ((fire_department_connection >= (0)::numeric) AND (fire_department_connection <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fire_warning" CHECK (((fire_warning IS NULL) OR ((fire_warning >= (0)::numeric) AND (fire_warning <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$fire_water" CHECK (((fire_water IS NULL) OR ((fire_water >= (0)::numeric) AND (fire_water <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$gas_supply" CHECK (((gas_supply IS NULL) OR ((gas_supply >= (0)::numeric) AND (gas_supply <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$litter" CHECK (((litter IS NULL) OR ((litter >= (0)::numeric) AND (litter <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$medical_gas_suppl" CHECK (((medical_gas_supply IS NULL) OR ((medical_gas_supply >= (0)::numeric) AND (medical_gas_supply <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$medical_lift" CHECK (((medical_lift IS NULL) OR ((medical_lift >= (0)::numeric) AND (medical_lift <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$metal_doors" CHECK (((metal_doors IS NULL) OR ((metal_doors >= (0)::numeric) AND (metal_doors <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$outpatient_seats" CHECK (((outpatient_seats IS NULL) OR ((outpatient_seats >= (0)::numeric) AND (outpatient_seats <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$passenger_lift" CHECK (((passenger_lift IS NULL) OR ((passenger_lift >= (0)::numeric) AND (passenger_lift <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$personal_protecti" CHECK (((personal_protection IS NULL) OR ((personal_protection >= (0)::numeric) AND (personal_protection <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$room_attendants" CHECK (((room_attendants IS NULL) OR ((room_attendants >= (0)::numeric) AND (room_attendants <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$security" CHECK (((security IS NULL) OR ((security >= (0)::numeric) AND (security <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$stationary_seats" CHECK (((stationary_seats IS NULL) OR ((stationary_seats >= (0)::numeric) AND (stationary_seats <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$suitability_disab" CHECK (((suitability_disabilities IS NULL) OR ((suitability_disabilities >= (0)::numeric) AND (suitability_disabilities <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$video_monitoring" CHECK (((video_monitoring IS NULL) OR ((video_monitoring >= (0)::numeric) AND (video_monitoring <= (1)::numeric)))),
    CONSTRAINT "ck_building_history$water_supply" CHECK (((water_supply IS NULL) OR ((water_supply >= (0)::numeric) AND (water_supply <= (1)::numeric))))
);


ALTER TABLE mir.building_history OWNER TO postgres;

--
-- TOC entry 12357 (class 0 OID 0)
-- Dependencies: 376
-- Name: TABLE building_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_history IS 'здание2';


--
-- TOC entry 12358 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.hid IS 'hid';


--
-- TOC entry 12359 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.h_date IS 'h_date';


--
-- TOC entry 12360 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.h_date_end IS 'h_date_end';


--
-- TOC entry 12361 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.sysdate IS 'sysdate';


--
-- TOC entry 12362 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.oid IS 'oid';


--
-- TOC entry 12363 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.plot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.plot IS 'земельные участки';


--
-- TOC entry 12364 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.building_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.building_name IS 'наименование';


--
-- TOC entry 12365 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.identifier IS 'идентификатор';


--
-- TOC entry 12366 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.building_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.building_type IS 'тип здания';


--
-- TOC entry 12367 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.address IS 'адрес здания';


--
-- TOC entry 12368 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.building_purpose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.building_purpose IS 'назначение';


--
-- TOC entry 12369 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.equipment_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.equipment_ownership IS 'форма владения';


--
-- TOC entry 12370 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.balance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.balance IS 'на балансе';


--
-- TOC entry 12371 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.cost_primary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.cost_primary IS 'первоначальная стоимость';


--
-- TOC entry 12372 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.beds; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.beds IS 'мощность по проекту, число коек';


--
-- TOC entry 12373 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.visits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.visits IS 'мощность по проекту, число посещений';


--
-- TOC entry 12374 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.beds_actual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.beds_actual IS 'фактическое число коек';


--
-- TOC entry 12375 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.stationary_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.stationary_seats IS 'стационарные места';


--
-- TOC entry 12376 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.outpatient_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.outpatient_seats IS 'амбулаторные места';


--
-- TOC entry 12377 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.volume; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.volume IS 'объем (м3)';


--
-- TOC entry 12378 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.area_total; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.area_total IS 'площадь здания общая (м2)';


--
-- TOC entry 12379 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.area_useful; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.area_useful IS 'площадь здания полезная (м2)';


--
-- TOC entry 12380 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.area_room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.area_room IS 'площадь коечных отделений (м2)';


--
-- TOC entry 12381 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.area_offices; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.area_offices IS 'площадь кабинетов  (м2)';


--
-- TOC entry 12382 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_alarms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_alarms IS 'автоматическая пожарная сигнализация';


--
-- TOC entry 12383 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.burglar_alarms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.burglar_alarms IS 'охранная сигнализация';


--
-- TOC entry 12384 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.button_police; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.button_police IS 'кнопка экстренного вызова милиции';


--
-- TOC entry 12385 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_warning; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_warning IS 'система оповещения при пожаре';


--
-- TOC entry 12386 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_water; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_water IS 'противопожарное водоснабжение';


--
-- TOC entry 12387 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_department_alarm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_department_alarm IS 'вывод сигнала противопож.защиты в пож.депо';


--
-- TOC entry 12388 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_department_connection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_department_connection IS 'связь с подразделением пожарной  охраны';


--
-- TOC entry 12389 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_violations; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_violations IS 'количество нарушений пож.без.';


--
-- TOC entry 12390 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.emergency_exits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.emergency_exits IS 'состояние эвакуационных выходов';


--
-- TOC entry 12391 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.personal_protection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.personal_protection IS 'персонал обеспечен индивид.защитой';


--
-- TOC entry 12392 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.litter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.litter IS 'наличие носилок';


--
-- TOC entry 12393 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fire_department_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fire_department_distance IS 'удаление от пож. подраздел.( км)';


--
-- TOC entry 12394 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.security; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.security IS 'наличие охраны';


--
-- TOC entry 12395 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.metal_doors; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.metal_doors IS 'металлические входные двери';


--
-- TOC entry 12396 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.video_monitoring; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.video_monitoring IS 'видеонаблюдение';


--
-- TOC entry 12397 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.room_attendants; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.room_attendants IS 'проживание сопровождающих лиц';


--
-- TOC entry 12398 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.fencing_area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.fencing_area IS 'ограждение территории';


--
-- TOC entry 12399 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.suitability_disabilities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.suitability_disabilities IS 'приспособленность для пациентов с ограниченными возможностями';


--
-- TOC entry 12400 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.project_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.project_type IS 'тип проекта';


--
-- TOC entry 12401 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.project_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.project_number IS 'номер проекта';


--
-- TOC entry 12402 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.project_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.project_date IS 'дата утверждения проекта';


--
-- TOC entry 12403 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.construction_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.construction_date IS 'дата постройки';


--
-- TOC entry 12404 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.repair_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.repair_date IS 'дата реконструкции';


--
-- TOC entry 12405 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.supporting_structure; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.supporting_structure IS 'несущие конструкции';


--
-- TOC entry 12406 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.floor_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.floor_type IS 'перекрытия';


--
-- TOC entry 12407 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.floor_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.floor_count IS 'этажность';


--
-- TOC entry 12408 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.airing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.airing IS 'вентиляция';


--
-- TOC entry 12409 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.conditioning; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.conditioning IS 'кондиционирование';


--
-- TOC entry 12410 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.power_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.power_supply IS 'электроснабжение';


--
-- TOC entry 12411 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.water_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.water_supply IS 'холодное водоснабжение';


--
-- TOC entry 12412 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.hot_water_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.hot_water_type IS 'горячее водоснабжение';


--
-- TOC entry 12413 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.heating_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.heating_type IS 'отопление';


--
-- TOC entry 12414 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.sewerage_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.sewerage_type IS 'канализация';


--
-- TOC entry 12415 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.medical_gas_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.medical_gas_supply IS 'лечебное газоснабжение';


--
-- TOC entry 12416 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.gas_supply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.gas_supply IS 'бытовое газоснабжение';


--
-- TOC entry 12417 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.communication_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.communication_type IS 'канал связи';


--
-- TOC entry 12418 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.passenger_lift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.passenger_lift IS 'пассажирский лифт';


--
-- TOC entry 12419 (class 0 OID 0)
-- Dependencies: 376
-- Name: COLUMN building_history.medical_lift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_history.medical_lift IS 'медицинский лифт';


--
-- TOC entry 377 (class 1259 OID 18773)
-- Dependencies: 6972 6973 14
-- Name: building_hot_water_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_hot_water_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_hot_water$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_hot_water_type OWNER TO postgres;

--
-- TOC entry 12420 (class 0 OID 0)
-- Dependencies: 377
-- Name: TABLE building_hot_water_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_hot_water_type IS 'горячее водоснабжение';


--
-- TOC entry 12421 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN building_hot_water_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_hot_water_type.oid IS 'oid';


--
-- TOC entry 12422 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN building_hot_water_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_hot_water_type.name IS 'name';


--
-- TOC entry 12423 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN building_hot_water_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_hot_water_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12424 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN building_hot_water_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_hot_water_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12425 (class 0 OID 0)
-- Dependencies: 377
-- Name: COLUMN building_hot_water_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_hot_water_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 378 (class 1259 OID 18781)
-- Dependencies: 6974 6975 14
-- Name: building_ownership; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_ownership (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_ownership$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_ownership OWNER TO postgres;

--
-- TOC entry 12426 (class 0 OID 0)
-- Dependencies: 378
-- Name: TABLE building_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_ownership IS 'форма владения';


--
-- TOC entry 12427 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN building_ownership.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_ownership.oid IS 'oid';


--
-- TOC entry 12428 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN building_ownership.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_ownership.name IS 'name';


--
-- TOC entry 12429 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN building_ownership.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_ownership.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12430 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN building_ownership.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_ownership.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12431 (class 0 OID 0)
-- Dependencies: 378
-- Name: COLUMN building_ownership.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_ownership.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 379 (class 1259 OID 18789)
-- Dependencies: 6976 6977 14
-- Name: building_power_supply_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_power_supply_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_power_sup$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_power_supply_type OWNER TO postgres;

--
-- TOC entry 12432 (class 0 OID 0)
-- Dependencies: 379
-- Name: TABLE building_power_supply_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_power_supply_type IS 'типы электроснабжения';


--
-- TOC entry 12433 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN building_power_supply_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_power_supply_type.oid IS 'oid';


--
-- TOC entry 12434 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN building_power_supply_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_power_supply_type.name IS 'name';


--
-- TOC entry 12435 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN building_power_supply_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_power_supply_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12436 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN building_power_supply_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_power_supply_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12437 (class 0 OID 0)
-- Dependencies: 379
-- Name: COLUMN building_power_supply_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_power_supply_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 380 (class 1259 OID 18797)
-- Dependencies: 14
-- Name: building_price; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_price (
    oid character(36) NOT NULL,
    building character(36),
    date_evaluation timestamp without time zone,
    cost_depreciation numeric(15,2),
    cost_residual numeric(15,2),
    cost_actual numeric(15,2)
);


ALTER TABLE mir.building_price OWNER TO postgres;

--
-- TOC entry 12438 (class 0 OID 0)
-- Dependencies: 380
-- Name: TABLE building_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_price IS 'Истрия оценки (стоимость) зданий';


--
-- TOC entry 12439 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.oid IS 'oid';


--
-- TOC entry 12440 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.building IS 'здания';


--
-- TOC entry 12441 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.date_evaluation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.date_evaluation IS 'дата оценки';


--
-- TOC entry 12442 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.cost_depreciation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.cost_depreciation IS 'стоимость износа (амортизация)';


--
-- TOC entry 12443 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.cost_residual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.cost_residual IS 'остаточная стоимость';


--
-- TOC entry 12444 (class 0 OID 0)
-- Dependencies: 380
-- Name: COLUMN building_price.cost_actual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_price.cost_actual IS 'фактическая стоимость';


--
-- TOC entry 381 (class 1259 OID 18800)
-- Dependencies: 6978 6979 14
-- Name: building_project_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_project_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_project_t$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_project_type OWNER TO postgres;

--
-- TOC entry 12445 (class 0 OID 0)
-- Dependencies: 381
-- Name: TABLE building_project_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_project_type IS 'типы проектов зданий ';


--
-- TOC entry 12446 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN building_project_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_project_type.oid IS 'oid';


--
-- TOC entry 12447 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN building_project_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_project_type.name IS 'name';


--
-- TOC entry 12448 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN building_project_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_project_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12449 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN building_project_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_project_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12450 (class 0 OID 0)
-- Dependencies: 381
-- Name: COLUMN building_project_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_project_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 382 (class 1259 OID 18808)
-- Dependencies: 6980 6981 14
-- Name: building_purpose; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_purpose (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_purpose$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_purpose OWNER TO postgres;

--
-- TOC entry 12451 (class 0 OID 0)
-- Dependencies: 382
-- Name: TABLE building_purpose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_purpose IS 'назначение  здания (функции)';


--
-- TOC entry 12452 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN building_purpose.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_purpose.oid IS 'oid';


--
-- TOC entry 12453 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN building_purpose.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_purpose.name IS 'name';


--
-- TOC entry 12454 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN building_purpose.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_purpose.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12455 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN building_purpose.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_purpose.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12456 (class 0 OID 0)
-- Dependencies: 382
-- Name: COLUMN building_purpose.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_purpose.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 383 (class 1259 OID 18816)
-- Dependencies: 6982 6983 14
-- Name: building_sewerage_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_sewerage_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_sewerage_$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_sewerage_type OWNER TO postgres;

--
-- TOC entry 12457 (class 0 OID 0)
-- Dependencies: 383
-- Name: TABLE building_sewerage_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_sewerage_type IS 'канализация';


--
-- TOC entry 12458 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN building_sewerage_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_sewerage_type.oid IS 'oid';


--
-- TOC entry 12459 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN building_sewerage_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_sewerage_type.name IS 'name';


--
-- TOC entry 12460 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN building_sewerage_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_sewerage_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12461 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN building_sewerage_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_sewerage_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12462 (class 0 OID 0)
-- Dependencies: 383
-- Name: COLUMN building_sewerage_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_sewerage_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 384 (class 1259 OID 18824)
-- Dependencies: 6984 6985 6986 6987 6988 6989 14
-- Name: building_state; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_state (
    oid character(36) NOT NULL,
    building character(36),
    date_state timestamp without time zone,
    alert_condition numeric(1,0) DEFAULT 0,
    reconstruction numeric(1,0) DEFAULT 0,
    repair numeric(1,0) DEFAULT 0,
    current_state character(36),
    CONSTRAINT "ck_building_state$alert_condition" CHECK (((alert_condition IS NULL) OR ((alert_condition >= (0)::numeric) AND (alert_condition <= (1)::numeric)))),
    CONSTRAINT "ck_building_state$reconstruction" CHECK (((reconstruction IS NULL) OR ((reconstruction >= (0)::numeric) AND (reconstruction <= (1)::numeric)))),
    CONSTRAINT "ck_building_state$repair" CHECK (((repair IS NULL) OR ((repair >= (0)::numeric) AND (repair <= (1)::numeric))))
);


ALTER TABLE mir.building_state OWNER TO postgres;

--
-- TOC entry 12463 (class 0 OID 0)
-- Dependencies: 384
-- Name: TABLE building_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_state IS 'Техническое состояние здания';


--
-- TOC entry 12464 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.oid IS 'oid';


--
-- TOC entry 12465 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.building IS 'здание';


--
-- TOC entry 12466 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.date_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.date_state IS 'дата оценки';


--
-- TOC entry 12467 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.alert_condition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.alert_condition IS 'находится в аварийном состоянии';


--
-- TOC entry 12468 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.reconstruction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.reconstruction IS 'требует реконструкции';


--
-- TOC entry 12469 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.repair; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.repair IS 'требует капитального ремонта';


--
-- TOC entry 12470 (class 0 OID 0)
-- Dependencies: 384
-- Name: COLUMN building_state.current_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state.current_state IS 'текущее состояние здания';


--
-- TOC entry 385 (class 1259 OID 18833)
-- Dependencies: 6990 6991 14
-- Name: building_state_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_state_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_state_typ$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_state_type OWNER TO postgres;

--
-- TOC entry 12471 (class 0 OID 0)
-- Dependencies: 385
-- Name: TABLE building_state_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_state_type IS 'состояние здания
аварийное, на ремонте, строится...';


--
-- TOC entry 12472 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN building_state_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state_type.oid IS 'oid';


--
-- TOC entry 12473 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN building_state_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state_type.name IS 'name';


--
-- TOC entry 12474 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN building_state_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12475 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN building_state_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12476 (class 0 OID 0)
-- Dependencies: 385
-- Name: COLUMN building_state_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_state_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 386 (class 1259 OID 18841)
-- Dependencies: 6992 6993 14
-- Name: building_supporting_structure; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_supporting_structure (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_supportin$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_supporting_structure OWNER TO postgres;

--
-- TOC entry 12477 (class 0 OID 0)
-- Dependencies: 386
-- Name: TABLE building_supporting_structure; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_supporting_structure IS 'несущие конструкции';


--
-- TOC entry 12478 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN building_supporting_structure.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_supporting_structure.oid IS 'oid';


--
-- TOC entry 12479 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN building_supporting_structure.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_supporting_structure.name IS 'name';


--
-- TOC entry 12480 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN building_supporting_structure.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_supporting_structure.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12481 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN building_supporting_structure.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_supporting_structure.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12482 (class 0 OID 0)
-- Dependencies: 386
-- Name: COLUMN building_supporting_structure.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_supporting_structure.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 387 (class 1259 OID 18849)
-- Dependencies: 6994 6995 14
-- Name: building_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE building_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_building_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.building_type OWNER TO postgres;

--
-- TOC entry 12483 (class 0 OID 0)
-- Dependencies: 387
-- Name: TABLE building_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE building_type IS 'тип здания';


--
-- TOC entry 12484 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN building_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_type.oid IS 'oid';


--
-- TOC entry 12485 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN building_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_type.name IS 'name';


--
-- TOC entry 12486 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN building_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12487 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN building_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12488 (class 0 OID 0)
-- Dependencies: 387
-- Name: COLUMN building_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN building_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 388 (class 1259 OID 18857)
-- Dependencies: 14
-- Name: cabinet; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cabinet (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    building character(36),
    cabinet_name character varying(255),
    phone character varying(255),
    synonym character(30)
);


ALTER TABLE mir.cabinet OWNER TO postgres;

--
-- TOC entry 12489 (class 0 OID 0)
-- Dependencies: 388
-- Name: TABLE cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE cabinet IS 'кабинет';


--
-- TOC entry 12490 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.oid IS 'oid';


--
-- TOC entry 12491 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.otdel IS 'otdel';


--
-- TOC entry 12492 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.building IS 'building';


--
-- TOC entry 12493 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.cabinet_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.cabinet_name IS 'cabinet_name';


--
-- TOC entry 12494 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.phone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.phone IS 'phone';


--
-- TOC entry 12495 (class 0 OID 0)
-- Dependencies: 388
-- Name: COLUMN cabinet.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cabinet.synonym IS 'id кабинета в PACS (человеко-читаемый)';


--
-- TOC entry 389 (class 1259 OID 18863)
-- Dependencies: 6996 14
-- Name: callservice; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE callservice (
    oid character varying(36) NOT NULL,
    time_call timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.callservice OWNER TO postgres;

--
-- TOC entry 390 (class 1259 OID 18867)
-- Dependencies: 14
-- Name: cardemployee; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cardemployee (
    h_date date NOT NULL,
    h_date_end date,
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    id integer,
    sysuser character(36),
    otdel character(36) NOT NULL,
    post character(36) NOT NULL,
    date_post_begin timestamp without time zone,
    date_post_end timestamp without time zone,
    tabelnumber character varying(50),
    care character(36),
    conditions character(36),
    "position" character(36),
    typein character(36),
    orderin character(36),
    typeout character(36),
    orderout character(36),
    regime character(36),
    wage numeric(15,2),
    population integer,
    positiontype character(36)
);


ALTER TABLE mir.cardemployee OWNER TO postgres;

--
-- TOC entry 12496 (class 0 OID 0)
-- Dependencies: 390
-- Name: TABLE cardemployee; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE cardemployee IS 'Карточка сотрудника';


--
-- TOC entry 12497 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.h_date IS 'h_date';


--
-- TOC entry 12498 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.h_date_end IS 'h_date_end';


--
-- TOC entry 12499 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.oid IS 'oid';


--
-- TOC entry 12500 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.people IS 'people';


--
-- TOC entry 12501 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.id IS 'id';


--
-- TOC entry 12502 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.sysuser IS 'sysuser';


--
-- TOC entry 12503 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.otdel IS 'otdel';


--
-- TOC entry 12504 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.post IS 'post';


--
-- TOC entry 12505 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.date_post_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.date_post_begin IS 'дата назначения на должность';


--
-- TOC entry 12506 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.date_post_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.date_post_end IS 'дата снятия с должности';


--
-- TOC entry 12507 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.tabelnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.tabelnumber IS 'табельный номер';


--
-- TOC entry 12508 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.care IS 'вид мп';


--
-- TOC entry 12509 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.conditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.conditions IS 'условия мп';


--
-- TOC entry 12510 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee."position"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee."position" IS 'вид должности';


--
-- TOC entry 12511 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.typein; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.typein IS 'тип записи';


--
-- TOC entry 12512 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.orderin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.orderin IS 'приказ №1';


--
-- TOC entry 12513 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.typeout; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.typeout IS 'тип записи2';


--
-- TOC entry 12514 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.orderout; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.orderout IS 'приказ №2';


--
-- TOC entry 12515 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.regime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.regime IS 'режим работы';


--
-- TOC entry 12516 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.wage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.wage IS 'ставка';


--
-- TOC entry 12517 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.population; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.population IS 'численность прикрепленного населения';


--
-- TOC entry 12518 (class 0 OID 0)
-- Dependencies: 390
-- Name: COLUMN cardemployee.positiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cardemployee.positiontype IS 'тип занятия должности';


--
-- TOC entry 391 (class 1259 OID 18873)
-- Dependencies: 14
-- Name: category; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE category (
    oid character varying(36) NOT NULL,
    name character varying(250),
    id numeric
);


ALTER TABLE mir.category OWNER TO postgres;

--
-- TOC entry 12519 (class 0 OID 0)
-- Dependencies: 391
-- Name: TABLE category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE category IS 'категория льготы (по данным  ЛПУ)';


--
-- TOC entry 12520 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN category.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN category.oid IS 'oid';


--
-- TOC entry 12521 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN category.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN category.name IS 'name';


--
-- TOC entry 12522 (class 0 OID 0)
-- Dependencies: 391
-- Name: COLUMN category.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN category.id IS 'id';


--
-- TOC entry 392 (class 1259 OID 18879)
-- Dependencies: 14
-- Name: changedusers; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE changedusers (
    oid character(36) NOT NULL,
    login character varying(100)
);


ALTER TABLE mir.changedusers OWNER TO postgres;

--
-- TOC entry 12523 (class 0 OID 0)
-- Dependencies: 392
-- Name: TABLE changedusers; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE changedusers IS 'лог создания/изменения логина пользователя в базе';


--
-- TOC entry 12524 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN changedusers.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changedusers.oid IS 'oid';


--
-- TOC entry 12525 (class 0 OID 0)
-- Dependencies: 392
-- Name: COLUMN changedusers.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changedusers.login IS 'login';


--
-- TOC entry 393 (class 1259 OID 18882)
-- Dependencies: 6997 14
-- Name: changelpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE changelpu (
    oid character(36) NOT NULL,
    givedate date NOT NULL,
    address_polis character(36),
    address_live character(36),
    medhelptype character(36),
    lpufrom character(36) NOT NULL,
    lputo character(36),
    districtfrom character(36),
    districtto character(36),
    sysuserfrom character(36),
    sysuserto character(36),
    delegate character varying(255),
    status numeric DEFAULT 0 NOT NULL,
    resultdate date,
    processuser character(36),
    people character(36) NOT NULL
);


ALTER TABLE mir.changelpu OWNER TO postgres;

--
-- TOC entry 12526 (class 0 OID 0)
-- Dependencies: 393
-- Name: TABLE changelpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE changelpu IS 'Заявки на прикрепление к ЛПУ';


--
-- TOC entry 12527 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.oid IS 'oid';


--
-- TOC entry 12528 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.givedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.givedate IS 'givedate';


--
-- TOC entry 12529 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.address_polis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.address_polis IS 'address_polis';


--
-- TOC entry 12530 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.address_live; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.address_live IS 'address_live';


--
-- TOC entry 12531 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.medhelptype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.medhelptype IS 'medhelptype';


--
-- TOC entry 12532 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.lpufrom; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.lpufrom IS 'lpufrom';


--
-- TOC entry 12533 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.lputo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.lputo IS 'lputo';


--
-- TOC entry 12534 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.districtfrom; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.districtfrom IS 'districtfrom';


--
-- TOC entry 12535 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.districtto; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.districtto IS 'districtto';


--
-- TOC entry 12536 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.sysuserfrom; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.sysuserfrom IS 'sysuserfrom';


--
-- TOC entry 12537 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.sysuserto; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.sysuserto IS 'sysuserto';


--
-- TOC entry 12538 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.delegate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.delegate IS 'delegate';


--
-- TOC entry 12539 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.status IS '0 - не обработана; 1 - принята; 2 - отклонена';


--
-- TOC entry 12540 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.resultdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.resultdate IS 'resultdate';


--
-- TOC entry 12541 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.processuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.processuser IS 'processuser';


--
-- TOC entry 12542 (class 0 OID 0)
-- Dependencies: 393
-- Name: COLUMN changelpu.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN changelpu.people IS 'people';


--
-- TOC entry 394 (class 1259 OID 18889)
-- Dependencies: 14
-- Name: chatgroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE chatgroup (
    oid character(36) NOT NULL,
    ownerid character(36) NOT NULL,
    groupname character varying(255) NOT NULL
);


ALTER TABLE mir.chatgroup OWNER TO postgres;

--
-- TOC entry 12543 (class 0 OID 0)
-- Dependencies: 394
-- Name: TABLE chatgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE chatgroup IS 'Таблица для хранения групп чата';


--
-- TOC entry 12544 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN chatgroup.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chatgroup.oid IS 'Идентификатор';


--
-- TOC entry 12545 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN chatgroup.ownerid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chatgroup.ownerid IS 'Ссылка на создателя группы';


--
-- TOC entry 12546 (class 0 OID 0)
-- Dependencies: 394
-- Name: COLUMN chatgroup.groupname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chatgroup.groupname IS 'Имя группы';


--
-- TOC entry 395 (class 1259 OID 18892)
-- Dependencies: 14
-- Name: chatgroupuser; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE chatgroupuser (
    chatgroupid character(36) NOT NULL,
    sotrid character(255) NOT NULL
);


ALTER TABLE mir.chatgroupuser OWNER TO postgres;

--
-- TOC entry 12547 (class 0 OID 0)
-- Dependencies: 395
-- Name: TABLE chatgroupuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE chatgroupuser IS 'Таблица для хранения пользователей групп чата';


--
-- TOC entry 12548 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN chatgroupuser.chatgroupid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chatgroupuser.chatgroupid IS 'Ссылка на создателя группы';


--
-- TOC entry 12549 (class 0 OID 0)
-- Dependencies: 395
-- Name: COLUMN chatgroupuser.sotrid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chatgroupuser.sotrid IS 'Ссылка на юзера группы';


--
-- TOC entry 396 (class 1259 OID 18895)
-- Dependencies: 6998 6999 14
-- Name: chathistory; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE chathistory (
    oid character(36) NOT NULL,
    senderid character(36) NOT NULL,
    receiverid character(36) NOT NULL,
    messagetime timestamp without time zone DEFAULT now() NOT NULL,
    messagetext character varying(255) NOT NULL,
    isnew boolean DEFAULT true NOT NULL
);


ALTER TABLE mir.chathistory OWNER TO postgres;

--
-- TOC entry 12550 (class 0 OID 0)
-- Dependencies: 396
-- Name: TABLE chathistory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE chathistory IS 'Таблица для хранения сообщений чата';


--
-- TOC entry 12551 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.oid IS 'Идентификатор';


--
-- TOC entry 12552 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.senderid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.senderid IS 'Ссылка на отправителя';


--
-- TOC entry 12553 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.receiverid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.receiverid IS 'Ссылка на получателя';


--
-- TOC entry 12554 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.messagetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.messagetime IS 'Время отправления сообщения';


--
-- TOC entry 12555 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.messagetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.messagetext IS 'Текст сообщения';


--
-- TOC entry 12556 (class 0 OID 0)
-- Dependencies: 396
-- Name: COLUMN chathistory.isnew; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN chathistory.isnew IS 'Прочитано ли сообщение';


--
-- TOC entry 397 (class 1259 OID 18900)
-- Dependencies: 14
-- Name: children_evolution_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE children_evolution_history (
    id character(36) NOT NULL,
    people_id character(36),
    chronic_diseases text,
    living_conditions text,
    additional_data text
);


ALTER TABLE mir.children_evolution_history OWNER TO postgres;

--
-- TOC entry 12557 (class 0 OID 0)
-- Dependencies: 397
-- Name: TABLE children_evolution_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE children_evolution_history IS 'История развития ребенка';


--
-- TOC entry 12558 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN children_evolution_history.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN children_evolution_history.id IS 'id';


--
-- TOC entry 12559 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN children_evolution_history.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN children_evolution_history.people_id IS 'Аттавизм. Удалить позднее';


--
-- TOC entry 12560 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN children_evolution_history.chronic_diseases; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN children_evolution_history.chronic_diseases IS 'chronic_diseases';


--
-- TOC entry 12561 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN children_evolution_history.living_conditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN children_evolution_history.living_conditions IS 'living_conditions';


--
-- TOC entry 12562 (class 0 OID 0)
-- Dependencies: 397
-- Name: COLUMN children_evolution_history.additional_data; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN children_evolution_history.additional_data IS 'additional_data';


--
-- TOC entry 398 (class 1259 OID 18906)
-- Dependencies: 7000 7001 14
-- Name: citizenship; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE citizenship (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    code character varying(255),
    CONSTRAINT "ck_citizenship$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.citizenship OWNER TO postgres;

--
-- TOC entry 12563 (class 0 OID 0)
-- Dependencies: 398
-- Name: TABLE citizenship; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE citizenship IS 'гражданство
';


--
-- TOC entry 12564 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.oid IS 'oid';


--
-- TOC entry 12565 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.id IS 'id';


--
-- TOC entry 12566 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.name IS 'name';


--
-- TOC entry 12567 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12568 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12569 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 12570 (class 0 OID 0)
-- Dependencies: 398
-- Name: COLUMN citizenship.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citizenship.code IS 'Код ФОМС';


--
-- TOC entry 399 (class 1259 OID 18914)
-- Dependencies: 14
-- Name: hcategory; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE hcategory (
    oid character(36) NOT NULL,
    parent character(36),
    name character varying(100),
    optimisticlockfield numeric,
    gcrecord numeric
);


ALTER TABLE mir.hcategory OWNER TO postgres;

--
-- TOC entry 12571 (class 0 OID 0)
-- Dependencies: 399
-- Name: TABLE hcategory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE hcategory IS 'Справочник древовидных структур (Кладр...)';


--
-- TOC entry 12572 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN hcategory.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hcategory.oid IS 'oid';


--
-- TOC entry 12573 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN hcategory.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hcategory.parent IS 'parent';


--
-- TOC entry 12574 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN hcategory.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hcategory.name IS 'name';


--
-- TOC entry 12575 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN hcategory.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hcategory.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 12576 (class 0 OID 0)
-- Dependencies: 399
-- Name: COLUMN hcategory.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hcategory.gcrecord IS 'gcrecord';


--
-- TOC entry 400 (class 1259 OID 18920)
-- Dependencies: 6758 14
-- Name: city_geo; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW city_geo AS
    SELECT s.oid, s.fc_prefix, h.name FROM hcategory h, tkladrspr s WHERE (((s.oid = h.oid) AND ((s.fc_prefix)::text = 'г'::text)) AND (h.gcrecord IS NULL));


ALTER TABLE mir.city_geo OWNER TO postgres;

--
-- TOC entry 12577 (class 0 OID 0)
-- Dependencies: 400
-- Name: VIEW city_geo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW city_geo IS 'CITY_GEO';


--
-- TOC entry 401 (class 1259 OID 18924)
-- Dependencies: 14
-- Name: citycloud; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE citycloud (
    city character(36) NOT NULL,
    freq numeric
);


ALTER TABLE mir.citycloud OWNER TO postgres;

--
-- TOC entry 12578 (class 0 OID 0)
-- Dependencies: 401
-- Name: TABLE citycloud; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE citycloud IS 'Облако городов';


--
-- TOC entry 12579 (class 0 OID 0)
-- Dependencies: 401
-- Name: COLUMN citycloud.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citycloud.city IS 'city';


--
-- TOC entry 12580 (class 0 OID 0)
-- Dependencies: 401
-- Name: COLUMN citycloud.freq; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN citycloud.freq IS 'freq';


--
-- TOC entry 402 (class 1259 OID 18930)
-- Dependencies: 14
-- Name: clientscompany; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clientscompany (
    oid character(36) NOT NULL,
    login character varying(100),
    password character varying(100),
    conpersur character varying(100),
    conpername character varying(100),
    conperpatr character varying(100),
    conperphone character varying(100),
    conperemail character varying(100)
);


ALTER TABLE mir.clientscompany OWNER TO postgres;

--
-- TOC entry 12581 (class 0 OID 0)
-- Dependencies: 402
-- Name: TABLE clientscompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clientscompany IS 'CLIENTSCOMPANY';


--
-- TOC entry 12582 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.oid IS 'oid';


--
-- TOC entry 12583 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.login IS 'login';


--
-- TOC entry 12584 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.password IS 'password';


--
-- TOC entry 12585 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.conpersur; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.conpersur IS 'conpersur';


--
-- TOC entry 12586 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.conpername; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.conpername IS 'conpername';


--
-- TOC entry 12587 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.conperpatr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.conperpatr IS 'conperpatr';


--
-- TOC entry 12588 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.conperphone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.conperphone IS 'conperphone';


--
-- TOC entry 12589 (class 0 OID 0)
-- Dependencies: 402
-- Name: COLUMN clientscompany.conperemail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clientscompany.conperemail IS 'conperemail';


--
-- TOC entry 403 (class 1259 OID 18936)
-- Dependencies: 14
-- Name: clinicalmin; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clinicalmin (
    oid character(36) NOT NULL,
    oid_mdoc character(36),
    oid_shablon character(36),
    column_4 character(10)
);


ALTER TABLE mir.clinicalmin OWNER TO postgres;

--
-- TOC entry 12590 (class 0 OID 0)
-- Dependencies: 403
-- Name: TABLE clinicalmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clinicalmin IS 'clinicalmin';


--
-- TOC entry 12591 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN clinicalmin.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalmin.oid IS 'oid';


--
-- TOC entry 12592 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN clinicalmin.oid_mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalmin.oid_mdoc IS 'oid_mdoc';


--
-- TOC entry 12593 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN clinicalmin.oid_shablon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalmin.oid_shablon IS 'oid_shablon';


--
-- TOC entry 12594 (class 0 OID 0)
-- Dependencies: 403
-- Name: COLUMN clinicalmin.column_4; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalmin.column_4 IS 'column_4';


--
-- TOC entry 404 (class 1259 OID 18939)
-- Dependencies: 14
-- Name: clinicalminservices; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clinicalminservices (
    oid character(36) NOT NULL,
    oidservices character(36),
    name character varying(255),
    oidclinical character(36)
);


ALTER TABLE mir.clinicalminservices OWNER TO postgres;

--
-- TOC entry 12595 (class 0 OID 0)
-- Dependencies: 404
-- Name: TABLE clinicalminservices; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clinicalminservices IS 'clinicalminservices';


--
-- TOC entry 12596 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN clinicalminservices.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservices.oid IS 'oid';


--
-- TOC entry 12597 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN clinicalminservices.oidservices; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservices.oidservices IS 'связь со справочником services';


--
-- TOC entry 12598 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN clinicalminservices.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservices.name IS 'Название обследования';


--
-- TOC entry 12599 (class 0 OID 0)
-- Dependencies: 404
-- Name: COLUMN clinicalminservices.oidclinical; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservices.oidclinical IS 'oidclinical';


--
-- TOC entry 405 (class 1259 OID 18942)
-- Dependencies: 14
-- Name: clinicalminservicesshablon; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clinicalminservicesshablon (
    oid character(36) NOT NULL,
    oidservices character(36),
    name character varying(255),
    ordering integer
);


ALTER TABLE mir.clinicalminservicesshablon OWNER TO postgres;

--
-- TOC entry 12600 (class 0 OID 0)
-- Dependencies: 405
-- Name: TABLE clinicalminservicesshablon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clinicalminservicesshablon IS 'clinicalminserviсesshablon';


--
-- TOC entry 12601 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN clinicalminservicesshablon.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesshablon.oid IS 'oid';


--
-- TOC entry 12602 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN clinicalminservicesshablon.oidservices; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesshablon.oidservices IS 'связь со справочником services';


--
-- TOC entry 12603 (class 0 OID 0)
-- Dependencies: 405
-- Name: COLUMN clinicalminservicesshablon.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesshablon.name IS 'Название обследования';


--
-- TOC entry 406 (class 1259 OID 18945)
-- Dependencies: 14
-- Name: clinicalminservicesvalues; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clinicalminservicesvalues (
    oid character(36) NOT NULL,
    oidclinicalservice character(36),
    year_value character varying(255),
    value character varying(255),
    oidclinicalmin character(36)
);


ALTER TABLE mir.clinicalminservicesvalues OWNER TO postgres;

--
-- TOC entry 12604 (class 0 OID 0)
-- Dependencies: 406
-- Name: TABLE clinicalminservicesvalues; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clinicalminservicesvalues IS 'clinicalminservicesvalues';


--
-- TOC entry 12605 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN clinicalminservicesvalues.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesvalues.oid IS 'oid';


--
-- TOC entry 12606 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN clinicalminservicesvalues.oidclinicalservice; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesvalues.oidclinicalservice IS 'oidclinicalservice';


--
-- TOC entry 12607 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN clinicalminservicesvalues.year_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesvalues.year_value IS 'год';


--
-- TOC entry 12608 (class 0 OID 0)
-- Dependencies: 406
-- Name: COLUMN clinicalminservicesvalues.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clinicalminservicesvalues.value IS 'значение';


--
-- TOC entry 407 (class 1259 OID 18951)
-- Dependencies: 14
-- Name: cls_mz_phgroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cls_mz_phgroup (
    id bigint NOT NULL,
    parentid bigint NOT NULL,
    name character varying
);


ALTER TABLE mir.cls_mz_phgroup OWNER TO postgres;

--
-- TOC entry 408 (class 1259 OID 18957)
-- Dependencies: 14
-- Name: cls_phgr_limp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cls_phgr_limp (
    id bigint NOT NULL,
    parentid bigint NOT NULL,
    name character varying
);


ALTER TABLE mir.cls_phgr_limp OWNER TO postgres;

--
-- TOC entry 409 (class 1259 OID 18963)
-- Dependencies: 14
-- Name: clsatc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clsatc (
    id integer NOT NULL,
    parentid integer,
    name character varying(1024)
);


ALTER TABLE mir.clsatc OWNER TO postgres;

--
-- TOC entry 12609 (class 0 OID 0)
-- Dependencies: 409
-- Name: TABLE clsatc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clsatc IS 'АТХ-классификация препаратов';


--
-- TOC entry 12610 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN clsatc.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsatc.id IS 'Код строки - первичный ключ';


--
-- TOC entry 12611 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN clsatc.parentid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsatc.parentid IS 'Ссылка на код узла - внешний ключ на эту таблицу';


--
-- TOC entry 12612 (class 0 OID 0)
-- Dependencies: 409
-- Name: COLUMN clsatc.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsatc.name IS 'Название строки АТХ-классификатора';


--
-- TOC entry 410 (class 1259 OID 18969)
-- Dependencies: 14
-- Name: clsdrugforms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clsdrugforms (
    id integer NOT NULL,
    parentid integer,
    name character varying(1024),
    fullname character varying(1024)
);


ALTER TABLE mir.clsdrugforms OWNER TO postgres;

--
-- TOC entry 12613 (class 0 OID 0)
-- Dependencies: 410
-- Name: TABLE clsdrugforms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clsdrugforms IS 'Классификация лекарственных форм препаратов';


--
-- TOC entry 12614 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN clsdrugforms.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsdrugforms.id IS 'Код строки КЛФ - первичный ключ';


--
-- TOC entry 12615 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN clsdrugforms.parentid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsdrugforms.parentid IS 'Ссылка на код узла - внешний ключ на эту таблицу';


--
-- TOC entry 12616 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN clsdrugforms.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsdrugforms.name IS 'Краткое название ЛФ';


--
-- TOC entry 12617 (class 0 OID 0)
-- Dependencies: 410
-- Name: COLUMN clsdrugforms.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsdrugforms.fullname IS 'Полное название ЛФ';


--
-- TOC entry 411 (class 1259 OID 18975)
-- Dependencies: 14
-- Name: clsiic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clsiic (
    id integer NOT NULL,
    parentid integer,
    name character varying(1024)
);


ALTER TABLE mir.clsiic OWNER TO postgres;

--
-- TOC entry 12618 (class 0 OID 0)
-- Dependencies: 411
-- Name: TABLE clsiic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clsiic IS 'МКБ-классификация препаратов';


--
-- TOC entry 12619 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN clsiic.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsiic.id IS 'Код строки - первичный ключ';


--
-- TOC entry 12620 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN clsiic.parentid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsiic.parentid IS 'Код узла - внешний ключ на эту таблицу';


--
-- TOC entry 12621 (class 0 OID 0)
-- Dependencies: 411
-- Name: COLUMN clsiic.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clsiic.name IS 'Название строки МКБ-классификации';


--
-- TOC entry 412 (class 1259 OID 18981)
-- Dependencies: 14
-- Name: clsntfr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clsntfr (
    id bigint NOT NULL,
    parentid bigint NOT NULL,
    name character varying
);


ALTER TABLE mir.clsntfr OWNER TO postgres;

--
-- TOC entry 413 (class 1259 OID 18987)
-- Dependencies: 14
-- Name: clspharmagroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE clspharmagroup (
    id integer NOT NULL,
    parentid integer,
    name character varying(1024),
    description text
);


ALTER TABLE mir.clspharmagroup OWNER TO postgres;

--
-- TOC entry 12622 (class 0 OID 0)
-- Dependencies: 413
-- Name: TABLE clspharmagroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE clspharmagroup IS 'Классификация фармакологических групп препаратов и ДВ';


--
-- TOC entry 12623 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN clspharmagroup.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clspharmagroup.id IS 'Код ФГ - первичный ключ';


--
-- TOC entry 12624 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN clspharmagroup.parentid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clspharmagroup.parentid IS 'Код узла - внешний ключ на эту таблицу';


--
-- TOC entry 12625 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN clspharmagroup.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clspharmagroup.name IS 'Название ФГ';


--
-- TOC entry 12626 (class 0 OID 0)
-- Dependencies: 413
-- Name: COLUMN clspharmagroup.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN clspharmagroup.description IS 'Описание ФГ';


--
-- TOC entry 414 (class 1259 OID 18993)
-- Dependencies: 14
-- Name: cod_buffer_transfer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cod_buffer_transfer (
    id numeric,
    upload_date date,
    regist_date date,
    table_name character varying(255),
    key_field_value character varying(36),
    action character varying(255),
    lpu character varying(36),
    oid character varying(36) NOT NULL
);


ALTER TABLE mir.cod_buffer_transfer OWNER TO postgres;

--
-- TOC entry 12627 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN cod_buffer_transfer.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cod_buffer_transfer.oid IS 'oid';


--
-- TOC entry 415 (class 1259 OID 18999)
-- Dependencies: 14
-- Name: comfort; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE comfort (
    oid character(36) NOT NULL,
    room character(36) NOT NULL,
    comfort_type character(36) NOT NULL
);


ALTER TABLE mir.comfort OWNER TO postgres;

--
-- TOC entry 12628 (class 0 OID 0)
-- Dependencies: 415
-- Name: TABLE comfort; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE comfort IS 'comfort';


--
-- TOC entry 12629 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN comfort.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort.oid IS 'oid';


--
-- TOC entry 12630 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN comfort.room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort.room IS 'room';


--
-- TOC entry 12631 (class 0 OID 0)
-- Dependencies: 415
-- Name: COLUMN comfort.comfort_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort.comfort_type IS 'comfort_type';


--
-- TOC entry 416 (class 1259 OID 19002)
-- Dependencies: 7002 7003 14
-- Name: comfort_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE comfort_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_comfort_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.comfort_type OWNER TO postgres;

--
-- TOC entry 12632 (class 0 OID 0)
-- Dependencies: 416
-- Name: TABLE comfort_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE comfort_type IS 'Объекты комфортности';


--
-- TOC entry 12633 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN comfort_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort_type.oid IS 'oid';


--
-- TOC entry 12634 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN comfort_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort_type.name IS 'name';


--
-- TOC entry 12635 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN comfort_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12636 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN comfort_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12637 (class 0 OID 0)
-- Dependencies: 416
-- Name: COLUMN comfort_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comfort_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 417 (class 1259 OID 19010)
-- Dependencies: 14
-- Name: comp_comptype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE comp_comptype (
    company character(36) NOT NULL,
    companytype character(36),
    oid character(36) NOT NULL
);


ALTER TABLE mir.comp_comptype OWNER TO postgres;

--
-- TOC entry 12638 (class 0 OID 0)
-- Dependencies: 417
-- Name: TABLE comp_comptype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE comp_comptype IS 'связка компаний и типов компаний';


--
-- TOC entry 12639 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN comp_comptype.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comp_comptype.company IS 'company';


--
-- TOC entry 12640 (class 0 OID 0)
-- Dependencies: 417
-- Name: COLUMN comp_comptype.companytype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN comp_comptype.companytype IS 'companytype';


--
-- TOC entry 418 (class 1259 OID 19013)
-- Dependencies: 14
-- Name: company; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE company (
    oid character(36) NOT NULL,
    fullname character varying(255),
    shortname character varying(255),
    phone character varying(100),
    fax character varying(100),
    okonh character varying(100),
    okpo character varying(100),
    inn character varying(10),
    ogrn character varying(13),
    kpf character varying(255),
    address character(36),
    home character varying(100),
    optimisticlockfield numeric,
    gcrecord numeric,
    addressfact character(36),
    raschschet character varying(100),
    bank character varying(100),
    kpp character varying(100),
    bik character varying(100),
    korschet character varying(100),
    region character(36),
    okato character(12),
    okved character varying(255),
    foms_code character varying(10)
);


ALTER TABLE mir.company OWNER TO postgres;

--
-- TOC entry 12641 (class 0 OID 0)
-- Dependencies: 418
-- Name: TABLE company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE company IS 'Справочник компаний (банки, поставщики и др. юр лица)';


--
-- TOC entry 12642 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.oid IS 'oid';


--
-- TOC entry 12643 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.fullname IS 'наименование полное';


--
-- TOC entry 12644 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.shortname IS 'наименование сокращенное';


--
-- TOC entry 12645 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.phone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.phone IS 'phone';


--
-- TOC entry 12646 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.fax; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.fax IS 'fax';


--
-- TOC entry 12647 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.okonh; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.okonh IS 'okonh';


--
-- TOC entry 12648 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.okpo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.okpo IS 'okpo';


--
-- TOC entry 12649 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.inn IS 'inn';


--
-- TOC entry 12650 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.ogrn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.ogrn IS 'ogrn';


--
-- TOC entry 12651 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.kpf; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.kpf IS 'kpf';


--
-- TOC entry 12652 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.address IS 'address';


--
-- TOC entry 12653 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.home; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.home IS 'home';


--
-- TOC entry 12654 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 12655 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.gcrecord IS 'gcrecord';


--
-- TOC entry 12656 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.addressfact; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.addressfact IS 'addressfact';


--
-- TOC entry 12657 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.raschschet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.raschschet IS 'raschschet';


--
-- TOC entry 12658 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.bank; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.bank IS 'bank';


--
-- TOC entry 12659 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.kpp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.kpp IS 'kpp';


--
-- TOC entry 12660 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.bik; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.bik IS 'bik';


--
-- TOC entry 12661 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.korschet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.korschet IS 'korschet';


--
-- TOC entry 12662 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.region IS 'region';


--
-- TOC entry 12663 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.okato; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.okato IS 'okato';


--
-- TOC entry 12664 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.okved; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.okved IS 'okved';


--
-- TOC entry 12665 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN company.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company.foms_code IS 'Код из единых реестров организаций (МО,СМО) для ФОМС (S.Ponomarenko)';


--
-- TOC entry 419 (class 1259 OID 19019)
-- Dependencies: 14
-- Name: company_address; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE company_address (
    company character(36) NOT NULL,
    address character(36) NOT NULL
);


ALTER TABLE mir.company_address OWNER TO postgres;

--
-- TOC entry 12666 (class 0 OID 0)
-- Dependencies: 419
-- Name: TABLE company_address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE company_address IS 'company_address';


--
-- TOC entry 12667 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN company_address.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_address.company IS 'company';


--
-- TOC entry 12668 (class 0 OID 0)
-- Dependencies: 419
-- Name: COLUMN company_address.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_address.address IS 'address';


--
-- TOC entry 420 (class 1259 OID 19022)
-- Dependencies: 7004 14
-- Name: company_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE company_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    fullname character varying(255),
    shortname character varying(255),
    phone character varying(100),
    fax character varying(100),
    okonh character varying(100),
    okpo character varying(100),
    inn character varying(100),
    ogrn character varying(100),
    kpf character varying(255),
    address character(36),
    home character varying(100),
    optimisticlockfield numeric,
    gcrecord numeric,
    addressfact character(36),
    raschschet character varying(100),
    bank character varying(100),
    kpp character varying(100),
    bik character varying(100),
    korschet character varying(100),
    region character(36),
    okato character(36),
    okved numeric
);


ALTER TABLE mir.company_history OWNER TO postgres;

--
-- TOC entry 12669 (class 0 OID 0)
-- Dependencies: 420
-- Name: TABLE company_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE company_history IS 'Справочник компаний (банки, поставщики и др. юр лица)';


--
-- TOC entry 12670 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.hid IS 'hid';


--
-- TOC entry 12671 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.h_date IS 'h_date';


--
-- TOC entry 12672 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.h_date_end IS 'h_date_end';


--
-- TOC entry 12673 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.sysdate IS 'sysdate';


--
-- TOC entry 12674 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.oid IS 'oid';


--
-- TOC entry 12675 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.fullname IS 'наименование полное';


--
-- TOC entry 12676 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.shortname IS 'наименование сокращенное';


--
-- TOC entry 12677 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.phone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.phone IS 'phone';


--
-- TOC entry 12678 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.fax; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.fax IS 'fax';


--
-- TOC entry 12679 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.okonh; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.okonh IS 'okonh';


--
-- TOC entry 12680 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.okpo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.okpo IS 'okpo';


--
-- TOC entry 12681 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.inn IS 'inn';


--
-- TOC entry 12682 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.ogrn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.ogrn IS 'ogrn';


--
-- TOC entry 12683 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.kpf; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.kpf IS 'kpf';


--
-- TOC entry 12684 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.address IS 'address';


--
-- TOC entry 12685 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.home; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.home IS 'home';


--
-- TOC entry 12686 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 12687 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.gcrecord IS 'gcrecord';


--
-- TOC entry 12688 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.addressfact; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.addressfact IS 'addressfact';


--
-- TOC entry 12689 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.raschschet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.raschschet IS 'raschschet';


--
-- TOC entry 12690 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.bank; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.bank IS 'bank';


--
-- TOC entry 12691 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.kpp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.kpp IS 'kpp';


--
-- TOC entry 12692 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.bik; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.bik IS 'bik';


--
-- TOC entry 12693 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.korschet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.korschet IS 'korschet';


--
-- TOC entry 12694 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.region IS 'region';


--
-- TOC entry 12695 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.okato; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.okato IS 'okato';


--
-- TOC entry 12696 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN company_history.okved; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN company_history.okved IS 'okved';


--
-- TOC entry 421 (class 1259 OID 19029)
-- Dependencies: 7005 7006 14
-- Name: companytype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE companytype (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_companytype$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.companytype OWNER TO postgres;

--
-- TOC entry 12697 (class 0 OID 0)
-- Dependencies: 421
-- Name: TABLE companytype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE companytype IS 'Тип компаний (банк, поставщик и т.д.)';


--
-- TOC entry 12698 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN companytype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN companytype.oid IS 'oid';


--
-- TOC entry 12699 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN companytype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN companytype.name IS 'название';


--
-- TOC entry 12700 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN companytype.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN companytype.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12701 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN companytype.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN companytype.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12702 (class 0 OID 0)
-- Dependencies: 421
-- Name: COLUMN companytype.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN companytype.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 422 (class 1259 OID 19037)
-- Dependencies: 14
-- Name: concenunits; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE concenunits (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.concenunits OWNER TO postgres;

--
-- TOC entry 12703 (class 0 OID 0)
-- Dependencies: 422
-- Name: TABLE concenunits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE concenunits IS 'Названия единиц концентрации препаратов';


--
-- TOC entry 12704 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN concenunits.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN concenunits.id IS 'Код - первичный ключ';


--
-- TOC entry 12705 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN concenunits.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN concenunits.fullname IS 'Полное название';


--
-- TOC entry 12706 (class 0 OID 0)
-- Dependencies: 422
-- Name: COLUMN concenunits.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN concenunits.shortname IS 'Краткое название';


--
-- TOC entry 423 (class 1259 OID 19043)
-- Dependencies: 7007 7008 7009 7010 7011 7012 14
-- Name: counterpart_contract; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_contract (
    oid character(36) NOT NULL,
    company_id character(36),
    open_dt timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    close_dt timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    num character varying(255),
    otdel character(36),
    pay_type character(36) NOT NULL,
    comment character varying(4000),
    restrict_kol_usl numeric DEFAULT 0,
    restrict_kol_sluch numeric DEFAULT 0,
    max_summ_opl numeric DEFAULT 0,
    advance numeric DEFAULT 0 NOT NULL
);


ALTER TABLE mir.counterpart_contract OWNER TO postgres;

--
-- TOC entry 12707 (class 0 OID 0)
-- Dependencies: 423
-- Name: TABLE counterpart_contract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_contract IS 'Таблица договоров  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12708 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.oid IS 'oid';


--
-- TOC entry 12709 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.company_id IS 'Код организации';


--
-- TOC entry 12710 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.open_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.open_dt IS 'Дата начала действия договора';


--
-- TOC entry 12711 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.close_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.close_dt IS 'Дата окончания действия договора';


--
-- TOC entry 12712 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.num IS 'Номер договора';


--
-- TOC entry 12713 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.otdel IS 'отделение';


--
-- TOC entry 12714 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.pay_type IS 'вид оплаты';


--
-- TOC entry 12715 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.comment IS 'описание договора';


--
-- TOC entry 12716 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.restrict_kol_usl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.restrict_kol_usl IS 'ограничение по количеству услуг';


--
-- TOC entry 12717 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.restrict_kol_sluch; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.restrict_kol_sluch IS 'ограничение по количеству случаев заболевания';


--
-- TOC entry 12718 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.max_summ_opl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.max_summ_opl IS 'максимальная сумма оплаты на договор';


--
-- TOC entry 12719 (class 0 OID 0)
-- Dependencies: 423
-- Name: COLUMN counterpart_contract.advance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_contract.advance IS '"Аванс". В этом поле будем указывать % аванса, кот. выплачивает СК';


--
-- TOC entry 424 (class 1259 OID 19055)
-- Dependencies: 14
-- Name: counterpart_forbid_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_forbid_diag (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    mkb10_id character(36) NOT NULL,
    code character varying(100),
    presctype_id character(36) NOT NULL
);


ALTER TABLE mir.counterpart_forbid_diag OWNER TO postgres;

--
-- TOC entry 12720 (class 0 OID 0)
-- Dependencies: 424
-- Name: TABLE counterpart_forbid_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_forbid_diag IS 'Запрет на оказание услуг по конкретным диагнозам  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12721 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN counterpart_forbid_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_diag.oid IS 'id';


--
-- TOC entry 12722 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN counterpart_forbid_diag.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_diag.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12723 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN counterpart_forbid_diag.mkb10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_diag.mkb10_id IS 'ссылка на mkb_10';


--
-- TOC entry 12724 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN counterpart_forbid_diag.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_diag.code IS 'код услуги';


--
-- TOC entry 12725 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN counterpart_forbid_diag.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_diag.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 425 (class 1259 OID 19058)
-- Dependencies: 14
-- Name: counterpart_forbid_kab; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_forbid_kab (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    cabinet_id character(36) NOT NULL
);


ALTER TABLE mir.counterpart_forbid_kab OWNER TO postgres;

--
-- TOC entry 12726 (class 0 OID 0)
-- Dependencies: 425
-- Name: TABLE counterpart_forbid_kab; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_forbid_kab IS 'Таблица запрета записи в определенные кабинеты  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12727 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN counterpart_forbid_kab.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_kab.oid IS 'oid';


--
-- TOC entry 12728 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN counterpart_forbid_kab.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_kab.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12729 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN counterpart_forbid_kab.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_kab.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 12730 (class 0 OID 0)
-- Dependencies: 425
-- Name: COLUMN counterpart_forbid_kab.cabinet_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_kab.cabinet_id IS 'ссылка на cabinet.oid';


--
-- TOC entry 426 (class 1259 OID 19061)
-- Dependencies: 7013 14
-- Name: counterpart_forbid_prof; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_forbid_prof (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    cost numeric DEFAULT 0 NOT NULL,
    code character varying(100)
);


ALTER TABLE mir.counterpart_forbid_prof OWNER TO postgres;

--
-- TOC entry 12731 (class 0 OID 0)
-- Dependencies: 426
-- Name: TABLE counterpart_forbid_prof; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_forbid_prof IS 'Запрет на профили медицинских специалистов  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12732 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN counterpart_forbid_prof.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_prof.oid IS 'id';


--
-- TOC entry 12733 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN counterpart_forbid_prof.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_prof.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12734 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN counterpart_forbid_prof.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_prof.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 12735 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN counterpart_forbid_prof.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_prof.cost IS 'сумма оплаты по услуге';


--
-- TOC entry 12736 (class 0 OID 0)
-- Dependencies: 426
-- Name: COLUMN counterpart_forbid_prof.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_prof.code IS 'код услуги';


--
-- TOC entry 427 (class 1259 OID 19068)
-- Dependencies: 14
-- Name: counterpart_forbid_time; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_forbid_time (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    starton timestamp(0) without time zone,
    endon timestamp(0) without time zone
);


ALTER TABLE mir.counterpart_forbid_time OWNER TO postgres;

--
-- TOC entry 12737 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN counterpart_forbid_time.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_time.oid IS 'oid';


--
-- TOC entry 12738 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN counterpart_forbid_time.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_time.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12739 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN counterpart_forbid_time.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_time.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 12740 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN counterpart_forbid_time.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_time.starton IS 'ограничения на время суток C';


--
-- TOC entry 12741 (class 0 OID 0)
-- Dependencies: 427
-- Name: COLUMN counterpart_forbid_time.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_time.endon IS 'ограничения на время суток По';


--
-- TOC entry 428 (class 1259 OID 19071)
-- Dependencies: 7014 14
-- Name: counterpart_forbid_usl; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_forbid_usl (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    cost numeric DEFAULT 0 NOT NULL,
    code character varying(100)
);


ALTER TABLE mir.counterpart_forbid_usl OWNER TO postgres;

--
-- TOC entry 12742 (class 0 OID 0)
-- Dependencies: 428
-- Name: TABLE counterpart_forbid_usl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_forbid_usl IS 'Запрет на услуги  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12743 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN counterpart_forbid_usl.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_usl.oid IS 'id';


--
-- TOC entry 12744 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN counterpart_forbid_usl.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_usl.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12745 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN counterpart_forbid_usl.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_usl.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 12746 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN counterpart_forbid_usl.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_usl.cost IS 'сумма оплаты по услуге';


--
-- TOC entry 12747 (class 0 OID 0)
-- Dependencies: 428
-- Name: COLUMN counterpart_forbid_usl.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_forbid_usl.code IS 'код услуги';


--
-- TOC entry 429 (class 1259 OID 19078)
-- Dependencies: 14
-- Name: counterpart_garanty_letter; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_garanty_letter (
    oid character(36) NOT NULL,
    filename character varying(255),
    filepath character varying(255),
    dateon date,
    dateend date,
    dateget date,
    conditions text,
    contragent_docum_id character(36) NOT NULL,
    pay_summ numeric(15,4),
    letter_num character varying(255),
    datecreate date,
    sotr character(36)
);


ALTER TABLE mir.counterpart_garanty_letter OWNER TO postgres;

--
-- TOC entry 12748 (class 0 OID 0)
-- Dependencies: 429
-- Name: TABLE counterpart_garanty_letter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_garanty_letter IS 'counterpart_garanty_letter';


--
-- TOC entry 12749 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.oid IS 'ID файла на диске';


--
-- TOC entry 12750 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.filename IS 'Оригинальное имя файла';


--
-- TOC entry 12751 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.filepath; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.filepath IS 'Путь файла на сервере';


--
-- TOC entry 12752 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.dateon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.dateon IS 'Дата начала действия гарантийного письма';


--
-- TOC entry 12753 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.dateend IS 'Дата окончания действия гарантийного письма';


--
-- TOC entry 12754 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.dateget; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.dateget IS 'Дата получения гарантийного письма';


--
-- TOC entry 12755 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.conditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.conditions IS 'Дополнительные условия в договоре';


--
-- TOC entry 12756 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.contragent_docum_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.contragent_docum_id IS 'ID договора с контрагентами';


--
-- TOC entry 12757 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.pay_summ; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.pay_summ IS 'Сумма оплаты по гарантийному письму';


--
-- TOC entry 12758 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.letter_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.letter_num IS 'Номер гарантийного письма';


--
-- TOC entry 12759 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.datecreate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.datecreate IS 'Дата формирования';


--
-- TOC entry 12760 (class 0 OID 0)
-- Dependencies: 429
-- Name: COLUMN counterpart_garanty_letter.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_garanty_letter.sotr IS 'Сотрудник, добавивший письмо';


--
-- TOC entry 430 (class 1259 OID 19084)
-- Dependencies: 14
-- Name: counterpart_otdel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_otdel (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    otdel_id character(36) NOT NULL
);


ALTER TABLE mir.counterpart_otdel OWNER TO postgres;

--
-- TOC entry 12761 (class 0 OID 0)
-- Dependencies: 430
-- Name: TABLE counterpart_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_otdel IS 'Перечень учреждений здравоохранения (отделений), в которых может обслуживаться пациент  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12762 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN counterpart_otdel.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_otdel.oid IS 'id';


--
-- TOC entry 12763 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN counterpart_otdel.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_otdel.contract_id IS 'counterpart_contract.oid';


--
-- TOC entry 12764 (class 0 OID 0)
-- Dependencies: 430
-- Name: COLUMN counterpart_otdel.otdel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_otdel.otdel_id IS 'otdel.oid';


--
-- TOC entry 431 (class 1259 OID 19087)
-- Dependencies: 14
-- Name: counterpart_pepl; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_pepl (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    people_id character(36) NOT NULL
);


ALTER TABLE mir.counterpart_pepl OWNER TO postgres;

--
-- TOC entry 12765 (class 0 OID 0)
-- Dependencies: 431
-- Name: TABLE counterpart_pepl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_pepl IS 'Таблица прикрепленных пиплов  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12766 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN counterpart_pepl.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_pepl.oid IS 'oid';


--
-- TOC entry 12767 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN counterpart_pepl.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_pepl.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12768 (class 0 OID 0)
-- Dependencies: 431
-- Name: COLUMN counterpart_pepl.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_pepl.people_id IS 'people.oid';


--
-- TOC entry 432 (class 1259 OID 19090)
-- Dependencies: 7015 14
-- Name: counterpart_program; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE counterpart_program (
    oid character(36) NOT NULL,
    contract_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    cost numeric DEFAULT 0 NOT NULL,
    code character varying(100)
);


ALTER TABLE mir.counterpart_program OWNER TO postgres;

--
-- TOC entry 12769 (class 0 OID 0)
-- Dependencies: 432
-- Name: TABLE counterpart_program; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE counterpart_program IS 'Запрет на услуги  - Взаимодействие с контрагентами - by Shpielevoy D. I.';


--
-- TOC entry 12770 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN counterpart_program.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_program.oid IS 'id';


--
-- TOC entry 12771 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN counterpart_program.contract_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_program.contract_id IS 'counterpart_contract.id';


--
-- TOC entry 12772 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN counterpart_program.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_program.presctype_id IS 'ссылка на назначение presctype';


--
-- TOC entry 12773 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN counterpart_program.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_program.cost IS 'сумма оплаты по услуге';


--
-- TOC entry 12774 (class 0 OID 0)
-- Dependencies: 432
-- Name: COLUMN counterpart_program.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN counterpart_program.code IS 'код услуги';


--
-- TOC entry 433 (class 1259 OID 19097)
-- Dependencies: 14
-- Name: countries; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE countries (
    id integer NOT NULL,
    name character varying(1024)
);


ALTER TABLE mir.countries OWNER TO postgres;

--
-- TOC entry 12775 (class 0 OID 0)
-- Dependencies: 433
-- Name: TABLE countries; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE countries IS 'Страны';


--
-- TOC entry 12776 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN countries.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN countries.id IS 'Код страны - первичный ключ';


--
-- TOC entry 12777 (class 0 OID 0)
-- Dependencies: 433
-- Name: COLUMN countries.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN countries.name IS 'Название страны';


--
-- TOC entry 434 (class 1259 OID 19103)
-- Dependencies: 7016 14
-- Name: country; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE country (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    code_bd character varying(10),
    code_mp character varying(10),
    show numeric(1,0) DEFAULT 1
);


ALTER TABLE mir.country OWNER TO postgres;

--
-- TOC entry 12778 (class 0 OID 0)
-- Dependencies: 434
-- Name: TABLE country; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE country IS 'Страны для выгрузки. Author: Kulikovskiy';


--
-- TOC entry 12779 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN country.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN country.oid IS 'Код';


--
-- TOC entry 12780 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN country.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN country.name IS 'Название';


--
-- TOC entry 12781 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN country.code_bd; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN country.code_bd IS 'Код для БД застрахованных';


--
-- TOC entry 12782 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN country.code_mp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN country.code_mp IS 'Код для реестров МП';


--
-- TOC entry 12783 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN country.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN country.show IS 'show 0-не показывать 1-показывать';


--
-- TOC entry 435 (class 1259 OID 19107)
-- Dependencies: 14
-- Name: court; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE court (
    oid character(36) NOT NULL,
    plot character(36),
    address character(36) NOT NULL,
    court_name character varying(255),
    court_code character varying(255),
    court_date date,
    area numeric(15,2),
    okato character varying(255)
);


ALTER TABLE mir.court OWNER TO postgres;

--
-- TOC entry 12784 (class 0 OID 0)
-- Dependencies: 435
-- Name: TABLE court; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE court IS 'Площадка';


--
-- TOC entry 12785 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.oid IS 'oid';


--
-- TOC entry 12786 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.plot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.plot IS 'земельный участок';


--
-- TOC entry 12787 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.address IS 'address';


--
-- TOC entry 12788 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.court_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.court_name IS 'наименование';


--
-- TOC entry 12789 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.court_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.court_code IS 'код территории';


--
-- TOC entry 12790 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.court_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.court_date IS 'дата организации';


--
-- TOC entry 12791 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.area IS 'площадь (m2)';


--
-- TOC entry 12792 (class 0 OID 0)
-- Dependencies: 435
-- Name: COLUMN court.okato; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN court.okato IS 'населенный пункт';


--
-- TOC entry 436 (class 1259 OID 19113)
-- Dependencies: 14
-- Name: cubicunits; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cubicunits (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.cubicunits OWNER TO postgres;

--
-- TOC entry 12793 (class 0 OID 0)
-- Dependencies: 436
-- Name: TABLE cubicunits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE cubicunits IS 'Единицы объема упаковок';


--
-- TOC entry 12794 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN cubicunits.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cubicunits.id IS 'Код - первичный ключ';


--
-- TOC entry 12795 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN cubicunits.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cubicunits.fullname IS 'Полное название';


--
-- TOC entry 12796 (class 0 OID 0)
-- Dependencies: 436
-- Name: COLUMN cubicunits.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cubicunits.shortname IS 'Краткое название';


--
-- TOC entry 437 (class 1259 OID 19119)
-- Dependencies: 14
-- Name: cure_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE cure_type (
    oid character(36) NOT NULL,
    name character varying(100)
);


ALTER TABLE mir.cure_type OWNER TO postgres;

--
-- TOC entry 12797 (class 0 OID 0)
-- Dependencies: 437
-- Name: TABLE cure_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE cure_type IS 'Вид лечения.  Author: Blazko';


--
-- TOC entry 12798 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN cure_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cure_type.oid IS 'oid';


--
-- TOC entry 12799 (class 0 OID 0)
-- Dependencies: 437
-- Name: COLUMN cure_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN cure_type.name IS 'Название';


--
-- TOC entry 438 (class 1259 OID 19122)
-- Dependencies: 14
-- Name: currency; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE currency (
    id integer NOT NULL,
    name character varying(1024),
    symbols character varying(1024)
);


ALTER TABLE mir.currency OWNER TO postgres;

--
-- TOC entry 12800 (class 0 OID 0)
-- Dependencies: 438
-- Name: TABLE currency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE currency IS 'Названия валют';


--
-- TOC entry 12801 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN currency.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN currency.id IS 'Код валюты - первичный ключ';


--
-- TOC entry 12802 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN currency.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN currency.name IS 'Название валюты';


--
-- TOC entry 12803 (class 0 OID 0)
-- Dependencies: 438
-- Name: COLUMN currency.symbols; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN currency.symbols IS 'Аббревиатура валюты';


--
-- TOC entry 439 (class 1259 OID 19128)
-- Dependencies: 7017 14
-- Name: demand; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand (
    oid character(36) NOT NULL,
    people character(36),
    lpu_from character(36),
    lpu_to character(36),
    sysuser character(36),
    sysuser_regist character(36),
    regist_date date,
    state_id numeric,
    presctype_from character(36),
    povtor numeric(1,0),
    diag character varying(500),
    reason character(36),
    reason_str character varying(200),
    zav_fio character varying(250),
    zav_tel character varying(250),
    add_info character varying(500),
    numberdemand character varying(500),
    datedemand date,
    type numeric DEFAULT 0
);


ALTER TABLE mir.demand OWNER TO postgres;

--
-- TOC entry 12804 (class 0 OID 0)
-- Dependencies: 439
-- Name: TABLE demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand IS 'Заявки by Spasskiy S.N.';


--
-- TOC entry 12805 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.oid IS 'oid';


--
-- TOC entry 12806 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.people IS 'Человек, которого направляют в ЛПУ';


--
-- TOC entry 12807 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.lpu_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.lpu_from IS 'ЛПУ формирующее заявку';


--
-- TOC entry 12808 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.lpu_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.lpu_to IS 'ЛПУ куда направляются заявка';


--
-- TOC entry 12809 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.sysuser IS 'Врач направивший пациента';


--
-- TOC entry 12810 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.sysuser_regist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.sysuser_regist IS 'Сотрудник зарегистрировавший заявку';


--
-- TOC entry 12811 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.regist_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.regist_date IS 'Дата регистрации заявки';


--
-- TOC entry 12812 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.state_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.state_id IS 'Статус заявки';


--
-- TOC entry 12813 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.presctype_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.presctype_from IS 'Специальность направившего врача';


--
-- TOC entry 12814 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.povtor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.povtor IS 'Повторный пацинет, для пациентов, уже проходивших лечение в ОДКБ';


--
-- TOC entry 12815 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.diag IS 'Диагноз пациента';


--
-- TOC entry 12816 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.reason IS 'Цель консультации из справочника';


--
-- TOC entry 12817 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.reason_str; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.reason_str IS 'Цель  консультации строкой';


--
-- TOC entry 12818 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.zav_fio; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.zav_fio IS 'ФИО заведущего';


--
-- TOC entry 12819 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.zav_tel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.zav_tel IS 'Телефон заведущего';


--
-- TOC entry 12820 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.add_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.add_info IS 'Примечания';


--
-- TOC entry 12821 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.numberdemand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.numberdemand IS 'numberdemand';


--
-- TOC entry 12822 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.datedemand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.datedemand IS 'datedemand';


--
-- TOC entry 12823 (class 0 OID 0)
-- Dependencies: 439
-- Name: COLUMN demand.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand.type IS 'ТИП НАПРАВЛЕНИЯ (0-КОНСУЛЬТАЦИЯ, 1-ГОСПИТАЛИЗАЦИЯ, 2-ОБСЛЕДОВАНИЕ)';


--
-- TOC entry 440 (class 1259 OID 19135)
-- Dependencies: 14
-- Name: demand_cancel_reason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_cancel_reason (
    oid character(36) NOT NULL,
    name character varying(250)
);


ALTER TABLE mir.demand_cancel_reason OWNER TO postgres;

--
-- TOC entry 12824 (class 0 OID 0)
-- Dependencies: 440
-- Name: TABLE demand_cancel_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_cancel_reason IS 'Причины отказов заявок';


--
-- TOC entry 12825 (class 0 OID 0)
-- Dependencies: 440
-- Name: COLUMN demand_cancel_reason.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_cancel_reason.oid IS 'oid';


--
-- TOC entry 12826 (class 0 OID 0)
-- Dependencies: 440
-- Name: COLUMN demand_cancel_reason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_cancel_reason.name IS 'name';


--
-- TOC entry 441 (class 1259 OID 19138)
-- Dependencies: 14
-- Name: demand_changes; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_changes (
    oid character(36),
    demand character(36),
    info character varying(200),
    lpu character(36),
    state_id numeric,
    date_change date,
    need_reply numeric(1,0),
    cancel_reason character(36),
    sysuser character varying(36)
);


ALTER TABLE mir.demand_changes OWNER TO postgres;

--
-- TOC entry 12827 (class 0 OID 0)
-- Dependencies: 441
-- Name: TABLE demand_changes; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_changes IS 'Процесс обработки заявок';


--
-- TOC entry 12828 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.oid IS 'Связка с заявкой';


--
-- TOC entry 12829 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.demand IS 'Связка с заявкой';


--
-- TOC entry 12830 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.info IS 'Информация по изменению';


--
-- TOC entry 12831 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.lpu IS 'lpu';


--
-- TOC entry 12832 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.state_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.state_id IS 'Статус заявки после выполненого действия';


--
-- TOC entry 12833 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.date_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.date_change IS 'Дата действия';


--
-- TOC entry 12834 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.need_reply; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.need_reply IS 'Нужен ответ от другого ЛПУ';


--
-- TOC entry 12835 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.cancel_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.cancel_reason IS 'Причина отмены';


--
-- TOC entry 12836 (class 0 OID 0)
-- Dependencies: 441
-- Name: COLUMN demand_changes.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_changes.sysuser IS 'Пользователь';


--
-- TOC entry 442 (class 1259 OID 19144)
-- Dependencies: 14
-- Name: demand_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_diag (
    oid character(36) NOT NULL,
    type_diag numeric NOT NULL,
    code_mkb character(36) NOT NULL,
    name character varying(4000),
    date_detect date NOT NULL,
    feature_diag character(36),
    oid_demand character(36) NOT NULL,
    type_demand numeric NOT NULL
);


ALTER TABLE mir.demand_diag OWNER TO postgres;

--
-- TOC entry 12837 (class 0 OID 0)
-- Dependencies: 442
-- Name: TABLE demand_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_diag IS 'DEMAND_DIAG';


--
-- TOC entry 12838 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.oid IS 'ID';


--
-- TOC entry 12839 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.type_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.type_diag IS 'ТИП ДИАГНОЗА';


--
-- TOC entry 12840 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.code_mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.code_mkb IS 'КОД МКБ-10';


--
-- TOC entry 12841 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.name IS 'НАИМЕНОВАНИЕ/ДОПОЛНЕНИЯ';


--
-- TOC entry 12842 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.date_detect; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.date_detect IS 'ДАТА УСТАНОВЛЕНИЯ ДИАГНОЗА';


--
-- TOC entry 12843 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.feature_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.feature_diag IS 'ХАРАКТЕР ЗАБОЛЕВАНИЯ';


--
-- TOC entry 12844 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.oid_demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.oid_demand IS 'ID НАПРАВЛЕНИЯ';


--
-- TOC entry 12845 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN demand_diag.type_demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_diag.type_demand IS 'ТИП НАПРАВЛЕНИЯ';


--
-- TOC entry 443 (class 1259 OID 19150)
-- Dependencies: 14
-- Name: demand_goal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_goal (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.demand_goal OWNER TO postgres;

--
-- TOC entry 12846 (class 0 OID 0)
-- Dependencies: 443
-- Name: TABLE demand_goal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_goal IS 'ЦЕЛИ КОНСУЛЬТАЦИЙ  BY BELENKO';


--
-- TOC entry 12847 (class 0 OID 0)
-- Dependencies: 443
-- Name: COLUMN demand_goal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_goal.oid IS 'oid';


--
-- TOC entry 12848 (class 0 OID 0)
-- Dependencies: 443
-- Name: COLUMN demand_goal.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_goal.name IS 'НАЗВАНИЕ ЦЕЛИ';


--
-- TOC entry 444 (class 1259 OID 19153)
-- Dependencies: 14
-- Name: demand_gosp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_gosp (
    oid character(36) NOT NULL,
    oid_demand character(36) NOT NULL,
    otdel_lpu character(36) NOT NULL,
    dateplan date NOT NULL,
    date_fact_start date,
    date_fact_end date,
    type_gosp numeric NOT NULL,
    indicategosp character varying(4000),
    discript_history character varying(4000)
);


ALTER TABLE mir.demand_gosp OWNER TO postgres;

--
-- TOC entry 12849 (class 0 OID 0)
-- Dependencies: 444
-- Name: TABLE demand_gosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_gosp IS 'НАПРАВЛЕНИЯ НА ГОСПИТАЛИЗАЦИЮ';


--
-- TOC entry 12850 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.oid IS 'ID';


--
-- TOC entry 12851 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.oid_demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.oid_demand IS 'ID НАПРАВЛЕНИЯ';


--
-- TOC entry 12852 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.otdel_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.otdel_lpu IS 'ОТДЕЛЕНИЕ ЛПУ';


--
-- TOC entry 12853 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.dateplan; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.dateplan IS 'ПЛАНИРУЕМАЯ ДАТА ГОСПИТАЛИЗАЦИИ';


--
-- TOC entry 12854 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.date_fact_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.date_fact_start IS 'ДАТА НАЧАЛА ГОСПИТАЛИЗАЦИИ';


--
-- TOC entry 12855 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.date_fact_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.date_fact_end IS 'ДАТА ОКОНЧАНИЯ ГОСПИТАЛИЗАЦИИ';


--
-- TOC entry 12856 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.type_gosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.type_gosp IS 'СТЕПЕНЬ СРОЧНОСТИ НАПРАВЛЕНИЯ НА ГОСПИТАЛИЗАЦИЮ (0-ПЛАНОВОЕ, 1-УСКОРЕННОЕ, 2-ЭКСТРЕННОЕ)';


--
-- TOC entry 12857 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.indicategosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.indicategosp IS 'ПОКАЗАНИЯ К ГОСПИТАЛИЗАЦИИ';


--
-- TOC entry 12858 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN demand_gosp.discript_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_gosp.discript_history IS 'ОПИСАНИЕ АНАМНЕЗА';


--
-- TOC entry 445 (class 1259 OID 19159)
-- Dependencies: 14
-- Name: demand_refuse_variant; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_refuse_variant (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.demand_refuse_variant OWNER TO postgres;

--
-- TOC entry 12859 (class 0 OID 0)
-- Dependencies: 445
-- Name: TABLE demand_refuse_variant; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_refuse_variant IS 'Причины отказа';


--
-- TOC entry 12860 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN demand_refuse_variant.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_refuse_variant.oid IS 'oid';


--
-- TOC entry 12861 (class 0 OID 0)
-- Dependencies: 445
-- Name: COLUMN demand_refuse_variant.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_refuse_variant.name IS 'НАЗВАНИЕ';


--
-- TOC entry 446 (class 1259 OID 19162)
-- Dependencies: 14
-- Name: demand_schedule; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_schedule (
    demand character(36) NOT NULL,
    schedule character(36)
);


ALTER TABLE mir.demand_schedule OWNER TO postgres;

--
-- TOC entry 12862 (class 0 OID 0)
-- Dependencies: 446
-- Name: TABLE demand_schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_schedule IS 'Приемы по заявкам by Spasskiy S.N.';


--
-- TOC entry 12863 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN demand_schedule.demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_schedule.demand IS 'OID заявки';


--
-- TOC entry 12864 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN demand_schedule.schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_schedule.schedule IS 'OID приема';


--
-- TOC entry 447 (class 1259 OID 19165)
-- Dependencies: 7018 14
-- Name: demand_standart; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_standart (
    oid character(36) NOT NULL,
    demand character(36),
    service character(36),
    service_date date,
    service_result character varying(4000),
    is_dop numeric(1,0) DEFAULT 0,
    comments character varying(4000),
    scan character(1)
);


ALTER TABLE mir.demand_standart OWNER TO postgres;

--
-- TOC entry 12865 (class 0 OID 0)
-- Dependencies: 447
-- Name: TABLE demand_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_standart IS 'Выполнение стандарта для заявки';


--
-- TOC entry 12866 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.oid IS 'oid';


--
-- TOC entry 12867 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.demand IS 'OID заявки';


--
-- TOC entry 12868 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.service IS 'Исследование по стандарту';


--
-- TOC entry 12869 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.service_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.service_date IS 'Дата выполенения исследования';


--
-- TOC entry 12870 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.service_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.service_result IS 'Результат исследования';


--
-- TOC entry 12871 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.is_dop; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.is_dop IS 'Услуга не по стандарту';


--
-- TOC entry 12872 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.comments; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.comments IS 'Комментарий';


--
-- TOC entry 12873 (class 0 OID 0)
-- Dependencies: 447
-- Name: COLUMN demand_standart.scan; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_standart.scan IS 'снан обследования';


--
-- TOC entry 448 (class 1259 OID 19172)
-- Dependencies: 14
-- Name: demand_statement; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE demand_statement (
    oid character(36) NOT NULL,
    statements character varying(4000) NOT NULL,
    lpu character(36) NOT NULL,
    presc character(36) NOT NULL
);


ALTER TABLE mir.demand_statement OWNER TO postgres;

--
-- TOC entry 12874 (class 0 OID 0)
-- Dependencies: 448
-- Name: TABLE demand_statement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE demand_statement IS 'Показания к направлению';


--
-- TOC entry 12875 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN demand_statement.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_statement.oid IS 'ID';


--
-- TOC entry 12876 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN demand_statement.statements; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_statement.statements IS 'НАЗВАНИЕ';


--
-- TOC entry 12877 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN demand_statement.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_statement.lpu IS 'ЛПУ';


--
-- TOC entry 12878 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN demand_statement.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN demand_statement.presc IS 'СПЕЦИАЛЬНОСТЬ';


--
-- TOC entry 449 (class 1259 OID 19178)
-- Dependencies: 14
-- Name: descriptions; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE descriptions (
    id integer NOT NULL,
    fprepname character varying(84),
    firmid integer
);


ALTER TABLE mir.descriptions OWNER TO postgres;

--
-- TOC entry 12879 (class 0 OID 0)
-- Dependencies: 449
-- Name: TABLE descriptions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE descriptions IS 'Тексты описаний препаратов';


--
-- TOC entry 12880 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN descriptions.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN descriptions.id IS 'Код описания - первичный ключ';


--
-- TOC entry 12881 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN descriptions.fprepname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN descriptions.fprepname IS 'Название певого препарата описания';


--
-- TOC entry 12882 (class 0 OID 0)
-- Dependencies: 449
-- Name: COLUMN descriptions.firmid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN descriptions.firmid IS 'Ссылка на фирму - внешний ключ на таблицу "FIRMS"';


--
-- TOC entry 450 (class 1259 OID 19181)
-- Dependencies: 14
-- Name: desctextes; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE desctextes (
    descid bigint NOT NULL,
    composition text,
    drugformdescr text,
    characters text,
    pharmaactions text,
    componentsproperties text,
    pharmakinetic text,
    pharmadynamic text,
    clinicalpharmacology text,
    direction text,
    indications text,
    recommendations text,
    contraindications text,
    sideactions text,
    interactions text,
    usemethodanddoses text,
    overdose text,
    pregnancyuse text,
    precautions text,
    specialguidelines text,
    literature text,
    comment text,
    actonorg text,
    manufacturer text,
    instrforpac text
);


ALTER TABLE mir.desctextes OWNER TO postgres;

--
-- TOC entry 451 (class 1259 OID 19187)
-- Dependencies: 7019 7020 7021 14
-- Name: diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diag (
    id character(36) NOT NULL,
    visit_id character(36),
    mdoc_id character(36) NOT NULL,
    text character varying(4000),
    kind_id character(36),
    type_id character(36),
    detect_id character(36),
    disp_step_id character(36),
    disp_stage_id character(36),
    create_dt timestamp without time zone DEFAULT now(),
    showib integer DEFAULT 1,
    dispgroup_id character(36),
    base text,
    sotr_id character(36),
    icd10_id character(36) NOT NULL,
    presc_id character(36),
    sysdate timestamp without time zone DEFAULT now(),
    doctor_action character(36)
);


ALTER TABLE mir.diag OWNER TO postgres;

--
-- TOC entry 12883 (class 0 OID 0)
-- Dependencies: 451
-- Name: TABLE diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diag IS 'Диагнозы пациентов Author: Linnikov Author: A.Nakorjakov';


--
-- TOC entry 12884 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.id IS 'SEQUENCE=[MIS.SQ_DIAG]';


--
-- TOC entry 12885 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.mdoc_id IS 'mdoc_id';


--
-- TOC entry 12886 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.text IS 'Диагноз полностью (текст)';


--
-- TOC entry 12887 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.kind_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.kind_id IS 'DIAG_KIND.ID';


--
-- TOC entry 12888 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.type_id IS 'DIAG_TYPE.ID';


--
-- TOC entry 12889 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.detect_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.detect_id IS 'DIAG_DETECT.ID';


--
-- TOC entry 12890 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.disp_step_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.disp_step_id IS 'DISP_STEP.ID';


--
-- TOC entry 12891 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.disp_stage_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.disp_stage_id IS 'DISP_STAGE.ID';


--
-- TOC entry 12892 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.create_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.create_dt IS 'Дата постановки диагноза';


--
-- TOC entry 12893 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.showib; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.showib IS 'Показывать в истории болезни; 0 - нет, 1 - да';


--
-- TOC entry 12894 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.dispgroup_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.dispgroup_id IS 'DISPGROUP.ID';


--
-- TOC entry 12895 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.base; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.base IS 'Обоснование диагноза';


--
-- TOC entry 12896 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.sotr_id IS 'sotr_id';


--
-- TOC entry 12897 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.icd10_id IS 'icd10_id';


--
-- TOC entry 12898 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.sysdate IS 'Время создания записи';


--
-- TOC entry 12899 (class 0 OID 0)
-- Dependencies: 451
-- Name: COLUMN diag.doctor_action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag.doctor_action IS 'Код врачебных действий по сопутствующему заболеванию (используется в МТЛ)';


--
-- TOC entry 452 (class 1259 OID 19196)
-- Dependencies: 7022 7023 14
-- Name: diag_detect; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diag_detect (
    oid character(36) NOT NULL,
    name character varying(255),
    tfoms numeric,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_diag_detect$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.diag_detect OWNER TO postgres;

--
-- TOC entry 12900 (class 0 OID 0)
-- Dependencies: 452
-- Name: TABLE diag_detect; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diag_detect IS 'Когда выявлен дигноз (впервые, повторно, хронический). Author: Nakorjakov';


--
-- TOC entry 12901 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN diag_detect.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_detect.oid IS 'SEQUENCE=[MIS.SQ_DIAG_DETECT]';


--
-- TOC entry 12902 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN diag_detect.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_detect.name IS 'Название';


--
-- TOC entry 12903 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN diag_detect.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_detect.show IS '1- показывать 0- скрывать';


--
-- TOC entry 12904 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN diag_detect.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_detect.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 12905 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN diag_detect.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_detect.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 453 (class 1259 OID 19204)
-- Dependencies: 14
-- Name: diag_kind; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diag_kind (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.diag_kind OWNER TO postgres;

--
-- TOC entry 12906 (class 0 OID 0)
-- Dependencies: 453
-- Name: TABLE diag_kind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diag_kind IS 'Вид диагноза (сопутствующий, основной). Author: Nakorjakov';


--
-- TOC entry 12907 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN diag_kind.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_kind.id IS 'SEQUENCE=[MIS.SQ_DIAG_KIND]';


--
-- TOC entry 12908 (class 0 OID 0)
-- Dependencies: 453
-- Name: COLUMN diag_kind.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_kind.name IS 'Название';


--
-- TOC entry 454 (class 1259 OID 19207)
-- Dependencies: 14
-- Name: diag_presc_model; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diag_presc_model (
    oid character(36) NOT NULL,
    presc character(36) NOT NULL,
    diag character(36) NOT NULL,
    model integer NOT NULL
);


ALTER TABLE mir.diag_presc_model OWNER TO postgres;

--
-- TOC entry 12909 (class 0 OID 0)
-- Dependencies: 454
-- Name: TABLE diag_presc_model; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diag_presc_model IS 'Стандарты назначения для диагнозов 
created by Ponomarwenko S.';


--
-- TOC entry 12910 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN diag_presc_model.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_presc_model.oid IS 'oid';


--
-- TOC entry 12911 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN diag_presc_model.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_presc_model.presc IS 'presc';


--
-- TOC entry 12912 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN diag_presc_model.diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_presc_model.diag IS 'diag';


--
-- TOC entry 12913 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN diag_presc_model.model; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_presc_model.model IS 'model';


--
-- TOC entry 455 (class 1259 OID 19210)
-- Dependencies: 14
-- Name: diag_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diag_type (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.diag_type OWNER TO postgres;

--
-- TOC entry 12914 (class 0 OID 0)
-- Dependencies: 455
-- Name: TABLE diag_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diag_type IS 'Тип диагноза (клинический, при поступлении). Author: Nakorjakov';


--
-- TOC entry 12915 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN diag_type.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_type.id IS 'SEQUENCE=[MIS.SQ_DIAG_TYPE]';


--
-- TOC entry 12916 (class 0 OID 0)
-- Dependencies: 455
-- Name: COLUMN diag_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diag_type.name IS 'Название';


--
-- TOC entry 456 (class 1259 OID 19213)
-- Dependencies: 6759 14
-- Name: diag_type_old; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW diag_type_old AS
    (SELECT 'Основной'::text AS type, 0 AS id UNION ALL SELECT 'Сопутствующий'::text AS type, 1 AS id) UNION ALL SELECT 'Осложнения основного'::text AS type, 2 AS id;


ALTER TABLE mir.diag_type_old OWNER TO postgres;

--
-- TOC entry 12917 (class 0 OID 0)
-- Dependencies: 456
-- Name: VIEW diag_type_old; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW diag_type_old IS 'Для направлений, пееименовал SpasskiySN';


--
-- TOC entry 457 (class 1259 OID 19217)
-- Dependencies: 14
-- Name: diagnosis; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diagnosis (
    oid character(36),
    type numeric(2,0),
    code_mkb10 character varying(32),
    diagnosis character varying(500),
    people character(36),
    demand character(36)
);


ALTER TABLE mir.diagnosis OWNER TO postgres;

--
-- TOC entry 12918 (class 0 OID 0)
-- Dependencies: 457
-- Name: TABLE diagnosis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diagnosis IS 'Диагнозы';


--
-- TOC entry 12919 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.oid IS 'oid';


--
-- TOC entry 12920 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.type IS 'type';


--
-- TOC entry 12921 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.code_mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.code_mkb10 IS 'code_mkb10';


--
-- TOC entry 12922 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.diagnosis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.diagnosis IS 'diagnosis';


--
-- TOC entry 12923 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.people IS 'people';


--
-- TOC entry 12924 (class 0 OID 0)
-- Dependencies: 457
-- Name: COLUMN diagnosis.demand; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnosis.demand IS 'demand';


--
-- TOC entry 458 (class 1259 OID 19223)
-- Dependencies: 7024 7025 14
-- Name: diagnoz_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diagnoz_template (
    oid character(36) NOT NULL,
    parent character(36),
    name character varying(255),
    type character varying(50),
    valid numeric(1,0) DEFAULT 0,
    mkb10_code character varying(255),
    mkb10 character(36),
    CONSTRAINT "ck_diagnoz_template$valid" CHECK (((valid IS NULL) OR ((valid >= (0)::numeric) AND (valid <= (1)::numeric))))
);


ALTER TABLE mir.diagnoz_template OWNER TO postgres;

--
-- TOC entry 12925 (class 0 OID 0)
-- Dependencies: 458
-- Name: TABLE diagnoz_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diagnoz_template IS 'таблица шаблонов диагнозов';


--
-- TOC entry 12926 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.oid IS 'ID элемента';


--
-- TOC entry 12927 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.parent IS 'Родительский элемент';


--
-- TOC entry 12928 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.name IS 'Название';


--
-- TOC entry 12929 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.type IS 'Тип ';


--
-- TOC entry 12930 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.valid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.valid IS 'Валидно или нет';


--
-- TOC entry 12931 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.mkb10_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.mkb10_code IS 'Код МКБ10';


--
-- TOC entry 12932 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN diagnoz_template.mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diagnoz_template.mkb10 IS 'Связь со справочником мкб10';


--
-- TOC entry 459 (class 1259 OID 19231)
-- Dependencies: 14
-- Name: diary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diary (
    oid character(36) NOT NULL,
    mdoc character(36) NOT NULL,
    content text,
    lastdate timestamp without time zone,
    diary_type character(36),
    presctype character(36),
    sotr character(36)
);


ALTER TABLE mir.diary OWNER TO postgres;

--
-- TOC entry 12933 (class 0 OID 0)
-- Dependencies: 459
-- Name: TABLE diary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diary IS 'diary';


--
-- TOC entry 12934 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.oid IS 'идентификатор';


--
-- TOC entry 12935 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.mdoc IS 'ссылка на Mdoc';


--
-- TOC entry 12936 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.content IS 'хранение текста дневника';


--
-- TOC entry 12937 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.lastdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.lastdate IS 'дата последнего редактирования';


--
-- TOC entry 12938 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.diary_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.diary_type IS 'идентификатор секции дневника';


--
-- TOC entry 12939 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.presctype IS 'Код типа назначения mir.presctype';


--
-- TOC entry 12940 (class 0 OID 0)
-- Dependencies: 459
-- Name: COLUMN diary.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary.sotr IS 'ссылка на пользователя';


--
-- TOC entry 460 (class 1259 OID 19237)
-- Dependencies: 14
-- Name: diary_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diary_type (
    oid character(36) NOT NULL,
    name character varying(255),
    ib_sections character varying(36)
);


ALTER TABLE mir.diary_type OWNER TO postgres;

--
-- TOC entry 12941 (class 0 OID 0)
-- Dependencies: 460
-- Name: TABLE diary_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diary_type IS 'diary_type';


--
-- TOC entry 12942 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN diary_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary_type.oid IS 'идентификатор';


--
-- TOC entry 12943 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN diary_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary_type.name IS 'Название секции';


--
-- TOC entry 12944 (class 0 OID 0)
-- Dependencies: 460
-- Name: COLUMN diary_type.ib_sections; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diary_type.ib_sections IS 'идентификатор секции';


--
-- TOC entry 1301 (class 1259 OID 60649)
-- Dependencies: 14
-- Name: dicom_wl_buffer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dicom_wl_buffer (
    oid character(36),
    create_date timestamp without time zone,
    studydescription character varying,
    runbeg_dt timestamp(0) without time zone,
    studyuid character varying(100),
    accessionnumber character varying(100),
    stationaetitle character varying(100),
    modality character varying(10),
    stationname character varying(100),
    firstname character varying(100),
    middlename character varying(100),
    lastname character varying(100),
    birthday date,
    sex numeric,
    patientid character varying(100),
    patientname character varying(200),
    patientnameeng character varying(200),
    faction character varying(100),
    prescid character(36),
    presctypeid character(36),
    patientoid character(36),
    systext character varying(100),
    lpu character varying(36)
);


ALTER TABLE mir.dicom_wl_buffer OWNER TO postgres;

--
-- TOC entry 12945 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.oid IS 'ключ';


--
-- TOC entry 12946 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.create_date IS 'дата создания';


--
-- TOC entry 12947 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.studydescription; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.studydescription IS 'описание исследования';


--
-- TOC entry 12948 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.studyuid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.studyuid IS 'studyuid исследования';


--
-- TOC entry 12949 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.accessionnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.accessionnumber IS 'номер протокола исследования';


--
-- TOC entry 12950 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.stationaetitle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.stationaetitle IS 'aetitle станции';


--
-- TOC entry 12951 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.modality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.modality IS 'модальность';


--
-- TOC entry 12952 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.stationname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.stationname IS 'наименование станции';


--
-- TOC entry 12953 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.birthday IS 'дата рожденья пациента';


--
-- TOC entry 12954 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.sex IS 'пол';


--
-- TOC entry 12955 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.patientid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.patientid IS 'номер медкарты пациента';


--
-- TOC entry 12956 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.patientname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.patientname IS 'ФИО пациента';


--
-- TOC entry 12957 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.patientnameeng; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.patientnameeng IS 'ФИО пациента (англ транслитерация)';


--
-- TOC entry 12958 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.faction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.faction IS 'действие при выполнение которого произошла ошибка';


--
-- TOC entry 12959 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.prescid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.prescid IS 'id назначения';


--
-- TOC entry 12960 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.presctypeid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.presctypeid IS 'id типа назначения';


--
-- TOC entry 12961 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.patientoid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.patientoid IS 'OID пациента (peoples)';


--
-- TOC entry 12962 (class 0 OID 0)
-- Dependencies: 1301
-- Name: COLUMN dicom_wl_buffer.systext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_buffer.systext IS 'описание';


--
-- TOC entry 1300 (class 1259 OID 60641)
-- Dependencies: 14
-- Name: dicom_wl_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dicom_wl_log (
    oid character(36),
    studydescription character varying,
    runbeg_dt timestamp(0) without time zone,
    studyuid character varying(100),
    accessionnumber character varying(100),
    stationaetitle character varying(100),
    modality character varying(10),
    stationname character varying(100),
    firstname character varying(100),
    middlename character varying(100),
    lastname character varying(100),
    birthday date,
    sex numeric,
    patientid character varying(100),
    patientname character varying(200),
    patientnameeng character varying(200),
    create_date timestamp without time zone,
    faction character varying(100),
    systext character varying(100),
    errorcode numeric,
    errortext character varying(100),
    prescid character(36),
    presctypeid character(36),
    patientoid character(36),
    lpu character varying(36)
);


ALTER TABLE mir.dicom_wl_log OWNER TO postgres;

--
-- TOC entry 12963 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.oid IS 'ключ';


--
-- TOC entry 12964 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.studydescription; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.studydescription IS 'описание исследования';


--
-- TOC entry 12965 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.runbeg_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.runbeg_dt IS 'дата назначения исследования';


--
-- TOC entry 12966 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.studyuid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.studyuid IS 'studyuid исследования';


--
-- TOC entry 12967 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.accessionnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.accessionnumber IS 'номер протокола исследования';


--
-- TOC entry 12968 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.stationaetitle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.stationaetitle IS 'aetitle станции';


--
-- TOC entry 12969 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.modality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.modality IS 'модальность';


--
-- TOC entry 12970 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.stationname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.stationname IS 'наименование станции';


--
-- TOC entry 12971 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.birthday IS 'дата рожденья пациента';


--
-- TOC entry 12972 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.sex IS 'пол';


--
-- TOC entry 12973 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.patientid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.patientid IS 'номер медкарты пациента';


--
-- TOC entry 12974 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.patientname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.patientname IS 'ФИО пациента';


--
-- TOC entry 12975 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.patientnameeng; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.patientnameeng IS 'ФИО пациента (англ транслитерация)';


--
-- TOC entry 12976 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.create_date IS 'дата создания';


--
-- TOC entry 12977 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.faction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.faction IS 'действие при выполнение которого произошла ошибка';


--
-- TOC entry 12978 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.systext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.systext IS 'описание';


--
-- TOC entry 12979 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.errorcode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.errorcode IS 'код ошибки
    -1 - просто ошибка при выполнении';


--
-- TOC entry 12980 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.errortext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.errortext IS 'текст ошибки';


--
-- TOC entry 12981 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.prescid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.prescid IS 'id назначения';


--
-- TOC entry 12982 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.presctypeid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.presctypeid IS 'id типа назначения';


--
-- TOC entry 12983 (class 0 OID 0)
-- Dependencies: 1300
-- Name: COLUMN dicom_wl_log.patientoid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dicom_wl_log.patientoid IS 'OID пациента (peoples)';


--
-- TOC entry 461 (class 1259 OID 19240)
-- Dependencies: 7026 7027 7028 7029 7030 7031 14
-- Name: dictionary_field; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dictionary_field (
    oid character(36) NOT NULL,
    dictionary character(36) NOT NULL,
    fieldname character varying(255),
    fieldtype character varying(36),
    fieldlen integer,
    is_not_null integer DEFAULT 0,
    is_primarykey integer DEFAULT 0,
    is_hidden integer DEFAULT 0,
    is_fk integer DEFAULT 0,
    caption character varying(255),
    width integer DEFAULT 0,
    align character varying(255),
    sql character varying(4000),
    num_order integer DEFAULT 0
);


ALTER TABLE mir.dictionary_field OWNER TO postgres;

--
-- TOC entry 12984 (class 0 OID 0)
-- Dependencies: 461
-- Name: TABLE dictionary_field; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dictionary_field IS 'Таблица параметров фильтров. Используется для формирования элементов TcxDBFilterControl и формирования входных данных фильтра на основе Variables запроса SQL';


--
-- TOC entry 12985 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.oid IS 'oid';


--
-- TOC entry 12986 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.dictionary IS 'dictionary.oid';


--
-- TOC entry 12987 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.fieldname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.fieldname IS 'Название поля';


--
-- TOC entry 12988 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.fieldtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.fieldtype IS 'Тип поля  mir.dictionary_field_type';


--
-- TOC entry 12989 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.fieldlen; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.fieldlen IS 'Длина поля для строковых значений';


--
-- TOC entry 12990 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.is_not_null; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.is_not_null IS '1 - не пустое';


--
-- TOC entry 12991 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.is_primarykey; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.is_primarykey IS 'Первичный ключ для грида 1 - первичный ключ';


--
-- TOC entry 12992 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.is_hidden; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.is_hidden IS 'Скрытое поле 1 - скрыто';


--
-- TOC entry 12993 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.is_fk; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.is_fk IS 'Внешний ключ 1 - использовать внешний ключ';


--
-- TOC entry 12994 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.caption; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.caption IS 'Кэпшн';


--
-- TOC entry 12995 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.width; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.width IS 'Ширина колонки';


--
-- TOC entry 12996 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.align; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.align IS 'Выравнивание колонки в гриде "left", "center", "right"';


--
-- TOC entry 12997 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.sql; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.sql IS 'SQL для внешнего ключа';


--
-- TOC entry 12998 (class 0 OID 0)
-- Dependencies: 461
-- Name: COLUMN dictionary_field.num_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field.num_order IS 'Нумерация колонок по порядку';


--
-- TOC entry 462 (class 1259 OID 19252)
-- Dependencies: 14
-- Name: dictionary_field_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dictionary_field_type (
    oid character varying(36) NOT NULL,
    name character varying(50)
);


ALTER TABLE mir.dictionary_field_type OWNER TO postgres;

--
-- TOC entry 12999 (class 0 OID 0)
-- Dependencies: 462
-- Name: TABLE dictionary_field_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dictionary_field_type IS 'Типы данных таблиц справочников';


--
-- TOC entry 13000 (class 0 OID 0)
-- Dependencies: 462
-- Name: COLUMN dictionary_field_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field_type.oid IS 'Код типа данных';


--
-- TOC entry 13001 (class 0 OID 0)
-- Dependencies: 462
-- Name: COLUMN dictionary_field_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_field_type.name IS 'Наименование';


--
-- TOC entry 463 (class 1259 OID 19255)
-- Dependencies: 7032 14
-- Name: dictionary_nsi; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dictionary_nsi (
    oid character(36) NOT NULL,
    dictionary character(36) NOT NULL,
    synonim character varying(255),
    name character varying(255),
    show boolean DEFAULT true
);


ALTER TABLE mir.dictionary_nsi OWNER TO postgres;

--
-- TOC entry 13002 (class 0 OID 0)
-- Dependencies: 463
-- Name: TABLE dictionary_nsi; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dictionary_nsi IS 'Таблица для определения, какие справочники можно будет импортировать и экспортировать из НСИ';


--
-- TOC entry 13003 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN dictionary_nsi.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_nsi.oid IS 'Идентификатор';


--
-- TOC entry 13004 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN dictionary_nsi.dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_nsi.dictionary IS 'Ссылка на справочник';


--
-- TOC entry 13005 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN dictionary_nsi.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_nsi.synonim IS 'Синоним для использования в НСИ';


--
-- TOC entry 13006 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN dictionary_nsi.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_nsi.name IS 'Отображаемое имя справочника';


--
-- TOC entry 13007 (class 0 OID 0)
-- Dependencies: 463
-- Name: COLUMN dictionary_nsi.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_nsi.show IS 'Показывать ли справочник в списке';


--
-- TOC entry 464 (class 1259 OID 19262)
-- Dependencies: 14
-- Name: dictionary_right; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dictionary_right (
    "right" character(36) NOT NULL,
    dictionary character(36) NOT NULL,
    action integer NOT NULL
);


ALTER TABLE mir.dictionary_right OWNER TO postgres;

--
-- TOC entry 13008 (class 0 OID 0)
-- Dependencies: 464
-- Name: TABLE dictionary_right; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dictionary_right IS 'связка прав и справочников';


--
-- TOC entry 13009 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN dictionary_right."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_right."right" IS 'right';


--
-- TOC entry 13010 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN dictionary_right.dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_right.dictionary IS 'dictionary';


--
-- TOC entry 13011 (class 0 OID 0)
-- Dependencies: 464
-- Name: COLUMN dictionary_right.action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dictionary_right.action IS 'разрешаемое действие
1 - редактировать
2 - подтверждать';


--
-- TOC entry 465 (class 1259 OID 19265)
-- Dependencies: 7033 14
-- Name: diplomaeducation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE diplomaeducation (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    educationinstitution character(36) NOT NULL,
    educationtype character(36) NOT NULL,
    specialities character(36) NOT NULL,
    date_graduation date NOT NULL,
    diplomaserie character varying(255) NOT NULL,
    diplomanumber character varying(255) NOT NULL,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.diplomaeducation OWNER TO postgres;

--
-- TOC entry 13012 (class 0 OID 0)
-- Dependencies: 465
-- Name: TABLE diplomaeducation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE diplomaeducation IS 'Диплом образования

';


--
-- TOC entry 13013 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.oid IS 'oid';


--
-- TOC entry 13014 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.people IS 'people';


--
-- TOC entry 13015 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.educationinstitution IS 'учебное заведение';


--
-- TOC entry 13016 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.educationtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.educationtype IS 'тип образования';


--
-- TOC entry 13017 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.specialities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.specialities IS 'специальность';


--
-- TOC entry 13018 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.date_graduation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.date_graduation IS 'дата окончания';


--
-- TOC entry 13019 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.diplomaserie; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.diplomaserie IS 'серия диплома';


--
-- TOC entry 13020 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.diplomanumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.diplomanumber IS 'номер диплома';


--
-- TOC entry 13021 (class 0 OID 0)
-- Dependencies: 465
-- Name: COLUMN diplomaeducation.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN diplomaeducation.sysdate IS 'sysdate';


--
-- TOC entry 466 (class 1259 OID 19272)
-- Dependencies: 7034 14
-- Name: direction; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE direction (
    oid character varying(36),
    specid character varying(36),
    fromlpuid character varying(36),
    tolpuid character varying(36),
    uniq_code character varying(10),
    print_person character varying(36),
    print_date date,
    use_date_to date,
    use_date date,
    schedule_id character varying(36),
    dt_start date,
    dt_end date,
    oid_session_print character varying(36),
    direction_type numeric DEFAULT 1 NOT NULL,
    otdel_lpu character(36)
);


ALTER TABLE mir.direction OWNER TO postgres;

--
-- TOC entry 13022 (class 0 OID 0)
-- Dependencies: 466
-- Name: TABLE direction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE direction IS 'DIRECTION';


--
-- TOC entry 13023 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.oid IS 'oid';


--
-- TOC entry 13024 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.specid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.specid IS 'specid';


--
-- TOC entry 13025 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.fromlpuid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.fromlpuid IS 'fromlpuid';


--
-- TOC entry 13026 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.tolpuid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.tolpuid IS 'tolpuid';


--
-- TOC entry 13027 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.uniq_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.uniq_code IS 'uniq_code';


--
-- TOC entry 13028 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.print_person; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.print_person IS 'print_person';


--
-- TOC entry 13029 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.print_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.print_date IS 'print_date';


--
-- TOC entry 13030 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.use_date_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.use_date_to IS 'use_date_to';


--
-- TOC entry 13031 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.use_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.use_date IS 'use_date';


--
-- TOC entry 13032 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.schedule_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.schedule_id IS 'schedule_id';


--
-- TOC entry 13033 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.dt_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.dt_start IS 'dt_start';


--
-- TOC entry 13034 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.dt_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.dt_end IS 'dt_end';


--
-- TOC entry 13035 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.oid_session_print; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.oid_session_print IS 'oid_session_print';


--
-- TOC entry 13036 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.direction_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.direction_type IS 'ТИП НАПРАВЛЕНИЯ';


--
-- TOC entry 13037 (class 0 OID 0)
-- Dependencies: 466
-- Name: COLUMN direction.otdel_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN direction.otdel_lpu IS 'ОТДЕЛ ЛПУ';


--
-- TOC entry 467 (class 1259 OID 19279)
-- Dependencies: 14
-- Name: schedule_p; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_p (
    oid character(36) NOT NULL,
    cabinet character varying(100),
    insite numeric(1,0),
    sysuser character(36),
    presctype character(36),
    people character(36),
    state numeric,
    presc character(36),
    isnapronly character(36),
    ticketnumber character varying(100),
    lpu character(36),
    isbron numeric(1,0),
    schedulecallstate numeric,
    schedulecallstatecomment character varying(100),
    updatepeopledate date,
    peoplescheduleplace numeric,
    schedulecallstatedate date,
    schedulecallstatesysuser character(36),
    extralinereason character varying(100),
    info character varying(1000),
    yavkadt date,
    sysuseraddpeople character varying(36),
    paid character(36),
    starton date,
    endon date,
    gcrecord numeric,
    objecttype numeric
);


ALTER TABLE mir.schedule_p OWNER TO postgres;

--
-- TOC entry 13038 (class 0 OID 0)
-- Dependencies: 467
-- Name: TABLE schedule_p; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_p IS 'SCHEDULE_P';


--
-- TOC entry 13039 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.oid IS 'oid';


--
-- TOC entry 13040 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.cabinet IS 'cabinet';


--
-- TOC entry 13041 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.insite; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.insite IS 'insite';


--
-- TOC entry 13042 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.sysuser IS 'sysuser';


--
-- TOC entry 13043 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.presctype IS 'presctype';


--
-- TOC entry 13044 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.people IS 'people';


--
-- TOC entry 13045 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.state IS 'state';


--
-- TOC entry 13046 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.presc IS 'presc';


--
-- TOC entry 13047 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.isnapronly; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.isnapronly IS 'isnapronly';


--
-- TOC entry 13048 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.ticketnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.ticketnumber IS 'ticketnumber';


--
-- TOC entry 13049 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.lpu IS 'lpu';


--
-- TOC entry 13050 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.isbron; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.isbron IS 'isbron';


--
-- TOC entry 13051 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.schedulecallstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.schedulecallstate IS 'schedulecallstate';


--
-- TOC entry 13052 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.schedulecallstatecomment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.schedulecallstatecomment IS 'schedulecallstatecomment';


--
-- TOC entry 13053 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.updatepeopledate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.updatepeopledate IS 'updatepeopledate';


--
-- TOC entry 13054 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.peoplescheduleplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.peoplescheduleplace IS 'peoplescheduleplace';


--
-- TOC entry 13055 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.schedulecallstatedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.schedulecallstatedate IS 'schedulecallstatedate';


--
-- TOC entry 13056 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.schedulecallstatesysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.schedulecallstatesysuser IS 'schedulecallstatesysuser';


--
-- TOC entry 13057 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.extralinereason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.extralinereason IS 'extralinereason';


--
-- TOC entry 13058 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.info IS 'info';


--
-- TOC entry 13059 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.yavkadt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.yavkadt IS 'yavkadt';


--
-- TOC entry 13060 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.sysuseraddpeople; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.sysuseraddpeople IS 'sysuseraddpeople';


--
-- TOC entry 13061 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.paid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.paid IS 'paid';


--
-- TOC entry 13062 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.starton IS 'starton';


--
-- TOC entry 13063 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.endon IS 'endon';


--
-- TOC entry 13064 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.gcrecord IS 'gcrecord';


--
-- TOC entry 13065 (class 0 OID 0)
-- Dependencies: 467
-- Name: COLUMN schedule_p.objecttype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_p.objecttype IS 'objecttype';


--
-- TOC entry 468 (class 1259 OID 19285)
-- Dependencies: 6760 14
-- Name: schedule_info_1; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW schedule_info_1 AS
    SELECT s.oid, s.cabinet, s.insite, s.sysuser, s.presctype, s.people, s.state, s.presc, s.isnapronly, s.ticketnumber, s.lpu, s.isbron, s.schedulecallstate, s.schedulecallstatecomment, s.updatepeopledate, s.peoplescheduleplace, s.schedulecallstatedate, s.schedulecallstatesysuser, s.extralinereason, s.info, s.yavkadt, s.sysuseraddpeople, s.paid, s.starton, s.endon, s.gcrecord, s.objecttype FROM schedule_p s WHERE (s.gcrecord IS NULL);


ALTER TABLE mir.schedule_info_1 OWNER TO postgres;

--
-- TOC entry 13066 (class 0 OID 0)
-- Dependencies: 468
-- Name: VIEW schedule_info_1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW schedule_info_1 IS 'SCHEDULE_INFO';


--
-- TOC entry 469 (class 1259 OID 19290)
-- Dependencies: 6761 14
-- Name: direction_rep_okrug_view; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW direction_rep_okrug_view AS
    SELECT si.presctype, si.state, si.starton, si.people, si.yavkadt, CASE WHEN ((arl.name)::text = 'ЗАПАДНЫЙ ОКРУГ'::text) THEN 1 ELSE 0 END AS zapadz, CASE WHEN (((arl.name)::text = 'ЗАПАДНЫЙ ОКРУГ'::text) AND (si.yavkadt IS NULL)) THEN 1 ELSE 0 END AS zapadne, 0 AS zapadzam, CASE WHEN ((arl.name)::text = 'ЮЖНЫЙ ОКРУГ'::text) THEN 1 ELSE 0 END AS ugz, CASE WHEN (((arl.name)::text = 'ЮЖНЫЙ ОКРУГ'::text) AND (si.yavkadt IS NULL)) THEN 1 ELSE 0 END AS ugne, 0 AS ugzam, CASE WHEN ((arl.name)::text = 'ВОСТОЧНЫЙ ОКРУГ'::text) THEN 1 ELSE 0 END AS vostokz, CASE WHEN ((arl.name)::text = 'ВОСТОЧНЫЙ ОКРУГ AND SI.YAVKADT IS NULL '::text) THEN 1 ELSE 0 END AS vostokne, 0 AS vostokzam, CASE WHEN ((arl.name)::text = 'СЕВЕРНЫЙ ОКРУГ'::text) THEN 1 ELSE 0 END AS severz, CASE WHEN (((arl.name)::text = 'СЕВЕРНЫЙ ОКРУГ'::text) AND (si.yavkadt IS NULL)) THEN 1 ELSE 0 END AS severne, 0 AS severzam, CASE WHEN ((arl.name)::text = 'ГОРНОЗАВОДСКОЙ ОКРУГ'::text) THEN 1 ELSE 0 END AS gornozavz, CASE WHEN (((arl.name)::text = 'ГОРНОЗАВОДСКОЙ ОКРУГ'::text) AND (si.yavkadt IS NULL)) THEN 1 ELSE 0 END AS gornozavne, 0 AS gornozavzam, CASE WHEN ((arl.name)::text = 'ВНЕ ОКРУГА'::text) THEN 1 ELSE 0 END AS nookrugz, CASE WHEN (((arl.name)::text = 'ВНЕ ОКРУГА'::text) AND (si.yavkadt IS NULL)) THEN 1 ELSE 0 END AS nookrugne, 0 AS nookrugzam, CASE WHEN ((arl.name)::text = 'ЕКАТЕРИНБУРГ'::text) THEN 1 ELSE 0 END AS ekaterz, CASE WHEN ((arl.name)::text = 'ЕКАТЕРИНБУРГ'::text) THEN 1 ELSE 0 END AS ekaterne, 0 AS ekaterzam, 1 AS allsz, 1 AS allsne, 0 AS allszam, si.lpu FROM (((direction d LEFT JOIN area_lpu al ON ((al.lpu = (d.tolpuid)::bpchar))) LEFT JOIN area_list arl ON ((arl.oid = al.area_id))) LEFT JOIN schedule_info_1 si ON ((si.oid = (d.schedule_id)::bpchar)));


ALTER TABLE mir.direction_rep_okrug_view OWNER TO postgres;

--
-- TOC entry 13067 (class 0 OID 0)
-- Dependencies: 469
-- Name: VIEW direction_rep_okrug_view; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW direction_rep_okrug_view IS 'DIRECTION_REP_OKRUG_VIEW';


--
-- TOC entry 470 (class 1259 OID 19295)
-- Dependencies: 14
-- Name: disp_card_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_card_diag (
    oid character(36) NOT NULL,
    diag_id character(36) NOT NULL,
    disp_card character(36) NOT NULL
);


ALTER TABLE mir.disp_card_diag OWNER TO postgres;

--
-- TOC entry 13068 (class 0 OID 0)
-- Dependencies: 470
-- Name: TABLE disp_card_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_card_diag IS 'Дополнительная информация для диспансерных карт
';


--
-- TOC entry 13069 (class 0 OID 0)
-- Dependencies: 470
-- Name: COLUMN disp_card_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_diag.oid IS 'oid';


--
-- TOC entry 13070 (class 0 OID 0)
-- Dependencies: 470
-- Name: COLUMN disp_card_diag.diag_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_diag.diag_id IS 'заболевание, по поводу которого взят под диспансерное наблюдение ';


--
-- TOC entry 13071 (class 0 OID 0)
-- Dependencies: 470
-- Name: COLUMN disp_card_diag.disp_card; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_diag.disp_card IS 'disp_card.oid';


--
-- TOC entry 471 (class 1259 OID 19298)
-- Dependencies: 14
-- Name: disp_card_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_card_info (
    oid character(36) NOT NULL,
    start_date date,
    end_date date,
    diag_main character(36) NOT NULL,
    disp_sotr character(36) NOT NULL,
    disp_group character(36) NOT NULL,
    cause_close character(36),
    mdoc_id character(36)
);


ALTER TABLE mir.disp_card_info OWNER TO postgres;

--
-- TOC entry 13072 (class 0 OID 0)
-- Dependencies: 471
-- Name: TABLE disp_card_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_card_info IS 'Дополнительная информация для диспансерных карт
';


--
-- TOC entry 13073 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.oid IS 'oid';


--
-- TOC entry 13074 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.start_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.start_date IS 'дата взятия на учет';


--
-- TOC entry 13075 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.end_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.end_date IS 'дата снятия с учета';


--
-- TOC entry 13076 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.diag_main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.diag_main IS 'заболевание, по поводу которого взят под диспансерное наблюдение ';


--
-- TOC entry 13077 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.disp_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.disp_sotr IS 'врач, взявший на учет';


--
-- TOC entry 13078 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.disp_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.disp_group IS 'Группа диспансерн.учета
';


--
-- TOC entry 13079 (class 0 OID 0)
-- Dependencies: 471
-- Name: COLUMN disp_card_info.cause_close; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_card_info.cause_close IS 'Диспансерн.учет,Причина снятия';


--
-- TOC entry 472 (class 1259 OID 19301)
-- Dependencies: 7035 14
-- Name: disp_close_cause; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_close_cause (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    foms_code numeric(1,0)
);


ALTER TABLE mir.disp_close_cause OWNER TO postgres;

--
-- TOC entry 13080 (class 0 OID 0)
-- Dependencies: 472
-- Name: TABLE disp_close_cause; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_close_cause IS 'disp_close_cause';


--
-- TOC entry 13081 (class 0 OID 0)
-- Dependencies: 472
-- Name: COLUMN disp_close_cause.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_close_cause.oid IS 'oid';


--
-- TOC entry 13082 (class 0 OID 0)
-- Dependencies: 472
-- Name: COLUMN disp_close_cause.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_close_cause.name IS 'name';


--
-- TOC entry 13083 (class 0 OID 0)
-- Dependencies: 472
-- Name: COLUMN disp_close_cause.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_close_cause.show IS 'show';


--
-- TOC entry 13084 (class 0 OID 0)
-- Dependencies: 472
-- Name: COLUMN disp_close_cause.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_close_cause.foms_code IS 'Код ФОМС';


--
-- TOC entry 473 (class 1259 OID 19305)
-- Dependencies: 14
-- Name: disp_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_group (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.disp_group OWNER TO postgres;

--
-- TOC entry 13085 (class 0 OID 0)
-- Dependencies: 473
-- Name: TABLE disp_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_group IS 'disp_group';


--
-- TOC entry 13086 (class 0 OID 0)
-- Dependencies: 473
-- Name: COLUMN disp_group.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_group.oid IS 'oid';


--
-- TOC entry 13087 (class 0 OID 0)
-- Dependencies: 473
-- Name: COLUMN disp_group.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_group.name IS 'name';


--
-- TOC entry 474 (class 1259 OID 19308)
-- Dependencies: 14
-- Name: disp_stage; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_stage (
    id character(36) NOT NULL,
    name character varying(255),
    foms_code numeric(1,0)
);


ALTER TABLE mir.disp_stage OWNER TO postgres;

--
-- TOC entry 13088 (class 0 OID 0)
-- Dependencies: 474
-- Name: TABLE disp_stage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_stage IS 'Стадия диспансеризации Author: Nakorjakov';


--
-- TOC entry 13089 (class 0 OID 0)
-- Dependencies: 474
-- Name: COLUMN disp_stage.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_stage.id IS 'SEQUENCE=[MIS.SQ_DISP_STAGE]';


--
-- TOC entry 13090 (class 0 OID 0)
-- Dependencies: 474
-- Name: COLUMN disp_stage.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_stage.name IS 'Название';


--
-- TOC entry 13091 (class 0 OID 0)
-- Dependencies: 474
-- Name: COLUMN disp_stage.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_stage.foms_code IS 'Код ФОМС';


--
-- TOC entry 475 (class 1259 OID 19311)
-- Dependencies: 14
-- Name: disp_step; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_step (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.disp_step OWNER TO postgres;

--
-- TOC entry 13092 (class 0 OID 0)
-- Dependencies: 475
-- Name: TABLE disp_step; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_step IS 'Этап диспансеризации Author: Nakorjakov';


--
-- TOC entry 13093 (class 0 OID 0)
-- Dependencies: 475
-- Name: COLUMN disp_step.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_step.id IS 'SEQUENCE=[MIS.SQ_DISP_STEP]';


--
-- TOC entry 13094 (class 0 OID 0)
-- Dependencies: 475
-- Name: COLUMN disp_step.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_step.name IS 'Название';


--
-- TOC entry 476 (class 1259 OID 19314)
-- Dependencies: 14
-- Name: disp_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE disp_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.disp_type OWNER TO postgres;

--
-- TOC entry 13095 (class 0 OID 0)
-- Dependencies: 476
-- Name: TABLE disp_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE disp_type IS 'Типы диспансеризации';


--
-- TOC entry 13096 (class 0 OID 0)
-- Dependencies: 476
-- Name: COLUMN disp_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_type.oid IS 'oid';


--
-- TOC entry 13097 (class 0 OID 0)
-- Dependencies: 476
-- Name: COLUMN disp_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN disp_type.name IS 'name';


--
-- TOC entry 477 (class 1259 OID 19317)
-- Dependencies: 14
-- Name: dispgroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dispgroup (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.dispgroup OWNER TO postgres;

--
-- TOC entry 13098 (class 0 OID 0)
-- Dependencies: 477
-- Name: TABLE dispgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dispgroup IS 'Диспансерная группа (первая, вторая). Не классификатор Author: Nakorjakov';


--
-- TOC entry 13099 (class 0 OID 0)
-- Dependencies: 477
-- Name: COLUMN dispgroup.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispgroup.id IS 'ID';


--
-- TOC entry 13100 (class 0 OID 0)
-- Dependencies: 477
-- Name: COLUMN dispgroup.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispgroup.name IS 'Название диспансерной группы';


--
-- TOC entry 478 (class 1259 OID 19320)
-- Dependencies: 7036 7037 14
-- Name: dispstate; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dispstate (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_dispstate$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.dispstate OWNER TO postgres;

--
-- TOC entry 13101 (class 0 OID 0)
-- Dependencies: 478
-- Name: TABLE dispstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dispstate IS 'Диспансерный учет 1 -состоит 2-поставлен, 3-снят 4- не состоит. Author: Kulikovskiy';


--
-- TOC entry 13102 (class 0 OID 0)
-- Dependencies: 478
-- Name: COLUMN dispstate.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispstate.oid IS 'ID';


--
-- TOC entry 13103 (class 0 OID 0)
-- Dependencies: 478
-- Name: COLUMN dispstate.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispstate.name IS 'Название состояния диспансерного учета';


--
-- TOC entry 13104 (class 0 OID 0)
-- Dependencies: 478
-- Name: COLUMN dispstate.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispstate.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13105 (class 0 OID 0)
-- Dependencies: 478
-- Name: COLUMN dispstate.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispstate.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13106 (class 0 OID 0)
-- Dependencies: 478
-- Name: COLUMN dispstate.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dispstate.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 479 (class 1259 OID 19328)
-- Dependencies: 7038 14
-- Name: district; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE district (
    oid character(36) NOT NULL,
    district_name character varying(255),
    helptype character(36),
    priority character varying(36),
    autodistrict numeric(1,0) DEFAULT 1,
    otdel character(36)
);


ALTER TABLE mir.district OWNER TO postgres;

--
-- TOC entry 13107 (class 0 OID 0)
-- Dependencies: 479
-- Name: TABLE district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE district IS 'Участки. Таблица, не используется. Вместо нее используется mir.areal.';


--
-- TOC entry 13108 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.oid IS 'oid';


--
-- TOC entry 13109 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.district_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.district_name IS 'наименование';


--
-- TOC entry 13110 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.helptype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.helptype IS 'helptype';


--
-- TOC entry 13111 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.priority; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.priority IS 'priority';


--
-- TOC entry 13112 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.autodistrict; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.autodistrict IS 'autodistrict';


--
-- TOC entry 13113 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN district.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN district.otdel IS 'otdel';


--
-- TOC entry 480 (class 1259 OID 19332)
-- Dependencies: 14
-- Name: districtpriority; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE districtpriority (
    oid character varying(36),
    name character varying(100)
);


ALTER TABLE mir.districtpriority OWNER TO postgres;

--
-- TOC entry 13114 (class 0 OID 0)
-- Dependencies: 480
-- Name: TABLE districtpriority; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE districtpriority IS 'Приоритет автоопределения участка';


--
-- TOC entry 13115 (class 0 OID 0)
-- Dependencies: 480
-- Name: COLUMN districtpriority.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtpriority.oid IS 'oid';


--
-- TOC entry 13116 (class 0 OID 0)
-- Dependencies: 480
-- Name: COLUMN districtpriority.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtpriority.name IS 'name';


--
-- TOC entry 481 (class 1259 OID 19335)
-- Dependencies: 14
-- Name: districtstreet; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE districtstreet (
    oid character(36) NOT NULL,
    district character(36),
    tkladr character(36),
    starthouse character varying(100),
    endhouse character varying(100),
    excludehouse character varying(100),
    includehouse text
);


ALTER TABLE mir.districtstreet OWNER TO postgres;

--
-- TOC entry 13117 (class 0 OID 0)
-- Dependencies: 481
-- Name: TABLE districtstreet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE districtstreet IS 'связь учатска с улцами';


--
-- TOC entry 13118 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.oid IS 'oid';


--
-- TOC entry 13119 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.district IS 'district';


--
-- TOC entry 13120 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.tkladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.tkladr IS 'tkladr';


--
-- TOC entry 13121 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.starthouse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.starthouse IS 'starthouse';


--
-- TOC entry 13122 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.endhouse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.endhouse IS 'endhouse';


--
-- TOC entry 13123 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.excludehouse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.excludehouse IS 'excludehouse';


--
-- TOC entry 13124 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN districtstreet.includehouse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtstreet.includehouse IS 'includehouse';


--
-- TOC entry 482 (class 1259 OID 19341)
-- Dependencies: 14
-- Name: districtstreet_tmp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE districtstreet_tmp (
    oid character(36) NOT NULL,
    areal_oid character(36),
    kladr_oid character(36),
    inrange character varying(100),
    fk_id_oracle integer
);


ALTER TABLE mir.districtstreet_tmp OWNER TO postgres;

--
-- TOC entry 483 (class 1259 OID 19344)
-- Dependencies: 14
-- Name: districtworks; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE districtworks (
    oid character varying(36),
    oid_district character varying(36),
    oid_company character varying(36)
);


ALTER TABLE mir.districtworks OWNER TO postgres;

--
-- TOC entry 13125 (class 0 OID 0)
-- Dependencies: 483
-- Name: TABLE districtworks; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE districtworks IS 'связь участка с компанией';


--
-- TOC entry 13126 (class 0 OID 0)
-- Dependencies: 483
-- Name: COLUMN districtworks.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtworks.oid IS 'oid';


--
-- TOC entry 13127 (class 0 OID 0)
-- Dependencies: 483
-- Name: COLUMN districtworks.oid_district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtworks.oid_district IS 'oid_district';


--
-- TOC entry 13128 (class 0 OID 0)
-- Dependencies: 483
-- Name: COLUMN districtworks.oid_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN districtworks.oid_company IS 'oid_company';


--
-- TOC entry 484 (class 1259 OID 19347)
-- Dependencies: 7039 14
-- Name: docobsl; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE docobsl (
    oid character(36) NOT NULL,
    mdoc_type_id character(36) NOT NULL,
    num_doc numeric(9,0),
    year_doc numeric(4,0),
    lpu character(36) NOT NULL,
    date_generate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.docobsl OWNER TO postgres;

--
-- TOC entry 13129 (class 0 OID 0)
-- Dependencies: 484
-- Name: TABLE docobsl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE docobsl IS 'Документы обслуживания';


--
-- TOC entry 13130 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.oid IS 'oid';


--
-- TOC entry 13131 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.mdoc_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.mdoc_type_id IS 'Ссылка на mdoc_type - вид док-та обслуживания';


--
-- TOC entry 13132 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.num_doc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.num_doc IS 'Уникальный номер док-та';


--
-- TOC entry 13133 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.year_doc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.year_doc IS 'Год документа';


--
-- TOC entry 13134 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.lpu IS 'lpu.oid';


--
-- TOC entry 13135 (class 0 OID 0)
-- Dependencies: 484
-- Name: COLUMN docobsl.date_generate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN docobsl.date_generate IS 'Дата создания номера документа';


--
-- TOC entry 485 (class 1259 OID 19351)
-- Dependencies: 7040 7041 7042 14
-- Name: otdel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    addressex character(36),
    parent character(36),
    name character varying(255),
    otdel_code character varying(255),
    location character varying(255),
    distance numeric(10,2),
    otdel_type character(36) NOT NULL,
    otdel_profile character(36),
    foms_code numeric(8,0),
    sysdate timestamp(0) without time zone DEFAULT now(),
    show_on_site numeric(1,0) DEFAULT 1,
    CONSTRAINT "otdel_chk$show_on_site" CHECK (((show_on_site IS NULL) OR ((show_on_site >= (0)::numeric) AND (show_on_site <= (1)::numeric))))
);


ALTER TABLE mir.otdel OWNER TO postgres;

--
-- TOC entry 13136 (class 0 OID 0)
-- Dependencies: 485
-- Name: TABLE otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel IS 'Отделения (название в Hcategory)';


--
-- TOC entry 13137 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.oid IS 'oid';


--
-- TOC entry 13138 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.lpu IS 'lpu';


--
-- TOC entry 13139 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.addressex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.addressex IS 'addressex';


--
-- TOC entry 13140 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.parent IS 'Подчинен';


--
-- TOC entry 13141 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.name IS 'name';


--
-- TOC entry 13142 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.otdel_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.otdel_code IS 'код';


--
-- TOC entry 13143 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.location IS 'расположение учреждения (описание)';


--
-- TOC entry 13144 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.distance IS 'Расстояние до наиболее удаленной точки территориального обслуживания';


--
-- TOC entry 13145 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.otdel_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.otdel_type IS 'тип подразделения';


--
-- TOC entry 13146 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.otdel_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.otdel_profile IS 'профиль отдела';


--
-- TOC entry 13147 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.foms_code IS 'код ФОМС из регионального реестра';


--
-- TOC entry 13148 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.sysdate IS 'CURRENT_TIMESTAMP';


--
-- TOC entry 13149 (class 0 OID 0)
-- Dependencies: 485
-- Name: COLUMN otdel.show_on_site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel.show_on_site IS 'Отображать расписание на сайте(1 - отображать, 0 - неотображать)
Причем тут отдел и расписание ?';


--
-- TOC entry 486 (class 1259 OID 19360)
-- Dependencies: 7043 7044 14
-- Name: post; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE post (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    id integer,
    version character varying(255),
    isuniqueforlpu numeric(1,0),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer DEFAULT 0,
    is_doctor boolean
);


ALTER TABLE mir.post OWNER TO postgres;

--
-- TOC entry 13150 (class 0 OID 0)
-- Dependencies: 486
-- Name: TABLE post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE post IS 'Должности сотрудников';


--
-- TOC entry 13151 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.oid IS 'oid';


--
-- TOC entry 13152 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.name IS 'name';


--
-- TOC entry 13153 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.parent IS 'parentid';


--
-- TOC entry 13154 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.id IS 'id';


--
-- TOC entry 13155 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.version; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.version IS 'Версия справочника';


--
-- TOC entry 13156 (class 0 OID 0)
-- Dependencies: 486
-- Name: COLUMN post.is_doctor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post.is_doctor IS 'Является врачём';


--
-- TOC entry 487 (class 1259 OID 19368)
-- Dependencies: 14
-- Name: room; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE room (
    oid character(36) NOT NULL,
    otdel character(36),
    building character(36) NOT NULL,
    room_name character varying(255),
    identifier character varying(255) NOT NULL,
    room_type character(36),
    rooms integer,
    primary_seats integer,
    additional_seats integer,
    area numeric(15,2),
    window_view character varying(255)
);


ALTER TABLE mir.room OWNER TO postgres;

--
-- TOC entry 13157 (class 0 OID 0)
-- Dependencies: 487
-- Name: TABLE room; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE room IS 'номер/палата';


--
-- TOC entry 13158 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.oid IS 'oid';


--
-- TOC entry 13159 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.otdel IS 'otdel';


--
-- TOC entry 13160 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.building IS 'building';


--
-- TOC entry 13161 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.room_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.room_name IS 'наименование';


--
-- TOC entry 13162 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.identifier IS 'идентификатор';


--
-- TOC entry 13163 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.room_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.room_type IS 'тип палаты';


--
-- TOC entry 13164 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.rooms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.rooms IS 'количество комнат';


--
-- TOC entry 13165 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.primary_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.primary_seats IS 'количество основных мест';


--
-- TOC entry 13166 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.additional_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.additional_seats IS 'количество дополнительных мест';


--
-- TOC entry 13167 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.area IS 'площадь (m2)';


--
-- TOC entry 13168 (class 0 OID 0)
-- Dependencies: 487
-- Name: COLUMN room.window_view; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room.window_view IS 'вид из окна';


--
-- TOC entry 488 (class 1259 OID 19374)
-- Dependencies: 7045 14
-- Name: sotr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    otdel character(36),
    post character(36) NOT NULL,
    district character(36),
    date_post_begin timestamp without time zone,
    date_post_end timestamp without time zone,
    id integer,
    sysdate timestamp(0) without time zone DEFAULT now()
);


ALTER TABLE mir.sotr OWNER TO postgres;

--
-- TOC entry 13169 (class 0 OID 0)
-- Dependencies: 488
-- Name: TABLE sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr IS 'Сотрудники';


--
-- TOC entry 13170 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.oid IS 'oid';


--
-- TOC entry 13171 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.sysuser IS 'sysuser';


--
-- TOC entry 13172 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.otdel IS 'otdel';


--
-- TOC entry 13173 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.post IS 'post';


--
-- TOC entry 13174 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.district IS 'district';


--
-- TOC entry 13175 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.date_post_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.date_post_begin IS 'дата назначения на должность';


--
-- TOC entry 13176 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.date_post_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.date_post_end IS 'дата снятия с должности';


--
-- TOC entry 13177 (class 0 OID 0)
-- Dependencies: 488
-- Name: COLUMN sotr.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr.sysdate IS 'Текущее время';


--
-- TOC entry 489 (class 1259 OID 19378)
-- Dependencies: 6762 14
-- Name: doctor_list_for_stacionar; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW doctor_list_for_stacionar AS
    SELECT s.oid, ((((((p.name)::text || '-'::text) || ((SELECT emp_get_empfio_short(s.oid) AS emp_get_empfio_short))::text) || '('::text) || (o.name)::text) || ')'::text) AS name, pr.mdoc_id AS mdoc FROM ((((sotr s JOIN post p ON ((p.oid = s.post))) JOIN otdel o ON ((o.oid = s.otdel))) JOIN room r ON ((r.otdel = o.oid))) JOIN hosp.peresel pr ON ((pr.room_id = r.oid))) GROUP BY s.oid, p.name, o.name, pr.mdoc_id ORDER BY ((((((p.name)::text || '-'::text) || ((SELECT emp_get_empfio_short(s.oid) AS emp_get_empfio_short))::text) || '('::text) || (o.name)::text) || ')'::text);


ALTER TABLE mir.doctor_list_for_stacionar OWNER TO postgres;

--
-- TOC entry 490 (class 1259 OID 19383)
-- Dependencies: 14
-- Name: dop_disp_card_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE dop_disp_card_info (
    oid character(36) NOT NULL,
    company_budget character varying(255) NOT NULL,
    purpose character varying(255),
    permanent_lpu character varying(255)
);


ALTER TABLE mir.dop_disp_card_info OWNER TO postgres;

--
-- TOC entry 13178 (class 0 OID 0)
-- Dependencies: 490
-- Name: TABLE dop_disp_card_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE dop_disp_card_info IS 'Дополнительная информация для карт дополнительной информации
';


--
-- TOC entry 13179 (class 0 OID 0)
-- Dependencies: 490
-- Name: COLUMN dop_disp_card_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dop_disp_card_info.oid IS 'oid';


--
-- TOC entry 13180 (class 0 OID 0)
-- Dependencies: 490
-- Name: COLUMN dop_disp_card_info.company_budget; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dop_disp_card_info.company_budget IS 'организация бюджетная';


--
-- TOC entry 13181 (class 0 OID 0)
-- Dependencies: 490
-- Name: COLUMN dop_disp_card_info.purpose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dop_disp_card_info.purpose IS 'прикреплен в данном учреждении здравоохранения для';


--
-- TOC entry 13182 (class 0 OID 0)
-- Dependencies: 490
-- Name: COLUMN dop_disp_card_info.permanent_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN dop_disp_card_info.permanent_lpu IS 'учреждение здравоохранения, к которому прикреплен для постоянного динамического наблюдения';


--
-- TOC entry 491 (class 1259 OID 19389)
-- Dependencies: 14
-- Name: drugformchars; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE drugformchars (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.drugformchars OWNER TO postgres;

--
-- TOC entry 13183 (class 0 OID 0)
-- Dependencies: 491
-- Name: TABLE drugformchars; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE drugformchars IS 'Характеристики лекарственных форм';


--
-- TOC entry 13184 (class 0 OID 0)
-- Dependencies: 491
-- Name: COLUMN drugformchars.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugformchars.id IS 'Код характеристики - первичный ключ';


--
-- TOC entry 13185 (class 0 OID 0)
-- Dependencies: 491
-- Name: COLUMN drugformchars.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugformchars.fullname IS 'Полное название характеристики';


--
-- TOC entry 13186 (class 0 OID 0)
-- Dependencies: 491
-- Name: COLUMN drugformchars.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugformchars.shortname IS 'Краткое название характеристики';


--
-- TOC entry 492 (class 1259 OID 19395)
-- Dependencies: 14
-- Name: druglifetime; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE druglifetime (
    id bigint NOT NULL,
    text character varying,
    lifetime numeric(10,1)
);


ALTER TABLE mir.druglifetime OWNER TO postgres;

--
-- TOC entry 493 (class 1259 OID 19401)
-- Dependencies: 14
-- Name: drugpack; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE drugpack (
    id integer NOT NULL,
    name character varying(1024),
    fullname character varying(1024)
);


ALTER TABLE mir.drugpack OWNER TO postgres;

--
-- TOC entry 13187 (class 0 OID 0)
-- Dependencies: 493
-- Name: TABLE drugpack; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE drugpack IS 'Названия упаковок препаратов';


--
-- TOC entry 13188 (class 0 OID 0)
-- Dependencies: 493
-- Name: COLUMN drugpack.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugpack.id IS 'Код упаковки - первичный ключ';


--
-- TOC entry 13189 (class 0 OID 0)
-- Dependencies: 493
-- Name: COLUMN drugpack.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugpack.name IS 'Краткое название упаковки';


--
-- TOC entry 13190 (class 0 OID 0)
-- Dependencies: 493
-- Name: COLUMN drugpack.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugpack.fullname IS 'Полное название упаковки';


--
-- TOC entry 494 (class 1259 OID 19407)
-- Dependencies: 14
-- Name: drugset; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE drugset (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.drugset OWNER TO postgres;

--
-- TOC entry 13191 (class 0 OID 0)
-- Dependencies: 494
-- Name: TABLE drugset; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE drugset IS 'Название комплектов к единичным упаковкам';


--
-- TOC entry 13192 (class 0 OID 0)
-- Dependencies: 494
-- Name: COLUMN drugset.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugset.id IS 'Код названия комплекта - первичный ключ';


--
-- TOC entry 13193 (class 0 OID 0)
-- Dependencies: 494
-- Name: COLUMN drugset.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugset.fullname IS 'Полное название комплекта';


--
-- TOC entry 13194 (class 0 OID 0)
-- Dependencies: 494
-- Name: COLUMN drugset.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugset.shortname IS 'Краткое название комплекта';


--
-- TOC entry 495 (class 1259 OID 19413)
-- Dependencies: 14
-- Name: drugstorcond; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE drugstorcond (
    id integer NOT NULL,
    text character varying(1024)
);


ALTER TABLE mir.drugstorcond OWNER TO postgres;

--
-- TOC entry 13195 (class 0 OID 0)
-- Dependencies: 495
-- Name: TABLE drugstorcond; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE drugstorcond IS 'Условия хранения';


--
-- TOC entry 13196 (class 0 OID 0)
-- Dependencies: 495
-- Name: COLUMN drugstorcond.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugstorcond.id IS 'ПК';


--
-- TOC entry 13197 (class 0 OID 0)
-- Dependencies: 495
-- Name: COLUMN drugstorcond.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugstorcond.text IS 'Текст';


--
-- TOC entry 496 (class 1259 OID 19419)
-- Dependencies: 14
-- Name: drugstore; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE drugstore (
    oid character(36) NOT NULL,
    mo_group_oid character(36)
);


ALTER TABLE mir.drugstore OWNER TO postgres;

--
-- TOC entry 13198 (class 0 OID 0)
-- Dependencies: 496
-- Name: TABLE drugstore; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE drugstore IS 'Справочник аптек';


--
-- TOC entry 13199 (class 0 OID 0)
-- Dependencies: 496
-- Name: COLUMN drugstore.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN drugstore.oid IS 'oid';


--
-- TOC entry 497 (class 1259 OID 19422)
-- Dependencies: 14
-- Name: ecompany; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ecompany (
    oid character(36) NOT NULL,
    name character varying(255),
    own integer
);


ALTER TABLE mir.ecompany OWNER TO postgres;

--
-- TOC entry 13200 (class 0 OID 0)
-- Dependencies: 497
-- Name: TABLE ecompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ecompany IS 'Организации, с которыми осуществляется обмен by A.Nakorjakov 17052011';


--
-- TOC entry 13201 (class 0 OID 0)
-- Dependencies: 497
-- Name: COLUMN ecompany.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ecompany.oid IS 'ID';


--
-- TOC entry 13202 (class 0 OID 0)
-- Dependencies: 497
-- Name: COLUMN ecompany.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ecompany.name IS 'Наименование';


--
-- TOC entry 13203 (class 0 OID 0)
-- Dependencies: 497
-- Name: COLUMN ecompany.own; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ecompany.own IS 'Признак собственной компании';


--
-- TOC entry 498 (class 1259 OID 19425)
-- Dependencies: 14
-- Name: edizm; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE edizm (
    oid character(36) NOT NULL,
    edizmtype character(36),
    rus character varying(100),
    eng character varying(100),
    main double precision,
    okey character varying(100)
);


ALTER TABLE mir.edizm OWNER TO postgres;

--
-- TOC entry 13204 (class 0 OID 0)
-- Dependencies: 498
-- Name: TABLE edizm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE edizm IS 'Единицы измерений';


--
-- TOC entry 13205 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.oid IS 'oid';


--
-- TOC entry 13206 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.edizmtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.edizmtype IS 'edizmtype';


--
-- TOC entry 13207 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.rus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.rus IS 'rus';


--
-- TOC entry 13208 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.eng; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.eng IS 'eng';


--
-- TOC entry 13209 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.main IS 'main';


--
-- TOC entry 13210 (class 0 OID 0)
-- Dependencies: 498
-- Name: COLUMN edizm.okey; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizm.okey IS 'okey';


--
-- TOC entry 499 (class 1259 OID 19428)
-- Dependencies: 14
-- Name: edizmtype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE edizmtype (
    oid character(36) NOT NULL
);


ALTER TABLE mir.edizmtype OWNER TO postgres;

--
-- TOC entry 13211 (class 0 OID 0)
-- Dependencies: 499
-- Name: TABLE edizmtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE edizmtype IS 'тип единицы измерений';


--
-- TOC entry 13212 (class 0 OID 0)
-- Dependencies: 499
-- Name: COLUMN edizmtype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN edizmtype.oid IS 'oid';


--
-- TOC entry 500 (class 1259 OID 19431)
-- Dependencies: 14
-- Name: educationinstitution; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE educationinstitution (
    oid character(36) NOT NULL,
    id integer NOT NULL,
    name character varying(255),
    parent character(36)
);


ALTER TABLE mir.educationinstitution OWNER TO postgres;

--
-- TOC entry 13213 (class 0 OID 0)
-- Dependencies: 500
-- Name: TABLE educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE educationinstitution IS 'учебное заведение
';


--
-- TOC entry 13214 (class 0 OID 0)
-- Dependencies: 500
-- Name: COLUMN educationinstitution.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationinstitution.oid IS 'oid';


--
-- TOC entry 13215 (class 0 OID 0)
-- Dependencies: 500
-- Name: COLUMN educationinstitution.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationinstitution.id IS 'id';


--
-- TOC entry 13216 (class 0 OID 0)
-- Dependencies: 500
-- Name: COLUMN educationinstitution.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationinstitution.name IS 'name';


--
-- TOC entry 13217 (class 0 OID 0)
-- Dependencies: 500
-- Name: COLUMN educationinstitution.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationinstitution.parent IS 'parent';


--
-- TOC entry 501 (class 1259 OID 19434)
-- Dependencies: 14
-- Name: educationtype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE educationtype (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.educationtype OWNER TO postgres;

--
-- TOC entry 13218 (class 0 OID 0)
-- Dependencies: 501
-- Name: TABLE educationtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE educationtype IS 'тип образования
';


--
-- TOC entry 13219 (class 0 OID 0)
-- Dependencies: 501
-- Name: COLUMN educationtype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationtype.oid IS 'oid';


--
-- TOC entry 13220 (class 0 OID 0)
-- Dependencies: 501
-- Name: COLUMN educationtype.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationtype.id IS 'id';


--
-- TOC entry 13221 (class 0 OID 0)
-- Dependencies: 501
-- Name: COLUMN educationtype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN educationtype.name IS 'name';


--
-- TOC entry 502 (class 1259 OID 19437)
-- Dependencies: 7046 7047 14
-- Name: email_buffer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE email_buffer (
    oid character(36) NOT NULL,
    text character varying(4000),
    status numeric DEFAULT 0 NOT NULL,
    date_create timestamp(0) without time zone DEFAULT ('now'::text)::date NOT NULL,
    date_sent timestamp(0) without time zone,
    email_to character varying(200),
    schedule character varying(36)
);


ALTER TABLE mir.email_buffer OWNER TO postgres;

--
-- TOC entry 13222 (class 0 OID 0)
-- Dependencies: 502
-- Name: TABLE email_buffer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE email_buffer IS 'E-MAIL КОТОРЫЕ НЕОБХОДИМО ОТПРАВИТЬ';


--
-- TOC entry 13223 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.oid IS 'ID';


--
-- TOC entry 13224 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.text IS 'ТЕКСТ СООБЩЕНИЯ';


--
-- TOC entry 13225 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.status IS 'СТАТУС ОТПРАВКИ';


--
-- TOC entry 13226 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.date_create IS 'ДАТА СОЗДАНИЯ СООБЩЕНИЯ';


--
-- TOC entry 13227 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.date_sent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.date_sent IS 'ДАТА ОБРАБОТКИ СООБЩЕНИЯ';


--
-- TOC entry 13228 (class 0 OID 0)
-- Dependencies: 502
-- Name: COLUMN email_buffer.email_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN email_buffer.email_to IS 'Получатель сообщения';


--
-- TOC entry 503 (class 1259 OID 19445)
-- Dependencies: 6763 14
-- Name: email_state; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW email_state AS
    (SELECT 'Новое сообщение'::text AS status, 0 AS id UNION ALL SELECT 'Отправлено'::text AS status, 1 AS id) UNION ALL SELECT 'Ошибка отправки'::text AS status, 2 AS id;


ALTER TABLE mir.email_state OWNER TO postgres;

--
-- TOC entry 13229 (class 0 OID 0)
-- Dependencies: 503
-- Name: VIEW email_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW email_state IS 'EMAIL_STATE';


--
-- TOC entry 504 (class 1259 OID 19449)
-- Dependencies: 14
-- Name: eown; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE eown (
    oid character(36) NOT NULL,
    etable_id character(36),
    etheir_id character(36),
    code character varying(255),
    value character varying(255)
);


ALTER TABLE mir.eown OWNER TO postgres;

--
-- TOC entry 13230 (class 0 OID 0)
-- Dependencies: 504
-- Name: TABLE eown; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE eown IS 'Наши данные by A.Nakorjakov 17052011';


--
-- TOC entry 13231 (class 0 OID 0)
-- Dependencies: 504
-- Name: COLUMN eown.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN eown.oid IS 'ID';


--
-- TOC entry 13232 (class 0 OID 0)
-- Dependencies: 504
-- Name: COLUMN eown.etable_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN eown.etable_id IS 'ETABLE_id';


--
-- TOC entry 13233 (class 0 OID 0)
-- Dependencies: 504
-- Name: COLUMN eown.etheir_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN eown.etheir_id IS 'ETHEIR_id';


--
-- TOC entry 13234 (class 0 OID 0)
-- Dependencies: 504
-- Name: COLUMN eown.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN eown.code IS 'CODE';


--
-- TOC entry 13235 (class 0 OID 0)
-- Dependencies: 504
-- Name: COLUMN eown.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN eown.value IS 'VALUE';


--
-- TOC entry 505 (class 1259 OID 19455)
-- Dependencies: 14
-- Name: epicris; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE epicris (
    oid character(36) NOT NULL,
    mdoc_oid character(36) NOT NULL,
    text text,
    type character(36),
    dt timestamp(0) without time zone,
    oid_sysuser character(36),
    presctype character(36),
    visit character(36)
);


ALTER TABLE mir.epicris OWNER TO postgres;

--
-- TOC entry 13236 (class 0 OID 0)
-- Dependencies: 505
-- Name: TABLE epicris; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE epicris IS 'epicris';


--
-- TOC entry 13237 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.oid IS 'oid';


--
-- TOC entry 13238 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.mdoc_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.mdoc_oid IS 'mdoc_oid';


--
-- TOC entry 13239 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.text IS 'text';


--
-- TOC entry 13240 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.type IS 'type';


--
-- TOC entry 13241 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.presctype IS 'Код типа назначения mir.presctype';


--
-- TOC entry 13242 (class 0 OID 0)
-- Dependencies: 505
-- Name: COLUMN epicris.visit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris.visit IS 'Код талона mir.visit';


--
-- TOC entry 506 (class 1259 OID 19461)
-- Dependencies: 14
-- Name: epicris_portal_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE epicris_portal_link (
    oid character(36) NOT NULL,
    portal_extract character(36) NOT NULL,
    epicris character(36) NOT NULL
);


ALTER TABLE mir.epicris_portal_link OWNER TO postgres;

--
-- TOC entry 13243 (class 0 OID 0)
-- Dependencies: 506
-- Name: TABLE epicris_portal_link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE epicris_portal_link IS 'epicris_portal_link';


--
-- TOC entry 13244 (class 0 OID 0)
-- Dependencies: 506
-- Name: COLUMN epicris_portal_link.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris_portal_link.oid IS 'oid';


--
-- TOC entry 13245 (class 0 OID 0)
-- Dependencies: 506
-- Name: COLUMN epicris_portal_link.portal_extract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris_portal_link.portal_extract IS 'portal_extract';


--
-- TOC entry 13246 (class 0 OID 0)
-- Dependencies: 506
-- Name: COLUMN epicris_portal_link.epicris; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris_portal_link.epicris IS 'epicris';


--
-- TOC entry 507 (class 1259 OID 19464)
-- Dependencies: 14
-- Name: epicris_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE epicris_type (
    oid character(36) NOT NULL,
    name character varying(255),
    ib_secitons character varying(36)
);


ALTER TABLE mir.epicris_type OWNER TO postgres;

--
-- TOC entry 13247 (class 0 OID 0)
-- Dependencies: 507
-- Name: TABLE epicris_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE epicris_type IS 'epicris_type';


--
-- TOC entry 13248 (class 0 OID 0)
-- Dependencies: 507
-- Name: COLUMN epicris_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris_type.oid IS 'oid';


--
-- TOC entry 13249 (class 0 OID 0)
-- Dependencies: 507
-- Name: COLUMN epicris_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN epicris_type.name IS 'name';


--
-- TOC entry 508 (class 1259 OID 19467)
-- Dependencies: 14
-- Name: equipment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    equipment_type character(36),
    equipment_name character varying(255),
    identifier character varying(255),
    equipment_model character(36),
    company_maker character(36),
    serial_number character varying(255),
    date_maker timestamp without time zone,
    lifetime integer,
    delivery character(36),
    equipment_ownership character(36),
    company_supplier character(36),
    date_purchase timestamp without time zone,
    inventory_number character varying(255),
    registration_mark character varying(255)
);


ALTER TABLE mir.equipment OWNER TO postgres;

--
-- TOC entry 13250 (class 0 OID 0)
-- Dependencies: 508
-- Name: TABLE equipment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment IS 'мед оборудованиетранспорт';


--
-- TOC entry 13251 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.oid IS 'oid';


--
-- TOC entry 13252 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.otdel IS 'подразделение';


--
-- TOC entry 13253 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.equipment_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.equipment_type IS 'тип оборудования';


--
-- TOC entry 13254 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.equipment_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.equipment_name IS 'наименование';


--
-- TOC entry 13255 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.identifier IS 'идентификатор';


--
-- TOC entry 13256 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.equipment_model; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.equipment_model IS 'модель';


--
-- TOC entry 13257 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.company_maker; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.company_maker IS 'производитель';


--
-- TOC entry 13258 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.serial_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.serial_number IS 'серийный номер';


--
-- TOC entry 13259 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.date_maker; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.date_maker IS 'дата выпуска';


--
-- TOC entry 13260 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.lifetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.lifetime IS 'срок эксплуатации (лет)';


--
-- TOC entry 13261 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.delivery; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.delivery IS 'поставка';


--
-- TOC entry 13262 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.equipment_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.equipment_ownership IS 'форма владения';


--
-- TOC entry 13263 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.company_supplier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.company_supplier IS 'поставщик';


--
-- TOC entry 13264 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.date_purchase; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.date_purchase IS 'дата приобретения';


--
-- TOC entry 13265 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.inventory_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.inventory_number IS 'инвентарный номер';


--
-- TOC entry 13266 (class 0 OID 0)
-- Dependencies: 508
-- Name: COLUMN equipment.registration_mark; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment.registration_mark IS 'регистрационный знак';


--
-- TOC entry 509 (class 1259 OID 19473)
-- Dependencies: 7048 7049 14
-- Name: equipment_delivery; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_delivery (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_equipment_delivery$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.equipment_delivery OWNER TO postgres;

--
-- TOC entry 13267 (class 0 OID 0)
-- Dependencies: 509
-- Name: TABLE equipment_delivery; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_delivery IS 'поставка';


--
-- TOC entry 13268 (class 0 OID 0)
-- Dependencies: 509
-- Name: COLUMN equipment_delivery.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_delivery.oid IS 'oid';


--
-- TOC entry 13269 (class 0 OID 0)
-- Dependencies: 509
-- Name: COLUMN equipment_delivery.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_delivery.name IS 'name';


--
-- TOC entry 13270 (class 0 OID 0)
-- Dependencies: 509
-- Name: COLUMN equipment_delivery.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_delivery.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13271 (class 0 OID 0)
-- Dependencies: 509
-- Name: COLUMN equipment_delivery.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_delivery.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13272 (class 0 OID 0)
-- Dependencies: 509
-- Name: COLUMN equipment_delivery.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_delivery.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 510 (class 1259 OID 19481)
-- Dependencies: 7050 14
-- Name: equipment_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    otdel character(36),
    equipment_type character(36),
    equipment_name character varying(255),
    identifier character varying(255),
    equipment_model character(36),
    company_maker character(36),
    serial_number character varying(255),
    date_maker timestamp without time zone,
    lifetime integer,
    delivery character(36),
    equipment_ownership character(36),
    company_supplier character(36),
    date_purchase timestamp without time zone,
    inventory_number character varying(255),
    registration_mark character varying(255)
);


ALTER TABLE mir.equipment_history OWNER TO postgres;

--
-- TOC entry 13273 (class 0 OID 0)
-- Dependencies: 510
-- Name: TABLE equipment_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_history IS 'мед оборудованиетранспорт';


--
-- TOC entry 13274 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.hid IS 'hid';


--
-- TOC entry 13275 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.h_date IS 'h_date';


--
-- TOC entry 13276 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.h_date_end IS 'h_date_end';


--
-- TOC entry 13277 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.sysdate IS 'sysdate';


--
-- TOC entry 13278 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.oid IS 'oid';


--
-- TOC entry 13279 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.otdel IS 'подразделение';


--
-- TOC entry 13280 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.equipment_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.equipment_type IS 'тип оборудования';


--
-- TOC entry 13281 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.equipment_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.equipment_name IS 'наименование';


--
-- TOC entry 13282 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.identifier IS 'идентификатор';


--
-- TOC entry 13283 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.equipment_model; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.equipment_model IS 'модель';


--
-- TOC entry 13284 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.company_maker; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.company_maker IS 'производитель';


--
-- TOC entry 13285 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.serial_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.serial_number IS 'серийный номер';


--
-- TOC entry 13286 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.date_maker; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.date_maker IS 'дата выпуска';


--
-- TOC entry 13287 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.lifetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.lifetime IS 'срок эксплуатации (лет)';


--
-- TOC entry 13288 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.delivery; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.delivery IS 'поставка';


--
-- TOC entry 13289 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.equipment_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.equipment_ownership IS 'форма владения';


--
-- TOC entry 13290 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.company_supplier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.company_supplier IS 'поставщик';


--
-- TOC entry 13291 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.date_purchase; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.date_purchase IS 'дата приобретения';


--
-- TOC entry 13292 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.inventory_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.inventory_number IS 'инвентарный номер';


--
-- TOC entry 13293 (class 0 OID 0)
-- Dependencies: 510
-- Name: COLUMN equipment_history.registration_mark; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_history.registration_mark IS 'регистрационный знак';


--
-- TOC entry 511 (class 1259 OID 19488)
-- Dependencies: 7051 7052 14
-- Name: equipment_model; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_model (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_equipment_model$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.equipment_model OWNER TO postgres;

--
-- TOC entry 13294 (class 0 OID 0)
-- Dependencies: 511
-- Name: TABLE equipment_model; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_model IS 'Модели транспорта/оборудования';


--
-- TOC entry 13295 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN equipment_model.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_model.oid IS 'oid';


--
-- TOC entry 13296 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN equipment_model.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_model.name IS 'name';


--
-- TOC entry 13297 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN equipment_model.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_model.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13298 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN equipment_model.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_model.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13299 (class 0 OID 0)
-- Dependencies: 511
-- Name: COLUMN equipment_model.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_model.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 512 (class 1259 OID 19496)
-- Dependencies: 14
-- Name: equipment_oper; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_oper (
    oid character(36) NOT NULL,
    equipment character(36) NOT NULL,
    equipment_oper character(36),
    date_oper timestamp without time zone
);


ALTER TABLE mir.equipment_oper OWNER TO postgres;

--
-- TOC entry 13300 (class 0 OID 0)
-- Dependencies: 512
-- Name: TABLE equipment_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_oper IS 'Операции с оборудованием';


--
-- TOC entry 13301 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN equipment_oper.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper.oid IS 'oid';


--
-- TOC entry 13302 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN equipment_oper.equipment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper.equipment IS 'equipment';


--
-- TOC entry 13303 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN equipment_oper.equipment_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper.equipment_oper IS 'equipment_oper';


--
-- TOC entry 13304 (class 0 OID 0)
-- Dependencies: 512
-- Name: COLUMN equipment_oper.date_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper.date_oper IS 'дата';


--
-- TOC entry 513 (class 1259 OID 19499)
-- Dependencies: 7053 7054 14
-- Name: equipment_oper_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_oper_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_equipment_oper_typ$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.equipment_oper_type OWNER TO postgres;

--
-- TOC entry 13305 (class 0 OID 0)
-- Dependencies: 513
-- Name: TABLE equipment_oper_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_oper_type IS 'Тип операции с оборудованием';


--
-- TOC entry 13306 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN equipment_oper_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper_type.oid IS 'oid';


--
-- TOC entry 13307 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN equipment_oper_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper_type.name IS 'name';


--
-- TOC entry 13308 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN equipment_oper_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13309 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN equipment_oper_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13310 (class 0 OID 0)
-- Dependencies: 513
-- Name: COLUMN equipment_oper_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_oper_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 514 (class 1259 OID 19507)
-- Dependencies: 7055 7056 14
-- Name: equipment_ownership; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_ownership (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_equipment_ownershi$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.equipment_ownership OWNER TO postgres;

--
-- TOC entry 13311 (class 0 OID 0)
-- Dependencies: 514
-- Name: TABLE equipment_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_ownership IS 'Формы владения транспортом/оборудованием';


--
-- TOC entry 13312 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN equipment_ownership.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_ownership.oid IS 'oid';


--
-- TOC entry 13313 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN equipment_ownership.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_ownership.name IS 'name';


--
-- TOC entry 13314 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN equipment_ownership.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_ownership.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13315 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN equipment_ownership.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_ownership.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13316 (class 0 OID 0)
-- Dependencies: 514
-- Name: COLUMN equipment_ownership.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_ownership.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 515 (class 1259 OID 19515)
-- Dependencies: 14
-- Name: equipment_price; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_price (
    oid character(36) NOT NULL,
    equipmen character(36) NOT NULL,
    date_evaluation timestamp without time zone,
    cost_depreciation numeric(15,2),
    cost_residual numeric(15,2),
    cost_actual numeric(15,2)
);


ALTER TABLE mir.equipment_price OWNER TO postgres;

--
-- TOC entry 13317 (class 0 OID 0)
-- Dependencies: 515
-- Name: TABLE equipment_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_price IS 'История оценки (стоимость) оборудования';


--
-- TOC entry 13318 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.oid IS 'oid';


--
-- TOC entry 13319 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.equipmen; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.equipmen IS 'equipmen';


--
-- TOC entry 13320 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.date_evaluation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.date_evaluation IS 'дата оценки';


--
-- TOC entry 13321 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.cost_depreciation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.cost_depreciation IS 'стоимость износа (амортизация)';


--
-- TOC entry 13322 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.cost_residual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.cost_residual IS 'остаточная стоимость';


--
-- TOC entry 13323 (class 0 OID 0)
-- Dependencies: 515
-- Name: COLUMN equipment_price.cost_actual; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_price.cost_actual IS 'фактическая стоимость';


--
-- TOC entry 516 (class 1259 OID 19518)
-- Dependencies: 7057 7058 7059 7060 14
-- Name: equipment_state; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_state (
    oid character(36) NOT NULL,
    equipmen character(36) NOT NULL,
    date_state timestamp without time zone,
    repair numeric(1,0) DEFAULT 0,
    write_off numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_equipment_state$repair" CHECK (((repair IS NULL) OR ((repair >= (0)::numeric) AND (repair <= (1)::numeric)))),
    CONSTRAINT "ck_equipment_state$write_off" CHECK (((write_off IS NULL) OR ((write_off >= (0)::numeric) AND (write_off <= (1)::numeric))))
);


ALTER TABLE mir.equipment_state OWNER TO postgres;

--
-- TOC entry 13324 (class 0 OID 0)
-- Dependencies: 516
-- Name: TABLE equipment_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_state IS 'Техническое состояние оборудования';


--
-- TOC entry 13325 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN equipment_state.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_state.oid IS 'oid';


--
-- TOC entry 13326 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN equipment_state.equipmen; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_state.equipmen IS 'equipmen';


--
-- TOC entry 13327 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN equipment_state.date_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_state.date_state IS 'дата оценки';


--
-- TOC entry 13328 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN equipment_state.repair; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_state.repair IS 'требует ремонта';


--
-- TOC entry 13329 (class 0 OID 0)
-- Dependencies: 516
-- Name: COLUMN equipment_state.write_off; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_state.write_off IS 'требует списания';


--
-- TOC entry 517 (class 1259 OID 19525)
-- Dependencies: 7061 7062 14
-- Name: equipment_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE equipment_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_equipment_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.equipment_type OWNER TO postgres;

--
-- TOC entry 13330 (class 0 OID 0)
-- Dependencies: 517
-- Name: TABLE equipment_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE equipment_type IS 'Типы оборудования/транспортных средств';


--
-- TOC entry 13331 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN equipment_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_type.oid IS 'oid';


--
-- TOC entry 13332 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN equipment_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_type.name IS 'name';


--
-- TOC entry 13333 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN equipment_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13334 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN equipment_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13335 (class 0 OID 0)
-- Dependencies: 517
-- Name: COLUMN equipment_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN equipment_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 518 (class 1259 OID 19533)
-- Dependencies: 7063 14
-- Name: errorclientmessages; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE errorclientmessages (
    oid character(36) NOT NULL,
    mess text,
    contact character varying(100),
    ip character varying(100),
    userasp character varying(100),
    formname character varying(100),
    num numeric,
    typemessage numeric,
    dtrecord date,
    people character(36),
    isanswer numeric(1,0),
    email character varying(100),
    rismessage numeric DEFAULT 0,
    lpu character(36),
    region character(36)
);


ALTER TABLE mir.errorclientmessages OWNER TO postgres;

--
-- TOC entry 13336 (class 0 OID 0)
-- Dependencies: 518
-- Name: TABLE errorclientmessages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE errorclientmessages IS 'ERRORCLIENTMESSAGES';


--
-- TOC entry 13337 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.oid IS 'oid';


--
-- TOC entry 13338 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.mess; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.mess IS 'mess';


--
-- TOC entry 13339 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.contact; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.contact IS 'contact';


--
-- TOC entry 13340 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.ip IS 'ip';


--
-- TOC entry 13341 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.userasp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.userasp IS 'userasp';


--
-- TOC entry 13342 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.formname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.formname IS 'formname';


--
-- TOC entry 13343 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.num IS 'num';


--
-- TOC entry 13344 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.typemessage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.typemessage IS 'typemessage';


--
-- TOC entry 13345 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.dtrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.dtrecord IS 'dtrecord';


--
-- TOC entry 13346 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.people IS 'people';


--
-- TOC entry 13347 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.isanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.isanswer IS 'isanswer';


--
-- TOC entry 13348 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.email IS 'email';


--
-- TOC entry 13349 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.rismessage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.rismessage IS 'rismessage';


--
-- TOC entry 13350 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.lpu IS 'lpu';


--
-- TOC entry 13351 (class 0 OID 0)
-- Dependencies: 518
-- Name: COLUMN errorclientmessages.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN errorclientmessages.region IS 'region';


--
-- TOC entry 519 (class 1259 OID 19540)
-- Dependencies: 7064 14
-- Name: etable; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE etable (
    oid character(36) NOT NULL,
    ecompany_id character(36),
    name character varying(255),
    CONSTRAINT ckc_name_etable CHECK (((name IS NULL) OR ((name)::text = upper((name)::text))))
);


ALTER TABLE mir.etable OWNER TO postgres;

--
-- TOC entry 13352 (class 0 OID 0)
-- Dependencies: 519
-- Name: TABLE etable; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE etable IS 'Таблицы, участвующие в обмене by A.Nakorjakov 17052011';


--
-- TOC entry 13353 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN etable.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etable.oid IS 'ID';


--
-- TOC entry 13354 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN etable.ecompany_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etable.ecompany_id IS 'ECOMPANY_ID';


--
-- TOC entry 13355 (class 0 OID 0)
-- Dependencies: 519
-- Name: COLUMN etable.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etable.name IS 'NAME';


--
-- TOC entry 520 (class 1259 OID 19544)
-- Dependencies: 7065 14
-- Name: etheir; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE etheir (
    oid character(36) NOT NULL,
    etable_id character(36),
    code character varying(255),
    value character varying(255),
    importdate date DEFAULT ('now'::text)::date
);


ALTER TABLE mir.etheir OWNER TO postgres;

--
-- TOC entry 13356 (class 0 OID 0)
-- Dependencies: 520
-- Name: TABLE etheir; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE etheir IS 'Данные сторонних компаний  by A.Nakorjakov 17052011';


--
-- TOC entry 13357 (class 0 OID 0)
-- Dependencies: 520
-- Name: COLUMN etheir.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etheir.oid IS 'ID';


--
-- TOC entry 13358 (class 0 OID 0)
-- Dependencies: 520
-- Name: COLUMN etheir.etable_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etheir.etable_id IS 'ETABLE_id';


--
-- TOC entry 13359 (class 0 OID 0)
-- Dependencies: 520
-- Name: COLUMN etheir.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etheir.code IS 'CODE';


--
-- TOC entry 13360 (class 0 OID 0)
-- Dependencies: 520
-- Name: COLUMN etheir.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etheir.value IS 'VALUE';


--
-- TOC entry 13361 (class 0 OID 0)
-- Dependencies: 520
-- Name: COLUMN etheir.importdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN etheir.importdate IS 'Дата импорта';


--
-- TOC entry 521 (class 1259 OID 19551)
-- Dependencies: 7066 14
-- Name: event; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE event (
    oid character(36) NOT NULL,
    resourceids text,
    recurrencepattern character(36),
    subject character varying(250),
    description text,
    starton date,
    endon date,
    allday numeric(1,0),
    location character varying(100),
    label numeric,
    status numeric,
    type numeric,
    recurrenceinfoxml text,
    optimisticlockfield numeric,
    gcrecord numeric,
    CONSTRAINT event_start_end CHECK ((starton <> endon))
);


ALTER TABLE mir.event OWNER TO postgres;

--
-- TOC entry 13362 (class 0 OID 0)
-- Dependencies: 521
-- Name: TABLE event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE event IS 'EVENT';


--
-- TOC entry 13363 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.oid IS 'oid';


--
-- TOC entry 13364 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.resourceids; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.resourceids IS 'resourceids';


--
-- TOC entry 13365 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.recurrencepattern; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.recurrencepattern IS 'recurrencepattern';


--
-- TOC entry 13366 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.subject; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.subject IS 'subject';


--
-- TOC entry 13367 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.description IS 'description';


--
-- TOC entry 13368 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.starton IS 'starton';


--
-- TOC entry 13369 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.endon IS 'endon';


--
-- TOC entry 13370 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.allday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.allday IS 'allday';


--
-- TOC entry 13371 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.location IS 'location';


--
-- TOC entry 13372 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.label; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.label IS 'label';


--
-- TOC entry 13373 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.status IS 'status';


--
-- TOC entry 13374 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.type IS 'type';


--
-- TOC entry 13375 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.recurrenceinfoxml; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.recurrenceinfoxml IS 'recurrenceinfoxml';


--
-- TOC entry 13376 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 13377 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN event.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN event.gcrecord IS 'gcrecord';


--
-- TOC entry 522 (class 1259 OID 19558)
-- Dependencies: 7067 7068 14
-- Name: expert_part_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_part_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_expert_part_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.expert_part_type OWNER TO postgres;

--
-- TOC entry 13378 (class 0 OID 0)
-- Dependencies: 522
-- Name: TABLE expert_part_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_part_type IS 'Таблица для хранения типа элемента';


--
-- TOC entry 13379 (class 0 OID 0)
-- Dependencies: 522
-- Name: COLUMN expert_part_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_part_type.oid IS 'oid';


--
-- TOC entry 13380 (class 0 OID 0)
-- Dependencies: 522
-- Name: COLUMN expert_part_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_part_type.name IS 'name';


--
-- TOC entry 13381 (class 0 OID 0)
-- Dependencies: 522
-- Name: COLUMN expert_part_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_part_type.show IS 'show';


--
-- TOC entry 523 (class 1259 OID 19563)
-- Dependencies: 14
-- Name: expert_raiting; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_raiting (
    oid character(36) NOT NULL,
    mdoc_id character(36) NOT NULL,
    ambticket_id character(36),
    sysuser character(36),
    sysdate date,
    expert character(36)
);


ALTER TABLE mir.expert_raiting OWNER TO postgres;

--
-- TOC entry 13382 (class 0 OID 0)
-- Dependencies: 523
-- Name: TABLE expert_raiting; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_raiting IS 'Хранение экспертных оценок для карт';


--
-- TOC entry 13383 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.oid IS 'oid';


--
-- TOC entry 13384 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.mdoc_id IS 'mdoc_id';


--
-- TOC entry 13385 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.ambticket_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.ambticket_id IS 'ambticket_id';


--
-- TOC entry 13386 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.sysuser IS 'sysuser';


--
-- TOC entry 13387 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.sysdate IS 'sysdate';


--
-- TOC entry 13388 (class 0 OID 0)
-- Dependencies: 523
-- Name: COLUMN expert_raiting.expert; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting.expert IS 'expert';


--
-- TOC entry 524 (class 1259 OID 19566)
-- Dependencies: 7069 7070 14
-- Name: expert_raiting_section_part; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_raiting_section_part (
    oid character(36) NOT NULL,
    expert_section_id character(36) NOT NULL,
    part_id character(36) NOT NULL,
    is_main_expert numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_table_605$is_main_expert" CHECK (((is_main_expert IS NULL) OR ((is_main_expert >= (0)::numeric) AND (is_main_expert <= (1)::numeric))))
);


ALTER TABLE mir.expert_raiting_section_part OWNER TO postgres;

--
-- TOC entry 13389 (class 0 OID 0)
-- Dependencies: 524
-- Name: TABLE expert_raiting_section_part; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_raiting_section_part IS 'Хранение выбранных чекбоксов для разделов какрты комплексной оценки';


--
-- TOC entry 13390 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN expert_raiting_section_part.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_section_part.oid IS 'oid';


--
-- TOC entry 13391 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN expert_raiting_section_part.expert_section_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_section_part.expert_section_id IS 'expert_section_id';


--
-- TOC entry 13392 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN expert_raiting_section_part.part_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_section_part.part_id IS 'part_id';


--
-- TOC entry 13393 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN expert_raiting_section_part.is_main_expert; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_section_part.is_main_expert IS 'Разграничение прав для 1 и 2 ступени';


--
-- TOC entry 525 (class 1259 OID 19571)
-- Dependencies: 14
-- Name: expert_raiting_sections; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_raiting_sections (
    oid character(36) NOT NULL,
    section_id character(36) NOT NULL,
    expert_raiting_id character(36) NOT NULL
);


ALTER TABLE mir.expert_raiting_sections OWNER TO postgres;

--
-- TOC entry 13394 (class 0 OID 0)
-- Dependencies: 525
-- Name: TABLE expert_raiting_sections; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_raiting_sections IS 'хранение оценок для секций карт экспертной оценки';


--
-- TOC entry 13395 (class 0 OID 0)
-- Dependencies: 525
-- Name: COLUMN expert_raiting_sections.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_sections.oid IS 'oid';


--
-- TOC entry 13396 (class 0 OID 0)
-- Dependencies: 525
-- Name: COLUMN expert_raiting_sections.section_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_sections.section_id IS 'section_id';


--
-- TOC entry 13397 (class 0 OID 0)
-- Dependencies: 525
-- Name: COLUMN expert_raiting_sections.expert_raiting_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_raiting_sections.expert_raiting_id IS 'expert_raiting_id';


--
-- TOC entry 526 (class 1259 OID 19574)
-- Dependencies: 14
-- Name: expert_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_result (
    oid character(36) NOT NULL,
    min_value numeric(15,2),
    max_value numeric(15,2),
    raiting character varying(255),
    description text,
    lpu character(36)
);


ALTER TABLE mir.expert_result OWNER TO postgres;

--
-- TOC entry 13398 (class 0 OID 0)
-- Dependencies: 526
-- Name: TABLE expert_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_result IS 'Таблица сопоставления качества лечения с оценкой';


--
-- TOC entry 13399 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.oid IS 'oid';


--
-- TOC entry 13400 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.min_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.min_value IS 'min_value';


--
-- TOC entry 13401 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.max_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.max_value IS 'max_value';


--
-- TOC entry 13402 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.raiting; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.raiting IS 'raiting';


--
-- TOC entry 13403 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.description IS 'description';


--
-- TOC entry 13404 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN expert_result.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_result.lpu IS 'лпу';


--
-- TOC entry 527 (class 1259 OID 19580)
-- Dependencies: 14
-- Name: expert_templations_parts; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_templations_parts (
    oid character(36) NOT NULL,
    expert_part_type character(36) NOT NULL,
    descriprions text,
    raiting numeric(15,2),
    expert_templations_sections character(36) NOT NULL
);


ALTER TABLE mir.expert_templations_parts OWNER TO postgres;

--
-- TOC entry 13405 (class 0 OID 0)
-- Dependencies: 527
-- Name: TABLE expert_templations_parts; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_templations_parts IS 'Таблица с элементами для выбора элементов оценки КЭК';


--
-- TOC entry 13406 (class 0 OID 0)
-- Dependencies: 527
-- Name: COLUMN expert_templations_parts.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_parts.oid IS 'oid';


--
-- TOC entry 13407 (class 0 OID 0)
-- Dependencies: 527
-- Name: COLUMN expert_templations_parts.expert_part_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_parts.expert_part_type IS 'expert_part_type';


--
-- TOC entry 13408 (class 0 OID 0)
-- Dependencies: 527
-- Name: COLUMN expert_templations_parts.descriprions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_parts.descriprions IS 'descriprions';


--
-- TOC entry 13409 (class 0 OID 0)
-- Dependencies: 527
-- Name: COLUMN expert_templations_parts.raiting; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_parts.raiting IS 'raiting';


--
-- TOC entry 13410 (class 0 OID 0)
-- Dependencies: 527
-- Name: COLUMN expert_templations_parts.expert_templations_sections; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_parts.expert_templations_sections IS 'expert_templations_sections';


--
-- TOC entry 528 (class 1259 OID 19586)
-- Dependencies: 7071 14
-- Name: expert_templations_sections; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE expert_templations_sections (
    oid character(36) NOT NULL,
    section_name character varying(255),
    lpu character(36) NOT NULL,
    description text,
    "order" integer DEFAULT 0
);


ALTER TABLE mir.expert_templations_sections OWNER TO postgres;

--
-- TOC entry 13411 (class 0 OID 0)
-- Dependencies: 528
-- Name: TABLE expert_templations_sections; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE expert_templations_sections IS 'Таблица, содержащая разделы КЭК, привязанные к ЛПУ';


--
-- TOC entry 13412 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN expert_templations_sections.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_sections.oid IS 'oid';


--
-- TOC entry 13413 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN expert_templations_sections.section_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_sections.section_name IS 'section_name';


--
-- TOC entry 13414 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN expert_templations_sections.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_sections.lpu IS 'lpu';


--
-- TOC entry 13415 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN expert_templations_sections.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN expert_templations_sections.description IS 'description';


--
-- TOC entry 529 (class 1259 OID 19593)
-- Dependencies: 14
-- Name: export_cod_ambticket; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE export_cod_ambticket (
    id character(36) NOT NULL,
    empo_id character(36),
    empc_id character(36),
    servplace_id character(36),
    goal_id character(36),
    travm_id character(36),
    idoc_id character(36),
    result_id character(36),
    empcancel_id character(36),
    cancel_date date,
    status_id character(36),
    refer_id character(36),
    travm_date date,
    dispstate_id character(36),
    subresult_id character(36),
    med_help_id character(36),
    refer_num character varying(255),
    refer_date date,
    otdel character(36),
    sysdate timestamp(0) without time zone
);


ALTER TABLE mir.export_cod_ambticket OWNER TO postgres;

--
-- TOC entry 13416 (class 0 OID 0)
-- Dependencies: 529
-- Name: TABLE export_cod_ambticket; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE export_cod_ambticket IS 'Табл. для временного хранения амб. талонов выгрузки ЦОД Author: by Shpielevoy D. I.';


--
-- TOC entry 13417 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.id IS 'SEQUENCE=[SQ_VISIT]';


--
-- TOC entry 13418 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.empo_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.empo_id IS 'Сотрудник, открывший талон';


--
-- TOC entry 13419 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.empc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.empc_id IS 'Сотрудник, закрывший талон';


--
-- TOC entry 13420 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.servplace_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.servplace_id IS 'Место обслуживания';


--
-- TOC entry 13421 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.goal_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.goal_id IS 'Цель посещения (VISIT_GOAL.ID)';


--
-- TOC entry 13422 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.travm_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.travm_id IS 'Вид травмы (TRAVM.ID)';


--
-- TOC entry 13423 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.idoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.idoc_id IS 'Полис (INSURANCE.ID)';


--
-- TOC entry 13424 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.result_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.result_id IS 'Результат лечения (TIСK_RES.ID)';


--
-- TOC entry 13425 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.empcancel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.empcancel_id IS 'Сотрудник, отенивший подпись';


--
-- TOC entry 13426 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.cancel_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.cancel_date IS 'Дата отмены подписи';


--
-- TOC entry 13427 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.status_id IS 'Статус талона';


--
-- TOC entry 13428 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.refer_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.refer_id IS 'Направившее учреждение COMPANY.ID';


--
-- TOC entry 13429 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.travm_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.travm_date IS 'travm_date';


--
-- TOC entry 13430 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.dispstate_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.dispstate_id IS 'Диспансерный учет (DISPSTATE.ID)';


--
-- TOC entry 13431 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.subresult_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.subresult_id IS 'Дополнительный результат лечения (TICK_SUBRES.ID)';


--
-- TOC entry 13432 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.med_help_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.med_help_id IS 'Стандарт медицинской помощи (STANDART_MED_HELP.ID)';


--
-- TOC entry 13433 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.refer_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.refer_num IS 'номер направления из направившего учреждения';


--
-- TOC entry 13434 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.refer_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.refer_date IS 'дата направления из направившего учреждения';


--
-- TOC entry 13435 (class 0 OID 0)
-- Dependencies: 529
-- Name: COLUMN export_cod_ambticket.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_ambticket.otdel IS 'otdel';


--
-- TOC entry 530 (class 1259 OID 19599)
-- Dependencies: 7072 14
-- Name: export_cod_dictionary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE export_cod_dictionary (
    oid character(36) NOT NULL,
    table_name character varying(50) NOT NULL,
    sql character varying(4000) NOT NULL,
    "order" integer,
    del numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.export_cod_dictionary OWNER TO postgres;

--
-- TOC entry 13436 (class 0 OID 0)
-- Dependencies: 530
-- Name: TABLE export_cod_dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE export_cod_dictionary IS 'Таблица для выгрузки справочников в ЦОД - by Shpielevoy D. I.';


--
-- TOC entry 13437 (class 0 OID 0)
-- Dependencies: 530
-- Name: COLUMN export_cod_dictionary.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_dictionary.oid IS 'oid';


--
-- TOC entry 13438 (class 0 OID 0)
-- Dependencies: 530
-- Name: COLUMN export_cod_dictionary.table_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_dictionary.table_name IS 'название таблицы для выгрузки';


--
-- TOC entry 13439 (class 0 OID 0)
-- Dependencies: 530
-- Name: COLUMN export_cod_dictionary.sql; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_dictionary.sql IS 'запрос для выгрузки';


--
-- TOC entry 13440 (class 0 OID 0)
-- Dependencies: 530
-- Name: COLUMN export_cod_dictionary."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_dictionary."order" IS 'порядок выгрузки';


--
-- TOC entry 13441 (class 0 OID 0)
-- Dependencies: 530
-- Name: COLUMN export_cod_dictionary.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_dictionary.del IS '1 - удалено, не выгружать';


--
-- TOC entry 531 (class 1259 OID 19606)
-- Dependencies: 7073 7074 7075 14
-- Name: export_cod_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE export_cod_people (
    oid character(36) NOT NULL,
    dtcreation date,
    id numeric,
    sex numeric DEFAULT 2,
    livein numeric,
    sstate numeric,
    pacient character(36),
    addressex1 character(36),
    addressex2 character(36),
    lpu character(36),
    email character varying(100),
    telhome character varying(100),
    telwork character varying(100),
    telsot1 character varying(100),
    telsot2 character varying(100),
    district character(36),
    company character(36),
    peopledoctype character(36),
    peopledocser character varying(100),
    peopledocnum character varying(100),
    dispuchet numeric(1,0),
    benefittype character(36),
    benefitdoctype character(36),
    benefitdocnum character varying(100),
    profession character(36),
    peoplepost character(36),
    dependant numeric(1,0),
    webmail character varying(100),
    webphone character varying(100),
    region character(36),
    category character(36),
    placework character varying(250),
    firstname character varying(100),
    lastname character varying(100),
    middlename character varying(100),
    birthday date,
    login character varying(100),
    waslogin numeric(1,0),
    password character varying(100),
    deathdate date,
    gasurf_oid character varying(255),
    peopledocgive character varying(255),
    peopledocgivedate date,
    phonecode character varying(100),
    karta character varying(255),
    importcode character varying(255) DEFAULT 0,
    sysdate timestamp(0) without time zone DEFAULT now(),
    description character varying(255),
    snils2 numeric(11,0),
    snils character varying(100),
    issuedate date,
    issuedby character varying(250)
);


ALTER TABLE mir.export_cod_people OWNER TO postgres;

--
-- TOC entry 13442 (class 0 OID 0)
-- Dependencies: 531
-- Name: TABLE export_cod_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE export_cod_people IS 'Табл. для временного хранения пиплов выгрузки ЦОД Author: by Shpielevoy D. I.';


--
-- TOC entry 13443 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.oid IS 'oid';


--
-- TOC entry 13444 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.dtcreation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.dtcreation IS 'dtcreation';


--
-- TOC entry 13445 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.id IS 'id';


--
-- TOC entry 13446 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.sex IS 'sex';


--
-- TOC entry 13447 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.livein; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.livein IS 'livein';


--
-- TOC entry 13448 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.sstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.sstate IS 'sstate';


--
-- TOC entry 13449 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.pacient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.pacient IS 'pacient';


--
-- TOC entry 13450 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.addressex1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.addressex1 IS 'юридический адрес, адрес прописки';


--
-- TOC entry 13451 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.addressex2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.addressex2 IS 'Физический адрес, адрес проживания';


--
-- TOC entry 13452 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.lpu IS 'lpu';


--
-- TOC entry 13453 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.email IS 'email';


--
-- TOC entry 13454 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.telhome; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.telhome IS 'telhome';


--
-- TOC entry 13455 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.telwork; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.telwork IS 'telwork';


--
-- TOC entry 13456 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.telsot1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.telsot1 IS 'telsot1';


--
-- TOC entry 13457 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.telsot2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.telsot2 IS 'telsot2';


--
-- TOC entry 13458 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.district IS 'district';


--
-- TOC entry 13459 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.company IS 'company';


--
-- TOC entry 13460 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peopledoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peopledoctype IS 'peopledoctype';


--
-- TOC entry 13461 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peopledocser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peopledocser IS 'peopledocser';


--
-- TOC entry 13462 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peopledocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peopledocnum IS 'peopledocnum';


--
-- TOC entry 13463 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.dispuchet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.dispuchet IS 'dispuchet';


--
-- TOC entry 13464 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.benefittype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.benefittype IS 'benefittype';


--
-- TOC entry 13465 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.benefitdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.benefitdoctype IS 'benefitdoctype';


--
-- TOC entry 13466 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.benefitdocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.benefitdocnum IS 'benefitdocnum';


--
-- TOC entry 13467 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.profession; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.profession IS 'profession';


--
-- TOC entry 13468 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peoplepost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peoplepost IS 'peoplepost';


--
-- TOC entry 13469 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.dependant; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.dependant IS 'dependant';


--
-- TOC entry 13470 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.webmail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.webmail IS 'webmail';


--
-- TOC entry 13471 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.webphone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.webphone IS 'webphone';


--
-- TOC entry 13472 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.region IS 'region';


--
-- TOC entry 13473 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.category IS 'category';


--
-- TOC entry 13474 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.placework; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.placework IS 'placework';


--
-- TOC entry 13475 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.firstname IS 'firstname';


--
-- TOC entry 13476 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.lastname IS 'lastname';


--
-- TOC entry 13477 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.middlename IS 'middlename';


--
-- TOC entry 13478 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.birthday IS 'birthday';


--
-- TOC entry 13479 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.login IS 'login';


--
-- TOC entry 13480 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.waslogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.waslogin IS 'waslogin';


--
-- TOC entry 13481 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.password IS 'password';


--
-- TOC entry 13482 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.deathdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.deathdate IS 'Дата смерти';


--
-- TOC entry 13483 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.gasurf_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.gasurf_oid IS 'идентификатор в ис минздавсоцразвития';


--
-- TOC entry 13484 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peopledocgive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peopledocgive IS 'кто выдал документ удостоверяющий личноcть';


--
-- TOC entry 13485 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.peopledocgivedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.peopledocgivedate IS 'когда выдали документ удостоверяющий личноcть';


--
-- TOC entry 13486 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.phonecode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.phonecode IS 'Телефонный код';


--
-- TOC entry 13487 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.karta; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.karta IS 'без описания, значит УДАЛИТЬ!';


--
-- TOC entry 13488 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.importcode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.importcode IS 'без описания, значит УДАЛИТЬ!';


--
-- TOC entry 13489 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.description IS 'Описание места работы';


--
-- TOC entry 13490 (class 0 OID 0)
-- Dependencies: 531
-- Name: COLUMN export_cod_people.snils2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_people.snils2 IS 'СНИЛС (12 цифр)';


--
-- TOC entry 532 (class 1259 OID 19615)
-- Dependencies: 7076 14
-- Name: export_cod_table; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE export_cod_table (
    oid character(36) NOT NULL,
    table_name character varying(50) NOT NULL,
    sql character varying(4000) NOT NULL,
    "order" integer,
    del numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.export_cod_table OWNER TO postgres;

--
-- TOC entry 13491 (class 0 OID 0)
-- Dependencies: 532
-- Name: TABLE export_cod_table; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE export_cod_table IS 'Таблица для выгрузки в ЦОД - by Shpielevoy D. I.';


--
-- TOC entry 13492 (class 0 OID 0)
-- Dependencies: 532
-- Name: COLUMN export_cod_table.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_table.oid IS 'oid';


--
-- TOC entry 13493 (class 0 OID 0)
-- Dependencies: 532
-- Name: COLUMN export_cod_table.table_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_table.table_name IS 'название таблицы для выгрузки';


--
-- TOC entry 13494 (class 0 OID 0)
-- Dependencies: 532
-- Name: COLUMN export_cod_table.sql; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_table.sql IS 'запрос для выгрузки';


--
-- TOC entry 13495 (class 0 OID 0)
-- Dependencies: 532
-- Name: COLUMN export_cod_table."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_table."order" IS 'порядок выгрузки';


--
-- TOC entry 13496 (class 0 OID 0)
-- Dependencies: 532
-- Name: COLUMN export_cod_table.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN export_cod_table.del IS '1 - удалено, не выгружать';


--
-- TOC entry 533 (class 1259 OID 19622)
-- Dependencies: 14
-- Name: extra_reason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE extra_reason (
    oid character(36) NOT NULL,
    name character varying(250),
    postid character varying(36)
);


ALTER TABLE mir.extra_reason OWNER TO postgres;

--
-- TOC entry 13497 (class 0 OID 0)
-- Dependencies: 533
-- Name: TABLE extra_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE extra_reason IS 'Справочник неотложных состояний';


--
-- TOC entry 13498 (class 0 OID 0)
-- Dependencies: 533
-- Name: COLUMN extra_reason.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN extra_reason.oid IS 'oid';


--
-- TOC entry 13499 (class 0 OID 0)
-- Dependencies: 533
-- Name: COLUMN extra_reason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN extra_reason.name IS 'name';


--
-- TOC entry 13500 (class 0 OID 0)
-- Dependencies: 533
-- Name: COLUMN extra_reason.postid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN extra_reason.postid IS 'postid';


--
-- TOC entry 534 (class 1259 OID 19625)
-- Dependencies: 14
-- Name: faillogon; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE faillogon (
    oid character(36) NOT NULL,
    actiondate date,
    login character varying(100),
    remoteaddr character varying(100)
);


ALTER TABLE mir.faillogon OWNER TO postgres;

--
-- TOC entry 13501 (class 0 OID 0)
-- Dependencies: 534
-- Name: TABLE faillogon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE faillogon IS 'Аудит попыток неудачного входа';


--
-- TOC entry 13502 (class 0 OID 0)
-- Dependencies: 534
-- Name: COLUMN faillogon.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN faillogon.oid IS 'oid';


--
-- TOC entry 13503 (class 0 OID 0)
-- Dependencies: 534
-- Name: COLUMN faillogon.actiondate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN faillogon.actiondate IS 'actiondate';


--
-- TOC entry 13504 (class 0 OID 0)
-- Dependencies: 534
-- Name: COLUMN faillogon.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN faillogon.login IS 'login';


--
-- TOC entry 13505 (class 0 OID 0)
-- Dependencies: 534
-- Name: COLUMN faillogon.remoteaddr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN faillogon.remoteaddr IS 'remoteaddr';


--
-- TOC entry 535 (class 1259 OID 19628)
-- Dependencies: 14
-- Name: family; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE family (
    oid character(36) NOT NULL,
    people character(36),
    relations integer,
    people_relation character(36)
);


ALTER TABLE mir.family OWNER TO postgres;

--
-- TOC entry 536 (class 1259 OID 19631)
-- Dependencies: 6764 14
-- Name: familyrelations; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW familyrelations AS
    ((((SELECT 'отец'::text AS name, 1 AS id UNION ALL SELECT 'мать'::text AS name, 2 AS id) UNION ALL SELECT 'сын'::text AS name, 3 AS id) UNION ALL SELECT 'дочь'::text AS name, 4 AS id) UNION ALL SELECT 'брат'::text AS name, 5 AS id) UNION ALL SELECT 'сестра'::text AS name, 6 AS id;


ALTER TABLE mir.familyrelations OWNER TO postgres;

--
-- TOC entry 13506 (class 0 OID 0)
-- Dependencies: 536
-- Name: VIEW familyrelations; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW familyrelations IS 'DEMAND_STATE';


--
-- TOC entry 537 (class 1259 OID 19635)
-- Dependencies: 7077 14
-- Name: favorite_insurcompany; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE favorite_insurcompany (
    oid character(36) NOT NULL,
    insurcompany character(36) NOT NULL,
    people character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.favorite_insurcompany OWNER TO postgres;

--
-- TOC entry 13507 (class 0 OID 0)
-- Dependencies: 537
-- Name: TABLE favorite_insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE favorite_insurcompany IS 'favorite_insurcompany';


--
-- TOC entry 13508 (class 0 OID 0)
-- Dependencies: 537
-- Name: COLUMN favorite_insurcompany.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_insurcompany.oid IS 'oid';


--
-- TOC entry 13509 (class 0 OID 0)
-- Dependencies: 537
-- Name: COLUMN favorite_insurcompany.insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_insurcompany.insurcompany IS 'insurcompany';


--
-- TOC entry 13510 (class 0 OID 0)
-- Dependencies: 537
-- Name: COLUMN favorite_insurcompany.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_insurcompany.people IS 'people';


--
-- TOC entry 13511 (class 0 OID 0)
-- Dependencies: 537
-- Name: COLUMN favorite_insurcompany.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_insurcompany.add_date IS 'add_date';


--
-- TOC entry 538 (class 1259 OID 19639)
-- Dependencies: 7078 14
-- Name: favorite_otdel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE favorite_otdel (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    otdel character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.favorite_otdel OWNER TO postgres;

--
-- TOC entry 13512 (class 0 OID 0)
-- Dependencies: 538
-- Name: TABLE favorite_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE favorite_otdel IS 'favorite_otdel';


--
-- TOC entry 13513 (class 0 OID 0)
-- Dependencies: 538
-- Name: COLUMN favorite_otdel.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_otdel.oid IS 'oid';


--
-- TOC entry 13514 (class 0 OID 0)
-- Dependencies: 538
-- Name: COLUMN favorite_otdel.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_otdel.people IS 'people';


--
-- TOC entry 13515 (class 0 OID 0)
-- Dependencies: 538
-- Name: COLUMN favorite_otdel.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_otdel.otdel IS 'otdel';


--
-- TOC entry 13516 (class 0 OID 0)
-- Dependencies: 538
-- Name: COLUMN favorite_otdel.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_otdel.add_date IS 'add_date';


--
-- TOC entry 539 (class 1259 OID 19643)
-- Dependencies: 7079 14
-- Name: favorite_sotr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE favorite_sotr (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    sotr character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.favorite_sotr OWNER TO postgres;

--
-- TOC entry 13517 (class 0 OID 0)
-- Dependencies: 539
-- Name: TABLE favorite_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE favorite_sotr IS 'favorite_sotr';


--
-- TOC entry 13518 (class 0 OID 0)
-- Dependencies: 539
-- Name: COLUMN favorite_sotr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_sotr.oid IS 'oid';


--
-- TOC entry 13519 (class 0 OID 0)
-- Dependencies: 539
-- Name: COLUMN favorite_sotr.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_sotr.people IS 'people';


--
-- TOC entry 13520 (class 0 OID 0)
-- Dependencies: 539
-- Name: COLUMN favorite_sotr.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_sotr.sotr IS 'sotr';


--
-- TOC entry 13521 (class 0 OID 0)
-- Dependencies: 539
-- Name: COLUMN favorite_sotr.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorite_sotr.add_date IS 'add_date';


--
-- TOC entry 540 (class 1259 OID 19647)
-- Dependencies: 14
-- Name: favorkind; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE favorkind (
    oid character(36) NOT NULL,
    recipe_lgot_type_id character(36),
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.favorkind OWNER TO postgres;

--
-- TOC entry 13522 (class 0 OID 0)
-- Dependencies: 540
-- Name: TABLE favorkind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE favorkind IS 'Категория льготности (ликвидатор последствий). Не классификатор Author: Nakorjakov';


--
-- TOC entry 13523 (class 0 OID 0)
-- Dependencies: 540
-- Name: COLUMN favorkind.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorkind.oid IS 'ID';


--
-- TOC entry 13524 (class 0 OID 0)
-- Dependencies: 540
-- Name: COLUMN favorkind.recipe_lgot_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorkind.recipe_lgot_type_id IS 'Тип льготы для рецепта recipe_lgot_type.id';


--
-- TOC entry 13525 (class 0 OID 0)
-- Dependencies: 540
-- Name: COLUMN favorkind.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorkind.name IS 'Название льготы';


--
-- TOC entry 13526 (class 0 OID 0)
-- Dependencies: 540
-- Name: COLUMN favorkind.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN favorkind.code IS 'код льготы';


--
-- TOC entry 541 (class 1259 OID 19653)
-- Dependencies: 14
-- Name: feature_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE feature_diag (
    oid character(36) NOT NULL,
    name character varying(4000) NOT NULL
);


ALTER TABLE mir.feature_diag OWNER TO postgres;

--
-- TOC entry 13527 (class 0 OID 0)
-- Dependencies: 541
-- Name: TABLE feature_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE feature_diag IS 'Справочник Характер заболевания';


--
-- TOC entry 13528 (class 0 OID 0)
-- Dependencies: 541
-- Name: COLUMN feature_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feature_diag.oid IS 'ID';


--
-- TOC entry 13529 (class 0 OID 0)
-- Dependencies: 541
-- Name: COLUMN feature_diag.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feature_diag.name IS 'НАЗВАНИЕ';


--
-- TOC entry 542 (class 1259 OID 19659)
-- Dependencies: 7080 14
-- Name: feedback; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE feedback (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    date timestamp without time zone DEFAULT now() NOT NULL,
    title character varying(255),
    body text
);


ALTER TABLE mir.feedback OWNER TO postgres;

--
-- TOC entry 13530 (class 0 OID 0)
-- Dependencies: 542
-- Name: TABLE feedback; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE feedback IS 'форма обратной связи (жалоб)';


--
-- TOC entry 13531 (class 0 OID 0)
-- Dependencies: 542
-- Name: COLUMN feedback.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feedback.oid IS 'oid';


--
-- TOC entry 13532 (class 0 OID 0)
-- Dependencies: 542
-- Name: COLUMN feedback.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feedback.people IS 'Пользователь оставивший отзыв';


--
-- TOC entry 13533 (class 0 OID 0)
-- Dependencies: 542
-- Name: COLUMN feedback.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feedback.date IS 'date';


--
-- TOC entry 13534 (class 0 OID 0)
-- Dependencies: 542
-- Name: COLUMN feedback.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feedback.title IS 'Заголовок';


--
-- TOC entry 13535 (class 0 OID 0)
-- Dependencies: 542
-- Name: COLUMN feedback.body; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN feedback.body IS 'Текст отзыва';


--
-- TOC entry 543 (class 1259 OID 19666)
-- Dependencies: 14
-- Name: fg_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE fg_people (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    people character(36),
    company character(36),
    district character(36)
);


ALTER TABLE mir.fg_people OWNER TO postgres;

--
-- TOC entry 13536 (class 0 OID 0)
-- Dependencies: 543
-- Name: COLUMN fg_people.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people.lpu IS 'mir.lpu';


--
-- TOC entry 13537 (class 0 OID 0)
-- Dependencies: 543
-- Name: COLUMN fg_people.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people.people IS 'mir.people';


--
-- TOC entry 13538 (class 0 OID 0)
-- Dependencies: 543
-- Name: COLUMN fg_people.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people.company IS 'mir.company';


--
-- TOC entry 13539 (class 0 OID 0)
-- Dependencies: 543
-- Name: COLUMN fg_people.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people.district IS 'mir.district';


--
-- TOC entry 544 (class 1259 OID 19669)
-- Dependencies: 14
-- Name: fg_people_period; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE fg_people_period (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    period character(36),
    last_date date,
    next_date date
);


ALTER TABLE mir.fg_people_period OWNER TO postgres;

--
-- TOC entry 13540 (class 0 OID 0)
-- Dependencies: 544
-- Name: COLUMN fg_people_period.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people_period.people IS 'mir.people';


--
-- TOC entry 13541 (class 0 OID 0)
-- Dependencies: 544
-- Name: COLUMN fg_people_period.period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people_period.period IS 'mir.fg_period';


--
-- TOC entry 13542 (class 0 OID 0)
-- Dependencies: 544
-- Name: COLUMN fg_people_period.last_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people_period.last_date IS 'Дата выполнения последней флюорографии';


--
-- TOC entry 13543 (class 0 OID 0)
-- Dependencies: 544
-- Name: COLUMN fg_people_period.next_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_people_period.next_date IS 'Планированная дата следующей флюорографии';


--
-- TOC entry 545 (class 1259 OID 19672)
-- Dependencies: 14
-- Name: fg_period; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE fg_period (
    oid character(36) NOT NULL,
    period_name character(36) NOT NULL,
    day_cnt integer NOT NULL
);


ALTER TABLE mir.fg_period OWNER TO postgres;

--
-- TOC entry 13544 (class 0 OID 0)
-- Dependencies: 545
-- Name: COLUMN fg_period.period_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_period.period_name IS 'Название';


--
-- TOC entry 13545 (class 0 OID 0)
-- Dependencies: 545
-- Name: COLUMN fg_period.day_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_period.day_cnt IS 'Количество дней, через которые нужно делать флюорографию';


--
-- TOC entry 546 (class 1259 OID 19675)
-- Dependencies: 14
-- Name: fg_presctype_change; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE fg_presctype_change (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    presctype character(36)
);


ALTER TABLE mir.fg_presctype_change OWNER TO postgres;

--
-- TOC entry 13546 (class 0 OID 0)
-- Dependencies: 546
-- Name: TABLE fg_presctype_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE fg_presctype_change IS 'Таблица назначений, которые можно зачесть вместо флюорографии';


--
-- TOC entry 13547 (class 0 OID 0)
-- Dependencies: 546
-- Name: COLUMN fg_presctype_change.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_presctype_change.oid IS 'oid';


--
-- TOC entry 13548 (class 0 OID 0)
-- Dependencies: 546
-- Name: COLUMN fg_presctype_change.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_presctype_change.lpu IS 'mir.lpu';


--
-- TOC entry 13549 (class 0 OID 0)
-- Dependencies: 546
-- Name: COLUMN fg_presctype_change.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN fg_presctype_change.presctype IS 'mir.presctype код назначений, который можно зачесть вместо флюорографии(например рентген)';


--
-- TOC entry 547 (class 1259 OID 19678)
-- Dependencies: 14
-- Name: firmnames; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE firmnames (
    id integer NOT NULL,
    name character varying(1024)
);


ALTER TABLE mir.firmnames OWNER TO postgres;

--
-- TOC entry 13550 (class 0 OID 0)
-- Dependencies: 547
-- Name: TABLE firmnames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE firmnames IS 'Названия фирм';


--
-- TOC entry 13551 (class 0 OID 0)
-- Dependencies: 547
-- Name: COLUMN firmnames.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firmnames.id IS 'Код названия - первичный ключ';


--
-- TOC entry 13552 (class 0 OID 0)
-- Dependencies: 547
-- Name: COLUMN firmnames.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firmnames.name IS 'Название фирмы';


--
-- TOC entry 548 (class 1259 OID 19684)
-- Dependencies: 14
-- Name: firms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE firms (
    id integer NOT NULL,
    fullname character varying(1024),
    nameid integer,
    countid integer,
    adrmain character varying(4096),
    adrrussia character varying(4096),
    adrussr character varying(4096)
);


ALTER TABLE mir.firms OWNER TO postgres;

--
-- TOC entry 13553 (class 0 OID 0)
-- Dependencies: 548
-- Name: TABLE firms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE firms IS 'Фирмы';


--
-- TOC entry 13554 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.id IS 'Код фирмы - первичный ключ';


--
-- TOC entry 13555 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.fullname IS 'Полное название (может отсутствовать';


--
-- TOC entry 13556 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.nameid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.nameid IS 'Ссылка на название - внешний ключ на таблицу "FIRMNAMES"';


--
-- TOC entry 13557 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.countid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.countid IS 'Ссылка на страну - внешний ключ на таблицу "COUNTRIES"';


--
-- TOC entry 13558 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.adrmain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.adrmain IS 'Адрес основного оффиса';


--
-- TOC entry 13559 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.adrrussia; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.adrrussia IS 'Адреса в России';


--
-- TOC entry 13560 (class 0 OID 0)
-- Dependencies: 548
-- Name: COLUMN firms.adrussr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN firms.adrussr IS 'Адреса в странах ближнего зарубежья';


--
-- TOC entry 549 (class 1259 OID 19690)
-- Dependencies: 7081 7082 14
-- Name: food_form; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE food_form (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_food_form$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.food_form OWNER TO postgres;

--
-- TOC entry 13561 (class 0 OID 0)
-- Dependencies: 549
-- Name: TABLE food_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE food_form IS 'Форма питания';


--
-- TOC entry 13562 (class 0 OID 0)
-- Dependencies: 549
-- Name: COLUMN food_form.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_form.oid IS 'oid';


--
-- TOC entry 13563 (class 0 OID 0)
-- Dependencies: 549
-- Name: COLUMN food_form.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_form.name IS 'name';


--
-- TOC entry 13564 (class 0 OID 0)
-- Dependencies: 549
-- Name: COLUMN food_form.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_form.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13565 (class 0 OID 0)
-- Dependencies: 549
-- Name: COLUMN food_form.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_form.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13566 (class 0 OID 0)
-- Dependencies: 549
-- Name: COLUMN food_form.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_form.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 550 (class 1259 OID 19698)
-- Dependencies: 7083 7084 14
-- Name: food_repetition; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE food_repetition (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_food_repetition$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.food_repetition OWNER TO postgres;

--
-- TOC entry 13567 (class 0 OID 0)
-- Dependencies: 550
-- Name: TABLE food_repetition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE food_repetition IS 'Кратность питания';


--
-- TOC entry 13568 (class 0 OID 0)
-- Dependencies: 550
-- Name: COLUMN food_repetition.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_repetition.oid IS 'oid';


--
-- TOC entry 13569 (class 0 OID 0)
-- Dependencies: 550
-- Name: COLUMN food_repetition.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_repetition.name IS 'name';


--
-- TOC entry 13570 (class 0 OID 0)
-- Dependencies: 550
-- Name: COLUMN food_repetition.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_repetition.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13571 (class 0 OID 0)
-- Dependencies: 550
-- Name: COLUMN food_repetition.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_repetition.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13572 (class 0 OID 0)
-- Dependencies: 550
-- Name: COLUMN food_repetition.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_repetition.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 551 (class 1259 OID 19706)
-- Dependencies: 7085 7086 14
-- Name: food_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE food_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_food_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.food_type OWNER TO postgres;

--
-- TOC entry 13573 (class 0 OID 0)
-- Dependencies: 551
-- Name: TABLE food_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE food_type IS 'Виды питания';


--
-- TOC entry 13574 (class 0 OID 0)
-- Dependencies: 551
-- Name: COLUMN food_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_type.oid IS 'oid';


--
-- TOC entry 13575 (class 0 OID 0)
-- Dependencies: 551
-- Name: COLUMN food_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_type.name IS 'name';


--
-- TOC entry 13576 (class 0 OID 0)
-- Dependencies: 551
-- Name: COLUMN food_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13577 (class 0 OID 0)
-- Dependencies: 551
-- Name: COLUMN food_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13578 (class 0 OID 0)
-- Dependencies: 551
-- Name: COLUMN food_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN food_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 552 (class 1259 OID 19714)
-- Dependencies: 14
-- Name: form6_calc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE form6_calc (
    oid character(36),
    lpu character(36),
    yr integer,
    mon integer,
    infection_id character(36),
    type_id character(36),
    num_1 integer,
    num_2 integer,
    num_3 integer,
    num_4 integer,
    num_5 integer,
    num_6 integer,
    num_7 integer,
    num_8 integer,
    num_9 integer,
    num_10 integer,
    num_11 integer,
    num_12 integer,
    num_13 integer,
    num_14 integer,
    num_15 integer,
    num_16 integer,
    num_17 integer,
    num_18 integer,
    num_19 integer,
    num_20 integer,
    num_21 integer,
    num_22 integer,
    num_23 integer,
    num_24 integer,
    num_25 integer,
    num_26 integer,
    num_27 integer,
    num_28 integer,
    num_29 integer,
    num_30 integer,
    num_31 integer,
    num_32 integer,
    date_on date,
    calc_date timestamp(0) without time zone
);


ALTER TABLE mir.form6_calc OWNER TO postgres;

--
-- TOC entry 13579 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.oid IS 'Код';


--
-- TOC entry 13580 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.lpu IS 'Компания';


--
-- TOC entry 13581 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.yr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.yr IS 'Год';


--
-- TOC entry 13582 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.mon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.mon IS 'Месяц';


--
-- TOC entry 13583 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.infection_id IS 'Код инфекции, null для состоит на учете';


--
-- TOC entry 13584 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.type_id IS 'Тип Кратности + отводы и др.';


--
-- TOC entry 13585 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.num_1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.num_1 IS 'Количество';


--
-- TOC entry 13586 (class 0 OID 0)
-- Dependencies: 552
-- Name: COLUMN form6_calc.calc_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_calc.calc_date IS 'Дата и время расчета данных';


--
-- TOC entry 553 (class 1259 OID 19717)
-- Dependencies: 14
-- Name: form6_cols; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE form6_cols (
    oid character(36),
    num integer,
    type_id character(36),
    name character varying(255),
    infection_id character(36)
);


ALTER TABLE mir.form6_cols OWNER TO postgres;

--
-- TOC entry 13587 (class 0 OID 0)
-- Dependencies: 553
-- Name: COLUMN form6_cols.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_cols.num IS 'Номер колонки';


--
-- TOC entry 13588 (class 0 OID 0)
-- Dependencies: 553
-- Name: COLUMN form6_cols.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_cols.type_id IS 'Тип колонки, form6_types (м.б. кратность и др. )';


--
-- TOC entry 13589 (class 0 OID 0)
-- Dependencies: 553
-- Name: COLUMN form6_cols.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_cols.name IS 'Название колонки';


--
-- TOC entry 13590 (class 0 OID 0)
-- Dependencies: 553
-- Name: COLUMN form6_cols.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_cols.infection_id IS 'Код инфекции';


--
-- TOC entry 554 (class 1259 OID 19720)
-- Dependencies: 7087 14
-- Name: form6_types; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE form6_types (
    oid character(36),
    name character varying(255),
    syn character varying(255),
    val character(36),
    last_month integer DEFAULT 0
);


ALTER TABLE mir.form6_types OWNER TO postgres;

--
-- TOC entry 13591 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN form6_types.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_types.oid IS 'Код типа колонки, не уникальный, т.к. может иметь несколько val на один oid';


--
-- TOC entry 13592 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN form6_types.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_types.name IS 'Название типа колонки отчета';


--
-- TOC entry 13593 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN form6_types.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_types.syn IS 'Синоним для типа колонки отчета';


--
-- TOC entry 13594 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN form6_types.val; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_types.val IS 'Значение поля type_id в form6_calc (значения из справочников)';


--
-- TOC entry 13595 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN form6_types.last_month; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form6_types.last_month IS 'Данные берутся за последний месяц в периоде';


--
-- TOC entry 555 (class 1259 OID 19728)
-- Dependencies: 14
-- Name: form_dynamic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE form_dynamic (
    oid character(36) NOT NULL,
    parent_id character(36),
    lpu character(36),
    mdoc_type_id character(36),
    form_name character varying(255),
    synonim character varying(255),
    num_order integer
);


ALTER TABLE mir.form_dynamic OWNER TO postgres;

--
-- TOC entry 13596 (class 0 OID 0)
-- Dependencies: 555
-- Name: TABLE form_dynamic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE form_dynamic IS 'Таблица настройки форм параметров smid для сохранения tib';


--
-- TOC entry 13597 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.oid IS 'Код';


--
-- TOC entry 13598 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.parent_id IS 'Родитель';


--
-- TOC entry 13599 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.lpu IS 'Код ЛПУ';


--
-- TOC entry 13600 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.mdoc_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.mdoc_type_id IS 'Код типа документа';


--
-- TOC entry 13601 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.form_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.form_name IS 'Название формы';


--
-- TOC entry 13602 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.synonim IS 'Синоним';


--
-- TOC entry 13603 (class 0 OID 0)
-- Dependencies: 555
-- Name: COLUMN form_dynamic.num_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_dynamic.num_order IS 'Нумерация колонок по порядку';


--
-- TOC entry 556 (class 1259 OID 19738)
-- Dependencies: 7088 14
-- Name: form_smid; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE form_smid (
    oid character(36) NOT NULL,
    form_id character(36),
    smid_id character(36),
    is_required integer DEFAULT 0 NOT NULL,
    num_order integer
);


ALTER TABLE mir.form_smid OWNER TO postgres;

--
-- TOC entry 13604 (class 0 OID 0)
-- Dependencies: 556
-- Name: TABLE form_smid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE form_smid IS 'Таблица настройки форм параметров smid для сохранения tib';


--
-- TOC entry 13605 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN form_smid.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_smid.oid IS 'Код';


--
-- TOC entry 13606 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN form_smid.form_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_smid.form_id IS 'Код формы';


--
-- TOC entry 13607 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN form_smid.smid_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_smid.smid_id IS 'код из справочника элементов';


--
-- TOC entry 13608 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN form_smid.is_required; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_smid.is_required IS 'Обязательное';


--
-- TOC entry 13609 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN form_smid.num_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN form_smid.num_order IS 'Нумерация колонок по порядку';


--
-- TOC entry 557 (class 1259 OID 19742)
-- Dependencies: 14
-- Name: forms_mkb10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE forms_mkb10 (
    form_name character varying(50),
    fc_mkb10 character varying(200),
    mkb10_oid character(36),
    fn_shablonnum character varying(50)
);


ALTER TABLE mir.forms_mkb10 OWNER TO postgres;

--
-- TOC entry 558 (class 1259 OID 19745)
-- Dependencies: 14
-- Name: functioning; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE functioning (
    oid character(36) NOT NULL,
    sanatorium character(36) NOT NULL,
    functioning_name character varying(255),
    functioning_date_begin date,
    functioning_date_end date
);


ALTER TABLE mir.functioning OWNER TO postgres;

--
-- TOC entry 13610 (class 0 OID 0)
-- Dependencies: 558
-- Name: TABLE functioning; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE functioning IS 'Периоды функционирования';


--
-- TOC entry 13611 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN functioning.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN functioning.oid IS 'oid';


--
-- TOC entry 13612 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN functioning.sanatorium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN functioning.sanatorium IS 'sanatorium';


--
-- TOC entry 13613 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN functioning.functioning_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN functioning.functioning_name IS 'наименование';


--
-- TOC entry 13614 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN functioning.functioning_date_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN functioning.functioning_date_begin IS 'дата начала';


--
-- TOC entry 13615 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN functioning.functioning_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN functioning.functioning_date_end IS 'дата окончания';


--
-- TOC entry 559 (class 1259 OID 19748)
-- Dependencies: 14
-- Name: group_risk; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE group_risk (
    oid character(36) NOT NULL,
    name character varying(50)
);


ALTER TABLE mir.group_risk OWNER TO postgres;

--
-- TOC entry 13616 (class 0 OID 0)
-- Dependencies: 559
-- Name: TABLE group_risk; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE group_risk IS 'Группа риска.  Author: Blazko';


--
-- TOC entry 13617 (class 0 OID 0)
-- Dependencies: 559
-- Name: COLUMN group_risk.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN group_risk.oid IS 'oid';


--
-- TOC entry 13618 (class 0 OID 0)
-- Dependencies: 559
-- Name: COLUMN group_risk.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN group_risk.name IS 'Название';


--
-- TOC entry 560 (class 1259 OID 19751)
-- Dependencies: 14
-- Name: hard_life; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE hard_life (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.hard_life OWNER TO postgres;

--
-- TOC entry 13619 (class 0 OID 0)
-- Dependencies: 560
-- Name: TABLE hard_life; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE hard_life IS 'Сложная жизненная ситуация. Author: Blazko';


--
-- TOC entry 13620 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN hard_life.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hard_life.oid IS 'oid';


--
-- TOC entry 13621 (class 0 OID 0)
-- Dependencies: 560
-- Name: COLUMN hard_life.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN hard_life.name IS 'Название';


--
-- TOC entry 561 (class 1259 OID 19754)
-- Dependencies: 14
-- Name: heal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    synonym character varying(255),
    code character varying(255),
    healtype character(36) NOT NULL
);


ALTER TABLE mir.heal OWNER TO postgres;

--
-- TOC entry 13622 (class 0 OID 0)
-- Dependencies: 561
-- Name: TABLE heal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal IS 'HEAL';


--
-- TOC entry 13623 (class 0 OID 0)
-- Dependencies: 561
-- Name: COLUMN heal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal.oid IS 'oid';


--
-- TOC entry 13624 (class 0 OID 0)
-- Dependencies: 561
-- Name: COLUMN heal.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal.name IS 'name';


--
-- TOC entry 13625 (class 0 OID 0)
-- Dependencies: 561
-- Name: COLUMN heal.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal.synonym IS 'synonym';


--
-- TOC entry 13626 (class 0 OID 0)
-- Dependencies: 561
-- Name: COLUMN heal.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal.code IS 'code';


--
-- TOC entry 13627 (class 0 OID 0)
-- Dependencies: 561
-- Name: COLUMN heal.healtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal.healtype IS 'healtype';


--
-- TOC entry 562 (class 1259 OID 19760)
-- Dependencies: 14
-- Name: heal_dogovor; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal_dogovor (
    oid character(36) NOT NULL,
    lpu character(36),
    text text
);


ALTER TABLE mir.heal_dogovor OWNER TO postgres;

--
-- TOC entry 13628 (class 0 OID 0)
-- Dependencies: 562
-- Name: TABLE heal_dogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal_dogovor IS 'Договор ЛПУ на оказание платных услуг';


--
-- TOC entry 13629 (class 0 OID 0)
-- Dependencies: 562
-- Name: COLUMN heal_dogovor.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_dogovor.oid IS 'id';


--
-- TOC entry 13630 (class 0 OID 0)
-- Dependencies: 562
-- Name: COLUMN heal_dogovor.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_dogovor.lpu IS 'ЛПУ';


--
-- TOC entry 13631 (class 0 OID 0)
-- Dependencies: 562
-- Name: COLUMN heal_dogovor.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_dogovor.text IS 'текст договора';


--
-- TOC entry 563 (class 1259 OID 19766)
-- Dependencies: 14
-- Name: heal_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal_lpu (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    heal character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.heal_lpu OWNER TO postgres;

--
-- TOC entry 13632 (class 0 OID 0)
-- Dependencies: 563
-- Name: TABLE heal_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal_lpu IS 'HEAL_LPU';


--
-- TOC entry 13633 (class 0 OID 0)
-- Dependencies: 563
-- Name: COLUMN heal_lpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu.oid IS 'oid';


--
-- TOC entry 13634 (class 0 OID 0)
-- Dependencies: 563
-- Name: COLUMN heal_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu.lpu IS 'lpu';


--
-- TOC entry 13635 (class 0 OID 0)
-- Dependencies: 563
-- Name: COLUMN heal_lpu.heal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu.heal IS 'heal';


--
-- TOC entry 13636 (class 0 OID 0)
-- Dependencies: 563
-- Name: COLUMN heal_lpu.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu.name IS 'name';


--
-- TOC entry 564 (class 1259 OID 19769)
-- Dependencies: 14
-- Name: heal_lpu_cost; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal_lpu_cost (
    oid character(36) NOT NULL,
    heal_lpu character(36),
    cost numeric,
    startdate date
);


ALTER TABLE mir.heal_lpu_cost OWNER TO postgres;

--
-- TOC entry 13637 (class 0 OID 0)
-- Dependencies: 564
-- Name: TABLE heal_lpu_cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal_lpu_cost IS 'HEAL_LPU_COST';


--
-- TOC entry 13638 (class 0 OID 0)
-- Dependencies: 564
-- Name: COLUMN heal_lpu_cost.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu_cost.oid IS 'oid';


--
-- TOC entry 13639 (class 0 OID 0)
-- Dependencies: 564
-- Name: COLUMN heal_lpu_cost.heal_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu_cost.heal_lpu IS 'heal_lpu';


--
-- TOC entry 13640 (class 0 OID 0)
-- Dependencies: 564
-- Name: COLUMN heal_lpu_cost.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu_cost.cost IS 'cost';


--
-- TOC entry 13641 (class 0 OID 0)
-- Dependencies: 564
-- Name: COLUMN heal_lpu_cost.startdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_lpu_cost.startdate IS 'startdate';


--
-- TOC entry 565 (class 1259 OID 19775)
-- Dependencies: 14
-- Name: heal_presc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal_presc (
    oid character(36) NOT NULL,
    oidheallpu character(36) NOT NULL,
    oidpresc character(36) NOT NULL
);


ALTER TABLE mir.heal_presc OWNER TO postgres;

--
-- TOC entry 13642 (class 0 OID 0)
-- Dependencies: 565
-- Name: TABLE heal_presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal_presc IS 'СПЕЦИАЛИСТЫ ОКАЗЫВАЮЩИЕ ПЛАТНЫЕ УСЛУГИ BY BELENKO';


--
-- TOC entry 13643 (class 0 OID 0)
-- Dependencies: 565
-- Name: COLUMN heal_presc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_presc.oid IS 'oid';


--
-- TOC entry 13644 (class 0 OID 0)
-- Dependencies: 565
-- Name: COLUMN heal_presc.oidheallpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_presc.oidheallpu IS 'ID ПЛАТНОЙ УСЛУГИ ЛПУ';


--
-- TOC entry 13645 (class 0 OID 0)
-- Dependencies: 565
-- Name: COLUMN heal_presc.oidpresc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_presc.oidpresc IS 'ID СПЕЦИАЛЬНОСТИ';


--
-- TOC entry 566 (class 1259 OID 19778)
-- Dependencies: 7089 7090 14
-- Name: heal_profile_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE heal_profile_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_heal_profile_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.heal_profile_type OWNER TO postgres;

--
-- TOC entry 13646 (class 0 OID 0)
-- Dependencies: 566
-- Name: TABLE heal_profile_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE heal_profile_type IS 'Тип (специализация) санатория';


--
-- TOC entry 13647 (class 0 OID 0)
-- Dependencies: 566
-- Name: COLUMN heal_profile_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_profile_type.oid IS 'oid';


--
-- TOC entry 13648 (class 0 OID 0)
-- Dependencies: 566
-- Name: COLUMN heal_profile_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_profile_type.name IS 'name';


--
-- TOC entry 13649 (class 0 OID 0)
-- Dependencies: 566
-- Name: COLUMN heal_profile_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_profile_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13650 (class 0 OID 0)
-- Dependencies: 566
-- Name: COLUMN heal_profile_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_profile_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13651 (class 0 OID 0)
-- Dependencies: 566
-- Name: COLUMN heal_profile_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN heal_profile_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 567 (class 1259 OID 19787)
-- Dependencies: 14
-- Name: healtype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE healtype (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    synonym character varying(255)
);


ALTER TABLE mir.healtype OWNER TO postgres;

--
-- TOC entry 13652 (class 0 OID 0)
-- Dependencies: 567
-- Name: TABLE healtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE healtype IS 'HEALTYPE';


--
-- TOC entry 13653 (class 0 OID 0)
-- Dependencies: 567
-- Name: COLUMN healtype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN healtype.oid IS 'oid';


--
-- TOC entry 13654 (class 0 OID 0)
-- Dependencies: 567
-- Name: COLUMN healtype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN healtype.name IS 'name';


--
-- TOC entry 13655 (class 0 OID 0)
-- Dependencies: 567
-- Name: COLUMN healtype.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN healtype.synonym IS 'synonym';


--
-- TOC entry 568 (class 1259 OID 19793)
-- Dependencies: 7091 14
-- Name: help_reference; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE help_reference (
    oid character(36),
    category_name character varying(255),
    reference_name character varying(255),
    reference_content character(1),
    update_date date DEFAULT ('now'::text)::date,
    filename character varying(255),
    region character(36)
);


ALTER TABLE mir.help_reference OWNER TO postgres;

--
-- TOC entry 13656 (class 0 OID 0)
-- Dependencies: 568
-- Name: TABLE help_reference; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE help_reference IS 'HELP_REFERENCE';


--
-- TOC entry 13657 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.oid IS 'oid';


--
-- TOC entry 13658 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.category_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.category_name IS 'category_name';


--
-- TOC entry 13659 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.reference_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.reference_name IS 'reference_name';


--
-- TOC entry 13660 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.reference_content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.reference_content IS 'reference_content';


--
-- TOC entry 13661 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.update_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.update_date IS 'update_date';


--
-- TOC entry 13662 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.filename IS 'filename';


--
-- TOC entry 13663 (class 0 OID 0)
-- Dependencies: 568
-- Name: COLUMN help_reference.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference.region IS 'region';


--
-- TOC entry 569 (class 1259 OID 19801)
-- Dependencies: 14
-- Name: help_reference_download_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE help_reference_download_log (
    sysuser character(36),
    download_date date,
    help_reference_oid character(36),
    lpu character(36)
);


ALTER TABLE mir.help_reference_download_log OWNER TO postgres;

--
-- TOC entry 13664 (class 0 OID 0)
-- Dependencies: 569
-- Name: TABLE help_reference_download_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE help_reference_download_log IS 'Логирование скачиваний руководств Author:  Spasskiy S.N.';


--
-- TOC entry 13665 (class 0 OID 0)
-- Dependencies: 569
-- Name: COLUMN help_reference_download_log.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference_download_log.sysuser IS 'Кто скачал';


--
-- TOC entry 13666 (class 0 OID 0)
-- Dependencies: 569
-- Name: COLUMN help_reference_download_log.download_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference_download_log.download_date IS 'Когда скачали';


--
-- TOC entry 13667 (class 0 OID 0)
-- Dependencies: 569
-- Name: COLUMN help_reference_download_log.help_reference_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference_download_log.help_reference_oid IS 'Что скачали';


--
-- TOC entry 13668 (class 0 OID 0)
-- Dependencies: 569
-- Name: COLUMN help_reference_download_log.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN help_reference_download_log.lpu IS 'ЛПУ сотрудника';


--
-- TOC entry 570 (class 1259 OID 19804)
-- Dependencies: 7092 7093 14
-- Name: history_mdoc_location; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE history_mdoc_location (
    oid character(36) NOT NULL,
    date_create timestamp without time zone DEFAULT now(),
    from_loc character(36) DEFAULT get_mdoc_location_registratura(),
    to_loc character(36),
    sysuser character(36),
    mdoc character(36) NOT NULL,
    otdel character(36),
    cabinet character(36),
    sotr character(36),
    comment character varying(1024)
);


ALTER TABLE mir.history_mdoc_location OWNER TO postgres;

--
-- TOC entry 13669 (class 0 OID 0)
-- Dependencies: 570
-- Name: TABLE history_mdoc_location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE history_mdoc_location IS 'История перемещения карты';


--
-- TOC entry 13670 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.oid IS 'oid';


--
-- TOC entry 13671 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.date_create IS 'date_create';


--
-- TOC entry 13672 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.from_loc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.from_loc IS 'Отку да перемистили  карту';


--
-- TOC entry 13673 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.to_loc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.to_loc IS 'Куда переместили карту';


--
-- TOC entry 13674 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.sysuser IS 'sysuser';


--
-- TOC entry 13675 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.otdel IS 'Отделение в которое перемещается карта';


--
-- TOC entry 13676 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.cabinet IS 'Кабинет в который перемещается карта';


--
-- TOC entry 13677 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.sotr IS 'Сотрудник переместивший карту';


--
-- TOC entry 13678 (class 0 OID 0)
-- Dependencies: 570
-- Name: COLUMN history_mdoc_location.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN history_mdoc_location.comment IS 'Комментарий';


--
-- TOC entry 571 (class 1259 OID 19812)
-- Dependencies: 14
-- Name: holidayreason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE holidayreason (
    id numeric NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.holidayreason OWNER TO postgres;

--
-- TOC entry 13679 (class 0 OID 0)
-- Dependencies: 571
-- Name: TABLE holidayreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE holidayreason IS 'Справочник причин нерабочего дня';


--
-- TOC entry 13680 (class 0 OID 0)
-- Dependencies: 571
-- Name: COLUMN holidayreason.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN holidayreason.id IS 'id';


--
-- TOC entry 13681 (class 0 OID 0)
-- Dependencies: 571
-- Name: COLUMN holidayreason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN holidayreason.name IS 'name';


--
-- TOC entry 572 (class 1259 OID 19818)
-- Dependencies: 14
-- Name: homevisit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE homevisit (
    oid character(36) NOT NULL,
    registdate date,
    dtcreation date,
    people character(36),
    sotr character(36),
    isdone numeric(1,0),
    isskhelp numeric(1,0),
    complaint character varying(255),
    visitdate date,
    lpu character(36),
    comment character varying(500),
    whoins character varying(100),
    statushv character varying(100),
    statusdatechange date,
    district character(36),
    recismade numeric,
    cancel_reason character varying(250),
    optimisticlockfield numeric,
    gcrecord numeric,
    address character varying(36),
    domofon character varying(100),
    cityobject character varying(250),
    result character varying(512)
);


ALTER TABLE mir.homevisit OWNER TO postgres;

--
-- TOC entry 13682 (class 0 OID 0)
-- Dependencies: 572
-- Name: TABLE homevisit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE homevisit IS 'Вызовы на дом';


--
-- TOC entry 13683 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.oid IS 'oid';


--
-- TOC entry 13684 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.registdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.registdate IS 'Дата регистрации вызова';


--
-- TOC entry 13685 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.dtcreation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.dtcreation IS 'Дата создания записи';


--
-- TOC entry 13686 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.people IS 'Личность, к которой регистрируют вызов';


--
-- TOC entry 13687 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.sotr IS 'Участковый врач';


--
-- TOC entry 13688 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.isdone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.isdone IS 'Завершен или нет';


--
-- TOC entry 13689 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.isskhelp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.isskhelp IS 'от скорой помощи';


--
-- TOC entry 13690 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.complaint; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.complaint IS 'Жалобы';


--
-- TOC entry 13691 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.visitdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.visitdate IS 'Дата планируемого посещения врача';


--
-- TOC entry 13692 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.lpu IS 'Поликлиника, определяется автоматом по адресу, щас тут хранится oid отдела';


--
-- TOC entry 13693 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.comment IS 'Примечания';


--
-- TOC entry 13694 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.whoins; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.whoins IS 'Кто вставил';


--
-- TOC entry 13695 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.statushv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.statushv IS 'Статус (Вызов подтвежден -1 , отменен -2 )';


--
-- TOC entry 13696 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.statusdatechange; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.statusdatechange IS 'Время изменения статуса';


--
-- TOC entry 13697 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.district IS 'Участок';


--
-- TOC entry 13698 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.recismade; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.recismade IS 'Место откуда поступил вызов(регистратура)';


--
-- TOC entry 13699 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.cancel_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.cancel_reason IS 'Причина отменыотказа вызова By Spasskiy S.N. 06.04.2011';


--
-- TOC entry 13700 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 13701 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.gcrecord IS 'gcrecord';


--
-- TOC entry 13702 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.address IS 'адрес вызова';


--
-- TOC entry 13703 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.domofon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.domofon IS 'номер домофона';


--
-- TOC entry 13704 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.cityobject; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.cityobject IS 'объект города';


--
-- TOC entry 13705 (class 0 OID 0)
-- Dependencies: 572
-- Name: COLUMN homevisit.result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit.result IS 'результата от врача на выезде';


--
-- TOC entry 573 (class 1259 OID 19824)
-- Dependencies: 14
-- Name: homevisit_er; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE homevisit_er (
    oid character(36) NOT NULL,
    spid numeric NOT NULL,
    kt character varying(10) NOT NULL,
    passperson character varying(30) NOT NULL,
    callsign numeric NOT NULL,
    shifttime date NOT NULL,
    phone character varying(10) NOT NULL,
    agetext character varying(19),
    age numeric
);


ALTER TABLE mir.homevisit_er OWNER TO postgres;

--
-- TOC entry 13706 (class 0 OID 0)
-- Dependencies: 573
-- Name: TABLE homevisit_er; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE homevisit_er IS 'Вызовы на дом (интеграция со скорой помощью)';


--
-- TOC entry 13707 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.oid IS 'OID в нашей системе';


--
-- TOC entry 13708 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.spid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.spid IS 'Идентификатор вызова в скорой';


--
-- TOC entry 13709 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.kt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.kt IS 'Номер карты вызова в скорой';


--
-- TOC entry 13710 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.passperson; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.passperson IS 'Диспетчер, передавший вызов';


--
-- TOC entry 13711 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.callsign; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.callsign IS 'Вид вызова:
1 – Первичный
2 – Повторный';


--
-- TOC entry 13712 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.shifttime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.shifttime IS 'Дата смены';


--
-- TOC entry 13713 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.phone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.phone IS 'Номер телефона вызывающего';


--
-- TOC entry 13714 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.agetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.agetext IS 'Возраст';


--
-- TOC entry 13715 (class 0 OID 0)
-- Dependencies: 573
-- Name: COLUMN homevisit_er.age; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN homevisit_er.age IS '1 - Лет
2 - Месяцев
3 - Недель
4 - Дней';


--
-- TOC entry 574 (class 1259 OID 19830)
-- Dependencies: 14
-- Name: ib_attachments; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ib_attachments (
    oid character varying(36) NOT NULL,
    name character varying(255),
    filename character varying(255) NOT NULL,
    type character varying(100) NOT NULL,
    uploadername character varying(302),
    date date,
    mdoc character varying(36),
    comment character varying(1000),
    presc character varying(36)
);
ALTER TABLE ONLY ib_attachments ALTER COLUMN filename SET STATISTICS 0;


ALTER TABLE mir.ib_attachments OWNER TO postgres;

--
-- TOC entry 13716 (class 0 OID 0)
-- Dependencies: 574
-- Name: TABLE ib_attachments; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE ib_attachments IS 'Файлы прикреплённые к картам пациентов.';


--
-- TOC entry 13717 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.name IS 'отображаемое имя';


--
-- TOC entry 13718 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.filename IS 'имя файла на диске';


--
-- TOC entry 13719 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.type IS 'MIME тип залитого файла';


--
-- TOC entry 13720 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.uploadername; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.uploadername IS 'Имя залившего файл';


--
-- TOC entry 13721 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.date IS 'дата заливки';


--
-- TOC entry 13722 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.mdoc IS 'mDoc карты';


--
-- TOC entry 13723 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN ib_attachments.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN ib_attachments.presc IS 'ID назначения в рамках котрого добавлен файл';


--
-- TOC entry 575 (class 1259 OID 19836)
-- Dependencies: 14
-- Name: ib_mkab; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ib_mkab (
    oid character(36) NOT NULL,
    sign_dt timestamp without time zone,
    mdoc_id character(36),
    visit_id character(36),
    presc_id character(36),
    presctype_name text,
    protocol_content text,
    runempfio character varying(500),
    "TypeName" character varying(500),
    presc_decsription_id character(36),
    diag_type_name character varying(500),
    diag_kind_name character varying(500),
    diag_text character varying(2000),
    presc_decsription character varying(2000),
    "TypeNumber" integer,
    prunbeg_dt timestamp(0) without time zone
);


ALTER TABLE mir.ib_mkab OWNER TO postgres;

--
-- TOC entry 576 (class 1259 OID 19842)
-- Dependencies: 14
-- Name: ib_sections; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ib_sections (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    syn_role character varying(255) NOT NULL,
    parent character(36),
    prescfolder character(36)
);


ALTER TABLE mir.ib_sections OWNER TO postgres;

--
-- TOC entry 577 (class 1259 OID 19848)
-- Dependencies: 7095 14
-- Name: icd10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE icd10 (
    id integer NOT NULL,
    parent_id integer,
    name character varying(500) NOT NULL,
    kod character varying(20) NOT NULL,
    symb character varying(2),
    kod1 character varying(20),
    des text,
    guid character(36) DEFAULT guid_generate() NOT NULL,
    parent_guid character(36)
);


ALTER TABLE mir.icd10 OWNER TO postgres;

--
-- TOC entry 13724 (class 0 OID 0)
-- Dependencies: 577
-- Name: TABLE icd10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE icd10 IS 'International Classification of Diseases (русская аббревиатура - МКБ) - версия 10
Author: Zhukov';


--
-- TOC entry 13725 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.id IS 'SEQUENCE=[SEQ_ICD10]';


--
-- TOC entry 13726 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.parent_id IS 'ссылка на родителя';


--
-- TOC entry 13727 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.name IS 'Название';


--
-- TOC entry 13728 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.kod; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.kod IS 'Код по классификаци МКБ может достигать длины 10';


--
-- TOC entry 13729 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.symb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.symb IS 'доп символ (*,+)';


--
-- TOC entry 13730 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.kod1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.kod1 IS 'Код без символа';


--
-- TOC entry 13731 (class 0 OID 0)
-- Dependencies: 577
-- Name: COLUMN icd10.des; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN icd10.des IS 'Описание';


--
-- TOC entry 578 (class 1259 OID 19855)
-- Dependencies: 577 14
-- Name: icd10_id_seq; Type: SEQUENCE; Schema: mir; Owner: postgres
--

CREATE SEQUENCE icd10_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mir.icd10_id_seq OWNER TO postgres;

--
-- TOC entry 13732 (class 0 OID 0)
-- Dependencies: 578
-- Name: icd10_id_seq; Type: SEQUENCE OWNED BY; Schema: mir; Owner: postgres
--

ALTER SEQUENCE icd10_id_seq OWNED BY icd10.id;


--
-- TOC entry 579 (class 1259 OID 19857)
-- Dependencies: 14
-- Name: ident_wind_str; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE ident_wind_str (
    iwid bigint NOT NULL,
    nomenid bigint NOT NULL
);


ALTER TABLE mir.ident_wind_str OWNER TO postgres;

--
-- TOC entry 580 (class 1259 OID 19860)
-- Dependencies: 14
-- Name: iicsynonyms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE iicsynonyms (
    id integer NOT NULL,
    name character varying(1024)
);


ALTER TABLE mir.iicsynonyms OWNER TO postgres;

--
-- TOC entry 13733 (class 0 OID 0)
-- Dependencies: 580
-- Name: TABLE iicsynonyms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE iicsynonyms IS 'Синонимы МКБ-групп (из таблицы CLSIIC)';


--
-- TOC entry 13734 (class 0 OID 0)
-- Dependencies: 580
-- Name: COLUMN iicsynonyms.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN iicsynonyms.id IS 'ВК на таблицу CLSIIC';


--
-- TOC entry 13735 (class 0 OID 0)
-- Dependencies: 580
-- Name: COLUMN iicsynonyms.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN iicsynonyms.name IS 'Синоним';


--
-- TOC entry 581 (class 1259 OID 19866)
-- Dependencies: 7096 14
-- Name: incomingsms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE incomingsms (
    oid character varying(36),
    dateload date DEFAULT ('now'::text)::date,
    datesend date,
    datedelivery date,
    textsms character varying(70),
    telnumber character varying(20),
    people character varying(36),
    basetext character varying(140)
);


ALTER TABLE mir.incomingsms OWNER TO postgres;

--
-- TOC entry 13736 (class 0 OID 0)
-- Dependencies: 581
-- Name: TABLE incomingsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE incomingsms IS 'INCOMINGSMS';


--
-- TOC entry 13737 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.oid IS 'oid';


--
-- TOC entry 13738 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.dateload; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.dateload IS 'dateload';


--
-- TOC entry 13739 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.datesend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.datesend IS 'datesend';


--
-- TOC entry 13740 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.datedelivery; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.datedelivery IS 'datedelivery';


--
-- TOC entry 13741 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.textsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.textsms IS 'textsms';


--
-- TOC entry 13742 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.telnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.telnumber IS 'telnumber';


--
-- TOC entry 13743 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.people IS 'people';


--
-- TOC entry 13744 (class 0 OID 0)
-- Dependencies: 581
-- Name: COLUMN incomingsms.basetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsms.basetext IS 'basetext';


--
-- TOC entry 582 (class 1259 OID 19870)
-- Dependencies: 7097 7098 14
-- Name: incomingsmsanswer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE incomingsmsanswer (
    oid character varying(36),
    oid_incomingsms character varying(36),
    people character varying(36),
    txtsms character varying(500),
    presctype character varying(36),
    sysuser character varying(36),
    startdate date,
    dtinsert date DEFAULT ('now'::text)::date,
    typeanswer character varying(36),
    locksms character varying(2) DEFAULT '0'::character varying
);


ALTER TABLE mir.incomingsmsanswer OWNER TO postgres;

--
-- TOC entry 13745 (class 0 OID 0)
-- Dependencies: 582
-- Name: TABLE incomingsmsanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE incomingsmsanswer IS 'INCOMINGSMSANSWER';


--
-- TOC entry 13746 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.oid IS 'oid';


--
-- TOC entry 13747 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.oid_incomingsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.oid_incomingsms IS 'oid_incomingsms';


--
-- TOC entry 13748 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.people IS 'people';


--
-- TOC entry 13749 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.txtsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.txtsms IS 'txtsms';


--
-- TOC entry 13750 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.presctype IS 'presctype';


--
-- TOC entry 13751 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.sysuser IS 'sysuser';


--
-- TOC entry 13752 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.startdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.startdate IS 'startdate';


--
-- TOC entry 13753 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.dtinsert; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.dtinsert IS 'dtinsert';


--
-- TOC entry 13754 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.typeanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.typeanswer IS 'typeanswer';


--
-- TOC entry 13755 (class 0 OID 0)
-- Dependencies: 582
-- Name: COLUMN incomingsmsanswer.locksms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswer.locksms IS 'locksms';


--
-- TOC entry 583 (class 1259 OID 19878)
-- Dependencies: 14
-- Name: incomingsmsanswerdetail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE incomingsmsanswerdetail (
    oid character varying(36),
    oid_smsanswer character varying(36),
    "position" numeric,
    text_position character varying(50),
    oid_variable character varying(36),
    sysuser character varying(36),
    presctype character varying(36)
);


ALTER TABLE mir.incomingsmsanswerdetail OWNER TO postgres;

--
-- TOC entry 13756 (class 0 OID 0)
-- Dependencies: 583
-- Name: TABLE incomingsmsanswerdetail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE incomingsmsanswerdetail IS 'INCOMINGSMSANSWERDETAIL';


--
-- TOC entry 13757 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.oid IS 'oid';


--
-- TOC entry 13758 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.oid_smsanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.oid_smsanswer IS 'oid_smsanswer';


--
-- TOC entry 13759 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail."position"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail."position" IS 'position';


--
-- TOC entry 13760 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.text_position; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.text_position IS 'text_position';


--
-- TOC entry 13761 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.oid_variable; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.oid_variable IS 'oid_variable';


--
-- TOC entry 13762 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.sysuser IS 'sysuser';


--
-- TOC entry 13763 (class 0 OID 0)
-- Dependencies: 583
-- Name: COLUMN incomingsmsanswerdetail.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsanswerdetail.presctype IS 'presctype';


--
-- TOC entry 584 (class 1259 OID 19884)
-- Dependencies: 14
-- Name: incomingsmsdetail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE incomingsmsdetail (
    oid character varying(36),
    oid_incomingsms character varying(36),
    "position" numeric,
    command character varying(5),
    value_command character varying(50)
);


ALTER TABLE mir.incomingsmsdetail OWNER TO postgres;

--
-- TOC entry 13764 (class 0 OID 0)
-- Dependencies: 584
-- Name: TABLE incomingsmsdetail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE incomingsmsdetail IS 'INCOMINGSMSDETAIL';


--
-- TOC entry 13765 (class 0 OID 0)
-- Dependencies: 584
-- Name: COLUMN incomingsmsdetail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsdetail.oid IS 'oid';


--
-- TOC entry 13766 (class 0 OID 0)
-- Dependencies: 584
-- Name: COLUMN incomingsmsdetail.oid_incomingsms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsdetail.oid_incomingsms IS 'oid_incomingsms';


--
-- TOC entry 13767 (class 0 OID 0)
-- Dependencies: 584
-- Name: COLUMN incomingsmsdetail."position"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsdetail."position" IS 'position';


--
-- TOC entry 13768 (class 0 OID 0)
-- Dependencies: 584
-- Name: COLUMN incomingsmsdetail.command; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsdetail.command IS 'command';


--
-- TOC entry 13769 (class 0 OID 0)
-- Dependencies: 584
-- Name: COLUMN incomingsmsdetail.value_command; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmsdetail.value_command IS 'value_command';


--
-- TOC entry 585 (class 1259 OID 19890)
-- Dependencies: 14
-- Name: incomingsmssettings; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE incomingsmssettings (
    oid character varying(36),
    lastdatecheck date
);


ALTER TABLE mir.incomingsmssettings OWNER TO postgres;

--
-- TOC entry 13770 (class 0 OID 0)
-- Dependencies: 585
-- Name: TABLE incomingsmssettings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE incomingsmssettings IS 'INCOMINGSMSSETTINGS';


--
-- TOC entry 13771 (class 0 OID 0)
-- Dependencies: 585
-- Name: COLUMN incomingsmssettings.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmssettings.oid IS 'oid';


--
-- TOC entry 13772 (class 0 OID 0)
-- Dependencies: 585
-- Name: COLUMN incomingsmssettings.lastdatecheck; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN incomingsmssettings.lastdatecheck IS 'lastdatecheck';


--
-- TOC entry 586 (class 1259 OID 19893)
-- Dependencies: 7099 7100 14
-- Name: infection; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infection (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    comment character varying(255),
    is_nation integer DEFAULT 0 NOT NULL,
    year_effect integer,
    def_vac_test_id character(36),
    del integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.infection OWNER TO postgres;

--
-- TOC entry 13773 (class 0 OID 0)
-- Dependencies: 586
-- Name: TABLE infection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infection IS 'Инфекции :: Справочник
Author: kulikovskiy';


--
-- TOC entry 13774 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.oid IS 'Код';


--
-- TOC entry 13775 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.name IS 'Название инфекции';


--
-- TOC entry 13776 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.comment IS 'Краткое описание';


--
-- TOC entry 13777 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.is_nation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.is_nation IS '0- Не входит в календарь прививок Россия, 1 - входит в календарь прививок';


--
-- TOC entry 13778 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.year_effect; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.year_effect IS 'Срок действия иммунитета в годах';


--
-- TOC entry 13779 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.def_vac_test_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.def_vac_test_id IS 'Проба по умолчанию VAC_TEST.ID';


--
-- TOC entry 13780 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN infection.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection.del IS 'Флаг удаления';


--
-- TOC entry 587 (class 1259 OID 19901)
-- Dependencies: 14
-- Name: infection_icd10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infection_icd10 (
    oid character(36) NOT NULL,
    infection_id character(36) NOT NULL,
    icd10_id character(36) NOT NULL
);


ALTER TABLE mir.infection_icd10 OWNER TO postgres;

--
-- TOC entry 13781 (class 0 OID 0)
-- Dependencies: 587
-- Name: TABLE infection_icd10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infection_icd10 IS 'Связь инфекций и кодов МКБ-10
Используется в перенесенных заболеваниях
Author: kulikovskiy';


--
-- TOC entry 13782 (class 0 OID 0)
-- Dependencies: 587
-- Name: COLUMN infection_icd10.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection_icd10.oid IS 'oid';


--
-- TOC entry 13783 (class 0 OID 0)
-- Dependencies: 587
-- Name: COLUMN infection_icd10.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection_icd10.infection_id IS 'Код инфекции INFECTION.FK_ID';


--
-- TOC entry 13784 (class 0 OID 0)
-- Dependencies: 587
-- Name: COLUMN infection_icd10.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infection_icd10.icd10_id IS 'Код МКБ-10 ICD10.ID';


--
-- TOC entry 588 (class 1259 OID 19904)
-- Dependencies: 14
-- Name: information_system; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE information_system (
    oid character(36) NOT NULL,
    system_name character varying(255),
    system_type character(36) NOT NULL,
    developer character varying(255)
);


ALTER TABLE mir.information_system OWNER TO postgres;

--
-- TOC entry 13785 (class 0 OID 0)
-- Dependencies: 588
-- Name: TABLE information_system; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE information_system IS 'информационные системы';


--
-- TOC entry 13786 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN information_system.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system.oid IS 'oid';


--
-- TOC entry 13787 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN information_system.system_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system.system_name IS 'наименование';


--
-- TOC entry 13788 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN information_system.system_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system.system_type IS 'тип';


--
-- TOC entry 13789 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN information_system.developer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system.developer IS 'разработчик';


--
-- TOC entry 589 (class 1259 OID 19910)
-- Dependencies: 14
-- Name: information_system_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE information_system_type (
    oid character(36) NOT NULL,
    name character varying(255),
    name2 character varying(255),
    status integer,
    show numeric(1,0)
);


ALTER TABLE mir.information_system_type OWNER TO postgres;

--
-- TOC entry 13790 (class 0 OID 0)
-- Dependencies: 589
-- Name: TABLE information_system_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE information_system_type IS 'Типы ИС';


--
-- TOC entry 13791 (class 0 OID 0)
-- Dependencies: 589
-- Name: COLUMN information_system_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system_type.oid IS 'oid';


--
-- TOC entry 13792 (class 0 OID 0)
-- Dependencies: 589
-- Name: COLUMN information_system_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN information_system_type.name IS 'name';


--
-- TOC entry 590 (class 1259 OID 19916)
-- Dependencies: 14
-- Name: infotype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infotype (
    oid character(36) NOT NULL,
    infotypename_en character varying(255) NOT NULL,
    infotypename_ru character varying(255) NOT NULL
);


ALTER TABLE mir.infotype OWNER TO postgres;

--
-- TOC entry 13793 (class 0 OID 0)
-- Dependencies: 590
-- Name: TABLE infotype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infotype IS 'типы контактов (тел, почта, сайт)';


--
-- TOC entry 13794 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN infotype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infotype.oid IS 'ИД тип контакта';


--
-- TOC entry 13795 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN infotype.infotypename_en; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infotype.infotypename_en IS 'имя контакта_EN';


--
-- TOC entry 13796 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN infotype.infotypename_ru; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infotype.infotypename_ru IS 'имя контакта_RU';


--
-- TOC entry 591 (class 1259 OID 19922)
-- Dependencies: 7101 14
-- Name: infovalue; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infovalue (
    oid character(36) NOT NULL,
    infotype character(36),
    infovalue character varying(255),
    company character(36),
    lpu character(36),
    otdel character(36),
    sotr character(36),
    people character(36),
    show_on_site numeric(1,0) DEFAULT 1 NOT NULL
);


ALTER TABLE mir.infovalue OWNER TO postgres;

--
-- TOC entry 13797 (class 0 OID 0)
-- Dependencies: 591
-- Name: TABLE infovalue; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infovalue IS 'перечень контактов';


--
-- TOC entry 13798 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.oid IS 'oid';


--
-- TOC entry 13799 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.infotype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.infotype IS 'ИД тип контакта';


--
-- TOC entry 13800 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.infovalue; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.infovalue IS 'Текстовая информация';


--
-- TOC entry 13801 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.company IS 'компания';


--
-- TOC entry 13802 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.lpu IS 'лпу';


--
-- TOC entry 13803 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.otdel IS 'отдел';


--
-- TOC entry 13804 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.sotr IS 'сотрудники';


--
-- TOC entry 13805 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.people IS 'люди';


--
-- TOC entry 13806 (class 0 OID 0)
-- Dependencies: 591
-- Name: COLUMN infovalue.show_on_site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infovalue.show_on_site IS 'отображать на сайте';


--
-- TOC entry 592 (class 1259 OID 19929)
-- Dependencies: 14
-- Name: infrastructure; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infrastructure (
    oid character(36) NOT NULL,
    plot character(36) NOT NULL,
    infrastructure_type character(36) NOT NULL,
    infrastructure_count integer
);


ALTER TABLE mir.infrastructure OWNER TO postgres;

--
-- TOC entry 13807 (class 0 OID 0)
-- Dependencies: 592
-- Name: TABLE infrastructure; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infrastructure IS 'объекты инфраструктуры';


--
-- TOC entry 13808 (class 0 OID 0)
-- Dependencies: 592
-- Name: COLUMN infrastructure.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure.oid IS 'oid';


--
-- TOC entry 13809 (class 0 OID 0)
-- Dependencies: 592
-- Name: COLUMN infrastructure.plot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure.plot IS 'земельный участок';


--
-- TOC entry 13810 (class 0 OID 0)
-- Dependencies: 592
-- Name: COLUMN infrastructure.infrastructure_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure.infrastructure_type IS 'наименование объектов';


--
-- TOC entry 13811 (class 0 OID 0)
-- Dependencies: 592
-- Name: COLUMN infrastructure.infrastructure_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure.infrastructure_count IS 'количество объектов';


--
-- TOC entry 593 (class 1259 OID 19932)
-- Dependencies: 7102 7103 14
-- Name: infrastructure_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE infrastructure_type (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_infrastructure_typ$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.infrastructure_type OWNER TO postgres;

--
-- TOC entry 13812 (class 0 OID 0)
-- Dependencies: 593
-- Name: TABLE infrastructure_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE infrastructure_type IS 'Тип объектов инфраструктуры';


--
-- TOC entry 13813 (class 0 OID 0)
-- Dependencies: 593
-- Name: COLUMN infrastructure_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure_type.oid IS 'oid';


--
-- TOC entry 13814 (class 0 OID 0)
-- Dependencies: 593
-- Name: COLUMN infrastructure_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure_type.name IS 'наименование';


--
-- TOC entry 13815 (class 0 OID 0)
-- Dependencies: 593
-- Name: COLUMN infrastructure_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13816 (class 0 OID 0)
-- Dependencies: 593
-- Name: COLUMN infrastructure_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13817 (class 0 OID 0)
-- Dependencies: 593
-- Name: COLUMN infrastructure_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN infrastructure_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 594 (class 1259 OID 19940)
-- Dependencies: 14
-- Name: insur_oms_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insur_oms_type (
    oid character(36) NOT NULL,
    name character varying(100),
    foms_code character varying(1)
);


ALTER TABLE mir.insur_oms_type OWNER TO postgres;

--
-- TOC entry 13818 (class 0 OID 0)
-- Dependencies: 594
-- Name: TABLE insur_oms_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insur_oms_type IS 'Типы документа ОМС.';


--
-- TOC entry 13819 (class 0 OID 0)
-- Dependencies: 594
-- Name: COLUMN insur_oms_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_oms_type.oid IS 'Primary-идентификатор';


--
-- TOC entry 13820 (class 0 OID 0)
-- Dependencies: 594
-- Name: COLUMN insur_oms_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_oms_type.name IS 'Название';


--
-- TOC entry 13821 (class 0 OID 0)
-- Dependencies: 594
-- Name: COLUMN insur_oms_type.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_oms_type.foms_code IS 'ФОМС-код';


--
-- TOC entry 595 (class 1259 OID 19943)
-- Dependencies: 7104 14
-- Name: insur_rating; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insur_rating (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    insurcompany character(36) NOT NULL,
    rating numeric,
    add_date timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.insur_rating OWNER TO postgres;

--
-- TOC entry 13822 (class 0 OID 0)
-- Dependencies: 595
-- Name: TABLE insur_rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insur_rating IS 'insur_rating';


--
-- TOC entry 13823 (class 0 OID 0)
-- Dependencies: 595
-- Name: COLUMN insur_rating.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_rating.oid IS 'oid';


--
-- TOC entry 13824 (class 0 OID 0)
-- Dependencies: 595
-- Name: COLUMN insur_rating.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_rating.people IS 'people';


--
-- TOC entry 13825 (class 0 OID 0)
-- Dependencies: 595
-- Name: COLUMN insur_rating.insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_rating.insurcompany IS 'insurcompany';


--
-- TOC entry 13826 (class 0 OID 0)
-- Dependencies: 595
-- Name: COLUMN insur_rating.rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_rating.rating IS 'rating';


--
-- TOC entry 13827 (class 0 OID 0)
-- Dependencies: 595
-- Name: COLUMN insur_rating.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_rating.add_date IS 'add_date';


--
-- TOC entry 596 (class 1259 OID 19950)
-- Dependencies: 7105 7106 7107 14
-- Name: insur_review; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insur_review (
    oid character(36) NOT NULL,
    insurcompany character(36) NOT NULL,
    people character(36) NOT NULL,
    text character varying,
    add_date timestamp without time zone DEFAULT now(),
    is_delete numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_insur_re$is_delete" CHECK (((is_delete IS NULL) OR ((is_delete >= (0)::numeric) AND (is_delete <= (1)::numeric))))
);


ALTER TABLE mir.insur_review OWNER TO postgres;

--
-- TOC entry 13828 (class 0 OID 0)
-- Dependencies: 596
-- Name: TABLE insur_review; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insur_review IS 'insur_review';


--
-- TOC entry 13829 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.oid IS 'oid';


--
-- TOC entry 13830 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.insurcompany IS 'insurcompany';


--
-- TOC entry 13831 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.people IS 'people';


--
-- TOC entry 13832 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.text IS 'text';


--
-- TOC entry 13833 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.add_date IS 'add_date';


--
-- TOC entry 13834 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN insur_review.is_delete; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_review.is_delete IS 'is_delete';


--
-- TOC entry 597 (class 1259 OID 19959)
-- Dependencies: 7108 7109 14
-- Name: insur_terr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insur_terr (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_insur_terr$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.insur_terr OWNER TO postgres;

--
-- TOC entry 13835 (class 0 OID 0)
-- Dependencies: 597
-- Name: TABLE insur_terr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insur_terr IS 'Территория страхования';


--
-- TOC entry 13836 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.oid IS 'oid';


--
-- TOC entry 13837 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.name IS 'name';


--
-- TOC entry 13838 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.foms_code IS 'Код ФОМС';


--
-- TOC entry 13839 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13840 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13841 (class 0 OID 0)
-- Dependencies: 597
-- Name: COLUMN insur_terr.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insur_terr.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 598 (class 1259 OID 19967)
-- Dependencies: 14
-- Name: insurance_state; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insurance_state (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code character varying(1)
);


ALTER TABLE mir.insurance_state OWNER TO postgres;

--
-- TOC entry 13842 (class 0 OID 0)
-- Dependencies: 598
-- Name: TABLE insurance_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insurance_state IS 'Статус полиса

1Действует
2Дубль
3Погашен
4Приостановлен
';


--
-- TOC entry 13843 (class 0 OID 0)
-- Dependencies: 598
-- Name: COLUMN insurance_state.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance_state.oid IS 'oid';


--
-- TOC entry 13844 (class 0 OID 0)
-- Dependencies: 598
-- Name: COLUMN insurance_state.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance_state.name IS 'name';


--
-- TOC entry 13845 (class 0 OID 0)
-- Dependencies: 598
-- Name: COLUMN insurance_state.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurance_state.foms_code IS 'код ФОМС';


--
-- TOC entry 599 (class 1259 OID 19970)
-- Dependencies: 14
-- Name: insurcompany; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insurcompany (
    oid character(36) NOT NULL,
    code character varying(100)
);


ALTER TABLE mir.insurcompany OWNER TO postgres;

--
-- TOC entry 13846 (class 0 OID 0)
-- Dependencies: 599
-- Name: TABLE insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insurcompany IS 'Справочник страховых компаний';


--
-- TOC entry 13847 (class 0 OID 0)
-- Dependencies: 599
-- Name: COLUMN insurcompany.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurcompany.oid IS 'oid';


--
-- TOC entry 13848 (class 0 OID 0)
-- Dependencies: 599
-- Name: COLUMN insurcompany.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurcompany.code IS 'code';


--
-- TOC entry 600 (class 1259 OID 19973)
-- Dependencies: 14
-- Name: insurprogram; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE insurprogram (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code character varying(10)
);


ALTER TABLE mir.insurprogram OWNER TO postgres;

--
-- TOC entry 13849 (class 0 OID 0)
-- Dependencies: 600
-- Name: TABLE insurprogram; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE insurprogram IS 'Страховые программы (названия)';


--
-- TOC entry 13850 (class 0 OID 0)
-- Dependencies: 600
-- Name: COLUMN insurprogram.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurprogram.oid IS 'id';


--
-- TOC entry 13851 (class 0 OID 0)
-- Dependencies: 600
-- Name: COLUMN insurprogram.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurprogram.name IS 'Название страховой программы';


--
-- TOC entry 13852 (class 0 OID 0)
-- Dependencies: 600
-- Name: COLUMN insurprogram.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN insurprogram.foms_code IS 'код фомс';


--
-- TOC entry 601 (class 1259 OID 19976)
-- Dependencies: 14
-- Name: intolerance; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE intolerance (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    tradenames_id integer NOT NULL,
    date date NOT NULL,
    prsc_id character(36) NOT NULL,
    sotr_id character(36) NOT NULL,
    side_effects text
);


ALTER TABLE mir.intolerance OWNER TO postgres;

--
-- TOC entry 13853 (class 0 OID 0)
-- Dependencies: 601
-- Name: TABLE intolerance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE intolerance IS 'Лекарственная непереносимасть';


--
-- TOC entry 13854 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.people_id IS 'Пациент';


--
-- TOC entry 13855 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.tradenames_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.tradenames_id IS 'Наименование препората из РЛС';


--
-- TOC entry 13856 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.date IS 'Дата установления';


--
-- TOC entry 13857 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.prsc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.prsc_id IS 'Специализация врача';


--
-- TOC entry 13858 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.sotr_id IS 'Сотрудник';


--
-- TOC entry 13859 (class 0 OID 0)
-- Dependencies: 601
-- Name: COLUMN intolerance.side_effects; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN intolerance.side_effects IS 'Побочные действия';


--
-- TOC entry 602 (class 1259 OID 19982)
-- Dependencies: 7110 7111 14
-- Name: invalid; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE invalid (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    invalidgroup character(36) NOT NULL,
    invalidtype character(36),
    invalidkind character(36),
    datebegin date NOT NULL,
    dateend date,
    infinity numeric(1,0) DEFAULT 0,
    justification_number character varying(255),
    justification_date date,
    datenext date,
    additional text,
    limitabilitytowork text,
    CONSTRAINT "ck_invalid$infinity" CHECK (((infinity IS NULL) OR ((infinity >= (0)::numeric) AND (infinity <= (1)::numeric))))
);


ALTER TABLE mir.invalid OWNER TO postgres;

--
-- TOC entry 13860 (class 0 OID 0)
-- Dependencies: 602
-- Name: TABLE invalid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE invalid IS 'Таблица Инвалидности добавил Огнев М.В,';


--
-- TOC entry 13861 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.oid IS 'oid';


--
-- TOC entry 13862 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.people IS 'пипл';


--
-- TOC entry 13863 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.invalidgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.invalidgroup IS 'группа инвалидности';


--
-- TOC entry 13864 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.invalidtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.invalidtype IS 'устновлена (впервые повторно)';


--
-- TOC entry 13865 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.invalidkind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.invalidkind IS 'причина инвалидности';


--
-- TOC entry 13866 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.datebegin IS 'дата установления';


--
-- TOC entry 13867 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.dateend IS 'установлена до';


--
-- TOC entry 13868 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.infinity; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.infinity IS 'признак бессрочности';


--
-- TOC entry 13869 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.justification_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.justification_number IS 'обоснование номер';


--
-- TOC entry 13870 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.justification_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.justification_date IS 'обоснование дата';


--
-- TOC entry 13871 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.datenext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.datenext IS 'дата очередного осведетельствования';


--
-- TOC entry 13872 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.additional; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.additional IS 'дополнительные заключения';


--
-- TOC entry 13873 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN invalid.limitabilitytowork; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalid.limitabilitytowork IS 'степень ограничения способности к трудовой деятельности';


--
-- TOC entry 603 (class 1259 OID 19990)
-- Dependencies: 7112 7113 14
-- Name: invalidgroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE invalidgroup (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code character(2),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_invalidgroup$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.invalidgroup OWNER TO postgres;

--
-- TOC entry 13874 (class 0 OID 0)
-- Dependencies: 603
-- Name: TABLE invalidgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE invalidgroup IS 'Группа инвалидности (Инвалид 1 группы, Инвалид 2 группы). Не классификатор Author: Nakorjakov';


--
-- TOC entry 13875 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.oid IS 'ИД';


--
-- TOC entry 13876 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.name IS 'Группа инвалидности';


--
-- TOC entry 13877 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.foms_code IS 'Код ФОМС';


--
-- TOC entry 13878 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13879 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13880 (class 0 OID 0)
-- Dependencies: 603
-- Name: COLUMN invalidgroup.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidgroup.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 604 (class 1259 OID 19998)
-- Dependencies: 14
-- Name: invalidkind; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE invalidkind (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer
);


ALTER TABLE mir.invalidkind OWNER TO postgres;

--
-- TOC entry 13881 (class 0 OID 0)
-- Dependencies: 604
-- Name: TABLE invalidkind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE invalidkind IS 'Вид инвалидности (установлена впервые в жизни, инвалид с детства). Не классификатор Author: Nakorjakov';


--
-- TOC entry 13882 (class 0 OID 0)
-- Dependencies: 604
-- Name: COLUMN invalidkind.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidkind.oid IS 'ИД';


--
-- TOC entry 13883 (class 0 OID 0)
-- Dependencies: 604
-- Name: COLUMN invalidkind.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidkind.name IS 'Вид инвалидности';


--
-- TOC entry 13884 (class 0 OID 0)
-- Dependencies: 604
-- Name: COLUMN invalidkind.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidkind.foms_code IS 'Код фомс';


--
-- TOC entry 605 (class 1259 OID 20001)
-- Dependencies: 14
-- Name: invalidtype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE invalidtype (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    "order" integer,
    parent character(36)
);


ALTER TABLE mir.invalidtype OWNER TO postgres;

--
-- TOC entry 13885 (class 0 OID 0)
-- Dependencies: 605
-- Name: COLUMN invalidtype.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidtype.foms_code IS 'Код фомс';


--
-- TOC entry 13886 (class 0 OID 0)
-- Dependencies: 605
-- Name: COLUMN invalidtype."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN invalidtype."order" IS 'Сортировка(для имитации вложенности)';


--
-- TOC entry 606 (class 1259 OID 20004)
-- Dependencies: 14
-- Name: kartaplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE kartaplace (
    oid character(36) NOT NULL
);


ALTER TABLE mir.kartaplace OWNER TO postgres;

--
-- TOC entry 13887 (class 0 OID 0)
-- Dependencies: 606
-- Name: TABLE kartaplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE kartaplace IS 'Справочник расположения мед.карты';


--
-- TOC entry 13888 (class 0 OID 0)
-- Dependencies: 606
-- Name: COLUMN kartaplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN kartaplace.oid IS 'oid';


--
-- TOC entry 607 (class 1259 OID 20007)
-- Dependencies: 6765 14
-- Name: kladr_view; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW kladr_view AS
    SELECT s.oid, s.fc_prefix, h.name, h.parent, s.fk_level FROM hcategory h, tkladrspr s WHERE ((s.oid = h.oid) AND (h.gcrecord IS NULL));


ALTER TABLE mir.kladr_view OWNER TO postgres;

--
-- TOC entry 13889 (class 0 OID 0)
-- Dependencies: 607
-- Name: VIEW kladr_view; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW kladr_view IS 'KLADR_VIEW';


--
-- TOC entry 608 (class 1259 OID 20011)
-- Dependencies: 7114 7115 14
-- Name: lab_probe_color; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lab_probe_color (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(255),
    show numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_lab_probe_color$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lab_probe_color OWNER TO postgres;

--
-- TOC entry 13890 (class 0 OID 0)
-- Dependencies: 608
-- Name: TABLE lab_probe_color; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lab_probe_color IS 'таблица с цветами для пробирок, используемых в лаборатории';


--
-- TOC entry 13891 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN lab_probe_color.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_probe_color.oid IS 'id цвета';


--
-- TOC entry 13892 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN lab_probe_color.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_probe_color.name IS 'название цвета';


--
-- TOC entry 13893 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN lab_probe_color.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_probe_color.code IS 'код цвета';


--
-- TOC entry 13894 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN lab_probe_color.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_probe_color.show IS 'Показывать? 1-да 0- нет';


--
-- TOC entry 609 (class 1259 OID 20019)
-- Dependencies: 7116 7117 14
-- Name: lab_run_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lab_run_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_lab_run_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lab_run_type OWNER TO postgres;

--
-- TOC entry 13895 (class 0 OID 0)
-- Dependencies: 609
-- Name: TABLE lab_run_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lab_run_type IS 'lab_run_type';


--
-- TOC entry 13896 (class 0 OID 0)
-- Dependencies: 609
-- Name: COLUMN lab_run_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_run_type.oid IS 'oid';


--
-- TOC entry 13897 (class 0 OID 0)
-- Dependencies: 609
-- Name: COLUMN lab_run_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_run_type.name IS 'name';


--
-- TOC entry 13898 (class 0 OID 0)
-- Dependencies: 609
-- Name: COLUMN lab_run_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_run_type.show IS 'show';


--
-- TOC entry 610 (class 1259 OID 20024)
-- Dependencies: 7118 7119 14
-- Name: lab_work_place; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lab_work_place (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_lab_work_place$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lab_work_place OWNER TO postgres;

--
-- TOC entry 13899 (class 0 OID 0)
-- Dependencies: 610
-- Name: TABLE lab_work_place; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lab_work_place IS 'lab_work_place';


--
-- TOC entry 13900 (class 0 OID 0)
-- Dependencies: 610
-- Name: COLUMN lab_work_place.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_work_place.oid IS 'oid';


--
-- TOC entry 13901 (class 0 OID 0)
-- Dependencies: 610
-- Name: COLUMN lab_work_place.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_work_place.name IS 'name';


--
-- TOC entry 13902 (class 0 OID 0)
-- Dependencies: 610
-- Name: COLUMN lab_work_place.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lab_work_place.show IS 'show';


--
-- TOC entry 611 (class 1259 OID 20029)
-- Dependencies: 7120 7121 7122 7123 7124 7125 7126 7127 7128 7129 7130 7131 7132 7133 7134 7135 7136 7137 7138 14
-- Name: laboratory_norm; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE laboratory_norm (
    oid character(36) NOT NULL,
    age_year_begin integer,
    age_month_begin integer,
    age_day_begin integer,
    age_year_end integer,
    age_month_end integer,
    age_day_end integer,
    min_men numeric(15,4),
    max_men numeric(15,4),
    min_woman numeric(15,4),
    max_woman numeric(15,4),
    direct_men numeric(15,4),
    direct_woman numeric(15,4),
    entry_men numeric(1,0) DEFAULT 0,
    entry_woman numeric(1,0) DEFAULT 0,
    entire_cycle numeric(1,0) DEFAULT 0,
    follicular_phase numeric(1,0) DEFAULT 0,
    midcycle numeric(1,0) DEFAULT 0,
    luteal_phase numeric(1,0) DEFAULT 0,
    trimestr_1 numeric(1,0) DEFAULT 0,
    trimestr_2 numeric(1,0) DEFAULT 0,
    trimestr_3 numeric(1,0) DEFAULT 0,
    presctypeparam character(36) NOT NULL,
    range_entry character varying(4) DEFAULT '0000'::character varying,
    CONSTRAINT "ck_laboratory_norm$entire_cycle" CHECK (((entire_cycle IS NULL) OR ((entire_cycle >= (0)::numeric) AND (entire_cycle <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$entry_men" CHECK (((entry_men IS NULL) OR ((entry_men >= (0)::numeric) AND (entry_men <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$entry_woman" CHECK (((entry_woman IS NULL) OR ((entry_woman >= (0)::numeric) AND (entry_woman <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$follicular_phase" CHECK (((follicular_phase IS NULL) OR ((follicular_phase >= (0)::numeric) AND (follicular_phase <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$luteal_phase" CHECK (((luteal_phase IS NULL) OR ((luteal_phase >= (0)::numeric) AND (luteal_phase <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$midcycle" CHECK (((midcycle IS NULL) OR ((midcycle >= (0)::numeric) AND (midcycle <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$trimestr_1" CHECK (((trimestr_1 IS NULL) OR ((trimestr_1 >= (0)::numeric) AND (trimestr_1 <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$trimestr_2" CHECK (((trimestr_2 IS NULL) OR ((trimestr_2 >= (0)::numeric) AND (trimestr_2 <= (1)::numeric)))),
    CONSTRAINT "ck_laboratory_norm$trimestr_3" CHECK (((trimestr_3 IS NULL) OR ((trimestr_3 >= (0)::numeric) AND (trimestr_3 <= (1)::numeric))))
);


ALTER TABLE mir.laboratory_norm OWNER TO postgres;

--
-- TOC entry 13903 (class 0 OID 0)
-- Dependencies: 611
-- Name: TABLE laboratory_norm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE laboratory_norm IS 'laboratory_norm';


--
-- TOC entry 13904 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.oid IS 'Идентификатор';


--
-- TOC entry 13905 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_year_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_year_begin IS 'Год начала диапазона';


--
-- TOC entry 13906 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_month_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_month_begin IS 'Месяц начала диапазона';


--
-- TOC entry 13907 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_day_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_day_begin IS 'День начала диапазона';


--
-- TOC entry 13908 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_year_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_year_end IS 'Год конца диапазона';


--
-- TOC entry 13909 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_month_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_month_end IS 'Месяц конца диапазона';


--
-- TOC entry 13910 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.age_day_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.age_day_end IS 'День конца диапазона';


--
-- TOC entry 13911 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.min_men; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.min_men IS 'Минимальное значение для мужчин';


--
-- TOC entry 13912 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.max_men; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.max_men IS 'Максимальное значение для мужчин';


--
-- TOC entry 13913 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.min_woman; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.min_woman IS 'Минимальное значение для женщин';


--
-- TOC entry 13914 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.max_woman; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.max_woman IS 'Максимальное значение для женщин';


--
-- TOC entry 13915 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.direct_men; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.direct_men IS 'Точное значение для мужчин';


--
-- TOC entry 13916 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.direct_woman; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.direct_woman IS 'Точное значение для женщин';


--
-- TOC entry 13917 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.entry_men; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.entry_men IS 'Вхождение в диапазон для мужчин';


--
-- TOC entry 13918 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.entry_woman; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.entry_woman IS 'Вхождение в диапазон для женщин';


--
-- TOC entry 13919 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.entire_cycle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.entire_cycle IS 'Первая фаза';


--
-- TOC entry 13920 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.follicular_phase; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.follicular_phase IS 'Вторая фаза';


--
-- TOC entry 13921 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.midcycle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.midcycle IS 'Третья фаза';


--
-- TOC entry 13922 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.luteal_phase; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.luteal_phase IS 'Четвёртая фаза';


--
-- TOC entry 13923 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.trimestr_1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.trimestr_1 IS 'Первый триместр';


--
-- TOC entry 13924 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.trimestr_2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.trimestr_2 IS 'Второй триместр';


--
-- TOC entry 13925 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.trimestr_3; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.trimestr_3 IS 'Третий триместр';


--
-- TOC entry 13926 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.presctypeparam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.presctypeparam IS 'Ссылка на тест';


--
-- TOC entry 13927 (class 0 OID 0)
-- Dependencies: 611
-- Name: COLUMN laboratory_norm.range_entry; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_norm.range_entry IS 'Признак строгого и не строгого неравенства. Первые две цифры - для мужчин, вторые - для женщин.';


--
-- TOC entry 612 (class 1259 OID 20051)
-- Dependencies: 7139 7140 14
-- Name: laboratory_param; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE laboratory_param (
    oid character(36) NOT NULL,
    color_id character(36),
    run_type_id character(36),
    work_place_id character(36),
    autocomplete numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_laboratory_param$autocomplete" CHECK (((autocomplete IS NULL) OR ((autocomplete >= (0)::numeric) AND (autocomplete <= (1)::numeric))))
);


ALTER TABLE mir.laboratory_param OWNER TO postgres;

--
-- TOC entry 13928 (class 0 OID 0)
-- Dependencies: 612
-- Name: TABLE laboratory_param; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE laboratory_param IS 'laboratory_param';


--
-- TOC entry 13929 (class 0 OID 0)
-- Dependencies: 612
-- Name: COLUMN laboratory_param.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_param.oid IS 'oid';


--
-- TOC entry 13930 (class 0 OID 0)
-- Dependencies: 612
-- Name: COLUMN laboratory_param.color_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_param.color_id IS 'color_id';


--
-- TOC entry 13931 (class 0 OID 0)
-- Dependencies: 612
-- Name: COLUMN laboratory_param.run_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_param.run_type_id IS 'run_type_id';


--
-- TOC entry 13932 (class 0 OID 0)
-- Dependencies: 612
-- Name: COLUMN laboratory_param.work_place_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_param.work_place_id IS 'work_place_id';


--
-- TOC entry 13933 (class 0 OID 0)
-- Dependencies: 612
-- Name: COLUMN laboratory_param.autocomplete; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN laboratory_param.autocomplete IS 'autocomplete';


--
-- TOC entry 613 (class 1259 OID 20056)
-- Dependencies: 14
-- Name: laboratory_reports; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE laboratory_reports (
    oid character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    synonim character varying(255)
);


ALTER TABLE mir.laboratory_reports OWNER TO postgres;

--
-- TOC entry 614 (class 1259 OID 20059)
-- Dependencies: 14
-- Name: lastonlinedatetime; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lastonlinedatetime (
    oid character(36) NOT NULL,
    lastonlinedatetime timestamp(0) without time zone
);


ALTER TABLE mir.lastonlinedatetime OWNER TO postgres;

--
-- TOC entry 13934 (class 0 OID 0)
-- Dependencies: 614
-- Name: TABLE lastonlinedatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lastonlinedatetime IS 'Add Ognev M.V.
Модернизация электронной очереди';


--
-- TOC entry 13935 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN lastonlinedatetime.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lastonlinedatetime.oid IS 'oid';


--
-- TOC entry 13936 (class 0 OID 0)
-- Dependencies: 614
-- Name: COLUMN lastonlinedatetime.lastonlinedatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lastonlinedatetime.lastonlinedatetime IS 'lastonlinedatetime';


--
-- TOC entry 615 (class 1259 OID 20062)
-- Dependencies: 14
-- Name: latinnames; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE latinnames (
    oid character(36) NOT NULL,
    id integer,
    name character varying(1024)
);


ALTER TABLE mir.latinnames OWNER TO postgres;

--
-- TOC entry 13937 (class 0 OID 0)
-- Dependencies: 615
-- Name: TABLE latinnames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE latinnames IS 'Латинские названия препаратов';


--
-- TOC entry 13938 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN latinnames.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN latinnames.oid IS 'oid';


--
-- TOC entry 13939 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN latinnames.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN latinnames.id IS 'Код названия - первичный ключ';


--
-- TOC entry 13940 (class 0 OID 0)
-- Dependencies: 615
-- Name: COLUMN latinnames.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN latinnames.name IS 'Латинское название препарата';


--
-- TOC entry 616 (class 1259 OID 20068)
-- Dependencies: 7141 7142 14
-- Name: level_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE level_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    parent character(36),
    id integer,
    CONSTRAINT "ck_level_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.level_type OWNER TO postgres;

--
-- TOC entry 13941 (class 0 OID 0)
-- Dependencies: 616
-- Name: TABLE level_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE level_type IS 'уровень лпу';


--
-- TOC entry 13942 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.oid IS 'oid';


--
-- TOC entry 13943 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.name IS 'name';


--
-- TOC entry 13944 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13945 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13946 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 13947 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.parent IS 'parent';


--
-- TOC entry 13948 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN level_type.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN level_type.id IS 'Идентификатор сторонний';


--
-- TOC entry 617 (class 1259 OID 20076)
-- Dependencies: 14
-- Name: lgota; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lgota (
    oid character(36) NOT NULL,
    name character varying(255),
    synonym character varying(255)
);


ALTER TABLE mir.lgota OWNER TO postgres;

--
-- TOC entry 13949 (class 0 OID 0)
-- Dependencies: 617
-- Name: TABLE lgota; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lgota IS 'Справочник льгот';


--
-- TOC entry 13950 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN lgota.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lgota.oid IS 'oid';


--
-- TOC entry 13951 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN lgota.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lgota.name IS 'name';


--
-- TOC entry 13952 (class 0 OID 0)
-- Dependencies: 617
-- Name: COLUMN lgota.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lgota.synonym IS 'synonym';


--
-- TOC entry 618 (class 1259 OID 20082)
-- Dependencies: 14
-- Name: licence; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    company character(36) NOT NULL,
    licence_series character varying(255) NOT NULL,
    licence_number character varying(255) NOT NULL,
    licence_registration character varying(255) NOT NULL,
    licence_activity character(36) NOT NULL
);


ALTER TABLE mir.licence OWNER TO postgres;

--
-- TOC entry 13953 (class 0 OID 0)
-- Dependencies: 618
-- Name: TABLE licence; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence IS 'лицензии';


--
-- TOC entry 13954 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.oid IS 'oid';


--
-- TOC entry 13955 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.lpu IS 'lpu';


--
-- TOC entry 13956 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.company IS 'лицензирующая организация';


--
-- TOC entry 13957 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.licence_series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.licence_series IS 'серия';


--
-- TOC entry 13958 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.licence_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.licence_number IS 'номер';


--
-- TOC entry 13959 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.licence_registration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.licence_registration IS 'регистрационный №';


--
-- TOC entry 13960 (class 0 OID 0)
-- Dependencies: 618
-- Name: COLUMN licence.licence_activity; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence.licence_activity IS 'column_7';


--
-- TOC entry 619 (class 1259 OID 20088)
-- Dependencies: 7143 7144 14
-- Name: licence_activity_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence_activity_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_licence_activity_t$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.licence_activity_type OWNER TO postgres;

--
-- TOC entry 13961 (class 0 OID 0)
-- Dependencies: 619
-- Name: TABLE licence_activity_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence_activity_type IS 'Типы деятельности лицензии';


--
-- TOC entry 13962 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN licence_activity_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_activity_type.oid IS 'oid';


--
-- TOC entry 13963 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN licence_activity_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_activity_type.name IS 'name';


--
-- TOC entry 13964 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN licence_activity_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_activity_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13965 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN licence_activity_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_activity_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13966 (class 0 OID 0)
-- Dependencies: 619
-- Name: COLUMN licence_activity_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_activity_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 620 (class 1259 OID 20096)
-- Dependencies: 7145 14
-- Name: licence_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    lpu character(36),
    company character(36),
    licence_series character varying(255),
    licence_number character varying(255),
    licence_registration character varying(255),
    licence_activity character(36)
);


ALTER TABLE mir.licence_history OWNER TO postgres;

--
-- TOC entry 13967 (class 0 OID 0)
-- Dependencies: 620
-- Name: TABLE licence_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence_history IS 'лицензии';


--
-- TOC entry 13968 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.hid IS 'hid';


--
-- TOC entry 13969 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.h_date IS 'h_date';


--
-- TOC entry 13970 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.h_date_end IS 'h_date_end';


--
-- TOC entry 13971 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.sysdate IS 'sysdate';


--
-- TOC entry 13972 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.oid IS 'oid';


--
-- TOC entry 13973 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.lpu IS 'lpu';


--
-- TOC entry 13974 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.company IS 'лицензирующая организация';


--
-- TOC entry 13975 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.licence_series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.licence_series IS 'серия';


--
-- TOC entry 13976 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.licence_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.licence_number IS 'номер';


--
-- TOC entry 13977 (class 0 OID 0)
-- Dependencies: 620
-- Name: COLUMN licence_history.licence_registration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_history.licence_registration IS 'регистрационный №';


--
-- TOC entry 621 (class 1259 OID 20103)
-- Dependencies: 14
-- Name: licence_oper; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence_oper (
    oid character(36) NOT NULL,
    licence character(36) NOT NULL,
    licence_oper_type character(36),
    date_oper date
);


ALTER TABLE mir.licence_oper OWNER TO postgres;

--
-- TOC entry 13978 (class 0 OID 0)
-- Dependencies: 621
-- Name: TABLE licence_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence_oper IS 'Операции с лицензией';


--
-- TOC entry 13979 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN licence_oper.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper.oid IS 'oid';


--
-- TOC entry 13980 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN licence_oper.licence; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper.licence IS 'licence';


--
-- TOC entry 13981 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN licence_oper.licence_oper_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper.licence_oper_type IS 'licence_oper_type';


--
-- TOC entry 13982 (class 0 OID 0)
-- Dependencies: 621
-- Name: COLUMN licence_oper.date_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper.date_oper IS 'дата';


--
-- TOC entry 622 (class 1259 OID 20106)
-- Dependencies: 7146 7147 14
-- Name: licence_oper_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence_oper_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_licence_oper_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.licence_oper_type OWNER TO postgres;

--
-- TOC entry 13983 (class 0 OID 0)
-- Dependencies: 622
-- Name: TABLE licence_oper_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence_oper_type IS 'Тип Операции с лицензией';


--
-- TOC entry 13984 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN licence_oper_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper_type.oid IS 'oid';


--
-- TOC entry 13985 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN licence_oper_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper_type.name IS 'name';


--
-- TOC entry 13986 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN licence_oper_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 13987 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN licence_oper_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 13988 (class 0 OID 0)
-- Dependencies: 622
-- Name: COLUMN licence_oper_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_oper_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 623 (class 1259 OID 20114)
-- Dependencies: 14
-- Name: licence_service; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE licence_service (
    services character(36) NOT NULL,
    licence character(36) NOT NULL
);


ALTER TABLE mir.licence_service OWNER TO postgres;

--
-- TOC entry 13989 (class 0 OID 0)
-- Dependencies: 623
-- Name: TABLE licence_service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE licence_service IS 'список услуг по лицензии';


--
-- TOC entry 13990 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN licence_service.services; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_service.services IS 'services';


--
-- TOC entry 13991 (class 0 OID 0)
-- Dependencies: 623
-- Name: COLUMN licence_service.licence; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN licence_service.licence IS 'licence';


--
-- TOC entry 624 (class 1259 OID 20117)
-- Dependencies: 7148 14
-- Name: linetype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE linetype (
    oid character(36) NOT NULL,
    name character varying(255),
    processduration integer,
    notarriveduration integer,
    name2 character varying(255),
    show numeric(1,0),
    status integer,
    shortname character varying(255),
    "OrderRec" integer DEFAULT 1,
    max_work_time time(0) without time zone,
    processduration2 integer,
    notarriveduration2 integer,
    max_work_time2 time(0) without time zone
);


ALTER TABLE mir.linetype OWNER TO postgres;

--
-- TOC entry 13992 (class 0 OID 0)
-- Dependencies: 624
-- Name: TABLE linetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE linetype IS 'типы очереди';


--
-- TOC entry 13993 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN linetype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN linetype.oid IS 'oid';


--
-- TOC entry 13994 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN linetype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN linetype.name IS 'name';


--
-- TOC entry 13995 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN linetype.processduration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN linetype.processduration IS 'длительность обработки в секундах';


--
-- TOC entry 13996 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN linetype.notarriveduration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN linetype.notarriveduration IS 'длительность неявки в секундах';


--
-- TOC entry 13997 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN linetype.max_work_time; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN linetype.max_work_time IS 'Верхняя граница рабочего времени';


--
-- TOC entry 625 (class 1259 OID 20124)
-- Dependencies: 14
-- Name: live_count; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE live_count (
    presctype character(36) NOT NULL,
    otdel character(36) NOT NULL,
    count_people numeric NOT NULL
);


ALTER TABLE mir.live_count OWNER TO postgres;

--
-- TOC entry 13998 (class 0 OID 0)
-- Dependencies: 625
-- Name: TABLE live_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE live_count IS 'live_count';


--
-- TOC entry 13999 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN live_count.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN live_count.presctype IS 'presctype';


--
-- TOC entry 14000 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN live_count.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN live_count.otdel IS 'otdel';


--
-- TOC entry 14001 (class 0 OID 0)
-- Dependencies: 625
-- Name: COLUMN live_count.count_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN live_count.count_people IS 'count_people';


--
-- TOC entry 626 (class 1259 OID 20130)
-- Dependencies: 7149 14
-- Name: liveplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE liveplace (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer
);


ALTER TABLE mir.liveplace OWNER TO postgres;

--
-- TOC entry 14002 (class 0 OID 0)
-- Dependencies: 626
-- Name: TABLE liveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE liveplace IS 'Житель село/город. Не классификатор Author: Nakorjakov';


--
-- TOC entry 14003 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN liveplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN liveplace.oid IS 'ИД';


--
-- TOC entry 14004 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN liveplace.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN liveplace.name IS 'Житель село/город';


--
-- TOC entry 14005 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN liveplace.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN liveplace.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14006 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN liveplace.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN liveplace.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14007 (class 0 OID 0)
-- Dependencies: 626
-- Name: COLUMN liveplace.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN liveplace.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 627 (class 1259 OID 20137)
-- Dependencies: 14
-- Name: loadsysuser; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE loadsysuser (
    oid character varying(36),
    oid_listfiles character varying(36),
    fam character varying(200),
    im character varying(200),
    otch character varying(200),
    borndt date,
    otdel character varying(200),
    spec character varying(200),
    status_load character varying(36),
    oid_sysuser character varying(36),
    md5 character varying(100),
    oid_otdel character varying(36),
    oid_spec character varying(36)
);


ALTER TABLE mir.loadsysuser OWNER TO postgres;

--
-- TOC entry 14008 (class 0 OID 0)
-- Dependencies: 627
-- Name: TABLE loadsysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE loadsysuser IS 'LOADSYSUSER';


--
-- TOC entry 14009 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.oid IS 'oid';


--
-- TOC entry 14010 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.oid_listfiles; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.oid_listfiles IS 'oid_listfiles';


--
-- TOC entry 14011 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.fam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.fam IS 'fam';


--
-- TOC entry 14012 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.im; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.im IS 'im';


--
-- TOC entry 14013 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.otch; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.otch IS 'otch';


--
-- TOC entry 14014 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.borndt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.borndt IS 'borndt';


--
-- TOC entry 14015 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.otdel IS 'otdel';


--
-- TOC entry 14016 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.spec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.spec IS 'spec';


--
-- TOC entry 14017 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.status_load; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.status_load IS 'status_load';


--
-- TOC entry 14018 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.oid_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.oid_sysuser IS 'oid_sysuser';


--
-- TOC entry 14019 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.md5; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.md5 IS 'md5';


--
-- TOC entry 14020 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.oid_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.oid_otdel IS 'oid_otdel';


--
-- TOC entry 14021 (class 0 OID 0)
-- Dependencies: 627
-- Name: COLUMN loadsysuser.oid_spec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser.oid_spec IS 'oid_spec';


--
-- TOC entry 628 (class 1259 OID 20143)
-- Dependencies: 14
-- Name: loadsysuser_listfiles; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE loadsysuser_listfiles (
    oid character varying(36),
    dt date,
    filename character varying(500),
    username character varying(36),
    lpu character varying(36),
    status numeric,
    firstload date,
    lastload date
);


ALTER TABLE mir.loadsysuser_listfiles OWNER TO postgres;

--
-- TOC entry 14022 (class 0 OID 0)
-- Dependencies: 628
-- Name: TABLE loadsysuser_listfiles; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE loadsysuser_listfiles IS 'LOADSYSUSER_LISTFILES';


--
-- TOC entry 14023 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.oid IS 'oid';


--
-- TOC entry 14024 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.dt IS 'dt';


--
-- TOC entry 14025 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.filename IS 'filename';


--
-- TOC entry 14026 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.username; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.username IS 'username';


--
-- TOC entry 14027 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.lpu IS 'lpu';


--
-- TOC entry 14028 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.status IS 'status';


--
-- TOC entry 14029 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.firstload; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.firstload IS 'firstload';


--
-- TOC entry 14030 (class 0 OID 0)
-- Dependencies: 628
-- Name: COLUMN loadsysuser_listfiles.lastload; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_listfiles.lastload IS 'lastload';


--
-- TOC entry 629 (class 1259 OID 20149)
-- Dependencies: 14
-- Name: loadsysuser_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE loadsysuser_status (
    oid character varying(36),
    description character varying(200),
    syn character varying(50)
);


ALTER TABLE mir.loadsysuser_status OWNER TO postgres;

--
-- TOC entry 14031 (class 0 OID 0)
-- Dependencies: 629
-- Name: TABLE loadsysuser_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE loadsysuser_status IS 'LOADSYSUSER_STATUS';


--
-- TOC entry 14032 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN loadsysuser_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_status.oid IS 'oid';


--
-- TOC entry 14033 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN loadsysuser_status.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_status.description IS 'description';


--
-- TOC entry 14034 (class 0 OID 0)
-- Dependencies: 629
-- Name: COLUMN loadsysuser_status.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN loadsysuser_status.syn IS 'syn';


--
-- TOC entry 630 (class 1259 OID 20152)
-- Dependencies: 14
-- Name: lockusers; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lockusers (
    oid character varying(36) NOT NULL,
    startblock date,
    plan_blockend date,
    block_end date,
    state numeric,
    user_block character varying(36),
    user_unblock character varying(36),
    ip character varying(36),
    oid_people character varying(36),
    dt date
);


ALTER TABLE mir.lockusers OWNER TO postgres;

--
-- TOC entry 14035 (class 0 OID 0)
-- Dependencies: 630
-- Name: TABLE lockusers; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lockusers IS 'Блокировка пациентов';


--
-- TOC entry 14036 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.oid IS 'oid';


--
-- TOC entry 14037 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.startblock; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.startblock IS 'startblock';


--
-- TOC entry 14038 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.plan_blockend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.plan_blockend IS 'plan_blockend';


--
-- TOC entry 14039 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.block_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.block_end IS 'block_end';


--
-- TOC entry 14040 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.state IS 'state';


--
-- TOC entry 14041 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.user_block; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.user_block IS 'user_block';


--
-- TOC entry 14042 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.user_unblock; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.user_unblock IS 'user_unblock';


--
-- TOC entry 14043 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.ip IS 'ip';


--
-- TOC entry 14044 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.oid_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.oid_people IS 'oid_people';


--
-- TOC entry 14045 (class 0 OID 0)
-- Dependencies: 630
-- Name: COLUMN lockusers.dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lockusers.dt IS 'dt';


--
-- TOC entry 631 (class 1259 OID 20158)
-- Dependencies: 7150 7151 7152 7153 7154 7155 7156 7157 14
-- Name: lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu (
    oid character(36) NOT NULL,
    identifier character varying(255) NOT NULL,
    lpu_code character varying(255) NOT NULL,
    lpu_code_value character varying(255) NOT NULL,
    lpu_type character(36) NOT NULL,
    ownership character(36) NOT NULL,
    organizational_form character(36) NOT NULL,
    oms numeric(1,0) DEFAULT 0,
    dlo numeric(1,0) DEFAULT 0,
    lpu_in_town numeric(1,0) DEFAULT 1,
    registrator_name character varying(255),
    registration_document character varying(255),
    registration_date date,
    registration_number character varying(255),
    transport character varying(100),
    telreg character varying(100),
    telspr character varying(100),
    city character varying(100),
    city_kladroid character varying(36),
    is_kvota character varying(1),
    show_in_site numeric DEFAULT 1,
    is_private numeric(1,0),
    territoryaffilation character(36),
    site character varying(255),
    is_allow_zapis numeric(1,0),
    lpu_work_dogovor numeric(1,0) DEFAULT 0,
    supreme_department character(36),
    lpu_profile character(36),
    subordination_type character(36),
    level_type character(36),
    gasurf_oid character varying(255),
    CONSTRAINT "ck_lpu$dlo" CHECK (((dlo IS NULL) OR ((dlo >= (0)::numeric) AND (dlo <= (1)::numeric)))),
    CONSTRAINT "ck_lpu$lpu_in_town" CHECK (((lpu_in_town IS NULL) OR ((lpu_in_town >= (0)::numeric) AND (lpu_in_town <= (1)::numeric)))),
    CONSTRAINT "ck_lpu$oms" CHECK (((oms IS NULL) OR ((oms >= (0)::numeric) AND (oms <= (1)::numeric))))
);


ALTER TABLE mir.lpu OWNER TO postgres;

--
-- TOC entry 14046 (class 0 OID 0)
-- Dependencies: 631
-- Name: TABLE lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu IS 'Справочник ЛПУ (юрид. компания МУ)';


--
-- TOC entry 14047 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.oid IS 'oid';


--
-- TOC entry 14048 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.identifier IS 'идентификатор';


--
-- TOC entry 14049 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_code IS 'код';


--
-- TOC entry 14050 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_code_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_code_value IS 'значение кода';


--
-- TOC entry 14051 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_type IS 'тип му';


--
-- TOC entry 14052 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.ownership IS 'форма собственности';


--
-- TOC entry 14053 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.organizational_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.organizational_form IS 'организационно-правовая форма';


--
-- TOC entry 14054 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.oms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.oms IS 'участие в омс';


--
-- TOC entry 14055 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.dlo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.dlo IS 'участие в дло';


--
-- TOC entry 14056 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_in_town; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_in_town IS 'городское=1  сельское=0';


--
-- TOC entry 14057 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.registrator_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.registrator_name IS 'наименование регистрирующего органа';


--
-- TOC entry 14058 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.registration_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.registration_document IS 'документ о регистрации';


--
-- TOC entry 14059 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.registration_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.registration_date IS 'дата регистрации';


--
-- TOC entry 14060 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.registration_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.registration_number IS 'регистрационный номер';


--
-- TOC entry 14061 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.transport; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.transport IS 'transport';


--
-- TOC entry 14062 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.telreg; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.telreg IS 'telreg';


--
-- TOC entry 14063 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.telspr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.telspr IS 'telspr';


--
-- TOC entry 14064 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.city IS 'city';


--
-- TOC entry 14065 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.city_kladroid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.city_kladroid IS 'city_kladroid';


--
-- TOC entry 14066 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.is_kvota; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.is_kvota IS 'is_kvota';


--
-- TOC entry 14067 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.show_in_site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.show_in_site IS 'show_in_site';


--
-- TOC entry 14068 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.is_private; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.is_private IS 'Доступны ли для просмотразаписи приемы данного ЛПУ для регистраторов других ЛПУ (by Spasskiy S.N. 05052011)';


--
-- TOC entry 14069 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.territoryaffilation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.territoryaffilation IS 'territoryaffilation';


--
-- TOC entry 14070 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.site IS 'Хранится информация о сайте ЛПУ';


--
-- TOC entry 14071 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.is_allow_zapis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.is_allow_zapis IS 'Разрешить/запретить запись из дргих ЛПУ';


--
-- TOC entry 14072 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_work_dogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_work_dogovor IS 'lpu_work_dogovor';


--
-- TOC entry 14073 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.supreme_department; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.supreme_department IS 'ведомственная принадлежность';


--
-- TOC entry 14074 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.lpu_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.lpu_profile IS 'профиль лпу';


--
-- TOC entry 14075 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.subordination_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.subordination_type IS 'категория подчиненности';


--
-- TOC entry 14076 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.level_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.level_type IS 'уровень';


--
-- TOC entry 14077 (class 0 OID 0)
-- Dependencies: 631
-- Name: COLUMN lpu.gasurf_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu.gasurf_oid IS 'идентификатор в системе минздравсоц развития';


--
-- TOC entry 632 (class 1259 OID 20172)
-- Dependencies: 6766 14
-- Name: lpu_address_geo; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW lpu_address_geo AS
    SELECT d.oid, d.address, a.tkladr, a.house, a.building, a.flat FROM company d, lpu p, addressex a WHERE (((d.oid = p.oid) AND (d.gcrecord IS NULL)) AND (a.oid = d.address));


ALTER TABLE mir.lpu_address_geo OWNER TO postgres;

--
-- TOC entry 14078 (class 0 OID 0)
-- Dependencies: 632
-- Name: VIEW lpu_address_geo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW lpu_address_geo IS 'LPU_ADDRESS_GEO';


--
-- TOC entry 633 (class 1259 OID 20176)
-- Dependencies: 14
-- Name: lpu_demand_allow; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_demand_allow (
    demand_from character(36),
    demand_to character(36)
);


ALTER TABLE mir.lpu_demand_allow OWNER TO postgres;

--
-- TOC entry 14079 (class 0 OID 0)
-- Dependencies: 633
-- Name: TABLE lpu_demand_allow; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_demand_allow IS 'Перечень ЛПУ, которые могут формировать заявки в другие ЛПУ';


--
-- TOC entry 14080 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN lpu_demand_allow.demand_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_demand_allow.demand_from IS 'ЛПУ имеющие право формировать заявки';


--
-- TOC entry 14081 (class 0 OID 0)
-- Dependencies: 633
-- Name: COLUMN lpu_demand_allow.demand_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_demand_allow.demand_to IS 'ЛПУ в которое направляются заявки';


--
-- TOC entry 634 (class 1259 OID 20179)
-- Dependencies: 14
-- Name: lpu_direction; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_direction (
    lpu_id character(36) NOT NULL,
    lpu_direction_id character(36) NOT NULL
);


ALTER TABLE mir.lpu_direction OWNER TO postgres;

--
-- TOC entry 14082 (class 0 OID 0)
-- Dependencies: 634
-- Name: TABLE lpu_direction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_direction IS 'Таблица связи между ЛПУ по возможности направления';


--
-- TOC entry 14083 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN lpu_direction.lpu_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_direction.lpu_id IS 'lpu_id';


--
-- TOC entry 14084 (class 0 OID 0)
-- Dependencies: 634
-- Name: COLUMN lpu_direction.lpu_direction_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_direction.lpu_direction_id IS 'lpu_direction_id';


--
-- TOC entry 635 (class 1259 OID 20182)
-- Dependencies: 6767 14
-- Name: lpu_geo; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW lpu_geo AS
    SELECT d.oid, d.fullname, d.address FROM company d, lpu p WHERE ((d.oid = p.oid) AND (d.gcrecord IS NULL));


ALTER TABLE mir.lpu_geo OWNER TO postgres;

--
-- TOC entry 14085 (class 0 OID 0)
-- Dependencies: 635
-- Name: VIEW lpu_geo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW lpu_geo IS 'LPU_GEO';


--
-- TOC entry 636 (class 1259 OID 20186)
-- Dependencies: 7158 7159 7160 7161 7162 7163 7164 7165 7166 14
-- Name: lpu_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    identifier character varying(255),
    lpu_code character varying(255),
    lpu_code_value character varying(255),
    lpu_type character(36),
    ownership character(36),
    organizational_form character(36),
    oms numeric(1,0) DEFAULT 0,
    dlo numeric(1,0) DEFAULT 0,
    lpu_in_town numeric(1,0) DEFAULT 1,
    registrator_name character varying(255),
    registration_document character varying(255),
    registration_date date,
    subordination_type character(36),
    level_type character(36),
    registration_number character varying(255),
    transport character varying(100),
    telreg character varying(100),
    telspr character varying(100),
    city character varying(100),
    city_kladroid character varying(36),
    is_kvota character varying(1),
    show_in_site numeric DEFAULT 1,
    is_private numeric(1,0),
    territoryaffilation character(36),
    site character varying(255),
    is_allow_zapis numeric(1,0),
    lpu_work_dogovor numeric(1,0) DEFAULT 0,
    supreme_department character(36),
    lpu_profile character(36),
    CONSTRAINT "ck_lpu_history$dlo" CHECK (((dlo IS NULL) OR ((dlo >= (0)::numeric) AND (dlo <= (1)::numeric)))),
    CONSTRAINT "ck_lpu_history$lpu_in_town" CHECK (((lpu_in_town IS NULL) OR ((lpu_in_town >= (0)::numeric) AND (lpu_in_town <= (1)::numeric)))),
    CONSTRAINT "ck_lpu_history$oms" CHECK (((oms IS NULL) OR ((oms >= (0)::numeric) AND (oms <= (1)::numeric))))
);


ALTER TABLE mir.lpu_history OWNER TO postgres;

--
-- TOC entry 14086 (class 0 OID 0)
-- Dependencies: 636
-- Name: TABLE lpu_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_history IS 'Справочник ЛПУ (юрид. компания МУ)';


--
-- TOC entry 14087 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.hid IS 'hid';


--
-- TOC entry 14088 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.h_date IS 'h_date';


--
-- TOC entry 14089 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.h_date_end IS 'h_date_end';


--
-- TOC entry 14090 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.sysdate IS 'sysdate';


--
-- TOC entry 14091 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.oid IS 'oid';


--
-- TOC entry 14092 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.identifier IS 'идентификатор';


--
-- TOC entry 14093 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_code IS 'код';


--
-- TOC entry 14094 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_code_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_code_value IS 'значение кода';


--
-- TOC entry 14095 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_type IS 'тип му';


--
-- TOC entry 14096 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.ownership IS 'форма собственности';


--
-- TOC entry 14097 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.organizational_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.organizational_form IS 'организационно-правовая форма';


--
-- TOC entry 14098 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.oms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.oms IS 'участие в омс';


--
-- TOC entry 14099 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.dlo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.dlo IS 'участие в дло';


--
-- TOC entry 14100 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_in_town; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_in_town IS 'городское=1  сельское=0';


--
-- TOC entry 14101 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.registrator_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.registrator_name IS 'наименование регистрирующего органа';


--
-- TOC entry 14102 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.registration_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.registration_document IS 'документ о регистрации';


--
-- TOC entry 14103 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.registration_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.registration_date IS 'дата регистрации';


--
-- TOC entry 14104 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.subordination_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.subordination_type IS 'категория подчиненности';


--
-- TOC entry 14105 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.level_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.level_type IS 'уровень';


--
-- TOC entry 14106 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.registration_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.registration_number IS 'регистрационный номер';


--
-- TOC entry 14107 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.transport; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.transport IS 'transport';


--
-- TOC entry 14108 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.telreg; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.telreg IS 'telreg';


--
-- TOC entry 14109 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.telspr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.telspr IS 'telspr';


--
-- TOC entry 14110 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.city IS 'city';


--
-- TOC entry 14111 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.city_kladroid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.city_kladroid IS 'city_kladroid';


--
-- TOC entry 14112 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.is_kvota; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.is_kvota IS 'is_kvota';


--
-- TOC entry 14113 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.show_in_site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.show_in_site IS 'show_in_site';


--
-- TOC entry 14114 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.is_private; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.is_private IS 'Доступны ли для просмотразаписи приемы данного ЛПУ для регистраторов других ЛПУ (by Spasskiy S.N. 05052011)';


--
-- TOC entry 14115 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.territoryaffilation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.territoryaffilation IS 'territoryaffilation';


--
-- TOC entry 14116 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.site IS 'Хранится информация о сайте ЛПУ';


--
-- TOC entry 14117 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.is_allow_zapis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.is_allow_zapis IS 'Разрешить/запретить запись из дргих ЛПУ';


--
-- TOC entry 14118 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_work_dogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_work_dogovor IS 'lpu_work_dogovor';


--
-- TOC entry 14119 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.supreme_department; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.supreme_department IS 'ведомственная принадлежность';


--
-- TOC entry 14120 (class 0 OID 0)
-- Dependencies: 636
-- Name: COLUMN lpu_history.lpu_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_history.lpu_profile IS 'профиль лпу';


--
-- TOC entry 637 (class 1259 OID 20201)
-- Dependencies: 7167 7168 14
-- Name: lpu_information_system; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_information_system (
    lpu character(36),
    information_system character(36),
    date_installation timestamp without time zone,
    price numeric(15,2),
    support numeric(1,0) DEFAULT 0,
    support_price numeric(15,2),
    oid character(36) NOT NULL,
    CONSTRAINT "ck_lpu_information_sy$support" CHECK (((support IS NULL) OR ((support >= (0)::numeric) AND (support <= (1)::numeric))))
);


ALTER TABLE mir.lpu_information_system OWNER TO postgres;

--
-- TOC entry 14121 (class 0 OID 0)
-- Dependencies: 637
-- Name: TABLE lpu_information_system; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_information_system IS 'lpu_information_system';


--
-- TOC entry 14122 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.lpu IS 'lpu';


--
-- TOC entry 14123 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.information_system; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.information_system IS 'information_system';


--
-- TOC entry 14124 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.date_installation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.date_installation IS 'дата внедрения';


--
-- TOC entry 14125 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.price IS 'стоимость';


--
-- TOC entry 14126 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.support; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.support IS 'наличие сопровождения';


--
-- TOC entry 14127 (class 0 OID 0)
-- Dependencies: 637
-- Name: COLUMN lpu_information_system.support_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system.support_price IS 'стоимость сопровождения';


--
-- TOC entry 638 (class 1259 OID 20206)
-- Dependencies: 7169 7170 7171 14
-- Name: lpu_information_system_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_information_system_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36) NOT NULL,
    lpu character(36),
    information_system character(36),
    date_installation timestamp without time zone,
    price numeric(15,2),
    support numeric(1,0) DEFAULT 0,
    support_price numeric(15,2),
    CONSTRAINT "ck_lpu_info$support" CHECK (((support IS NULL) OR ((support >= (0)::numeric) AND (support <= (1)::numeric))))
);


ALTER TABLE mir.lpu_information_system_history OWNER TO postgres;

--
-- TOC entry 14128 (class 0 OID 0)
-- Dependencies: 638
-- Name: TABLE lpu_information_system_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_information_system_history IS 'lpu_information_system_history';


--
-- TOC entry 14129 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.hid IS 'hid';


--
-- TOC entry 14130 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.h_date IS 'h_date';


--
-- TOC entry 14131 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.h_date_end IS 'h_date_end';


--
-- TOC entry 14132 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.sysdate IS 'sysdate';


--
-- TOC entry 14133 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.oid IS 'oid';


--
-- TOC entry 14134 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.lpu IS 'lpu';


--
-- TOC entry 14135 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.information_system; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.information_system IS 'information_system';


--
-- TOC entry 14136 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.date_installation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.date_installation IS 'дата внедрения';


--
-- TOC entry 14137 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.price IS 'стоимость';


--
-- TOC entry 14138 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.support; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.support IS 'наличие сопровождения';


--
-- TOC entry 14139 (class 0 OID 0)
-- Dependencies: 638
-- Name: COLUMN lpu_information_system_history.support_price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_information_system_history.support_price IS 'стоимость сопровождения';


--
-- TOC entry 639 (class 1259 OID 20212)
-- Dependencies: 14
-- Name: lpu_insurprogram; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_insurprogram (
    lpu character(36) NOT NULL,
    insurprogram character(36) NOT NULL
);


ALTER TABLE mir.lpu_insurprogram OWNER TO postgres;

--
-- TOC entry 14140 (class 0 OID 0)
-- Dependencies: 639
-- Name: TABLE lpu_insurprogram; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_insurprogram IS 'ЛПУ - Страховые программы';


--
-- TOC entry 14141 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN lpu_insurprogram.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_insurprogram.lpu IS 'lpu';


--
-- TOC entry 14142 (class 0 OID 0)
-- Dependencies: 639
-- Name: COLUMN lpu_insurprogram.insurprogram; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_insurprogram.insurprogram IS 'insurprogram';


--
-- TOC entry 640 (class 1259 OID 20215)
-- Dependencies: 7172 7173 14
-- Name: lpu_organizational_form; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_organizational_form (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_lpu_organizational$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lpu_organizational_form OWNER TO postgres;

--
-- TOC entry 14143 (class 0 OID 0)
-- Dependencies: 640
-- Name: TABLE lpu_organizational_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_organizational_form IS 'справочник организационно-правовых форм МУ';


--
-- TOC entry 14144 (class 0 OID 0)
-- Dependencies: 640
-- Name: COLUMN lpu_organizational_form.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_organizational_form.oid IS 'oid';


--
-- TOC entry 14145 (class 0 OID 0)
-- Dependencies: 640
-- Name: COLUMN lpu_organizational_form.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_organizational_form.name IS 'name';


--
-- TOC entry 14146 (class 0 OID 0)
-- Dependencies: 640
-- Name: COLUMN lpu_organizational_form.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_organizational_form.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14147 (class 0 OID 0)
-- Dependencies: 640
-- Name: COLUMN lpu_organizational_form.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_organizational_form.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14148 (class 0 OID 0)
-- Dependencies: 640
-- Name: COLUMN lpu_organizational_form.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_organizational_form.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 641 (class 1259 OID 20223)
-- Dependencies: 7174 7175 14
-- Name: lpu_ownership; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_ownership (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_lpu_ownership$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lpu_ownership OWNER TO postgres;

--
-- TOC entry 14149 (class 0 OID 0)
-- Dependencies: 641
-- Name: TABLE lpu_ownership; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_ownership IS 'справочник форм собственности МУ';


--
-- TOC entry 14150 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN lpu_ownership.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_ownership.oid IS 'oid';


--
-- TOC entry 14151 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN lpu_ownership.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_ownership.name IS 'name';


--
-- TOC entry 14152 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN lpu_ownership.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_ownership.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14153 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN lpu_ownership.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_ownership.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14154 (class 0 OID 0)
-- Dependencies: 641
-- Name: COLUMN lpu_ownership.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_ownership.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 642 (class 1259 OID 20231)
-- Dependencies: 7176 7177 14
-- Name: lpu_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_profile (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_lpu_profile$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lpu_profile OWNER TO postgres;

--
-- TOC entry 14155 (class 0 OID 0)
-- Dependencies: 642
-- Name: TABLE lpu_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_profile IS 'профиль лпу

Амбулаторно-поликлиническое учреждение
Стационар
Дневной стационар
Санаторно-курортное
Больничное учреждение
Диспансер
Центры, в том числе научно-практические
Учреждения скорой медицинской помощии учреждения переливания крови
Учреждение охраны материнства и детства
Учреждение здравоохранения особого типа
Учреждение здравоохранения по надзору в сфере защиты прав потребителей и благополучия человека
';


--
-- TOC entry 14156 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN lpu_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_profile.oid IS 'oid';


--
-- TOC entry 14157 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN lpu_profile.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_profile.name IS 'name';


--
-- TOC entry 14158 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN lpu_profile.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_profile.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14159 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN lpu_profile.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_profile.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14160 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN lpu_profile.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_profile.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 643 (class 1259 OID 20239)
-- Dependencies: 7178 7179 14
-- Name: lpu_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpu_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    parent character(36),
    id integer,
    CONSTRAINT "ck_lpu_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.lpu_type OWNER TO postgres;

--
-- TOC entry 14161 (class 0 OID 0)
-- Dependencies: 643
-- Name: TABLE lpu_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpu_type IS 'справочник типов МУ';


--
-- TOC entry 14162 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.oid IS 'oid';


--
-- TOC entry 14163 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.name IS 'name';


--
-- TOC entry 14164 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14165 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14166 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 14167 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.parent IS 'parent';


--
-- TOC entry 14168 (class 0 OID 0)
-- Dependencies: 643
-- Name: COLUMN lpu_type.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpu_type.id IS 'Идентификатор сторонний';


--
-- TOC entry 644 (class 1259 OID 20247)
-- Dependencies: 7180 7181 14
-- Name: lpudogovor; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpudogovor (
    oid character(36) NOT NULL,
    numlicense character varying(255),
    datelicense date,
    fullnamelpu character varying(255),
    shortnamelpu character varying(100),
    addressoid character(36),
    addresshome character(4),
    addresskorp character(4),
    addressapart character(4),
    telreg character varying(100),
    telspr character varying(100),
    glavvrach character varying(255),
    loginadmin character varying(100),
    passwordadmin character varying(100),
    emailadmin character varying(255),
    teladmin character varying(100),
    ip character varying(36),
    datedogovor date,
    numdogovor character varying(255),
    ismoderate numeric DEFAULT 0,
    status numeric DEFAULT 0,
    lastnameadmin character varying(255),
    nameadmin character varying(255),
    middlenameadmin character varying(255),
    region character(36),
    dateadmin date,
    lpu character varying(36),
    profile character(36)
);


ALTER TABLE mir.lpudogovor OWNER TO postgres;

--
-- TOC entry 14169 (class 0 OID 0)
-- Dependencies: 644
-- Name: TABLE lpudogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpudogovor IS 'ЗАЯВКИ ЛПУ НА ВКЛЮЧЕНИЕ В СИСТЕМУ (Беленко)';


--
-- TOC entry 14170 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.oid IS 'ID';


--
-- TOC entry 14171 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.numlicense; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.numlicense IS 'НОМЕР ЛИЦЕНЗИИ';


--
-- TOC entry 14172 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.datelicense; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.datelicense IS 'ДАТА ВЫДАЧИ ЛИЦЕНЗИИ';


--
-- TOC entry 14173 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.fullnamelpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.fullnamelpu IS 'ПОЛНОЕ НАЗВАНИЕ ЛПУ';


--
-- TOC entry 14174 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.shortnamelpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.shortnamelpu IS 'КРАТКОЕ НАЗВАНИЕ ЛПУ';


--
-- TOC entry 14175 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.addressoid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.addressoid IS 'OID УЛИЦЫ';


--
-- TOC entry 14176 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.addresshome; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.addresshome IS 'НОМЕР ДОМА';


--
-- TOC entry 14177 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.addresskorp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.addresskorp IS 'НОМЕР КОРПУСА';


--
-- TOC entry 14178 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.addressapart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.addressapart IS 'НОМЕР КВАРТИРЫ';


--
-- TOC entry 14179 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.telreg; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.telreg IS 'ТЕЛЕФОН РЕГИСТРАТУРЫ';


--
-- TOC entry 14180 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.telspr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.telspr IS 'ТЕЛЕФОН СПРАВОЧНОЙ';


--
-- TOC entry 14181 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.glavvrach; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.glavvrach IS 'ФИО ГЛАВНОГО ВРАЧА';


--
-- TOC entry 14182 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.loginadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.loginadmin IS 'ЛОГИН АДМИНА';


--
-- TOC entry 14183 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.passwordadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.passwordadmin IS 'ПАРОЛЬ АДМИНА';


--
-- TOC entry 14184 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.emailadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.emailadmin IS 'EMAIL АДМИНА';


--
-- TOC entry 14185 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.teladmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.teladmin IS 'ТЕЛЕФОН АДМИНА';


--
-- TOC entry 14186 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.ip IS 'IP АДРЕС';


--
-- TOC entry 14187 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.datedogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.datedogovor IS 'ДАТА ПОДАЧИ ЗАЯВКИ';


--
-- TOC entry 14188 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.numdogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.numdogovor IS 'НОМЕР ЗАЯВКИ';


--
-- TOC entry 14189 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.ismoderate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.ismoderate IS 'СТАТУС МОДЕРАЦИИ';


--
-- TOC entry 14190 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.status IS 'СТАТУС';


--
-- TOC entry 14191 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.lastnameadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.lastnameadmin IS 'lastnameadmin';


--
-- TOC entry 14192 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.nameadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.nameadmin IS 'nameadmin';


--
-- TOC entry 14193 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.middlenameadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.middlenameadmin IS 'middlenameadmin';


--
-- TOC entry 14194 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.region IS 'РЕГИОН';


--
-- TOC entry 14195 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.dateadmin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.dateadmin IS 'dateadmin';


--
-- TOC entry 14196 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN lpudogovor.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovor.lpu IS 'OID ЛПУ  в сисетме';


--
-- TOC entry 645 (class 1259 OID 20255)
-- Dependencies: 14
-- Name: lpudogovoroplata; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpudogovoroplata (
    oid character varying(36),
    oiddogovor character varying(36),
    dateoplata date,
    endperiodoplata date
);


ALTER TABLE mir.lpudogovoroplata OWNER TO postgres;

--
-- TOC entry 14197 (class 0 OID 0)
-- Dependencies: 645
-- Name: TABLE lpudogovoroplata; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpudogovoroplata IS 'Оплата лицензионных договоров';


--
-- TOC entry 14198 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN lpudogovoroplata.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovoroplata.oid IS 'oid';


--
-- TOC entry 14199 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN lpudogovoroplata.oiddogovor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovoroplata.oiddogovor IS 'oiddogovor';


--
-- TOC entry 14200 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN lpudogovoroplata.dateoplata; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovoroplata.dateoplata IS 'dateoplata';


--
-- TOC entry 14201 (class 0 OID 0)
-- Dependencies: 645
-- Name: COLUMN lpudogovoroplata.endperiodoplata; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudogovoroplata.endperiodoplata IS 'endperiodoplata';


--
-- TOC entry 646 (class 1259 OID 20258)
-- Dependencies: 14
-- Name: lpudorovor_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpudorovor_profile (
    oid character(36) NOT NULL,
    lpudogovorid character(36) NOT NULL,
    profilelpuid character(36) NOT NULL
);


ALTER TABLE mir.lpudorovor_profile OWNER TO postgres;

--
-- TOC entry 14202 (class 0 OID 0)
-- Dependencies: 646
-- Name: COLUMN lpudorovor_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudorovor_profile.oid IS 'ID';


--
-- TOC entry 14203 (class 0 OID 0)
-- Dependencies: 646
-- Name: COLUMN lpudorovor_profile.lpudogovorid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudorovor_profile.lpudogovorid IS 'идентификатор заявки на регистрацию ЛПУ или частного врача';


--
-- TOC entry 14204 (class 0 OID 0)
-- Dependencies: 646
-- Name: COLUMN lpudorovor_profile.profilelpuid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpudorovor_profile.profilelpuid IS 'идентификатор профиля ЛПУ';


--
-- TOC entry 647 (class 1259 OID 20261)
-- Dependencies: 14
-- Name: lpusettings; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE lpusettings (
    oid character(36) NOT NULL,
    lpu character(36),
    settings character(36),
    custvaluepar character varying(100),
    optimisticlockfield numeric,
    gcrecord numeric
);


ALTER TABLE mir.lpusettings OWNER TO postgres;

--
-- TOC entry 14205 (class 0 OID 0)
-- Dependencies: 647
-- Name: TABLE lpusettings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE lpusettings IS 'Настройки ЛПУ';


--
-- TOC entry 14206 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.oid IS 'oid';


--
-- TOC entry 14207 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.lpu IS 'lpu';


--
-- TOC entry 14208 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.settings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.settings IS 'settings';


--
-- TOC entry 14209 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.custvaluepar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.custvaluepar IS 'custvaluepar';


--
-- TOC entry 14210 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 14211 (class 0 OID 0)
-- Dependencies: 647
-- Name: COLUMN lpusettings.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN lpusettings.gcrecord IS 'gcrecord';


--
-- TOC entry 648 (class 1259 OID 20267)
-- Dependencies: 7182 14
-- Name: map_teeth; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE map_teeth (
    oid character(36) NOT NULL,
    presc_id character(36) NOT NULL,
    content text,
    sanated numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.map_teeth OWNER TO postgres;

--
-- TOC entry 14212 (class 0 OID 0)
-- Dependencies: 648
-- Name: TABLE map_teeth; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE map_teeth IS 'Shpielevoy D.I. Карты зубов';


--
-- TOC entry 14213 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN map_teeth.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN map_teeth.oid IS 'oid';


--
-- TOC entry 14214 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN map_teeth.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN map_teeth.presc_id IS 'presc_id';


--
-- TOC entry 14215 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN map_teeth.content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN map_teeth.content IS 'содержимое карты зубов';


--
-- TOC entry 14216 (class 0 OID 0)
-- Dependencies: 648
-- Name: COLUMN map_teeth.sanated; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN map_teeth.sanated IS 'санирована ли полость рта   1-да';


--
-- TOC entry 649 (class 1259 OID 20274)
-- Dependencies: 14
-- Name: marriage; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE marriage (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.marriage OWNER TO postgres;

--
-- TOC entry 14217 (class 0 OID 0)
-- Dependencies: 649
-- Name: TABLE marriage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE marriage IS 'Семейное положение

';


--
-- TOC entry 14218 (class 0 OID 0)
-- Dependencies: 649
-- Name: COLUMN marriage.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN marriage.oid IS 'oid';


--
-- TOC entry 14219 (class 0 OID 0)
-- Dependencies: 649
-- Name: COLUMN marriage.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN marriage.id IS 'id';


--
-- TOC entry 14220 (class 0 OID 0)
-- Dependencies: 649
-- Name: COLUMN marriage.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN marriage.name IS 'name';


--
-- TOC entry 650 (class 1259 OID 20277)
-- Dependencies: 14
-- Name: massunit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE massunit (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.massunit OWNER TO postgres;

--
-- TOC entry 14221 (class 0 OID 0)
-- Dependencies: 650
-- Name: TABLE massunit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE massunit IS 'Единицы измерения массы Author:Kulikovskiy';


--
-- TOC entry 14222 (class 0 OID 0)
-- Dependencies: 650
-- Name: COLUMN massunit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN massunit.oid IS 'Код';


--
-- TOC entry 14223 (class 0 OID 0)
-- Dependencies: 650
-- Name: COLUMN massunit.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN massunit.name IS 'Название';


--
-- TOC entry 651 (class 1259 OID 20280)
-- Dependencies: 14
-- Name: massunits; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE massunits (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.massunits OWNER TO postgres;

--
-- TOC entry 14224 (class 0 OID 0)
-- Dependencies: 651
-- Name: TABLE massunits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE massunits IS 'Названия единиц массы';


--
-- TOC entry 14225 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN massunits.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN massunits.id IS 'Код названия единицы массы - перичный ключ';


--
-- TOC entry 14226 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN massunits.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN massunits.fullname IS 'Полное название единицы массы';


--
-- TOC entry 14227 (class 0 OID 0)
-- Dependencies: 651
-- Name: COLUMN massunits.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN massunits.shortname IS 'Краткое название единицы массы';


--
-- TOC entry 652 (class 1259 OID 20286)
-- Dependencies: 7183 7184 7185 14
-- Name: mdoc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc (
    id character(36) NOT NULL,
    people_id character(36),
    mdoc_type_id character(36),
    beginm date,
    endm date,
    num character varying(10),
    pdoc_id character(36),
    status integer DEFAULT 0 NOT NULL,
    year character varying(4),
    otdel character(36),
    lpu character(36),
    docobsl_id character(36),
    location integer DEFAULT 0,
    reason_archive_id character(36),
    CONSTRAINT mdoc_ch_location CHECK (((location IS NULL) OR ((location >= 0) AND (location <= 1))))
);


ALTER TABLE mir.mdoc OWNER TO postgres;

--
-- TOC entry 14228 (class 0 OID 0)
-- Dependencies: 652
-- Name: TABLE mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc IS 'Медицинские документы Author: A.Nakorjakov';


--
-- TOC entry 14229 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.id IS 'SEQUENCE=[SQ_MDOC]';


--
-- TOC entry 14230 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.people_id IS 'Человек [PEOPLE.ID]';


--
-- TOC entry 14231 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.mdoc_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.mdoc_type_id IS 'Документ [MED.DOC.ID]';


--
-- TOC entry 14232 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.beginm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.beginm IS 'Дата создания документа';


--
-- TOC entry 14233 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.endm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.endm IS 'Дата закрытия документа';


--
-- TOC entry 14234 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.num IS 'Номер документа';


--
-- TOC entry 14235 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.pdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.pdoc_id IS 'Документ, удостоверяющий личность';


--
-- TOC entry 14236 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.status IS 'Статус (0 - открыта, 1 - закрыта)';


--
-- TOC entry 14237 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.year IS 'Вторая часть номера (год открытия карты)';


--
-- TOC entry 14238 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.otdel IS 'oid подразделения, в котором создали карту';


--
-- TOC entry 14239 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.docobsl_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.docobsl_id IS 'Код документа обслуживания mir.docobsl';


--
-- TOC entry 14240 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.location IS '0 - В регистратуре, 1 - На руках';


--
-- TOC entry 14241 (class 0 OID 0)
-- Dependencies: 652
-- Name: COLUMN mdoc.reason_archive_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc.reason_archive_id IS 'Указания причины сдачи карты в архив';


--
-- TOC entry 653 (class 1259 OID 20292)
-- Dependencies: 14
-- Name: mdoc_barcode; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_barcode (
    mdoc character varying NOT NULL,
    code numeric NOT NULL
);


ALTER TABLE mir.mdoc_barcode OWNER TO postgres;

--
-- TOC entry 654 (class 1259 OID 20298)
-- Dependencies: 14
-- Name: mdoc_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_group (
    oid character(36) NOT NULL,
    name character varying(255),
    start_num integer,
    date_end date,
    lpu character(36)
);


ALTER TABLE mir.mdoc_group OWNER TO postgres;

--
-- TOC entry 14242 (class 0 OID 0)
-- Dependencies: 654
-- Name: TABLE mdoc_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc_group IS 'Таблица групп настроек документов';


--
-- TOC entry 14243 (class 0 OID 0)
-- Dependencies: 654
-- Name: COLUMN mdoc_group.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_group.oid IS 'oid';


--
-- TOC entry 14244 (class 0 OID 0)
-- Dependencies: 654
-- Name: COLUMN mdoc_group.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_group.name IS 'Наименование группы';


--
-- TOC entry 14245 (class 0 OID 0)
-- Dependencies: 654
-- Name: COLUMN mdoc_group.start_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_group.start_num IS 'Начало нумерации карт (число с которого начинается нумерация карт)';


--
-- TOC entry 14246 (class 0 OID 0)
-- Dependencies: 654
-- Name: COLUMN mdoc_group.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_group.date_end IS 'Дата закрытия года (смены нумерации)';


--
-- TOC entry 14247 (class 0 OID 0)
-- Dependencies: 654
-- Name: COLUMN mdoc_group.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_group.lpu IS 'Id ЛПУ к которому относится группа';


--
-- TOC entry 655 (class 1259 OID 20301)
-- Dependencies: 14
-- Name: mdoc_last_number; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_last_number (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    mdoc_type character(36) NOT NULL,
    year integer NOT NULL,
    num integer NOT NULL
);


ALTER TABLE mir.mdoc_last_number OWNER TO postgres;

--
-- TOC entry 14248 (class 0 OID 0)
-- Dependencies: 655
-- Name: COLUMN mdoc_last_number.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_last_number.oid IS 'Код';


--
-- TOC entry 14249 (class 0 OID 0)
-- Dependencies: 655
-- Name: COLUMN mdoc_last_number.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_last_number.otdel IS 'Отдел';


--
-- TOC entry 14250 (class 0 OID 0)
-- Dependencies: 655
-- Name: COLUMN mdoc_last_number.mdoc_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_last_number.mdoc_type IS 'Тип документов mdoc_type';


--
-- TOC entry 14251 (class 0 OID 0)
-- Dependencies: 655
-- Name: COLUMN mdoc_last_number.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_last_number.year IS 'Год';


--
-- TOC entry 14252 (class 0 OID 0)
-- Dependencies: 655
-- Name: COLUMN mdoc_last_number.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_last_number.num IS 'Номер';


--
-- TOC entry 656 (class 1259 OID 20304)
-- Dependencies: 14
-- Name: mdoc_location; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_location (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.mdoc_location OWNER TO postgres;

--
-- TOC entry 14253 (class 0 OID 0)
-- Dependencies: 656
-- Name: TABLE mdoc_location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc_location IS 'Справочник местопложения карты';


--
-- TOC entry 14254 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN mdoc_location.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_location.oid IS 'oid';


--
-- TOC entry 14255 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN mdoc_location.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_location.name IS 'name';


--
-- TOC entry 657 (class 1259 OID 20307)
-- Dependencies: 14
-- Name: mdoc_mdoc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_mdoc (
    oid character(36) NOT NULL,
    mdoc character(36) NOT NULL,
    mdoc_parent character(36) NOT NULL,
    people_relation_status character(36)
);


ALTER TABLE mir.mdoc_mdoc OWNER TO postgres;

--
-- TOC entry 14256 (class 0 OID 0)
-- Dependencies: 657
-- Name: TABLE mdoc_mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc_mdoc IS 'Связь между медицинскими картами (ребенок - мать)';


--
-- TOC entry 14257 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN mdoc_mdoc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_mdoc.oid IS 'Первичный ключ';


--
-- TOC entry 14258 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN mdoc_mdoc.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_mdoc.mdoc IS 'Код карты пациента (ребенка)';


--
-- TOC entry 14259 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN mdoc_mdoc.mdoc_parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_mdoc.mdoc_parent IS 'Код родительской карты (матери)';


--
-- TOC entry 14260 (class 0 OID 0)
-- Dependencies: 657
-- Name: COLUMN mdoc_mdoc.people_relation_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_mdoc.people_relation_status IS 'Статус представителя пациента';


--
-- TOC entry 658 (class 1259 OID 20310)
-- Dependencies: 14
-- Name: mdoc_number; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_number (
    mdoc_id character(36) NOT NULL,
    num numeric,
    year numeric,
    date_generate timestamp without time zone,
    mdoc_type_id character(36),
    prefix character varying(255)
);


ALTER TABLE mir.mdoc_number OWNER TO postgres;

--
-- TOC entry 14261 (class 0 OID 0)
-- Dependencies: 658
-- Name: TABLE mdoc_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc_number IS 'mdoc_number';


--
-- TOC entry 14262 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.mdoc_id IS 'mdoc_id';


--
-- TOC entry 14263 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.num IS 'num';


--
-- TOC entry 14264 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.year IS 'year';


--
-- TOC entry 14265 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.date_generate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.date_generate IS 'date_generate';


--
-- TOC entry 14266 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.mdoc_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.mdoc_type_id IS 'mdoc_type_id';


--
-- TOC entry 14267 (class 0 OID 0)
-- Dependencies: 658
-- Name: COLUMN mdoc_number.prefix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_number.prefix IS 'Префикс для карт';


--
-- TOC entry 659 (class 1259 OID 20316)
-- Dependencies: 14
-- Name: mdoc_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mdoc_type (
    id character(36) NOT NULL,
    name character varying(100),
    parent_id integer,
    num_type_id integer,
    synonim character varying(100)
);


ALTER TABLE mir.mdoc_type OWNER TO postgres;

--
-- TOC entry 14268 (class 0 OID 0)
-- Dependencies: 659
-- Name: TABLE mdoc_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mdoc_type IS 'Справочник медицинских документов Author:A.Nakorjakov';


--
-- TOC entry 14269 (class 0 OID 0)
-- Dependencies: 659
-- Name: COLUMN mdoc_type.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_type.id IS 'SEQUENCE=[MIS.SQ_MDOC_TYPE]';


--
-- TOC entry 14270 (class 0 OID 0)
-- Dependencies: 659
-- Name: COLUMN mdoc_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_type.name IS 'Название';


--
-- TOC entry 14271 (class 0 OID 0)
-- Dependencies: 659
-- Name: COLUMN mdoc_type.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_type.parent_id IS 'Родитель [MDOC_TYPE.ID]';


--
-- TOC entry 14272 (class 0 OID 0)
-- Dependencies: 659
-- Name: COLUMN mdoc_type.num_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_type.num_type_id IS 'Тип нумерации (NUM_TYPE.ID)';


--
-- TOC entry 14273 (class 0 OID 0)
-- Dependencies: 659
-- Name: COLUMN mdoc_type.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mdoc_type.synonim IS 'синоним';


--
-- TOC entry 660 (class 1259 OID 20319)
-- Dependencies: 14
-- Name: medhelptype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medhelptype (
    oid character(36) NOT NULL,
    sex numeric,
    ages numeric,
    agepo numeric
);


ALTER TABLE mir.medhelptype OWNER TO postgres;

--
-- TOC entry 14274 (class 0 OID 0)
-- Dependencies: 660
-- Name: TABLE medhelptype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medhelptype IS 'Тип помощи';


--
-- TOC entry 14275 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN medhelptype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medhelptype.oid IS 'oid';


--
-- TOC entry 14276 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN medhelptype.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medhelptype.sex IS 'sex';


--
-- TOC entry 14277 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN medhelptype.ages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medhelptype.ages IS 'ages';


--
-- TOC entry 14278 (class 0 OID 0)
-- Dependencies: 660
-- Name: COLUMN medhelptype.agepo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medhelptype.agepo IS 'agepo';


--
-- TOC entry 661 (class 1259 OID 20325)
-- Dependencies: 14
-- Name: medic_frequency; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medic_frequency (
    oid character(36) NOT NULL,
    name character varying(255),
    ncount real
);


ALTER TABLE mir.medic_frequency OWNER TO postgres;

--
-- TOC entry 14279 (class 0 OID 0)
-- Dependencies: 661
-- Name: TABLE medic_frequency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medic_frequency IS 'Частота приема препарата рецепта Author:Kulikovskiy';


--
-- TOC entry 14280 (class 0 OID 0)
-- Dependencies: 661
-- Name: COLUMN medic_frequency.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_frequency.oid IS 'Код';


--
-- TOC entry 14281 (class 0 OID 0)
-- Dependencies: 661
-- Name: COLUMN medic_frequency.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_frequency.name IS 'Название';


--
-- TOC entry 14282 (class 0 OID 0)
-- Dependencies: 661
-- Name: COLUMN medic_frequency.ncount; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_frequency.ncount IS 'Множитель (количество раз в день)';


--
-- TOC entry 662 (class 1259 OID 20328)
-- Dependencies: 14
-- Name: medic_given; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medic_given (
    id character(36) NOT NULL,
    presc_mark character(36),
    recipe character(36),
    medicgiven character(36),
    sotrfrom character(36),
    date_given date,
    date date,
    count numeric,
    position_doc character(36)
);


ALTER TABLE mir.medic_given OWNER TO postgres;

--
-- TOC entry 663 (class 1259 OID 20334)
-- Dependencies: 14
-- Name: medic_input_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medic_input_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.medic_input_type OWNER TO postgres;

--
-- TOC entry 14283 (class 0 OID 0)
-- Dependencies: 663
-- Name: TABLE medic_input_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medic_input_type IS 'Путь введения препарата рецепта Author:Kulikovskiy';


--
-- TOC entry 14284 (class 0 OID 0)
-- Dependencies: 663
-- Name: COLUMN medic_input_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_input_type.oid IS 'Код';


--
-- TOC entry 14285 (class 0 OID 0)
-- Dependencies: 663
-- Name: COLUMN medic_input_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_input_type.name IS 'Название';


--
-- TOC entry 664 (class 1259 OID 20337)
-- Dependencies: 14
-- Name: medic_name; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medic_name (
    oid character(36) NOT NULL,
    name character varying(255),
    lat_name character varying(255),
    code character varying(25),
    mnninteg character varying(13),
    mnntrade character varying(13)
);


ALTER TABLE mir.medic_name OWNER TO postgres;

--
-- TOC entry 14286 (class 0 OID 0)
-- Dependencies: 664
-- Name: TABLE medic_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medic_name IS 'Медицинские препараты для добавления в рецепт Author:Kulikovskiy';


--
-- TOC entry 14287 (class 0 OID 0)
-- Dependencies: 664
-- Name: COLUMN medic_name.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_name.oid IS 'Код';


--
-- TOC entry 14288 (class 0 OID 0)
-- Dependencies: 664
-- Name: COLUMN medic_name.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_name.name IS 'Название русское';


--
-- TOC entry 14289 (class 0 OID 0)
-- Dependencies: 664
-- Name: COLUMN medic_name.lat_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_name.lat_name IS 'Название латинское';


--
-- TOC entry 14290 (class 0 OID 0)
-- Dependencies: 664
-- Name: COLUMN medic_name.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_name.code IS 'Строковый код';


--
-- TOC entry 665 (class 1259 OID 20343)
-- Dependencies: 14
-- Name: medic_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medic_template (
    oid character(36) NOT NULL,
    name character varying(255),
    presctype_id character(36)
);


ALTER TABLE mir.medic_template OWNER TO postgres;

--
-- TOC entry 14291 (class 0 OID 0)
-- Dependencies: 665
-- Name: TABLE medic_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medic_template IS 'Шаблоны медикаментозных назначений (Рецептов с типом "Без рецепта")';


--
-- TOC entry 14292 (class 0 OID 0)
-- Dependencies: 665
-- Name: COLUMN medic_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_template.oid IS 'Первичный ключ';


--
-- TOC entry 14293 (class 0 OID 0)
-- Dependencies: 665
-- Name: COLUMN medic_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_template.name IS 'Название шаблона';


--
-- TOC entry 14294 (class 0 OID 0)
-- Dependencies: 665
-- Name: COLUMN medic_template.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medic_template.presctype_id IS 'Ссылка на тип назначений';


--
-- TOC entry 666 (class 1259 OID 20346)
-- Dependencies: 7186 7187 14
-- Name: medicalcare; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medicalcare (
    oid character(36) NOT NULL,
    name character varying(255),
    id integer,
    foms_code integer,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    parent character(36),
    CONSTRAINT "ck_medicalcare$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.medicalcare OWNER TO postgres;

--
-- TOC entry 14295 (class 0 OID 0)
-- Dependencies: 666
-- Name: TABLE medicalcare; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medicalcare IS 'Вид МП
';


--
-- TOC entry 14296 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.oid IS 'oid';


--
-- TOC entry 14297 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.name IS 'name';


--
-- TOC entry 14298 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.id IS 'идентификатор в системе минздравсоцразвития';


--
-- TOC entry 14299 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.foms_code IS 'код ФОМС';


--
-- TOC entry 14300 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14301 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14302 (class 0 OID 0)
-- Dependencies: 666
-- Name: COLUMN medicalcare.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcare.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 667 (class 1259 OID 20354)
-- Dependencies: 14
-- Name: medicalcondition; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medicalcondition (
    oid character(36) NOT NULL,
    foms_code integer,
    name character varying(255)
);


ALTER TABLE mir.medicalcondition OWNER TO postgres;

--
-- TOC entry 14303 (class 0 OID 0)
-- Dependencies: 667
-- Name: TABLE medicalcondition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medicalcondition IS 'Условия МП
';


--
-- TOC entry 14304 (class 0 OID 0)
-- Dependencies: 667
-- Name: COLUMN medicalcondition.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcondition.oid IS 'oid';


--
-- TOC entry 14305 (class 0 OID 0)
-- Dependencies: 667
-- Name: COLUMN medicalcondition.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcondition.foms_code IS 'код ФОМС';


--
-- TOC entry 14306 (class 0 OID 0)
-- Dependencies: 667
-- Name: COLUMN medicalcondition.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medicalcondition.name IS 'name';


--
-- TOC entry 668 (class 1259 OID 20357)
-- Dependencies: 14
-- Name: medictype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medictype (
    oid character(36) NOT NULL,
    islgot numeric(1,0),
    code character varying(100)
);


ALTER TABLE mir.medictype OWNER TO postgres;

--
-- TOC entry 14307 (class 0 OID 0)
-- Dependencies: 668
-- Name: TABLE medictype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medictype IS 'Справочник медикаментов';


--
-- TOC entry 14308 (class 0 OID 0)
-- Dependencies: 668
-- Name: COLUMN medictype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medictype.oid IS 'oid';


--
-- TOC entry 14309 (class 0 OID 0)
-- Dependencies: 668
-- Name: COLUMN medictype.islgot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medictype.islgot IS 'islgot';


--
-- TOC entry 14310 (class 0 OID 0)
-- Dependencies: 668
-- Name: COLUMN medictype.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medictype.code IS 'code';


--
-- TOC entry 669 (class 1259 OID 20360)
-- Dependencies: 14
-- Name: medremain; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medremain (
    oid character(36) NOT NULL,
    medictype character(36) NOT NULL,
    pharmacy character(36) NOT NULL,
    ondate date NOT NULL,
    remain numeric NOT NULL,
    lgota character(36)
);


ALTER TABLE mir.medremain OWNER TO postgres;

--
-- TOC entry 14311 (class 0 OID 0)
-- Dependencies: 669
-- Name: TABLE medremain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medremain IS 'MEDREMAIN';


--
-- TOC entry 14312 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.oid IS 'oid';


--
-- TOC entry 14313 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.medictype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.medictype IS 'medictype';


--
-- TOC entry 14314 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.pharmacy; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.pharmacy IS 'pharmacy';


--
-- TOC entry 14315 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.ondate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.ondate IS 'ondate';


--
-- TOC entry 14316 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.remain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.remain IS 'remain';


--
-- TOC entry 14317 (class 0 OID 0)
-- Dependencies: 669
-- Name: COLUMN medremain.lgota; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medremain.lgota IS 'lgota';


--
-- TOC entry 670 (class 1259 OID 20366)
-- Dependencies: 14
-- Name: medtyperls; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE medtyperls (
    oid character(36) NOT NULL,
    name character varying(255),
    tradename character varying(255),
    price numeric,
    rlsregion character(36),
    manufacture character varying(255)
);


ALTER TABLE mir.medtyperls OWNER TO postgres;

--
-- TOC entry 14318 (class 0 OID 0)
-- Dependencies: 670
-- Name: TABLE medtyperls; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE medtyperls IS 'Справочник лекарственных средств';


--
-- TOC entry 14319 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.oid IS 'oid';


--
-- TOC entry 14320 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.name IS 'name';


--
-- TOC entry 14321 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.tradename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.tradename IS 'tradename';


--
-- TOC entry 14322 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.price; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.price IS 'price';


--
-- TOC entry 14323 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.rlsregion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.rlsregion IS 'rlsregion';


--
-- TOC entry 14324 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN medtyperls.manufacture; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN medtyperls.manufacture IS 'manufacture';


--
-- TOC entry 671 (class 1259 OID 20372)
-- Dependencies: 7188 14
-- Name: messages; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE messages (
    oid character(36) NOT NULL,
    title character(50),
    text_message text,
    link character(36),
    datetime timestamp(0) without time zone NOT NULL,
    oid_destination character(36),
    oid_author character(36) NOT NULL,
    oid_presctype character(36),
    status integer DEFAULT 0
);


ALTER TABLE mir.messages OWNER TO postgres;

--
-- TOC entry 14325 (class 0 OID 0)
-- Dependencies: 671
-- Name: TABLE messages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE messages IS 'add by Podolskiy I.M. 14.03.2013
таблица используется в вопросах и ответах , от пациентов к врачам';


--
-- TOC entry 14326 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.oid IS 'oid';


--
-- TOC entry 14327 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.title IS 'заголовок';


--
-- TOC entry 14328 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.text_message; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.text_message IS 'текст';


--
-- TOC entry 14329 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.link IS 'связка с ответным сообщением';


--
-- TOC entry 14330 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.datetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.datetime IS 'дата и время отправления';


--
-- TOC entry 14331 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.oid_destination; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.oid_destination IS 'oid адресата';


--
-- TOC entry 14332 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.oid_author; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.oid_author IS 'oid автора';


--
-- TOC entry 14333 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.oid_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.oid_presctype IS 'oid специальности';


--
-- TOC entry 14334 (class 0 OID 0)
-- Dependencies: 671
-- Name: COLUMN messages.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN messages.status IS '0-новое сообщение, 1-В работе, 2-отвеченное, 3-вопрос решен';


--
-- TOC entry 672 (class 1259 OID 20379)
-- Dependencies: 14
-- Name: military; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE military (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.military OWNER TO postgres;

--
-- TOC entry 14335 (class 0 OID 0)
-- Dependencies: 672
-- Name: TABLE military; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE military IS 'Отношение к военной службе
';


--
-- TOC entry 14336 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN military.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN military.oid IS 'oid';


--
-- TOC entry 14337 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN military.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN military.id IS 'id';


--
-- TOC entry 14338 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN military.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN military.name IS 'name';


--
-- TOC entry 673 (class 1259 OID 20382)
-- Dependencies: 14
-- Name: mkb_10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mkb_10 (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(255),
    parent character(36),
    importcode character varying(255)
);


ALTER TABLE mir.mkb_10 OWNER TO postgres;

--
-- TOC entry 14339 (class 0 OID 0)
-- Dependencies: 673
-- Name: TABLE mkb_10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mkb_10 IS 'МКБ 10';


--
-- TOC entry 14340 (class 0 OID 0)
-- Dependencies: 673
-- Name: COLUMN mkb_10.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10.oid IS 'oid';


--
-- TOC entry 14341 (class 0 OID 0)
-- Dependencies: 673
-- Name: COLUMN mkb_10.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10.name IS 'name';


--
-- TOC entry 14342 (class 0 OID 0)
-- Dependencies: 673
-- Name: COLUMN mkb_10.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10.code IS 'code';


--
-- TOC entry 14343 (class 0 OID 0)
-- Dependencies: 673
-- Name: COLUMN mkb_10.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10.parent IS 'parent';


--
-- TOC entry 674 (class 1259 OID 20388)
-- Dependencies: 14
-- Name: mkb_10_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mkb_10_template (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.mkb_10_template OWNER TO postgres;

--
-- TOC entry 14344 (class 0 OID 0)
-- Dependencies: 674
-- Name: TABLE mkb_10_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mkb_10_template IS 'шаблоны справочника МКБ10';


--
-- TOC entry 14345 (class 0 OID 0)
-- Dependencies: 674
-- Name: COLUMN mkb_10_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10_template.oid IS 'oid';


--
-- TOC entry 14346 (class 0 OID 0)
-- Dependencies: 674
-- Name: COLUMN mkb_10_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10_template.name IS 'название шаблона';


--
-- TOC entry 675 (class 1259 OID 20391)
-- Dependencies: 14
-- Name: mkb_10_template_list; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mkb_10_template_list (
    mkb10_template character(36) NOT NULL,
    mkb10 character(36) NOT NULL
);


ALTER TABLE mir.mkb_10_template_list OWNER TO postgres;

--
-- TOC entry 14347 (class 0 OID 0)
-- Dependencies: 675
-- Name: TABLE mkb_10_template_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mkb_10_template_list IS 'список элементов справочника МКБ10 для шаблонов';


--
-- TOC entry 14348 (class 0 OID 0)
-- Dependencies: 675
-- Name: COLUMN mkb_10_template_list.mkb10_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10_template_list.mkb10_template IS 'шаблон мкб10';


--
-- TOC entry 14349 (class 0 OID 0)
-- Dependencies: 675
-- Name: COLUMN mkb_10_template_list.mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mkb_10_template_list.mkb10 IS 'мкб10';


--
-- TOC entry 676 (class 1259 OID 20394)
-- Dependencies: 7189 14
-- Name: monitoring_imt; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_imt (
    oid character(36) NOT NULL,
    weight numeric NOT NULL,
    height numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.monitoring_imt OWNER TO postgres;

--
-- TOC entry 14350 (class 0 OID 0)
-- Dependencies: 676
-- Name: TABLE monitoring_imt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_imt IS 'monitoring_imt';


--
-- TOC entry 14351 (class 0 OID 0)
-- Dependencies: 676
-- Name: COLUMN monitoring_imt.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_imt.oid IS 'oid';


--
-- TOC entry 14352 (class 0 OID 0)
-- Dependencies: 676
-- Name: COLUMN monitoring_imt.weight; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_imt.weight IS 'weight';


--
-- TOC entry 14353 (class 0 OID 0)
-- Dependencies: 676
-- Name: COLUMN monitoring_imt.height; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_imt.height IS 'height';


--
-- TOC entry 14354 (class 0 OID 0)
-- Dependencies: 676
-- Name: COLUMN monitoring_imt.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_imt.add_date IS 'add_date';


--
-- TOC entry 14355 (class 0 OID 0)
-- Dependencies: 676
-- Name: COLUMN monitoring_imt.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_imt.people IS 'people';


--
-- TOC entry 677 (class 1259 OID 20401)
-- Dependencies: 7190 14
-- Name: monitoring_phisical_activity; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_phisical_activity (
    oid character(36) NOT NULL,
    phisical_activity character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL,
    comment character varying
);


ALTER TABLE mir.monitoring_phisical_activity OWNER TO postgres;

--
-- TOC entry 14356 (class 0 OID 0)
-- Dependencies: 677
-- Name: TABLE monitoring_phisical_activity; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_phisical_activity IS 'monitoring_phisical_activity';


--
-- TOC entry 14357 (class 0 OID 0)
-- Dependencies: 677
-- Name: COLUMN monitoring_phisical_activity.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_phisical_activity.oid IS 'oid';


--
-- TOC entry 14358 (class 0 OID 0)
-- Dependencies: 677
-- Name: COLUMN monitoring_phisical_activity.phisical_activity; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_phisical_activity.phisical_activity IS 'phisical_activity';


--
-- TOC entry 14359 (class 0 OID 0)
-- Dependencies: 677
-- Name: COLUMN monitoring_phisical_activity.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_phisical_activity.add_date IS 'add_date';


--
-- TOC entry 14360 (class 0 OID 0)
-- Dependencies: 677
-- Name: COLUMN monitoring_phisical_activity.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_phisical_activity.people IS 'people';


--
-- TOC entry 14361 (class 0 OID 0)
-- Dependencies: 677
-- Name: COLUMN monitoring_phisical_activity.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_phisical_activity.comment IS 'comment';


--
-- TOC entry 678 (class 1259 OID 20408)
-- Dependencies: 7191 14
-- Name: monitoring_press; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_press (
    oid character(36) NOT NULL,
    value_up numeric NOT NULL,
    value_down numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.monitoring_press OWNER TO postgres;

--
-- TOC entry 14362 (class 0 OID 0)
-- Dependencies: 678
-- Name: TABLE monitoring_press; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_press IS 'monitoring_press';


--
-- TOC entry 14363 (class 0 OID 0)
-- Dependencies: 678
-- Name: COLUMN monitoring_press.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_press.oid IS 'oid';


--
-- TOC entry 14364 (class 0 OID 0)
-- Dependencies: 678
-- Name: COLUMN monitoring_press.value_up; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_press.value_up IS 'систалическое давление';


--
-- TOC entry 14365 (class 0 OID 0)
-- Dependencies: 678
-- Name: COLUMN monitoring_press.value_down; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_press.value_down IS 'диастолическое давление';


--
-- TOC entry 14366 (class 0 OID 0)
-- Dependencies: 678
-- Name: COLUMN monitoring_press.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_press.add_date IS 'add date';


--
-- TOC entry 14367 (class 0 OID 0)
-- Dependencies: 678
-- Name: COLUMN monitoring_press.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_press.people IS 'people';


--
-- TOC entry 679 (class 1259 OID 20415)
-- Dependencies: 7192 14
-- Name: monitoring_puls; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_puls (
    oid character(36) NOT NULL,
    value numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.monitoring_puls OWNER TO postgres;

--
-- TOC entry 14368 (class 0 OID 0)
-- Dependencies: 679
-- Name: TABLE monitoring_puls; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_puls IS 'monitoring_puls';


--
-- TOC entry 14369 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN monitoring_puls.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_puls.oid IS 'oid';


--
-- TOC entry 14370 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN monitoring_puls.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_puls.value IS 'value';


--
-- TOC entry 14371 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN monitoring_puls.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_puls.add_date IS 'add_date';


--
-- TOC entry 14372 (class 0 OID 0)
-- Dependencies: 679
-- Name: COLUMN monitoring_puls.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_puls.people IS 'people';


--
-- TOC entry 680 (class 1259 OID 20422)
-- Dependencies: 7193 14
-- Name: monitoring_sugar; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_sugar (
    oid character(36) NOT NULL,
    value numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.monitoring_sugar OWNER TO postgres;

--
-- TOC entry 14373 (class 0 OID 0)
-- Dependencies: 680
-- Name: TABLE monitoring_sugar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_sugar IS 'monitoring_sugar';


--
-- TOC entry 14374 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN monitoring_sugar.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_sugar.oid IS 'oid';


--
-- TOC entry 14375 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN monitoring_sugar.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_sugar.value IS 'value';


--
-- TOC entry 14376 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN monitoring_sugar.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_sugar.add_date IS 'add_date';


--
-- TOC entry 14377 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN monitoring_sugar.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_sugar.people IS 'people';


--
-- TOC entry 681 (class 1259 OID 20429)
-- Dependencies: 7194 14
-- Name: monitoring_temperature; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE monitoring_temperature (
    oid character(36) NOT NULL,
    value numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.monitoring_temperature OWNER TO postgres;

--
-- TOC entry 14378 (class 0 OID 0)
-- Dependencies: 681
-- Name: TABLE monitoring_temperature; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE monitoring_temperature IS 'monitoring_temperature';


--
-- TOC entry 14379 (class 0 OID 0)
-- Dependencies: 681
-- Name: COLUMN monitoring_temperature.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_temperature.oid IS 'oid';


--
-- TOC entry 14380 (class 0 OID 0)
-- Dependencies: 681
-- Name: COLUMN monitoring_temperature.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_temperature.value IS 'value';


--
-- TOC entry 14381 (class 0 OID 0)
-- Dependencies: 681
-- Name: COLUMN monitoring_temperature.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_temperature.add_date IS 'add_date';


--
-- TOC entry 14382 (class 0 OID 0)
-- Dependencies: 681
-- Name: COLUMN monitoring_temperature.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN monitoring_temperature.people IS 'people';


--
-- TOC entry 682 (class 1259 OID 20436)
-- Dependencies: 14
-- Name: move_people_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE move_people_log (
    people_new character(36),
    people_old character(36),
    date_move date,
    username character varying(100)
);


ALTER TABLE mir.move_people_log OWNER TO postgres;

--
-- TOC entry 14383 (class 0 OID 0)
-- Dependencies: 682
-- Name: TABLE move_people_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE move_people_log IS 'Лог переноса пациента';


--
-- TOC entry 14384 (class 0 OID 0)
-- Dependencies: 682
-- Name: COLUMN move_people_log.people_new; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN move_people_log.people_new IS 'people_new';


--
-- TOC entry 14385 (class 0 OID 0)
-- Dependencies: 682
-- Name: COLUMN move_people_log.people_old; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN move_people_log.people_old IS 'people_old';


--
-- TOC entry 14386 (class 0 OID 0)
-- Dependencies: 682
-- Name: COLUMN move_people_log.date_move; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN move_people_log.date_move IS 'date_move';


--
-- TOC entry 14387 (class 0 OID 0)
-- Dependencies: 682
-- Name: COLUMN move_people_log.username; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN move_people_log.username IS 'username';


--
-- TOC entry 683 (class 1259 OID 20439)
-- Dependencies: 7195 14
-- Name: mparam; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mparam (
    id character(36) NOT NULL,
    parent_id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    type_name character varying(30),
    default_value character varying(100),
    name character varying(100),
    required integer DEFAULT 0 NOT NULL,
    order_ integer
);


ALTER TABLE mir.mparam OWNER TO postgres;

--
-- TOC entry 14388 (class 0 OID 0)
-- Dependencies: 683
-- Name: TABLE mparam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE mparam IS 'Параметры мед.манипуляций. Author: Kulbatsky Dmitry Author: A.Nakorjakov';


--
-- TOC entry 14389 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.id IS 'SEQUENCE=[MIS.SQ_MPARAM]';


--
-- TOC entry 14390 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.parent_id IS 'MPARAM.ID';


--
-- TOC entry 14391 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.presctype_id IS 'presctype_id';


--
-- TOC entry 14392 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.type_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.type_name IS 'type_name';


--
-- TOC entry 14393 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.default_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.default_value IS 'Значение по умолчанию';


--
-- TOC entry 14394 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.name IS 'Название параметра';


--
-- TOC entry 14395 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.required; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.required IS 'Обязательно для заполнения? 0 - нет; 1 - lf';


--
-- TOC entry 14396 (class 0 OID 0)
-- Dependencies: 683
-- Name: COLUMN mparam.order_; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN mparam.order_ IS 'Порядок сортировки';


--
-- TOC entry 684 (class 1259 OID 20443)
-- Dependencies: 7196 7197 14
-- Name: msec_conclusin; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE msec_conclusin (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_msec_conclusin$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.msec_conclusin OWNER TO postgres;

--
-- TOC entry 14397 (class 0 OID 0)
-- Dependencies: 684
-- Name: TABLE msec_conclusin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE msec_conclusin IS 'msec_conclusin';


--
-- TOC entry 14398 (class 0 OID 0)
-- Dependencies: 684
-- Name: COLUMN msec_conclusin.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_conclusin.oid IS 'oid';


--
-- TOC entry 14399 (class 0 OID 0)
-- Dependencies: 684
-- Name: COLUMN msec_conclusin.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_conclusin.name IS 'name';


--
-- TOC entry 14400 (class 0 OID 0)
-- Dependencies: 684
-- Name: COLUMN msec_conclusin.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_conclusin.short_name IS 'short_name';


--
-- TOC entry 14401 (class 0 OID 0)
-- Dependencies: 684
-- Name: COLUMN msec_conclusin.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_conclusin.show IS 'show';


--
-- TOC entry 685 (class 1259 OID 20451)
-- Dependencies: 14
-- Name: msec_main; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE msec_main (
    oid character(36) NOT NULL,
    vk_main_id character(36) NOT NULL,
    number character varying(255),
    date_napr date,
    msec_target character(36),
    msec_conclusion_id character(36),
    description text,
    invalid_group_id character(36),
    date_end_napr date,
    date_conclusion date
);


ALTER TABLE mir.msec_main OWNER TO postgres;

--
-- TOC entry 14402 (class 0 OID 0)
-- Dependencies: 685
-- Name: TABLE msec_main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE msec_main IS 'msec_main';


--
-- TOC entry 14403 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.oid IS 'oid';


--
-- TOC entry 14404 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.vk_main_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.vk_main_id IS 'vk_main_id';


--
-- TOC entry 14405 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.number IS 'number';


--
-- TOC entry 14406 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.date_napr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.date_napr IS 'date_napr';


--
-- TOC entry 14407 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.msec_target; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.msec_target IS 'msec_target';


--
-- TOC entry 14408 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.msec_conclusion_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.msec_conclusion_id IS 'msec_conclusion_id';


--
-- TOC entry 14409 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.description IS 'description';


--
-- TOC entry 14410 (class 0 OID 0)
-- Dependencies: 685
-- Name: COLUMN msec_main.invalid_group_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_main.invalid_group_id IS 'invalid_group_id';


--
-- TOC entry 686 (class 1259 OID 20457)
-- Dependencies: 7198 7199 14
-- Name: msec_target; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE msec_target (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_msec_target$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.msec_target OWNER TO postgres;

--
-- TOC entry 14411 (class 0 OID 0)
-- Dependencies: 686
-- Name: TABLE msec_target; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE msec_target IS 'msec_target';


--
-- TOC entry 14412 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN msec_target.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_target.oid IS 'oid';


--
-- TOC entry 14413 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN msec_target.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_target.name IS 'name';


--
-- TOC entry 14414 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN msec_target.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_target.short_name IS 'short_name';


--
-- TOC entry 14415 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN msec_target.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN msec_target.show IS 'show';


--
-- TOC entry 1299 (class 1259 OID 60549)
-- Dependencies: 14
-- Name: mylog; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE mylog (
    f1 character varying(200)
);
ALTER TABLE ONLY mylog ALTER COLUMN f1 SET STATISTICS 0;


ALTER TABLE mir.mylog OWNER TO postgres;

--
-- TOC entry 687 (class 1259 OID 20465)
-- Dependencies: 14
-- Name: myphonetype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE myphonetype (
    oid character(36) NOT NULL
);


ALTER TABLE mir.myphonetype OWNER TO postgres;

--
-- TOC entry 14416 (class 0 OID 0)
-- Dependencies: 687
-- Name: TABLE myphonetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE myphonetype IS 'Типы телефонов';


--
-- TOC entry 14417 (class 0 OID 0)
-- Dependencies: 687
-- Name: COLUMN myphonetype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN myphonetype.oid IS 'oid';


--
-- TOC entry 688 (class 1259 OID 20468)
-- Dependencies: 14
-- Name: nacionality; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nacionality (
    oid character(36) NOT NULL,
    parent character(36),
    name character varying(255),
    synonim character varying(255),
    id integer,
    parentid integer
);


ALTER TABLE mir.nacionality OWNER TO postgres;

--
-- TOC entry 14418 (class 0 OID 0)
-- Dependencies: 688
-- Name: TABLE nacionality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nacionality IS 'НАЦИОНАЛЬНОСТЬ Author: Spasskiy S.N.';


--
-- TOC entry 14419 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.oid IS 'oid';


--
-- TOC entry 14420 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.parent IS 'parent';


--
-- TOC entry 14421 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.name IS 'name';


--
-- TOC entry 14422 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.synonim IS 'synonim';


--
-- TOC entry 14423 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.id IS 'id';


--
-- TOC entry 14424 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN nacionality.parentid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nacionality.parentid IS 'parentid';


--
-- TOC entry 689 (class 1259 OID 20474)
-- Dependencies: 7200 7201 14
-- Name: names; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE names (
    oid character(36) NOT NULL,
    name character varying(255),
    sex numeric(1,0) DEFAULT 0,
    isnew character varying(10),
    CONSTRAINT "ck_names$sex" CHECK (((sex IS NULL) OR ((sex >= (0)::numeric) AND (sex <= (1)::numeric))))
);


ALTER TABLE mir.names OWNER TO postgres;

--
-- TOC entry 14425 (class 0 OID 0)
-- Dependencies: 689
-- Name: TABLE names; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE names IS 'names';


--
-- TOC entry 14426 (class 0 OID 0)
-- Dependencies: 689
-- Name: COLUMN names.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN names.oid IS 'oid';


--
-- TOC entry 14427 (class 0 OID 0)
-- Dependencies: 689
-- Name: COLUMN names.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN names.name IS 'name';


--
-- TOC entry 14428 (class 0 OID 0)
-- Dependencies: 689
-- Name: COLUMN names.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN names.sex IS 'sex 0 - Жен. 1 - Муж.';


--
-- TOC entry 14429 (class 0 OID 0)
-- Dependencies: 689
-- Name: COLUMN names.isnew; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN names.isnew IS 'Разделение новых элементов в базе';


--
-- TOC entry 690 (class 1259 OID 20479)
-- Dependencies: 14
-- Name: narcogroups; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE narcogroups (
    id integer NOT NULL,
    name character varying(1024)
);


ALTER TABLE mir.narcogroups OWNER TO postgres;

--
-- TOC entry 14430 (class 0 OID 0)
-- Dependencies: 690
-- Name: TABLE narcogroups; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE narcogroups IS 'Группы наркотических веществ';


--
-- TOC entry 14431 (class 0 OID 0)
-- Dependencies: 690
-- Name: COLUMN narcogroups.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN narcogroups.id IS 'Первичный ключ';


--
-- TOC entry 14432 (class 0 OID 0)
-- Dependencies: 690
-- Name: COLUMN narcogroups.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN narcogroups.name IS 'Название группы НВ';


--
-- TOC entry 691 (class 1259 OID 20485)
-- Dependencies: 14
-- Name: natural_factor; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE natural_factor (
    oid character(36) NOT NULL,
    sanatorium character(36) NOT NULL,
    natural_factor_type character(36) NOT NULL,
    natural_factor_name character varying(255),
    object_name character varying(255),
    objects integer,
    document character varying(255),
    document_number character varying(255),
    document_date_delivery timestamp without time zone,
    document_date_begin timestamp without time zone,
    document_date_end timestamp without time zone
);


ALTER TABLE mir.natural_factor OWNER TO postgres;

--
-- TOC entry 14433 (class 0 OID 0)
-- Dependencies: 691
-- Name: TABLE natural_factor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE natural_factor IS 'Природно-лечебные факторы';


--
-- TOC entry 14434 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.oid IS 'oid';


--
-- TOC entry 14435 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.sanatorium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.sanatorium IS 'sanatorium';


--
-- TOC entry 14436 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.natural_factor_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.natural_factor_type IS 'тип';


--
-- TOC entry 14437 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.natural_factor_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.natural_factor_name IS 'наименование';


--
-- TOC entry 14438 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.object_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.object_name IS 'наименование объекта/места использования';


--
-- TOC entry 14439 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.objects; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.objects IS 'количество объектов';


--
-- TOC entry 14440 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.document IS 'документ';


--
-- TOC entry 14441 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.document_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.document_number IS 'номер';


--
-- TOC entry 14442 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.document_date_delivery; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.document_date_delivery IS 'дата выдачи';


--
-- TOC entry 14443 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.document_date_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.document_date_begin IS 'дата начала действия';


--
-- TOC entry 14444 (class 0 OID 0)
-- Dependencies: 691
-- Name: COLUMN natural_factor.document_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor.document_date_end IS 'дата  окончания действия';


--
-- TOC entry 692 (class 1259 OID 20491)
-- Dependencies: 7202 7203 14
-- Name: natural_factor_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE natural_factor_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_natural_factor_typ$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.natural_factor_type OWNER TO postgres;

--
-- TOC entry 14445 (class 0 OID 0)
-- Dependencies: 692
-- Name: TABLE natural_factor_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE natural_factor_type IS 'natural_factor_type';


--
-- TOC entry 14446 (class 0 OID 0)
-- Dependencies: 692
-- Name: COLUMN natural_factor_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor_type.oid IS 'oid';


--
-- TOC entry 14447 (class 0 OID 0)
-- Dependencies: 692
-- Name: COLUMN natural_factor_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor_type.name IS 'name';


--
-- TOC entry 14448 (class 0 OID 0)
-- Dependencies: 692
-- Name: COLUMN natural_factor_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14449 (class 0 OID 0)
-- Dependencies: 692
-- Name: COLUMN natural_factor_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14450 (class 0 OID 0)
-- Dependencies: 692
-- Name: COLUMN natural_factor_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN natural_factor_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 693 (class 1259 OID 20499)
-- Dependencies: 14
-- Name: newborn_state; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE newborn_state (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.newborn_state OWNER TO postgres;

--
-- TOC entry 14451 (class 0 OID 0)
-- Dependencies: 693
-- Name: TABLE newborn_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE newborn_state IS 'состояние новорожденного';


--
-- TOC entry 14452 (class 0 OID 0)
-- Dependencies: 693
-- Name: COLUMN newborn_state.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN newborn_state.oid IS 'oid';


--
-- TOC entry 14453 (class 0 OID 0)
-- Dependencies: 693
-- Name: COLUMN newborn_state.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN newborn_state.name IS 'name';


--
-- TOC entry 694 (class 1259 OID 20502)
-- Dependencies: 7204 7205 7206 7207 7208 14
-- Name: news; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE news (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    title character(256) NOT NULL,
    body text,
    sysdate timestamp(0) without time zone DEFAULT now(),
    create_date timestamp(0) without time zone DEFAULT now(),
    start_date timestamp(0) without time zone,
    is_active boolean DEFAULT true NOT NULL,
    rmis_active boolean DEFAULT false NOT NULL,
    selfrecord_active boolean DEFAULT false NOT NULL
);


ALTER TABLE mir.news OWNER TO postgres;

--
-- TOC entry 14454 (class 0 OID 0)
-- Dependencies: 694
-- Name: TABLE news; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE news IS 'Новости';


--
-- TOC entry 14455 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.title IS 'заголовок';


--
-- TOC entry 14456 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.body; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.body IS 'новость в формате html';


--
-- TOC entry 14457 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.start_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.start_date IS 'дата начала показа, если отображать не сразу';


--
-- TOC entry 14458 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.is_active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.is_active IS 'отображать ли новость';


--
-- TOC entry 14459 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.rmis_active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.rmis_active IS 'отображать ли в РМИС';


--
-- TOC entry 14460 (class 0 OID 0)
-- Dependencies: 694
-- Name: COLUMN news.selfrecord_active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN news.selfrecord_active IS 'отображать ли в Самозаписи';


--
-- TOC entry 695 (class 1259 OID 20513)
-- Dependencies: 14
-- Name: nomen; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nomen (
    id bigint NOT NULL,
    prepid bigint NOT NULL,
    firmid bigint NOT NULL,
    ppackid bigint NOT NULL,
    drugsinppack bigint,
    ppackmass numeric(14,6),
    ppackmassunid bigint NOT NULL,
    ppackvolume numeric(14,4),
    ppackcubunid bigint NOT NULL,
    setid bigint NOT NULL,
    upackid bigint NOT NULL,
    ppackinupack bigint,
    inangro text NOT NULL,
    eancode character varying,
    condid bigint NOT NULL,
    lifeid bigint NOT NULL,
    priceinrub numeric(10,2),
    priceorder character varying,
    pricedate date,
    priceincurr numeric(10,2),
    currid bigint NOT NULL,
    drugstorcond text,
    druglifetime text,
    spackid bigint NOT NULL,
    upackinspack bigint
);


ALTER TABLE mir.nomen OWNER TO postgres;

--
-- TOC entry 696 (class 1259 OID 20519)
-- Dependencies: 14
-- Name: nomen_desc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nomen_desc (
    nomenid integer NOT NULL,
    descid integer NOT NULL,
    number smallint
);


ALTER TABLE mir.nomen_desc OWNER TO postgres;

--
-- TOC entry 14461 (class 0 OID 0)
-- Dependencies: 696
-- Name: TABLE nomen_desc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nomen_desc IS 'Номенклатура описаний';


--
-- TOC entry 14462 (class 0 OID 0)
-- Dependencies: 696
-- Name: COLUMN nomen_desc.nomenid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nomen_desc.nomenid IS 'Код упаковки препарата - внешний ключ на таблицу "NOMEN"';


--
-- TOC entry 14463 (class 0 OID 0)
-- Dependencies: 696
-- Name: COLUMN nomen_desc.descid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nomen_desc.descid IS 'Код описания - внешний ключ на таблицу "DESCRIPTIONS"';


--
-- TOC entry 14464 (class 0 OID 0)
-- Dependencies: 696
-- Name: COLUMN nomen_desc.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nomen_desc.number IS 'Номер упаковки препарата внутри описания';


--
-- TOC entry 697 (class 1259 OID 20522)
-- Dependencies: 14
-- Name: nosology; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nosology (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer
);


ALTER TABLE mir.nosology OWNER TO postgres;

--
-- TOC entry 14465 (class 0 OID 0)
-- Dependencies: 697
-- Name: TABLE nosology; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nosology IS 'Справочник Нозология';


--
-- TOC entry 14466 (class 0 OID 0)
-- Dependencies: 697
-- Name: COLUMN nosology.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology.oid IS 'oid';


--
-- TOC entry 14467 (class 0 OID 0)
-- Dependencies: 697
-- Name: COLUMN nosology.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology.name IS 'name';


--
-- TOC entry 14468 (class 0 OID 0)
-- Dependencies: 697
-- Name: COLUMN nosology.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology.foms_code IS 'код ФОМС';


--
-- TOC entry 698 (class 1259 OID 20525)
-- Dependencies: 14
-- Name: nosology_mkb10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nosology_mkb10 (
    oid character(36) NOT NULL,
    nosology character(36) NOT NULL,
    mkb10 character(36) NOT NULL
);


ALTER TABLE mir.nosology_mkb10 OWNER TO postgres;

--
-- TOC entry 14469 (class 0 OID 0)
-- Dependencies: 698
-- Name: TABLE nosology_mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nosology_mkb10 IS 'Связка нозологии и mkb10
edited by S.Ponomarenko';


--
-- TOC entry 14470 (class 0 OID 0)
-- Dependencies: 698
-- Name: COLUMN nosology_mkb10.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10.oid IS 'oid';


--
-- TOC entry 14471 (class 0 OID 0)
-- Dependencies: 698
-- Name: COLUMN nosology_mkb10.nosology; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10.nosology IS 'nosology';


--
-- TOC entry 14472 (class 0 OID 0)
-- Dependencies: 698
-- Name: COLUMN nosology_mkb10.mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10.mkb10 IS 'mkb10';


--
-- TOC entry 699 (class 1259 OID 20528)
-- Dependencies: 14
-- Name: nosology_mkb10_benefitmedic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nosology_mkb10_benefitmedic (
    oid character(36) NOT NULL,
    nosology_mkb10 character(36) NOT NULL,
    benefit_medic character(36) NOT NULL,
    description character varying(255),
    dl numeric(9,0)
);


ALTER TABLE mir.nosology_mkb10_benefitmedic OWNER TO postgres;

--
-- TOC entry 14473 (class 0 OID 0)
-- Dependencies: 699
-- Name: TABLE nosology_mkb10_benefitmedic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nosology_mkb10_benefitmedic IS 'Связка нозологии , mkb10 и льготного лекарства
created by S.Ponomarenko';


--
-- TOC entry 14474 (class 0 OID 0)
-- Dependencies: 699
-- Name: COLUMN nosology_mkb10_benefitmedic.nosology_mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10_benefitmedic.nosology_mkb10 IS 'nosology_mkb10';


--
-- TOC entry 14475 (class 0 OID 0)
-- Dependencies: 699
-- Name: COLUMN nosology_mkb10_benefitmedic.benefit_medic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10_benefitmedic.benefit_medic IS 'benefit_medic';


--
-- TOC entry 14476 (class 0 OID 0)
-- Dependencies: 699
-- Name: COLUMN nosology_mkb10_benefitmedic.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10_benefitmedic.description IS 'описание';


--
-- TOC entry 14477 (class 0 OID 0)
-- Dependencies: 699
-- Name: COLUMN nosology_mkb10_benefitmedic.dl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nosology_mkb10_benefitmedic.dl IS 'для чего-не знаю';


--
-- TOC entry 700 (class 1259 OID 20531)
-- Dependencies: 14
-- Name: nosology_mkb10_benefitmedic_upload; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nosology_mkb10_benefitmedic_upload (
    oid character(36) NOT NULL,
    foms_title character(36),
    name_n character(37),
    cn numeric(1,0),
    mkb character(6),
    cod_ls numeric(8,0),
    name_ls character(164),
    prim character(18),
    dl numeric(9,0)
);


ALTER TABLE mir.nosology_mkb10_benefitmedic_upload OWNER TO postgres;

--
-- TOC entry 701 (class 1259 OID 20534)
-- Dependencies: 14
-- Name: nsi_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nsi_log (
    oid character varying(36) NOT NULL,
    dictionary character varying(255) NOT NULL,
    date_update timestamp without time zone NOT NULL,
    version character varying(255) NOT NULL
);


ALTER TABLE mir.nsi_log OWNER TO postgres;

--
-- TOC entry 14478 (class 0 OID 0)
-- Dependencies: 701
-- Name: COLUMN nsi_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nsi_log.oid IS 'oid';


--
-- TOC entry 14479 (class 0 OID 0)
-- Dependencies: 701
-- Name: COLUMN nsi_log.dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nsi_log.dictionary IS 'название справочника';


--
-- TOC entry 14480 (class 0 OID 0)
-- Dependencies: 701
-- Name: COLUMN nsi_log.date_update; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nsi_log.date_update IS 'дата последнего обновления';


--
-- TOC entry 14481 (class 0 OID 0)
-- Dependencies: 701
-- Name: COLUMN nsi_log.version; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nsi_log.version IS 'последняя загруженная версия справочника';


--
-- TOC entry 702 (class 1259 OID 20540)
-- Dependencies: 14
-- Name: num_agreement_seq; Type: SEQUENCE; Schema: mir; Owner: postgres
--

CREATE SEQUENCE num_agreement_seq
    START WITH 2
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 999999
    CACHE 1;


ALTER TABLE mir.num_agreement_seq OWNER TO postgres;

--
-- TOC entry 14482 (class 0 OID 0)
-- Dependencies: 702
-- Name: SEQUENCE num_agreement_seq; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON SEQUENCE num_agreement_seq IS 'Секвенция для номера договора Платных услуг by Shpielevoy D.I. ';


--
-- TOC entry 703 (class 1259 OID 20542)
-- Dependencies: 14
-- Name: num_bill_seq; Type: SEQUENCE; Schema: mir; Owner: postgres
--

CREATE SEQUENCE num_bill_seq
    START WITH 2
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 999999999
    CACHE 1;


ALTER TABLE mir.num_bill_seq OWNER TO postgres;

--
-- TOC entry 704 (class 1259 OID 20544)
-- Dependencies: 14
-- Name: nursing_baby; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE nursing_baby (
    oid character(36) NOT NULL,
    people_oid character(36),
    from0to3 integer,
    from4to6 integer,
    from7to9 integer,
    group_health integer,
    icd10_id character(36),
    homedoctor_emp_id character(36),
    homemed_emp_id character(36)
);


ALTER TABLE mir.nursing_baby OWNER TO postgres;

--
-- TOC entry 14483 (class 0 OID 0)
-- Dependencies: 704
-- Name: TABLE nursing_baby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE nursing_baby IS 'Дородовый патронаж.  Author: Blazko';


--
-- TOC entry 14484 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.oid IS 'id';


--
-- TOC entry 14485 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.people_oid IS 'people_id';


--
-- TOC entry 14486 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.from0to3; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.from0to3 IS 'от 0 до 3х месяцев';


--
-- TOC entry 14487 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.from4to6; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.from4to6 IS 'от 4х до 6 месяцев';


--
-- TOC entry 14488 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.from7to9; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.from7to9 IS 'от 7ми до 9ти месяцев';


--
-- TOC entry 14489 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.group_health; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.group_health IS 'Группа здоровья';


--
-- TOC entry 14490 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.icd10_id IS 'Диагноз';


--
-- TOC entry 14491 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.homedoctor_emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.homedoctor_emp_id IS 'Наблюдение на дому врача ';


--
-- TOC entry 14492 (class 0 OID 0)
-- Dependencies: 704
-- Name: COLUMN nursing_baby.homemed_emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN nursing_baby.homemed_emp_id IS 'Наблюдение на дому медсестра';


--
-- TOC entry 705 (class 1259 OID 20547)
-- Dependencies: 7209 7210 14
-- Name: okato; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE okato (
    oid character(36) NOT NULL,
    name character varying(255),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer,
    CONSTRAINT "ck_okato$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.okato OWNER TO postgres;

--
-- TOC entry 14493 (class 0 OID 0)
-- Dependencies: 705
-- Name: TABLE okato; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE okato IS 'справочник ОКАТО';


--
-- TOC entry 14494 (class 0 OID 0)
-- Dependencies: 705
-- Name: COLUMN okato.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN okato.oid IS 'oid';


--
-- TOC entry 14495 (class 0 OID 0)
-- Dependencies: 705
-- Name: COLUMN okato.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN okato.name IS 'name';


--
-- TOC entry 14496 (class 0 OID 0)
-- Dependencies: 705
-- Name: COLUMN okato.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN okato.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14497 (class 0 OID 0)
-- Dependencies: 705
-- Name: COLUMN okato.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN okato.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14498 (class 0 OID 0)
-- Dependencies: 705
-- Name: COLUMN okato.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN okato.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 706 (class 1259 OID 20555)
-- Dependencies: 14
-- Name: oncologylist; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oncologylist (
    oid character(36) NOT NULL,
    year character varying(255),
    oid_mdoc character(36)
);


ALTER TABLE mir.oncologylist OWNER TO postgres;

--
-- TOC entry 14499 (class 0 OID 0)
-- Dependencies: 706
-- Name: TABLE oncologylist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE oncologylist IS 'oncologylist';


--
-- TOC entry 14500 (class 0 OID 0)
-- Dependencies: 706
-- Name: COLUMN oncologylist.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylist.oid IS 'oid';


--
-- TOC entry 14501 (class 0 OID 0)
-- Dependencies: 706
-- Name: COLUMN oncologylist.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylist.year IS 'year';


--
-- TOC entry 14502 (class 0 OID 0)
-- Dependencies: 706
-- Name: COLUMN oncologylist.oid_mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylist.oid_mdoc IS 'oid_mdoc';


--
-- TOC entry 707 (class 1259 OID 20558)
-- Dependencies: 14
-- Name: oncologylistdetail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oncologylistdetail (
    oid character(36) NOT NULL,
    dt date,
    oid_mkb10 character(36),
    oid_onkopar character(36),
    dt_doobsled date,
    result_obsled character varying(255),
    oid_onkolist character(36)
);


ALTER TABLE mir.oncologylistdetail OWNER TO postgres;

--
-- TOC entry 14503 (class 0 OID 0)
-- Dependencies: 707
-- Name: TABLE oncologylistdetail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE oncologylistdetail IS 'oncologylistdetail';


--
-- TOC entry 14504 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.oid IS 'oid';


--
-- TOC entry 14505 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.dt IS 'Дата осмотра';


--
-- TOC entry 14506 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.oid_mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.oid_mkb10 IS 'id МКБ10';


--
-- TOC entry 14507 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.oid_onkopar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.oid_onkopar IS 'Обследуемый онко параметр';


--
-- TOC entry 14508 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.dt_doobsled; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.dt_doobsled IS 'Дата дообследования';


--
-- TOC entry 14509 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.result_obsled; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.result_obsled IS 'Результат обследования';


--
-- TOC entry 14510 (class 0 OID 0)
-- Dependencies: 707
-- Name: COLUMN oncologylistdetail.oid_onkolist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologylistdetail.oid_onkolist IS 'oid_onkolist';


--
-- TOC entry 708 (class 1259 OID 20561)
-- Dependencies: 14
-- Name: oncologyparametr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oncologyparametr (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.oncologyparametr OWNER TO postgres;

--
-- TOC entry 14511 (class 0 OID 0)
-- Dependencies: 708
-- Name: TABLE oncologyparametr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE oncologyparametr IS 'oncologyparametr';


--
-- TOC entry 14512 (class 0 OID 0)
-- Dependencies: 708
-- Name: COLUMN oncologyparametr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologyparametr.oid IS 'oid';


--
-- TOC entry 14513 (class 0 OID 0)
-- Dependencies: 708
-- Name: COLUMN oncologyparametr.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oncologyparametr.name IS 'название';


--
-- TOC entry 709 (class 1259 OID 20564)
-- Dependencies: 7211 14
-- Name: oper_anest; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oper_anest (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    code character varying(255)
);


ALTER TABLE mir.oper_anest OWNER TO postgres;

--
-- TOC entry 14514 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.oid IS 'Код анестезии';


--
-- TOC entry 14515 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.name IS 'Название анестезии';


--
-- TOC entry 14516 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14517 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14518 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 14519 (class 0 OID 0)
-- Dependencies: 709
-- Name: COLUMN oper_anest.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_anest.code IS 'Код ФОМС';


--
-- TOC entry 710 (class 1259 OID 20571)
-- Dependencies: 14
-- Name: oper_plan; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oper_plan (
    oid character(36) NOT NULL,
    lpu character(36),
    mdoc character(36),
    oper_name character varying(255),
    oper_anest character(36),
    date_on date,
    room_oper character(36),
    table_num integer,
    num_order integer,
    is_podpis integer,
    is_confirm integer
);
ALTER TABLE ONLY oper_plan ALTER COLUMN oid SET STATISTICS 0;


ALTER TABLE mir.oper_plan OWNER TO postgres;

--
-- TOC entry 14520 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.oid IS 'Код';


--
-- TOC entry 14521 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.lpu IS 'Код ЛПУ';


--
-- TOC entry 14522 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.mdoc IS 'Код карты пациента';


--
-- TOC entry 14523 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.oper_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.oper_name IS 'Название операции';


--
-- TOC entry 14524 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.oper_anest; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.oper_anest IS 'Анестезия (mir.oper_anest)';


--
-- TOC entry 14525 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.date_on; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.date_on IS 'Планируемая дата операции';


--
-- TOC entry 14526 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.room_oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.room_oper IS 'Код операционной';


--
-- TOC entry 14527 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.table_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.table_num IS 'Номер стола в операционной';


--
-- TOC entry 14528 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.num_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.num_order IS 'Номер в очереди на день';


--
-- TOC entry 14529 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.is_podpis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.is_podpis IS 'Флаг подписи';


--
-- TOC entry 14530 (class 0 OID 0)
-- Dependencies: 710
-- Name: COLUMN oper_plan.is_confirm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan.is_confirm IS 'Флаг утверждения';


--
-- TOC entry 711 (class 1259 OID 20574)
-- Dependencies: 7212 14
-- Name: oper_plan_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oper_plan_diag (
    oid character(36) NOT NULL,
    oper_plan character(36),
    diag character(36),
    sotr character(36),
    create_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.oper_plan_diag OWNER TO postgres;

--
-- TOC entry 14531 (class 0 OID 0)
-- Dependencies: 711
-- Name: COLUMN oper_plan_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_diag.oid IS 'Код';


--
-- TOC entry 14532 (class 0 OID 0)
-- Dependencies: 711
-- Name: COLUMN oper_plan_diag.oper_plan; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_diag.oper_plan IS 'Код плана операции (mir.oper_plan)';


--
-- TOC entry 14533 (class 0 OID 0)
-- Dependencies: 711
-- Name: COLUMN oper_plan_diag.diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_diag.diag IS 'Код диагноза (mir.diag)';


--
-- TOC entry 14534 (class 0 OID 0)
-- Dependencies: 711
-- Name: COLUMN oper_plan_diag.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_diag.sotr IS 'Код сотрудника, добавившего диагноз';


--
-- TOC entry 14535 (class 0 OID 0)
-- Dependencies: 711
-- Name: COLUMN oper_plan_diag.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_diag.create_date IS 'Дата добавления диагноза к плану';


--
-- TOC entry 712 (class 1259 OID 20578)
-- Dependencies: 14
-- Name: oper_plan_sotr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE oper_plan_sotr (
    oid character(36) NOT NULL,
    oper_plan character(36),
    sotr character(36),
    sotr_syn character varying(50)
);


ALTER TABLE mir.oper_plan_sotr OWNER TO postgres;

--
-- TOC entry 14536 (class 0 OID 0)
-- Dependencies: 712
-- Name: COLUMN oper_plan_sotr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_sotr.oid IS 'Код';


--
-- TOC entry 14537 (class 0 OID 0)
-- Dependencies: 712
-- Name: COLUMN oper_plan_sotr.oper_plan; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_sotr.oper_plan IS 'Код плана операции (mir.oper_plan)';


--
-- TOC entry 14538 (class 0 OID 0)
-- Dependencies: 712
-- Name: COLUMN oper_plan_sotr.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_sotr.sotr IS 'Код сотрудника';


--
-- TOC entry 14539 (class 0 OID 0)
-- Dependencies: 712
-- Name: COLUMN oper_plan_sotr.sotr_syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN oper_plan_sotr.sotr_syn IS 'Тип сотрудников';


--
-- TOC entry 713 (class 1259 OID 20581)
-- Dependencies: 14
-- Name: operation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE operation (
    oid character(36) NOT NULL,
    mdoc_oid character(36) NOT NULL,
    text text,
    type character(36),
    dt timestamp(0) without time zone,
    oid_sysuser character(36),
    nameoperation character varying(255),
    ib_secitons character(36),
    presctype character(36)
);


ALTER TABLE mir.operation OWNER TO postgres;

--
-- TOC entry 14540 (class 0 OID 0)
-- Dependencies: 713
-- Name: COLUMN operation.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation.presctype IS 'Код типа назначения mir.presctype';


--
-- TOC entry 714 (class 1259 OID 20587)
-- Dependencies: 7213 7214 14
-- Name: operation_complication; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE operation_complication (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_operation_complication$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.operation_complication OWNER TO postgres;

--
-- TOC entry 14541 (class 0 OID 0)
-- Dependencies: 714
-- Name: TABLE operation_complication; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE operation_complication IS 'Осложнения оперативного вмешательства';


--
-- TOC entry 14542 (class 0 OID 0)
-- Dependencies: 714
-- Name: COLUMN operation_complication.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_complication.oid IS 'oid';


--
-- TOC entry 14543 (class 0 OID 0)
-- Dependencies: 714
-- Name: COLUMN operation_complication.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_complication.name IS 'name';


--
-- TOC entry 14544 (class 0 OID 0)
-- Dependencies: 714
-- Name: COLUMN operation_complication.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_complication.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14545 (class 0 OID 0)
-- Dependencies: 714
-- Name: COLUMN operation_complication.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_complication.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14546 (class 0 OID 0)
-- Dependencies: 714
-- Name: COLUMN operation_complication.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_complication.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 715 (class 1259 OID 20595)
-- Dependencies: 14
-- Name: operation_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE operation_type (
    oid character(36) NOT NULL,
    name character varying(255),
    ib_secitons character varying(36)
);


ALTER TABLE mir.operation_type OWNER TO postgres;

--
-- TOC entry 716 (class 1259 OID 20598)
-- Dependencies: 7215 7216 14
-- Name: operation_type_list; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE operation_type_list (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_operation_list$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.operation_type_list OWNER TO postgres;

--
-- TOC entry 14547 (class 0 OID 0)
-- Dependencies: 716
-- Name: TABLE operation_type_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE operation_type_list IS 'Справочник операций';


--
-- TOC entry 14548 (class 0 OID 0)
-- Dependencies: 716
-- Name: COLUMN operation_type_list.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_type_list.oid IS 'oid';


--
-- TOC entry 14549 (class 0 OID 0)
-- Dependencies: 716
-- Name: COLUMN operation_type_list.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_type_list.name IS 'name';


--
-- TOC entry 14550 (class 0 OID 0)
-- Dependencies: 716
-- Name: COLUMN operation_type_list.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_type_list.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14551 (class 0 OID 0)
-- Dependencies: 716
-- Name: COLUMN operation_type_list.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_type_list.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14552 (class 0 OID 0)
-- Dependencies: 716
-- Name: COLUMN operation_type_list.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN operation_type_list.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 717 (class 1259 OID 20606)
-- Dependencies: 14
-- Name: otdel_building; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_building (
    otdel character(36) NOT NULL,
    building character(36) NOT NULL
);


ALTER TABLE mir.otdel_building OWNER TO postgres;

--
-- TOC entry 14553 (class 0 OID 0)
-- Dependencies: 717
-- Name: TABLE otdel_building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_building IS 'otdel_building';


--
-- TOC entry 14554 (class 0 OID 0)
-- Dependencies: 717
-- Name: COLUMN otdel_building.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_building.otdel IS 'otdel';


--
-- TOC entry 14555 (class 0 OID 0)
-- Dependencies: 717
-- Name: COLUMN otdel_building.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_building.building IS 'building';


--
-- TOC entry 718 (class 1259 OID 20609)
-- Dependencies: 14
-- Name: otdel_ext; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_ext (
    oid character(36) NOT NULL,
    visits_shift integer,
    visits_day integer,
    trips_shift integer,
    autopsy_shift integer,
    research_shift integer,
    jobs integer,
    ambulances integer
);


ALTER TABLE mir.otdel_ext OWNER TO postgres;

--
-- TOC entry 14556 (class 0 OID 0)
-- Dependencies: 718
-- Name: TABLE otdel_ext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_ext IS 'дополнит. сведения отделения';


--
-- TOC entry 14557 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.oid IS 'oid';


--
-- TOC entry 14558 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.visits_shift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.visits_shift IS 'плановое число посещений в смену';


--
-- TOC entry 14559 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.visits_day; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.visits_day IS 'плановое число посещений в сутки';


--
-- TOC entry 14560 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.trips_shift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.trips_shift IS 'плановое число выездов в смену';


--
-- TOC entry 14561 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.autopsy_shift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.autopsy_shift IS 'плановое число вскрытий в смену';


--
-- TOC entry 14562 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.research_shift; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.research_shift IS 'плановое число исследований в смену';


--
-- TOC entry 14563 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.jobs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.jobs IS 'количество рабочих мест';


--
-- TOC entry 14564 (class 0 OID 0)
-- Dependencies: 718
-- Name: COLUMN otdel_ext.ambulances; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_ext.ambulances IS 'количество бригад скорой помощи';


--
-- TOC entry 719 (class 1259 OID 20612)
-- Dependencies: 7217 14
-- Name: otdel_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    lpu character(36),
    distance numeric(10,2),
    addressex character(36),
    parent character(36),
    name character varying(255),
    otdel_code character varying(255),
    location character varying(255),
    otdel_type character(36),
    otdel_profile character(36)
);


ALTER TABLE mir.otdel_history OWNER TO postgres;

--
-- TOC entry 14565 (class 0 OID 0)
-- Dependencies: 719
-- Name: TABLE otdel_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_history IS 'Отделения (название в Hcategory)';


--
-- TOC entry 14566 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.hid IS 'hid';


--
-- TOC entry 14567 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.h_date IS 'h_date';


--
-- TOC entry 14568 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.h_date_end IS 'h_date_end';


--
-- TOC entry 14569 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.sysdate IS 'sysdate';


--
-- TOC entry 14570 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.oid IS 'oid';


--
-- TOC entry 14571 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.lpu IS 'lpu';


--
-- TOC entry 14572 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.distance IS 'Расстояние до наиболее удаленной точки территориального обслуживания';


--
-- TOC entry 14573 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.addressex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.addressex IS 'addressex';


--
-- TOC entry 14574 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.parent IS 'подчинен';


--
-- TOC entry 14575 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.name IS 'name';


--
-- TOC entry 14576 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.otdel_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.otdel_code IS 'код';


--
-- TOC entry 14577 (class 0 OID 0)
-- Dependencies: 719
-- Name: COLUMN otdel_history.location; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_history.location IS 'расположение учреждения (описание)';


--
-- TOC entry 720 (class 1259 OID 20619)
-- Dependencies: 7218 7219 14
-- Name: otdel_mdoc_number; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_mdoc_number (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    mdoc_number_type numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_otdel_mdoc_number$mdoc_number_type" CHECK (((mdoc_number_type IS NULL) OR ((mdoc_number_type >= (0)::numeric) AND (mdoc_number_type <= (1)::numeric))))
);


ALTER TABLE mir.otdel_mdoc_number OWNER TO postgres;

--
-- TOC entry 14578 (class 0 OID 0)
-- Dependencies: 720
-- Name: TABLE otdel_mdoc_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_mdoc_number IS 'otdel_mdoc_number';


--
-- TOC entry 14579 (class 0 OID 0)
-- Dependencies: 720
-- Name: COLUMN otdel_mdoc_number.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoc_number.oid IS 'oid';


--
-- TOC entry 14580 (class 0 OID 0)
-- Dependencies: 720
-- Name: COLUMN otdel_mdoc_number.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoc_number.otdel IS 'otdel';


--
-- TOC entry 14581 (class 0 OID 0)
-- Dependencies: 720
-- Name: COLUMN otdel_mdoc_number.mdoc_number_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoc_number.mdoc_number_type IS '1 - нумерация сквозная по уровню родителя
0 - нумерация только внутри каждого типа указанного отдела';


--
-- TOC entry 721 (class 1259 OID 20624)
-- Dependencies: 7220 7221 7222 14
-- Name: otdel_mdoctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_mdoctype (
    oid character(36) NOT NULL,
    mdoctype_id character(36) NOT NULL,
    otdel_id character(36) NOT NULL,
    bind numeric(1,0) DEFAULT 0,
    is_default numeric(1,0) DEFAULT 0 NOT NULL,
    mdoc_group character(36),
    CONSTRAINT "ck_otdel_mdoctype$bind" CHECK (((bind IS NULL) OR ((bind >= (0)::numeric) AND (bind <= (1)::numeric))))
);


ALTER TABLE mir.otdel_mdoctype OWNER TO postgres;

--
-- TOC entry 14582 (class 0 OID 0)
-- Dependencies: 721
-- Name: TABLE otdel_mdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_mdoctype IS 'Таблица доступа отдела к документами';


--
-- TOC entry 14583 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.oid IS 'ID';


--
-- TOC entry 14584 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.mdoctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.mdoctype_id IS 'ID типа документа';


--
-- TOC entry 14585 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.otdel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.otdel_id IS 'ID отдела';


--
-- TOC entry 14586 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.bind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.bind IS 'bind';


--
-- TOC entry 14587 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.is_default; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.is_default IS 'Флаг по умолчанию, для отделение выбранный тип документа по умолчанию';


--
-- TOC entry 14588 (class 0 OID 0)
-- Dependencies: 721
-- Name: COLUMN otdel_mdoctype.mdoc_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_mdoctype.mdoc_group IS 'Id группы документов';


--
-- TOC entry 722 (class 1259 OID 20630)
-- Dependencies: 7223 7224 14
-- Name: otdel_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_profile (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer,
    CONSTRAINT "ck_otdel_profile$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.otdel_profile OWNER TO postgres;

--
-- TOC entry 14589 (class 0 OID 0)
-- Dependencies: 722
-- Name: TABLE otdel_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_profile IS 'профиль отдела

участковая
районная
городская, в том числе детская
городская скорой медицинской помощи
центральная (городская, районная)
областная, в том числе детская (краевая, республиканская, окружная)
восстановительного лечения, в том числе детская
гинекологическая
гериатрическая
инфекционная, в том числе детская
наркологическая
онкологическая
офтальмологическая
психоневрологическая, в том числе детская
психиатрическая, в том числе детская
психиатрическая (стационар) специализированного типа
психиатрическая (стационар) специализированного типа с интенсивным наблюдением
туберкулезная, в том числе детская
курортная
врачебно-физкультурный
кардиологический
кожно-венерологический
маммологический
наркологический

';


--
-- TOC entry 14590 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.oid IS 'oid';


--
-- TOC entry 14591 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.name IS 'name';


--
-- TOC entry 14592 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.parent IS 'parent';


--
-- TOC entry 14593 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14594 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14595 (class 0 OID 0)
-- Dependencies: 722
-- Name: COLUMN otdel_profile.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 723 (class 1259 OID 20638)
-- Dependencies: 7225 14
-- Name: otdel_profile_additional; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_profile_additional (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer
);


ALTER TABLE mir.otdel_profile_additional OWNER TO postgres;

--
-- TOC entry 14596 (class 0 OID 0)
-- Dependencies: 723
-- Name: TABLE otdel_profile_additional; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_profile_additional IS 'Дополнительный тип отделения для использования в стационаре и платных услугах';


--
-- TOC entry 14597 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.oid IS 'oid';


--
-- TOC entry 14598 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.name IS 'name';


--
-- TOC entry 14599 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.parent IS 'parent';


--
-- TOC entry 14600 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14601 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14602 (class 0 OID 0)
-- Dependencies: 723
-- Name: COLUMN otdel_profile_additional.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_additional.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 724 (class 1259 OID 20645)
-- Dependencies: 14
-- Name: otdel_profile_care; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_profile_care (
    otdel character(36) NOT NULL,
    profile_care character(36) NOT NULL
);


ALTER TABLE mir.otdel_profile_care OWNER TO postgres;

--
-- TOC entry 14603 (class 0 OID 0)
-- Dependencies: 724
-- Name: TABLE otdel_profile_care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_profile_care IS 'otdel_profile_care';


--
-- TOC entry 14604 (class 0 OID 0)
-- Dependencies: 724
-- Name: COLUMN otdel_profile_care.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_care.otdel IS 'otdel';


--
-- TOC entry 14605 (class 0 OID 0)
-- Dependencies: 724
-- Name: COLUMN otdel_profile_care.profile_care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_profile_care.profile_care IS 'profile_care';


--
-- TOC entry 725 (class 1259 OID 20648)
-- Dependencies: 7226 14
-- Name: otdel_rating; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_rating (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    otdel character(36) NOT NULL,
    rating numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.otdel_rating OWNER TO postgres;

--
-- TOC entry 14606 (class 0 OID 0)
-- Dependencies: 725
-- Name: TABLE otdel_rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_rating IS 'otdel_rating';


--
-- TOC entry 14607 (class 0 OID 0)
-- Dependencies: 725
-- Name: COLUMN otdel_rating.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_rating.oid IS 'oid';


--
-- TOC entry 14608 (class 0 OID 0)
-- Dependencies: 725
-- Name: COLUMN otdel_rating.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_rating.people IS 'people';


--
-- TOC entry 14609 (class 0 OID 0)
-- Dependencies: 725
-- Name: COLUMN otdel_rating.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_rating.otdel IS 'otdel';


--
-- TOC entry 14610 (class 0 OID 0)
-- Dependencies: 725
-- Name: COLUMN otdel_rating.rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_rating.rating IS 'rating';


--
-- TOC entry 14611 (class 0 OID 0)
-- Dependencies: 725
-- Name: COLUMN otdel_rating.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_rating.add_date IS 'add_date';


--
-- TOC entry 726 (class 1259 OID 20655)
-- Dependencies: 14
-- Name: otdel_region; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_region (
    otdel character varying(36) NOT NULL,
    region character varying(36) NOT NULL,
    region_name character varying NOT NULL,
    city character varying(36) NOT NULL,
    city_name character varying NOT NULL
);


ALTER TABLE mir.otdel_region OWNER TO postgres;

--
-- TOC entry 14612 (class 0 OID 0)
-- Dependencies: 726
-- Name: COLUMN otdel_region.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_region.otdel IS 'otdel id';


--
-- TOC entry 14613 (class 0 OID 0)
-- Dependencies: 726
-- Name: COLUMN otdel_region.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_region.region IS 'region id';


--
-- TOC entry 14614 (class 0 OID 0)
-- Dependencies: 726
-- Name: COLUMN otdel_region.region_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_region.region_name IS 'region name';


--
-- TOC entry 14615 (class 0 OID 0)
-- Dependencies: 726
-- Name: COLUMN otdel_region.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_region.city IS 'city id';


--
-- TOC entry 14616 (class 0 OID 0)
-- Dependencies: 726
-- Name: COLUMN otdel_region.city_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_region.city_name IS 'city name';


--
-- TOC entry 727 (class 1259 OID 20661)
-- Dependencies: 7227 7228 14
-- Name: otdel_review; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_review (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    people character(36) NOT NULL,
    text character varying NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    is_delete numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.otdel_review OWNER TO postgres;

--
-- TOC entry 14617 (class 0 OID 0)
-- Dependencies: 727
-- Name: TABLE otdel_review; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_review IS 'otdel_review';


--
-- TOC entry 14618 (class 0 OID 0)
-- Dependencies: 727
-- Name: COLUMN otdel_review.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_review.oid IS 'oid';


--
-- TOC entry 14619 (class 0 OID 0)
-- Dependencies: 727
-- Name: COLUMN otdel_review.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_review.otdel IS 'otdel';


--
-- TOC entry 14620 (class 0 OID 0)
-- Dependencies: 727
-- Name: COLUMN otdel_review.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_review.people IS 'people';


--
-- TOC entry 14621 (class 0 OID 0)
-- Dependencies: 727
-- Name: COLUMN otdel_review.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_review.text IS 'text';


--
-- TOC entry 14622 (class 0 OID 0)
-- Dependencies: 727
-- Name: COLUMN otdel_review.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_review.add_date IS 'add_date';


--
-- TOC entry 728 (class 1259 OID 20669)
-- Dependencies: 7229 7230 7231 7232 14
-- Name: otdel_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_type (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    id integer,
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer,
    paid numeric(1,0) DEFAULT 0,
    additional_type character(36),
    CONSTRAINT "ck_otdel_type$paid" CHECK (((paid IS NULL) OR ((paid >= (0)::numeric) AND (paid <= (1)::numeric)))),
    CONSTRAINT "ck_otdel_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.otdel_type OWNER TO postgres;

--
-- TOC entry 14623 (class 0 OID 0)
-- Dependencies: 728
-- Name: TABLE otdel_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_type IS 'тип подразделения

';


--
-- TOC entry 14624 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.oid IS 'oid';


--
-- TOC entry 14625 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.name IS 'name';


--
-- TOC entry 14626 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.parent IS 'parent';


--
-- TOC entry 14627 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.id IS 'идентификатор в системе минздравсоцразвития';


--
-- TOC entry 14628 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14629 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14630 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 14631 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.paid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.paid IS 'Является ли отделение платным';


--
-- TOC entry 14632 (class 0 OID 0)
-- Dependencies: 728
-- Name: COLUMN otdel_type.additional_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type.additional_type IS 'Дополнительный тип отделения(реанимация, приёмное, платное, операционное)';


--
-- TOC entry 729 (class 1259 OID 20679)
-- Dependencies: 7233 14
-- Name: otdel_type_additional; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE otdel_type_additional (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer
);


ALTER TABLE mir.otdel_type_additional OWNER TO postgres;

--
-- TOC entry 14633 (class 0 OID 0)
-- Dependencies: 729
-- Name: TABLE otdel_type_additional; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE otdel_type_additional IS 'Дополнительный тип отделения для использования в стационаре и платных услугах';


--
-- TOC entry 14634 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.oid IS 'oid';


--
-- TOC entry 14635 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.name IS 'name';


--
-- TOC entry 14636 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.parent IS 'parent';


--
-- TOC entry 14637 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14638 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14639 (class 0 OID 0)
-- Dependencies: 729
-- Name: COLUMN otdel_type_additional.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN otdel_type_additional.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 730 (class 1259 OID 20686)
-- Dependencies: 14
-- Name: paidagree_docs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE paidagree_docs (
    oid character(36) NOT NULL,
    name character varying(255),
    content text
);


ALTER TABLE mir.paidagree_docs OWNER TO postgres;

--
-- TOC entry 14640 (class 0 OID 0)
-- Dependencies: 730
-- Name: TABLE paidagree_docs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE paidagree_docs IS 'Шаблон договоров на платные услуги';


--
-- TOC entry 14641 (class 0 OID 0)
-- Dependencies: 730
-- Name: COLUMN paidagree_docs.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_docs.oid IS 'oid';


--
-- TOC entry 14642 (class 0 OID 0)
-- Dependencies: 730
-- Name: COLUMN paidagree_docs.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_docs.name IS 'название документа';


--
-- TOC entry 14643 (class 0 OID 0)
-- Dependencies: 730
-- Name: COLUMN paidagree_docs.content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_docs.content IS 'текст';


--
-- TOC entry 731 (class 1259 OID 20692)
-- Dependencies: 14
-- Name: paidagree_docs_fields; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE paidagree_docs_fields (
    paid_agreement_docs character(36) NOT NULL,
    paid_agreement_fields character(36) NOT NULL
);


ALTER TABLE mir.paidagree_docs_fields OWNER TO postgres;

--
-- TOC entry 14644 (class 0 OID 0)
-- Dependencies: 731
-- Name: TABLE paidagree_docs_fields; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE paidagree_docs_fields IS 'Связь договоров на платные услуги и полей';


--
-- TOC entry 14645 (class 0 OID 0)
-- Dependencies: 731
-- Name: COLUMN paidagree_docs_fields.paid_agreement_docs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_docs_fields.paid_agreement_docs IS 'документ';


--
-- TOC entry 14646 (class 0 OID 0)
-- Dependencies: 731
-- Name: COLUMN paidagree_docs_fields.paid_agreement_fields; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_docs_fields.paid_agreement_fields IS 'поля';


--
-- TOC entry 732 (class 1259 OID 20695)
-- Dependencies: 14
-- Name: paidagree_fields; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE paidagree_fields (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(255),
    tag character varying(255)
);


ALTER TABLE mir.paidagree_fields OWNER TO postgres;

--
-- TOC entry 14647 (class 0 OID 0)
-- Dependencies: 732
-- Name: TABLE paidagree_fields; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE paidagree_fields IS 'Доступные поля для договоров на платные услуги';


--
-- TOC entry 14648 (class 0 OID 0)
-- Dependencies: 732
-- Name: COLUMN paidagree_fields.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_fields.oid IS 'oid';


--
-- TOC entry 14649 (class 0 OID 0)
-- Dependencies: 732
-- Name: COLUMN paidagree_fields.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_fields.name IS 'название поля';


--
-- TOC entry 14650 (class 0 OID 0)
-- Dependencies: 732
-- Name: COLUMN paidagree_fields.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_fields.code IS 'код поля в базе';


--
-- TOC entry 14651 (class 0 OID 0)
-- Dependencies: 732
-- Name: COLUMN paidagree_fields.tag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN paidagree_fields.tag IS 'Тэг элемента в тексте';


--
-- TOC entry 733 (class 1259 OID 20701)
-- Dependencies: 14
-- Name: param_datatype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE param_datatype (
    oid character(36) NOT NULL,
    name character varying(255),
    synonym character varying(10)
);


ALTER TABLE mir.param_datatype OWNER TO postgres;

--
-- TOC entry 14652 (class 0 OID 0)
-- Dependencies: 733
-- Name: TABLE param_datatype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE param_datatype IS 'presctypeparam_type';


--
-- TOC entry 14653 (class 0 OID 0)
-- Dependencies: 733
-- Name: COLUMN param_datatype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN param_datatype.oid IS 'oid';


--
-- TOC entry 14654 (class 0 OID 0)
-- Dependencies: 733
-- Name: COLUMN param_datatype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN param_datatype.name IS 'name';


--
-- TOC entry 14655 (class 0 OID 0)
-- Dependencies: 733
-- Name: COLUMN param_datatype.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN param_datatype.synonym IS 'синоним для поиска: string, datetime, integer, numeric & etc.';


--
-- TOC entry 734 (class 1259 OID 20704)
-- Dependencies: 14
-- Name: parametrs_name; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE parametrs_name (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.parametrs_name OWNER TO postgres;

--
-- TOC entry 14656 (class 0 OID 0)
-- Dependencies: 734
-- Name: TABLE parametrs_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE parametrs_name IS 'parameters';


--
-- TOC entry 14657 (class 0 OID 0)
-- Dependencies: 734
-- Name: COLUMN parametrs_name.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN parametrs_name.oid IS 'oid';


--
-- TOC entry 14658 (class 0 OID 0)
-- Dependencies: 734
-- Name: COLUMN parametrs_name.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN parametrs_name.name IS 'название';


--
-- TOC entry 735 (class 1259 OID 20707)
-- Dependencies: 14
-- Name: parent_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE parent_status (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.parent_status OWNER TO postgres;

--
-- TOC entry 14659 (class 0 OID 0)
-- Dependencies: 735
-- Name: TABLE parent_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE parent_status IS 'Статус родителя. Author: Kulikovskiy';


--
-- TOC entry 14660 (class 0 OID 0)
-- Dependencies: 735
-- Name: COLUMN parent_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN parent_status.oid IS 'Код';


--
-- TOC entry 14661 (class 0 OID 0)
-- Dependencies: 735
-- Name: COLUMN parent_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN parent_status.name IS 'Название';


--
-- TOC entry 736 (class 1259 OID 20710)
-- Dependencies: 14
-- Name: party; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE party (
    oid character(36) NOT NULL,
    photo character(1),
    optimisticlockfield numeric,
    gcrecord numeric
);


ALTER TABLE mir.party OWNER TO postgres;

--
-- TOC entry 14662 (class 0 OID 0)
-- Dependencies: 736
-- Name: TABLE party; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE party IS 'PARTY';


--
-- TOC entry 14663 (class 0 OID 0)
-- Dependencies: 736
-- Name: COLUMN party.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN party.oid IS 'oid';


--
-- TOC entry 14664 (class 0 OID 0)
-- Dependencies: 736
-- Name: COLUMN party.photo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN party.photo IS 'photo';


--
-- TOC entry 14665 (class 0 OID 0)
-- Dependencies: 736
-- Name: COLUMN party.optimisticlockfield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN party.optimisticlockfield IS 'optimisticlockfield';


--
-- TOC entry 14666 (class 0 OID 0)
-- Dependencies: 736
-- Name: COLUMN party.gcrecord; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN party.gcrecord IS 'gcrecord';


--
-- TOC entry 737 (class 1259 OID 20716)
-- Dependencies: 14
-- Name: passport_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE passport_log (
    oid character(36) NOT NULL,
    lpu character(36),
    sysuser character(36),
    otdel character(36),
    message text,
    change_date timestamp without time zone
);


ALTER TABLE mir.passport_log OWNER TO postgres;

--
-- TOC entry 14667 (class 0 OID 0)
-- Dependencies: 737
-- Name: TABLE passport_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE passport_log IS 'логи изменений паспорта му';


--
-- TOC entry 14668 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.oid IS 'oid';


--
-- TOC entry 14669 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.lpu IS 'лпу';


--
-- TOC entry 14670 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.sysuser IS 'пользователь';


--
-- TOC entry 14671 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.otdel IS 'отделение';


--
-- TOC entry 14672 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.message; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.message IS 'что изменилось';


--
-- TOC entry 14673 (class 0 OID 0)
-- Dependencies: 737
-- Name: COLUMN passport_log.change_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN passport_log.change_date IS 'дата и время изменений';


--
-- TOC entry 738 (class 1259 OID 20722)
-- Dependencies: 14
-- Name: patientcard_uniquefield_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE patientcard_uniquefield_lpu (
    patientcardsettings_uniquefield character(36) NOT NULL,
    lpu character(36) NOT NULL
);


ALTER TABLE mir.patientcard_uniquefield_lpu OWNER TO postgres;

--
-- TOC entry 14674 (class 0 OID 0)
-- Dependencies: 738
-- Name: TABLE patientcard_uniquefield_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE patientcard_uniquefield_lpu IS 'список настроек уникальных полей проверки на дубликаты, используемых  для ЛПУ';


--
-- TOC entry 14675 (class 0 OID 0)
-- Dependencies: 738
-- Name: COLUMN patientcard_uniquefield_lpu.patientcardsettings_uniquefield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcard_uniquefield_lpu.patientcardsettings_uniquefield IS 'ссылка на mir.patientcardsettings_uniquefield';


--
-- TOC entry 14676 (class 0 OID 0)
-- Dependencies: 738
-- Name: COLUMN patientcard_uniquefield_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcard_uniquefield_lpu.lpu IS 'ссылка на mir.lpu';


--
-- TOC entry 739 (class 1259 OID 20725)
-- Dependencies: 7234 14
-- Name: patientcardsettings_uniquefield; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE patientcardsettings_uniquefield (
    oid character(36) NOT NULL,
    name character varying(255),
    dbname character varying(255),
    index integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.patientcardsettings_uniquefield OWNER TO postgres;

--
-- TOC entry 14677 (class 0 OID 0)
-- Dependencies: 739
-- Name: TABLE patientcardsettings_uniquefield; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE patientcardsettings_uniquefield IS 'настройками карт пациентов - список полей по которым происходит проверка на уникальность';


--
-- TOC entry 14678 (class 0 OID 0)
-- Dependencies: 739
-- Name: COLUMN patientcardsettings_uniquefield.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcardsettings_uniquefield.oid IS 'oid';


--
-- TOC entry 14679 (class 0 OID 0)
-- Dependencies: 739
-- Name: COLUMN patientcardsettings_uniquefield.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcardsettings_uniquefield.name IS 'наименование поля';


--
-- TOC entry 14680 (class 0 OID 0)
-- Dependencies: 739
-- Name: COLUMN patientcardsettings_uniquefield.dbname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcardsettings_uniquefield.dbname IS 'наименование поля в базе';


--
-- TOC entry 14681 (class 0 OID 0)
-- Dependencies: 739
-- Name: COLUMN patientcardsettings_uniquefield.index; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN patientcardsettings_uniquefield.index IS 'Порядковый номер записи';


--
-- TOC entry 740 (class 1259 OID 20732)
-- Dependencies: 14
-- Name: pay_agreement; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_agreement (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    beg_dt timestamp without time zone NOT NULL,
    end_dt timestamp without time zone,
    status character(36) NOT NULL,
    sotr_create character(36) NOT NULL,
    sotr_close character(36),
    num character varying(10),
    pay_type character(36)
);


ALTER TABLE mir.pay_agreement OWNER TO postgres;

--
-- TOC entry 14682 (class 0 OID 0)
-- Dependencies: 740
-- Name: TABLE pay_agreement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_agreement IS 'Таблица договоров платных услуг - by Shpielevoy D. I.';


--
-- TOC entry 14683 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.oid IS 'oid';


--
-- TOC entry 14684 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.people_id IS 'Человек [PEOPLE.ID]';


--
-- TOC entry 14685 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.beg_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.beg_dt IS 'Начало срока действия документа';


--
-- TOC entry 14686 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.end_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.end_dt IS 'Окончание срока действия документа';


--
-- TOC entry 14687 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.status IS 'ссылка на справочник статусов';


--
-- TOC entry 14688 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.sotr_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.sotr_create IS 'Сотрудник, кто создал';


--
-- TOC entry 14689 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.sotr_close; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.sotr_close IS 'Сотрудник, кто закрыл';


--
-- TOC entry 14690 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.num IS 'Номер договора';


--
-- TOC entry 14691 (class 0 OID 0)
-- Dependencies: 740
-- Name: COLUMN pay_agreement.pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement.pay_type IS 'Тип оплаты по договору';


--
-- TOC entry 741 (class 1259 OID 20735)
-- Dependencies: 7235 7236 14
-- Name: pay_agreement_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_agreement_status (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_pay_agreement_stat$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.pay_agreement_status OWNER TO postgres;

--
-- TOC entry 14692 (class 0 OID 0)
-- Dependencies: 741
-- Name: TABLE pay_agreement_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_agreement_status IS 'pay_agreement_status';


--
-- TOC entry 14693 (class 0 OID 0)
-- Dependencies: 741
-- Name: COLUMN pay_agreement_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement_status.oid IS 'oid';


--
-- TOC entry 14694 (class 0 OID 0)
-- Dependencies: 741
-- Name: COLUMN pay_agreement_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement_status.name IS 'name';


--
-- TOC entry 14695 (class 0 OID 0)
-- Dependencies: 741
-- Name: COLUMN pay_agreement_status.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_agreement_status.show IS 'show';


--
-- TOC entry 742 (class 1259 OID 20740)
-- Dependencies: 7237 7238 14
-- Name: pay_appendix; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_appendix (
    oid character(36) NOT NULL,
    agreement_id character(36) NOT NULL,
    num character varying(10),
    open_dt timestamp without time zone NOT NULL,
    close_dt timestamp without time zone,
    status integer DEFAULT 0 NOT NULL,
    pay_type_id character(36),
    sotr_create character(36) NOT NULL,
    pacsubscribe integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.pay_appendix OWNER TO postgres;

--
-- TOC entry 14696 (class 0 OID 0)
-- Dependencies: 742
-- Name: TABLE pay_appendix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_appendix IS 'Таблица приложений платных услуг - by Shpielevoy D. I.';


--
-- TOC entry 14697 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.oid IS 'oid';


--
-- TOC entry 14698 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.agreement_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.agreement_id IS 'ссылка на договор [pay_agreement.oid]';


--
-- TOC entry 14699 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.num IS 'Номер приложения';


--
-- TOC entry 14700 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.open_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.open_dt IS 'Срок начала действия приложения';


--
-- TOC entry 14701 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.close_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.close_dt IS 'Срок окончания действия приложения';


--
-- TOC entry 14702 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.status IS '0-действующий;1-по факту выполнения всех услуг;2-расторгнут';


--
-- TOC entry 14703 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.pay_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.pay_type_id IS 'Тип оплаты [pay_type_appendix.oid]';


--
-- TOC entry 14704 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.sotr_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.sotr_create IS 'Сотрудник, создавший приложение';


--
-- TOC entry 14705 (class 0 OID 0)
-- Dependencies: 742
-- Name: COLUMN pay_appendix.pacsubscribe; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix.pacsubscribe IS '0 - пациент ещё не подписал договор; 1 - пациент подписал договор';


--
-- TOC entry 743 (class 1259 OID 20745)
-- Dependencies: 14
-- Name: pay_appendix_naz; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_appendix_naz (
    oid character(36) NOT NULL,
    appendix_id character(36) NOT NULL,
    presc_id character(36) NOT NULL
);


ALTER TABLE mir.pay_appendix_naz OWNER TO postgres;

--
-- TOC entry 14706 (class 0 OID 0)
-- Dependencies: 743
-- Name: TABLE pay_appendix_naz; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_appendix_naz IS 'Связь приложений и платных назначений - by Shpielevoy D. I.';


--
-- TOC entry 14707 (class 0 OID 0)
-- Dependencies: 743
-- Name: COLUMN pay_appendix_naz.appendix_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix_naz.appendix_id IS 'ссылка на приложение';


--
-- TOC entry 14708 (class 0 OID 0)
-- Dependencies: 743
-- Name: COLUMN pay_appendix_naz.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_appendix_naz.presc_id IS 'ссылка на назначение';


--
-- TOC entry 744 (class 1259 OID 20748)
-- Dependencies: 7239 7240 14
-- Name: pay_method; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_method (
    oid character(36) NOT NULL,
    name character varying(250),
    foms_code integer,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_pay_method$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.pay_method OWNER TO postgres;

--
-- TOC entry 14709 (class 0 OID 0)
-- Dependencies: 744
-- Name: TABLE pay_method; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_method IS 'код способа оплаты медицинской помощи';


--
-- TOC entry 14710 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.oid IS 'код способа оплаты медицинской помощи';


--
-- TOC entry 14711 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.name IS 'name';


--
-- TOC entry 14712 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.foms_code IS 'код фомс';


--
-- TOC entry 14713 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14714 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14715 (class 0 OID 0)
-- Dependencies: 744
-- Name: COLUMN pay_method.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_method.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 745 (class 1259 OID 20756)
-- Dependencies: 14
-- Name: pay_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_type (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    state integer
);


ALTER TABLE mir.pay_type OWNER TO postgres;

--
-- TOC entry 14716 (class 0 OID 0)
-- Dependencies: 745
-- Name: TABLE pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_type IS 'Типы оплаты Author: Linnikov';


--
-- TOC entry 14717 (class 0 OID 0)
-- Dependencies: 745
-- Name: COLUMN pay_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_type.oid IS 'oid';


--
-- TOC entry 14718 (class 0 OID 0)
-- Dependencies: 745
-- Name: COLUMN pay_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_type.name IS 'Название типа оплаты';


--
-- TOC entry 14719 (class 0 OID 0)
-- Dependencies: 745
-- Name: COLUMN pay_type.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_type.foms_code IS 'код ФОМС';


--
-- TOC entry 14720 (class 0 OID 0)
-- Dependencies: 745
-- Name: COLUMN pay_type.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_type.state IS 'признак состояния, если = 1 то показываем в справочнике';


--
-- TOC entry 746 (class 1259 OID 20759)
-- Dependencies: 14
-- Name: pay_type_appendix; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pay_type_appendix (
    oid character(36) NOT NULL,
    name character varying(100) NOT NULL
);


ALTER TABLE mir.pay_type_appendix OWNER TO postgres;

--
-- TOC entry 14721 (class 0 OID 0)
-- Dependencies: 746
-- Name: TABLE pay_type_appendix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pay_type_appendix IS 'Таблица типов оплаты платных услуг - by Shpielevoy D. I.';


--
-- TOC entry 14722 (class 0 OID 0)
-- Dependencies: 746
-- Name: COLUMN pay_type_appendix.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pay_type_appendix.name IS 'Название типа оплаты';


--
-- TOC entry 747 (class 1259 OID 20762)
-- Dependencies: 7241 14
-- Name: pdoc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pdoc (
    id character(36) NOT NULL,
    pdoctype_id character(36) NOT NULL,
    ser character varying(10),
    num character varying(10),
    givedate date,
    giveplace character varying(100),
    active integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.pdoc OWNER TO postgres;

--
-- TOC entry 14723 (class 0 OID 0)
-- Dependencies: 747
-- Name: TABLE pdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pdoc IS 'Документы личности Author:A.Nakorjakov';


--
-- TOC entry 14724 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.id IS 'SEQUENCE=[MIS.SQ_PDOC]';


--
-- TOC entry 14725 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.pdoctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.pdoctype_id IS 'Тип документа, удостоверяющий личность (PDOCTYPE.ID)';


--
-- TOC entry 14726 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.ser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.ser IS 'Серия документа, удостоверяющего личность';


--
-- TOC entry 14727 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.num IS 'Номер документа, удостоверяющего личность';


--
-- TOC entry 14728 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.givedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.givedate IS 'Дата документа, удостоверяющего личность';


--
-- TOC entry 14729 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.giveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.giveplace IS 'Место выдачи документа, удостоверяющего личность';


--
-- TOC entry 14730 (class 0 OID 0)
-- Dependencies: 747
-- Name: COLUMN pdoc.active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoc.active IS 'Действующий; 1 - да; 0 - нет';


--
-- TOC entry 748 (class 1259 OID 20766)
-- Dependencies: 14
-- Name: pdoctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pdoctype (
    id character(36) NOT NULL,
    name character varying(255),
    synonim character varying(255)
);


ALTER TABLE mir.pdoctype OWNER TO postgres;

--
-- TOC entry 14731 (class 0 OID 0)
-- Dependencies: 748
-- Name: TABLE pdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pdoctype IS 'Типы документов, удостоверяющих личность Author:A.Nakorjakov';


--
-- TOC entry 14732 (class 0 OID 0)
-- Dependencies: 748
-- Name: COLUMN pdoctype.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoctype.id IS 'SEQUENCE=[MIS.SQ_PDOCTYPE]';


--
-- TOC entry 14733 (class 0 OID 0)
-- Dependencies: 748
-- Name: COLUMN pdoctype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoctype.name IS 'Название документа, удостоверяющего личность';


--
-- TOC entry 14734 (class 0 OID 0)
-- Dependencies: 748
-- Name: COLUMN pdoctype.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pdoctype.synonim IS 'synonim';


--
-- TOC entry 749 (class 1259 OID 20772)
-- Dependencies: 7242 14
-- Name: people_change_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_change_history (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    addressex1 character(36),
    addressex2 character(36),
    peopledoctype character(36),
    peopledocser character varying(100),
    peopledocnum character varying(100),
    peopledocgive character varying(255),
    peopledocgivedate date,
    firstname character varying(100),
    lastname character varying(255),
    middlename character varying(255),
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.people_change_history OWNER TO postgres;

--
-- TOC entry 14735 (class 0 OID 0)
-- Dependencies: 749
-- Name: TABLE people_change_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_change_history IS 'история изменений данных пациента';


--
-- TOC entry 14736 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.oid IS 'oid';


--
-- TOC entry 14737 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.people IS 'пипл к которому относятся изменения';


--
-- TOC entry 14738 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.addressex1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.addressex1 IS 'юридический адрес, адрес прописки';


--
-- TOC entry 14739 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.addressex2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.addressex2 IS 'физический адрес, адрес проживания';


--
-- TOC entry 14740 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.peopledoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.peopledoctype IS 'тип документа удостоверяющего личность';


--
-- TOC entry 14741 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.peopledocser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.peopledocser IS 'серия документа удостоверяющего личность';


--
-- TOC entry 14742 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.peopledocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.peopledocnum IS 'номер документа удостоверяющего личность';


--
-- TOC entry 14743 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.peopledocgive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.peopledocgive IS 'кто выдал документ удостоверяющий личноcть';


--
-- TOC entry 14744 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.peopledocgivedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.peopledocgivedate IS 'когда выдали документ удостоверяющий личноcть';


--
-- TOC entry 14745 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.firstname IS 'имя';


--
-- TOC entry 14746 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.lastname IS 'фамилия';


--
-- TOC entry 14747 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.middlename IS 'отчество';


--
-- TOC entry 14748 (class 0 OID 0)
-- Dependencies: 749
-- Name: COLUMN people_change_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_change_history.sysdate IS 'дата создания записи';


--
-- TOC entry 750 (class 1259 OID 20779)
-- Dependencies: 14
-- Name: posteducation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE posteducation (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.posteducation OWNER TO postgres;

--
-- TOC entry 14749 (class 0 OID 0)
-- Dependencies: 750
-- Name: TABLE posteducation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE posteducation IS 'последипломное образование
Интернатура
Ординатура
Аспирантура
Докторантура
';


--
-- TOC entry 14750 (class 0 OID 0)
-- Dependencies: 750
-- Name: COLUMN posteducation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN posteducation.oid IS 'oid';


--
-- TOC entry 14751 (class 0 OID 0)
-- Dependencies: 750
-- Name: COLUMN posteducation.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN posteducation.id IS 'id';


--
-- TOC entry 14752 (class 0 OID 0)
-- Dependencies: 750
-- Name: COLUMN posteducation.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN posteducation.name IS 'name';


--
-- TOC entry 751 (class 1259 OID 20782)
-- Dependencies: 7243 14
-- Name: postgraduateeducation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE postgraduateeducation (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    educationinstitution character(36) NOT NULL,
    posteducation character(36) NOT NULL,
    academicdegree character(36),
    sertificatespeciality character(36) NOT NULL,
    datebegin date NOT NULL,
    dateend date NOT NULL,
    datedocum date NOT NULL,
    diplomaserie character varying(255) NOT NULL,
    diplomanumber character varying(255) NOT NULL,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.postgraduateeducation OWNER TO postgres;

--
-- TOC entry 14753 (class 0 OID 0)
-- Dependencies: 751
-- Name: TABLE postgraduateeducation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE postgraduateeducation IS 'Послевузовское образование

';


--
-- TOC entry 14754 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.oid IS 'oid';


--
-- TOC entry 14755 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.people IS 'people';


--
-- TOC entry 14756 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.educationinstitution IS 'базовая организация';


--
-- TOC entry 14757 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.posteducation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.posteducation IS 'тип образования';


--
-- TOC entry 14758 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.academicdegree; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.academicdegree IS 'учёная степень';


--
-- TOC entry 14759 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.sertificatespeciality IS 'специальность';


--
-- TOC entry 14760 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.datebegin IS 'начало прохождения';


--
-- TOC entry 14761 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.dateend IS 'окончание прохождения';


--
-- TOC entry 14762 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.datedocum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.datedocum IS 'дата получения документа';


--
-- TOC entry 14763 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.diplomaserie; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.diplomaserie IS 'серия диплома';


--
-- TOC entry 14764 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.diplomanumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.diplomanumber IS 'номер диплома';


--
-- TOC entry 14765 (class 0 OID 0)
-- Dependencies: 751
-- Name: COLUMN postgraduateeducation.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN postgraduateeducation.sysdate IS 'sysdate';


--
-- TOC entry 752 (class 1259 OID 20789)
-- Dependencies: 7244 14
-- Name: qualification; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE qualification (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    qualificationcategory character(36) NOT NULL,
    sertificatespeciality character(36) NOT NULL,
    date_qualification date,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.qualification OWNER TO postgres;

--
-- TOC entry 14766 (class 0 OID 0)
-- Dependencies: 752
-- Name: TABLE qualification; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE qualification IS 'квалификация


';


--
-- TOC entry 14767 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.oid IS 'oid';


--
-- TOC entry 14768 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.people IS 'people';


--
-- TOC entry 14769 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.qualificationcategory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.qualificationcategory IS 'категория';


--
-- TOC entry 14770 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.sertificatespeciality IS 'специальность';


--
-- TOC entry 14771 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.date_qualification; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.date_qualification IS 'год';


--
-- TOC entry 14772 (class 0 OID 0)
-- Dependencies: 752
-- Name: COLUMN qualification.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualification.sysdate IS 'sysdate';


--
-- TOC entry 753 (class 1259 OID 20793)
-- Dependencies: 14
-- Name: qualificationcategory; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE qualificationcategory (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.qualificationcategory OWNER TO postgres;

--
-- TOC entry 14773 (class 0 OID 0)
-- Dependencies: 753
-- Name: TABLE qualificationcategory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE qualificationcategory IS 'квалификационная категория
Вторая
Первая
Высшая
';


--
-- TOC entry 14774 (class 0 OID 0)
-- Dependencies: 753
-- Name: COLUMN qualificationcategory.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualificationcategory.oid IS 'oid';


--
-- TOC entry 14775 (class 0 OID 0)
-- Dependencies: 753
-- Name: COLUMN qualificationcategory.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualificationcategory.id IS 'id';


--
-- TOC entry 14776 (class 0 OID 0)
-- Dependencies: 753
-- Name: COLUMN qualificationcategory.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN qualificationcategory.name IS 'name';


--
-- TOC entry 754 (class 1259 OID 20796)
-- Dependencies: 7245 14
-- Name: retrainment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE retrainment (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    educationinstitution character(36) NOT NULL,
    sertificatespeciality character(36) NOT NULL,
    diplomaserie character varying(255) NOT NULL,
    diplomanumber character varying(255) NOT NULL,
    hours integer,
    date_retrainment date,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.retrainment OWNER TO postgres;

--
-- TOC entry 14777 (class 0 OID 0)
-- Dependencies: 754
-- Name: TABLE retrainment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE retrainment IS 'Переподготовка
';


--
-- TOC entry 14778 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.oid IS 'oid';


--
-- TOC entry 14779 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.people IS 'people';


--
-- TOC entry 14780 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.educationinstitution IS 'учебное заведение';


--
-- TOC entry 14781 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.sertificatespeciality IS 'специальность';


--
-- TOC entry 14782 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.diplomaserie; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.diplomaserie IS 'серия документа';


--
-- TOC entry 14783 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.diplomanumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.diplomanumber IS 'номер документа';


--
-- TOC entry 14784 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.hours; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.hours IS 'количество часов';


--
-- TOC entry 14785 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.date_retrainment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.date_retrainment IS 'год';


--
-- TOC entry 14786 (class 0 OID 0)
-- Dependencies: 754
-- Name: COLUMN retrainment.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN retrainment.sysdate IS 'sysdate';


--
-- TOC entry 755 (class 1259 OID 20803)
-- Dependencies: 7246 14
-- Name: sertificateeducation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sertificateeducation (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    educationinstitution character(36) NOT NULL,
    sertificatespeciality character(36) NOT NULL,
    date_sertificate date NOT NULL,
    sertificateserie character varying(255) NOT NULL,
    sertificatenumber character varying(255) NOT NULL,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.sertificateeducation OWNER TO postgres;

--
-- TOC entry 14787 (class 0 OID 0)
-- Dependencies: 755
-- Name: TABLE sertificateeducation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sertificateeducation IS 'Специальность по сертификату специалиста
';


--
-- TOC entry 14788 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.oid IS 'oid';


--
-- TOC entry 14789 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.people IS 'people';


--
-- TOC entry 14790 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.educationinstitution IS 'учебное заведение';


--
-- TOC entry 14791 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.sertificatespeciality IS 'специальность';


--
-- TOC entry 14792 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.date_sertificate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.date_sertificate IS 'дата получения';


--
-- TOC entry 14793 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.sertificateserie; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.sertificateserie IS 'серия сертификата';


--
-- TOC entry 14794 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.sertificatenumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.sertificatenumber IS 'номер сертификата';


--
-- TOC entry 14795 (class 0 OID 0)
-- Dependencies: 755
-- Name: COLUMN sertificateeducation.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificateeducation.sysdate IS 'sysdate';


--
-- TOC entry 756 (class 1259 OID 20810)
-- Dependencies: 14
-- Name: sertificatespeciality; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sertificatespeciality (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255),
    parent character(36)
);


ALTER TABLE mir.sertificatespeciality OWNER TO postgres;

--
-- TOC entry 14796 (class 0 OID 0)
-- Dependencies: 756
-- Name: TABLE sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sertificatespeciality IS 'Специальность по диплому
Авиационная и космическая медицина
Акушерство и гинекология
Анестезиология и реаниматология
Аллергология и иммунология
Восстановительная медицина
Гастроэнтерология
Гематология
...
';


--
-- TOC entry 14797 (class 0 OID 0)
-- Dependencies: 756
-- Name: COLUMN sertificatespeciality.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificatespeciality.oid IS 'oid';


--
-- TOC entry 14798 (class 0 OID 0)
-- Dependencies: 756
-- Name: COLUMN sertificatespeciality.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificatespeciality.id IS 'id';


--
-- TOC entry 14799 (class 0 OID 0)
-- Dependencies: 756
-- Name: COLUMN sertificatespeciality.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificatespeciality.name IS 'name';


--
-- TOC entry 14800 (class 0 OID 0)
-- Dependencies: 756
-- Name: COLUMN sertificatespeciality.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sertificatespeciality.parent IS 'parent';


--
-- TOC entry 757 (class 1259 OID 20813)
-- Dependencies: 7247 14
-- Name: skillimprovement; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE skillimprovement (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    educationinstitution character(36) NOT NULL,
    sertificatespeciality character(36) NOT NULL,
    cycle character varying(255),
    hours integer,
    date_skill date,
    diplomaserie character varying(255) NOT NULL,
    diplomanumber character varying(255) NOT NULL,
    issuedate date,
    sysdate timestamp without time zone DEFAULT now()
);


ALTER TABLE mir.skillimprovement OWNER TO postgres;

--
-- TOC entry 14801 (class 0 OID 0)
-- Dependencies: 757
-- Name: TABLE skillimprovement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE skillimprovement IS 'Повышение квалификации

';


--
-- TOC entry 14802 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.oid IS 'oid';


--
-- TOC entry 14803 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.people IS 'people';


--
-- TOC entry 14804 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.educationinstitution; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.educationinstitution IS 'учебное заведение';


--
-- TOC entry 14805 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.sertificatespeciality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.sertificatespeciality IS 'специальность';


--
-- TOC entry 14806 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.cycle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.cycle IS 'цикл';


--
-- TOC entry 14807 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.hours; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.hours IS 'количество часов';


--
-- TOC entry 14808 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.date_skill; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.date_skill IS 'дата получения квалификации';


--
-- TOC entry 14809 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.diplomaserie; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.diplomaserie IS 'серия документа';


--
-- TOC entry 14810 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.diplomanumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.diplomanumber IS 'номер документа';


--
-- TOC entry 14811 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.issuedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.issuedate IS 'дата получения документа';


--
-- TOC entry 14812 (class 0 OID 0)
-- Dependencies: 757
-- Name: COLUMN skillimprovement.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skillimprovement.sysdate IS 'sysdate';


--
-- TOC entry 758 (class 1259 OID 20820)
-- Dependencies: 14
-- Name: specialities; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE specialities (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255),
    parent character(36),
    okso integer
);


ALTER TABLE mir.specialities OWNER TO postgres;

--
-- TOC entry 14813 (class 0 OID 0)
-- Dependencies: 758
-- Name: TABLE specialities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE specialities IS 'Специальность
Авиационная и космическая медицина
Акушерство и гинекология
Анестезиология и реаниматология
Аллергология и иммунология
Восстановительная медицина
Гастроэнтерология
Гематология
...
';


--
-- TOC entry 14814 (class 0 OID 0)
-- Dependencies: 758
-- Name: COLUMN specialities.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialities.oid IS 'oid';


--
-- TOC entry 14815 (class 0 OID 0)
-- Dependencies: 758
-- Name: COLUMN specialities.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialities.id IS 'id';


--
-- TOC entry 14816 (class 0 OID 0)
-- Dependencies: 758
-- Name: COLUMN specialities.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialities.name IS 'name';


--
-- TOC entry 14817 (class 0 OID 0)
-- Dependencies: 758
-- Name: COLUMN specialities.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialities.parent IS 'parent';


--
-- TOC entry 14818 (class 0 OID 0)
-- Dependencies: 758
-- Name: COLUMN specialities.okso; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialities.okso IS 'код ОКСО';


--
-- TOC entry 759 (class 1259 OID 20823)
-- Dependencies: 6768 14
-- Name: people_educations; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW people_educations AS
    SELECT people_educations.codeeducation, people_educations.codeeducationname, people_educations.educationoid, people_educations.people, people_educations.dateend, people_educations.specialities_name, people_educations.degree_name, people_educations.educationtype_name, people_educations.diplomaserie, people_educations.diplomanumber FROM (((((SELECT 1 AS codeeducation, 'Основное образование'::text AS codeeducationname, diplomaeducation.oid AS educationoid, diplomaeducation.people, diplomaeducation.date_graduation AS dateend, specialities.name AS specialities_name, NULL::character varying AS degree_name, educationtype.name AS educationtype_name, diplomaeducation.diplomaserie, diplomaeducation.diplomanumber FROM ((diplomaeducation diplomaeducation LEFT JOIN specialities specialities ON ((specialities.oid = diplomaeducation.specialities))) LEFT JOIN educationtype educationtype ON ((educationtype.oid = diplomaeducation.educationtype))) UNION ALL SELECT 2 AS codeeducation, 'Послевузовское образование'::text AS codeeducationname, postgraduateeducation.oid AS educationoid, postgraduateeducation.people, postgraduateeducation.dateend, sertificatespeciality.name AS specialities_name, academicdegree.name AS degree_name, posteducation.name AS educationtype_name, postgraduateeducation.diplomaserie, postgraduateeducation.diplomanumber FROM (((postgraduateeducation postgraduateeducation LEFT JOIN sertificatespeciality sertificatespeciality ON ((sertificatespeciality.oid = postgraduateeducation.sertificatespeciality))) LEFT JOIN academicdegree academicdegree ON ((academicdegree.oid = postgraduateeducation.academicdegree))) LEFT JOIN posteducation posteducation ON ((posteducation.oid = postgraduateeducation.posteducation)))) UNION ALL SELECT 3 AS codeeducation, 'Переподготовка'::text AS codeeducationname, retrainment.oid AS educationoid, retrainment.people, retrainment.date_retrainment, sertificatespeciality.name AS specialities_name, NULL::character varying AS degree_name, NULL::character varying AS educationtype_name, retrainment.diplomaserie, retrainment.diplomanumber FROM (retrainment retrainment LEFT JOIN sertificatespeciality sertificatespeciality ON ((sertificatespeciality.oid = retrainment.sertificatespeciality)))) UNION ALL SELECT 4 AS codeeducation, 'Сертификат специалиста'::text AS codeeducationname, sertificateeducation.oid AS educationoid, sertificateeducation.people, sertificateeducation.date_sertificate, sertificatespeciality.name AS specialities_name, NULL::character varying AS degree_name, NULL::character varying AS educationtype_name, sertificateeducation.sertificateserie, sertificateeducation.sertificatenumber FROM (sertificateeducation sertificateeducation LEFT JOIN sertificatespeciality sertificatespeciality ON ((sertificatespeciality.oid = sertificateeducation.sertificatespeciality)))) UNION ALL SELECT 5 AS codeeducation, 'Повышение квалификации'::text AS codeeducationname, skillimprovement.oid AS educationoid, skillimprovement.people, skillimprovement.issuedate, sertificatespeciality.name AS specialities_name, NULL::character varying AS degree_name, NULL::character varying AS educationtype_name, skillimprovement.diplomaserie, skillimprovement.diplomanumber FROM (skillimprovement skillimprovement LEFT JOIN sertificatespeciality sertificatespeciality ON ((sertificatespeciality.oid = skillimprovement.sertificatespeciality)))) UNION ALL SELECT 6 AS codeeducation, 'Квалификация'::text AS codeeducationname, qualification.oid AS educationoid, qualification.people, qualification.date_qualification, sertificatespeciality.name AS specialities_name, qualificationcategory.name AS degree_name, NULL::character varying AS educationtype_name, NULL::character varying AS diplomaserie, NULL::character varying AS diplomanumber FROM ((qualification qualification LEFT JOIN sertificatespeciality sertificatespeciality ON ((sertificatespeciality.oid = qualification.sertificatespeciality))) LEFT JOIN qualificationcategory qualificationcategory ON ((qualificationcategory.oid = qualification.qualificationcategory)))) people_educations ORDER BY people_educations.dateend, people_educations.codeeducation;


ALTER TABLE mir.people_educations OWNER TO postgres;

--
-- TOC entry 760 (class 1259 OID 20828)
-- Dependencies: 14
-- Name: people_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_history (
    oid character(36) NOT NULL,
    dtcreation date,
    id numeric(8,0),
    firstname character varying(100),
    lastname character varying(100),
    middlename character varying(100),
    sex numeric(8,0),
    livein numeric(8,0),
    sstate numeric(8,0),
    pacient character(36),
    addressex1 character(36),
    addressex2 character(36),
    email character varying(100),
    telhome character varying(100),
    telwork character varying(100),
    telsot1 character varying(100),
    telsot2 character varying(100),
    district character(36),
    company character(36),
    peopledoctype character(36),
    peopledocser character varying(100),
    peopledocnum character varying(100),
    dispuchet numeric(1,0),
    benefittype character(36),
    snils character varying(100),
    benefitdoctype character(36),
    benefitdocnum character varying(100),
    invaliditytype character(36),
    invalidstep numeric(8,0),
    invalidvid numeric(8,0),
    profession character(36),
    peoplepost character(36),
    dependant numeric(1,0),
    mestorab character varying(100),
    phonecode character varying(100),
    webmail character varying(100),
    webphone character varying(100),
    region character(36),
    category character(36),
    placework character varying(250),
    birthday date,
    login character varying(100),
    waslogin numeric(1,0),
    password character varying(100),
    lpu character(36),
    deathdate date,
    peopledocgive character varying(255),
    peopledocgivedate date,
    inn character varying(255),
    gasurf_oid character varying(255)
);


ALTER TABLE mir.people_history OWNER TO postgres;

--
-- TOC entry 14819 (class 0 OID 0)
-- Dependencies: 760
-- Name: TABLE people_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_history IS 'пипл';


--
-- TOC entry 14820 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.oid IS 'oid';


--
-- TOC entry 14821 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.dtcreation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.dtcreation IS 'dtcreation';


--
-- TOC entry 14822 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.id IS 'id';


--
-- TOC entry 14823 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.firstname IS 'имя';


--
-- TOC entry 14824 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.lastname IS 'фамилия';


--
-- TOC entry 14825 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.middlename IS 'отчество';


--
-- TOC entry 14826 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.sex IS '0-Ж  1-М';


--
-- TOC entry 14827 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.livein; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.livein IS 'livein';


--
-- TOC entry 14828 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.sstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.sstate IS '??';


--
-- TOC entry 14829 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.pacient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.pacient IS 'pacient';


--
-- TOC entry 14830 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.addressex1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.addressex1 IS 'addressex1';


--
-- TOC entry 14831 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.addressex2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.addressex2 IS 'addressex2';


--
-- TOC entry 14832 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.email IS 'email';


--
-- TOC entry 14833 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.telhome; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.telhome IS 'telhome';


--
-- TOC entry 14834 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.telwork; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.telwork IS 'telwork';


--
-- TOC entry 14835 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.telsot1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.telsot1 IS 'telsot1';


--
-- TOC entry 14836 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.telsot2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.telsot2 IS 'telsot2';


--
-- TOC entry 14837 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.district IS 'district';


--
-- TOC entry 14838 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.company IS 'company';


--
-- TOC entry 14839 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peopledoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peopledoctype IS 'peopledoctype';


--
-- TOC entry 14840 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peopledocser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peopledocser IS 'peopledocser';


--
-- TOC entry 14841 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peopledocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peopledocnum IS 'peopledocnum';


--
-- TOC entry 14842 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.dispuchet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.dispuchet IS 'dispuchet';


--
-- TOC entry 14843 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.benefittype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.benefittype IS 'benefittype';


--
-- TOC entry 14844 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.snils; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.snils IS 'snils';


--
-- TOC entry 14845 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.benefitdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.benefitdoctype IS 'benefitdoctype';


--
-- TOC entry 14846 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.benefitdocnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.benefitdocnum IS 'benefitdocnum';


--
-- TOC entry 14847 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.invaliditytype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.invaliditytype IS 'invaliditytype';


--
-- TOC entry 14848 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.invalidstep; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.invalidstep IS 'invalidstep';


--
-- TOC entry 14849 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.invalidvid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.invalidvid IS 'invalidvid';


--
-- TOC entry 14850 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.profession; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.profession IS 'profession';


--
-- TOC entry 14851 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peoplepost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peoplepost IS 'peoplepost';


--
-- TOC entry 14852 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.dependant; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.dependant IS 'dependant';


--
-- TOC entry 14853 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.mestorab; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.mestorab IS 'mestorab';


--
-- TOC entry 14854 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.phonecode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.phonecode IS 'phonecode';


--
-- TOC entry 14855 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.webmail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.webmail IS 'webmail';


--
-- TOC entry 14856 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.webphone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.webphone IS 'webphone';


--
-- TOC entry 14857 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.region IS 'region';


--
-- TOC entry 14858 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.category IS 'category';


--
-- TOC entry 14859 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.placework; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.placework IS 'placework';


--
-- TOC entry 14860 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.birthday IS 'днюха';


--
-- TOC entry 14861 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.login IS 'login';


--
-- TOC entry 14862 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.waslogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.waslogin IS 'waslogin';


--
-- TOC entry 14863 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.password IS 'password';


--
-- TOC entry 14864 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.lpu IS 'lpu';


--
-- TOC entry 14865 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.deathdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.deathdate IS 'дата смерти';


--
-- TOC entry 14866 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peopledocgive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peopledocgive IS 'кто выдал документ удостоверяющий личсноть';


--
-- TOC entry 14867 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.peopledocgivedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.peopledocgivedate IS 'когда выдали документ удостоверяющий личсноть';


--
-- TOC entry 14868 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.inn IS 'инн';


--
-- TOC entry 14869 (class 0 OID 0)
-- Dependencies: 760
-- Name: COLUMN people_history.gasurf_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_history.gasurf_oid IS 'идентификатор в ис минздавсоцразвития';


--
-- TOC entry 761 (class 1259 OID 20834)
-- Dependencies: 7248 14
-- Name: person; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE person (
    oid character(36) NOT NULL,
    firstname character varying(100),
    lastname character varying(100),
    middlename character varying(100),
    birthday date,
    email character varying(255),
    password character varying(100),
    login character varying(100),
    waslogin numeric(1,0) DEFAULT 0 NOT NULL,
    phonecode character varying(100)
);


ALTER TABLE mir.person OWNER TO postgres;

--
-- TOC entry 14870 (class 0 OID 0)
-- Dependencies: 761
-- Name: TABLE person; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE person IS 'PERSON';


--
-- TOC entry 14871 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.oid IS 'oid';


--
-- TOC entry 14872 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.firstname IS 'firstname';


--
-- TOC entry 14873 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.lastname IS 'lastname';


--
-- TOC entry 14874 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.middlename IS 'middlename';


--
-- TOC entry 14875 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.birthday IS 'birthday';


--
-- TOC entry 14876 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.email IS 'email';


--
-- TOC entry 14877 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.password IS 'password';


--
-- TOC entry 14878 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.login IS 'login';


--
-- TOC entry 14879 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.waslogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.waslogin IS 'waslogin';


--
-- TOC entry 14880 (class 0 OID 0)
-- Dependencies: 761
-- Name: COLUMN person.phonecode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person.phonecode IS 'phonecode';


--
-- TOC entry 762 (class 1259 OID 20841)
-- Dependencies: 6769 14
-- Name: people_info; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW people_info AS
    SELECT person.oid, people.dtcreation, people.id, people.sex, people.livein, people.sstate, people.pacient, people.addressex1, people.addressex2, people.lpu, people.email, people.telhome, people.telwork, people.telsot1, people.telsot2, people.district, people.company, people.peopledoctype, people.peopledocser, people.peopledocnum, people.dispuchet, people.benefittype, people.snils, people.benefitdoctype, people.benefitdocnum, people.profession, people.peoplepost, people.dependant, people.firstname, people.lastname, people.middlename, people.birthday, party.photo, party.optimisticlockfield, party.gcrecord, people.password, people.login, people.waslogin, people.region, people.webmail, people.webphone, people.category, people.placework FROM people people, person, party WHERE (((people.oid = person.oid) AND (person.oid = party.oid)) AND (party.gcrecord IS NULL));


ALTER TABLE mir.people_info OWNER TO postgres;

--
-- TOC entry 14881 (class 0 OID 0)
-- Dependencies: 762
-- Name: VIEW people_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW people_info IS 'PEOPLE_INFO';


--
-- TOC entry 763 (class 1259 OID 20846)
-- Dependencies: 14
-- Name: people_monitoring; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_monitoring (
    oid character varying(36) NOT NULL,
    people character varying(36) NOT NULL,
    post character varying(36) NOT NULL,
    type character varying NOT NULL
);


ALTER TABLE mir.people_monitoring OWNER TO postgres;

--
-- TOC entry 764 (class 1259 OID 20852)
-- Dependencies: 14
-- Name: people_relation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_relation (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    people_relation character(36) NOT NULL,
    people_relation_status character(36)
);


ALTER TABLE mir.people_relation OWNER TO postgres;

--
-- TOC entry 14882 (class 0 OID 0)
-- Dependencies: 764
-- Name: TABLE people_relation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_relation IS 'Представителя пациента';


--
-- TOC entry 14883 (class 0 OID 0)
-- Dependencies: 764
-- Name: COLUMN people_relation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation.oid IS 'oid';


--
-- TOC entry 14884 (class 0 OID 0)
-- Dependencies: 764
-- Name: COLUMN people_relation.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation.people IS 'пипл';


--
-- TOC entry 14885 (class 0 OID 0)
-- Dependencies: 764
-- Name: COLUMN people_relation.people_relation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation.people_relation IS 'people_relation';


--
-- TOC entry 14886 (class 0 OID 0)
-- Dependencies: 764
-- Name: COLUMN people_relation.people_relation_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation.people_relation_status IS 'people_relation_status';


--
-- TOC entry 765 (class 1259 OID 20855)
-- Dependencies: 14
-- Name: people_relation_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_relation_status (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer
);


ALTER TABLE mir.people_relation_status OWNER TO postgres;

--
-- TOC entry 14887 (class 0 OID 0)
-- Dependencies: 765
-- Name: TABLE people_relation_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_relation_status IS 'Статус представителя пациента
00Личный
01Родитель
02Усыновитель
03Опекун(физ.лицо)
04Опекун(соц.учреждение)
05Попечитель
';


--
-- TOC entry 14888 (class 0 OID 0)
-- Dependencies: 765
-- Name: COLUMN people_relation_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation_status.oid IS 'oid';


--
-- TOC entry 14889 (class 0 OID 0)
-- Dependencies: 765
-- Name: COLUMN people_relation_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation_status.name IS 'name';


--
-- TOC entry 14890 (class 0 OID 0)
-- Dependencies: 765
-- Name: COLUMN people_relation_status.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_relation_status.foms_code IS 'foms_code';


--
-- TOC entry 766 (class 1259 OID 20858)
-- Dependencies: 7249 7250 7251 14
-- Name: people_specialty; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_specialty (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    specialty character(36) NOT NULL,
    create_datetime timestamp without time zone DEFAULT now(),
    main numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_people_specialty$main" CHECK (((main IS NULL) OR ((main >= (0)::numeric) AND (main <= (1)::numeric))))
);


ALTER TABLE mir.people_specialty OWNER TO postgres;

--
-- TOC entry 14891 (class 0 OID 0)
-- Dependencies: 766
-- Name: TABLE people_specialty; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_specialty IS 'специальность пациента';


--
-- TOC entry 14892 (class 0 OID 0)
-- Dependencies: 766
-- Name: COLUMN people_specialty.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_specialty.oid IS 'oid';


--
-- TOC entry 14893 (class 0 OID 0)
-- Dependencies: 766
-- Name: COLUMN people_specialty.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_specialty.people IS 'people';


--
-- TOC entry 14894 (class 0 OID 0)
-- Dependencies: 766
-- Name: COLUMN people_specialty.specialty; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_specialty.specialty IS 'специальность';


--
-- TOC entry 14895 (class 0 OID 0)
-- Dependencies: 766
-- Name: COLUMN people_specialty.create_datetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_specialty.create_datetime IS 'дата создания (системная)';


--
-- TOC entry 14896 (class 0 OID 0)
-- Dependencies: 766
-- Name: COLUMN people_specialty.main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_specialty.main IS 'признак актуальности специальности';


--
-- TOC entry 767 (class 1259 OID 20864)
-- Dependencies: 7252 7253 7254 7255 7256 7257 14
-- Name: people_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE people_status (
    h_date date NOT NULL,
    h_date_end date,
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    marriage character(36),
    citizenship character(36),
    military character(36),
    isrealperson numeric(1,0) DEFAULT 0,
    hasauto numeric(1,0) DEFAULT 0,
    haschildren numeric(1,0) DEFAULT 0,
    inn character varying(100),
    CONSTRAINT "ck_people_s$hasauto" CHECK (((hasauto IS NULL) OR ((hasauto >= (0)::numeric) AND (hasauto <= (1)::numeric)))),
    CONSTRAINT "ck_people_s$haschildren" CHECK (((haschildren IS NULL) OR ((haschildren >= (0)::numeric) AND (haschildren <= (1)::numeric)))),
    CONSTRAINT "ck_people_s$isrealperson" CHECK (((isrealperson IS NULL) OR ((isrealperson >= (0)::numeric) AND (isrealperson <= (1)::numeric))))
);


ALTER TABLE mir.people_status OWNER TO postgres;

--
-- TOC entry 14897 (class 0 OID 0)
-- Dependencies: 767
-- Name: TABLE people_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE people_status IS 'Текущее состояние пипла';


--
-- TOC entry 14898 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.h_date IS 'h_date';


--
-- TOC entry 14899 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.h_date_end IS 'h_date_end';


--
-- TOC entry 14900 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.oid IS 'oid';


--
-- TOC entry 14901 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.people IS 'people';


--
-- TOC entry 14902 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.marriage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.marriage IS 'семейное положение';


--
-- TOC entry 14903 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.citizenship; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.citizenship IS 'гражданство';


--
-- TOC entry 14904 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.military; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.military IS 'отношение к военной службе';


--
-- TOC entry 14905 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.isrealperson; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.isrealperson IS 'isrealperson';


--
-- TOC entry 14906 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.hasauto; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.hasauto IS 'наличие личного автомобиля';


--
-- TOC entry 14907 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.haschildren; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.haschildren IS 'наличие детей младше 16 лет';


--
-- TOC entry 14908 (class 0 OID 0)
-- Dependencies: 767
-- Name: COLUMN people_status.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN people_status.inn IS 'ИНН';


--
-- TOC entry 768 (class 1259 OID 20873)
-- Dependencies: 7258 7259 14
-- Name: peopledoctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peopledoctype (
    oid character(36) NOT NULL,
    gasurf_id integer,
    foms_code integer,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_peopledoctype$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.peopledoctype OWNER TO postgres;

--
-- TOC entry 14909 (class 0 OID 0)
-- Dependencies: 768
-- Name: TABLE peopledoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peopledoctype IS 'Тип документа';


--
-- TOC entry 14910 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.oid IS 'oid';


--
-- TOC entry 14911 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.gasurf_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.gasurf_id IS 'идентификатор в системе минздравсоцразвития';


--
-- TOC entry 14912 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.foms_code IS 'код ФОМС';


--
-- TOC entry 14913 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.show IS '1- показывать 0- скрывать';


--
-- TOC entry 14914 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 14915 (class 0 OID 0)
-- Dependencies: 768
-- Name: COLUMN peopledoctype.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peopledoctype.status IS 'Статусы:
        0-актуальный
        1-предназначен для добавления
        2-предназначен для редактрования
        3-предназначен для удаления
        4-удален';


--
-- TOC entry 769 (class 1259 OID 20881)
-- Dependencies: 14
-- Name: peoplekartaplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peoplekartaplace (
    oid character(36) NOT NULL,
    people character(36),
    kartaplace character(36),
    comment character varying(100),
    lpu character(36),
    numberkarta character varying(20)
);


ALTER TABLE mir.peoplekartaplace OWNER TO postgres;

--
-- TOC entry 14916 (class 0 OID 0)
-- Dependencies: 769
-- Name: TABLE peoplekartaplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peoplekartaplace IS 'PEOPLEKARTAPLACE';


--
-- TOC entry 14917 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.oid IS 'oid';


--
-- TOC entry 14918 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.people IS 'people';


--
-- TOC entry 14919 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.kartaplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.kartaplace IS 'kartaplace';


--
-- TOC entry 14920 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.comment IS 'comment';


--
-- TOC entry 14921 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.lpu IS 'lpu';


--
-- TOC entry 14922 (class 0 OID 0)
-- Dependencies: 769
-- Name: COLUMN peoplekartaplace.numberkarta; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplekartaplace.numberkarta IS 'numberkarta';


--
-- TOC entry 770 (class 1259 OID 20884)
-- Dependencies: 7260 14
-- Name: peoplemoderation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peoplemoderation (
    oid character varying(36),
    firstname character varying(100),
    lastname character varying(100),
    middlename character varying(100),
    userpasssword character varying(100),
    birthday date,
    sex numeric,
    insurance_ser character varying(100),
    insurance_num character varying(100),
    adr character varying(36),
    telsot character varying(20),
    email character varying(50),
    status numeric DEFAULT 0,
    moderationfalse character varying(2000),
    ip character varying(20),
    dtrec date,
    insurance_begindate date,
    insurance_enddate date,
    insurance_company character varying(36),
    insurance_pay_type character varying(36),
    userlogin character varying(100),
    telhome character varying(20),
    sysuser character varying(50),
    dtchangestatus date,
    region character varying(36)
);


ALTER TABLE mir.peoplemoderation OWNER TO postgres;

--
-- TOC entry 14923 (class 0 OID 0)
-- Dependencies: 770
-- Name: TABLE peoplemoderation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peoplemoderation IS 'PEOPLEMODERATION';


--
-- TOC entry 14924 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.oid IS 'oid';


--
-- TOC entry 14925 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.firstname IS 'firstname';


--
-- TOC entry 14926 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.lastname IS 'lastname';


--
-- TOC entry 14927 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.middlename IS 'middlename';


--
-- TOC entry 14928 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.userpasssword; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.userpasssword IS 'userpasssword';


--
-- TOC entry 14929 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.birthday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.birthday IS 'birthday';


--
-- TOC entry 14930 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.sex IS 'sex';


--
-- TOC entry 14931 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_ser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_ser IS 'insurance_ser';


--
-- TOC entry 14932 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_num IS 'insurance_num';


--
-- TOC entry 14933 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.adr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.adr IS 'adr';


--
-- TOC entry 14934 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.telsot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.telsot IS 'telsot';


--
-- TOC entry 14935 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.email IS 'email';


--
-- TOC entry 14936 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.status IS 'status';


--
-- TOC entry 14937 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.moderationfalse; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.moderationfalse IS 'moderationfalse';


--
-- TOC entry 14938 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.ip IS 'ip';


--
-- TOC entry 14939 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.dtrec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.dtrec IS 'dtrec';


--
-- TOC entry 14940 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_begindate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_begindate IS 'insurance_begindate';


--
-- TOC entry 14941 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_enddate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_enddate IS 'insurance_enddate';


--
-- TOC entry 14942 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_company IS 'insurance_company';


--
-- TOC entry 14943 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.insurance_pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.insurance_pay_type IS 'insurance_insurtype';


--
-- TOC entry 14944 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.userlogin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.userlogin IS 'userlogin';


--
-- TOC entry 14945 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.telhome; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.telhome IS 'telhome';


--
-- TOC entry 14946 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.sysuser IS 'sysuser';


--
-- TOC entry 14947 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.dtchangestatus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.dtchangestatus IS 'dtchangestatus';


--
-- TOC entry 14948 (class 0 OID 0)
-- Dependencies: 770
-- Name: COLUMN peoplemoderation.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation.region IS 'Регион';


--
-- TOC entry 771 (class 1259 OID 20891)
-- Dependencies: 14
-- Name: peoplemoderation_ta; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peoplemoderation_ta (
    oid character varying(36),
    lpu character varying(36),
    district character varying(36),
    pm_oid character varying(36)
);


ALTER TABLE mir.peoplemoderation_ta OWNER TO postgres;

--
-- TOC entry 14949 (class 0 OID 0)
-- Dependencies: 771
-- Name: TABLE peoplemoderation_ta; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peoplemoderation_ta IS 'PEOPLEMODERATION_TA';


--
-- TOC entry 14950 (class 0 OID 0)
-- Dependencies: 771
-- Name: COLUMN peoplemoderation_ta.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation_ta.oid IS 'oid';


--
-- TOC entry 14951 (class 0 OID 0)
-- Dependencies: 771
-- Name: COLUMN peoplemoderation_ta.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation_ta.lpu IS 'lpu';


--
-- TOC entry 14952 (class 0 OID 0)
-- Dependencies: 771
-- Name: COLUMN peoplemoderation_ta.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation_ta.district IS 'district';


--
-- TOC entry 14953 (class 0 OID 0)
-- Dependencies: 771
-- Name: COLUMN peoplemoderation_ta.pm_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplemoderation_ta.pm_oid IS 'pm_oid';


--
-- TOC entry 772 (class 1259 OID 20894)
-- Dependencies: 14
-- Name: peoplephoneabsence; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peoplephoneabsence (
    oid character(36) NOT NULL,
    people character(36),
    reason numeric
);


ALTER TABLE mir.peoplephoneabsence OWNER TO postgres;

--
-- TOC entry 14954 (class 0 OID 0)
-- Dependencies: 772
-- Name: TABLE peoplephoneabsence; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peoplephoneabsence IS 'Причина отсутствия телефона в базе ';


--
-- TOC entry 14955 (class 0 OID 0)
-- Dependencies: 772
-- Name: COLUMN peoplephoneabsence.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplephoneabsence.oid IS 'oid';


--
-- TOC entry 14956 (class 0 OID 0)
-- Dependencies: 772
-- Name: COLUMN peoplephoneabsence.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplephoneabsence.people IS 'people';


--
-- TOC entry 14957 (class 0 OID 0)
-- Dependencies: 772
-- Name: COLUMN peoplephoneabsence.reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplephoneabsence.reason IS 'reason';


--
-- TOC entry 773 (class 1259 OID 20900)
-- Dependencies: 14
-- Name: peoplepost; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE peoplepost (
    oid character(36) NOT NULL,
    profcode character varying(100)
);


ALTER TABLE mir.peoplepost OWNER TO postgres;

--
-- TOC entry 14958 (class 0 OID 0)
-- Dependencies: 773
-- Name: TABLE peoplepost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE peoplepost IS 'должности пациента';


--
-- TOC entry 14959 (class 0 OID 0)
-- Dependencies: 773
-- Name: COLUMN peoplepost.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplepost.oid IS 'oid';


--
-- TOC entry 14960 (class 0 OID 0)
-- Dependencies: 773
-- Name: COLUMN peoplepost.profcode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN peoplepost.profcode IS 'profcode';


--
-- TOC entry 774 (class 1259 OID 20903)
-- Dependencies: 6770 14
-- Name: peoplescheduleplace; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW peoplescheduleplace AS
    (((((SELECT 0 AS id, 'Регистратура'::text AS fc_name UNION ALL SELECT 1 AS id, 'Контакт-центр'::text AS fc_name) UNION ALL SELECT 2 AS id, 'Сайт'::text AS fc_name) UNION ALL SELECT 3 AS id, 'Мобильный сайт'::text AS fc_name) UNION ALL SELECT 4 AS id, 'Запись через SMS'::text AS fc_name) UNION ALL SELECT 5 AS id, 'Терминал'::text AS fc_name) UNION ALL SELECT 6 AS id, 'Скорая помощь'::text AS fc_name;


ALTER TABLE mir.peoplescheduleplace OWNER TO postgres;

--
-- TOC entry 14961 (class 0 OID 0)
-- Dependencies: 774
-- Name: VIEW peoplescheduleplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW peoplescheduleplace IS 'PEOPLESCHEDULEPLACE';


--
-- TOC entry 775 (class 1259 OID 20907)
-- Dependencies: 6771 14
-- Name: peopleschedulestate; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW peopleschedulestate AS
    (((((SELECT 0 AS id, 'Свободен'::text AS fc_name UNION ALL SELECT 1 AS id, 'Записан'::text AS fc_name) UNION ALL SELECT 2 AS id, 'Выполнен'::text AS fc_name) UNION ALL SELECT 3 AS id, 'Явка'::text AS fc_name) UNION ALL SELECT 4 AS id, 'Живая очередь'::text AS fc_name) UNION ALL SELECT 5 AS id, 'Без очереди'::text AS fc_name) UNION ALL SELECT 6 AS id, 'Неявка'::text AS fc_name;


ALTER TABLE mir.peopleschedulestate OWNER TO postgres;

--
-- TOC entry 14962 (class 0 OID 0)
-- Dependencies: 775
-- Name: VIEW peopleschedulestate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW peopleschedulestate IS 'PEOPLESCHEDULESTATE';


--
-- TOC entry 776 (class 1259 OID 20911)
-- Dependencies: 14
-- Name: persistentpermission; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE persistentpermission (
    oid character(36) NOT NULL,
    serializedpermission text,
    role character(36)
);


ALTER TABLE mir.persistentpermission OWNER TO postgres;

--
-- TOC entry 14963 (class 0 OID 0)
-- Dependencies: 776
-- Name: TABLE persistentpermission; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE persistentpermission IS 'PERSISTENTPERMISSION';


--
-- TOC entry 14964 (class 0 OID 0)
-- Dependencies: 776
-- Name: COLUMN persistentpermission.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN persistentpermission.oid IS 'oid';


--
-- TOC entry 14965 (class 0 OID 0)
-- Dependencies: 776
-- Name: COLUMN persistentpermission.serializedpermission; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN persistentpermission.serializedpermission IS 'serializedpermission';


--
-- TOC entry 14966 (class 0 OID 0)
-- Dependencies: 776
-- Name: COLUMN persistentpermission.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN persistentpermission.role IS 'role';


--
-- TOC entry 777 (class 1259 OID 20917)
-- Dependencies: 7261 14
-- Name: person_setting; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE person_setting (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    parametr_oid character(36) NOT NULL,
    parametr_value character varying(255) NOT NULL,
    status integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.person_setting OWNER TO postgres;

--
-- TOC entry 14967 (class 0 OID 0)
-- Dependencies: 777
-- Name: TABLE person_setting; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE person_setting IS 'настройки для пользователей';


--
-- TOC entry 14968 (class 0 OID 0)
-- Dependencies: 777
-- Name: COLUMN person_setting.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person_setting.oid IS 'oid';


--
-- TOC entry 14969 (class 0 OID 0)
-- Dependencies: 777
-- Name: COLUMN person_setting.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person_setting.sysuser IS 'Oid sysuser';


--
-- TOC entry 14970 (class 0 OID 0)
-- Dependencies: 777
-- Name: COLUMN person_setting.parametr_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person_setting.parametr_oid IS 'oid параметра';


--
-- TOC entry 14971 (class 0 OID 0)
-- Dependencies: 777
-- Name: COLUMN person_setting.parametr_value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person_setting.parametr_value IS 'Значения параметров';


--
-- TOC entry 14972 (class 0 OID 0)
-- Dependencies: 777
-- Name: COLUMN person_setting.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN person_setting.status IS 'Статус параметра(1- включен, 0-выключен)';


--
-- TOC entry 778 (class 1259 OID 20921)
-- Dependencies: 14
-- Name: phact_desc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE phact_desc (
    phactid integer NOT NULL,
    descid integer NOT NULL,
    number smallint
);


ALTER TABLE mir.phact_desc OWNER TO postgres;

--
-- TOC entry 14973 (class 0 OID 0)
-- Dependencies: 778
-- Name: TABLE phact_desc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE phact_desc IS 'Фармакологические действия для описаний препаратов';


--
-- TOC entry 14974 (class 0 OID 0)
-- Dependencies: 778
-- Name: COLUMN phact_desc.phactid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phact_desc.phactid IS 'ВК на таблицу PHARMAACTIONS';


--
-- TOC entry 14975 (class 0 OID 0)
-- Dependencies: 778
-- Name: COLUMN phact_desc.descid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phact_desc.descid IS 'ВК на таблицу DESCRIPTIONS';


--
-- TOC entry 14976 (class 0 OID 0)
-- Dependencies: 778
-- Name: COLUMN phact_desc.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phact_desc.number IS 'Порядковый номер ФД';


--
-- TOC entry 779 (class 1259 OID 20924)
-- Dependencies: 14
-- Name: pharmaactions; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pharmaactions (
    id integer NOT NULL,
    name character varying(1024),
    mainid integer,
    highid integer
);


ALTER TABLE mir.pharmaactions OWNER TO postgres;

--
-- TOC entry 14977 (class 0 OID 0)
-- Dependencies: 779
-- Name: TABLE pharmaactions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pharmaactions IS 'Словарь "Фармакологическое действие"';


--
-- TOC entry 14978 (class 0 OID 0)
-- Dependencies: 779
-- Name: COLUMN pharmaactions.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmaactions.id IS 'Первичный ключ';


--
-- TOC entry 14979 (class 0 OID 0)
-- Dependencies: 779
-- Name: COLUMN pharmaactions.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmaactions.name IS 'Фармакологическое действие';


--
-- TOC entry 14980 (class 0 OID 0)
-- Dependencies: 779
-- Name: COLUMN pharmaactions.mainid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmaactions.mainid IS 'ПК главного синонима - ВК на себя';


--
-- TOC entry 14981 (class 0 OID 0)
-- Dependencies: 779
-- Name: COLUMN pharmaactions.highid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmaactions.highid IS 'ПК ФД уровня выше - ВК на себя';


--
-- TOC entry 780 (class 1259 OID 20930)
-- Dependencies: 7262 14
-- Name: pharmacy; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pharmacy (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    iswork numeric(1,0) DEFAULT 1 NOT NULL,
    code character varying(255) NOT NULL,
    address character(36),
    region character(36)
);


ALTER TABLE mir.pharmacy OWNER TO postgres;

--
-- TOC entry 14982 (class 0 OID 0)
-- Dependencies: 780
-- Name: TABLE pharmacy; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pharmacy IS 'Аптеки';


--
-- TOC entry 14983 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.oid IS 'oid';


--
-- TOC entry 14984 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.name IS 'name';


--
-- TOC entry 14985 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.iswork; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.iswork IS 'iswork';


--
-- TOC entry 14986 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.code IS 'code';


--
-- TOC entry 14987 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.address; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.address IS 'address';


--
-- TOC entry 14988 (class 0 OID 0)
-- Dependencies: 780
-- Name: COLUMN pharmacy.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pharmacy.region IS 'region';


--
-- TOC entry 781 (class 1259 OID 20937)
-- Dependencies: 7263 14
-- Name: phisical_activity; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE phisical_activity (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    value numeric DEFAULT 0 NOT NULL
);


ALTER TABLE mir.phisical_activity OWNER TO postgres;

--
-- TOC entry 14989 (class 0 OID 0)
-- Dependencies: 781
-- Name: TABLE phisical_activity; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE phisical_activity IS 'phisical_activity';


--
-- TOC entry 14990 (class 0 OID 0)
-- Dependencies: 781
-- Name: COLUMN phisical_activity.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phisical_activity.oid IS 'oid';


--
-- TOC entry 14991 (class 0 OID 0)
-- Dependencies: 781
-- Name: COLUMN phisical_activity.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phisical_activity.name IS 'name';


--
-- TOC entry 14992 (class 0 OID 0)
-- Dependencies: 781
-- Name: COLUMN phisical_activity.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN phisical_activity.value IS 'value';


--
-- TOC entry 782 (class 1259 OID 20944)
-- Dependencies: 7264 7265 7266 7267 14
-- Name: pinfo; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pinfo (
    oid character(36) NOT NULL,
    blood_gr character varying(255),
    bloood_rez character varying(255),
    marriage character(36),
    nacionality character(36),
    education character(36),
    living_condition character varying(255),
    liveplace character(36),
    regplace character(36),
    socialrank character(36),
    favorkind character(36),
    dispgroup character(36),
    country character(36),
    parent_status_id character(36),
    parent_surname character varying(255),
    parent_name character varying(100),
    parent_patron character varying(100),
    burn_place character varying(100),
    flurolast_dt date,
    fluroplan_dt date,
    ambul_dt date,
    stacionar_dt date,
    sanator_dt date,
    spec_dt date,
    daystac_dt date,
    alko boolean,
    narko boolean,
    smok boolean,
    hard_life character(36),
    recipe_lgot_type character(36),
    grouphealth integer,
    inn character varying(100),
    phone_home character varying(25),
    phone_mobile character varying(20),
    icd10_id character(36),
    sysdate timestamp(0) without time zone DEFAULT now(),
    undefined_pac numeric(1,0) DEFAULT 0,
    uek character varying(19),
    people_profession character varying(255),
    is_agreement_pac boolean,
    alien boolean,
    birthtime time(0) without time zone,
    personal_agreement numeric(1,0),
    personal_agreement_date timestamp(0) without time zone,
    CONSTRAINT "ck_pinfo$personal_agreemen" CHECK (((personal_agreement IS NULL) OR ((personal_agreement >= (0)::numeric) AND (personal_agreement <= (1)::numeric)))),
    CONSTRAINT "ck_pinfo$undefined_pac" CHECK (((undefined_pac IS NULL) OR ((undefined_pac >= (0)::numeric) AND (undefined_pac <= (1)::numeric))))
);


ALTER TABLE mir.pinfo OWNER TO postgres;

--
-- TOC entry 14993 (class 0 OID 0)
-- Dependencies: 782
-- Name: TABLE pinfo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pinfo IS 'Информация о человеке Author: A.Nakorjakov';


--
-- TOC entry 14994 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.oid IS 'oid';


--
-- TOC entry 14995 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.blood_gr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.blood_gr IS 'группа крови';


--
-- TOC entry 14996 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.bloood_rez; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.bloood_rez IS 'резус-фактор ';


--
-- TOC entry 14997 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.marriage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.marriage IS 'Семейное полодение. MARRIAGE.ID';


--
-- TOC entry 14998 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.nacionality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.nacionality IS 'Национальность - NACIONALITY.ID';


--
-- TOC entry 14999 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.education; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.education IS 'Образование. EDUCATION_ID';


--
-- TOC entry 15000 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.living_condition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.living_condition IS 'условия жизни';


--
-- TOC entry 15001 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.liveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.liveplace IS 'Житель: село/город LIVEPLACE.ID';


--
-- TOC entry 15002 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.regplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.regplace IS 'Региональная принадлежность REGPLACE_ID';


--
-- TOC entry 15003 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.socialrank; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.socialrank IS 'Социальное положение. SOCIALRANK.ID';


--
-- TOC entry 15004 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.favorkind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.favorkind IS 'Категория льготности. FAVORKIND_ID';


--
-- TOC entry 15005 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.dispgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.dispgroup IS 'Группа диспансеризации. DISPGROUP.ID';


--
-- TOC entry 15006 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.country; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.country IS 'Гражданство, страна. COUNTRY.ID';


--
-- TOC entry 15007 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.parent_status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.parent_status_id IS 'Статус родителя PARENT_STATUS.ID';


--
-- TOC entry 15008 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.parent_surname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.parent_surname IS 'Фамилия родителя';


--
-- TOC entry 15009 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.parent_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.parent_name IS 'Имя родителя';


--
-- TOC entry 15010 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.parent_patron; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.parent_patron IS 'Отчество родителя';


--
-- TOC entry 15011 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.burn_place; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.burn_place IS 'Место рождения';


--
-- TOC entry 15012 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.flurolast_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.flurolast_dt IS 'Дата последней флюрографии';


--
-- TOC entry 15013 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.fluroplan_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.fluroplan_dt IS 'Дата планируемой флюрографии';


--
-- TOC entry 15014 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.ambul_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.ambul_dt IS 'Последние даты амбулаторного лечения';


--
-- TOC entry 15015 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.stacionar_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.stacionar_dt IS 'Последние даты стационарного лечения';


--
-- TOC entry 15016 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.sanator_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.sanator_dt IS 'Последние даты санаторного лечения';


--
-- TOC entry 15017 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.spec_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.spec_dt IS 'Последние даты специализированного лечения';


--
-- TOC entry 15018 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.daystac_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.daystac_dt IS 'Последние даты дневного стационара';


--
-- TOC entry 15019 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.alko; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.alko IS 'Группа риска - алкоголь';


--
-- TOC entry 15020 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.narko; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.narko IS 'Группа риска - наркомания';


--
-- TOC entry 15021 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.smok; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.smok IS 'Группа риска - курение';


--
-- TOC entry 15022 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.hard_life; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.hard_life IS 'Трудная жизненная ситуация';


--
-- TOC entry 15023 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.recipe_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.recipe_lgot_type IS 'Льгота';


--
-- TOC entry 15024 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.grouphealth; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.grouphealth IS 'Группа здоровия 1..(4-здоров)';


--
-- TOC entry 15025 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.inn IS 'ИНН';


--
-- TOC entry 15026 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.phone_home; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.phone_home IS 'phone_home';


--
-- TOC entry 15027 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.phone_mobile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.phone_mobile IS 'phone_mobile';


--
-- TOC entry 15028 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.icd10_id IS 'icd10_id';


--
-- TOC entry 15029 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.sysdate IS 'Дата последнего изменения записи';


--
-- TOC entry 15030 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.undefined_pac; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.undefined_pac IS 'Пациент без сознания';


--
-- TOC entry 15031 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.uek; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.uek IS 'Идентификатор УЕК';


--
-- TOC entry 15032 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.people_profession; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.people_profession IS 'Профессия человека';


--
-- TOC entry 15033 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.is_agreement_pac; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.is_agreement_pac IS 'Наличие соглашения с пациентом об обработке персональных данных';


--
-- TOC entry 15034 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.alien; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.alien IS 'Является ли пациент иностранцем';


--
-- TOC entry 15035 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.birthtime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.birthtime IS 'Время рождения новорожденного';


--
-- TOC entry 15036 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.personal_agreement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.personal_agreement IS 'Наличие соглашения с пациентом об обработке персональных данных';


--
-- TOC entry 15037 (class 0 OID 0)
-- Dependencies: 782
-- Name: COLUMN pinfo.personal_agreement_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo.personal_agreement_date IS 'Дата соглашения с пациентом об обработке персональных данных';


--
-- TOC entry 783 (class 1259 OID 20954)
-- Dependencies: 7268 14
-- Name: pinfo_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pinfo_history (
    oid character(36) NOT NULL,
    blood_gr character varying(255),
    bloood_rez character varying(255),
    marriage character(36),
    nacionality character(36),
    education character(36),
    living_condition character varying(255),
    liveplace character(36),
    regplace character(36),
    socialrank character(36),
    favorkind character(36),
    dispgroup character(36),
    country character(36),
    parent_status_id character(36),
    parent_surname character varying(255),
    parent_name character varying(100),
    parent_patron character varying(100),
    burn_place character varying(100),
    flurolast_dt date,
    fluroplan_dt date,
    ambul_dt date,
    stacionar_dt date,
    sanator_dt date,
    spec_dt date,
    daystac_dt date,
    alko boolean,
    narko boolean,
    smok boolean,
    hard_life character(36),
    recipe_lgot_type character(36),
    grouphealth integer,
    inn character varying(100),
    phone_home character varying(25),
    phone_mobile character varying(20),
    icd10_id character(36),
    undefined_pac numeric(1,0) DEFAULT 0,
    uek character varying(19),
    people_profession character varying(255),
    is_agreement_pac boolean,
    alien boolean,
    birthtime time(0) without time zone,
    personal_agreement numeric(1,0),
    personal_agreement_date timestamp(0) without time zone
);


ALTER TABLE mir.pinfo_history OWNER TO postgres;

--
-- TOC entry 15038 (class 0 OID 0)
-- Dependencies: 783
-- Name: TABLE pinfo_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pinfo_history IS 'Информация о человеке Author: A.Nakorjakov';


--
-- TOC entry 15039 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.oid IS 'oid';


--
-- TOC entry 15040 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.blood_gr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.blood_gr IS 'группа крови ';


--
-- TOC entry 15041 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.bloood_rez; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.bloood_rez IS 'резус-фактор ';


--
-- TOC entry 15042 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.marriage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.marriage IS 'Семейное полодение. MARRIAGE.ID';


--
-- TOC entry 15043 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.nacionality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.nacionality IS 'Национальность - NACIONALITY.ID';


--
-- TOC entry 15044 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.education; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.education IS 'Образование. EDUCATION_ID';


--
-- TOC entry 15045 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.living_condition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.living_condition IS 'условия жизни';


--
-- TOC entry 15046 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.liveplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.liveplace IS 'Житель: село/город LIVEPLACE.ID';


--
-- TOC entry 15047 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.regplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.regplace IS 'Региональная принадлежность REGPLACE_ID';


--
-- TOC entry 15048 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.socialrank; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.socialrank IS 'Социальное положение. SOCIALRANK.ID';


--
-- TOC entry 15049 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.favorkind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.favorkind IS 'Категория льготности. FAVORKIND_ID';


--
-- TOC entry 15050 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.dispgroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.dispgroup IS 'Группа диспансеризации. DISPGROUP.ID';


--
-- TOC entry 15051 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.country; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.country IS 'Гражданство, страна. COUNTRY.ID';


--
-- TOC entry 15052 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.parent_status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.parent_status_id IS 'Статус родителя PARENT_STATUS.ID';


--
-- TOC entry 15053 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.parent_surname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.parent_surname IS 'Фамилия родителя';


--
-- TOC entry 15054 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.parent_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.parent_name IS 'Имя родителя';


--
-- TOC entry 15055 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.parent_patron; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.parent_patron IS 'Отчество родителя';


--
-- TOC entry 15056 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.burn_place; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.burn_place IS 'Место рождения';


--
-- TOC entry 15057 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.flurolast_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.flurolast_dt IS 'Дата последней флюрографии';


--
-- TOC entry 15058 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.fluroplan_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.fluroplan_dt IS 'Дата планируемой флюрографии';


--
-- TOC entry 15059 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.ambul_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.ambul_dt IS 'Последние даты амбулаторного лечения';


--
-- TOC entry 15060 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.stacionar_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.stacionar_dt IS 'Последние даты стационарного лечения';


--
-- TOC entry 15061 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.sanator_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.sanator_dt IS 'Последние даты санаторного лечения';


--
-- TOC entry 15062 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.spec_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.spec_dt IS 'Последние даты специализированного лечения';


--
-- TOC entry 15063 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.daystac_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.daystac_dt IS 'Последние даты дневного стационара';


--
-- TOC entry 15064 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.alko; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.alko IS 'Группа риска - алкоголь';


--
-- TOC entry 15065 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.narko; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.narko IS 'Группа риска - наркомания';


--
-- TOC entry 15066 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.smok; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.smok IS 'Группа риска - курение';


--
-- TOC entry 15067 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.hard_life; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.hard_life IS 'Трудная жизненная ситуация';


--
-- TOC entry 15068 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.recipe_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.recipe_lgot_type IS 'Льгота';


--
-- TOC entry 15069 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.grouphealth; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.grouphealth IS 'Группа здоровия 1..(4-здоров)';


--
-- TOC entry 15070 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.inn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.inn IS 'ИНН';


--
-- TOC entry 15071 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.phone_home; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.phone_home IS 'phone_home';


--
-- TOC entry 15072 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.phone_mobile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.phone_mobile IS 'phone_mobile';


--
-- TOC entry 15073 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.icd10_id IS 'icd10_id';


--
-- TOC entry 15074 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.undefined_pac; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.undefined_pac IS 'Пациент без сознания';


--
-- TOC entry 15075 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.is_agreement_pac; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.is_agreement_pac IS 'Наличие соглашения с пациентом об обработке персональных данных';


--
-- TOC entry 15076 (class 0 OID 0)
-- Dependencies: 783
-- Name: COLUMN pinfo_history.alien; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinfo_history.alien IS 'Является ли пациент иностранцем';


--
-- TOC entry 784 (class 1259 OID 20961)
-- Dependencies: 7269 7270 14
-- Name: pinforequiredfilds; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pinforequiredfilds (
    id character varying(36) NOT NULL,
    name character varying(100),
    required numeric(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT "ck_pinforequiredfilds$required" CHECK (((required >= (0)::numeric) AND (required <= (1)::numeric)))
);


ALTER TABLE mir.pinforequiredfilds OWNER TO postgres;

--
-- TOC entry 15077 (class 0 OID 0)
-- Dependencies: 784
-- Name: COLUMN pinforequiredfilds.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinforequiredfilds.id IS 'Идентификатор поля';


--
-- TOC entry 15078 (class 0 OID 0)
-- Dependencies: 784
-- Name: COLUMN pinforequiredfilds.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinforequiredfilds.name IS 'Имя поля';


--
-- TOC entry 15079 (class 0 OID 0)
-- Dependencies: 784
-- Name: COLUMN pinforequiredfilds.required; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pinforequiredfilds.required IS 'Указатель обязательного заполнения(0 - необязательный, 1 - обязательный)';


--
-- TOC entry 785 (class 1259 OID 20966)
-- Dependencies: 14
-- Name: plot; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE plot (
    oid character(36) NOT NULL,
    addressex character(36) NOT NULL,
    lpu character(36) NOT NULL,
    identifier character varying(255) NOT NULL,
    "right" character varying(255),
    area numeric(15,2) NOT NULL,
    railway character varying(255),
    railway_distance numeric(15,2),
    airport character varying(255),
    airport_distance numeric(15,2),
    bus character varying(255),
    bus_distance numeric(15,2),
    helicopter character varying(255),
    helicopter_distance numeric(15,2),
    main_road character varying(255)
);


ALTER TABLE mir.plot OWNER TO postgres;

--
-- TOC entry 15080 (class 0 OID 0)
-- Dependencies: 785
-- Name: TABLE plot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE plot IS 'земельные участки';


--
-- TOC entry 15081 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.oid IS 'oid';


--
-- TOC entry 15082 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.addressex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.addressex IS 'addressex';


--
-- TOC entry 15083 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.lpu IS 'lpu';


--
-- TOC entry 15084 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.identifier IS 'идентификатор';


--
-- TOC entry 15085 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot."right" IS 'право на участок';


--
-- TOC entry 15086 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.area IS 'площадь  (га)';


--
-- TOC entry 15087 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.railway; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.railway IS 'ж/д станция';


--
-- TOC entry 15088 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.railway_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.railway_distance IS 'ж/д станция-удаленность (км)';


--
-- TOC entry 15089 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.airport; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.airport IS 'аэропорт';


--
-- TOC entry 15090 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.airport_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.airport_distance IS 'аэропорт-удаленность (км)';


--
-- TOC entry 15091 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.bus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.bus IS 'автовокзал';


--
-- TOC entry 15092 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.bus_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.bus_distance IS 'автовокзал-удаленность (км)2';


--
-- TOC entry 15093 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.helicopter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.helicopter IS 'вертолетная площадка';


--
-- TOC entry 15094 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.helicopter_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.helicopter_distance IS 'вертолетная площадка-удаленность (км)3';


--
-- TOC entry 15095 (class 0 OID 0)
-- Dependencies: 785
-- Name: COLUMN plot.main_road; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot.main_road IS 'главная дорога';


--
-- TOC entry 786 (class 1259 OID 20972)
-- Dependencies: 7271 14
-- Name: plot_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE plot_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    addressex character(36),
    lpu character(36),
    identifier character varying(255),
    "right" character varying(255),
    area numeric(15,2),
    railway character varying(255),
    railway_distance numeric(15,2),
    airport character varying(255),
    airport_distance numeric(15,2),
    bus character varying(255),
    bus_distance numeric(15,2),
    helicopter character varying(255),
    helicopter_distance numeric(15,2),
    main_road character varying(255)
);


ALTER TABLE mir.plot_history OWNER TO postgres;

--
-- TOC entry 15096 (class 0 OID 0)
-- Dependencies: 786
-- Name: TABLE plot_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE plot_history IS 'земельные участки2';


--
-- TOC entry 15097 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.hid IS 'hid';


--
-- TOC entry 15098 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.h_date IS 'h_date';


--
-- TOC entry 15099 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.h_date_end IS 'h_date_end';


--
-- TOC entry 15100 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.sysdate IS 'sysdate';


--
-- TOC entry 15101 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.oid IS 'oid';


--
-- TOC entry 15102 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.addressex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.addressex IS 'addressex';


--
-- TOC entry 15103 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.lpu IS 'lpu';


--
-- TOC entry 15104 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.identifier IS 'идентификатор';


--
-- TOC entry 15105 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history."right" IS 'право на участок';


--
-- TOC entry 15106 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.area IS 'площадь  (га)';


--
-- TOC entry 15107 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.railway; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.railway IS 'ж/д станция';


--
-- TOC entry 15108 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.railway_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.railway_distance IS 'ж/д станция-удаленность (км)';


--
-- TOC entry 15109 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.airport; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.airport IS 'аэропорт';


--
-- TOC entry 15110 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.airport_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.airport_distance IS 'аэропорт-удаленность (км)';


--
-- TOC entry 15111 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.bus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.bus IS 'автовокзал';


--
-- TOC entry 15112 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.bus_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.bus_distance IS 'автовокзал-удаленность (км)2';


--
-- TOC entry 15113 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.helicopter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.helicopter IS 'вертолетная площадка';


--
-- TOC entry 15114 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.helicopter_distance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.helicopter_distance IS 'вертолетная площадка-удаленность (км)3';


--
-- TOC entry 15115 (class 0 OID 0)
-- Dependencies: 786
-- Name: COLUMN plot_history.main_road; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN plot_history.main_road IS 'главная дорога';


--
-- TOC entry 787 (class 1259 OID 20979)
-- Dependencies: 7272 14
-- Name: poll; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE poll (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    starton date NOT NULL,
    endon date NOT NULL,
    multichoice numeric(1,0) DEFAULT 0 NOT NULL,
    region character(36) NOT NULL
);


ALTER TABLE mir.poll OWNER TO postgres;

--
-- TOC entry 15116 (class 0 OID 0)
-- Dependencies: 787
-- Name: TABLE poll; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE poll IS 'POLL';


--
-- TOC entry 15117 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.oid IS 'oid';


--
-- TOC entry 15118 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.name IS 'name';


--
-- TOC entry 15119 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.starton IS 'starton';


--
-- TOC entry 15120 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.endon IS 'endon';


--
-- TOC entry 15121 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.multichoice; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.multichoice IS 'multichoice';


--
-- TOC entry 15122 (class 0 OID 0)
-- Dependencies: 787
-- Name: COLUMN poll.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN poll.region IS 'region';


--
-- TOC entry 788 (class 1259 OID 20983)
-- Dependencies: 14
-- Name: pollanswer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pollanswer (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    poll character(36) NOT NULL,
    orderby numeric
);


ALTER TABLE mir.pollanswer OWNER TO postgres;

--
-- TOC entry 15123 (class 0 OID 0)
-- Dependencies: 788
-- Name: TABLE pollanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pollanswer IS 'POLLANSWER';


--
-- TOC entry 15124 (class 0 OID 0)
-- Dependencies: 788
-- Name: COLUMN pollanswer.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer.oid IS 'oid';


--
-- TOC entry 15125 (class 0 OID 0)
-- Dependencies: 788
-- Name: COLUMN pollanswer.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer.name IS 'name';


--
-- TOC entry 15126 (class 0 OID 0)
-- Dependencies: 788
-- Name: COLUMN pollanswer.poll; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer.poll IS 'poll';


--
-- TOC entry 15127 (class 0 OID 0)
-- Dependencies: 788
-- Name: COLUMN pollanswer.orderby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer.orderby IS 'orderby';


--
-- TOC entry 789 (class 1259 OID 20989)
-- Dependencies: 14
-- Name: pollanswer_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pollanswer_people (
    pollanswer character(36) NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.pollanswer_people OWNER TO postgres;

--
-- TOC entry 15128 (class 0 OID 0)
-- Dependencies: 789
-- Name: TABLE pollanswer_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pollanswer_people IS 'POLLANSWER_PEOPLE';


--
-- TOC entry 15129 (class 0 OID 0)
-- Dependencies: 789
-- Name: COLUMN pollanswer_people.pollanswer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer_people.pollanswer IS 'pollanswer';


--
-- TOC entry 15130 (class 0 OID 0)
-- Dependencies: 789
-- Name: COLUMN pollanswer_people.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pollanswer_people.people IS 'people';


--
-- TOC entry 790 (class 1259 OID 20992)
-- Dependencies: 7273 14
-- Name: portal_mdoc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    type character(36) NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.portal_mdoc OWNER TO postgres;

--
-- TOC entry 15131 (class 0 OID 0)
-- Dependencies: 790
-- Name: TABLE portal_mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc IS 'portal_mdoc';


--
-- TOC entry 15132 (class 0 OID 0)
-- Dependencies: 790
-- Name: COLUMN portal_mdoc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc.oid IS 'oid';


--
-- TOC entry 15133 (class 0 OID 0)
-- Dependencies: 790
-- Name: COLUMN portal_mdoc.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc.people IS 'people';


--
-- TOC entry 15134 (class 0 OID 0)
-- Dependencies: 790
-- Name: COLUMN portal_mdoc.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc.type IS 'type';


--
-- TOC entry 15135 (class 0 OID 0)
-- Dependencies: 790
-- Name: COLUMN portal_mdoc.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc.add_date IS 'add_date';


--
-- TOC entry 791 (class 1259 OID 20996)
-- Dependencies: 7274 14
-- Name: portal_mdoc_appointment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_appointment (
    oid character(36) NOT NULL,
    mdoc_event character(36) NOT NULL,
    date timestamp without time zone NOT NULL,
    presctype character varying NOT NULL,
    protokol character varying NOT NULL,
    presctype_oid character(36),
    appointment_type numeric DEFAULT 1 NOT NULL
);


ALTER TABLE mir.portal_mdoc_appointment OWNER TO postgres;

--
-- TOC entry 15136 (class 0 OID 0)
-- Dependencies: 791
-- Name: TABLE portal_mdoc_appointment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_appointment IS 'portal_mdoc_appointment';


--
-- TOC entry 15137 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.oid IS 'oid';


--
-- TOC entry 15138 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.mdoc_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.mdoc_event IS 'mdoc_event';


--
-- TOC entry 15139 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.date IS 'date';


--
-- TOC entry 15140 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.presctype IS 'presctype';


--
-- TOC entry 15141 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.protokol; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.protokol IS 'protokol';


--
-- TOC entry 15142 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.presctype_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.presctype_oid IS 'presctype_oid';


--
-- TOC entry 15143 (class 0 OID 0)
-- Dependencies: 791
-- Name: COLUMN portal_mdoc_appointment.appointment_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_appointment.appointment_type IS '1-консультация,2-инструментальные,3-лаборатория';


--
-- TOC entry 792 (class 1259 OID 21003)
-- Dependencies: 7275 7276 14
-- Name: portal_mdoc_diag; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_diag (
    oid character(36) NOT NULL,
    mdoc_appointment character(36) NOT NULL,
    mkb character varying NOT NULL,
    is_main numeric(1,0) DEFAULT 0 NOT NULL,
    mkb_code character(36),
    CONSTRAINT "ck_portal_m$is_main" CHECK (((is_main >= (0)::numeric) AND (is_main <= (1)::numeric)))
);


ALTER TABLE mir.portal_mdoc_diag OWNER TO postgres;

--
-- TOC entry 15144 (class 0 OID 0)
-- Dependencies: 792
-- Name: TABLE portal_mdoc_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_diag IS 'portal_mdoc_diag';


--
-- TOC entry 15145 (class 0 OID 0)
-- Dependencies: 792
-- Name: COLUMN portal_mdoc_diag.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_diag.oid IS 'oid';


--
-- TOC entry 15146 (class 0 OID 0)
-- Dependencies: 792
-- Name: COLUMN portal_mdoc_diag.mdoc_appointment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_diag.mdoc_appointment IS 'mdoc_appointment';


--
-- TOC entry 15147 (class 0 OID 0)
-- Dependencies: 792
-- Name: COLUMN portal_mdoc_diag.mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_diag.mkb IS 'mkb';


--
-- TOC entry 15148 (class 0 OID 0)
-- Dependencies: 792
-- Name: COLUMN portal_mdoc_diag.is_main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_diag.is_main IS 'is_main';


--
-- TOC entry 15149 (class 0 OID 0)
-- Dependencies: 792
-- Name: COLUMN portal_mdoc_diag.mkb_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_diag.mkb_code IS 'mkb_code';


--
-- TOC entry 793 (class 1259 OID 21011)
-- Dependencies: 14
-- Name: portal_mdoc_event; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_event (
    oid character(36) NOT NULL,
    mdoc character(36) NOT NULL,
    start timestamp without time zone NOT NULL,
    "end" timestamp without time zone,
    name character varying,
    otdel character varying NOT NULL
);


ALTER TABLE mir.portal_mdoc_event OWNER TO postgres;

--
-- TOC entry 15150 (class 0 OID 0)
-- Dependencies: 793
-- Name: TABLE portal_mdoc_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_event IS 'portal_mdoc_event';


--
-- TOC entry 15151 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event.oid IS 'oid';


--
-- TOC entry 15152 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event.mdoc IS 'mdoc';


--
-- TOC entry 15153 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event.start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event.start IS 'start';


--
-- TOC entry 15154 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event."end"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event."end" IS 'end';


--
-- TOC entry 15155 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event.name IS 'name';


--
-- TOC entry 15156 (class 0 OID 0)
-- Dependencies: 793
-- Name: COLUMN portal_mdoc_event.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_event.otdel IS 'otdel';


--
-- TOC entry 794 (class 1259 OID 21017)
-- Dependencies: 7277 7278 14
-- Name: portal_mdoc_extract; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_extract (
    oid character(36) NOT NULL,
    mdoc_event character(36) NOT NULL,
    text character varying NOT NULL,
    add_date timestamp without time zone NOT NULL,
    is_hosp numeric(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT "ck_portal_m$is_hosp" CHECK (((is_hosp >= (0)::numeric) AND (is_hosp <= (1)::numeric)))
);


ALTER TABLE mir.portal_mdoc_extract OWNER TO postgres;

--
-- TOC entry 15157 (class 0 OID 0)
-- Dependencies: 794
-- Name: TABLE portal_mdoc_extract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_extract IS 'portal_mdoc_extract';


--
-- TOC entry 15158 (class 0 OID 0)
-- Dependencies: 794
-- Name: COLUMN portal_mdoc_extract.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_extract.oid IS 'oid';


--
-- TOC entry 15159 (class 0 OID 0)
-- Dependencies: 794
-- Name: COLUMN portal_mdoc_extract.mdoc_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_extract.mdoc_event IS 'mdoc_event';


--
-- TOC entry 15160 (class 0 OID 0)
-- Dependencies: 794
-- Name: COLUMN portal_mdoc_extract.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_extract.text IS 'text';


--
-- TOC entry 15161 (class 0 OID 0)
-- Dependencies: 794
-- Name: COLUMN portal_mdoc_extract.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_extract.add_date IS 'add_date';


--
-- TOC entry 15162 (class 0 OID 0)
-- Dependencies: 794
-- Name: COLUMN portal_mdoc_extract.is_hosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_extract.is_hosp IS '???????????? ???????';


--
-- TOC entry 795 (class 1259 OID 21025)
-- Dependencies: 14
-- Name: portal_mdoc_medic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_medic (
    oid character(36) NOT NULL,
    mdoc_appointment character(36) NOT NULL,
    dose numeric NOT NULL,
    dose_type character varying NOT NULL,
    duration numeric NOT NULL,
    frequency character(36) NOT NULL,
    tradename character varying NOT NULL,
    tradename_oid character(36)
);


ALTER TABLE mir.portal_mdoc_medic OWNER TO postgres;

--
-- TOC entry 15163 (class 0 OID 0)
-- Dependencies: 795
-- Name: TABLE portal_mdoc_medic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_medic IS 'portal_mdoc_medic';


--
-- TOC entry 15164 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.oid IS 'oid';


--
-- TOC entry 15165 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.mdoc_appointment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.mdoc_appointment IS 'mdoc_appointment';


--
-- TOC entry 15166 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.dose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.dose IS 'dose';


--
-- TOC entry 15167 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.dose_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.dose_type IS 'dose_type';


--
-- TOC entry 15168 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.duration IS 'duration';


--
-- TOC entry 15169 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.frequency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.frequency IS 'frequency';


--
-- TOC entry 15170 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.tradename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.tradename IS 'tradename';


--
-- TOC entry 15171 (class 0 OID 0)
-- Dependencies: 795
-- Name: COLUMN portal_mdoc_medic.tradename_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_medic.tradename_oid IS 'tradename_oid';


--
-- TOC entry 796 (class 1259 OID 21031)
-- Dependencies: 14
-- Name: portal_mdoc_survey; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE portal_mdoc_survey (
    oid character(36) NOT NULL,
    mdoc_appointment character(36) NOT NULL,
    presctype character varying NOT NULL,
    presctype_oid character(36)
);


ALTER TABLE mir.portal_mdoc_survey OWNER TO postgres;

--
-- TOC entry 15172 (class 0 OID 0)
-- Dependencies: 796
-- Name: TABLE portal_mdoc_survey; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE portal_mdoc_survey IS 'portal_mdoc_survey';


--
-- TOC entry 15173 (class 0 OID 0)
-- Dependencies: 796
-- Name: COLUMN portal_mdoc_survey.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_survey.oid IS 'oid';


--
-- TOC entry 15174 (class 0 OID 0)
-- Dependencies: 796
-- Name: COLUMN portal_mdoc_survey.mdoc_appointment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_survey.mdoc_appointment IS 'mdoc_appointment';


--
-- TOC entry 15175 (class 0 OID 0)
-- Dependencies: 796
-- Name: COLUMN portal_mdoc_survey.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_survey.presctype IS 'presctype';


--
-- TOC entry 15176 (class 0 OID 0)
-- Dependencies: 796
-- Name: COLUMN portal_mdoc_survey.presctype_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN portal_mdoc_survey.presctype_oid IS 'presctype_oid';


--
-- TOC entry 797 (class 1259 OID 21037)
-- Dependencies: 14
-- Name: position; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE "position" (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir."position" OWNER TO postgres;

--
-- TOC entry 15177 (class 0 OID 0)
-- Dependencies: 797
-- Name: TABLE "position"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE "position" IS 'Вид должности
врач
средний медперсонал
младший медперсонал
вспомогательный персонал
фармацевт
провизор
Профессорско-преподавательский состав
';


--
-- TOC entry 15178 (class 0 OID 0)
-- Dependencies: 797
-- Name: COLUMN "position".oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "position".oid IS 'oid';


--
-- TOC entry 15179 (class 0 OID 0)
-- Dependencies: 797
-- Name: COLUMN "position".id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "position".id IS 'id';


--
-- TOC entry 15180 (class 0 OID 0)
-- Dependencies: 797
-- Name: COLUMN "position".name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "position".name IS 'name';


--
-- TOC entry 798 (class 1259 OID 21040)
-- Dependencies: 14
-- Name: positiontype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE positiontype (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.positiontype OWNER TO postgres;

--
-- TOC entry 15181 (class 0 OID 0)
-- Dependencies: 798
-- Name: TABLE positiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE positiontype IS 'Тип занятия должности
Основная должность
Совмещение
Совместительство

';


--
-- TOC entry 15182 (class 0 OID 0)
-- Dependencies: 798
-- Name: COLUMN positiontype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN positiontype.oid IS 'oid';


--
-- TOC entry 15183 (class 0 OID 0)
-- Dependencies: 798
-- Name: COLUMN positiontype.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN positiontype.id IS 'id';


--
-- TOC entry 15184 (class 0 OID 0)
-- Dependencies: 798
-- Name: COLUMN positiontype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN positiontype.name IS 'name';


--
-- TOC entry 799 (class 1259 OID 21043)
-- Dependencies: 14
-- Name: post_birth_running; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE post_birth_running (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.post_birth_running OWNER TO postgres;

--
-- TOC entry 15185 (class 0 OID 0)
-- Dependencies: 799
-- Name: TABLE post_birth_running; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE post_birth_running IS 'течение послеродовых периодов';


--
-- TOC entry 15186 (class 0 OID 0)
-- Dependencies: 799
-- Name: COLUMN post_birth_running.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post_birth_running.oid IS 'oid';


--
-- TOC entry 15187 (class 0 OID 0)
-- Dependencies: 799
-- Name: COLUMN post_birth_running.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN post_birth_running.name IS 'name';


--
-- TOC entry 800 (class 1259 OID 21046)
-- Dependencies: 7279 7280 14
-- Name: pregnancies; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pregnancies (
    oid character(36) NOT NULL,
    year character varying(255),
    pregnancy_result character(36) NOT NULL,
    newborn_state character(36) NOT NULL,
    breastfeeding_duration character varying(255),
    baby_is_alive numeric(1,0) DEFAULT 0,
    birth_place character(36) NOT NULL,
    birth_taken_by character varying(255),
    people character(36) NOT NULL,
    CONSTRAINT "ck_pregnanc$baby_is_alive" CHECK (((baby_is_alive IS NULL) OR ((baby_is_alive >= (0)::numeric) AND (baby_is_alive <= (1)::numeric))))
);


ALTER TABLE mir.pregnancies OWNER TO postgres;

--
-- TOC entry 15188 (class 0 OID 0)
-- Dependencies: 800
-- Name: TABLE pregnancies; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pregnancies IS 'сведения о беременностях';


--
-- TOC entry 15189 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.oid IS 'oid';


--
-- TOC entry 15190 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.year; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.year IS 'год (в каком году зарегистрирована беременность)';


--
-- TOC entry 15191 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.pregnancy_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.pregnancy_result IS 'чем закончилась беременность ';


--
-- TOC entry 15192 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.newborn_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.newborn_state IS 'ребенок родился ';


--
-- TOC entry 15193 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.breastfeeding_duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.breastfeeding_duration IS 'сколько времени кормила грудью';


--
-- TOC entry 15194 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.baby_is_alive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.baby_is_alive IS 'жив ли ребенок';


--
-- TOC entry 15195 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.birth_place; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.birth_place IS 'роды произошли (список выбора)';


--
-- TOC entry 15196 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.birth_taken_by; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.birth_taken_by IS 'кто принимал ';


--
-- TOC entry 15197 (class 0 OID 0)
-- Dependencies: 800
-- Name: COLUMN pregnancies.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancies.people IS 'people';


--
-- TOC entry 801 (class 1259 OID 21054)
-- Dependencies: 7281 14
-- Name: pregnancy_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pregnancy_result (
    oid character(36) NOT NULL,
    name character varying(255),
    synonym character varying(64),
    CONSTRAINT "ck_pregnancy_result$synonym" CHECK (((synonym IS NULL) OR ((synonym)::text = upper((synonym)::text))))
);


ALTER TABLE mir.pregnancy_result OWNER TO postgres;

--
-- TOC entry 15198 (class 0 OID 0)
-- Dependencies: 801
-- Name: TABLE pregnancy_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pregnancy_result IS 'чем закончилась беременность ';


--
-- TOC entry 15199 (class 0 OID 0)
-- Dependencies: 801
-- Name: COLUMN pregnancy_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancy_result.oid IS 'oid';


--
-- TOC entry 15200 (class 0 OID 0)
-- Dependencies: 801
-- Name: COLUMN pregnancy_result.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancy_result.name IS 'name';


--
-- TOC entry 802 (class 1259 OID 21058)
-- Dependencies: 14
-- Name: pregnancy_running; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pregnancy_running (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.pregnancy_running OWNER TO postgres;

--
-- TOC entry 15201 (class 0 OID 0)
-- Dependencies: 802
-- Name: TABLE pregnancy_running; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pregnancy_running IS 'Течение беременности ';


--
-- TOC entry 15202 (class 0 OID 0)
-- Dependencies: 802
-- Name: COLUMN pregnancy_running.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancy_running.oid IS 'oid';


--
-- TOC entry 15203 (class 0 OID 0)
-- Dependencies: 802
-- Name: COLUMN pregnancy_running.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnancy_running.name IS 'name';


--
-- TOC entry 803 (class 1259 OID 21061)
-- Dependencies: 7282 7283 7284 7285 7286 7287 7288 7289 14
-- Name: pregnant_card_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE pregnant_card_info (
    oid character(36) NOT NULL,
    yavka character varying(255) NOT NULL,
    living_condition character varying(255),
    job_hazard character varying(255),
    husband character varying(255),
    husband_age integer,
    husband_workplace character varying(255),
    birth_date date,
    ddo_start date,
    ddo_end date,
    sicklist_num character varying(255),
    botkin character varying(255),
    tbc character varying(255),
    hepatitis character varying(255),
    allergy character varying(255),
    venereal_diseases character varying(255),
    birth_sert_num character varying(255),
    birth_sert_date date,
    is_working numeric(1,0) DEFAULT 0,
    sexual_life_start character varying(255),
    prev_pregnancy_running character(36),
    post_birth_running character(36),
    is_contraception numeric(1,0) DEFAULT 0,
    contraception_type character varying(255),
    inheritance character varying(255),
    cr character varying(255),
    cd character varying(255),
    ag character varying(255),
    old_diseases character varying(255),
    old_female_diseases character varying(255),
    husband_health character varying(255),
    height integer,
    weight integer,
    ad character varying(255),
    ps numeric,
    walkarround_inspection character varying(255),
    mammary_gland character varying(255),
    prelum_abdominale character varying(255),
    heart character varying(255),
    lungs character varying(255),
    stomach character varying(255),
    liver character varying(255),
    kidney character varying(255),
    curr_pregnancy_running character varying(255),
    menses_last_date date,
    fetus_first_move_date date,
    pelvis_size character varying(255),
    "is" numeric,
    pm character varying(255),
    first_inspection_date date,
    first_inspection_diag character varying(255),
    fundus_uteri_height character varying(255),
    fetus_position character varying(255),
    fetus_presentation character varying(255),
    fetus_heartbeat character varying(255),
    fetus_movement character varying(255),
    external_genetal_organ character varying(255),
    breastfeeding_info character varying(255),
    breastfeeding_info_date date,
    vagina character varying(255),
    uterine_neck character varying(255),
    rks character varying(255),
    uterine_body character varying(255),
    appendage character varying(255),
    parametrium character varying(255),
    peculiarities character varying(255),
    first_menses_is_immediate numeric(1,0) DEFAULT 0,
    first_menses_duration character varying(255),
    first_menses_interval character varying(255),
    first_menses_intensiveness character varying(255),
    first_menses_is_painful numeric(1,0) DEFAULT 0,
    first_menses_painful_time character varying(255),
    first_menses_peculiarities character varying(255),
    first_menses_peculiarities_from character varying(255),
    employ_from integer,
    first_menses_establish_period character varying(255),
    flg_date date,
    flg_num character varying(255),
    husband_tel character varying(100),
    liveplace_changing_street character varying(255),
    liveplace_changing_house character varying(255),
    liveplace_changing_flat character varying(255),
    first_inspection_sotr character(36) NOT NULL,
    CONSTRAINT "ck_pregnant$first_menses_is_i" CHECK (((first_menses_is_immediate IS NULL) OR ((first_menses_is_immediate >= (0)::numeric) AND (first_menses_is_immediate <= (1)::numeric)))),
    CONSTRAINT "ck_pregnant$first_menses_is_p" CHECK (((first_menses_is_painful IS NULL) OR ((first_menses_is_painful >= (0)::numeric) AND (first_menses_is_painful <= (1)::numeric)))),
    CONSTRAINT "ck_pregnant$is_contraception" CHECK (((is_contraception IS NULL) OR ((is_contraception >= (0)::numeric) AND (is_contraception <= (1)::numeric)))),
    CONSTRAINT "ck_pregnant$is_working" CHECK (((is_working IS NULL) OR ((is_working >= (0)::numeric) AND (is_working <= (1)::numeric))))
);


ALTER TABLE mir.pregnant_card_info OWNER TO postgres;

--
-- TOC entry 15204 (class 0 OID 0)
-- Dependencies: 803
-- Name: TABLE pregnant_card_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE pregnant_card_info IS 'Дополнительная информация для типа документа «Индивидуальная карта беременной»';


--
-- TOC entry 15205 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.oid IS 'oid';


--
-- TOC entry 15206 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.yavka; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.yavka IS 'явка';


--
-- TOC entry 15207 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.living_condition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.living_condition IS 'условия жизни';


--
-- TOC entry 15208 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.job_hazard; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.job_hazard IS 'профвредность (компьютер) ';


--
-- TOC entry 15209 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.husband; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.husband IS 'ФИО мужа';


--
-- TOC entry 15210 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.husband_age; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.husband_age IS 'возраст мужа';


--
-- TOC entry 15211 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.husband_workplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.husband_workplace IS 'место работы мужа';


--
-- TOC entry 15212 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.birth_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.birth_date IS 'срок родов';


--
-- TOC entry 15213 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.ddo_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.ddo_start IS 'ДДО с
';


--
-- TOC entry 15214 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.ddo_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.ddo_end IS 'ДДО по';


--
-- TOC entry 15215 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.sicklist_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.sicklist_num IS 'больничный лист № ';


--
-- TOC entry 15216 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.botkin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.botkin IS 'Б Боткина ';


--
-- TOC entry 15217 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.tbc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.tbc IS 'Tbc ';


--
-- TOC entry 15218 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.hepatitis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.hepatitis IS 'гепатит ';


--
-- TOC entry 15219 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.allergy; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.allergy IS 'аллергия';


--
-- TOC entry 15220 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.venereal_diseases; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.venereal_diseases IS 'вен. заболевания';


--
-- TOC entry 15221 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.birth_sert_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.birth_sert_num IS 'родовой сертификат № (number)';


--
-- TOC entry 15222 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.birth_sert_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.birth_sert_date IS 'родовой сертификат, дата';


--
-- TOC entry 15223 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.is_working; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.is_working IS 'работает ли теперь';


--
-- TOC entry 15224 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.sexual_life_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.sexual_life_start IS 'с какого возраста началась половая жизнь';


--
-- TOC entry 15225 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.prev_pregnancy_running; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.prev_pregnancy_running IS 'течение прежних беременностей';


--
-- TOC entry 15226 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.post_birth_running; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.post_birth_running IS 'течение послеродовых периодов';


--
-- TOC entry 15227 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.is_contraception; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.is_contraception IS 'предохраняет ли себя от беременности ';


--
-- TOC entry 15228 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.contraception_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.contraception_type IS 'предохраняет ли себя от беременности каким образом';


--
-- TOC entry 15229 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.inheritance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.inheritance IS 'наследственность ';


--
-- TOC entry 15230 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.cr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.cr IS 'Cr ';


--
-- TOC entry 15231 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.cd; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.cd IS 'СД ';


--
-- TOC entry 15232 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.ag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.ag IS 'АГ ';


--
-- TOC entry 15233 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.old_diseases; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.old_diseases IS 'перенесенные болезни';


--
-- TOC entry 15234 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.old_female_diseases; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.old_female_diseases IS 'перенесенные женские болезни';


--
-- TOC entry 15235 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.husband_health; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.husband_health IS 'здоровье мужа ';


--
-- TOC entry 15236 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.height; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.height IS 'рост';


--
-- TOC entry 15237 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.weight; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.weight IS 'вес';


--
-- TOC entry 15238 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.ad; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.ad IS 'ad';


--
-- TOC entry 15239 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.ps; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.ps IS 'ps';


--
-- TOC entry 15240 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.walkarround_inspection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.walkarround_inspection IS 'общий осмотр ';


--
-- TOC entry 15241 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.mammary_gland; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.mammary_gland IS 'грудные железы, соски  ';


--
-- TOC entry 15242 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.prelum_abdominale; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.prelum_abdominale IS 'брюшной пресс';


--
-- TOC entry 15243 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.heart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.heart IS 'сердце,сосуды';


--
-- TOC entry 15244 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.lungs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.lungs IS 'легкие';


--
-- TOC entry 15245 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.stomach; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.stomach IS 'ораганы пищеварения, зубы';


--
-- TOC entry 15246 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.liver; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.liver IS 'печень';


--
-- TOC entry 15247 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.kidney; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.kidney IS 'почки';


--
-- TOC entry 15248 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.curr_pregnancy_running; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.curr_pregnancy_running IS 'течение настоящей беременности';


--
-- TOC entry 15249 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.menses_last_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.menses_last_date IS 'последние месячные начались';


--
-- TOC entry 15250 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fetus_first_move_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fetus_first_move_date IS 'первое движение плода';


--
-- TOC entry 15251 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.pelvis_size; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.pelvis_size IS 'Размеры таза';


--
-- TOC entry 15252 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info."is"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info."is" IS 'ис';


--
-- TOC entry 15253 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.pm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.pm IS 'pm';


--
-- TOC entry 15254 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_inspection_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_inspection_date IS 'дата первого осмотра';


--
-- TOC entry 15255 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_inspection_diag; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_inspection_diag IS 'дз:беременность';


--
-- TOC entry 15256 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fundus_uteri_height; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fundus_uteri_height IS 'высота дна матки';


--
-- TOC entry 15257 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fetus_position; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fetus_position IS 'положение плода';


--
-- TOC entry 15258 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fetus_presentation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fetus_presentation IS 'предлежание';


--
-- TOC entry 15259 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fetus_heartbeat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fetus_heartbeat IS 'сердцебиение';


--
-- TOC entry 15260 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.fetus_movement; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.fetus_movement IS 'шевеление плода';


--
-- TOC entry 15261 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.external_genetal_organ; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.external_genetal_organ IS 'наружные половые органы развиты';


--
-- TOC entry 15262 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.breastfeeding_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.breastfeeding_info IS 'беседа о грудном вскармливании';


--
-- TOC entry 15263 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.breastfeeding_info_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.breastfeeding_info_date IS 'беседа о грудном вскармливании дата';


--
-- TOC entry 15264 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.vagina; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.vagina IS 'влагалище';


--
-- TOC entry 15265 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.uterine_neck; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.uterine_neck IS 'Шейка матки';


--
-- TOC entry 15266 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.rks; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.rks IS 'ркс';


--
-- TOC entry 15267 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.uterine_body; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.uterine_body IS 'Тело матки';


--
-- TOC entry 15268 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.appendage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.appendage IS 'придатки';


--
-- TOC entry 15269 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.parametrium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.parametrium IS 'околоматочное пространство';


--
-- TOC entry 15270 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.peculiarities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.peculiarities IS 'особенности';


--
-- TOC entry 15271 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_is_immediate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_is_immediate IS 'первые менструации установились сразу';


--
-- TOC entry 15272 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_duration IS 'первые менструации установились шли по ... суток';


--
-- TOC entry 15273 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_interval; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_interval IS 'первые менструации шли через ... недель';


--
-- TOC entry 15274 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_intensiveness; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_intensiveness IS 'первые менструации как шли(слабо, умеренно, сильно)';


--
-- TOC entry 15275 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_is_painful; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_is_painful IS 'первые менструации болезненость';


--
-- TOC entry 15276 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_painful_time; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_painful_time IS 'первые менструации болезненость(до,вовремя, после)';


--
-- TOC entry 15277 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_peculiarities; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_peculiarities IS 'первые менструации особенности';


--
-- TOC entry 15278 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_peculiarities_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_peculiarities_from IS 'первые менструации особенности с...';


--
-- TOC entry 15279 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.employ_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.employ_from IS 'работает по найму c __ лет';


--
-- TOC entry 15280 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_menses_establish_period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_menses_establish_period IS 'первые менструации установились через ... лет:';


--
-- TOC entry 15281 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.flg_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.flg_date IS 'ФЛГ беременной (дата)';


--
-- TOC entry 15282 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.flg_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.flg_num IS 'ФЛГ беременной (номер)';


--
-- TOC entry 15283 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.husband_tel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.husband_tel IS 'Телефон мужа';


--
-- TOC entry 15284 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.liveplace_changing_street; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.liveplace_changing_street IS 'Улица после смены места жительства';


--
-- TOC entry 15285 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.liveplace_changing_house; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.liveplace_changing_house IS 'Номер дома после смены места жительства';


--
-- TOC entry 15286 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.liveplace_changing_flat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.liveplace_changing_flat IS 'Номер квартиры после смены места жительства';


--
-- TOC entry 15287 (class 0 OID 0)
-- Dependencies: 803
-- Name: COLUMN pregnant_card_info.first_inspection_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN pregnant_card_info.first_inspection_sotr IS 'врач';


--
-- TOC entry 804 (class 1259 OID 21075)
-- Dependencies: 14
-- Name: premilitary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE premilitary (
    oid character(36) NOT NULL,
    people_oid character(36),
    statement_dt date,
    icd10_id character(36)
);


ALTER TABLE mir.premilitary OWNER TO postgres;

--
-- TOC entry 15288 (class 0 OID 0)
-- Dependencies: 804
-- Name: TABLE premilitary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE premilitary IS 'Допризывники.  Author: Blazko';


--
-- TOC entry 15289 (class 0 OID 0)
-- Dependencies: 804
-- Name: COLUMN premilitary.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN premilitary.oid IS 'id';


--
-- TOC entry 15290 (class 0 OID 0)
-- Dependencies: 804
-- Name: COLUMN premilitary.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN premilitary.people_oid IS 'people_id';


--
-- TOC entry 15291 (class 0 OID 0)
-- Dependencies: 804
-- Name: COLUMN premilitary.statement_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN premilitary.statement_dt IS 'Дата постановки на воинский учёт';


--
-- TOC entry 15292 (class 0 OID 0)
-- Dependencies: 804
-- Name: COLUMN premilitary.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN premilitary.icd10_id IS 'Первичный диагноз по МКБ-10';


--
-- TOC entry 805 (class 1259 OID 21078)
-- Dependencies: 14
-- Name: prenatal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prenatal (
    oid character(36) NOT NULL,
    people_oid character(36) NOT NULL,
    last_cycle_dt date,
    patronage integer,
    reason character varying(100),
    group_risk_id character(36)
);


ALTER TABLE mir.prenatal OWNER TO postgres;

--
-- TOC entry 15293 (class 0 OID 0)
-- Dependencies: 805
-- Name: TABLE prenatal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prenatal IS 'Дородовый патронаж.  Author: Blazko';


--
-- TOC entry 15294 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.oid IS 'id';


--
-- TOC entry 15295 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.people_oid IS 'people_id';


--
-- TOC entry 15296 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.last_cycle_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.last_cycle_dt IS 'Дата последних месячных';


--
-- TOC entry 15297 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.patronage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.patronage IS 'Патронаж 1..(3 - полный)';


--
-- TOC entry 15298 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.reason IS 'Причина';


--
-- TOC entry 15299 (class 0 OID 0)
-- Dependencies: 805
-- Name: COLUMN prenatal.group_risk_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prenatal.group_risk_id IS 'Группа риска';


--
-- TOC entry 806 (class 1259 OID 21081)
-- Dependencies: 14
-- Name: prep; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prep (
    id bigint NOT NULL,
    firmid bigint NOT NULL,
    tradenameid bigint NOT NULL,
    latinnameid bigint NOT NULL,
    drugformid bigint NOT NULL,
    dfmass numeric(14,6),
    dfmassid bigint NOT NULL,
    dfconc numeric(14,4),
    dfconcid bigint NOT NULL,
    dfact numeric(14,2),
    dfactid bigint NOT NULL,
    dfsize character varying,
    dfsizeid bigint NOT NULL,
    dfcharid bigint NOT NULL,
    drugdose numeric(10,2),
    norecipe text NOT NULL,
    listtype text,
    regend text NOT NULL,
    regcertid bigint NOT NULL,
    ntfrid bigint NOT NULL
);


ALTER TABLE mir.prep OWNER TO postgres;

--
-- TOC entry 807 (class 1259 OID 21087)
-- Dependencies: 14
-- Name: prep_actmatters; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prep_actmatters (
    prepid integer NOT NULL,
    matterid integer NOT NULL
);


ALTER TABLE mir.prep_actmatters OWNER TO postgres;

--
-- TOC entry 15300 (class 0 OID 0)
-- Dependencies: 807
-- Name: TABLE prep_actmatters; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prep_actmatters IS 'Препараты - ДВ';


--
-- TOC entry 15301 (class 0 OID 0)
-- Dependencies: 807
-- Name: COLUMN prep_actmatters.matterid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_actmatters.matterid IS 'Код препарата - внешний ключ на таблицу "PREP"';


--
-- TOC entry 808 (class 1259 OID 21090)
-- Dependencies: 14
-- Name: prep_atc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prep_atc (
    prepid integer NOT NULL,
    uniqid integer NOT NULL
);


ALTER TABLE mir.prep_atc OWNER TO postgres;

--
-- TOC entry 15302 (class 0 OID 0)
-- Dependencies: 808
-- Name: TABLE prep_atc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prep_atc IS 'Препараты - АТХ';


--
-- TOC entry 15303 (class 0 OID 0)
-- Dependencies: 808
-- Name: COLUMN prep_atc.prepid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_atc.prepid IS 'Код препарата - внешний ключ на таблицу "PREP"';


--
-- TOC entry 15304 (class 0 OID 0)
-- Dependencies: 808
-- Name: COLUMN prep_atc.uniqid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_atc.uniqid IS 'Код АТХ - внешний ключ на таблицу "CLSATC"';


--
-- TOC entry 809 (class 1259 OID 21093)
-- Dependencies: 14
-- Name: prep_iic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prep_iic (
    prepid integer NOT NULL,
    uniqid integer NOT NULL,
    phgrid integer NOT NULL
);


ALTER TABLE mir.prep_iic OWNER TO postgres;

--
-- TOC entry 15305 (class 0 OID 0)
-- Dependencies: 809
-- Name: TABLE prep_iic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prep_iic IS 'Препараты - МКБ';


--
-- TOC entry 15306 (class 0 OID 0)
-- Dependencies: 809
-- Name: COLUMN prep_iic.prepid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_iic.prepid IS 'Код препарата - внешний ключ на таблицу "PREP"';


--
-- TOC entry 15307 (class 0 OID 0)
-- Dependencies: 809
-- Name: COLUMN prep_iic.uniqid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_iic.uniqid IS 'Код МКБ - внешний ключ на таблицу "CLSIIC"';


--
-- TOC entry 15308 (class 0 OID 0)
-- Dependencies: 809
-- Name: COLUMN prep_iic.phgrid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_iic.phgrid IS 'Код фармгруппы - внешний ключ на таблицу "CLSPHARMAGROUP"';


--
-- TOC entry 810 (class 1259 OID 21096)
-- Dependencies: 14
-- Name: prep_pharmagroup; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prep_pharmagroup (
    prepid integer NOT NULL,
    uniqid integer NOT NULL
);


ALTER TABLE mir.prep_pharmagroup OWNER TO postgres;

--
-- TOC entry 15309 (class 0 OID 0)
-- Dependencies: 810
-- Name: TABLE prep_pharmagroup; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prep_pharmagroup IS 'Препараты - фармгруппы';


--
-- TOC entry 15310 (class 0 OID 0)
-- Dependencies: 810
-- Name: COLUMN prep_pharmagroup.prepid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_pharmagroup.prepid IS 'Код препарата - внешний ключ на таблицу "PREP"';


--
-- TOC entry 15311 (class 0 OID 0)
-- Dependencies: 810
-- Name: COLUMN prep_pharmagroup.uniqid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prep_pharmagroup.uniqid IS 'Код фармгруппы - внешний ключ на таблицу "CLSPHARMAGROUP"';


--
-- TOC entry 811 (class 1259 OID 21099)
-- Dependencies: 14
-- Name: presc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc (
    id character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    visit_id character(36),
    create_dt timestamp without time zone,
    prunbeg_dt timestamp without time zone,
    runbeg_dt timestamp without time zone,
    runend_dt timestamp without time zone,
    mdoc_id character(36) NOT NULL,
    presc_state_id character(36) NOT NULL,
    cabinet_id character(36),
    runemp_id character(36),
    creator_id character(36),
    prunend_dt timestamp without time zone,
    presc_time_id character(36),
    parent_id character(36),
    sign_dt timestamp without time zone,
    order_num integer,
    order_add integer,
    appendix_id character(36),
    lab_searching character(36),
    xray_referral_id character(36),
    tmodel integer,
    reason character varying(255),
    attendance numeric(1,0),
    accessionnumber character varying(100)
);


ALTER TABLE mir.presc OWNER TO postgres;

--
-- TOC entry 15312 (class 0 OID 0)
-- Dependencies: 811
-- Name: TABLE presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc IS 'Назначенные и выполненные назначения Author: A.Nakorjakov';


--
-- TOC entry 15313 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.id IS 'SEQUENCE=[MIS.SQ_PRESC]';


--
-- TOC entry 15314 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.presctype_id IS 'MACTION.ID';


--
-- TOC entry 15315 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.visit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.visit_id IS 'VISIT.ID';


--
-- TOC entry 15316 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.create_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.create_dt IS 'Дата создания назанчения';


--
-- TOC entry 15317 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.prunbeg_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.prunbeg_dt IS 'Планируемые дата и время начала выполнения';


--
-- TOC entry 15318 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.runbeg_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.runbeg_dt IS 'Дата и время начала выполнения';


--
-- TOC entry 15319 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.runend_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.runend_dt IS 'Дата и время окончания выполнения';


--
-- TOC entry 15320 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.mdoc_id IS 'MDOC.ID';


--
-- TOC entry 15321 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.presc_state_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.presc_state_id IS 'PRESC_STATE.ID';


--
-- TOC entry 15322 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.cabinet_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.cabinet_id IS 'CABINET.ID';


--
-- TOC entry 15323 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.runemp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.runemp_id IS 'EMP.ID';


--
-- TOC entry 15324 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.creator_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.creator_id IS 'EMP.ID';


--
-- TOC entry 15325 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.prunend_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.prunend_dt IS 'Планируемые дата и время окончания выполнения';


--
-- TOC entry 15326 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.presc_time_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.presc_time_id IS 'PRESC_TIME.ID';


--
-- TOC entry 15327 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.parent_id IS 'PRESC.ID - осмотр, в рамках которого было добавлено назначение';


--
-- TOC entry 15328 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.sign_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.sign_dt IS 'Дата подписи';


--
-- TOC entry 15329 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.order_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.order_num IS 'order_num';


--
-- TOC entry 15330 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.order_add; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.order_add IS 'order_add';


--
-- TOC entry 15331 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.appendix_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.appendix_id IS 'appendix_id';


--
-- TOC entry 15332 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.xray_referral_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.xray_referral_id IS 'направление на рентген исследование (только если назначение является рентген исследованием)';


--
-- TOC entry 15333 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.tmodel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.tmodel IS 'Модель стандарта для проверки соответствия';


--
-- TOC entry 15334 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.reason IS 'Причина неявки';


--
-- TOC entry 15335 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.attendance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.attendance IS 'Явка подтвержденная по телефону(1-да,0-нет)';


--
-- TOC entry 15336 (class 0 OID 0)
-- Dependencies: 811
-- Name: COLUMN presc.accessionnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc.accessionnumber IS 'Номер протокола исследования (для PACS/WORKLIST)';


--
-- TOC entry 812 (class 1259 OID 21105)
-- Dependencies: 7290 7291 7292 14
-- Name: presc_card; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_card (
    oid character(36) NOT NULL,
    reg_date timestamp without time zone,
    probe integer,
    lotok integer,
    line integer,
    id_answer character(36),
    presc_id character(36),
    status integer DEFAULT 0,
    sign numeric(1,0) DEFAULT 0,
    conclusion text,
    date_entry_result timestamp without time zone,
    sotr_id character(36),
    CONSTRAINT "ck_presc_card$sign" CHECK (((sign IS NULL) OR ((sign >= (0)::numeric) AND (sign <= (1)::numeric))))
);


ALTER TABLE mir.presc_card OWNER TO postgres;

--
-- TOC entry 15337 (class 0 OID 0)
-- Dependencies: 812
-- Name: TABLE presc_card; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_card IS 'Таблица с информацией об лабораторных исследованиях';


--
-- TOC entry 15338 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.oid IS 'id исследования';


--
-- TOC entry 15339 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.reg_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.reg_date IS 'Дата регистрации';


--
-- TOC entry 15340 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.probe; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.probe IS 'номер пробы';


--
-- TOC entry 15341 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.lotok; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.lotok IS 'номер лотка';


--
-- TOC entry 15342 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.line; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.line IS 'номер ячейки';


--
-- TOC entry 15343 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.id_answer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.id_answer IS 'id результата';


--
-- TOC entry 15344 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.presc_id IS 'presc_id';


--
-- TOC entry 15345 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.status IS 'status';


--
-- TOC entry 15346 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.sign; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.sign IS 'sign';


--
-- TOC entry 15347 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.conclusion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.conclusion IS 'conclusion';


--
-- TOC entry 15348 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.date_entry_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.date_entry_result IS 'date_entry_result';


--
-- TOC entry 15349 (class 0 OID 0)
-- Dependencies: 812
-- Name: COLUMN presc_card.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_card.sotr_id IS 'ID исполнителя';


--
-- TOC entry 813 (class 1259 OID 21114)
-- Dependencies: 14
-- Name: presc_parval; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_parval (
    id character(36) NOT NULL,
    presc_id character(36) NOT NULL,
    mparam_id character(36) NOT NULL,
    value character varying(250),
    type_name character varying(30) NOT NULL
);


ALTER TABLE mir.presc_parval OWNER TO postgres;

--
-- TOC entry 15350 (class 0 OID 0)
-- Dependencies: 813
-- Name: TABLE presc_parval; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_parval IS 'Значения параметров мед.назначений Author: A.Nakorjakov';


--
-- TOC entry 15351 (class 0 OID 0)
-- Dependencies: 813
-- Name: COLUMN presc_parval.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_parval.id IS 'SEQUENCE=[MIS.SQ_PRESC_PARVAL]';


--
-- TOC entry 15352 (class 0 OID 0)
-- Dependencies: 813
-- Name: COLUMN presc_parval.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_parval.presc_id IS 'PRESC.ID - ид назначения';


--
-- TOC entry 15353 (class 0 OID 0)
-- Dependencies: 813
-- Name: COLUMN presc_parval.mparam_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_parval.mparam_id IS 'MPARAM.ID - ид параметра назначения';


--
-- TOC entry 15354 (class 0 OID 0)
-- Dependencies: 813
-- Name: COLUMN presc_parval.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_parval.value IS 'значение параметра назначения';


--
-- TOC entry 15355 (class 0 OID 0)
-- Dependencies: 813
-- Name: COLUMN presc_parval.type_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_parval.type_name IS 'TYPE_NAME.NAME - тип параметра';


--
-- TOC entry 814 (class 1259 OID 21117)
-- Dependencies: 14
-- Name: presc_portal_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_portal_link (
    oid character(36) NOT NULL,
    presc character(36) NOT NULL,
    portal_mdoc_appointment character(36) NOT NULL
);


ALTER TABLE mir.presc_portal_link OWNER TO postgres;

--
-- TOC entry 15356 (class 0 OID 0)
-- Dependencies: 814
-- Name: TABLE presc_portal_link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_portal_link IS 'presc_portal_link';


--
-- TOC entry 15357 (class 0 OID 0)
-- Dependencies: 814
-- Name: COLUMN presc_portal_link.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_portal_link.oid IS 'oid';


--
-- TOC entry 15358 (class 0 OID 0)
-- Dependencies: 814
-- Name: COLUMN presc_portal_link.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_portal_link.presc IS 'presc';


--
-- TOC entry 15359 (class 0 OID 0)
-- Dependencies: 814
-- Name: COLUMN presc_portal_link.portal_mdoc_appointment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_portal_link.portal_mdoc_appointment IS 'portal_mdoc_appointment';


--
-- TOC entry 815 (class 1259 OID 21120)
-- Dependencies: 14
-- Name: presc_reason_cancel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_reason_cancel (
    oid character(36) NOT NULL,
    name character varying(255),
    synonim character varying(255)
);
ALTER TABLE ONLY presc_reason_cancel ALTER COLUMN oid SET STATISTICS 0;


ALTER TABLE mir.presc_reason_cancel OWNER TO postgres;

--
-- TOC entry 15360 (class 0 OID 0)
-- Dependencies: 815
-- Name: TABLE presc_reason_cancel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_reason_cancel IS 'Причина отмены процедур';


--
-- TOC entry 15361 (class 0 OID 0)
-- Dependencies: 815
-- Name: COLUMN presc_reason_cancel.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_reason_cancel.oid IS 'Oid';


--
-- TOC entry 15362 (class 0 OID 0)
-- Dependencies: 815
-- Name: COLUMN presc_reason_cancel.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_reason_cancel.name IS 'Название причины отмены';


--
-- TOC entry 15363 (class 0 OID 0)
-- Dependencies: 815
-- Name: COLUMN presc_reason_cancel.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_reason_cancel.synonim IS 'синоним';


--
-- TOC entry 816 (class 1259 OID 21126)
-- Dependencies: 14
-- Name: presc_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_result (
    oid character(36) NOT NULL,
    presc_id character(36),
    presc_state_id character(36),
    presc_reason_cancel_id character(36),
    presc_execute_date timestamp without time zone
);


ALTER TABLE mir.presc_result OWNER TO postgres;

--
-- TOC entry 15364 (class 0 OID 0)
-- Dependencies: 816
-- Name: TABLE presc_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_result IS 'Список назначенных процедур и манипуляций Author:Boldarev';


--
-- TOC entry 15365 (class 0 OID 0)
-- Dependencies: 816
-- Name: COLUMN presc_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_result.oid IS 'oid';


--
-- TOC entry 15366 (class 0 OID 0)
-- Dependencies: 816
-- Name: COLUMN presc_result.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_result.presc_id IS 'id назначения';


--
-- TOC entry 15367 (class 0 OID 0)
-- Dependencies: 816
-- Name: COLUMN presc_result.presc_state_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_result.presc_state_id IS 'id состояния назначения';


--
-- TOC entry 15368 (class 0 OID 0)
-- Dependencies: 816
-- Name: COLUMN presc_result.presc_reason_cancel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_result.presc_reason_cancel_id IS 'id причины отмены назначения';


--
-- TOC entry 15369 (class 0 OID 0)
-- Dependencies: 816
-- Name: COLUMN presc_result.presc_execute_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_result.presc_execute_date IS 'Дата выполнения процедуры(манипуляции)';


--
-- TOC entry 817 (class 1259 OID 21129)
-- Dependencies: 14
-- Name: presc_schedule; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_schedule (
    id character(36) NOT NULL,
    presc_id character(36) NOT NULL,
    shedule_id character(36) NOT NULL
);


ALTER TABLE mir.presc_schedule OWNER TO postgres;

--
-- TOC entry 15370 (class 0 OID 0)
-- Dependencies: 817
-- Name: TABLE presc_schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_schedule IS 'связка таблиц presc и shedule Author: Melnikov 08.08.2011';


--
-- TOC entry 15371 (class 0 OID 0)
-- Dependencies: 817
-- Name: COLUMN presc_schedule.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_schedule.id IS 'id';


--
-- TOC entry 15372 (class 0 OID 0)
-- Dependencies: 817
-- Name: COLUMN presc_schedule.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_schedule.presc_id IS 'PRESC.ID';


--
-- TOC entry 15373 (class 0 OID 0)
-- Dependencies: 817
-- Name: COLUMN presc_schedule.shedule_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_schedule.shedule_id IS 'SHEDULE.ID';


--
-- TOC entry 818 (class 1259 OID 21132)
-- Dependencies: 14
-- Name: presc_service; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_service (
    oid character(36) NOT NULL,
    service_presctype character(36) NOT NULL,
    presc character(36) NOT NULL
);


ALTER TABLE mir.presc_service OWNER TO postgres;

--
-- TOC entry 15374 (class 0 OID 0)
-- Dependencies: 818
-- Name: TABLE presc_service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_service IS 'presc_service';


--
-- TOC entry 15375 (class 0 OID 0)
-- Dependencies: 818
-- Name: COLUMN presc_service.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_service.oid IS 'oid';


--
-- TOC entry 15376 (class 0 OID 0)
-- Dependencies: 818
-- Name: COLUMN presc_service.service_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_service.service_presctype IS 'Id сервиса';


--
-- TOC entry 15377 (class 0 OID 0)
-- Dependencies: 818
-- Name: COLUMN presc_service.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_service.presc IS 'Id назначения';


--
-- TOC entry 819 (class 1259 OID 21135)
-- Dependencies: 14
-- Name: presc_sign_sotr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_sign_sotr (
    presc character(36) NOT NULL,
    sotr character(36) NOT NULL,
    oid character(36) NOT NULL,
    sign_date timestamp(0) without time zone
);
ALTER TABLE ONLY presc_sign_sotr ALTER COLUMN presc SET STATISTICS 0;


ALTER TABLE mir.presc_sign_sotr OWNER TO postgres;

--
-- TOC entry 15378 (class 0 OID 0)
-- Dependencies: 819
-- Name: TABLE presc_sign_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_sign_sotr IS 'сотрудники подписавшие приемы (множесвенная подпись приема)';


--
-- TOC entry 15379 (class 0 OID 0)
-- Dependencies: 819
-- Name: COLUMN presc_sign_sotr.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_sign_sotr.presc IS 'ссылка на presc';


--
-- TOC entry 15380 (class 0 OID 0)
-- Dependencies: 819
-- Name: COLUMN presc_sign_sotr.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_sign_sotr.sotr IS 'ссылка на sotr';


--
-- TOC entry 15381 (class 0 OID 0)
-- Dependencies: 819
-- Name: COLUMN presc_sign_sotr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_sign_sotr.oid IS 'oid';


--
-- TOC entry 15382 (class 0 OID 0)
-- Dependencies: 819
-- Name: COLUMN presc_sign_sotr.sign_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_sign_sotr.sign_date IS 'время подписания';


--
-- TOC entry 820 (class 1259 OID 21138)
-- Dependencies: 14
-- Name: presc_state; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_state (
    id character(36) NOT NULL,
    name character varying(255),
    synonim character varying(255)
);


ALTER TABLE mir.presc_state OWNER TO postgres;

--
-- TOC entry 15383 (class 0 OID 0)
-- Dependencies: 820
-- Name: TABLE presc_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_state IS 'Состояния медицинский назначений Author: A.Nakorjakov';


--
-- TOC entry 15384 (class 0 OID 0)
-- Dependencies: 820
-- Name: COLUMN presc_state.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_state.id IS 'SEQUENCE=[MIS.SQ_PRESC_STATE]';


--
-- TOC entry 15385 (class 0 OID 0)
-- Dependencies: 820
-- Name: COLUMN presc_state.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_state.name IS 'Название состояния';


--
-- TOC entry 15386 (class 0 OID 0)
-- Dependencies: 820
-- Name: COLUMN presc_state.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_state.synonim IS 'synonim';


--
-- TOC entry 821 (class 1259 OID 21144)
-- Dependencies: 14
-- Name: presc_time; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_time (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.presc_time OWNER TO postgres;

--
-- TOC entry 15387 (class 0 OID 0)
-- Dependencies: 821
-- Name: TABLE presc_time; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_time IS 'Временные характеристики назначения (плановое, экстренное, внепланновое). Не классификатор Author: Nakorjakov';


--
-- TOC entry 15388 (class 0 OID 0)
-- Dependencies: 821
-- Name: COLUMN presc_time.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_time.id IS 'id';


--
-- TOC entry 15389 (class 0 OID 0)
-- Dependencies: 821
-- Name: COLUMN presc_time.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_time.name IS 'название';


--
-- TOC entry 822 (class 1259 OID 21147)
-- Dependencies: 14
-- Name: presc_xrayparam; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presc_xrayparam (
    oid character(36) NOT NULL,
    shots_count integer,
    runtime numeric(15,2),
    dose numeric(15,7)
);


ALTER TABLE mir.presc_xrayparam OWNER TO postgres;

--
-- TOC entry 15390 (class 0 OID 0)
-- Dependencies: 822
-- Name: TABLE presc_xrayparam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presc_xrayparam IS 'Параметры рентген назначений';


--
-- TOC entry 15391 (class 0 OID 0)
-- Dependencies: 822
-- Name: COLUMN presc_xrayparam.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_xrayparam.oid IS 'OID';


--
-- TOC entry 15392 (class 0 OID 0)
-- Dependencies: 822
-- Name: COLUMN presc_xrayparam.shots_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_xrayparam.shots_count IS 'Количество снимков';


--
-- TOC entry 15393 (class 0 OID 0)
-- Dependencies: 822
-- Name: COLUMN presc_xrayparam.runtime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_xrayparam.runtime IS 'Время выполнения исследования';


--
-- TOC entry 15394 (class 0 OID 0)
-- Dependencies: 822
-- Name: COLUMN presc_xrayparam.dose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presc_xrayparam.dose IS 'доза облучения';


--
-- TOC entry 823 (class 1259 OID 21150)
-- Dependencies: 14
-- Name: prescparam_storage; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prescparam_storage (
    oid character(36) NOT NULL,
    presc_id character(36),
    prescparam_id character(36)
);


ALTER TABLE mir.prescparam_storage OWNER TO postgres;

--
-- TOC entry 15395 (class 0 OID 0)
-- Dependencies: 823
-- Name: TABLE prescparam_storage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prescparam_storage IS 'Таблица для хранения списка параметров и тестов для назначений';


--
-- TOC entry 15396 (class 0 OID 0)
-- Dependencies: 823
-- Name: COLUMN prescparam_storage.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_storage.oid IS 'oid';


--
-- TOC entry 15397 (class 0 OID 0)
-- Dependencies: 823
-- Name: COLUMN prescparam_storage.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_storage.presc_id IS 'id назначения';


--
-- TOC entry 15398 (class 0 OID 0)
-- Dependencies: 823
-- Name: COLUMN prescparam_storage.prescparam_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_storage.prescparam_id IS 'id параметра';


--
-- TOC entry 824 (class 1259 OID 21153)
-- Dependencies: 14
-- Name: prescparam_values; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE prescparam_values (
    oid character(36) NOT NULL,
    presc_card character(36) NOT NULL,
    prescparam_id character(36) NOT NULL,
    values_int numeric(15,7),
    values_text text,
    values_combobox character(36),
    values_sting character varying(255)
);


ALTER TABLE mir.prescparam_values OWNER TO postgres;

--
-- TOC entry 15399 (class 0 OID 0)
-- Dependencies: 824
-- Name: TABLE prescparam_values; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE prescparam_values IS 'Таблица хранения результатов лабораторных исследований и параметров назначений после их заполнения.';


--
-- TOC entry 15400 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.oid IS 'oid';


--
-- TOC entry 15401 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.presc_card; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.presc_card IS 'ссылка на таблицу presc_card';


--
-- TOC entry 15402 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.prescparam_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.prescparam_id IS 'ссылка на таблицу presc_param_id';


--
-- TOC entry 15403 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.values_int; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.values_int IS 'Числовое значение параметра или теста';


--
-- TOC entry 15404 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.values_text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.values_text IS 'Текстовое значение параметра или теста';


--
-- TOC entry 15405 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.values_combobox; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.values_combobox IS 'Выборное значение параметра или теста';


--
-- TOC entry 15406 (class 0 OID 0)
-- Dependencies: 824
-- Name: COLUMN prescparam_values.values_sting; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN prescparam_values.values_sting IS 'Строковое значение параметра или теста';


--
-- TOC entry 825 (class 1259 OID 21159)
-- Dependencies: 7293 7294 14
-- Name: presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presctype (
    oid character(36) NOT NULL,
    codespec character varying(100),
    duration integer,
    autodone integer DEFAULT 0 NOT NULL,
    del integer,
    can_allot integer,
    order_ integer,
    mr_section_id character(36),
    presctypefolder_id character(36),
    synonim character varying(255),
    name character varying(1025),
    presctypefolderid_parent character(36),
    foms_code integer,
    description text,
    parent character(36),
    color character(36),
    visible numeric(1,0) DEFAULT 0,
    dicom_pr character varying(1),
    modality character varying(10)
);


ALTER TABLE mir.presctype OWNER TO postgres;

--
-- TOC entry 15407 (class 0 OID 0)
-- Dependencies: 825
-- Name: TABLE presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presctype IS 'Специальности';


--
-- TOC entry 15408 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.oid IS 'oid';


--
-- TOC entry 15409 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.codespec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.codespec IS 'codespec';


--
-- TOC entry 15410 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.duration IS 'Продолжительность манипуляции';


--
-- TOC entry 15411 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.autodone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.autodone IS 'Автовыполнение; 1 - автовыполнение; 0 - нет';


--
-- TOC entry 15412 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.del IS 'Удалено? 0 - Нет; 1 - да';


--
-- TOC entry 15413 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.can_allot; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.can_allot IS 'Может назначить врач? (0 - нет, 1 - да)';


--
-- TOC entry 15414 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.order_; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.order_ IS 'Порядок сортировки';


--
-- TOC entry 15415 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.mr_section_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.mr_section_id IS 'MR_SECTION.ID - раздел ИБ, к которому относится манипуляция';


--
-- TOC entry 15416 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.presctypefolder_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.presctypefolder_id IS 'Родитель [MFOLDER.ID]';


--
-- TOC entry 15417 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.synonim IS 'synonim';


--
-- TOC entry 15418 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.name IS 'name';


--
-- TOC entry 15419 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.foms_code IS 'код ФОМС';


--
-- TOC entry 15420 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.description IS 'Описания подготовки';


--
-- TOC entry 15421 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.parent IS 'ID родителя для специальности';


--
-- TOC entry 15422 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.color; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.color IS 'ID цвета пробирки для лабораторных исследований';


--
-- TOC entry 15423 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.visible; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.visible IS 'Видимость назначений в журнале врача и при печати';


--
-- TOC entry 15424 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.dicom_pr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.dicom_pr IS 'Признак использования DICOM для назначения (worklist, MPPS) ("1")';


--
-- TOC entry 15425 (class 0 OID 0)
-- Dependencies: 825
-- Name: COLUMN presctype.modality; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctype.modality IS 'Модальность исследования (dicom)';


--
-- TOC entry 826 (class 1259 OID 21167)
-- Dependencies: 7295 7296 7297 7298 14
-- Name: presctypeparam; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presctypeparam (
    oid character(36) NOT NULL,
    presctype_id character(36) NOT NULL,
    parametr_type character(36),
    parametr_name character varying(255),
    del numeric(1,0) DEFAULT 0,
    additional_type numeric(1,0) DEFAULT 0,
    "order" integer,
    measure character varying(255),
    visible numeric(1,0) DEFAULT 0,
    synonim character varying(255),
    CONSTRAINT "ck_presctypeparam$del" CHECK (((del IS NULL) OR ((del >= (0)::numeric) AND (del <= (1)::numeric))))
);


ALTER TABLE mir.presctypeparam OWNER TO postgres;

--
-- TOC entry 15426 (class 0 OID 0)
-- Dependencies: 826
-- Name: TABLE presctypeparam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presctypeparam IS 'presctypeparam';


--
-- TOC entry 15427 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.oid IS 'oid';


--
-- TOC entry 15428 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.presctype_id IS 'presctype_id';


--
-- TOC entry 15429 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.parametr_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.parametr_type IS 'parametr_type';


--
-- TOC entry 15430 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.parametr_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.parametr_name IS 'parametr_name';


--
-- TOC entry 15431 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.del IS 'Удалено? 0- нет, 1 - да';


--
-- TOC entry 15432 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.additional_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.additional_type IS '1- Тест, 0 - параметр';


--
-- TOC entry 15433 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam."order" IS 'Порядок теста при отображении';


--
-- TOC entry 15434 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.measure; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.measure IS 'Единица измерения';


--
-- TOC entry 15435 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.visible; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.visible IS 'Видимость параметров в журнале врача и при печати';


--
-- TOC entry 15436 (class 0 OID 0)
-- Dependencies: 826
-- Name: COLUMN presctypeparam.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam.synonim IS 'синоним';


--
-- TOC entry 827 (class 1259 OID 21177)
-- Dependencies: 7299 7300 7301 7302 14
-- Name: presctypeparam_dictionary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE presctypeparam_dictionary (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 0,
    pathology numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_presctypeparam_dic$pathology" CHECK (((pathology IS NULL) OR ((pathology >= (0)::numeric) AND (pathology <= (1)::numeric)))),
    CONSTRAINT "ck_presctypeparam_dic$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.presctypeparam_dictionary OWNER TO postgres;

--
-- TOC entry 15437 (class 0 OID 0)
-- Dependencies: 827
-- Name: TABLE presctypeparam_dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE presctypeparam_dictionary IS 'Справочник значений для комбобоксов  при формировании параметров и тестов.';


--
-- TOC entry 15438 (class 0 OID 0)
-- Dependencies: 827
-- Name: COLUMN presctypeparam_dictionary.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam_dictionary.oid IS 'Id типа значения для справочника';


--
-- TOC entry 15439 (class 0 OID 0)
-- Dependencies: 827
-- Name: COLUMN presctypeparam_dictionary.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam_dictionary.name IS 'Тип вводимого значения для параметров и тестов';


--
-- TOC entry 15440 (class 0 OID 0)
-- Dependencies: 827
-- Name: COLUMN presctypeparam_dictionary.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam_dictionary.parent IS 'поле для формирования комбобокса';


--
-- TOC entry 15441 (class 0 OID 0)
-- Dependencies: 827
-- Name: COLUMN presctypeparam_dictionary.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam_dictionary.name2 IS 'name2';


--
-- TOC entry 15442 (class 0 OID 0)
-- Dependencies: 827
-- Name: COLUMN presctypeparam_dictionary.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN presctypeparam_dictionary.show IS 'show';


--
-- TOC entry 828 (class 1259 OID 21187)
-- Dependencies: 7303 7304 14
-- Name: print_talon; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE print_talon (
    people character(36),
    schedule character(36),
    print_date date,
    sysuser character(36) DEFAULT '"current_user"()'::bpchar,
    sysuser_lpu character(36),
    print_item character varying(20) DEFAULT 'TALON'::character varying
);


ALTER TABLE mir.print_talon OWNER TO postgres;

--
-- TOC entry 15443 (class 0 OID 0)
-- Dependencies: 828
-- Name: TABLE print_talon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE print_talon IS 'Логи печати талончика/ТАП';


--
-- TOC entry 15444 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.people IS 'people';


--
-- TOC entry 15445 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.schedule IS 'schedule';


--
-- TOC entry 15446 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.print_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.print_date IS 'print_date';


--
-- TOC entry 15447 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.sysuser IS 'sysuser';


--
-- TOC entry 15448 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.sysuser_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.sysuser_lpu IS 'sysuser_lpu';


--
-- TOC entry 15449 (class 0 OID 0)
-- Dependencies: 828
-- Name: COLUMN print_talon.print_item; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN print_talon.print_item IS 'Что печатают';


--
-- TOC entry 829 (class 1259 OID 21192)
-- Dependencies: 14
-- Name: profession; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profession (
    oid character(36) NOT NULL,
    profcode character varying(100)
);


ALTER TABLE mir.profession OWNER TO postgres;

--
-- TOC entry 15450 (class 0 OID 0)
-- Dependencies: 829
-- Name: TABLE profession; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profession IS 'профессии';


--
-- TOC entry 15451 (class 0 OID 0)
-- Dependencies: 829
-- Name: COLUMN profession.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profession.oid IS 'oid';


--
-- TOC entry 15452 (class 0 OID 0)
-- Dependencies: 829
-- Name: COLUMN profession.profcode; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profession.profcode IS 'profcode';


--
-- TOC entry 830 (class 1259 OID 21195)
-- Dependencies: 7305 14
-- Name: profex_actions; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_actions (
    oid character(36) NOT NULL,
    type character(36),
    name character varying(255),
    creation_date timestamp without time zone DEFAULT now(),
    create_sysuser character(36),
    create_otdel character(36),
    status_event numeric(1,0),
    profex_contract character(36),
    open_date date,
    close_date date
);


ALTER TABLE mir.profex_actions OWNER TO postgres;

--
-- TOC entry 15453 (class 0 OID 0)
-- Dependencies: 830
-- Name: TABLE profex_actions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_actions IS 'мероприятие';


--
-- TOC entry 15454 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.oid IS 'oid';


--
-- TOC entry 15455 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.type IS 'вид мероприятия - профосмотр, периодический,  предварительный, внеочередной';


--
-- TOC entry 15456 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.name IS 'редактируемое название мероприятия';


--
-- TOC entry 15457 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.creation_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.creation_date IS 'дата создания записи';


--
-- TOC entry 15458 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.create_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.create_sysuser IS 'создавший sysuser';


--
-- TOC entry 15459 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.create_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.create_otdel IS 'создавшее подразделение';


--
-- TOC entry 15460 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.status_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.status_event IS 'статус мероприятия,0 - не создан, 1- выполняется ,2-выполнен';


--
-- TOC entry 15461 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.profex_contract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.profex_contract IS 'договор';


--
-- TOC entry 15462 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.open_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.open_date IS 'дата начала';


--
-- TOC entry 15463 (class 0 OID 0)
-- Dependencies: 830
-- Name: COLUMN profex_actions.close_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions.close_date IS 'дата окончания';


--
-- TOC entry 831 (class 1259 OID 21199)
-- Dependencies: 14
-- Name: profex_actions_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_actions_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.profex_actions_type OWNER TO postgres;

--
-- TOC entry 15464 (class 0 OID 0)
-- Dependencies: 831
-- Name: TABLE profex_actions_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_actions_type IS 'вид мероприятия';


--
-- TOC entry 15465 (class 0 OID 0)
-- Dependencies: 831
-- Name: COLUMN profex_actions_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions_type.oid IS 'oid';


--
-- TOC entry 15466 (class 0 OID 0)
-- Dependencies: 831
-- Name: COLUMN profex_actions_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actions_type.name IS 'name';


--
-- TOC entry 832 (class 1259 OID 21202)
-- Dependencies: 14
-- Name: profex_actionstype_presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_actionstype_presctype (
    profex_actionstype character(36) NOT NULL,
    presctype character(36) NOT NULL
);


ALTER TABLE mir.profex_actionstype_presctype OWNER TO postgres;

--
-- TOC entry 15467 (class 0 OID 0)
-- Dependencies: 832
-- Name: TABLE profex_actionstype_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_actionstype_presctype IS 'обязательные назначения для типа профосмотра (соответствие типа профосмотра назначаниям)';


--
-- TOC entry 15468 (class 0 OID 0)
-- Dependencies: 832
-- Name: COLUMN profex_actionstype_presctype.profex_actionstype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actionstype_presctype.profex_actionstype IS 'profex_actionstype';


--
-- TOC entry 15469 (class 0 OID 0)
-- Dependencies: 832
-- Name: COLUMN profex_actionstype_presctype.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_actionstype_presctype.presctype IS 'presctype';


--
-- TOC entry 833 (class 1259 OID 21205)
-- Dependencies: 14
-- Name: profex_company; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_company (
    oid character(36) NOT NULL,
    company character(36) NOT NULL,
    lpu character(36)
);


ALTER TABLE mir.profex_company OWNER TO postgres;

--
-- TOC entry 15470 (class 0 OID 0)
-- Dependencies: 833
-- Name: TABLE profex_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_company IS 'Компании для профосмотра';


--
-- TOC entry 15471 (class 0 OID 0)
-- Dependencies: 833
-- Name: COLUMN profex_company.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_company.oid IS 'oid';


--
-- TOC entry 15472 (class 0 OID 0)
-- Dependencies: 833
-- Name: COLUMN profex_company.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_company.company IS 'сылка на компанию';


--
-- TOC entry 15473 (class 0 OID 0)
-- Dependencies: 833
-- Name: COLUMN profex_company.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_company.lpu IS 'текущее лпу';


--
-- TOC entry 834 (class 1259 OID 21208)
-- Dependencies: 7306 14
-- Name: profex_contract; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_contract (
    oid character(36) NOT NULL,
    opene_date date,
    close_date date,
    num_contract character varying(15),
    creation_date timestamp without time zone DEFAULT now(),
    create_sysuser character(36),
    create_otdel character(36),
    profex_company character(36)
);


ALTER TABLE mir.profex_contract OWNER TO postgres;

--
-- TOC entry 15474 (class 0 OID 0)
-- Dependencies: 834
-- Name: TABLE profex_contract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_contract IS 'Договор с компаниями';


--
-- TOC entry 15475 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.oid IS 'oid';


--
-- TOC entry 15476 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.opene_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.opene_date IS 'дата начала действия договора';


--
-- TOC entry 15477 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.close_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.close_date IS 'дата окончания действия договора';


--
-- TOC entry 15478 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.num_contract; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.num_contract IS 'Номер договора';


--
-- TOC entry 15479 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.creation_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.creation_date IS 'Дата формирования записи';


--
-- TOC entry 15480 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.create_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.create_sysuser IS 'создавший sysuser';


--
-- TOC entry 15481 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.create_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.create_otdel IS 'создавшее подразделение';


--
-- TOC entry 15482 (class 0 OID 0)
-- Dependencies: 834
-- Name: COLUMN profex_contract.profex_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_contract.profex_company IS 'Сылка на компанию';


--
-- TOC entry 835 (class 1259 OID 21212)
-- Dependencies: 14
-- Name: profex_list; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_list (
    oid character(36) NOT NULL,
    prof_action character(36),
    mdoc character(36),
    status_event numeric(2,0),
    workconditions character(36),
    profpage_all numeric(2,0),
    conclusion text,
    recommends text,
    result character(36),
    profpage_current numeric(2,0)
);


ALTER TABLE mir.profex_list OWNER TO postgres;

--
-- TOC entry 15483 (class 0 OID 0)
-- Dependencies: 835
-- Name: TABLE profex_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_list IS 'план осмотра';


--
-- TOC entry 15484 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.oid IS 'oid';


--
-- TOC entry 15485 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.prof_action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.prof_action IS 'сылка на событие';


--
-- TOC entry 15486 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.mdoc IS 'мед карта (амб.) пациента';


--
-- TOC entry 15487 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.status_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.status_event IS 'status_event';


--
-- TOC entry 15488 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.workconditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.workconditions IS 'Условия труда,  это справочник ';


--
-- TOC entry 15489 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.profpage_all; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.profpage_all IS 'Общийстаж, в годах';


--
-- TOC entry 15490 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.conclusion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.conclusion IS 'Закоючение';


--
-- TOC entry 15491 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.recommends; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.recommends IS 'Рекомендакции врача';


--
-- TOC entry 15492 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.result IS 'Результат исследования';


--
-- TOC entry 15493 (class 0 OID 0)
-- Dependencies: 835
-- Name: COLUMN profex_list.profpage_current; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list.profpage_current IS 'Текущий стаж, в годах';


--
-- TOC entry 836 (class 1259 OID 21218)
-- Dependencies: 14
-- Name: profex_list_naz; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_list_naz (
    oid character(36) NOT NULL,
    profex_list character(36),
    presc character(36),
    presc_type character(36) NOT NULL,
    exec_sotr character(36),
    naztype numeric(1,0),
    "check" numeric(1,0),
    presc_zamena character(36)
);


ALTER TABLE mir.profex_list_naz OWNER TO postgres;

--
-- TOC entry 15494 (class 0 OID 0)
-- Dependencies: 836
-- Name: TABLE profex_list_naz; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_list_naz IS 'назначение (профосмотр)';


--
-- TOC entry 15495 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.oid IS 'oid';


--
-- TOC entry 15496 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.profex_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.profex_list IS 'план осмотра';


--
-- TOC entry 15497 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.presc IS 'назначение';


--
-- TOC entry 15498 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.presc_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.presc_type IS 'Сылка на таблицу presc_type';


--
-- TOC entry 15499 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.exec_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.exec_sotr IS 'Исполнитель';


--
-- TOC entry 15500 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.naztype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.naztype IS 'Вид назначения в рамках мероприятия';


--
-- TOC entry 15501 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz."check"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz."check" IS 'Выбранно';


--
-- TOC entry 15502 (class 0 OID 0)
-- Dependencies: 836
-- Name: COLUMN profex_list_naz.presc_zamena; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_naz.presc_zamena IS 'назначение на замену';


--
-- TOC entry 837 (class 1259 OID 21221)
-- Dependencies: 14
-- Name: profex_list_resultcomment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_list_resultcomment (
    profex_result_comment character(36) NOT NULL,
    profex_lis character(36) NOT NULL
);


ALTER TABLE mir.profex_list_resultcomment OWNER TO postgres;

--
-- TOC entry 15503 (class 0 OID 0)
-- Dependencies: 837
-- Name: TABLE profex_list_resultcomment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_list_resultcomment IS 'Замечания к результату исследования (профосмотр)';


--
-- TOC entry 15504 (class 0 OID 0)
-- Dependencies: 837
-- Name: COLUMN profex_list_resultcomment.profex_result_comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_resultcomment.profex_result_comment IS 'profex_result_comment';


--
-- TOC entry 15505 (class 0 OID 0)
-- Dependencies: 837
-- Name: COLUMN profex_list_resultcomment.profex_lis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_list_resultcomment.profex_lis IS 'profex_lis';


--
-- TOC entry 838 (class 1259 OID 21224)
-- Dependencies: 14
-- Name: profex_proffactor; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_proffactor (
    oid character(36) NOT NULL,
    code character varying(10),
    name character varying(1000),
    parent character(36)
);


ALTER TABLE mir.profex_proffactor OWNER TO postgres;

--
-- TOC entry 15506 (class 0 OID 0)
-- Dependencies: 838
-- Name: TABLE profex_proffactor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_proffactor IS 'Справочник проффакторов (дерево)';


--
-- TOC entry 15507 (class 0 OID 0)
-- Dependencies: 838
-- Name: COLUMN profex_proffactor.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor.oid IS 'oid';


--
-- TOC entry 15508 (class 0 OID 0)
-- Dependencies: 838
-- Name: COLUMN profex_proffactor.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor.code IS 'code';


--
-- TOC entry 15509 (class 0 OID 0)
-- Dependencies: 838
-- Name: COLUMN profex_proffactor.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor.name IS 'name';


--
-- TOC entry 15510 (class 0 OID 0)
-- Dependencies: 838
-- Name: COLUMN profex_proffactor.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor.parent IS 'parent';


--
-- TOC entry 839 (class 1259 OID 21230)
-- Dependencies: 14
-- Name: profex_proffactor_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_proffactor_info (
    oid character(36) NOT NULL,
    contraindications text,
    discription text
);


ALTER TABLE mir.profex_proffactor_info OWNER TO postgres;

--
-- TOC entry 15511 (class 0 OID 0)
-- Dependencies: 839
-- Name: TABLE profex_proffactor_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_proffactor_info IS 'противопоказания и разъяснения для профакторов';


--
-- TOC entry 15512 (class 0 OID 0)
-- Dependencies: 839
-- Name: COLUMN profex_proffactor_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_info.oid IS 'Oid';


--
-- TOC entry 15513 (class 0 OID 0)
-- Dependencies: 839
-- Name: COLUMN profex_proffactor_info.contraindications; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_info.contraindications IS 'противопоказания';


--
-- TOC entry 15514 (class 0 OID 0)
-- Dependencies: 839
-- Name: COLUMN profex_proffactor_info.discription; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_info.discription IS 'разъяснения';


--
-- TOC entry 840 (class 1259 OID 21236)
-- Dependencies: 14
-- Name: profex_proffactor_presc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_proffactor_presc (
    oid character(36) NOT NULL,
    proffactor character(36),
    presctype character(36)
);


ALTER TABLE mir.profex_proffactor_presc OWNER TO postgres;

--
-- TOC entry 15515 (class 0 OID 0)
-- Dependencies: 840
-- Name: TABLE profex_proffactor_presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_proffactor_presc IS 'Обязательные исследования для профакторов';


--
-- TOC entry 15516 (class 0 OID 0)
-- Dependencies: 840
-- Name: COLUMN profex_proffactor_presc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_presc.oid IS 'oid';


--
-- TOC entry 15517 (class 0 OID 0)
-- Dependencies: 840
-- Name: COLUMN profex_proffactor_presc.proffactor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_presc.proffactor IS 'сылка на профактор';


--
-- TOC entry 15518 (class 0 OID 0)
-- Dependencies: 840
-- Name: COLUMN profex_proffactor_presc.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_presc.presctype IS 'Справочник назначений';


--
-- TOC entry 841 (class 1259 OID 21239)
-- Dependencies: 14
-- Name: profex_proffactor_profexlist; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_proffactor_profexlist (
    oid character(36) NOT NULL,
    prophex_list character(36) NOT NULL,
    proffactor character(36) NOT NULL,
    fackt_factor character varying(50)
);


ALTER TABLE mir.profex_proffactor_profexlist OWNER TO postgres;

--
-- TOC entry 15519 (class 0 OID 0)
-- Dependencies: 841
-- Name: TABLE profex_proffactor_profexlist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_proffactor_profexlist IS 'Профакторы относящиеся к пациенту (плану осмотра)';


--
-- TOC entry 15520 (class 0 OID 0)
-- Dependencies: 841
-- Name: COLUMN profex_proffactor_profexlist.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_profexlist.oid IS 'oid';


--
-- TOC entry 15521 (class 0 OID 0)
-- Dependencies: 841
-- Name: COLUMN profex_proffactor_profexlist.prophex_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_profexlist.prophex_list IS 'план осмотра которому соответствыет данный профактор';


--
-- TOC entry 15522 (class 0 OID 0)
-- Dependencies: 841
-- Name: COLUMN profex_proffactor_profexlist.proffactor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_profexlist.proffactor IS 'Код проффактора PROFFACTOR';


--
-- TOC entry 15523 (class 0 OID 0)
-- Dependencies: 841
-- Name: COLUMN profex_proffactor_profexlist.fackt_factor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_proffactor_profexlist.fackt_factor IS 'Фактический фактор';


--
-- TOC entry 842 (class 1259 OID 21242)
-- Dependencies: 14
-- Name: profex_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_result (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.profex_result OWNER TO postgres;

--
-- TOC entry 15524 (class 0 OID 0)
-- Dependencies: 842
-- Name: TABLE profex_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_result IS 'Справочник "Результаты исследований" (профосмотр)';


--
-- TOC entry 15525 (class 0 OID 0)
-- Dependencies: 842
-- Name: COLUMN profex_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_result.oid IS 'Oid';


--
-- TOC entry 15526 (class 0 OID 0)
-- Dependencies: 842
-- Name: COLUMN profex_result.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_result.name IS 'Наименование';


--
-- TOC entry 843 (class 1259 OID 21245)
-- Dependencies: 14
-- Name: profex_result_comment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_result_comment (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.profex_result_comment OWNER TO postgres;

--
-- TOC entry 15527 (class 0 OID 0)
-- Dependencies: 843
-- Name: TABLE profex_result_comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_result_comment IS 'Справочник "Замечания к результату исследования" (профосмотр)';


--
-- TOC entry 15528 (class 0 OID 0)
-- Dependencies: 843
-- Name: COLUMN profex_result_comment.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_result_comment.oid IS 'Oid';


--
-- TOC entry 15529 (class 0 OID 0)
-- Dependencies: 843
-- Name: COLUMN profex_result_comment.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_result_comment.name IS 'Наименование';


--
-- TOC entry 844 (class 1259 OID 21248)
-- Dependencies: 14
-- Name: profex_workconditions; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profex_workconditions (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.profex_workconditions OWNER TO postgres;

--
-- TOC entry 15530 (class 0 OID 0)
-- Dependencies: 844
-- Name: TABLE profex_workconditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profex_workconditions IS 'Условия труда в рамках осмотра';


--
-- TOC entry 15531 (class 0 OID 0)
-- Dependencies: 844
-- Name: COLUMN profex_workconditions.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_workconditions.oid IS 'oid';


--
-- TOC entry 15532 (class 0 OID 0)
-- Dependencies: 844
-- Name: COLUMN profex_workconditions.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profex_workconditions.name IS 'name';


--
-- TOC entry 845 (class 1259 OID 21251)
-- Dependencies: 7307 7308 7309 7310 14
-- Name: profile_care; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profile_care (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    for_child numeric(1,0) DEFAULT 0,
    foms_code integer,
    CONSTRAINT "ck_profile_care$for_child" CHECK (((for_child IS NULL) OR ((for_child >= (0)::numeric) AND (for_child <= (1)::numeric)))),
    CONSTRAINT "ck_profile_care$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.profile_care OWNER TO postgres;

--
-- TOC entry 15533 (class 0 OID 0)
-- Dependencies: 845
-- Name: TABLE profile_care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profile_care IS 'профиль медицинской помощи по...';


--
-- TOC entry 15534 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.oid IS 'oid';


--
-- TOC entry 15535 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.name IS 'name';


--
-- TOC entry 15536 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.show IS '1- показывать 0- скрывать';


--
-- TOC entry 15537 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 15538 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 15539 (class 0 OID 0)
-- Dependencies: 845
-- Name: COLUMN profile_care.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_care.foms_code IS 'код ФОМС';


--
-- TOC entry 846 (class 1259 OID 21261)
-- Dependencies: 14
-- Name: profile_gosp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profile_gosp (
    oid character(36) NOT NULL,
    name character varying(4000) NOT NULL
);


ALTER TABLE mir.profile_gosp OWNER TO postgres;

--
-- TOC entry 15540 (class 0 OID 0)
-- Dependencies: 846
-- Name: TABLE profile_gosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profile_gosp IS 'ПРОФИЛИ ДЛЯ СТАНДАРТОВ ГОСПИТАЛИЗАЦИИ';


--
-- TOC entry 15541 (class 0 OID 0)
-- Dependencies: 846
-- Name: COLUMN profile_gosp.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp.oid IS 'ID';


--
-- TOC entry 15542 (class 0 OID 0)
-- Dependencies: 846
-- Name: COLUMN profile_gosp.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp.name IS 'НАЗВАНИЕ';


--
-- TOC entry 847 (class 1259 OID 21267)
-- Dependencies: 14
-- Name: profile_gosp_mkb; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profile_gosp_mkb (
    oid character(36) NOT NULL,
    oid_profile character(36) NOT NULL,
    id_mkb numeric(15,0) NOT NULL
);


ALTER TABLE mir.profile_gosp_mkb OWNER TO postgres;

--
-- TOC entry 15543 (class 0 OID 0)
-- Dependencies: 847
-- Name: TABLE profile_gosp_mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profile_gosp_mkb IS 'PROFILE_GOSP_MKB';


--
-- TOC entry 15544 (class 0 OID 0)
-- Dependencies: 847
-- Name: COLUMN profile_gosp_mkb.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_mkb.oid IS 'ID';


--
-- TOC entry 15545 (class 0 OID 0)
-- Dependencies: 847
-- Name: COLUMN profile_gosp_mkb.oid_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_mkb.oid_profile IS 'ID ПРОФИЛЯ';


--
-- TOC entry 15546 (class 0 OID 0)
-- Dependencies: 847
-- Name: COLUMN profile_gosp_mkb.id_mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_mkb.id_mkb IS 'ID МКБ';


--
-- TOC entry 848 (class 1259 OID 21270)
-- Dependencies: 14
-- Name: profile_gosp_standart; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE profile_gosp_standart (
    oid character(36) NOT NULL,
    oid_profile character(36) NOT NULL,
    oid_service character(36) NOT NULL
);


ALTER TABLE mir.profile_gosp_standart OWNER TO postgres;

--
-- TOC entry 15547 (class 0 OID 0)
-- Dependencies: 848
-- Name: TABLE profile_gosp_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE profile_gosp_standart IS 'PROFILE_GOSP_STANDART';


--
-- TOC entry 15548 (class 0 OID 0)
-- Dependencies: 848
-- Name: COLUMN profile_gosp_standart.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_standart.oid IS 'ID';


--
-- TOC entry 15549 (class 0 OID 0)
-- Dependencies: 848
-- Name: COLUMN profile_gosp_standart.oid_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_standart.oid_profile IS 'ID ПРОФИЛЯ';


--
-- TOC entry 15550 (class 0 OID 0)
-- Dependencies: 848
-- Name: COLUMN profile_gosp_standart.oid_service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN profile_gosp_standart.oid_service IS 'ID УСЛУГИ';


--
-- TOC entry 849 (class 1259 OID 21273)
-- Dependencies: 7311 14
-- Name: progression; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE progression (
    oid character(36) NOT NULL,
    linetype character(36),
    "order" character varying(255),
    print_dt timestamp without time zone DEFAULT now(),
    plan_dt timestamp without time zone,
    order_n integer
);


ALTER TABLE mir.progression OWNER TO postgres;

--
-- TOC entry 15551 (class 0 OID 0)
-- Dependencies: 849
-- Name: TABLE progression; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE progression IS 'текущая очередь';


--
-- TOC entry 15552 (class 0 OID 0)
-- Dependencies: 849
-- Name: COLUMN progression.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression.oid IS 'oid';


--
-- TOC entry 15553 (class 0 OID 0)
-- Dependencies: 849
-- Name: COLUMN progression.linetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression.linetype IS 'linetype';


--
-- TOC entry 15554 (class 0 OID 0)
-- Dependencies: 849
-- Name: COLUMN progression."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression."order" IS 'order';


--
-- TOC entry 15555 (class 0 OID 0)
-- Dependencies: 849
-- Name: COLUMN progression.print_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression.print_dt IS 'print_dt';


--
-- TOC entry 15556 (class 0 OID 0)
-- Dependencies: 849
-- Name: COLUMN progression.plan_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression.plan_dt IS 'plan_dt';


--
-- TOC entry 850 (class 1259 OID 21277)
-- Dependencies: 7312 14
-- Name: progression_stat; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE progression_stat (
    oid character(36) NOT NULL,
    sysuser character(36),
    registwindow character(36),
    linetype character(36),
    "order" character varying(255),
    print_dt timestamp without time zone,
    plan_dt timestamp without time zone,
    fact_dt timestamp without time zone,
    status integer,
    order_n integer,
    call_id integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.progression_stat OWNER TO postgres;

--
-- TOC entry 15557 (class 0 OID 0)
-- Dependencies: 850
-- Name: TABLE progression_stat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE progression_stat IS 'архив очередей для статистики';


--
-- TOC entry 15558 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.oid IS 'oid';


--
-- TOC entry 15559 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.sysuser IS 'sysuser';


--
-- TOC entry 15560 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.registwindow; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.registwindow IS 'registwindow';


--
-- TOC entry 15561 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.linetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.linetype IS 'linetype';


--
-- TOC entry 15562 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat."order" IS 'order';


--
-- TOC entry 15563 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.print_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.print_dt IS 'print_dt';


--
-- TOC entry 15564 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.plan_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.plan_dt IS 'plan_dt';


--
-- TOC entry 15565 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.fact_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.fact_dt IS 'fact_dt';


--
-- TOC entry 15566 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.status IS '0 - неявка; 1-обработан; 2-текущий в обработке';


--
-- TOC entry 15567 (class 0 OID 0)
-- Dependencies: 850
-- Name: COLUMN progression_stat.call_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN progression_stat.call_id IS 'Ключ вызова регистратора';


--
-- TOC entry 851 (class 1259 OID 21281)
-- Dependencies: 14
-- Name: protocol; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE protocol (
    presc_id character(36) NOT NULL,
    content text,
    signdata text
);


ALTER TABLE mir.protocol OWNER TO postgres;

--
-- TOC entry 15568 (class 0 OID 0)
-- Dependencies: 851
-- Name: TABLE protocol; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE protocol IS 'протоколы осмотров by A.Nakorjakov';


--
-- TOC entry 15569 (class 0 OID 0)
-- Dependencies: 851
-- Name: COLUMN protocol.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol.presc_id IS 'presc_id';


--
-- TOC entry 15570 (class 0 OID 0)
-- Dependencies: 851
-- Name: COLUMN protocol.content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol.content IS 'content';


--
-- TOC entry 852 (class 1259 OID 21287)
-- Dependencies: 7313 7314 14
-- Name: protocol_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE protocol_template (
    oid character(36) NOT NULL,
    parent character(36) DEFAULT 0,
    name character varying(255),
    type character varying(50),
    required_fl numeric(1,0) DEFAULT 0
);


ALTER TABLE mir.protocol_template OWNER TO postgres;

--
-- TOC entry 15571 (class 0 OID 0)
-- Dependencies: 852
-- Name: TABLE protocol_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE protocol_template IS 'Элементы шаблона';


--
-- TOC entry 15572 (class 0 OID 0)
-- Dependencies: 852
-- Name: COLUMN protocol_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol_template.oid IS 'oid';


--
-- TOC entry 15573 (class 0 OID 0)
-- Dependencies: 852
-- Name: COLUMN protocol_template.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol_template.parent IS 'parent';


--
-- TOC entry 15574 (class 0 OID 0)
-- Dependencies: 852
-- Name: COLUMN protocol_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol_template.name IS 'name';


--
-- TOC entry 15575 (class 0 OID 0)
-- Dependencies: 852
-- Name: COLUMN protocol_template.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol_template.type IS 'type';


--
-- TOC entry 15576 (class 0 OID 0)
-- Dependencies: 852
-- Name: COLUMN protocol_template.required_fl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN protocol_template.required_fl IS 'Обязательное поле или нет';


--
-- TOC entry 853 (class 1259 OID 21292)
-- Dependencies: 14
-- Name: publicmessages; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE publicmessages (
    oid character varying(36),
    region character varying(36),
    city character varying(36),
    lpu character varying(36),
    spec character varying(36),
    usersend character varying(36),
    datesend date,
    actualdate date,
    mess text,
    dolg character varying(36)
);


ALTER TABLE mir.publicmessages OWNER TO postgres;

--
-- TOC entry 15577 (class 0 OID 0)
-- Dependencies: 853
-- Name: TABLE publicmessages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE publicmessages IS 'Публичные сообщения сотрудникам';


--
-- TOC entry 15578 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.oid IS 'oid';


--
-- TOC entry 15579 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.region IS 'region';


--
-- TOC entry 15580 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.city IS 'city';


--
-- TOC entry 15581 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.lpu IS 'lpu';


--
-- TOC entry 15582 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.spec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.spec IS 'spec';


--
-- TOC entry 15583 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.usersend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.usersend IS 'usersend';


--
-- TOC entry 15584 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.datesend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.datesend IS 'datesend';


--
-- TOC entry 15585 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.actualdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.actualdate IS 'actualdate';


--
-- TOC entry 15586 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.mess; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.mess IS 'mess';


--
-- TOC entry 15587 (class 0 OID 0)
-- Dependencies: 853
-- Name: COLUMN publicmessages.dolg; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN publicmessages.dolg IS 'dolg';


--
-- TOC entry 854 (class 1259 OID 21298)
-- Dependencies: 7315 14
-- Name: reason_sending_archive; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE reason_sending_archive (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer
);


ALTER TABLE mir.reason_sending_archive OWNER TO postgres;

--
-- TOC entry 15588 (class 0 OID 0)
-- Dependencies: 854
-- Name: TABLE reason_sending_archive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE reason_sending_archive IS 'Указания причины сдачи карты в архив';


--
-- TOC entry 15589 (class 0 OID 0)
-- Dependencies: 854
-- Name: COLUMN reason_sending_archive.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN reason_sending_archive.oid IS 'oid';


--
-- TOC entry 15590 (class 0 OID 0)
-- Dependencies: 854
-- Name: COLUMN reason_sending_archive.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN reason_sending_archive.name IS 'name';


--
-- TOC entry 15591 (class 0 OID 0)
-- Dependencies: 854
-- Name: COLUMN reason_sending_archive.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN reason_sending_archive.show IS '1- показывать 0- скрывать';


--
-- TOC entry 15592 (class 0 OID 0)
-- Dependencies: 854
-- Name: COLUMN reason_sending_archive.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN reason_sending_archive.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 15593 (class 0 OID 0)
-- Dependencies: 854
-- Name: COLUMN reason_sending_archive.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN reason_sending_archive.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 855 (class 1259 OID 21305)
-- Dependencies: 14
-- Name: receptiontype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE receptiontype (
    oid character(36) NOT NULL,
    color numeric,
    color_style character varying(15),
    name character varying(255),
    from_age integer,
    to_age integer,
    sex integer,
    color_text character varying(15),
    color_select character varying(15),
    color_mouseover character varying(15),
    lpu character(36),
    class character varying(50)
);


ALTER TABLE mir.receptiontype OWNER TO postgres;

--
-- TOC entry 15594 (class 0 OID 0)
-- Dependencies: 855
-- Name: TABLE receptiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE receptiontype IS 'Тип приема';


--
-- TOC entry 15595 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.oid IS 'oid';


--
-- TOC entry 15596 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.color; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.color IS 'color';


--
-- TOC entry 15597 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.color_style; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.color_style IS 'код цвета';


--
-- TOC entry 15598 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.color_text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.color_text IS 'Цвет текста ячейки';


--
-- TOC entry 15599 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.color_select; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.color_select IS 'Цвет выделенной ячейки';


--
-- TOC entry 15600 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.color_mouseover; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.color_mouseover IS 'Цвет ячейки при наведении мыши';


--
-- TOC entry 15601 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.lpu IS 'ЛПУ';


--
-- TOC entry 15602 (class 0 OID 0)
-- Dependencies: 855
-- Name: COLUMN receptiontype.class; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype.class IS 'Имя класса ячейки для стиля';


--
-- TOC entry 856 (class 1259 OID 21311)
-- Dependencies: 14
-- Name: receptiontype_rights; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE receptiontype_rights (
    sysuser character(36) NOT NULL,
    receptiontype character(36) NOT NULL
);


ALTER TABLE mir.receptiontype_rights OWNER TO postgres;

--
-- TOC entry 15603 (class 0 OID 0)
-- Dependencies: 856
-- Name: TABLE receptiontype_rights; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE receptiontype_rights IS 'Права записи на прием';


--
-- TOC entry 15604 (class 0 OID 0)
-- Dependencies: 856
-- Name: COLUMN receptiontype_rights.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype_rights.sysuser IS 'пользователь системы';


--
-- TOC entry 15605 (class 0 OID 0)
-- Dependencies: 856
-- Name: COLUMN receptiontype_rights.receptiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN receptiontype_rights.receptiontype IS 'Тип приема';


--
-- TOC entry 857 (class 1259 OID 21314)
-- Dependencies: 14
-- Name: recipe; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe (
    oid character(36) NOT NULL,
    mdoc_id character(36) NOT NULL,
    visit_id character(36),
    source_id character(36),
    type_id character(36),
    emp_id character(36),
    icd10_id character(36),
    snils character varying(20),
    pay_type_id character(36),
    idoc_a_id character(36),
    ser character varying(50),
    date date,
    duration_id character(36),
    percent_id character(36),
    dtd character varying(50),
    signa character varying(50),
    comment character varying(255),
    status_id character(36),
    lgot_type_id character(36),
    favorkind_id character(36),
    presc_id character(36),
    num numeric(20,0),
    benefit_financing character(36),
    recipe_prescription_type character(36)
);


ALTER TABLE mir.recipe OWNER TO postgres;

--
-- TOC entry 15606 (class 0 OID 0)
-- Dependencies: 857
-- Name: TABLE recipe; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe IS 'Рецепт Author:Kulikovskiy';


--
-- TOC entry 15607 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.oid IS 'oid';


--
-- TOC entry 15608 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.mdoc_id IS 'Код медицинского документа (MDOC.ID)';


--
-- TOC entry 15609 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.visit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.visit_id IS 'Код посещения (VISIT.ID)';


--
-- TOC entry 15610 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.source_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.source_id IS 'Код источника финансирования (RECIPE_SOURCE.ID)(Удалить, дублирует benefit_financing)';


--
-- TOC entry 15611 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.type_id IS 'Код типа рецепта (RECIPE_TYPE.ID)(Взрослый, Детский)';


--
-- TOC entry 15612 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.emp_id IS 'Код врача, создавшего рецепт (EMP.ID)';


--
-- TOC entry 15613 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.icd10_id IS 'Код диагноза МКБ10 (ICD10.ID)';


--
-- TOC entry 15614 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.snils; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.snils IS 'СНИЛС';


--
-- TOC entry 15615 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.pay_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.pay_type_id IS 'Код типа оплаты (PAY_TYPE.ID)';


--
-- TOC entry 15616 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.idoc_a_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.idoc_a_id IS 'Код страхового документа пациента (IDOC_A_ID)';


--
-- TOC entry 15617 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.ser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.ser IS 'Серия рецепта';


--
-- TOC entry 15618 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.date IS 'Дата выдачи рецепта';


--
-- TOC entry 15619 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.duration_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.duration_id IS 'Длительность применения (RECIPE_DURATION.ID)';


--
-- TOC entry 15620 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.percent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.percent_id IS 'Процент оплаты рецепта(RECIPE_PERCENT.ID)';


--
-- TOC entry 15621 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.dtd; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.dtd IS 'Поле D.t.d. в льготном региональном рецепте';


--
-- TOC entry 15622 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.signa; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.signa IS 'Поле signa';


--
-- TOC entry 15623 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.comment IS 'Комментарий';


--
-- TOC entry 15624 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.status_id IS 'Статус(AMBTICK_STATUS)';


--
-- TOC entry 15625 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.lgot_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.lgot_type_id IS 'Тип льготы(RECIPE_LGOT_TYPE.ID)(Удалить, дублируется benefit_financing и recipe_prescription_type)';


--
-- TOC entry 15626 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.favorkind_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.favorkind_id IS 'Категория льготности (FAVORKIND.ID)';


--
-- TOC entry 15627 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.presc_id IS 'Код назначения (PRESC.ID)';


--
-- TOC entry 15628 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.num IS 'Номер рецепта';


--
-- TOC entry 15629 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.benefit_financing IS 'Источник финансирования для льготного рецепта(BENEFIT_FINANCING.OID)';


--
-- TOC entry 15630 (class 0 OID 0)
-- Dependencies: 857
-- Name: COLUMN recipe.recipe_prescription_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe.recipe_prescription_type IS 'Тип рецепта(RECIPE_PRESCRIPTION_TYPE.OID)(Без рецепта, Обычный, Льготный)';


--
-- TOC entry 858 (class 1259 OID 21320)
-- Dependencies: 14
-- Name: recipe_duration; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_duration (
    oid character(36) NOT NULL,
    name character varying(255),
    norder integer,
    is_default integer,
    type_id character(36),
    synonym character varying(255),
    benefit_financing character(36)
);


ALTER TABLE mir.recipe_duration OWNER TO postgres;

--
-- TOC entry 15631 (class 0 OID 0)
-- Dependencies: 858
-- Name: TABLE recipe_duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_duration IS 'Длительность действия рецепта Author:Kulikovskiy';


--
-- TOC entry 15632 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.oid IS 'Код';


--
-- TOC entry 15633 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.name IS 'Название';


--
-- TOC entry 15634 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.norder; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.norder IS 'Сортировка';


--
-- TOC entry 15635 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.is_default; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.is_default IS 'По умолчанию';


--
-- TOC entry 15636 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.type_id IS 'Тип 1 - обычный, 2 - региональная льгота, 3 - федеральная льгота (RECIPE_LGOT_TYPE.ID)';


--
-- TOC entry 15637 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.synonym IS 'Синоним';


--
-- TOC entry 15638 (class 0 OID 0)
-- Dependencies: 858
-- Name: COLUMN recipe_duration.benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_duration.benefit_financing IS 'Тип финансирования льготы';


--
-- TOC entry 859 (class 1259 OID 21326)
-- Dependencies: 14
-- Name: recipe_lgot_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_lgot_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.recipe_lgot_type OWNER TO postgres;

--
-- TOC entry 15639 (class 0 OID 0)
-- Dependencies: 859
-- Name: TABLE recipe_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_lgot_type IS 'Типы льгот рецепта Author:Kulikovskiy';


--
-- TOC entry 15640 (class 0 OID 0)
-- Dependencies: 859
-- Name: COLUMN recipe_lgot_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_lgot_type.oid IS 'Код';


--
-- TOC entry 15641 (class 0 OID 0)
-- Dependencies: 859
-- Name: COLUMN recipe_lgot_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_lgot_type.name IS 'Название';


--
-- TOC entry 860 (class 1259 OID 21329)
-- Dependencies: 14
-- Name: recipe_medic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_medic (
    oid character(36) NOT NULL,
    tradenames character(36),
    medic_name character varying(255),
    input_id character(36),
    recipe_id character(36) NOT NULL,
    count real,
    unit_id character(36),
    duration integer,
    doza real,
    doza_unit_id character(36),
    dtd character varying(10),
    frequency_id character(36),
    frequency character varying(255),
    latinnames character(36),
    benefit_medic character(36),
    actmatter integer
);


ALTER TABLE mir.recipe_medic OWNER TO postgres;

--
-- TOC entry 15642 (class 0 OID 0)
-- Dependencies: 860
-- Name: TABLE recipe_medic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_medic IS 'Препараты рецепта Author:Kulikovskiy';


--
-- TOC entry 15643 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.oid IS 'Код';


--
-- TOC entry 15644 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.tradenames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.tradenames IS 'Код наименования препарата (tradenames.OID)';


--
-- TOC entry 15645 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.medic_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.medic_name IS 'medic_name';


--
-- TOC entry 15646 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.input_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.input_id IS 'Код пути приема препарата (MEDIC_INPUT_TYPE.ID)';


--
-- TOC entry 15647 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.recipe_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.recipe_id IS 'Код рецепта (RECIPE.ID)';


--
-- TOC entry 15648 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.count IS 'Количество препарата';


--
-- TOC entry 15649 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.unit_id IS 'Единица измерения препарата (MASSUNIT.ID)';


--
-- TOC entry 15650 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.duration IS 'Длительность применения препарата';


--
-- TOC entry 15651 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.doza; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.doza IS 'Доза препарата';


--
-- TOC entry 15652 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.doza_unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.doza_unit_id IS 'Единица измерения дозы (MASSUNIT.ID)';


--
-- TOC entry 15653 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.dtd; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.dtd IS 'Поле D.t.d. в льготном региональном рецепте';


--
-- TOC entry 15654 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.frequency_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.frequency_id IS 'Частота применения препарата (MEDIC_FREQUENCY.ID)';


--
-- TOC entry 15655 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.frequency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.frequency IS 'Частота применения в строковом виде';


--
-- TOC entry 15656 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.latinnames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.latinnames IS 'Код латинского наименования препарата (latinnames.OID)';


--
-- TOC entry 15657 (class 0 OID 0)
-- Dependencies: 860
-- Name: COLUMN recipe_medic.actmatter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic.actmatter IS 'Ссылка на actmatters';


--
-- TOC entry 861 (class 1259 OID 21335)
-- Dependencies: 14
-- Name: recipe_medic_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_medic_template (
    oid character(36) NOT NULL,
    tradenames character(36),
    medic_name character varying(255),
    input_id character(36),
    medic_template_id character(36) NOT NULL,
    count real,
    unit_id character(36),
    duration integer,
    doza real,
    doza_unit_id character(36),
    dtd character varying(10),
    frequency_id character(36),
    frequency character varying(255),
    latinnames character(36),
    benefit_medic character(36),
    actmatter integer
);


ALTER TABLE mir.recipe_medic_template OWNER TO postgres;

--
-- TOC entry 15658 (class 0 OID 0)
-- Dependencies: 861
-- Name: TABLE recipe_medic_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_medic_template IS 'Препараты шаблона рецепта';


--
-- TOC entry 15659 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.oid IS 'Код';


--
-- TOC entry 15660 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.tradenames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.tradenames IS 'Код наименования препарата (tradenames.OID)';


--
-- TOC entry 15661 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.medic_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.medic_name IS 'medic_name';


--
-- TOC entry 15662 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.input_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.input_id IS 'Код пути приема препарата (MEDIC_INPUT_TYPE.ID)';


--
-- TOC entry 15663 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.medic_template_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.medic_template_id IS 'Код шаблона (MEDIC_TEMPLATE.ID)';


--
-- TOC entry 15664 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.count IS 'Количество препарата';


--
-- TOC entry 15665 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.unit_id IS 'Единица измерения препарата (MASSUNIT.ID)';


--
-- TOC entry 15666 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.duration IS 'Длительность применения препарата';


--
-- TOC entry 15667 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.doza; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.doza IS 'Доза препарата';


--
-- TOC entry 15668 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.doza_unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.doza_unit_id IS 'Единица измерения дозы (MASSUNIT.ID)';


--
-- TOC entry 15669 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.dtd; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.dtd IS 'Поле D.t.d. в льготном региональном рецепте';


--
-- TOC entry 15670 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.frequency_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.frequency_id IS 'Частота применения препарата (MEDIC_FREQUENCY.ID)';


--
-- TOC entry 15671 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.frequency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.frequency IS 'Частота применения в строковом виде';


--
-- TOC entry 15672 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.latinnames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.latinnames IS 'Код латинского наименования препарата (latinnames.OID)';


--
-- TOC entry 15673 (class 0 OID 0)
-- Dependencies: 861
-- Name: COLUMN recipe_medic_template.actmatter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_medic_template.actmatter IS 'Ссылка на Actmatter';


--
-- TOC entry 862 (class 1259 OID 21341)
-- Dependencies: 14
-- Name: recipe_percent; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_percent (
    oid character(36) NOT NULL,
    name character varying(255),
    npercent integer,
    is_default integer,
    type_id character(36),
    synonym character varying(255),
    benefit_financing character(36)
);


ALTER TABLE mir.recipe_percent OWNER TO postgres;

--
-- TOC entry 15674 (class 0 OID 0)
-- Dependencies: 862
-- Name: TABLE recipe_percent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_percent IS 'Процент оплаты рецепта Author:Kulikovskiy';


--
-- TOC entry 15675 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.oid IS 'Код';


--
-- TOC entry 15676 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.name IS 'Название';


--
-- TOC entry 15677 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.npercent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.npercent IS 'Количество процентов';


--
-- TOC entry 15678 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.is_default; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.is_default IS 'По умолчанию';


--
-- TOC entry 15679 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.type_id IS 'Тип 2 - региональная льгота, 3 - федеральная льгота(Удалить, дублирует benefit_financing)';


--
-- TOC entry 15680 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.synonym IS 'Синоним';


--
-- TOC entry 15681 (class 0 OID 0)
-- Dependencies: 862
-- Name: COLUMN recipe_percent.benefit_financing; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_percent.benefit_financing IS 'Тип финансирования льготы';


--
-- TOC entry 863 (class 1259 OID 21347)
-- Dependencies: 14
-- Name: recipe_prescription_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_prescription_type (
    oid character(36) NOT NULL,
    name character varying(255),
    "order" integer
);


ALTER TABLE mir.recipe_prescription_type OWNER TO postgres;

--
-- TOC entry 15682 (class 0 OID 0)
-- Dependencies: 863
-- Name: TABLE recipe_prescription_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_prescription_type IS 'Тип рецепта(Без рецепта, Обычный, Льготный)
created by A.Ukhin';


--
-- TOC entry 15683 (class 0 OID 0)
-- Dependencies: 863
-- Name: COLUMN recipe_prescription_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_prescription_type.oid IS 'oid';


--
-- TOC entry 15684 (class 0 OID 0)
-- Dependencies: 863
-- Name: COLUMN recipe_prescription_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_prescription_type.name IS 'Наименование типа рецепта';


--
-- TOC entry 15685 (class 0 OID 0)
-- Dependencies: 863
-- Name: COLUMN recipe_prescription_type."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_prescription_type."order" IS 'Порядковый номер для сортировки';


--
-- TOC entry 864 (class 1259 OID 21350)
-- Dependencies: 14
-- Name: recipe_source; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_source (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.recipe_source OWNER TO postgres;

--
-- TOC entry 15686 (class 0 OID 0)
-- Dependencies: 864
-- Name: TABLE recipe_source; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_source IS 'Источник фининсирования рецепта Author:Kulikovskiy';


--
-- TOC entry 15687 (class 0 OID 0)
-- Dependencies: 864
-- Name: COLUMN recipe_source.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_source.oid IS 'Код';


--
-- TOC entry 15688 (class 0 OID 0)
-- Dependencies: 864
-- Name: COLUMN recipe_source.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_source.name IS 'Название';


--
-- TOC entry 865 (class 1259 OID 21353)
-- Dependencies: 14
-- Name: recipe_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_status (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.recipe_status OWNER TO postgres;

--
-- TOC entry 15689 (class 0 OID 0)
-- Dependencies: 865
-- Name: TABLE recipe_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_status IS 'Статус рецепта';


--
-- TOC entry 15690 (class 0 OID 0)
-- Dependencies: 865
-- Name: COLUMN recipe_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_status.oid IS 'Код статуса';


--
-- TOC entry 15691 (class 0 OID 0)
-- Dependencies: 865
-- Name: COLUMN recipe_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_status.name IS 'Название статуса';


--
-- TOC entry 866 (class 1259 OID 21356)
-- Dependencies: 14
-- Name: recipe_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recipe_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.recipe_type OWNER TO postgres;

--
-- TOC entry 15692 (class 0 OID 0)
-- Dependencies: 866
-- Name: TABLE recipe_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recipe_type IS 'Тип рецепта для региональных Author:Kulikovskiy';


--
-- TOC entry 15693 (class 0 OID 0)
-- Dependencies: 866
-- Name: COLUMN recipe_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_type.oid IS 'Код';


--
-- TOC entry 15694 (class 0 OID 0)
-- Dependencies: 866
-- Name: COLUMN recipe_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recipe_type.name IS 'Название';


--
-- TOC entry 867 (class 1259 OID 21359)
-- Dependencies: 14
-- Name: recordtypein; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recordtypein (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.recordtypein OWNER TO postgres;

--
-- TOC entry 15695 (class 0 OID 0)
-- Dependencies: 867
-- Name: TABLE recordtypein; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recordtypein IS 'тип записи в
Принят
Переведён
';


--
-- TOC entry 15696 (class 0 OID 0)
-- Dependencies: 867
-- Name: COLUMN recordtypein.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypein.oid IS 'oid';


--
-- TOC entry 15697 (class 0 OID 0)
-- Dependencies: 867
-- Name: COLUMN recordtypein.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypein.id IS 'id';


--
-- TOC entry 15698 (class 0 OID 0)
-- Dependencies: 867
-- Name: COLUMN recordtypein.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypein.name IS 'name';


--
-- TOC entry 868 (class 1259 OID 21362)
-- Dependencies: 14
-- Name: recordtypeout; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE recordtypeout (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.recordtypeout OWNER TO postgres;

--
-- TOC entry 15699 (class 0 OID 0)
-- Dependencies: 868
-- Name: TABLE recordtypeout; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE recordtypeout IS 'Тип записи из
Переведён
Уволен в соответствии с ТК
Уволился по собственному желанию
Окончание трудового договора
';


--
-- TOC entry 15700 (class 0 OID 0)
-- Dependencies: 868
-- Name: COLUMN recordtypeout.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypeout.oid IS 'oid';


--
-- TOC entry 15701 (class 0 OID 0)
-- Dependencies: 868
-- Name: COLUMN recordtypeout.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypeout.id IS 'id';


--
-- TOC entry 15702 (class 0 OID 0)
-- Dependencies: 868
-- Name: COLUMN recordtypeout.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN recordtypeout.name IS 'name';


--
-- TOC entry 869 (class 1259 OID 21365)
-- Dependencies: 14
-- Name: referrals; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE referrals (
    oid character(36) NOT NULL,
    people_oid character(36),
    issue_dt date,
    cure_type_oid character(36)
);


ALTER TABLE mir.referrals OWNER TO postgres;

--
-- TOC entry 15703 (class 0 OID 0)
-- Dependencies: 869
-- Name: TABLE referrals; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE referrals IS 'Выданные направления.  Author: Blazko';


--
-- TOC entry 15704 (class 0 OID 0)
-- Dependencies: 869
-- Name: COLUMN referrals.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN referrals.oid IS 'id';


--
-- TOC entry 15705 (class 0 OID 0)
-- Dependencies: 869
-- Name: COLUMN referrals.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN referrals.people_oid IS 'people_oid';


--
-- TOC entry 15706 (class 0 OID 0)
-- Dependencies: 869
-- Name: COLUMN referrals.issue_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN referrals.issue_dt IS 'Дата выдачи';


--
-- TOC entry 15707 (class 0 OID 0)
-- Dependencies: 869
-- Name: COLUMN referrals.cure_type_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN referrals.cure_type_oid IS 'Вид лечения';


--
-- TOC entry 870 (class 1259 OID 21368)
-- Dependencies: 14
-- Name: regcert; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE regcert (
    id bigint NOT NULL,
    tradenameid bigint NOT NULL,
    latinnameid bigint NOT NULL,
    regnum character varying,
    regdate date,
    composition text,
    pharmaactions text,
    enddate date
);


ALTER TABLE mir.regcert OWNER TO postgres;

--
-- TOC entry 871 (class 1259 OID 21374)
-- Dependencies: 14
-- Name: regcert_extrafirms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE regcert_extrafirms (
    certid integer NOT NULL,
    firmid integer NOT NULL,
    number smallint
);


ALTER TABLE mir.regcert_extrafirms OWNER TO postgres;

--
-- TOC entry 15708 (class 0 OID 0)
-- Dependencies: 871
-- Name: TABLE regcert_extrafirms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE regcert_extrafirms IS 'Фирмы - регистраторы';


--
-- TOC entry 15709 (class 0 OID 0)
-- Dependencies: 871
-- Name: COLUMN regcert_extrafirms.certid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regcert_extrafirms.certid IS 'Код РУ - внешний ключ на таблицу "REGCERT"';


--
-- TOC entry 15710 (class 0 OID 0)
-- Dependencies: 871
-- Name: COLUMN regcert_extrafirms.firmid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regcert_extrafirms.firmid IS 'Код фирмы - внешний ключ на таблицу "FIRMS"';


--
-- TOC entry 15711 (class 0 OID 0)
-- Dependencies: 871
-- Name: COLUMN regcert_extrafirms.number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regcert_extrafirms.number IS 'Порядковый номер';


--
-- TOC entry 872 (class 1259 OID 21377)
-- Dependencies: 14
-- Name: regime; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE regime (
    oid character(36) NOT NULL,
    id integer,
    name character varying(255)
);


ALTER TABLE mir.regime OWNER TO postgres;

--
-- TOC entry 15712 (class 0 OID 0)
-- Dependencies: 872
-- Name: TABLE regime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE regime IS 'Режим работы

Работающий на постоянной работе
Работающий на временной работе
Работающий на сезонной работе
Работающий по срочному трудовому договору
Неработающий
Безработный
Безработный, зарегистрированный в органах службы занятости
';


--
-- TOC entry 15713 (class 0 OID 0)
-- Dependencies: 872
-- Name: COLUMN regime.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regime.oid IS 'oid';


--
-- TOC entry 15714 (class 0 OID 0)
-- Dependencies: 872
-- Name: COLUMN regime.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regime.id IS 'id';


--
-- TOC entry 15715 (class 0 OID 0)
-- Dependencies: 872
-- Name: COLUMN regime.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regime.name IS 'name';


--
-- TOC entry 873 (class 1259 OID 21380)
-- Dependencies: 6772 14
-- Name: region_geo; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW region_geo AS
    SELECT s.oid, s.fc_prefix, h.name FROM hcategory h, tkladrspr s WHERE ((s.oid = h.oid) AND (s.fk_level = (1)::numeric));


ALTER TABLE mir.region_geo OWNER TO postgres;

--
-- TOC entry 15716 (class 0 OID 0)
-- Dependencies: 873
-- Name: VIEW region_geo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW region_geo IS 'REGION_GEO';


--
-- TOC entry 874 (class 1259 OID 21384)
-- Dependencies: 14
-- Name: registers; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registers (
    oid character(36),
    name character varying(255),
    template character varying(255),
    comment character varying(255),
    attribute character varying(255),
    execfunction character varying(255)
);


ALTER TABLE mir.registers OWNER TO postgres;

--
-- TOC entry 15717 (class 0 OID 0)
-- Dependencies: 874
-- Name: TABLE registers; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registers IS 'registers';


--
-- TOC entry 15718 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.oid IS 'oid';


--
-- TOC entry 15719 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.name IS 'name';


--
-- TOC entry 15720 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.template IS 'имя печатной формы';


--
-- TOC entry 15721 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.comment IS 'Комментарий';


--
-- TOC entry 15722 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.attribute; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.attribute IS 'Атрибут используется как ID ссылки';


--
-- TOC entry 15723 (class 0 OID 0)
-- Dependencies: 874
-- Name: COLUMN registers.execfunction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registers.execfunction IS 'имя клиентской ф-ции котор будет вызванна перед загрузкой отчета';


--
-- TOC entry 875 (class 1259 OID 21390)
-- Dependencies: 7316 7317 14
-- Name: registr_ill_diagnoses; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registr_ill_diagnoses (
    oid character(36) NOT NULL,
    mkb_10 character(36) NOT NULL,
    creator character(36) NOT NULL,
    create_date date DEFAULT ('now'::text)::date,
    group_in boolean DEFAULT false
);


ALTER TABLE mir.registr_ill_diagnoses OWNER TO postgres;

--
-- TOC entry 15724 (class 0 OID 0)
-- Dependencies: 875
-- Name: TABLE registr_ill_diagnoses; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registr_ill_diagnoses IS 'registr_ill_diagnoses';


--
-- TOC entry 15725 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN registr_ill_diagnoses.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_diagnoses.oid IS 'идентификатор';


--
-- TOC entry 15726 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN registr_ill_diagnoses.mkb_10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_diagnoses.mkb_10 IS 'идентификатор МКБ 10';


--
-- TOC entry 15727 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN registr_ill_diagnoses.creator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_diagnoses.creator IS 'Пользователь, добавивший диагноз';


--
-- TOC entry 15728 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN registr_ill_diagnoses.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_diagnoses.create_date IS 'Дата добавления';


--
-- TOC entry 15729 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN registr_ill_diagnoses.group_in; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_diagnoses.group_in IS 'Отображать ли в комбобоксе';


--
-- TOC entry 876 (class 1259 OID 21395)
-- Dependencies: 7318 14
-- Name: registr_ill_pacients; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registr_ill_pacients (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    registr_ill_diagnoses character(36),
    mdoc_id character(36),
    date_on date,
    date_end date,
    sysdate date DEFAULT ('now'::text)::date,
    sysuser character(36) NOT NULL
);


ALTER TABLE mir.registr_ill_pacients OWNER TO postgres;

--
-- TOC entry 15730 (class 0 OID 0)
-- Dependencies: 876
-- Name: TABLE registr_ill_pacients; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registr_ill_pacients IS 'registr_ill_pacients';


--
-- TOC entry 15731 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.oid IS 'идентификатор';


--
-- TOC entry 15732 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.people IS 'идентификатор пациента';


--
-- TOC entry 15733 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.registr_ill_diagnoses; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.registr_ill_diagnoses IS 'идентификатор диагноза социально значимого заболевания';


--
-- TOC entry 15734 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.mdoc_id IS 'идентификатор мед. карты';


--
-- TOC entry 15735 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.date_on; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.date_on IS 'дата постановки на учёт';


--
-- TOC entry 15736 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.date_end IS 'дата снятия на учёт';


--
-- TOC entry 15737 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.sysdate IS 'дата последнего изменения';


--
-- TOC entry 15738 (class 0 OID 0)
-- Dependencies: 876
-- Name: COLUMN registr_ill_pacients.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_ill_pacients.sysuser IS 'идентификатор пользователя';


--
-- TOC entry 877 (class 1259 OID 21399)
-- Dependencies: 7319 7320 14
-- Name: registr_nosology_diagnoses; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registr_nosology_diagnoses (
    oid character(36) NOT NULL,
    mkb_10 character(36) NOT NULL,
    creator character(36) NOT NULL,
    create_date date DEFAULT ('now'::text)::date,
    group_in boolean DEFAULT false,
    code character varying(10),
    name character varying(255),
    level character varying(100),
    organization character varying(255)
);


ALTER TABLE mir.registr_nosology_diagnoses OWNER TO postgres;

--
-- TOC entry 15739 (class 0 OID 0)
-- Dependencies: 877
-- Name: TABLE registr_nosology_diagnoses; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registr_nosology_diagnoses IS 'registr_nosology_diagnoses';


--
-- TOC entry 15740 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.oid IS 'идентификатор';


--
-- TOC entry 15741 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.mkb_10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.mkb_10 IS 'идентификатор МКБ 10';


--
-- TOC entry 15742 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.creator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.creator IS 'Пользователь, добавивший диагноз';


--
-- TOC entry 15743 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.create_date IS 'Дата добавления';


--
-- TOC entry 15744 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.group_in; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.group_in IS 'Отображать ли в комбобоксе';


--
-- TOC entry 15745 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.code IS 'код нозологической группы';


--
-- TOC entry 15746 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.name IS 'наименование нозологической группы';


--
-- TOC entry 15747 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.level; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.level IS 'уровень';


--
-- TOC entry 15748 (class 0 OID 0)
-- Dependencies: 877
-- Name: COLUMN registr_nosology_diagnoses.organization; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_diagnoses.organization IS 'медицинская организация';


--
-- TOC entry 878 (class 1259 OID 21407)
-- Dependencies: 7321 14
-- Name: registr_nosology_pacients; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registr_nosology_pacients (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    registr_nosology_diagnoses character(36),
    mdoc_id character(36),
    date_on date,
    date_end date,
    sysdate date DEFAULT ('now'::text)::date,
    sysuser character(36) NOT NULL
);


ALTER TABLE mir.registr_nosology_pacients OWNER TO postgres;

--
-- TOC entry 15749 (class 0 OID 0)
-- Dependencies: 878
-- Name: TABLE registr_nosology_pacients; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registr_nosology_pacients IS 'registr_nosology_pacients';


--
-- TOC entry 15750 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.oid IS 'идентификатор';


--
-- TOC entry 15751 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.people IS 'идентификатор пациента';


--
-- TOC entry 15752 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.registr_nosology_diagnoses; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.registr_nosology_diagnoses IS 'идентификатор диагноза социально значимого заболевания';


--
-- TOC entry 15753 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.mdoc_id IS 'идентификатор мед. карты';


--
-- TOC entry 15754 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.date_on; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.date_on IS 'дата постановки на учёт';


--
-- TOC entry 15755 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.date_end IS 'дата снятия на учёт';


--
-- TOC entry 15756 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.sysdate IS 'дата последнего изменения';


--
-- TOC entry 15757 (class 0 OID 0)
-- Dependencies: 878
-- Name: COLUMN registr_nosology_pacients.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registr_nosology_pacients.sysuser IS 'идентификатор пользователя';


--
-- TOC entry 879 (class 1259 OID 21411)
-- Dependencies: 7322 14
-- Name: registration_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registration_profile (
    oid character(36) NOT NULL,
    profilename character varying(256) DEFAULT NULL::character varying NOT NULL,
    role_name character varying(100),
    post_name character varying(100),
    is_lpu character varying(1)
);


ALTER TABLE mir.registration_profile OWNER TO postgres;

--
-- TOC entry 15758 (class 0 OID 0)
-- Dependencies: 879
-- Name: COLUMN registration_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registration_profile.oid IS 'ID';


--
-- TOC entry 15759 (class 0 OID 0)
-- Dependencies: 879
-- Name: COLUMN registration_profile.profilename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registration_profile.profilename IS 'наименование профиля';


--
-- TOC entry 880 (class 1259 OID 21415)
-- Dependencies: 14
-- Name: registwindow; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registwindow (
    oid character(36) NOT NULL,
    name character varying(255),
    name2 character varying(255),
    show numeric(1,0),
    status integer,
    lastonlinedatetime timestamp(0) without time zone
);


ALTER TABLE mir.registwindow OWNER TO postgres;

--
-- TOC entry 15760 (class 0 OID 0)
-- Dependencies: 880
-- Name: TABLE registwindow; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registwindow IS 'Окна регистратуры';


--
-- TOC entry 15761 (class 0 OID 0)
-- Dependencies: 880
-- Name: COLUMN registwindow.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow.oid IS 'oid';


--
-- TOC entry 15762 (class 0 OID 0)
-- Dependencies: 880
-- Name: COLUMN registwindow.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow.name IS 'name';


--
-- TOC entry 15763 (class 0 OID 0)
-- Dependencies: 880
-- Name: COLUMN registwindow.lastonlinedatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow.lastonlinedatetime IS 'Последние серверные дата и время нахождения окна в online-режиме';


--
-- TOC entry 881 (class 1259 OID 21421)
-- Dependencies: 14
-- Name: registwindow_linetype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE registwindow_linetype (
    oid character(36) NOT NULL,
    registrywindow character(36) NOT NULL,
    linetype character(36) NOT NULL
);


ALTER TABLE mir.registwindow_linetype OWNER TO postgres;

--
-- TOC entry 15764 (class 0 OID 0)
-- Dependencies: 881
-- Name: TABLE registwindow_linetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE registwindow_linetype IS 'Таблица, задающая соответствия обслуживаемых очередей окнам регистратуры';


--
-- TOC entry 15765 (class 0 OID 0)
-- Dependencies: 881
-- Name: COLUMN registwindow_linetype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow_linetype.oid IS 'OID соответствия';


--
-- TOC entry 15766 (class 0 OID 0)
-- Dependencies: 881
-- Name: COLUMN registwindow_linetype.registrywindow; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow_linetype.registrywindow IS 'OID окна регистратуры';


--
-- TOC entry 15767 (class 0 OID 0)
-- Dependencies: 881
-- Name: COLUMN registwindow_linetype.linetype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN registwindow_linetype.linetype IS 'OID типа очереди';


--
-- TOC entry 882 (class 1259 OID 21424)
-- Dependencies: 14
-- Name: regplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE regplace (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.regplace OWNER TO postgres;

--
-- TOC entry 15768 (class 0 OID 0)
-- Dependencies: 882
-- Name: TABLE regplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE regplace IS 'Региональная принадлежность. Не классификатор. Author: A.Nakorjakov';


--
-- TOC entry 15769 (class 0 OID 0)
-- Dependencies: 882
-- Name: COLUMN regplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regplace.oid IS 'ID';


--
-- TOC entry 15770 (class 0 OID 0)
-- Dependencies: 882
-- Name: COLUMN regplace.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN regplace.name IS 'Региональная принадлежность';


--
-- TOC entry 883 (class 1259 OID 21427)
-- Dependencies: 6773 14
-- Name: repform12_1; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW repform12_1 AS
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((SELECT 'Всего'::text AS name, '1.0'::text AS namestr, 'A00-T98'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend UNION ALL SELECT 'в том числе: некоторые инфекционные и паразитарные болезни'::text AS name, '2.0'::text AS namestr, 'A00-B99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них:кишечные инфекции'::text AS name, '2.1'::text AS namestr, 'A00-A09'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'вирусный гепатит'::text AS name, '2.2'::text AS namestr, 'B15-B19'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'новообразования'::text AS name, '3.0'::text AS namestr, 'C00-D48'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: злокачественные новообразования'::text AS name, '3.1'::text AS namestr, 'C00-C97'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни крови, кроветворных органов и отдельные нарушения, вовлекающие иммунный механизм'::text AS name, '4.0'::text AS namestr, 'D50-D89'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: анемия'::text AS name, '4.1'::text AS namestr, 'D50-D64'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нарушения свертываемости крови'::text AS name, '4.2'::text AS namestr, 'D65-D68'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: диссеминированное внутрисосудистое свертывание крови (синдром дефибринации)'::text AS name, '4.2.1'::text AS namestr, 'D65'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'гемофилия'::text AS name, '4.2.2'::text AS namestr, 'D66-D67,D68.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'отдельные нарушения, вовлекающие иммунный механизм'::text AS name, '4.3'::text AS namestr, 'D80-D89'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни эндокринной системы, расстройства питания и нарушения обмена веществ'::text AS name, '5.0'::text AS namestr, 'E00-E90'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: болезни щитовидной железы'::text AS name, '5.1'::text AS namestr, 'E00-E07'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: гипотиреоз'::text AS name, '5.1.1'::text AS namestr, 'E01.8,E02,E03'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'тиреотоксикоз  (гипертиреоз)'::text AS name, '5.1.2'::text AS namestr, 'E05'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'сахарный диабет'::text AS name, '5.2'::text AS namestr, 'E10-E14'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: инсулинзависимый сахарный диабет'::text AS name, '5.2.1'::text AS namestr, 'E10'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'инсулиннезависимый  сахарный диабет'::text AS name, '5.2.2'::text AS namestr, 'E11'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'гиперфункция гипофиза'::text AS name, '5.3'::text AS namestr, 'E22'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'гипофизарный нанизм'::text AS name, '5.4'::text AS namestr, 'E23.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'несахарный диабет'::text AS name, '5.5'::text AS namestr, 'E23.2'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'адреногенитальные расстройства'::text AS name, '5.6'::text AS namestr, 'E25'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'дисфункция яичников'::text AS name, '5.7'::text AS namestr, 'E28'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'дисфункция яичек'::text AS name, '5.8'::text AS namestr, 'E29'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'ожирение'::text AS name, '5.9'::text AS namestr, 'E66'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'фенилкетонурия'::text AS name, '5.10'::text AS namestr, 'E70.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нарушения обмена галактозы (галактоземия)'::text AS name, '5.11'::text AS namestr, 'E74.2'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезнь Гоше'::text AS name, '5.12'::text AS namestr, 'E75.2'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нарушения обмена гликозамино-гликанов (мукополисахаридоз)'::text AS name, '5.13'::text AS namestr, 'E76'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'муковисцидоз'::text AS name, '5.14'::text AS namestr, 'E84.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'психические расстройства и расстройства поведения'::text AS name, '6.0'::text AS namestr, 'F00-F99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: психические расстройства и расстройства поведения, связанные с употреблением психоактивных веществ'::text AS name, '6.1'::text AS namestr, 'F10 - F19'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни нервной системы'::text AS name, '7.0'::text AS namestr, 'G00-G98'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: воспалительные болезни центральной нервной системы'::text AS name, '7.1'::text AS namestr, 'G00,G03,G04,G06'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'системные атрофии, поражающие преимущественно нервную систему'::text AS name, '7.2'::text AS namestr, 'G10-G12'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'экстрапирамидные и другие двигательные нарушения'::text AS name, '7.3'::text AS namestr, 'G20,G21,G23-G25'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: болезнь Паркинсона'::text AS name, '7.3.1'::text AS namestr, 'G20'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другие экстрапирамидные и двигательные нарушения'::text AS name, '7.3.2'::text AS namestr, 'G25'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другие дегенеративные болезни нервной системы'::text AS name, '7.4'::text AS namestr, 'G31'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'демиелинизирующие болезни центральной  нервной системы'::text AS name, '7.5'::text AS namestr, 'G35-G37'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них:  рассеянный склероз'::text AS name, '7.5.1'::text AS namestr, 'G35'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'эпизодические и пароксизмальные расстройства'::text AS name, '7.6'::text AS namestr, 'G40-G47'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: эпилепсия,  эпилептический статус'::text AS name, '7.6.1'::text AS namestr, 'G40-G41'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'преходящие транзиторные церебральные ишемические приступы (атаки) и родственные синдромы'::text AS name, '7.6.2'::text AS namestr, 'G45'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни периферической нервной системы'::text AS name, '7.7'::text AS namestr, 'G50-G72'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: мышечная дистрофия  Дюшенна'::text AS name, '7.7.1'::text AS namestr, 'G71.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'церебральный паралич и другие паралитические синдромы'::text AS name, '7.8'::text AS namestr, 'G80-G83'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: детский церебральный  паралич'::text AS name, '7.8.1'::text AS namestr, 'G80'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни глаза и его придаточного аппарата'::text AS name, '8.0'::text AS namestr, 'H00-H59'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: катаракта'::text AS name, '8.1'::text AS namestr, 'H26-H27'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'неврит зрительного нерва'::text AS name, '8.2'::text AS namestr, 'H46'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни мышц глаза, нарушения содружественного движения глаз, аккомодации и рефракции'::text AS name, '8.3'::text AS namestr, 'H49-H52'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: гиперметропия'::text AS name, '8.3.1'::text AS namestr, 'H52.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'миопия'::text AS name, '8.3.2'::text AS namestr, 'H52.1'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'астигматизм'::text AS name, '8.3.3'::text AS namestr, 'H52.2'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'слепота и пониженное зрение'::text AS name, '8.4'::text AS namestr, 'H54'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них:  слепота обоих глаз'::text AS name, '8.4.1'::text AS namestr, 'H54.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни уха и сосцевидного отростка'::text AS name, '9.0'::text AS namestr, 'H60-H95'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: болезни наружного уха'::text AS name, '9.1'::text AS namestr, 'H60-H62'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни среднего уха и сосцевидного отростка'::text AS name, '9.2'::text AS namestr, 'H65-H75'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: острый отит'::text AS name, '9.2.1'::text AS namestr, 'H65.0,H65.1,H66.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'хронический отит'::text AS name, '9.2.2'::text AS namestr, 'H65.2-H65.9,H66.1-H66.4,H66.9'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни слуховой(евстахиевой) трубы'::text AS name, '9.2.3'::text AS namestr, 'H68-H69'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'перфорация барабанной перепонки'::text AS name, '9.2.4'::text AS namestr, 'H72'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другие болезни среднего уха и сосцевидного отростка'::text AS name, '9.2.5'::text AS namestr, 'H74'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни внутреннего уха'::text AS name, '9.3'::text AS namestr, 'H80-H83'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: отосклероз'::text AS name, '9.3.1'::text AS namestr, 'H80'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезнь Меньера'::text AS name, '9.3.2'::text AS namestr, 'H81.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'кондуктивная и нейросенсорная потеря слуха'::text AS name, '9.4'::text AS namestr, 'H90'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: кондуктивная потеря слуха двусторонняя'::text AS name, '9.4.1'::text AS namestr, 'H90.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нейросенсорная потеря  слуха двусторонняя'::text AS name, '9.4.2'::text AS namestr, 'H90.3'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни системы кровообращения'::text AS name, '10.0'::text AS namestr, 'I00-I99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: острая ревматическая лихорадка'::text AS name, '10.1'::text AS namestr, 'I00-I02'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'хронические ревматические болезни сердца'::text AS name, '10.2'::text AS namestr, 'I05-I09'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: ревматические пороки клапанов'::text AS name, '10.2.1'::text AS namestr, 'I05-I08'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни, характеризующиеся повышенным кровяным давлением'::text AS name, '10.3'::text AS namestr, 'I10-I13'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: эссенциальная гипертензия'::text AS name, '10.3.1'::text AS namestr, 'I10'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другие болезни сердца'::text AS name, '10.4'::text AS namestr, 'I30-I52'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: эндокардит, миокардит'::text AS name, '10.4.1'::text AS namestr, 'I33,I40'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'кардиомиопатия'::text AS name, '10.4.2'::text AS namestr, 'I42'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'предсердно-желудочковая  (атриовентрикулярная) блокада и блокада левой ножки пучка (Гиса) и другие нарушения проводимости'::text AS name, '10.4.3'::text AS namestr, 'I44-I45'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нарушения сердечного ритма'::text AS name, '10.4.4'::text AS namestr, 'I47-I49'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'цереброваскулярные болезни'::text AS name, '10.5'::text AS namestr, 'I60-I67'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни органов дыхания'::text AS name, '11.0'::text AS namestr, 'J00-J98'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них:острый ларингит и трахеит'::text AS name, '11.1'::text AS namestr, 'J04'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'острый обструктивный ларингит (круп) и эпиглоттит'::text AS name, '11.2'::text AS namestr, 'J05'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'пневмония'::text AS name, '11.3'::text AS namestr, 'J12-J16, J18'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'аллергический ринит (поллиноз)'::text AS name, '11.4'::text AS namestr, 'J30.1'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'хронический фарингит, назофрингит, ринит, синусит'::text AS name, '11.5'::text AS namestr, 'J31-J32'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'хронические болезни миндалин и аденоидов, перитонзиллярный абсцесс'::text AS name, '11.6'::text AS namestr, 'J35-J36'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'хронический ларингит'::text AS name, '11.7'::text AS namestr, 'J37.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни голосовых складок и гортани'::text AS name, '11.8'::text AS namestr, 'J38'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'бронхит хронический и неуточненный, эмфизема'::text AS name, '11.9'::text AS namestr, 'J40-J43'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другая хроническая обструктивная легочная, бронхоэктатическая болезнь'::text AS name, '11.10'::text AS namestr, 'J44,J47'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'астма, астматический статус'::text AS name, '11.11'::text AS namestr, 'J45-J46'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни легкого, вызванные внешними агентами'::text AS name, '11.12'::text AS namestr, 'J60-J70'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'интерстициальные,гнойные легочные болезни, другие болезни плевры'::text AS name, '11.13'::text AS namestr, 'J84-J94'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни органов пищеварения'::text AS name, '12.0'::text AS namestr, 'K00-K92'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: язвенная болезнь желудка и 12-перстной кишки'::text AS name, '12.1'::text AS namestr, 'K25-K26'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'гастрит и дуоденит'::text AS name, '12.2'::text AS namestr, 'K29'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'функциональные  расстройства желудка'::text AS name, '12.3'::text AS namestr, 'K30-K31'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'неинфекционный энтерит и колит'::text AS name, '12.4'::text AS namestr, 'K50-K52'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни печени'::text AS name, '12.5'::text AS namestr, 'K70-K76'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни желчного пузыря, желчевыводящих путей'::text AS name, '12.6'::text AS namestr, 'K80-K83'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни поджелудочной железы'::text AS name, '12.7'::text AS namestr, 'K85-K86'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни кожи и подкожной клетчатки'::text AS name, '13.0'::text AS namestr, 'L00-L99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: атопический дерматит'::text AS name, '13.1'::text AS namestr, 'L20'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'контактный дерматит'::text AS name, '13.2'::text AS namestr, 'L23-L25'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'дерматит (экзема)'::text AS name, '13.3'::text AS namestr, 'L30.9'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'псориаз'::text AS name, '13.4'::text AS namestr, 'L40'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них:  псориаз артропатический'::text AS name, '13.4.1'::text AS namestr, 'L40.5'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'лишай красный плоский'::text AS name, '13.5'::text AS namestr, 'L43'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'дискоидная красная волчанка'::text AS name, '13.6'::text AS namestr, 'L93.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'локализованная склеродермия'::text AS name, '13.7'::text AS namestr, 'L94.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни костно-мышечной системы и соединительной ткани'::text AS name, '14.0'::text AS namestr, 'M00-M99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: артропатии'::text AS name, '14.1'::text AS namestr, 'M00-M25'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: реактивные артропатии'::text AS name, '14.1.1'::text AS namestr, 'M02'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'ревматоидный артрит(серопозитивный и серонегативный)'::text AS name, '14.1.2'::text AS namestr, 'M05-M06'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'юношеский (ювенальный) артрит'::text AS name, '14.1.3'::text AS namestr, 'M08'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'системные поражения соединительной ткани'::text AS name, '14.2'::text AS namestr, 'M30-M35'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'деформирующие дорсопатии'::text AS name, '14.3'::text AS namestr, 'M40-M43'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'анкилозирующий спондилит'::text AS name, '14.4'::text AS namestr, 'M45'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'дорсалгия'::text AS name, '14.5'::text AS namestr, 'M54'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни мягких тканей'::text AS name, '14.6'::text AS namestr, 'M60-M79'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'остеопатии и хондропатии'::text AS name, '14.7'::text AS namestr, 'M80-M94'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'болезни мочеполовой системы'::text AS name, '15.0'::text AS namestr, 'N00-N99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: гломерулярные, тубулоинтерстициальные болезни почек, другие болезни почки и мочеточника'::text AS name, '15.1'::text AS namestr, 'N00-N15,N25-N28'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'почечная недостаточность'::text AS name, '15.2'::text AS namestr, 'N17-N19'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'мочекаменная болезнь'::text AS name, '15.3'::text AS namestr, ' N20-N21,N23'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'другие болезни мочевой системы'::text AS name, '15.4'::text AS namestr, 'N30-N32,N34-N36,N39'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'сальпингит и оофорит'::text AS name, '15.5'::text AS namestr, 'N70'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'расстройства менструаций'::text AS name, '15.6'::text AS namestr, 'N91-N94'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'беременность, роды и послеродовой период'::text AS name, '16.0'::text AS namestr, 'O00-O99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'отдельные состояния,возникающие в перинатальном периоде'::text AS name, '17.0'::text AS namestr, 'P00-P96'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'врожденные аномалии (пороки развития), деформации и хромосомные нарушения'::text AS name, '18.0'::text AS namestr, 'Q00-Q99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'из них: врожденные аномалии нервной системы'::text AS name, '18.1'::text AS namestr, 'Q00-Q07'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'врожденные аномалии системы кровообращения'::text AS name, '18.2'::text AS namestr, 'Q20-Q28'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'врожденные аномалии тела и шейки матки, другие врожденные аномалии женских половых органов'::text AS name, '18.3'::text AS namestr, 'Q50-Q52'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'неопределенность пола и псевдогермафродитизм'::text AS name, '18.4'::text AS namestr, 'Q56'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'врожденный ихтиоз'::text AS name, '18.5'::text AS namestr, 'Q80'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'нейрофиброматоз'::text AS name, '18.6'::text AS namestr, 'Q85.0'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'синдром Дауна'::text AS name, '18.7'::text AS namestr, 'Q90'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'симптомы, признаки и отклонения от нормы, выявленные при клинических и лабораторных исследованиях, не классифицированные в других рубриках'::text AS name, '19.0'::text AS namestr, 'R00-R99'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend) UNION ALL SELECT 'травмы, отравления и некоторые другие последствия воздействия внешних причин'::text AS name, '20.0'::text AS namestr, 'S00-T98'::text AS codemkb, ' '::text AS alls, ' '::text AS allfirst, ' '::text AS yearend;


ALTER TABLE mir.repform12_1 OWNER TO postgres;

--
-- TOC entry 15771 (class 0 OID 0)
-- Dependencies: 883
-- Name: VIEW repform12_1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW repform12_1 IS 'REPFORM12_1';


--
-- TOC entry 884 (class 1259 OID 21432)
-- Dependencies: 14
-- Name: report_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE report_group (
    oid character(36) NOT NULL,
    name character varying(255),
    parent character(36)
);


ALTER TABLE mir.report_group OWNER TO postgres;

--
-- TOC entry 15772 (class 0 OID 0)
-- Dependencies: 884
-- Name: TABLE report_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE report_group IS 'папки шаблонов пользовательских отчетов  (created by Ponomaremko S.)';


--
-- TOC entry 15773 (class 0 OID 0)
-- Dependencies: 884
-- Name: COLUMN report_group.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_group.oid IS 'oid';


--
-- TOC entry 15774 (class 0 OID 0)
-- Dependencies: 884
-- Name: COLUMN report_group.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_group.name IS 'name';


--
-- TOC entry 15775 (class 0 OID 0)
-- Dependencies: 884
-- Name: COLUMN report_group.parent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_group.parent IS 'parent';


--
-- TOC entry 885 (class 1259 OID 21435)
-- Dependencies: 14
-- Name: report_parameter; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE report_parameter (
    report_template character(36) NOT NULL,
    param_datatype character(36) NOT NULL
);


ALTER TABLE mir.report_parameter OWNER TO postgres;

--
-- TOC entry 15776 (class 0 OID 0)
-- Dependencies: 885
-- Name: TABLE report_parameter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE report_parameter IS 'параметры SQL запрослов для шаблонов пользовательских отчетов  (created by Ponomaremko S.)';


--
-- TOC entry 15777 (class 0 OID 0)
-- Dependencies: 885
-- Name: COLUMN report_parameter.report_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_parameter.report_template IS 'report_template';


--
-- TOC entry 15778 (class 0 OID 0)
-- Dependencies: 885
-- Name: COLUMN report_parameter.param_datatype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_parameter.param_datatype IS 'param_datatype';


--
-- TOC entry 886 (class 1259 OID 21438)
-- Dependencies: 7323 7324 7325 14
-- Name: report_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE report_template (
    oid character(36) NOT NULL,
    name character varying(255),
    filename character varying(255) NOT NULL,
    filebody text,
    createdate timestamp without time zone DEFAULT now(),
    createuser character varying(255),
    occupied numeric(1,0) DEFAULT 0,
    occupied_user character varying(255),
    occupied_date timestamp without time zone,
    occupied_host character varying(255),
    CONSTRAINT "ck_report_template$occupied" CHECK (((occupied IS NULL) OR ((occupied >= (0)::numeric) AND (occupied <= (1)::numeric))))
);


ALTER TABLE mir.report_template OWNER TO postgres;

--
-- TOC entry 15779 (class 0 OID 0)
-- Dependencies: 886
-- Name: TABLE report_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE report_template IS 'шаблоны пользовательских отчетов  (created by Ponomaremko S.)';


--
-- TOC entry 15780 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.oid IS 'oid';


--
-- TOC entry 15781 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.name IS 'Наименование';


--
-- TOC entry 15782 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.filename IS 'Имя файла';


--
-- TOC entry 15783 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.filebody; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.filebody IS 'сам файл';


--
-- TOC entry 15784 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.createdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.createdate IS 'createdate';


--
-- TOC entry 15785 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.createuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.createuser IS 'createuser';


--
-- TOC entry 15786 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.occupied; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.occupied IS 'файл занят';


--
-- TOC entry 15787 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.occupied_user; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.occupied_user IS 'кем занят';


--
-- TOC entry 15788 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.occupied_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.occupied_date IS 'когда занят';


--
-- TOC entry 15789 (class 0 OID 0)
-- Dependencies: 886
-- Name: COLUMN report_template.occupied_host; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template.occupied_host IS 'занят на компе';


--
-- TOC entry 887 (class 1259 OID 21447)
-- Dependencies: 14
-- Name: report_template_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE report_template_group (
    report_group character(36) NOT NULL,
    report_template character(36) NOT NULL
);


ALTER TABLE mir.report_template_group OWNER TO postgres;

--
-- TOC entry 15790 (class 0 OID 0)
-- Dependencies: 887
-- Name: TABLE report_template_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE report_template_group IS 'связь папки с отчетом (многие-ко-многим) (created by Ponomarenio S.)';


--
-- TOC entry 15791 (class 0 OID 0)
-- Dependencies: 887
-- Name: COLUMN report_template_group.report_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template_group.report_group IS 'report_group';


--
-- TOC entry 15792 (class 0 OID 0)
-- Dependencies: 887
-- Name: COLUMN report_template_group.report_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN report_template_group.report_template IS 'report_template';


--
-- TOC entry 888 (class 1259 OID 21450)
-- Dependencies: 14
-- Name: response_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE response_people (
    oid character(36) NOT NULL,
    lastname character varying(100),
    firstname character varying(100),
    middlename character varying(100),
    telephone character varying(100),
    fax character varying(100),
    email character varying(100),
    datepostbegin timestamp without time zone,
    datepostend timestamp without time zone,
    lpu character(36),
    post character(36) NOT NULL
);


ALTER TABLE mir.response_people OWNER TO postgres;

--
-- TOC entry 15793 (class 0 OID 0)
-- Dependencies: 888
-- Name: TABLE response_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE response_people IS 'Ответственные лица (руководители)';


--
-- TOC entry 15794 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.oid IS 'oid';


--
-- TOC entry 15795 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.lastname IS 'lastname';


--
-- TOC entry 15796 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.firstname IS 'firstname';


--
-- TOC entry 15797 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.middlename IS 'middlename';


--
-- TOC entry 15798 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.telephone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.telephone IS 'telephone';


--
-- TOC entry 15799 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.fax; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.fax IS 'fax';


--
-- TOC entry 15800 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.email IS 'email';


--
-- TOC entry 15801 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.datepostbegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.datepostbegin IS 'дата назначения на должность';


--
-- TOC entry 15802 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.datepostend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.datepostend IS 'дата снятия с должности';


--
-- TOC entry 15803 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.lpu IS 'lpu';


--
-- TOC entry 15804 (class 0 OID 0)
-- Dependencies: 888
-- Name: COLUMN response_people.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people.post IS 'post';


--
-- TOC entry 889 (class 1259 OID 21456)
-- Dependencies: 7326 14
-- Name: response_people_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE response_people_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    lastname character varying(100),
    firstname character varying(100),
    middlename character varying(100),
    telephone character varying(100),
    fax character varying(100),
    email character varying(100),
    datepostbegin timestamp without time zone,
    datepostend timestamp without time zone,
    post character(36),
    lpu character(36)
);


ALTER TABLE mir.response_people_history OWNER TO postgres;

--
-- TOC entry 15805 (class 0 OID 0)
-- Dependencies: 889
-- Name: TABLE response_people_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE response_people_history IS 'Ответственные лица (руководители)';


--
-- TOC entry 15806 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.hid IS 'hid';


--
-- TOC entry 15807 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.h_date IS 'h_date';


--
-- TOC entry 15808 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.h_date_end IS 'h_date_end';


--
-- TOC entry 15809 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.sysdate IS 'sysdate';


--
-- TOC entry 15810 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.oid IS 'oid';


--
-- TOC entry 15811 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.lastname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.lastname IS 'lastname';


--
-- TOC entry 15812 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.firstname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.firstname IS 'firstname';


--
-- TOC entry 15813 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.middlename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.middlename IS 'middlename';


--
-- TOC entry 15814 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.telephone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.telephone IS 'telephone';


--
-- TOC entry 15815 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.fax; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.fax IS 'fax';


--
-- TOC entry 15816 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.email IS 'email';


--
-- TOC entry 15817 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.datepostbegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.datepostbegin IS 'дата назначения на должность';


--
-- TOC entry 15818 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.datepostend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.datepostend IS 'дата снятия с должности';


--
-- TOC entry 15819 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.post IS 'post';


--
-- TOC entry 15820 (class 0 OID 0)
-- Dependencies: 889
-- Name: COLUMN response_people_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN response_people_history.lpu IS 'lpu';


--
-- TOC entry 890 (class 1259 OID 21463)
-- Dependencies: 14
-- Name: right; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE "right" (
    oid character(36) NOT NULL,
    name character varying(255),
    rem character varying(255)
);


ALTER TABLE mir."right" OWNER TO postgres;

--
-- TOC entry 15821 (class 0 OID 0)
-- Dependencies: 890
-- Name: TABLE "right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE "right" IS 'Таблица прав';


--
-- TOC entry 15822 (class 0 OID 0)
-- Dependencies: 890
-- Name: COLUMN "right".oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "right".oid IS 'oid';


--
-- TOC entry 15823 (class 0 OID 0)
-- Dependencies: 890
-- Name: COLUMN "right".name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "right".name IS 'название';


--
-- TOC entry 15824 (class 0 OID 0)
-- Dependencies: 890
-- Name: COLUMN "right".rem; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN "right".rem IS 'комментарий';


--
-- TOC entry 891 (class 1259 OID 21469)
-- Dependencies: 14
-- Name: risk_factors_diabetes_second_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE risk_factors_diabetes_second_type (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.risk_factors_diabetes_second_type OWNER TO postgres;

--
-- TOC entry 15825 (class 0 OID 0)
-- Dependencies: 891
-- Name: TABLE risk_factors_diabetes_second_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE risk_factors_diabetes_second_type IS 'Факторы риска сахарного диабета 2 типа (справочник)';


--
-- TOC entry 15826 (class 0 OID 0)
-- Dependencies: 891
-- Name: COLUMN risk_factors_diabetes_second_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_diabetes_second_type.oid IS 'Primary идентификатор';


--
-- TOC entry 15827 (class 0 OID 0)
-- Dependencies: 891
-- Name: COLUMN risk_factors_diabetes_second_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_diabetes_second_type.name IS 'Текущее значение названия';


--
-- TOC entry 892 (class 1259 OID 21472)
-- Dependencies: 14
-- Name: risk_factors_diabetes_second_type_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE risk_factors_diabetes_second_type_people (
    oid character(36) NOT NULL,
    risk_factor_diabetes_second_type character(36) NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.risk_factors_diabetes_second_type_people OWNER TO postgres;

--
-- TOC entry 15828 (class 0 OID 0)
-- Dependencies: 892
-- Name: COLUMN risk_factors_diabetes_second_type_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_diabetes_second_type_people.oid IS 'Primary идентификатор';


--
-- TOC entry 15829 (class 0 OID 0)
-- Dependencies: 892
-- Name: COLUMN risk_factors_diabetes_second_type_people.risk_factor_diabetes_second_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_diabetes_second_type_people.risk_factor_diabetes_second_type IS 'Фактор риска сахарного диабета 2 типа';


--
-- TOC entry 15830 (class 0 OID 0)
-- Dependencies: 892
-- Name: COLUMN risk_factors_diabetes_second_type_people.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_diabetes_second_type_people.people IS 'Пациент';


--
-- TOC entry 893 (class 1259 OID 21475)
-- Dependencies: 14
-- Name: risk_factors_ibs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE risk_factors_ibs (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.risk_factors_ibs OWNER TO postgres;

--
-- TOC entry 15831 (class 0 OID 0)
-- Dependencies: 893
-- Name: TABLE risk_factors_ibs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE risk_factors_ibs IS 'Факторы риска ИБС (справочник)';


--
-- TOC entry 15832 (class 0 OID 0)
-- Dependencies: 893
-- Name: COLUMN risk_factors_ibs.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_ibs.oid IS 'Primary идентификатор';


--
-- TOC entry 15833 (class 0 OID 0)
-- Dependencies: 893
-- Name: COLUMN risk_factors_ibs.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_ibs.name IS 'Текущее значение названия';


--
-- TOC entry 894 (class 1259 OID 21478)
-- Dependencies: 14
-- Name: risk_factors_ibs_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE risk_factors_ibs_people (
    oid character(36) NOT NULL,
    risk_factor_ibs character(36) NOT NULL,
    people character(36) NOT NULL
);


ALTER TABLE mir.risk_factors_ibs_people OWNER TO postgres;

--
-- TOC entry 15834 (class 0 OID 0)
-- Dependencies: 894
-- Name: TABLE risk_factors_ibs_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE risk_factors_ibs_people IS 'Таблица соответствия пациентов факторам риска ИБС';


--
-- TOC entry 15835 (class 0 OID 0)
-- Dependencies: 894
-- Name: COLUMN risk_factors_ibs_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_ibs_people.oid IS 'Primary идентификатор';


--
-- TOC entry 15836 (class 0 OID 0)
-- Dependencies: 894
-- Name: COLUMN risk_factors_ibs_people.risk_factor_ibs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_ibs_people.risk_factor_ibs IS 'Фактор риска ИБС';


--
-- TOC entry 15837 (class 0 OID 0)
-- Dependencies: 894
-- Name: COLUMN risk_factors_ibs_people.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN risk_factors_ibs_people.people IS 'Пациент';


--
-- TOC entry 895 (class 1259 OID 21481)
-- Dependencies: 14
-- Name: rlsregion; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE rlsregion (
    oid character(36) NOT NULL,
    reg_id character varying(255),
    z_id character varying(255),
    name character varying(255)
);


ALTER TABLE mir.rlsregion OWNER TO postgres;

--
-- TOC entry 15838 (class 0 OID 0)
-- Dependencies: 895
-- Name: TABLE rlsregion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE rlsregion IS 'RLSREGION';


--
-- TOC entry 15839 (class 0 OID 0)
-- Dependencies: 895
-- Name: COLUMN rlsregion.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rlsregion.oid IS 'oid';


--
-- TOC entry 15840 (class 0 OID 0)
-- Dependencies: 895
-- Name: COLUMN rlsregion.reg_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rlsregion.reg_id IS 'reg_id';


--
-- TOC entry 15841 (class 0 OID 0)
-- Dependencies: 895
-- Name: COLUMN rlsregion.z_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rlsregion.z_id IS 'z_id';


--
-- TOC entry 15842 (class 0 OID 0)
-- Dependencies: 895
-- Name: COLUMN rlsregion.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rlsregion.name IS 'name';


--
-- TOC entry 896 (class 1259 OID 21487)
-- Dependencies: 14
-- Name: role; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE role (
    oid character(36) NOT NULL,
    name character varying(255),
    rem character varying(255)
);


ALTER TABLE mir.role OWNER TO postgres;

--
-- TOC entry 15843 (class 0 OID 0)
-- Dependencies: 896
-- Name: TABLE role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE role IS 'Таблица ролей';


--
-- TOC entry 15844 (class 0 OID 0)
-- Dependencies: 896
-- Name: COLUMN role.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN role.oid IS 'oid';


--
-- TOC entry 15845 (class 0 OID 0)
-- Dependencies: 896
-- Name: COLUMN role.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN role.name IS 'название';


--
-- TOC entry 15846 (class 0 OID 0)
-- Dependencies: 896
-- Name: COLUMN role.rem; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN role.rem IS 'комментарий';


--
-- TOC entry 897 (class 1259 OID 21493)
-- Dependencies: 14
-- Name: role_right; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE role_right (
    "right" character(36),
    role character(36)
);


ALTER TABLE mir.role_right OWNER TO postgres;

--
-- TOC entry 15847 (class 0 OID 0)
-- Dependencies: 897
-- Name: TABLE role_right; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE role_right IS 'Права роли';


--
-- TOC entry 15848 (class 0 OID 0)
-- Dependencies: 897
-- Name: COLUMN role_right."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN role_right."right" IS 'право';


--
-- TOC entry 15849 (class 0 OID 0)
-- Dependencies: 897
-- Name: COLUMN role_right.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN role_right.role IS 'роль';


--
-- TOC entry 898 (class 1259 OID 21496)
-- Dependencies: 14
-- Name: rolebase; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE rolebase (
    oid character(36) NOT NULL,
    name character varying(100),
    syn character varying(100)
);


ALTER TABLE mir.rolebase OWNER TO postgres;

--
-- TOC entry 15850 (class 0 OID 0)
-- Dependencies: 898
-- Name: TABLE rolebase; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE rolebase IS 'Роли';


--
-- TOC entry 15851 (class 0 OID 0)
-- Dependencies: 898
-- Name: COLUMN rolebase.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rolebase.oid IS 'oid';


--
-- TOC entry 15852 (class 0 OID 0)
-- Dependencies: 898
-- Name: COLUMN rolebase.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rolebase.name IS 'name';


--
-- TOC entry 15853 (class 0 OID 0)
-- Dependencies: 898
-- Name: COLUMN rolebase.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rolebase.syn IS 'syn';


--
-- TOC entry 899 (class 1259 OID 21499)
-- Dependencies: 14
-- Name: rolesdemo; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE rolesdemo (
    oid character varying(36),
    oid_role character varying(36)
);


ALTER TABLE mir.rolesdemo OWNER TO postgres;

--
-- TOC entry 15854 (class 0 OID 0)
-- Dependencies: 899
-- Name: TABLE rolesdemo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE rolesdemo IS 'разрешенные роли  при демо входе';


--
-- TOC entry 15855 (class 0 OID 0)
-- Dependencies: 899
-- Name: COLUMN rolesdemo.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rolesdemo.oid IS 'oid';


--
-- TOC entry 15856 (class 0 OID 0)
-- Dependencies: 899
-- Name: COLUMN rolesdemo.oid_role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rolesdemo.oid_role IS 'oid_role';


--
-- TOC entry 900 (class 1259 OID 21502)
-- Dependencies: 7327 14
-- Name: room_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE room_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36),
    otdel character(36),
    building character(36),
    room_name character varying(255),
    identifier character varying(255),
    room_type character(36),
    rooms integer,
    primary_seats integer,
    additional_seats integer,
    area numeric(15,2),
    window_view character varying(255)
);


ALTER TABLE mir.room_history OWNER TO postgres;

--
-- TOC entry 15857 (class 0 OID 0)
-- Dependencies: 900
-- Name: TABLE room_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE room_history IS 'номер/палата2';


--
-- TOC entry 15858 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.hid IS 'hid';


--
-- TOC entry 15859 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.h_date IS 'h_date';


--
-- TOC entry 15860 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.h_date_end IS 'h_date_end';


--
-- TOC entry 15861 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.sysdate IS 'sysdate';


--
-- TOC entry 15862 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.oid IS 'oid';


--
-- TOC entry 15863 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.otdel IS 'otdel';


--
-- TOC entry 15864 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.building; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.building IS 'building';


--
-- TOC entry 15865 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.room_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.room_name IS 'наименование';


--
-- TOC entry 15866 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.identifier; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.identifier IS 'идентификатор';


--
-- TOC entry 15867 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.room_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.room_type IS 'тип палаты';


--
-- TOC entry 15868 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.rooms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.rooms IS 'количество комнат';


--
-- TOC entry 15869 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.primary_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.primary_seats IS 'количество основных мест';


--
-- TOC entry 15870 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.additional_seats; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.additional_seats IS 'количество дополнительных мест';


--
-- TOC entry 15871 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.area IS 'площадь (m2)';


--
-- TOC entry 15872 (class 0 OID 0)
-- Dependencies: 900
-- Name: COLUMN room_history.window_view; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_history.window_view IS 'вид из окна';


--
-- TOC entry 901 (class 1259 OID 21509)
-- Dependencies: 7328 7329 14
-- Name: room_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE room_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_room_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.room_type OWNER TO postgres;

--
-- TOC entry 15873 (class 0 OID 0)
-- Dependencies: 901
-- Name: TABLE room_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE room_type IS 'тип палаты';


--
-- TOC entry 15874 (class 0 OID 0)
-- Dependencies: 901
-- Name: COLUMN room_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_type.oid IS 'oid';


--
-- TOC entry 15875 (class 0 OID 0)
-- Dependencies: 901
-- Name: COLUMN room_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_type.name IS 'name';


--
-- TOC entry 15876 (class 0 OID 0)
-- Dependencies: 901
-- Name: COLUMN room_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 15877 (class 0 OID 0)
-- Dependencies: 901
-- Name: COLUMN room_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 15878 (class 0 OID 0)
-- Dependencies: 901
-- Name: COLUMN room_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN room_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 902 (class 1259 OID 21517)
-- Dependencies: 14
-- Name: rw_accidentnotification_condition; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE rw_accidentnotification_condition (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.rw_accidentnotification_condition OWNER TO postgres;

--
-- TOC entry 15879 (class 0 OID 0)
-- Dependencies: 902
-- Name: TABLE rw_accidentnotification_condition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE rw_accidentnotification_condition IS 'Справочник тяжести состояния в уведомлении о ДТП';


--
-- TOC entry 15880 (class 0 OID 0)
-- Dependencies: 902
-- Name: COLUMN rw_accidentnotification_condition.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_condition.oid IS 'OID';


--
-- TOC entry 15881 (class 0 OID 0)
-- Dependencies: 902
-- Name: COLUMN rw_accidentnotification_condition.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_condition.name IS 'Наименование';


--
-- TOC entry 903 (class 1259 OID 21520)
-- Dependencies: 14
-- Name: rw_accidentnotification_tmpl; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE rw_accidentnotification_tmpl (
    oid character(36) NOT NULL,
    name character varying(255),
    text text,
    lpu character(36)
);


ALTER TABLE mir.rw_accidentnotification_tmpl OWNER TO postgres;

--
-- TOC entry 15882 (class 0 OID 0)
-- Dependencies: 903
-- Name: TABLE rw_accidentnotification_tmpl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE rw_accidentnotification_tmpl IS 'Шаблонов уведомлений о ДТП';


--
-- TOC entry 15883 (class 0 OID 0)
-- Dependencies: 903
-- Name: COLUMN rw_accidentnotification_tmpl.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_tmpl.oid IS 'OID';


--
-- TOC entry 15884 (class 0 OID 0)
-- Dependencies: 903
-- Name: COLUMN rw_accidentnotification_tmpl.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_tmpl.name IS 'Наименование';


--
-- TOC entry 15885 (class 0 OID 0)
-- Dependencies: 903
-- Name: COLUMN rw_accidentnotification_tmpl.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_tmpl.text IS 'Текст шаблона';


--
-- TOC entry 15886 (class 0 OID 0)
-- Dependencies: 903
-- Name: COLUMN rw_accidentnotification_tmpl.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN rw_accidentnotification_tmpl.lpu IS 'Id ЛПУ к которому относится шаблон';


--
-- TOC entry 904 (class 1259 OID 21526)
-- Dependencies: 7330 7331 7332 7333 7334 7335 14
-- Name: sanatorium; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sanatorium (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    resort numeric(1,0) DEFAULT 0,
    resort_status character varying(255),
    resort_document character varying(255),
    resort_number character varying(255),
    resort_date date,
    mountain numeric(1,0) DEFAULT 0,
    mountain_document character varying(255),
    mountain_number character varying(255),
    mountain_date date,
    resort_type numeric(1,0) DEFAULT 0,
    resort_type_oid character(36),
    resort_type_document character varying(255),
    resort_type_number character varying(255),
    resort_type_date date,
    CONSTRAINT "ck_sanatorium$mountain" CHECK (((mountain IS NULL) OR ((mountain >= (0)::numeric) AND (mountain <= (1)::numeric)))),
    CONSTRAINT "ck_sanatorium$resort" CHECK (((resort IS NULL) OR ((resort >= (0)::numeric) AND (resort <= (1)::numeric)))),
    CONSTRAINT "ck_sanatorium$resort_type" CHECK (((resort_type IS NULL) OR ((resort_type >= (0)::numeric) AND (resort_type <= (1)::numeric))))
);


ALTER TABLE mir.sanatorium OWNER TO postgres;

--
-- TOC entry 15887 (class 0 OID 0)
-- Dependencies: 904
-- Name: TABLE sanatorium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sanatorium IS 'санаторно-курортные характеристики';


--
-- TOC entry 15888 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.oid IS 'oid';


--
-- TOC entry 15889 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.otdel IS 'otdel';


--
-- TOC entry 15890 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort IS 'наличие курорта';


--
-- TOC entry 15891 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_status IS 'статус';


--
-- TOC entry 15892 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_document IS 'документ статуса';


--
-- TOC entry 15893 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_number IS 'номер статуса';


--
-- TOC entry 15894 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_date IS 'дата статуса';


--
-- TOC entry 15895 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.mountain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.mountain IS 'наличие округа горно-санитарной охраны ( гсо)';


--
-- TOC entry 15896 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.mountain_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.mountain_document IS 'документ гсо';


--
-- TOC entry 15897 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.mountain_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.mountain_number IS 'номер  гсо';


--
-- TOC entry 15898 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.mountain_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.mountain_date IS 'дата  гсо';


--
-- TOC entry 15899 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_type IS 'наличие типа курорта';


--
-- TOC entry 15900 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_type_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_type_oid IS 'тип курорта';


--
-- TOC entry 15901 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_type_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_type_document IS 'документ типа курорта';


--
-- TOC entry 15902 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_type_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_type_number IS 'номер типа курорта';


--
-- TOC entry 15903 (class 0 OID 0)
-- Dependencies: 904
-- Name: COLUMN sanatorium.resort_type_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium.resort_type_date IS 'дата типа курорта';


--
-- TOC entry 905 (class 1259 OID 21538)
-- Dependencies: 7336 7337 7338 7339 7340 7341 7342 14
-- Name: sanatorium_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sanatorium_history (
    hid character(36) NOT NULL,
    h_date date NOT NULL,
    h_date_end date,
    sysdate timestamp without time zone DEFAULT now(),
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    resort numeric(1,0) DEFAULT 0,
    resort_status character varying(255),
    resort_document character varying(255),
    resort_number character varying(255),
    resort_date date,
    mountain numeric(1,0) DEFAULT 0,
    mountain_document character varying(255),
    mountain_number character varying(255),
    mountain_date date,
    resort_type numeric(1,0) DEFAULT 0,
    resort_type_oid character(36),
    resort_type_document character varying(255),
    resort_type_number character varying(255),
    resort_type_date date,
    CONSTRAINT "ck_sanatori$mountain" CHECK (((mountain IS NULL) OR ((mountain >= (0)::numeric) AND (mountain <= (1)::numeric)))),
    CONSTRAINT "ck_sanatori$resort" CHECK (((resort IS NULL) OR ((resort >= (0)::numeric) AND (resort <= (1)::numeric)))),
    CONSTRAINT "ck_sanatori$resort_type" CHECK (((resort_type IS NULL) OR ((resort_type >= (0)::numeric) AND (resort_type <= (1)::numeric))))
);


ALTER TABLE mir.sanatorium_history OWNER TO postgres;

--
-- TOC entry 15904 (class 0 OID 0)
-- Dependencies: 905
-- Name: TABLE sanatorium_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sanatorium_history IS 'санаторно-курортные характеристики историчность';


--
-- TOC entry 15905 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.hid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.hid IS 'hid';


--
-- TOC entry 15906 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.h_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.h_date IS 'h_date';


--
-- TOC entry 15907 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.h_date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.h_date_end IS 'h_date_end';


--
-- TOC entry 15908 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.sysdate IS 'sysdate';


--
-- TOC entry 15909 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.oid IS 'oid';


--
-- TOC entry 15910 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.otdel IS 'otdel';


--
-- TOC entry 15911 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort IS 'наличие курорта';


--
-- TOC entry 15912 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_status IS 'статус';


--
-- TOC entry 15913 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_document IS 'документ статуса';


--
-- TOC entry 15914 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_number IS 'номер статуса';


--
-- TOC entry 15915 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_date IS 'дата статуса';


--
-- TOC entry 15916 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.mountain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.mountain IS 'наличие округа горно-санитарной охраны ( гсо)';


--
-- TOC entry 15917 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.mountain_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.mountain_document IS 'документ гсо';


--
-- TOC entry 15918 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.mountain_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.mountain_number IS 'номер  гсо';


--
-- TOC entry 15919 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.mountain_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.mountain_date IS 'дата  гсо';


--
-- TOC entry 15920 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_type IS 'наличие типа курорта';


--
-- TOC entry 15921 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_type_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_type_oid IS 'тип курорта';


--
-- TOC entry 15922 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_type_document; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_type_document IS 'документ типа курорта';


--
-- TOC entry 15923 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_type_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_type_number IS 'номер типа курорта';


--
-- TOC entry 15924 (class 0 OID 0)
-- Dependencies: 905
-- Name: COLUMN sanatorium_history.resort_type_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_history.resort_type_date IS 'дата типа курорта';


--
-- TOC entry 906 (class 1259 OID 21551)
-- Dependencies: 7343 7344 14
-- Name: sanatorium_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sanatorium_type (
    oid character(36) NOT NULL,
    name character varying(255),
    name2 character varying(255),
    show numeric(1,0) DEFAULT 1,
    status integer,
    CONSTRAINT "ck_sanatorium_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.sanatorium_type OWNER TO postgres;

--
-- TOC entry 15925 (class 0 OID 0)
-- Dependencies: 906
-- Name: TABLE sanatorium_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sanatorium_type IS 'Типы курортов';


--
-- TOC entry 15926 (class 0 OID 0)
-- Dependencies: 906
-- Name: COLUMN sanatorium_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_type.oid IS 'oid';


--
-- TOC entry 15927 (class 0 OID 0)
-- Dependencies: 906
-- Name: COLUMN sanatorium_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_type.name IS 'name';


--
-- TOC entry 15928 (class 0 OID 0)
-- Dependencies: 906
-- Name: COLUMN sanatorium_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 15929 (class 0 OID 0)
-- Dependencies: 906
-- Name: COLUMN sanatorium_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 15930 (class 0 OID 0)
-- Dependencies: 906
-- Name: COLUMN sanatorium_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sanatorium_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 907 (class 1259 OID 21559)
-- Dependencies: 7345 7346 7347 14
-- Name: schedule; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule (
    oid character(36) NOT NULL,
    cabinet character(36),
    insite numeric(1,0),
    sysuser character(36),
    presctype character(36),
    people character(36),
    state numeric,
    isnapronly character(36),
    ticketnumber character varying(100),
    lpu character(36),
    isbron numeric(1,0),
    schedulecallstate numeric,
    schedulecallstatecomment character varying(100),
    updatepeopledate date,
    peoplescheduleplace numeric,
    schedulecallstatedate date,
    schedulecallstatesysuser character(36),
    extralinereason character varying(100),
    info character varying(100),
    yavkadt date,
    sysuseraddpeople character varying(36),
    paid character(36),
    starton timestamp(0) without time zone,
    endon timestamp(0) without time zone,
    otdel character(36),
    recorddatetime timestamp(0) without time zone,
    recordoperator character(36),
    blockdatetime timestamp(0) without time zone,
    blockoperator character(36),
    sotr character(36),
    maxvisitors integer DEFAULT 1 NOT NULL,
    financingtype numeric(1,0),
    napr_num character varying(100),
    sync numeric(1,0) DEFAULT 1 NOT NULL,
    CONSTRAINT "CK_SCHEDULE$SYNC" CHECK (((sync IS NULL) OR ((sync >= (0)::numeric) AND (sync <= (1)::numeric))))
);


ALTER TABLE mir.schedule OWNER TO postgres;

--
-- TOC entry 15931 (class 0 OID 0)
-- Dependencies: 907
-- Name: TABLE schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule IS 'SCHEDULE';


--
-- TOC entry 15932 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.oid IS 'oid';


--
-- TOC entry 15933 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.cabinet IS 'cabinet';


--
-- TOC entry 15934 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.insite; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.insite IS 'insite';


--
-- TOC entry 15935 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.sysuser IS 'sysuser';


--
-- TOC entry 15936 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.presctype IS 'presctype';


--
-- TOC entry 15937 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.people IS 'Пациент, записаный на прием. Если maxvisitors > 1 записывается первый, полный список записаных хранится в schedule_people';


--
-- TOC entry 15938 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.state IS '             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_FREE() then ''Свободно''
                             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_BRON() then ''Предв. запись''
                             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_DONE() then ''Выполнено''
                             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_USED() then ''Подтверждено''
                             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_LIVELINE() then ''Живая очередь''
                             when MIR.SCHEDULE_GET_CN_SCHEDULESTATE_EXTRALINE() then ''Без очереди''';


--
-- TOC entry 15939 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.isnapronly; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.isnapronly IS 'isnapronly';


--
-- TOC entry 15940 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.ticketnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.ticketnumber IS 'ticketnumber';


--
-- TOC entry 15941 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.lpu IS 'lpu';


--
-- TOC entry 15942 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.isbron; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.isbron IS 'isbron';


--
-- TOC entry 15943 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.schedulecallstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.schedulecallstate IS '  case s.schedulecallstate
                                 when 1 then ''Не ответил (''||to_char(s.schedulecallstatedate,''dd.mm.yyyy hh24:mi'')||'')''
                                 when 2 then ''Подтвердил (''||to_char(s.schedulecallstatedate,''dd.mm.yyyy hh24:mi'')||'')''
                                 else ''Не звонили''';


--
-- TOC entry 15944 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.schedulecallstatecomment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.schedulecallstatecomment IS 'schedulecallstatecomment';


--
-- TOC entry 15945 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.updatepeopledate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.updatepeopledate IS 'updatepeopledate';


--
-- TOC entry 15946 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.peoplescheduleplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.peoplescheduleplace IS 'peoplescheduleplace';


--
-- TOC entry 15947 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.schedulecallstatedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.schedulecallstatedate IS 'schedulecallstatedate';


--
-- TOC entry 15948 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.schedulecallstatesysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.schedulecallstatesysuser IS 'schedulecallstatesysuser';


--
-- TOC entry 15949 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.extralinereason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.extralinereason IS 'extralinereason';


--
-- TOC entry 15950 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.info IS 'info';


--
-- TOC entry 15951 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.yavkadt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.yavkadt IS 'yavkadt';


--
-- TOC entry 15952 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.sysuseraddpeople; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.sysuseraddpeople IS 'sysuseraddpeople';


--
-- TOC entry 15953 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.paid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.paid IS 'id платной услуги';


--
-- TOC entry 15954 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.starton IS 'starton';


--
-- TOC entry 15955 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.endon IS 'endon';


--
-- TOC entry 15956 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.recorddatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.recorddatetime IS 'Дата записи (избыточность, полная история изменения приемов точки расписания находится в таблице mir.schedule_log)';


--
-- TOC entry 15957 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.recordoperator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.recordoperator IS 'Оператор, записавший пациента на данный прием Дата записи (избыточность, полная история изменения приемов точки расписания находится в таблице mir.schedule_log)';


--
-- TOC entry 15958 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.blockdatetime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.blockdatetime IS 'Дата и время блокирования';


--
-- TOC entry 15959 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.blockoperator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.blockoperator IS 'Оператор, заблокировавший прием';


--
-- TOC entry 15960 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.sotr IS 'Сотрудник. (пришло на смену sysuser и presctype)';


--
-- TOC entry 15961 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.maxvisitors; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.maxvisitors IS 'Если больше 1 то искать пользователей в таблице schedule_people по schedule.oid';


--
-- TOC entry 15962 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.financingtype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.financingtype IS 'null - Не определено
0 - ОМС
1 - Бюджет';


--
-- TOC entry 15963 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.napr_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.napr_num IS 'номер направления';


--
-- TOC entry 15964 (class 0 OID 0)
-- Dependencies: 907
-- Name: COLUMN schedule.sync; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule.sync IS 'Флаг синхронизации с самозаписью';


--
-- TOC entry 908 (class 1259 OID 21568)
-- Dependencies: 14
-- Name: schedule_history; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_history (
    old_oid character(36) NOT NULL,
    new_oid character(36),
    cabinet character varying(100),
    sysuser character(36),
    presctype character(36),
    people character(36),
    state numeric,
    lpu character(36),
    starton date,
    action_sysuser character(36),
    action_id numeric,
    action_date date,
    note character varying(100)
);


ALTER TABLE mir.schedule_history OWNER TO postgres;

--
-- TOC entry 15965 (class 0 OID 0)
-- Dependencies: 908
-- Name: TABLE schedule_history; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_history IS 'schedule_history';


--
-- TOC entry 15966 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.old_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.old_oid IS 'old_oid';


--
-- TOC entry 15967 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.new_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.new_oid IS 'new_oid';


--
-- TOC entry 15968 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.cabinet IS 'cabinet';


--
-- TOC entry 15969 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.sysuser IS 'sysuser';


--
-- TOC entry 15970 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.presctype IS 'presctype';


--
-- TOC entry 15971 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.people IS 'people';


--
-- TOC entry 15972 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.state IS 'state';


--
-- TOC entry 15973 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.lpu IS 'lpu';


--
-- TOC entry 15974 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.starton IS 'starton';


--
-- TOC entry 15975 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.action_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.action_sysuser IS 'action_sysuser';


--
-- TOC entry 15976 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.action_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.action_id IS 'action_id';


--
-- TOC entry 15977 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.action_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.action_date IS 'action_date';


--
-- TOC entry 15978 (class 0 OID 0)
-- Dependencies: 908
-- Name: COLUMN schedule_history.note; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_history.note IS 'note';


--
-- TOC entry 909 (class 1259 OID 21574)
-- Dependencies: 6774 14
-- Name: schedule_info; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW schedule_info AS
    SELECT s.oid, s.cabinet, cabinet.cabinet_name, s.insite, s.sysuser, s.presctype, s.people, s.state, s.isnapronly, s.ticketnumber, s.lpu, s.isbron, s.schedulecallstate, s.schedulecallstatecomment, s.updatepeopledate, s.peoplescheduleplace, s.schedulecallstatedate, s.schedulecallstatesysuser, s.extralinereason, s.info, s.yavkadt, s.sysuseraddpeople, s.paid, s.starton, s.endon, s.otdel, s.sotr FROM (schedule s LEFT JOIN cabinet cabinet ON ((cabinet.oid = s.cabinet)));


ALTER TABLE mir.schedule_info OWNER TO postgres;

--
-- TOC entry 910 (class 1259 OID 21579)
-- Dependencies: 6775 14
-- Name: schedule_info_old; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW schedule_info_old AS
    SELECT schedule.oid, schedule.cabinet, schedule.insite, schedule.sysuser, schedule.presctype, schedule.people, schedule.state, schedule.isnapronly, schedule.ticketnumber, schedule.lpu, schedule.isbron, schedule.schedulecallstate, schedule.schedulecallstatecomment, schedule.updatepeopledate, schedule.peoplescheduleplace, schedule.paid, schedule.schedulecallstatedate, schedule.schedulecallstatesysuser, schedule.extralinereason, schedule.info, event.allday, event.location, event.label, event.status, event.type, schedule.yavkadt, event.recurrenceinfoxml, event.optimisticlockfield, event.gcrecord FROM schedule, event WHERE ((event.oid = schedule.oid) AND (event.gcrecord IS NULL));


ALTER TABLE mir.schedule_info_old OWNER TO postgres;

--
-- TOC entry 15979 (class 0 OID 0)
-- Dependencies: 910
-- Name: VIEW schedule_info_old; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW schedule_info_old IS 'SCHEDULE_INFO_OLD';


--
-- TOC entry 911 (class 1259 OID 21584)
-- Dependencies: 14
-- Name: schedule_lock; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_lock (
    schedule character(36),
    lock_date date,
    oid character(36)
);


ALTER TABLE mir.schedule_lock OWNER TO postgres;

--
-- TOC entry 15980 (class 0 OID 0)
-- Dependencies: 911
-- Name: TABLE schedule_lock; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_lock IS 'SCHEDULE_LOCK';


--
-- TOC entry 15981 (class 0 OID 0)
-- Dependencies: 911
-- Name: COLUMN schedule_lock.schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_lock.schedule IS 'schedule';


--
-- TOC entry 15982 (class 0 OID 0)
-- Dependencies: 911
-- Name: COLUMN schedule_lock.lock_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_lock.lock_date IS 'lock_date';


--
-- TOC entry 15983 (class 0 OID 0)
-- Dependencies: 911
-- Name: COLUMN schedule_lock.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_lock.oid IS 'oid';


--
-- TOC entry 912 (class 1259 OID 21587)
-- Dependencies: 14
-- Name: schedule_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_log (
    oid character(36) NOT NULL,
    operator character(36),
    patient character(36),
    operation_date_time timestamp(0) without time zone NOT NULL,
    schedule character(36) NOT NULL,
    action integer NOT NULL,
    reason character varying(100),
    schedulefrom character varying(36)
);


ALTER TABLE mir.schedule_log OWNER TO postgres;

--
-- TOC entry 15984 (class 0 OID 0)
-- Dependencies: 912
-- Name: TABLE schedule_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_log IS 'Лог действий с точкой расписания';


--
-- TOC entry 15985 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.oid IS 'OID';


--
-- TOC entry 15986 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.operator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.operator IS 'Оператор, осуществивший действие с точкой расписания';


--
-- TOC entry 15987 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.patient; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.patient IS 'Пациент, который записывается или был записан на прием';


--
-- TOC entry 15988 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.operation_date_time; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.operation_date_time IS 'Дата и время осуществления действия';


--
-- TOC entry 15989 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.schedule IS 'Точка расписания';


--
-- TOC entry 15990 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.action IS 'Действие над точкой расписания_0_Отмена приема_1_Запись на прием_2_Перенос';


--
-- TOC entry 15991 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.reason IS 'Причина (отмены приема)';


--
-- TOC entry 15992 (class 0 OID 0)
-- Dependencies: 912
-- Name: COLUMN schedule_log.schedulefrom; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_log.schedulefrom IS 'Ячейка с которой пыл перенесен прием';


--
-- TOC entry 913 (class 1259 OID 21590)
-- Dependencies: 14
-- Name: schedule_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_people (
    schedule character(36) NOT NULL,
    people character(36) NOT NULL,
    oid character varying(36)
);


ALTER TABLE mir.schedule_people OWNER TO postgres;

--
-- TOC entry 15993 (class 0 OID 0)
-- Dependencies: 913
-- Name: TABLE schedule_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_people IS 'Связь пациентов и точек расписания, только для групповых точек';


--
-- TOC entry 15994 (class 0 OID 0)
-- Dependencies: 913
-- Name: COLUMN schedule_people.schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_people.schedule IS 'Точка расписания';


--
-- TOC entry 15995 (class 0 OID 0)
-- Dependencies: 913
-- Name: COLUMN schedule_people.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_people.people IS 'Пациент';


--
-- TOC entry 914 (class 1259 OID 21593)
-- Dependencies: 14
-- Name: schedule_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_template (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    otdel character(36) NOT NULL,
    name character varying(255),
    sotr character(36) NOT NULL
);


ALTER TABLE mir.schedule_template OWNER TO postgres;

--
-- TOC entry 15996 (class 0 OID 0)
-- Dependencies: 914
-- Name: TABLE schedule_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_template IS 'schedule_template';


--
-- TOC entry 15997 (class 0 OID 0)
-- Dependencies: 914
-- Name: COLUMN schedule_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template.oid IS 'oid';


--
-- TOC entry 15998 (class 0 OID 0)
-- Dependencies: 914
-- Name: COLUMN schedule_template.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template.sysuser IS 'sysuser';


--
-- TOC entry 15999 (class 0 OID 0)
-- Dependencies: 914
-- Name: COLUMN schedule_template.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template.otdel IS 'otdel';


--
-- TOC entry 16000 (class 0 OID 0)
-- Dependencies: 914
-- Name: COLUMN schedule_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template.name IS 'name';


--
-- TOC entry 16001 (class 0 OID 0)
-- Dependencies: 914
-- Name: COLUMN schedule_template.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template.sotr IS 'sotr';


--
-- TOC entry 915 (class 1259 OID 21596)
-- Dependencies: 7348 14
-- Name: schedule_template_detail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE schedule_template_detail (
    oid character(36) NOT NULL,
    template_oid character(36) NOT NULL,
    day numeric NOT NULL,
    presctype character(36) NOT NULL,
    state numeric NOT NULL,
    isbron numeric NOT NULL,
    insite numeric NOT NULL,
    cabinet character(36),
    isnapronly character(36) NOT NULL,
    infopac character varying(255),
    starton timestamp without time zone NOT NULL,
    endon timestamp without time zone NOT NULL,
    post character(36),
    maxvisitors integer DEFAULT 1 NOT NULL,
    financingtype numeric(1,0)
);


ALTER TABLE mir.schedule_template_detail OWNER TO postgres;

--
-- TOC entry 16002 (class 0 OID 0)
-- Dependencies: 915
-- Name: TABLE schedule_template_detail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE schedule_template_detail IS 'schedule_template_detail';


--
-- TOC entry 16003 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.oid IS 'oid';


--
-- TOC entry 16004 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.template_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.template_oid IS 'template_oid';


--
-- TOC entry 16005 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.day; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.day IS 'day';


--
-- TOC entry 16006 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.presctype IS 'presctype';


--
-- TOC entry 16007 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.state IS 'state';


--
-- TOC entry 16008 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.isbron; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.isbron IS 'isbron';


--
-- TOC entry 16009 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.insite; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.insite IS 'insite';


--
-- TOC entry 16010 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.cabinet IS 'cabinet';


--
-- TOC entry 16011 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.isnapronly; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.isnapronly IS 'isnapronly';


--
-- TOC entry 16012 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.infopac; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.infopac IS 'infopac';


--
-- TOC entry 16013 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.starton; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.starton IS 'starton';


--
-- TOC entry 16014 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.endon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.endon IS 'endon';


--
-- TOC entry 16015 (class 0 OID 0)
-- Dependencies: 915
-- Name: COLUMN schedule_template_detail.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN schedule_template_detail.post IS 'Должность';


--
-- TOC entry 916 (class 1259 OID 21603)
-- Dependencies: 14
-- Name: scheduleautomake; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE scheduleautomake (
    oid character(36) NOT NULL,
    sysuser character(36),
    isenable numeric(1,0),
    copyfor numeric,
    iscopyweek numeric(1,0)
);


ALTER TABLE mir.scheduleautomake OWNER TO postgres;

--
-- TOC entry 16016 (class 0 OID 0)
-- Dependencies: 916
-- Name: TABLE scheduleautomake; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE scheduleautomake IS 'SCHEDULEAUTOMAKE';


--
-- TOC entry 16017 (class 0 OID 0)
-- Dependencies: 916
-- Name: COLUMN scheduleautomake.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN scheduleautomake.oid IS 'oid';


--
-- TOC entry 16018 (class 0 OID 0)
-- Dependencies: 916
-- Name: COLUMN scheduleautomake.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN scheduleautomake.sysuser IS 'sysuser';


--
-- TOC entry 16019 (class 0 OID 0)
-- Dependencies: 916
-- Name: COLUMN scheduleautomake.isenable; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN scheduleautomake.isenable IS 'isenable';


--
-- TOC entry 16020 (class 0 OID 0)
-- Dependencies: 916
-- Name: COLUMN scheduleautomake.copyfor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN scheduleautomake.copyfor IS 'copyfor';


--
-- TOC entry 16021 (class 0 OID 0)
-- Dependencies: 916
-- Name: COLUMN scheduleautomake.iscopyweek; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN scheduleautomake.iscopyweek IS 'iscopyweek';


--
-- TOC entry 917 (class 1259 OID 21609)
-- Dependencies: 7349 7350 14
-- Name: screening; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE screening (
    oid character(36) NOT NULL,
    title character varying(255) NOT NULL,
    sex numeric(1,0) DEFAULT NULL::numeric,
    mandatory numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.screening OWNER TO postgres;

--
-- TOC entry 16022 (class 0 OID 0)
-- Dependencies: 917
-- Name: TABLE screening; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE screening IS 'Профилактические (скрининговые) обследования';


--
-- TOC entry 16023 (class 0 OID 0)
-- Dependencies: 917
-- Name: COLUMN screening.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening.oid IS 'Primary идентификатор';


--
-- TOC entry 16024 (class 0 OID 0)
-- Dependencies: 917
-- Name: COLUMN screening.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening.title IS 'Название скрининга';


--
-- TOC entry 16025 (class 0 OID 0)
-- Dependencies: 917
-- Name: COLUMN screening.sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening.sex IS 'Ограничение по полу (1 - женщины, 2 - мужчины, NULL - оба пола)';


--
-- TOC entry 16026 (class 0 OID 0)
-- Dependencies: 917
-- Name: COLUMN screening.mandatory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening.mandatory IS 'Является ли скрининг абсолютно обязательным (0 - нет, 1 - да)';


--
-- TOC entry 918 (class 1259 OID 21614)
-- Dependencies: 7351 14
-- Name: screening_presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE screening_presctype (
    oid character(36) NOT NULL,
    screening character(36) NOT NULL,
    presctype character(36) NOT NULL,
    begin_age integer DEFAULT 18 NOT NULL,
    end_age integer,
    period integer NOT NULL
);


ALTER TABLE mir.screening_presctype OWNER TO postgres;

--
-- TOC entry 16027 (class 0 OID 0)
-- Dependencies: 918
-- Name: TABLE screening_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE screening_presctype IS 'Таблица, задающая соответствие назначений скринингам';


--
-- TOC entry 16028 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.oid IS 'Primary идентификатор';


--
-- TOC entry 16029 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.screening; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.screening IS 'Скрининг, которому соответствует назначение';


--
-- TOC entry 16030 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.presctype IS 'Назначение скрининга';


--
-- TOC entry 16031 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.begin_age; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.begin_age IS 'Возраст, с которого начинается обследование';


--
-- TOC entry 16032 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.end_age; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.end_age IS 'Возраст, на котором обследование заканчивается, NULL соответствует отсутствию верхней границы';


--
-- TOC entry 16033 (class 0 OID 0)
-- Dependencies: 918
-- Name: COLUMN screening_presctype.period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype.period IS 'Периодичность (кол-во лет, значение 0 соответствует "Однократно")';


--
-- TOC entry 919 (class 1259 OID 21618)
-- Dependencies: 14
-- Name: screening_presctype_risk_fact_diab_second_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE screening_presctype_risk_fact_diab_second_type (
    oid character(36) NOT NULL,
    screening_presctype character(36) NOT NULL,
    risk_factor_diabet_second_type character(36) NOT NULL
);


ALTER TABLE mir.screening_presctype_risk_fact_diab_second_type OWNER TO postgres;

--
-- TOC entry 16034 (class 0 OID 0)
-- Dependencies: 919
-- Name: TABLE screening_presctype_risk_fact_diab_second_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE screening_presctype_risk_fact_diab_second_type IS 'Таблица соответствия назначений скринингов факторам риска диабета 2 типа';


--
-- TOC entry 16035 (class 0 OID 0)
-- Dependencies: 919
-- Name: COLUMN screening_presctype_risk_fact_diab_second_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_diab_second_type.oid IS 'Primary идентификатор';


--
-- TOC entry 16036 (class 0 OID 0)
-- Dependencies: 919
-- Name: COLUMN screening_presctype_risk_fact_diab_second_type.screening_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_diab_second_type.screening_presctype IS 'Назначение скрининга';


--
-- TOC entry 16037 (class 0 OID 0)
-- Dependencies: 919
-- Name: COLUMN screening_presctype_risk_fact_diab_second_type.risk_factor_diabet_second_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_diab_second_type.risk_factor_diabet_second_type IS 'Фактор риска диабета второго типа';


--
-- TOC entry 920 (class 1259 OID 21621)
-- Dependencies: 14
-- Name: screening_presctype_risk_fact_ibs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE screening_presctype_risk_fact_ibs (
    oid character(36) NOT NULL,
    screening_presctype character(36) NOT NULL,
    risk_factor_ibs character(36) NOT NULL
);


ALTER TABLE mir.screening_presctype_risk_fact_ibs OWNER TO postgres;

--
-- TOC entry 16038 (class 0 OID 0)
-- Dependencies: 920
-- Name: TABLE screening_presctype_risk_fact_ibs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE screening_presctype_risk_fact_ibs IS 'Таблица соответствия назначений скринингов факторам риска ИБС';


--
-- TOC entry 16039 (class 0 OID 0)
-- Dependencies: 920
-- Name: COLUMN screening_presctype_risk_fact_ibs.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_ibs.oid IS 'Primary идентификатор';


--
-- TOC entry 16040 (class 0 OID 0)
-- Dependencies: 920
-- Name: COLUMN screening_presctype_risk_fact_ibs.screening_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_ibs.screening_presctype IS 'Назначение скрининга';


--
-- TOC entry 16041 (class 0 OID 0)
-- Dependencies: 920
-- Name: COLUMN screening_presctype_risk_fact_ibs.risk_factor_ibs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN screening_presctype_risk_fact_ibs.risk_factor_ibs IS 'Фактор риска ИБС';


--
-- TOC entry 921 (class 1259 OID 21624)
-- Dependencies: 14
-- Name: service_bed_profile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_bed_profile (
    oid character(36) NOT NULL,
    service character(36) NOT NULL,
    bed_profile character(36) NOT NULL
);


ALTER TABLE mir.service_bed_profile OWNER TO postgres;

--
-- TOC entry 16042 (class 0 OID 0)
-- Dependencies: 921
-- Name: TABLE service_bed_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_bed_profile IS 'Связка услуг со справочником Профили коек';


--
-- TOC entry 16043 (class 0 OID 0)
-- Dependencies: 921
-- Name: COLUMN service_bed_profile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_bed_profile.oid IS 'oid';


--
-- TOC entry 16044 (class 0 OID 0)
-- Dependencies: 921
-- Name: COLUMN service_bed_profile.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_bed_profile.service IS 'service_id';


--
-- TOC entry 16045 (class 0 OID 0)
-- Dependencies: 921
-- Name: COLUMN service_bed_profile.bed_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_bed_profile.bed_profile IS 'bed_profile';


--
-- TOC entry 922 (class 1259 OID 21627)
-- Dependencies: 7352 7353 14
-- Name: service_group; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_group (
    oid character(36) NOT NULL,
    name character varying(100),
    foms_code integer,
    show_insurprogram numeric(1,0) DEFAULT 0,
    synonym character varying(100),
    CONSTRAINT "ck_service_group$show_insurprogram" CHECK (((show_insurprogram IS NULL) OR ((show_insurprogram >= (0)::numeric) AND (show_insurprogram <= (1)::numeric))))
);


ALTER TABLE mir.service_group OWNER TO postgres;

--
-- TOC entry 16046 (class 0 OID 0)
-- Dependencies: 922
-- Name: TABLE service_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_group IS 'Группы услуг (тип или раздел услуг)';


--
-- TOC entry 16047 (class 0 OID 0)
-- Dependencies: 922
-- Name: COLUMN service_group.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_group.oid IS 'oid';


--
-- TOC entry 16048 (class 0 OID 0)
-- Dependencies: 922
-- Name: COLUMN service_group.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_group.name IS 'name';


--
-- TOC entry 16049 (class 0 OID 0)
-- Dependencies: 922
-- Name: COLUMN service_group.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_group.foms_code IS 'код ФОМС';


--
-- TOC entry 16050 (class 0 OID 0)
-- Dependencies: 922
-- Name: COLUMN service_group.show_insurprogram; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_group.show_insurprogram IS 'показывать страховую программу';


--
-- TOC entry 16051 (class 0 OID 0)
-- Dependencies: 922
-- Name: COLUMN service_group.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_group.synonym IS 'синоним';


--
-- TOC entry 923 (class 1259 OID 21632)
-- Dependencies: 14
-- Name: service_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_lpu (
    oid character(36) NOT NULL,
    lpu character(36) NOT NULL,
    service character(36) NOT NULL
);


ALTER TABLE mir.service_lpu OWNER TO postgres;

--
-- TOC entry 16052 (class 0 OID 0)
-- Dependencies: 923
-- Name: TABLE service_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_lpu IS 'УСЛУГИ ЛПУ';


--
-- TOC entry 16053 (class 0 OID 0)
-- Dependencies: 923
-- Name: COLUMN service_lpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_lpu.oid IS 'ID';


--
-- TOC entry 16054 (class 0 OID 0)
-- Dependencies: 923
-- Name: COLUMN service_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_lpu.lpu IS 'ЛПУ';


--
-- TOC entry 16055 (class 0 OID 0)
-- Dependencies: 923
-- Name: COLUMN service_lpu.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_lpu.service IS 'УСЛУГА';


--
-- TOC entry 924 (class 1259 OID 21635)
-- Dependencies: 14
-- Name: service_mkb10; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_mkb10 (
    oid character(36) NOT NULL,
    service character(36) NOT NULL,
    mkb_10 character(36) NOT NULL
);


ALTER TABLE mir.service_mkb10 OWNER TO postgres;

--
-- TOC entry 16056 (class 0 OID 0)
-- Dependencies: 924
-- Name: TABLE service_mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_mkb10 IS 'Связка услуг со справочником диагнозов МКБ 10 для тарифов КСГ ( клинико-статистические группы)';


--
-- TOC entry 16057 (class 0 OID 0)
-- Dependencies: 924
-- Name: COLUMN service_mkb10.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_mkb10.oid IS 'oid';


--
-- TOC entry 16058 (class 0 OID 0)
-- Dependencies: 924
-- Name: COLUMN service_mkb10.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_mkb10.service IS 'service_id';


--
-- TOC entry 16059 (class 0 OID 0)
-- Dependencies: 924
-- Name: COLUMN service_mkb10.mkb_10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_mkb10.mkb_10 IS 'mkb_10';


--
-- TOC entry 925 (class 1259 OID 21638)
-- Dependencies: 14
-- Name: service_presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_presctype (
    oid character(36) NOT NULL,
    service character(36) NOT NULL,
    presctype character(36) NOT NULL,
    datebegin timestamp without time zone,
    dateend timestamp without time zone
);


ALTER TABLE mir.service_presctype OWNER TO postgres;

--
-- TOC entry 16060 (class 0 OID 0)
-- Dependencies: 925
-- Name: TABLE service_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_presctype IS 'Связка услуг со специальностями, по которым составляют расписание';


--
-- TOC entry 16061 (class 0 OID 0)
-- Dependencies: 925
-- Name: COLUMN service_presctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_presctype.oid IS 'oid';


--
-- TOC entry 16062 (class 0 OID 0)
-- Dependencies: 925
-- Name: COLUMN service_presctype.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_presctype.service IS 'service_id';


--
-- TOC entry 16063 (class 0 OID 0)
-- Dependencies: 925
-- Name: COLUMN service_presctype.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_presctype.presctype IS 'presctype';


--
-- TOC entry 16064 (class 0 OID 0)
-- Dependencies: 925
-- Name: COLUMN service_presctype.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_presctype.datebegin IS 'datebegin';


--
-- TOC entry 16065 (class 0 OID 0)
-- Dependencies: 925
-- Name: COLUMN service_presctype.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_presctype.dateend IS 'dateend';


--
-- TOC entry 926 (class 1259 OID 21641)
-- Dependencies: 14
-- Name: service_price_category; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_price_category (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.service_price_category OWNER TO postgres;

--
-- TOC entry 16066 (class 0 OID 0)
-- Dependencies: 926
-- Name: TABLE service_price_category; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_price_category IS 'Категория цены (взрослые, дети и пр.)';


--
-- TOC entry 16067 (class 0 OID 0)
-- Dependencies: 926
-- Name: COLUMN service_price_category.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price_category.oid IS 'ID';


--
-- TOC entry 16068 (class 0 OID 0)
-- Dependencies: 926
-- Name: COLUMN service_price_category.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_price_category.name IS 'Наименование';


--
-- TOC entry 927 (class 1259 OID 21644)
-- Dependencies: 7354 14
-- Name: service_required; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE service_required (
    id character(36) NOT NULL,
    presctype character(36),
    service character(36),
    lpu character(36),
    isrequired numeric DEFAULT 1 NOT NULL,
    comments character varying(255)
);


ALTER TABLE mir.service_required OWNER TO postgres;

--
-- TOC entry 16069 (class 0 OID 0)
-- Dependencies: 927
-- Name: TABLE service_required; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE service_required IS 'Стандарты для отправки заявок(обязательные исследования для специальностей)';


--
-- TOC entry 16070 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.id IS 'id';


--
-- TOC entry 16071 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.presctype IS 'Специальность, на которую подают заявку';


--
-- TOC entry 16072 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.service IS 'ID необходимой услуги';


--
-- TOC entry 16073 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.lpu IS 'ID ЛПУ';


--
-- TOC entry 16074 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.isrequired; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.isrequired IS 'ЯВЛЯЕТСЯ ОБЯЗАТЕЛЬНЫМ';


--
-- TOC entry 16075 (class 0 OID 0)
-- Dependencies: 927
-- Name: COLUMN service_required.comments; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN service_required.comments IS 'КОММЕНТАРИЙ';


--
-- TOC entry 928 (class 1259 OID 21651)
-- Dependencies: 7355 14
-- Name: services; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE services (
    oid character(36) NOT NULL,
    defaultname character varying(500) NOT NULL,
    service_group character(36),
    pay_type character(36),
    show numeric(1,0) DEFAULT 1,
    status integer,
    code character varying(100)
);


ALTER TABLE mir.services OWNER TO postgres;

--
-- TOC entry 16076 (class 0 OID 0)
-- Dependencies: 928
-- Name: TABLE services; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE services IS 'Список услуг';


--
-- TOC entry 16077 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.oid IS 'ID услуги';


--
-- TOC entry 16078 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.defaultname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.defaultname IS 'name';


--
-- TOC entry 16079 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.service_group; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.service_group IS 'Группы услуг (типы услуг)';


--
-- TOC entry 16080 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.pay_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.pay_type IS 'Типы оплаты (Тип полиса)';


--
-- TOC entry 16081 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16082 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 16083 (class 0 OID 0)
-- Dependencies: 928
-- Name: COLUMN services.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN services.code IS 'Полный код услуги';


--
-- TOC entry 929 (class 1259 OID 21658)
-- Dependencies: 7356 7357 14
-- Name: servplace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE servplace (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_servplace$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.servplace OWNER TO postgres;

--
-- TOC entry 16084 (class 0 OID 0)
-- Dependencies: 929
-- Name: TABLE servplace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE servplace IS 'Место обслуживания амбулаторных пациентов Author: A.Nakorjakov';


--
-- TOC entry 16085 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.oid IS 'SEQUENCE=[SQ_SERVPLACE]';


--
-- TOC entry 16086 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.name IS 'Название';


--
-- TOC entry 16087 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.foms_code IS 'код ФОМС';


--
-- TOC entry 16088 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16089 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16090 (class 0 OID 0)
-- Dependencies: 929
-- Name: COLUMN servplace.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN servplace.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 930 (class 1259 OID 21666)
-- Dependencies: 14
-- Name: settings; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE settings (
    oid character(36) NOT NULL,
    param character varying(100),
    valuepar character varying(100),
    description character varying(100),
    settingstate numeric(1,0),
    forall numeric
);


ALTER TABLE mir.settings OWNER TO postgres;

--
-- TOC entry 16091 (class 0 OID 0)
-- Dependencies: 930
-- Name: TABLE settings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE settings IS 'Настройки';


--
-- TOC entry 16092 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.oid IS 'oid';


--
-- TOC entry 16093 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.param; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.param IS 'param';


--
-- TOC entry 16094 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.valuepar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.valuepar IS 'valuepar';


--
-- TOC entry 16095 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.description IS 'description';


--
-- TOC entry 16096 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.settingstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.settingstate IS 'settingstate';


--
-- TOC entry 16097 (class 0 OID 0)
-- Dependencies: 930
-- Name: COLUMN settings.forall; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN settings.forall IS 'forall';


--
-- TOC entry 931 (class 1259 OID 21672)
-- Dependencies: 14
-- Name: sex; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sex (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    foms_code integer
);


ALTER TABLE mir.sex OWNER TO postgres;

--
-- TOC entry 16098 (class 0 OID 0)
-- Dependencies: 931
-- Name: TABLE sex; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sex IS 'Пол ';


--
-- TOC entry 16099 (class 0 OID 0)
-- Dependencies: 931
-- Name: COLUMN sex.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sex.id IS 'PK';


--
-- TOC entry 16100 (class 0 OID 0)
-- Dependencies: 931
-- Name: COLUMN sex.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sex.name IS 'Название';


--
-- TOC entry 16101 (class 0 OID 0)
-- Dependencies: 931
-- Name: COLUMN sex.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sex.foms_code IS 'код ФОМС';


--
-- TOC entry 932 (class 1259 OID 21675)
-- Dependencies: 7358 7359 7360 7361 7362 7363 7364 14
-- Name: sicklist; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist (
    id character(36) NOT NULL,
    parent_id character(36),
    open_dt date DEFAULT ('now'::text)::date,
    towork_dt date,
    reason_id character(36),
    mse_napr_dt date,
    mse_reg_dt date,
    mse_osvid_dt date,
    stac_begin_dt date,
    stac_end_dt date,
    num character varying(12),
    duplicate integer DEFAULT 0 NOT NULL,
    reason_change_id character(36),
    job character varying(255),
    jobmain integer DEFAULT 0 NOT NULL,
    jobsec integer DEFAULT 0 NOT NULL,
    jobservice integer DEFAULT 0 NOT NULL,
    date1 date,
    date2 date,
    permitnum character varying(255),
    sanatogrn character varying(255),
    careage1 integer,
    caremonth1 integer,
    link_id1 character(36),
    carefio1 character varying(255),
    careage2 integer,
    caremonth2 integer,
    link_id2 character(36),
    carefio2 character varying(255),
    pregment integer,
    regimen_id character(36),
    regimen_dt date,
    invalidgroup_id character(36),
    jobsecnum character varying(12),
    other_id character(36),
    other_dt date,
    reason_dop_id character(36),
    mkb10_oid character(36),
    ibnum character varying(255),
    nextlnnum character varying(12),
    visit_id character(36),
    people_id character(36) NOT NULL,
    sotr_id character(36),
    lpu character(36),
    status character(36),
    mdoc character(36),
    care integer DEFAULT 0 NOT NULL,
    parent_num character varying(12),
    parent_ext integer DEFAULT 0 NOT NULL,
    jobsec_id character(36),
    carepeople1 character(36),
    carepeople2 character(36)
);


ALTER TABLE mir.sicklist OWNER TO postgres;

--
-- TOC entry 16102 (class 0 OID 0)
-- Dependencies: 932
-- Name: TABLE sicklist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist IS 'Листки нетрудоспособности Author: Linnikov
Edit: Ognev';


--
-- TOC entry 16103 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.id IS 'SEQUENCE=[MIS.SQ_SICKLIST]';


--
-- TOC entry 16104 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.parent_id IS 'Листок, продолжением которого является данный листок [SICKLIST.ID]';


--
-- TOC entry 16105 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.open_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.open_dt IS 'Дата открытия листка';


--
-- TOC entry 16106 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.towork_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.towork_dt IS 'Приступить к труду с';


--
-- TOC entry 16107 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.reason_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.reason_id IS 'Причина нетрудоспособности [SICKLIST_REASON.ID]';


--
-- TOC entry 16108 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.mse_napr_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.mse_napr_dt IS 'Дата направления на МСЭ';


--
-- TOC entry 16109 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.mse_reg_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.mse_reg_dt IS 'Дата регистрации документов в МСЭ';


--
-- TOC entry 16110 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.mse_osvid_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.mse_osvid_dt IS 'Дата освидетельствования МСЭ';


--
-- TOC entry 16111 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.stac_begin_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.stac_begin_dt IS 'Дата начала пребывания в стационаре';


--
-- TOC entry 16112 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.stac_end_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.stac_end_dt IS 'Дата окончания пребывания в стационаре';


--
-- TOC entry 16113 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.num IS 'Номер бланка ЛН';


--
-- TOC entry 16114 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.duplicate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.duplicate IS 'дубликат? 0 - нет, 1 да';


--
-- TOC entry 16115 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.reason_change_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.reason_change_id IS 'причина нетрудоспособности код изменения SICKLIST_REASON_CHANGE.ID';


--
-- TOC entry 16116 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.job; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.job IS 'место работы наименование организации';


--
-- TOC entry 16117 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.jobmain; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.jobmain IS 'основное место работы? 0 - нет, 1 - да';


--
-- TOC entry 16118 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.jobsec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.jobsec IS 'работа по совместительству? 0 - нет, 1 - да.';


--
-- TOC entry 16119 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.jobservice; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.jobservice IS 'Состоит на учете в гусодарственных учреждениях службы занятости?
0 - нет, 1 - да';


--
-- TOC entry 16120 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.date1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.date1 IS 'дата 1';


--
-- TOC entry 16121 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.date2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.date2 IS 'дата 2';


--
-- TOC entry 16122 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.permitnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.permitnum IS 'номер путевки';


--
-- TOC entry 16123 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.sanatogrn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.sanatogrn IS 'ОГРН санатория или клиники НИИ';


--
-- TOC entry 16124 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.careage1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.careage1 IS 'по уходу возраст лет первый';


--
-- TOC entry 16125 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.caremonth1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.caremonth1 IS 'по уходу возраст месяцев первый';


--
-- TOC entry 16126 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.link_id1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.link_id1 IS 'по уходу родственная связь первый SICKLIST_LINK.ID';


--
-- TOC entry 16127 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.carefio1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.carefio1 IS 'по уходу ФИО члена семьи, за которым осуществляется уход первый';


--
-- TOC entry 16128 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.careage2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.careage2 IS 'по уходу возраст лет второй';


--
-- TOC entry 16129 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.caremonth2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.caremonth2 IS 'по уходу возраст месяцев второй';


--
-- TOC entry 16130 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.link_id2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.link_id2 IS 'по уходу родственная связь второй SICKLIST_LINK.ID';


--
-- TOC entry 16131 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.carefio2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.carefio2 IS 'по уходу ФИО члена семьи, за которым осуществляется уход второй';


--
-- TOC entry 16132 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.pregment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.pregment IS 'Поставлена на учет в ранние сроки беременности (до 12 недель)
0 - нет
1 - да
null - и не "да" и не "нет"';


--
-- TOC entry 16133 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.regimen_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.regimen_id IS 'Код отметки о нарушении режима. SICKLIST_REGIMEN.ID';


--
-- TOC entry 16134 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.regimen_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.regimen_dt IS 'Дата отметки о нарушении режима.';


--
-- TOC entry 16135 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.invalidgroup_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.invalidgroup_id IS 'Установлена/изменена группа инвалидности mis.invalidgroup.id';


--
-- TOC entry 16136 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.jobsecnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.jobsecnum IS 'номер листка нетрудоспособности, выданного для представления по основному месту работы';


--
-- TOC entry 16137 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.other_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.other_id IS 'результат ЛН - код для поля иное. SICKLIST_OTHER.ID';


--
-- TOC entry 16138 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.other_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.other_dt IS 'дата для поля иное';


--
-- TOC entry 16139 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.reason_dop_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.reason_dop_id IS 'дополнительная причина нетрудоспособности  sicklist_reason_dop.id';


--
-- TOC entry 16140 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.mkb10_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.mkb10_oid IS 'mkb10_oid';


--
-- TOC entry 16141 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.ibnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.ibnum IS 'номер истории болезни';


--
-- TOC entry 16142 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.nextlnnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.nextlnnum IS 'номер продолжения листка нетрудоспособности';


--
-- TOC entry 16143 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.visit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.visit_id IS 'visit_id';


--
-- TOC entry 16144 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.people_id IS 'people_id - по которому формируются данные по ЛН, если "по уходу" - код родителя, а в mdoc - код карты ребенка';


--
-- TOC entry 16145 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.sotr_id IS 'sotr_id';


--
-- TOC entry 16146 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.lpu IS 'ЛПУ';


--
-- TOC entry 16147 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.status IS 'Статус ЛН mir.sicklist_status';


--
-- TOC entry 16148 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.mdoc IS 'Код карты пациента, к которой привязан ЛН';


--
-- TOC entry 16149 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.care IS 'По уходу 0 - нет, 1 - да ( в поле people_id - проставляется код пипла родителя, а в mdoc остается код карты ребенка )';


--
-- TOC entry 16150 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.parent_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.parent_num IS 'Код номера родительского ЛН, продолжением которого является текущий ЛН в том случае, когда родительский ЛН создан в другом ЛПУ';


--
-- TOC entry 16151 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.parent_ext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.parent_ext IS 'Продление стороннего ЛН 0 - нет, 1 - да ( означает что родительского ЛН у нас нет в системе, мы выписываем продление внешнего ЛН с номером parent_num )';


--
-- TOC entry 16152 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.jobsec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.jobsec_id IS 'Ссылка на листок нетрудоспособности, выданный для представления по основному месту работы';


--
-- TOC entry 16153 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.carepeople1; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.carepeople1 IS 'Ссылка на people - человек по уходу за которым создан ЛН ';


--
-- TOC entry 16154 (class 0 OID 0)
-- Dependencies: 932
-- Name: COLUMN sicklist.carepeople2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist.carepeople2 IS 'Ссылка на people - человек по уходу за которым создан ЛН ';


--
-- TOC entry 933 (class 1259 OID 21688)
-- Dependencies: 7365 7366 14
-- Name: sicklist_form; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_form (
    formnum character varying(12) NOT NULL,
    series character varying(2),
    sicklist_formtitle character(36),
    sicklist_formstate character(36),
    sysuser character(36),
    company character(36),
    dateget date,
    dateout date,
    dateprint date,
    formdel numeric(1,0) DEFAULT 0,
    sotr character(36),
    CONSTRAINT "ck_sicklist_form$formdel" CHECK (((formdel IS NULL) OR ((formdel >= (0)::numeric) AND (formdel <= (1)::numeric))))
);


ALTER TABLE mir.sicklist_form OWNER TO postgres;

--
-- TOC entry 16155 (class 0 OID 0)
-- Dependencies: 933
-- Name: TABLE sicklist_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_form IS 'Бланки листков нетрудоспособности Author:Ponomarenko';


--
-- TOC entry 16156 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.formnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.formnum IS 'Номер бланка';


--
-- TOC entry 16157 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.series IS 'Серия бланка';


--
-- TOC entry 16158 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.sicklist_formtitle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.sicklist_formtitle IS 'Код требования на бланк (используется в поликлинике)';


--
-- TOC entry 16159 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.sicklist_formstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.sicklist_formstate IS 'Состояние бланка';


--
-- TOC entry 16160 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.sysuser IS 'Сотрудник, на учете у которого находится бланк';


--
-- TOC entry 16161 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.company IS 'Код организации, выдавшей бланк';


--
-- TOC entry 16162 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.dateget; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.dateget IS 'Дата получения бланка (используется в поликлинике)';


--
-- TOC entry 16163 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.dateout; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.dateout IS 'Дата выдачи бланка (используется в поликлинике)';


--
-- TOC entry 16164 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.dateprint; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.dateprint IS 'Дата печати';


--
-- TOC entry 16165 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.formdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.formdel IS 'Признак удаления';


--
-- TOC entry 16166 (class 0 OID 0)
-- Dependencies: 933
-- Name: COLUMN sicklist_form.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_form.sotr IS 'Сотрудник, на учете у которого находится бланк';


--
-- TOC entry 934 (class 1259 OID 21693)
-- Dependencies: 14
-- Name: sicklist_formstate; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_formstate (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.sicklist_formstate OWNER TO postgres;

--
-- TOC entry 16167 (class 0 OID 0)
-- Dependencies: 934
-- Name: TABLE sicklist_formstate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_formstate IS 'sicklist_formstate';


--
-- TOC entry 16168 (class 0 OID 0)
-- Dependencies: 934
-- Name: COLUMN sicklist_formstate.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formstate.oid IS 'oid';


--
-- TOC entry 16169 (class 0 OID 0)
-- Dependencies: 934
-- Name: COLUMN sicklist_formstate.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formstate.name IS 'name';


--
-- TOC entry 935 (class 1259 OID 21696)
-- Dependencies: 7367 14
-- Name: sicklist_formtitle; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_formtitle (
    oid character(36) NOT NULL,
    sotr numeric,
    requestcount numeric,
    daterequest date,
    remark character varying(255),
    requestdel numeric DEFAULT 0
);


ALTER TABLE mir.sicklist_formtitle OWNER TO postgres;

--
-- TOC entry 16170 (class 0 OID 0)
-- Dependencies: 935
-- Name: TABLE sicklist_formtitle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_formtitle IS 'Требования на бланки листков нетрудоспособности (Ponomarenko)';


--
-- TOC entry 16171 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.oid IS 'oid';


--
-- TOC entry 16172 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.sotr IS 'Код врача, запросившего бланк';


--
-- TOC entry 16173 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.requestcount; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.requestcount IS 'Количество затребованных листков';


--
-- TOC entry 16174 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.daterequest; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.daterequest IS 'Дата требования';


--
-- TOC entry 16175 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.remark; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.remark IS 'Причина (примечание)';


--
-- TOC entry 16176 (class 0 OID 0)
-- Dependencies: 935
-- Name: COLUMN sicklist_formtitle.requestdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_formtitle.requestdel IS 'Признак удаления';


--
-- TOC entry 936 (class 1259 OID 21703)
-- Dependencies: 14
-- Name: sicklist_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_link (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_link OWNER TO postgres;

--
-- TOC entry 16177 (class 0 OID 0)
-- Dependencies: 936
-- Name: TABLE sicklist_link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_link IS 'Родственная связь Author: A.Nakorjakov';


--
-- TOC entry 16178 (class 0 OID 0)
-- Dependencies: 936
-- Name: COLUMN sicklist_link.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_link.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16179 (class 0 OID 0)
-- Dependencies: 936
-- Name: COLUMN sicklist_link.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_link.name IS 'Название причины';


--
-- TOC entry 16180 (class 0 OID 0)
-- Dependencies: 936
-- Name: COLUMN sicklist_link.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_link.code IS 'Код для отображения в ЛН';


--
-- TOC entry 937 (class 1259 OID 21709)
-- Dependencies: 14
-- Name: sicklist_other; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_other (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_other OWNER TO postgres;

--
-- TOC entry 16181 (class 0 OID 0)
-- Dependencies: 937
-- Name: TABLE sicklist_other; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_other IS 'Результат больничного листа - отметки для "Иное" Author: A.Nakorjakov';


--
-- TOC entry 16182 (class 0 OID 0)
-- Dependencies: 937
-- Name: COLUMN sicklist_other.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_other.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16183 (class 0 OID 0)
-- Dependencies: 937
-- Name: COLUMN sicklist_other.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_other.name IS 'Название причины';


--
-- TOC entry 16184 (class 0 OID 0)
-- Dependencies: 937
-- Name: COLUMN sicklist_other.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_other.code IS 'Код для отображения в ЛН';


--
-- TOC entry 938 (class 1259 OID 21715)
-- Dependencies: 7368 14
-- Name: sicklist_period; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_period (
    id character(36) NOT NULL,
    sicklist_id character(36) NOT NULL,
    datebegin date DEFAULT ('now'::text)::date,
    dateend date,
    sotr_vk_id character(36),
    sotr_id character(36)
);


ALTER TABLE mir.sicklist_period OWNER TO postgres;

--
-- TOC entry 16185 (class 0 OID 0)
-- Dependencies: 938
-- Name: TABLE sicklist_period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_period IS 'Периоды листков нетрудоспособности Author: Linnikov';


--
-- TOC entry 16186 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_PERIOD]';


--
-- TOC entry 16187 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.sicklist_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.sicklist_id IS 'Листок нетрудоспособности [SICKLIST.ID]';


--
-- TOC entry 16188 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.datebegin IS 'Начало периода';


--
-- TOC entry 16189 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.dateend IS 'Окончание периода';


--
-- TOC entry 16190 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.sotr_vk_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.sotr_vk_id IS 'Председатель ВК';


--
-- TOC entry 16191 (class 0 OID 0)
-- Dependencies: 938
-- Name: COLUMN sicklist_period.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_period.sotr_id IS 'sotr_id';


--
-- TOC entry 939 (class 1259 OID 21719)
-- Dependencies: 14
-- Name: sicklist_reason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_reason (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_reason OWNER TO postgres;

--
-- TOC entry 16192 (class 0 OID 0)
-- Dependencies: 939
-- Name: TABLE sicklist_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_reason IS 'Причины нетрудоспособности Author: A.Nakorjakov';


--
-- TOC entry 16193 (class 0 OID 0)
-- Dependencies: 939
-- Name: COLUMN sicklist_reason.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16194 (class 0 OID 0)
-- Dependencies: 939
-- Name: COLUMN sicklist_reason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason.name IS 'Название причины';


--
-- TOC entry 16195 (class 0 OID 0)
-- Dependencies: 939
-- Name: COLUMN sicklist_reason.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason.code IS 'Синоним';


--
-- TOC entry 940 (class 1259 OID 21725)
-- Dependencies: 14
-- Name: sicklist_reason_change; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_reason_change (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_reason_change OWNER TO postgres;

--
-- TOC entry 16196 (class 0 OID 0)
-- Dependencies: 940
-- Name: TABLE sicklist_reason_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_reason_change IS 'Причины нетрудоспособности коды изменений Author: A.Nakorjakov';


--
-- TOC entry 16197 (class 0 OID 0)
-- Dependencies: 940
-- Name: COLUMN sicklist_reason_change.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_change.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16198 (class 0 OID 0)
-- Dependencies: 940
-- Name: COLUMN sicklist_reason_change.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_change.name IS 'Название причины';


--
-- TOC entry 16199 (class 0 OID 0)
-- Dependencies: 940
-- Name: COLUMN sicklist_reason_change.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_change.code IS 'Код для отображения в ЛН';


--
-- TOC entry 941 (class 1259 OID 21731)
-- Dependencies: 14
-- Name: sicklist_reason_dop; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_reason_dop (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_reason_dop OWNER TO postgres;

--
-- TOC entry 16200 (class 0 OID 0)
-- Dependencies: 941
-- Name: TABLE sicklist_reason_dop; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_reason_dop IS 'Причины нетрудоспособности дополнительные коды Author: A.Nakorjakov';


--
-- TOC entry 16201 (class 0 OID 0)
-- Dependencies: 941
-- Name: COLUMN sicklist_reason_dop.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_dop.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16202 (class 0 OID 0)
-- Dependencies: 941
-- Name: COLUMN sicklist_reason_dop.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_dop.name IS 'Название причины';


--
-- TOC entry 16203 (class 0 OID 0)
-- Dependencies: 941
-- Name: COLUMN sicklist_reason_dop.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_reason_dop.code IS 'Код для отображения в ЛН';


--
-- TOC entry 942 (class 1259 OID 21737)
-- Dependencies: 14
-- Name: sicklist_regimen; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_regimen (
    id character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.sicklist_regimen OWNER TO postgres;

--
-- TOC entry 16204 (class 0 OID 0)
-- Dependencies: 942
-- Name: TABLE sicklist_regimen; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_regimen IS 'Нарушение режима Author: A.Nakorjakov';


--
-- TOC entry 16205 (class 0 OID 0)
-- Dependencies: 942
-- Name: COLUMN sicklist_regimen.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_regimen.id IS 'SEQUENCE=[MIS.SQ_SICKLIST_REASON]';


--
-- TOC entry 16206 (class 0 OID 0)
-- Dependencies: 942
-- Name: COLUMN sicklist_regimen.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_regimen.name IS 'Название причины';


--
-- TOC entry 16207 (class 0 OID 0)
-- Dependencies: 942
-- Name: COLUMN sicklist_regimen.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_regimen.code IS 'Код для отображения в ЛН';


--
-- TOC entry 943 (class 1259 OID 21743)
-- Dependencies: 14
-- Name: sicklist_request; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_request (
    oid character(36) NOT NULL,
    datecreate date,
    request_num integer,
    request_quarter date,
    begin_count integer,
    order_count integer,
    receive_count integer,
    give_count integer,
    break_count integer,
    pinch_count integer,
    end_count integer,
    new_order_count integer
);


ALTER TABLE mir.sicklist_request OWNER TO postgres;

--
-- TOC entry 16208 (class 0 OID 0)
-- Dependencies: 943
-- Name: TABLE sicklist_request; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_request IS 'Заявки на бланки ЛН. Author:Ponomarenko';


--
-- TOC entry 16209 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.oid IS 'Уникальный код';


--
-- TOC entry 16210 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.datecreate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.datecreate IS 'Дата создания заявки';


--
-- TOC entry 16211 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.request_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.request_num IS 'Номер заявки';


--
-- TOC entry 16212 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.request_quarter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.request_quarter IS 'Квартал';


--
-- TOC entry 16213 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.begin_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.begin_count IS 'Остаток на начало квартала';


--
-- TOC entry 16214 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.order_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.order_count IS 'Заказано';


--
-- TOC entry 16215 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.receive_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.receive_count IS 'Получено';


--
-- TOC entry 16216 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.give_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.give_count IS 'Выдано';


--
-- TOC entry 16217 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.break_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.break_count IS 'Испорчено';


--
-- TOC entry 16218 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.pinch_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.pinch_count IS 'Похищено';


--
-- TOC entry 16219 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.end_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.end_count IS 'Остаток на конец квартала';


--
-- TOC entry 16220 (class 0 OID 0)
-- Dependencies: 943
-- Name: COLUMN sicklist_request.new_order_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_request.new_order_count IS 'Заказано на следующий квартал';


--
-- TOC entry 944 (class 1259 OID 21746)
-- Dependencies: 7369 7370 14
-- Name: sicklist_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sicklist_status (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    foms_code character varying(255),
    CONSTRAINT "ck_sicklist_status$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.sicklist_status OWNER TO postgres;

--
-- TOC entry 16221 (class 0 OID 0)
-- Dependencies: 944
-- Name: TABLE sicklist_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sicklist_status IS 'Исход заболевания';


--
-- TOC entry 16222 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.oid IS 'oid';


--
-- TOC entry 16223 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.name IS 'name';


--
-- TOC entry 16224 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16225 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16226 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 16227 (class 0 OID 0)
-- Dependencies: 944
-- Name: COLUMN sicklist_status.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sicklist_status.foms_code IS 'код ФОМС';


--
-- TOC entry 945 (class 1259 OID 21754)
-- Dependencies: 14
-- Name: sizeunits; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sizeunits (
    id integer NOT NULL,
    fullname character varying(1024),
    shortname character varying(1024)
);


ALTER TABLE mir.sizeunits OWNER TO postgres;

--
-- TOC entry 16228 (class 0 OID 0)
-- Dependencies: 945
-- Name: TABLE sizeunits; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sizeunits IS 'Единицы размера лек. формы';


--
-- TOC entry 16229 (class 0 OID 0)
-- Dependencies: 945
-- Name: COLUMN sizeunits.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sizeunits.id IS 'Код единицы размера - первичный ключ';


--
-- TOC entry 16230 (class 0 OID 0)
-- Dependencies: 945
-- Name: COLUMN sizeunits.fullname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sizeunits.fullname IS 'Полное название единицы размера';


--
-- TOC entry 16231 (class 0 OID 0)
-- Dependencies: 945
-- Name: COLUMN sizeunits.shortname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sizeunits.shortname IS 'Краткое название единицы размера';


--
-- TOC entry 946 (class 1259 OID 21760)
-- Dependencies: 14
-- Name: skippayment; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE skippayment (
    oid character(36) NOT NULL,
    skippaymentreason character(36) NOT NULL,
    begin_dt date,
    end_dt date,
    people character(36) NOT NULL
);


ALTER TABLE mir.skippayment OWNER TO postgres;

--
-- TOC entry 16232 (class 0 OID 0)
-- Dependencies: 946
-- Name: TABLE skippayment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE skippayment IS 'невыплаты сотрудникам';


--
-- TOC entry 16233 (class 0 OID 0)
-- Dependencies: 946
-- Name: COLUMN skippayment.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippayment.oid IS 'oid';


--
-- TOC entry 16234 (class 0 OID 0)
-- Dependencies: 946
-- Name: COLUMN skippayment.skippaymentreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippayment.skippaymentreason IS 'причина';


--
-- TOC entry 16235 (class 0 OID 0)
-- Dependencies: 946
-- Name: COLUMN skippayment.begin_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippayment.begin_dt IS 'дата начала';


--
-- TOC entry 16236 (class 0 OID 0)
-- Dependencies: 946
-- Name: COLUMN skippayment.end_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippayment.end_dt IS 'дата конца';


--
-- TOC entry 16237 (class 0 OID 0)
-- Dependencies: 946
-- Name: COLUMN skippayment.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippayment.people IS 'ссылка на пипла';


--
-- TOC entry 947 (class 1259 OID 21763)
-- Dependencies: 14
-- Name: skippaymentreason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE skippaymentreason (
    oid character(36) NOT NULL,
    name character varying(255),
    id integer
);


ALTER TABLE mir.skippaymentreason OWNER TO postgres;

--
-- TOC entry 16238 (class 0 OID 0)
-- Dependencies: 947
-- Name: TABLE skippaymentreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE skippaymentreason IS 'причины невыплат денег';


--
-- TOC entry 16239 (class 0 OID 0)
-- Dependencies: 947
-- Name: COLUMN skippaymentreason.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippaymentreason.oid IS 'oid';


--
-- TOC entry 16240 (class 0 OID 0)
-- Dependencies: 947
-- Name: COLUMN skippaymentreason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippaymentreason.name IS 'название';


--
-- TOC entry 16241 (class 0 OID 0)
-- Dependencies: 947
-- Name: COLUMN skippaymentreason.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN skippaymentreason.id IS 'id';


--
-- TOC entry 948 (class 1259 OID 21766)
-- Dependencies: 7371 14
-- Name: smid; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE smid (
    oid character(36) NOT NULL,
    parent_id character(36),
    name character varying(255),
    type_field character varying(25),
    synonim character varying(255),
    del integer DEFAULT 0 NOT NULL,
    num_order integer,
    is_required integer
);


ALTER TABLE mir.smid OWNER TO postgres;

--
-- TOC entry 16242 (class 0 OID 0)
-- Dependencies: 948
-- Name: TABLE smid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE smid IS 'smid';


--
-- TOC entry 16243 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.oid IS 'oid';


--
-- TOC entry 16244 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.parent_id IS 'parent_id';


--
-- TOC entry 16245 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.name IS 'name';


--
-- TOC entry 16246 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.type_field; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.type_field IS 'type';


--
-- TOC entry 16247 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.synonim; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.synonim IS 'synonim';


--
-- TOC entry 16248 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.del IS 'del';


--
-- TOC entry 16249 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.num_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.num_order IS 'num_order';


--
-- TOC entry 16250 (class 0 OID 0)
-- Dependencies: 948
-- Name: COLUMN smid.is_required; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smid.is_required IS 'is_required';


--
-- TOC entry 949 (class 1259 OID 21773)
-- Dependencies: 14
-- Name: smscenter; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE smscenter (
    oid character(36) NOT NULL,
    numbertel character varying(100),
    smstext character varying(200),
    smsst numeric,
    dateincoming timestamp(0) without time zone,
    datesend timestamp(0) without time zone,
    people character(36),
    id_sms_center character varying,
    fromphone character varying(15),
    schedule character varying(36)
);


ALTER TABLE mir.smscenter OWNER TO postgres;

--
-- TOC entry 16251 (class 0 OID 0)
-- Dependencies: 949
-- Name: TABLE smscenter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE smscenter IS 'SMSCENTER';


--
-- TOC entry 16252 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.oid IS 'oid';


--
-- TOC entry 16253 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.numbertel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.numbertel IS 'numbertel';


--
-- TOC entry 16254 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.smstext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.smstext IS 'smstext';


--
-- TOC entry 16255 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.smsst; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.smsst IS 'smsst';


--
-- TOC entry 16256 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.dateincoming; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.dateincoming IS 'dateincoming';


--
-- TOC entry 16257 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.datesend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.datesend IS 'datesend';


--
-- TOC entry 16258 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.people IS 'people';


--
-- TOC entry 16259 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.id_sms_center; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.id_sms_center IS 'id_sms_center';


--
-- TOC entry 16260 (class 0 OID 0)
-- Dependencies: 949
-- Name: COLUMN smscenter.fromphone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smscenter.fromphone IS 'fromphone';


--
-- TOC entry 950 (class 1259 OID 21779)
-- Dependencies: 14
-- Name: smslogstatus; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE smslogstatus (
    oid character(36),
    smsst numeric,
    dt date,
    oid_sms character(36)
);


ALTER TABLE mir.smslogstatus OWNER TO postgres;

--
-- TOC entry 16261 (class 0 OID 0)
-- Dependencies: 950
-- Name: TABLE smslogstatus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE smslogstatus IS 'SMSLOGSTATUS';


--
-- TOC entry 16262 (class 0 OID 0)
-- Dependencies: 950
-- Name: COLUMN smslogstatus.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smslogstatus.oid IS 'oid';


--
-- TOC entry 16263 (class 0 OID 0)
-- Dependencies: 950
-- Name: COLUMN smslogstatus.smsst; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smslogstatus.smsst IS 'smsst';


--
-- TOC entry 16264 (class 0 OID 0)
-- Dependencies: 950
-- Name: COLUMN smslogstatus.dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smslogstatus.dt IS 'dt';


--
-- TOC entry 16265 (class 0 OID 0)
-- Dependencies: 950
-- Name: COLUMN smslogstatus.oid_sms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smslogstatus.oid_sms IS 'oid_sms';


--
-- TOC entry 951 (class 1259 OID 21785)
-- Dependencies: 14
-- Name: smstmp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE smstmp (
    date_sms date,
    smstext character varying(2000)
);


ALTER TABLE mir.smstmp OWNER TO postgres;

--
-- TOC entry 16266 (class 0 OID 0)
-- Dependencies: 951
-- Name: TABLE smstmp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE smstmp IS 'SMSTMP';


--
-- TOC entry 16267 (class 0 OID 0)
-- Dependencies: 951
-- Name: COLUMN smstmp.date_sms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smstmp.date_sms IS 'date_sms';


--
-- TOC entry 16268 (class 0 OID 0)
-- Dependencies: 951
-- Name: COLUMN smstmp.smstext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN smstmp.smstext IS 'smstext';


--
-- TOC entry 952 (class 1259 OID 21791)
-- Dependencies: 7372 14
-- Name: socialrank; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE socialrank (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    code character varying(255)
);


ALTER TABLE mir.socialrank OWNER TO postgres;

--
-- TOC entry 16269 (class 0 OID 0)
-- Dependencies: 952
-- Name: TABLE socialrank; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE socialrank IS 'Таблица: Классификатор типов социального положения Author: Nakorjakov';


--
-- TOC entry 16270 (class 0 OID 0)
-- Dependencies: 952
-- Name: COLUMN socialrank.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN socialrank.oid IS 'oid';


--
-- TOC entry 16271 (class 0 OID 0)
-- Dependencies: 952
-- Name: COLUMN socialrank.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN socialrank.name IS 'Название';


--
-- TOC entry 16272 (class 0 OID 0)
-- Dependencies: 952
-- Name: COLUMN socialrank.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN socialrank.code IS 'Код ФОМС';


--
-- TOC entry 953 (class 1259 OID 21798)
-- Dependencies: 7373 14
-- Name: sotr_dictionary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_dictionary (
    sotr character(36) NOT NULL,
    dictionary character(36) NOT NULL,
    action character varying(36) DEFAULT 0 NOT NULL
);


ALTER TABLE mir.sotr_dictionary OWNER TO postgres;

--
-- TOC entry 16273 (class 0 OID 0)
-- Dependencies: 953
-- Name: TABLE sotr_dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_dictionary IS 'Права на справочники, назначенные сотруднику';


--
-- TOC entry 16274 (class 0 OID 0)
-- Dependencies: 953
-- Name: COLUMN sotr_dictionary.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_dictionary.sotr IS 'mir.sotr';


--
-- TOC entry 16275 (class 0 OID 0)
-- Dependencies: 953
-- Name: COLUMN sotr_dictionary.dictionary; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_dictionary.dictionary IS 'mir.dictionary';


--
-- TOC entry 16276 (class 0 OID 0)
-- Dependencies: 953
-- Name: COLUMN sotr_dictionary.action; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_dictionary.action IS 'Разрешаемое действие 0 - просмотр 1 - редактировать 2 - подтверждать';


--
-- TOC entry 954 (class 1259 OID 21802)
-- Dependencies: 14
-- Name: sotr_ib_section; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_ib_section (
    sotr character(36) NOT NULL,
    ib_section character(36) NOT NULL
);


ALTER TABLE mir.sotr_ib_section OWNER TO postgres;

--
-- TOC entry 16277 (class 0 OID 0)
-- Dependencies: 954
-- Name: TABLE sotr_ib_section; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_ib_section IS 'Права на Разделы ЭМК, назначенные сотруднику';


--
-- TOC entry 16278 (class 0 OID 0)
-- Dependencies: 954
-- Name: COLUMN sotr_ib_section.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_ib_section.sotr IS 'mir.sotr';


--
-- TOC entry 16279 (class 0 OID 0)
-- Dependencies: 954
-- Name: COLUMN sotr_ib_section.ib_section; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_ib_section.ib_section IS 'mir.ib_sections';


--
-- TOC entry 955 (class 1259 OID 21805)
-- Dependencies: 14
-- Name: sotr_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_lpu (
    sotr character(36) NOT NULL,
    lpu character(36) NOT NULL
);


ALTER TABLE mir.sotr_lpu OWNER TO postgres;

--
-- TOC entry 16280 (class 0 OID 0)
-- Dependencies: 955
-- Name: TABLE sotr_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_lpu IS 'Права на ЛПУ, назначенные сотруднику';


--
-- TOC entry 16281 (class 0 OID 0)
-- Dependencies: 955
-- Name: COLUMN sotr_lpu.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_lpu.sotr IS 'mir.sotr';


--
-- TOC entry 16282 (class 0 OID 0)
-- Dependencies: 955
-- Name: COLUMN sotr_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_lpu.lpu IS 'mir.lpu';


--
-- TOC entry 956 (class 1259 OID 21808)
-- Dependencies: 14
-- Name: sotr_mdoctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_mdoctype (
    id character(36) NOT NULL,
    mdoctype_id character(36),
    sysuser character(36) NOT NULL,
    otdel character(36) NOT NULL,
    spec_id character(36),
    bind smallint
);


ALTER TABLE mir.sotr_mdoctype OWNER TO postgres;

--
-- TOC entry 16283 (class 0 OID 0)
-- Dependencies: 956
-- Name: TABLE sotr_mdoctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_mdoctype IS 'Доступ работников к типам документов (Mikhaylov)';


--
-- TOC entry 16284 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.id IS 'SEQUENCE=[MIS.SQ_EMP_MACTION]';


--
-- TOC entry 16285 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.mdoctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.mdoctype_id IS 'presctype_id';


--
-- TOC entry 16286 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.sysuser IS 'sysuser';


--
-- TOC entry 16287 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.otdel IS 'otdel';


--
-- TOC entry 16288 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.spec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.spec_id IS 'Специализация [SPEC_EMP.ID]';


--
-- TOC entry 16289 (class 0 OID 0)
-- Dependencies: 956
-- Name: COLUMN sotr_mdoctype.bind; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_mdoctype.bind IS 'Bind';


--
-- TOC entry 957 (class 1259 OID 21811)
-- Dependencies: 14
-- Name: sotr_otdel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_otdel (
    sotr character(36) NOT NULL,
    otdel character(36) NOT NULL
);


ALTER TABLE mir.sotr_otdel OWNER TO postgres;

--
-- TOC entry 16290 (class 0 OID 0)
-- Dependencies: 957
-- Name: TABLE sotr_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_otdel IS 'Права на Отделения, назначенные сотруднику';


--
-- TOC entry 16291 (class 0 OID 0)
-- Dependencies: 957
-- Name: COLUMN sotr_otdel.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_otdel.sotr IS 'mir.sotr';


--
-- TOC entry 16292 (class 0 OID 0)
-- Dependencies: 957
-- Name: COLUMN sotr_otdel.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_otdel.otdel IS 'mir.otdel';


--
-- TOC entry 958 (class 1259 OID 21814)
-- Dependencies: 7374 7375 14
-- Name: sotr_param; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_param (
    oid character(36) NOT NULL,
    presctype_autodefault numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_sotr_param$presctype_autodef" CHECK (((presctype_autodefault IS NULL) OR ((presctype_autodefault >= (0)::numeric) AND (presctype_autodefault <= (1)::numeric))))
);


ALTER TABLE mir.sotr_param OWNER TO postgres;

--
-- TOC entry 16293 (class 0 OID 0)
-- Dependencies: 958
-- Name: TABLE sotr_param; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_param IS 'Таблица содержит сотрудников со статусом автовыполнения назначений, для которых autocomplete = 1';


--
-- TOC entry 16294 (class 0 OID 0)
-- Dependencies: 958
-- Name: COLUMN sotr_param.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_param.oid IS 'oid';


--
-- TOC entry 16295 (class 0 OID 0)
-- Dependencies: 958
-- Name: COLUMN sotr_param.presctype_autodefault; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_param.presctype_autodefault IS 'Сотрудник со статусом автовыполнения назначений';


--
-- TOC entry 959 (class 1259 OID 21819)
-- Dependencies: 7376 7377 7378 7379 7380 7381 7382 7383 14
-- Name: sotr_presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_presctype (
    oid character(36) NOT NULL,
    id character(36),
    presctype_id character(36),
    sysuser character(36),
    otdel character(36),
    allow integer DEFAULT 1 NOT NULL,
    spec_id character(36),
    profile_id character(36),
    is_default integer DEFAULT 0 NOT NULL,
    profile_spec_id character(36),
    appoint smallint DEFAULT 0,
    execute smallint DEFAULT 0,
    sotr character(36),
    multi_sign integer DEFAULT 0 NOT NULL,
    show_in_schedule boolean DEFAULT false,
    CONSTRAINT "ck_sotr_pre$appoint" CHECK (((appoint IS NULL) OR ((appoint >= 0) AND (appoint <= 1)))),
    CONSTRAINT ckc_allow_emp_mact CHECK (((allow >= 0) AND (allow <= 1)))
);


ALTER TABLE mir.sotr_presctype OWNER TO postgres;

--
-- TOC entry 16296 (class 0 OID 0)
-- Dependencies: 959
-- Name: TABLE sotr_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_presctype IS 'Специальности сотрудников';


--
-- TOC entry 16297 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.presctype_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.presctype_id IS 'presctype_id';


--
-- TOC entry 16298 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.sysuser IS 'sysuser';


--
-- TOC entry 16299 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.otdel IS 'otdel';


--
-- TOC entry 16300 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.allow; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.allow IS 'Тип права (0 - назначать, 1-выполнять)';


--
-- TOC entry 16301 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.spec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.spec_id IS 'Специализация [SPEC_EMP.ID]';


--
-- TOC entry 16302 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.profile_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.profile_id IS 'Профиль [PROFILE_EMP.ID]';


--
-- TOC entry 16303 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.is_default; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.is_default IS 'Флаг по умолчанию';


--
-- TOC entry 16304 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.profile_spec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.profile_spec_id IS 'Код специальности медицинского работника';


--
-- TOC entry 16305 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.appoint; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.appoint IS '1 - Назначение доступно для назначения врачем';


--
-- TOC entry 16306 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.execute; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.execute IS '1 - Назначение доступно для исполнения врачем';


--
-- TOC entry 16307 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.sotr IS 'сотрудник';


--
-- TOC entry 16308 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.multi_sign; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.multi_sign IS 'Право множественной подписи протоколов (0 - запрещено, 1 - разрешено)';


--
-- TOC entry 16309 (class 0 OID 0)
-- Dependencies: 959
-- Name: COLUMN sotr_presctype.show_in_schedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_presctype.show_in_schedule IS 'Признак отображения назначений для составления расписания.';


--
-- TOC entry 960 (class 1259 OID 21830)
-- Dependencies: 7384 14
-- Name: sotr_rating; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_rating (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    sotr character(36) NOT NULL,
    rating numeric NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.sotr_rating OWNER TO postgres;

--
-- TOC entry 16310 (class 0 OID 0)
-- Dependencies: 960
-- Name: TABLE sotr_rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_rating IS 'sotr_rating';


--
-- TOC entry 16311 (class 0 OID 0)
-- Dependencies: 960
-- Name: COLUMN sotr_rating.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_rating.oid IS 'oid';


--
-- TOC entry 16312 (class 0 OID 0)
-- Dependencies: 960
-- Name: COLUMN sotr_rating.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_rating.people IS 'Пациент выставивший оценку';


--
-- TOC entry 16313 (class 0 OID 0)
-- Dependencies: 960
-- Name: COLUMN sotr_rating.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_rating.sotr IS 'Сотрудник, которому выставили оценку';


--
-- TOC entry 16314 (class 0 OID 0)
-- Dependencies: 960
-- Name: COLUMN sotr_rating.rating; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_rating.rating IS 'Оценка';


--
-- TOC entry 16315 (class 0 OID 0)
-- Dependencies: 960
-- Name: COLUMN sotr_rating.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_rating.add_date IS 'Дата выставления оценки';


--
-- TOC entry 961 (class 1259 OID 21837)
-- Dependencies: 14
-- Name: sotr_receptiontype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_receptiontype (
    sotr character(36) NOT NULL,
    receptiontype character(36) NOT NULL
);


ALTER TABLE mir.sotr_receptiontype OWNER TO postgres;

--
-- TOC entry 16316 (class 0 OID 0)
-- Dependencies: 961
-- Name: TABLE sotr_receptiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_receptiontype IS 'Права на Типы приемов, назначенные сотруднику';


--
-- TOC entry 16317 (class 0 OID 0)
-- Dependencies: 961
-- Name: COLUMN sotr_receptiontype.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_receptiontype.sotr IS 'mir.sotr';


--
-- TOC entry 16318 (class 0 OID 0)
-- Dependencies: 961
-- Name: COLUMN sotr_receptiontype.receptiontype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_receptiontype.receptiontype IS 'mir.receptiontype';


--
-- TOC entry 962 (class 1259 OID 21840)
-- Dependencies: 14
-- Name: sotr_recipe_lgot_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_recipe_lgot_type (
    oid character(36) NOT NULL,
    sotr character(36) NOT NULL,
    recipe_lgot_type character(36) NOT NULL,
    datebegin date,
    dateend date,
    description text
);


ALTER TABLE mir.sotr_recipe_lgot_type OWNER TO postgres;

--
-- TOC entry 16319 (class 0 OID 0)
-- Dependencies: 962
-- Name: TABLE sotr_recipe_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_recipe_lgot_type IS 'право сотрудника выписывать рецепты определенного вида льгот
created by S.Ponomarenko';


--
-- TOC entry 16320 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.oid IS 'oid';


--
-- TOC entry 16321 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.sotr IS 'sotr';


--
-- TOC entry 16322 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.recipe_lgot_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.recipe_lgot_type IS 'Код';


--
-- TOC entry 16323 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.datebegin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.datebegin IS 'дата включения в регистр врачей, имеющих право на выписку льготных рецептов';


--
-- TOC entry 16324 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.dateend; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.dateend IS 'дата исключения из регистра';


--
-- TOC entry 16325 (class 0 OID 0)
-- Dependencies: 962
-- Name: COLUMN sotr_recipe_lgot_type.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_recipe_lgot_type.description IS 'описание';


--
-- TOC entry 963 (class 1259 OID 21846)
-- Dependencies: 7385 7386 7387 14
-- Name: sotr_review; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_review (
    oid character(36) NOT NULL,
    sotr character(36) NOT NULL,
    people character(36) NOT NULL,
    text character varying NOT NULL,
    add_date timestamp without time zone DEFAULT now() NOT NULL,
    is_delete numeric(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT "ck_sotr_review$is_delete" CHECK (((is_delete IS NULL) OR ((is_delete >= (0)::numeric) AND (is_delete <= (1)::numeric))))
);


ALTER TABLE mir.sotr_review OWNER TO postgres;

--
-- TOC entry 16326 (class 0 OID 0)
-- Dependencies: 963
-- Name: TABLE sotr_review; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_review IS 'sotr_review';


--
-- TOC entry 16327 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.oid IS 'oid';


--
-- TOC entry 16328 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.sotr IS 'Сотрудник которому оставили отзыв';


--
-- TOC entry 16329 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.people IS 'Пациент, оставивший отзыв';


--
-- TOC entry 16330 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.text IS 'Текст отзыва';


--
-- TOC entry 16331 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.add_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.add_date IS 'Дата отзыва';


--
-- TOC entry 16332 (class 0 OID 0)
-- Dependencies: 963
-- Name: COLUMN sotr_review.is_delete; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_review.is_delete IS 'Удалённые отзывы';


--
-- TOC entry 964 (class 1259 OID 21855)
-- Dependencies: 14
-- Name: sotr_right; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_right (
    sotr character(36) NOT NULL,
    "right" character(36) NOT NULL
);


ALTER TABLE mir.sotr_right OWNER TO postgres;

--
-- TOC entry 16333 (class 0 OID 0)
-- Dependencies: 964
-- Name: TABLE sotr_right; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_right IS 'Права, назначенные сотруднику';


--
-- TOC entry 16334 (class 0 OID 0)
-- Dependencies: 964
-- Name: COLUMN sotr_right.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_right.sotr IS 'mir.sotr';


--
-- TOC entry 16335 (class 0 OID 0)
-- Dependencies: 964
-- Name: COLUMN sotr_right."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_right."right" IS 'mir.right';


--
-- TOC entry 965 (class 1259 OID 21858)
-- Dependencies: 14
-- Name: sotr_right_all; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_right_all (
    sotr character(36) NOT NULL,
    "right" character(36) NOT NULL
);


ALTER TABLE mir.sotr_right_all OWNER TO postgres;

--
-- TOC entry 16336 (class 0 OID 0)
-- Dependencies: 965
-- Name: TABLE sotr_right_all; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_right_all IS 'Права, назначенные сотруднику, включая права из ролей';


--
-- TOC entry 16337 (class 0 OID 0)
-- Dependencies: 965
-- Name: COLUMN sotr_right_all.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_right_all.sotr IS 'mir.sotr';


--
-- TOC entry 16338 (class 0 OID 0)
-- Dependencies: 965
-- Name: COLUMN sotr_right_all."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_right_all."right" IS 'mir.right';


--
-- TOC entry 966 (class 1259 OID 21861)
-- Dependencies: 14
-- Name: sotr_role; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_role (
    sotr character(36) NOT NULL,
    role character(36) NOT NULL
);


ALTER TABLE mir.sotr_role OWNER TO postgres;

--
-- TOC entry 16339 (class 0 OID 0)
-- Dependencies: 966
-- Name: TABLE sotr_role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_role IS 'Роли, назначенные сотруднику';


--
-- TOC entry 16340 (class 0 OID 0)
-- Dependencies: 966
-- Name: COLUMN sotr_role.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_role.sotr IS 'mir.sotr';


--
-- TOC entry 16341 (class 0 OID 0)
-- Dependencies: 966
-- Name: COLUMN sotr_role.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_role.role IS 'mir.role';


--
-- TOC entry 967 (class 1259 OID 21864)
-- Dependencies: 14
-- Name: sotr_section_ib2; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotr_section_ib2 (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    otdel character(36) NOT NULL,
    spec_id character(36),
    section_ib character(36) NOT NULL
);


ALTER TABLE mir.sotr_section_ib2 OWNER TO postgres;

--
-- TOC entry 16342 (class 0 OID 0)
-- Dependencies: 967
-- Name: TABLE sotr_section_ib2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotr_section_ib2 IS 'sotr_section_ib';


--
-- TOC entry 16343 (class 0 OID 0)
-- Dependencies: 967
-- Name: COLUMN sotr_section_ib2.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_section_ib2.oid IS 'oid';


--
-- TOC entry 16344 (class 0 OID 0)
-- Dependencies: 967
-- Name: COLUMN sotr_section_ib2.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_section_ib2.sysuser IS 'sysuser';


--
-- TOC entry 16345 (class 0 OID 0)
-- Dependencies: 967
-- Name: COLUMN sotr_section_ib2.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_section_ib2.otdel IS 'otdel';


--
-- TOC entry 16346 (class 0 OID 0)
-- Dependencies: 967
-- Name: COLUMN sotr_section_ib2.spec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_section_ib2.spec_id IS 'специальность';


--
-- TOC entry 16347 (class 0 OID 0)
-- Dependencies: 967
-- Name: COLUMN sotr_section_ib2.section_ib; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotr_section_ib2.section_ib IS 'разделы эмк';


--
-- TOC entry 968 (class 1259 OID 21867)
-- Dependencies: 14
-- Name: sotrsotrs_districtdistrict; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotrsotrs_districtdistrict (
    oid character(36) NOT NULL,
    district character(36),
    sotrs character(36)
);


ALTER TABLE mir.sotrsotrs_districtdistrict OWNER TO postgres;

--
-- TOC entry 16348 (class 0 OID 0)
-- Dependencies: 968
-- Name: TABLE sotrsotrs_districtdistrict; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotrsotrs_districtdistrict IS 'Связь сотрудника с участками';


--
-- TOC entry 16349 (class 0 OID 0)
-- Dependencies: 968
-- Name: COLUMN sotrsotrs_districtdistrict.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrsotrs_districtdistrict.oid IS 'oid';


--
-- TOC entry 16350 (class 0 OID 0)
-- Dependencies: 968
-- Name: COLUMN sotrsotrs_districtdistrict.district; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrsotrs_districtdistrict.district IS 'district';


--
-- TOC entry 16351 (class 0 OID 0)
-- Dependencies: 968
-- Name: COLUMN sotrsotrs_districtdistrict.sotrs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrsotrs_districtdistrict.sotrs IS 'sotrs';


--
-- TOC entry 969 (class 1259 OID 21870)
-- Dependencies: 7388 14
-- Name: sotrworkday; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sotrworkday (
    oid character(36) NOT NULL,
    date date,
    times double precision,
    timepo double precision,
    duration numeric(10,0),
    cabinet character(36),
    sysuser character(36),
    isholiday numeric(1,0),
    dates date,
    holidayreason numeric,
    isliveline numeric(1,0) DEFAULT 0 NOT NULL,
    lpu character varying(36),
    presctype character varying(36)
);


ALTER TABLE mir.sotrworkday OWNER TO postgres;

--
-- TOC entry 16352 (class 0 OID 0)
-- Dependencies: 969
-- Name: TABLE sotrworkday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sotrworkday IS 'SOTRWORKDAY';


--
-- TOC entry 16353 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.oid IS 'oid';


--
-- TOC entry 16354 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.date IS 'date';


--
-- TOC entry 16355 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.times; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.times IS 'times';


--
-- TOC entry 16356 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.timepo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.timepo IS 'timepo';


--
-- TOC entry 16357 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.duration IS 'duration';


--
-- TOC entry 16358 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.cabinet IS 'cabinet';


--
-- TOC entry 16359 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.sysuser IS 'sysuser';


--
-- TOC entry 16360 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.isholiday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.isholiday IS 'isholiday';


--
-- TOC entry 16361 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.dates; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.dates IS 'dates';


--
-- TOC entry 16362 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.holidayreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.holidayreason IS 'holidayreason';


--
-- TOC entry 16363 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.isliveline; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.isliveline IS 'isliveline';


--
-- TOC entry 16364 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.lpu IS 'ЛПУ(by Spasskiy S.N. 11.03.2011)';


--
-- TOC entry 16365 (class 0 OID 0)
-- Dependencies: 969
-- Name: COLUMN sotrworkday.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sotrworkday.presctype IS 'Специализация(by Spasskiy S.N. 11.03.2011)';


--
-- TOC entry 970 (class 1259 OID 21877)
-- Dependencies: 7389 7390 14
-- Name: specialization; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE specialization (
    oid character(36) NOT NULL,
    sanatorium character(36) NOT NULL,
    mkb10 character(36),
    heal_profile character(36) NOT NULL,
    license_number character varying(255),
    department_care numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_specialization$department_care" CHECK (((department_care IS NULL) OR ((department_care >= (0)::numeric) AND (department_care <= (1)::numeric))))
);


ALTER TABLE mir.specialization OWNER TO postgres;

--
-- TOC entry 16366 (class 0 OID 0)
-- Dependencies: 970
-- Name: TABLE specialization; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE specialization IS 'Специализации учреждения';


--
-- TOC entry 16367 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.oid IS 'oid';


--
-- TOC entry 16368 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.sanatorium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.sanatorium IS 'sanatorium';


--
-- TOC entry 16369 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.mkb10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.mkb10 IS 'код  мкб-10';


--
-- TOC entry 16370 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.heal_profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.heal_profile IS 'профиль мп';


--
-- TOC entry 16371 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.license_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.license_number IS 'номер лицензии';


--
-- TOC entry 16372 (class 0 OID 0)
-- Dependencies: 970
-- Name: COLUMN specialization.department_care; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialization.department_care IS 'наличие отделения долечивания';


--
-- TOC entry 971 (class 1259 OID 21882)
-- Dependencies: 14
-- Name: specialty; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE specialty (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(255)
);


ALTER TABLE mir.specialty OWNER TO postgres;

--
-- TOC entry 16373 (class 0 OID 0)
-- Dependencies: 971
-- Name: TABLE specialty; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE specialty IS 'справочник специальностей';


--
-- TOC entry 16374 (class 0 OID 0)
-- Dependencies: 971
-- Name: COLUMN specialty.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialty.oid IS 'oid';


--
-- TOC entry 16375 (class 0 OID 0)
-- Dependencies: 971
-- Name: COLUMN specialty.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialty.name IS 'название специальности';


--
-- TOC entry 16376 (class 0 OID 0)
-- Dependencies: 971
-- Name: COLUMN specialty.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN specialty.code IS 'код специальности';


--
-- TOC entry 972 (class 1259 OID 21888)
-- Dependencies: 7391 14
-- Name: speed_test; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE speed_test (
    oid character(36) NOT NULL,
    people character(36) NOT NULL,
    test_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    js_speed integer,
    connection_speed integer
);


ALTER TABLE mir.speed_test OWNER TO postgres;

--
-- TOC entry 16377 (class 0 OID 0)
-- Dependencies: 972
-- Name: COLUMN speed_test.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN speed_test.people IS 'сссылка на пользователя';


--
-- TOC entry 16378 (class 0 OID 0)
-- Dependencies: 972
-- Name: COLUMN speed_test.test_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN speed_test.test_date IS 'время теста';


--
-- TOC entry 16379 (class 0 OID 0)
-- Dependencies: 972
-- Name: COLUMN speed_test.js_speed; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN speed_test.js_speed IS 'общее время работы в мс';


--
-- TOC entry 16380 (class 0 OID 0)
-- Dependencies: 972
-- Name: COLUMN speed_test.connection_speed; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN speed_test.connection_speed IS 'скорость канала в кбит/с';


--
-- TOC entry 973 (class 1259 OID 21892)
-- Dependencies: 14
-- Name: stacionar_card_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stacionar_card_info (
    oid character(36) NOT NULL
);


ALTER TABLE mir.stacionar_card_info OWNER TO postgres;

--
-- TOC entry 16381 (class 0 OID 0)
-- Dependencies: 973
-- Name: TABLE stacionar_card_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stacionar_card_info IS 'stacionar_card_info';


--
-- TOC entry 16382 (class 0 OID 0)
-- Dependencies: 973
-- Name: COLUMN stacionar_card_info.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_card_info.oid IS 'oid';


--
-- TOC entry 974 (class 1259 OID 21895)
-- Dependencies: 7392 14
-- Name: stacionar_operations; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stacionar_operations (
    oid character(36) NOT NULL,
    mdoc character(36) NOT NULL,
    begin_date timestamp without time zone,
    end_date timestamp without time zone,
    operation_time timestamp without time zone,
    operation_type character(36) NOT NULL,
    complication character(36),
    anesthesia character(36),
    endocrinology_app boolean,
    laser_app boolean,
    cryogen_app boolean,
    operator character(36) NOT NULL,
    register character(36) NOT NULL,
    sysdate date DEFAULT ('now'::text)::date
);


ALTER TABLE mir.stacionar_operations OWNER TO postgres;

--
-- TOC entry 16383 (class 0 OID 0)
-- Dependencies: 974
-- Name: TABLE stacionar_operations; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stacionar_operations IS 'Таблица хранения данных о хирургических операциях в стационаре';


--
-- TOC entry 16384 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.oid IS 'oid';


--
-- TOC entry 16385 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.mdoc IS 'mdoc';


--
-- TOC entry 16386 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.begin_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.begin_date IS 'begin_date';


--
-- TOC entry 16387 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.end_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.end_date IS 'end_date';


--
-- TOC entry 16388 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.operation_time; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.operation_time IS 'operation_time';


--
-- TOC entry 16389 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.operation_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.operation_type IS 'operation_type';


--
-- TOC entry 16390 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.complication; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.complication IS 'complication';


--
-- TOC entry 16391 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.anesthesia; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.anesthesia IS '	
anesthesia';


--
-- TOC entry 16392 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.endocrinology_app; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.endocrinology_app IS 'endocrinology_app';


--
-- TOC entry 16393 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.laser_app; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.laser_app IS 'laser_app';


--
-- TOC entry 16394 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.cryogen_app; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.cryogen_app IS 'cryogen_app';


--
-- TOC entry 16395 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.operator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.operator IS 'operator';


--
-- TOC entry 16396 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.register; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.register IS 'register';


--
-- TOC entry 16397 (class 0 OID 0)
-- Dependencies: 974
-- Name: COLUMN stacionar_operations.sysdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_operations.sysdate IS 'sysdate';


--
-- TOC entry 975 (class 1259 OID 21899)
-- Dependencies: 7393 7394 14
-- Name: stacionar_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stacionar_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_stacionar_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.stacionar_type OWNER TO postgres;

--
-- TOC entry 16398 (class 0 OID 0)
-- Dependencies: 975
-- Name: TABLE stacionar_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stacionar_type IS 'Тип стационара';


--
-- TOC entry 16399 (class 0 OID 0)
-- Dependencies: 975
-- Name: COLUMN stacionar_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_type.oid IS 'oid';


--
-- TOC entry 16400 (class 0 OID 0)
-- Dependencies: 975
-- Name: COLUMN stacionar_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_type.name IS 'name';


--
-- TOC entry 16401 (class 0 OID 0)
-- Dependencies: 975
-- Name: COLUMN stacionar_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16402 (class 0 OID 0)
-- Dependencies: 975
-- Name: COLUMN stacionar_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16403 (class 0 OID 0)
-- Dependencies: 975
-- Name: COLUMN stacionar_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stacionar_type.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 976 (class 1259 OID 21907)
-- Dependencies: 7395 14
-- Name: stafflist; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stafflist (
    oid character(36) NOT NULL,
    post character(36) NOT NULL,
    otdel character(36) NOT NULL,
    stafflist_header character(36),
    staff_number numeric(15,2) DEFAULT 0 NOT NULL,
    wages numeric(15,2),
    premium numeric(15,2),
    description character varying(255)
);


ALTER TABLE mir.stafflist OWNER TO postgres;

--
-- TOC entry 16404 (class 0 OID 0)
-- Dependencies: 976
-- Name: TABLE stafflist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stafflist IS 'штатное расписание';


--
-- TOC entry 16405 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.oid IS 'oid';


--
-- TOC entry 16406 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.post; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.post IS 'post';


--
-- TOC entry 16407 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.otdel IS 'otdel';


--
-- TOC entry 16408 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.stafflist_header; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.stafflist_header IS 'stafflist_header';


--
-- TOC entry 16409 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.staff_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.staff_number IS 'Количество по штату';


--
-- TOC entry 16410 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.wages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.wages IS 'Тарифная ставка, оклад';


--
-- TOC entry 16411 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.premium; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.premium IS 'Надбавка';


--
-- TOC entry 16412 (class 0 OID 0)
-- Dependencies: 976
-- Name: COLUMN stafflist.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist.description IS 'описание';


--
-- TOC entry 977 (class 1259 OID 21911)
-- Dependencies: 14
-- Name: stafflist_header; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stafflist_header (
    oid character(36) NOT NULL,
    order_number integer,
    datebegin timestamp(0) without time zone NOT NULL,
    dateend timestamp(0) without time zone,
    order_date timestamp(0) without time zone
);


ALTER TABLE mir.stafflist_header OWNER TO postgres;

--
-- TOC entry 16413 (class 0 OID 0)
-- Dependencies: 977
-- Name: TABLE stafflist_header; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stafflist_header IS 'штатное расписание-заголовок';


--
-- TOC entry 16414 (class 0 OID 0)
-- Dependencies: 977
-- Name: COLUMN stafflist_header.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist_header.oid IS 'oid';


--
-- TOC entry 16415 (class 0 OID 0)
-- Dependencies: 977
-- Name: COLUMN stafflist_header.order_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stafflist_header.order_number IS 'Приказ №';


--
-- TOC entry 978 (class 1259 OID 21914)
-- Dependencies: 14
-- Name: standart_gosp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE standart_gosp (
    oid character(36) NOT NULL,
    profile character(36) NOT NULL,
    lpu character(36) NOT NULL
);


ALTER TABLE mir.standart_gosp OWNER TO postgres;

--
-- TOC entry 16416 (class 0 OID 0)
-- Dependencies: 978
-- Name: TABLE standart_gosp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE standart_gosp IS 'Стандарты на госпитализацию';


--
-- TOC entry 16417 (class 0 OID 0)
-- Dependencies: 978
-- Name: COLUMN standart_gosp.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp.oid IS 'ID';


--
-- TOC entry 16418 (class 0 OID 0)
-- Dependencies: 978
-- Name: COLUMN standart_gosp.profile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp.profile IS 'ПРОФИЛЬ';


--
-- TOC entry 16419 (class 0 OID 0)
-- Dependencies: 978
-- Name: COLUMN standart_gosp.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp.lpu IS 'ЛПУ';


--
-- TOC entry 979 (class 1259 OID 21917)
-- Dependencies: 14
-- Name: standart_gosp_mkb; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE standart_gosp_mkb (
    oid character(36) NOT NULL,
    oid_standart character(36) NOT NULL,
    mkb numeric(15,0) NOT NULL
);


ALTER TABLE mir.standart_gosp_mkb OWNER TO postgres;

--
-- TOC entry 16420 (class 0 OID 0)
-- Dependencies: 979
-- Name: TABLE standart_gosp_mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE standart_gosp_mkb IS 'связь стандартов на госпитализацию с диагнозами (МКБ 10)';


--
-- TOC entry 16421 (class 0 OID 0)
-- Dependencies: 979
-- Name: COLUMN standart_gosp_mkb.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_mkb.oid IS 'ID';


--
-- TOC entry 16422 (class 0 OID 0)
-- Dependencies: 979
-- Name: COLUMN standart_gosp_mkb.oid_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_mkb.oid_standart IS 'ID СТАНДАРТА';


--
-- TOC entry 16423 (class 0 OID 0)
-- Dependencies: 979
-- Name: COLUMN standart_gosp_mkb.mkb; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_mkb.mkb IS 'КОД МКБ';


--
-- TOC entry 980 (class 1259 OID 21920)
-- Dependencies: 14
-- Name: standart_gosp_service; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE standart_gosp_service (
    oid character(36) NOT NULL,
    oid_standart character(36) NOT NULL,
    service character(36) NOT NULL,
    isdop numeric NOT NULL
);


ALTER TABLE mir.standart_gosp_service OWNER TO postgres;

--
-- TOC entry 16424 (class 0 OID 0)
-- Dependencies: 980
-- Name: TABLE standart_gosp_service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE standart_gosp_service IS 'услуги в рамках стандартов на госпитализацию';


--
-- TOC entry 16425 (class 0 OID 0)
-- Dependencies: 980
-- Name: COLUMN standart_gosp_service.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_service.oid IS 'ID';


--
-- TOC entry 16426 (class 0 OID 0)
-- Dependencies: 980
-- Name: COLUMN standart_gosp_service.oid_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_service.oid_standart IS 'ID СТАНДАРТА';


--
-- TOC entry 16427 (class 0 OID 0)
-- Dependencies: 980
-- Name: COLUMN standart_gosp_service.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_service.service IS 'ID ИССЛЕДОВАНИЯ';


--
-- TOC entry 16428 (class 0 OID 0)
-- Dependencies: 980
-- Name: COLUMN standart_gosp_service.isdop; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_gosp_service.isdop IS 'ЯВЛЯЕТСЯ НЕОБЯЗАТЕЛЬНЫМ (1 - ДА, 0 - НЕТ)';


--
-- TOC entry 981 (class 1259 OID 21926)
-- Dependencies: 14
-- Name: standart_med_help; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE standart_med_help (
    id character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.standart_med_help OWNER TO postgres;

--
-- TOC entry 16429 (class 0 OID 0)
-- Dependencies: 981
-- Name: TABLE standart_med_help; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE standart_med_help IS 'Вид диагноза (сопутствующий, основной). Author: Nakorjakov';


--
-- TOC entry 16430 (class 0 OID 0)
-- Dependencies: 981
-- Name: COLUMN standart_med_help.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_med_help.id IS 'Код';


--
-- TOC entry 16431 (class 0 OID 0)
-- Dependencies: 981
-- Name: COLUMN standart_med_help.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN standart_med_help.name IS 'Название';


--
-- TOC entry 982 (class 1259 OID 21929)
-- Dependencies: 7396 7397 7398 7399 7400 7401 14
-- Name: statticket; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE statticket (
    id character(36) NOT NULL,
    empo_id character(36),
    empc_id character(36),
    idoc_id character(36),
    result_id character(36),
    refer_id character(36),
    subresult_id character(36),
    med_help_id character(36),
    refer_num character varying(255),
    refer_date date,
    otdel character(36),
    defects numeric(1,0) DEFAULT 0,
    isalcohol numeric(1,0) DEFAULT 0,
    die_reason character varying,
    die_reason_mkb_10 character(36),
    aids boolean,
    rw boolean,
    expell_date timestamp without time zone,
    sign boolean,
    sign_sotr character(36),
    trauma character(36),
    child_number integer,
    reason_late character(36),
    export_foms numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_statticket$defects" CHECK (((defects IS NULL) OR ((defects >= (0)::numeric) AND (defects <= (1)::numeric)))),
    CONSTRAINT "ck_statticket$export_foms" CHECK (((export_foms IS NULL) OR ((export_foms >= (0)::numeric) AND (export_foms <= (1)::numeric)))),
    CONSTRAINT "ck_statticket$isalcohol" CHECK (((isalcohol IS NULL) OR ((isalcohol >= (0)::numeric) AND (isalcohol <= (1)::numeric))))
);


ALTER TABLE mir.statticket OWNER TO postgres;

--
-- TOC entry 16432 (class 0 OID 0)
-- Dependencies: 982
-- Name: TABLE statticket; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE statticket IS 'Статталон для использования в виде аналога ambticket.';


--
-- TOC entry 16433 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.id IS 'SEQUENCE=[SQ_VISIT]';


--
-- TOC entry 16434 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.empo_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.empo_id IS 'Сотрудник, открывший талон';


--
-- TOC entry 16435 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.empc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.empc_id IS 'Сотрудник, закрывший талон';


--
-- TOC entry 16436 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.idoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.idoc_id IS 'Полис (INSURANCE.ID)';


--
-- TOC entry 16437 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.result_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.result_id IS 'Результат лечения (TIСK_RES.ID)';


--
-- TOC entry 16438 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.refer_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.refer_id IS 'Направившее учреждение COMPANY.ID';


--
-- TOC entry 16439 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.subresult_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.subresult_id IS 'Дополнительный результат лечения (TICK_SUBRES.ID)';


--
-- TOC entry 16440 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.med_help_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.med_help_id IS 'Стандарт медицинской помощи (STANDART_MED_HELP.ID)';


--
-- TOC entry 16441 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.refer_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.refer_num IS 'номер направления из направившего учреждения';


--
-- TOC entry 16442 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.refer_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.refer_date IS 'дата направления из направившего учреждения';


--
-- TOC entry 16443 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.otdel IS 'otdel';


--
-- TOC entry 16444 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.defects; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.defects IS 'Присутствуют дефекты';


--
-- TOC entry 16445 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.isalcohol; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.isalcohol IS 'Находился в алкогольном опьянении';


--
-- TOC entry 16446 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.die_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.die_reason IS 'Причина смерти';


--
-- TOC entry 16447 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.die_reason_mkb_10; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.die_reason_mkb_10 IS 'Причина смерти МКБ10';


--
-- TOC entry 16448 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.aids; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.aids IS 'обследование Aids для статкарты';


--
-- TOC entry 16449 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.rw; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.rw IS 'обследование RW для статкарты';


--
-- TOC entry 16450 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.expell_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.expell_date IS 'Дата выписки';


--
-- TOC entry 16451 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.sign; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.sign IS 'Подписана ли статкарта';


--
-- TOC entry 16452 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.sign_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.sign_sotr IS 'Сотрудник, подписавший карту';


--
-- TOC entry 16453 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.trauma; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.trauma IS 'Травма';


--
-- TOC entry 16454 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.child_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.child_number IS 'номер ребенка без государственной регистрации';


--
-- TOC entry 16455 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.reason_late; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.reason_late IS 'тип опоздания';


--
-- TOC entry 16456 (class 0 OID 0)
-- Dependencies: 982
-- Name: COLUMN statticket.export_foms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN statticket.export_foms IS 'Признак выгруженноси в ФОМС. Блокирует отмену подписи.';


--
-- TOC entry 983 (class 1259 OID 21941)
-- Dependencies: 14
-- Name: stronggroups; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE stronggroups (
    id integer NOT NULL,
    name character varying(1024)
);


ALTER TABLE mir.stronggroups OWNER TO postgres;

--
-- TOC entry 16457 (class 0 OID 0)
-- Dependencies: 983
-- Name: TABLE stronggroups; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE stronggroups IS 'Сильнодействующие и ядовитые вещества';


--
-- TOC entry 16458 (class 0 OID 0)
-- Dependencies: 983
-- Name: COLUMN stronggroups.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stronggroups.id IS 'Первичный ключ';


--
-- TOC entry 16459 (class 0 OID 0)
-- Dependencies: 983
-- Name: COLUMN stronggroups.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN stronggroups.name IS 'Название группы СДиЯВ';


--
-- TOC entry 984 (class 1259 OID 21947)
-- Dependencies: 7402 7403 14
-- Name: subordination_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE subordination_type (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_subordination_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.subordination_type OWNER TO postgres;

--
-- TOC entry 16460 (class 0 OID 0)
-- Dependencies: 984
-- Name: TABLE subordination_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE subordination_type IS 'категория подчиненности';


--
-- TOC entry 16461 (class 0 OID 0)
-- Dependencies: 984
-- Name: COLUMN subordination_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN subordination_type.oid IS 'oid';


--
-- TOC entry 16462 (class 0 OID 0)
-- Dependencies: 984
-- Name: COLUMN subordination_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN subordination_type.name IS 'name';


--
-- TOC entry 16463 (class 0 OID 0)
-- Dependencies: 984
-- Name: COLUMN subordination_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN subordination_type.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16464 (class 0 OID 0)
-- Dependencies: 984
-- Name: COLUMN subordination_type.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN subordination_type.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16465 (class 0 OID 0)
-- Dependencies: 984
-- Name: COLUMN subordination_type.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN subordination_type.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 985 (class 1259 OID 21955)
-- Dependencies: 7404 7405 14
-- Name: supreme_department; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE supreme_department (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_supreme_department$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.supreme_department OWNER TO postgres;

--
-- TOC entry 16466 (class 0 OID 0)
-- Dependencies: 985
-- Name: TABLE supreme_department; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE supreme_department IS 'ведомственная принадлежность';


--
-- TOC entry 16467 (class 0 OID 0)
-- Dependencies: 985
-- Name: COLUMN supreme_department.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN supreme_department.oid IS 'oid';


--
-- TOC entry 16468 (class 0 OID 0)
-- Dependencies: 985
-- Name: COLUMN supreme_department.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN supreme_department.name IS 'name';


--
-- TOC entry 16469 (class 0 OID 0)
-- Dependencies: 985
-- Name: COLUMN supreme_department.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN supreme_department.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16470 (class 0 OID 0)
-- Dependencies: 985
-- Name: COLUMN supreme_department.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN supreme_department.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16471 (class 0 OID 0)
-- Dependencies: 985
-- Name: COLUMN supreme_department.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN supreme_department.status IS 'Статусы:
0-актуальный
1-предназначен для добавления
2-предназначен для редактрования
3-предназначен для удаления
4-удален';


--
-- TOC entry 986 (class 1259 OID 21963)
-- Dependencies: 14
-- Name: synon_iic; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE synon_iic (
    synon_id bigint NOT NULL,
    iic_id bigint NOT NULL
);


ALTER TABLE mir.synon_iic OWNER TO postgres;

--
-- TOC entry 987 (class 1259 OID 21966)
-- Dependencies: 14
-- Name: sysrole; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysrole (
    oid character(36) NOT NULL
);


ALTER TABLE mir.sysrole OWNER TO postgres;

--
-- TOC entry 16472 (class 0 OID 0)
-- Dependencies: 987
-- Name: TABLE sysrole; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysrole IS 'SYSROLE';


--
-- TOC entry 16473 (class 0 OID 0)
-- Dependencies: 987
-- Name: COLUMN sysrole.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysrole.oid IS 'oid';


--
-- TOC entry 988 (class 1259 OID 21969)
-- Dependencies: 14
-- Name: system_presctemplatedetail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE system_presctemplatedetail (
    oid character(36) NOT NULL,
    presctype character(36) NOT NULL,
    system_template_oid character(36) NOT NULL
);


ALTER TABLE mir.system_presctemplatedetail OWNER TO postgres;

--
-- TOC entry 16474 (class 0 OID 0)
-- Dependencies: 988
-- Name: TABLE system_presctemplatedetail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE system_presctemplatedetail IS 'Таблица привязки шаблона к кназначениям.';


--
-- TOC entry 16475 (class 0 OID 0)
-- Dependencies: 988
-- Name: COLUMN system_presctemplatedetail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_presctemplatedetail.oid IS 'ID';


--
-- TOC entry 16476 (class 0 OID 0)
-- Dependencies: 988
-- Name: COLUMN system_presctemplatedetail.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_presctemplatedetail.presctype IS 'ID Presctype';


--
-- TOC entry 16477 (class 0 OID 0)
-- Dependencies: 988
-- Name: COLUMN system_presctemplatedetail.system_template_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_presctemplatedetail.system_template_oid IS 'ID Template';


--
-- TOC entry 989 (class 1259 OID 21972)
-- Dependencies: 14
-- Name: system_protocoltemplate; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE system_protocoltemplate (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    text text
);


ALTER TABLE mir.system_protocoltemplate OWNER TO postgres;

--
-- TOC entry 16478 (class 0 OID 0)
-- Dependencies: 989
-- Name: TABLE system_protocoltemplate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE system_protocoltemplate IS 'system_protocoltemplate';


--
-- TOC entry 16479 (class 0 OID 0)
-- Dependencies: 989
-- Name: COLUMN system_protocoltemplate.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_protocoltemplate.oid IS 'oid';


--
-- TOC entry 16480 (class 0 OID 0)
-- Dependencies: 989
-- Name: COLUMN system_protocoltemplate.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_protocoltemplate.name IS 'name';


--
-- TOC entry 16481 (class 0 OID 0)
-- Dependencies: 989
-- Name: COLUMN system_protocoltemplate.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN system_protocoltemplate.text IS 'text';


--
-- TOC entry 990 (class 1259 OID 21978)
-- Dependencies: 14
-- Name: systemlink; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE systemlink (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    link character varying(4000),
    cssclass character varying(4000),
    orderby numeric NOT NULL
);


ALTER TABLE mir.systemlink OWNER TO postgres;

--
-- TOC entry 16482 (class 0 OID 0)
-- Dependencies: 990
-- Name: TABLE systemlink; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE systemlink IS 'Стили для главной страницы RIS по регионам';


--
-- TOC entry 16483 (class 0 OID 0)
-- Dependencies: 990
-- Name: COLUMN systemlink.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemlink.oid IS 'oid';


--
-- TOC entry 16484 (class 0 OID 0)
-- Dependencies: 990
-- Name: COLUMN systemlink.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemlink.name IS 'name';


--
-- TOC entry 16485 (class 0 OID 0)
-- Dependencies: 990
-- Name: COLUMN systemlink.link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemlink.link IS 'link';


--
-- TOC entry 16486 (class 0 OID 0)
-- Dependencies: 990
-- Name: COLUMN systemlink.cssclass; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemlink.cssclass IS 'cssclass';


--
-- TOC entry 16487 (class 0 OID 0)
-- Dependencies: 990
-- Name: COLUMN systemlink.orderby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemlink.orderby IS 'orderby';


--
-- TOC entry 991 (class 1259 OID 21984)
-- Dependencies: 7406 7407 14
-- Name: systemsettings; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE systemsettings (
    oid character(36) NOT NULL,
    param character varying(255),
    valuepar character varying,
    description character varying(255),
    forall numeric(1,0) DEFAULT 0,
    CONSTRAINT "ck_systemse$forall" CHECK (((forall IS NULL) OR ((forall >= (0)::numeric) AND (forall <= (1)::numeric))))
);


ALTER TABLE mir.systemsettings OWNER TO postgres;

--
-- TOC entry 16488 (class 0 OID 0)
-- Dependencies: 991
-- Name: TABLE systemsettings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE systemsettings IS 'systemsettings';


--
-- TOC entry 16489 (class 0 OID 0)
-- Dependencies: 991
-- Name: COLUMN systemsettings.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemsettings.oid IS 'oid';


--
-- TOC entry 16490 (class 0 OID 0)
-- Dependencies: 991
-- Name: COLUMN systemsettings.param; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemsettings.param IS 'param';


--
-- TOC entry 16491 (class 0 OID 0)
-- Dependencies: 991
-- Name: COLUMN systemsettings.valuepar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemsettings.valuepar IS 'valuepar';


--
-- TOC entry 16492 (class 0 OID 0)
-- Dependencies: 991
-- Name: COLUMN systemsettings.description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemsettings.description IS 'description';


--
-- TOC entry 16493 (class 0 OID 0)
-- Dependencies: 991
-- Name: COLUMN systemsettings.forall; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN systemsettings.forall IS 'forall';


--
-- TOC entry 992 (class 1259 OID 21992)
-- Dependencies: 7408 7409 7410 7411 14
-- Name: sysuser; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser (
    oid character(36) NOT NULL,
    passwordchagedate date,
    storedpassword character varying(100),
    username character varying(100),
    changepasswordonfirstlogon numeric(1,0),
    isactive numeric(1,0),
    codeuser character varying(100),
    isadministrator numeric(1,0),
    isfulladministrator numeric(1,0),
    isaspuser numeric(1,0) DEFAULT 1,
    readmessages date DEFAULT ('now'::text)::date,
    showinsite numeric(1,0),
    foto character(1),
    tabelnumber character varying(255),
    dlo_sotr character varying(64),
    code_disabled numeric(1,0) DEFAULT 0,
    thumbprint character varying(255),
    CONSTRAINT "ck_sysuser$code_disabled" CHECK (((code_disabled IS NULL) OR ((code_disabled >= (0)::numeric) AND (code_disabled <= (1)::numeric))))
);


ALTER TABLE mir.sysuser OWNER TO postgres;

--
-- TOC entry 16494 (class 0 OID 0)
-- Dependencies: 992
-- Name: TABLE sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser IS 'Чуваки (пользователи)';


--
-- TOC entry 16495 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.oid IS 'oid';


--
-- TOC entry 16496 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.passwordchagedate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.passwordchagedate IS 'passwordchagedate';


--
-- TOC entry 16497 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.storedpassword; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.storedpassword IS 'storedpassword';


--
-- TOC entry 16498 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.username; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.username IS 'username';


--
-- TOC entry 16499 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.changepasswordonfirstlogon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.changepasswordonfirstlogon IS 'changepasswordonfirstlogon';


--
-- TOC entry 16500 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.isactive; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.isactive IS 'isactive';


--
-- TOC entry 16501 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.codeuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.codeuser IS 'codeuser';


--
-- TOC entry 16502 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.isadministrator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.isadministrator IS 'isadministrator';


--
-- TOC entry 16503 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.isfulladministrator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.isfulladministrator IS 'isfulladministrator';


--
-- TOC entry 16504 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.isaspuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.isaspuser IS 'isaspuser';


--
-- TOC entry 16505 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.readmessages; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.readmessages IS 'readmessages';


--
-- TOC entry 16506 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.showinsite; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.showinsite IS 'showinsite';


--
-- TOC entry 16507 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.foto; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.foto IS 'foto';


--
-- TOC entry 16508 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.tabelnumber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.tabelnumber IS 'табельный номер';


--
-- TOC entry 16509 (class 0 OID 0)
-- Dependencies: 992
-- Name: COLUMN sysuser.dlo_sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser.dlo_sotr IS 'Определение сотрудника, работающего в аптеках';


--
-- TOC entry 993 (class 1259 OID 22002)
-- Dependencies: 14
-- Name: sysuser_audit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_audit (
    oid character(36) NOT NULL,
    sysuser character(36),
    in_dt timestamp without time zone,
    out_dt timestamp without time zone
);


ALTER TABLE mir.sysuser_audit OWNER TO postgres;

--
-- TOC entry 16510 (class 0 OID 0)
-- Dependencies: 993
-- Name: TABLE sysuser_audit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_audit IS 'аудит входа-выхода';


--
-- TOC entry 16511 (class 0 OID 0)
-- Dependencies: 993
-- Name: COLUMN sysuser_audit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_audit.oid IS 'oid';


--
-- TOC entry 16512 (class 0 OID 0)
-- Dependencies: 993
-- Name: COLUMN sysuser_audit.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_audit.sysuser IS 'sysuser';


--
-- TOC entry 16513 (class 0 OID 0)
-- Dependencies: 993
-- Name: COLUMN sysuser_audit.in_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_audit.in_dt IS 'in_dt';


--
-- TOC entry 16514 (class 0 OID 0)
-- Dependencies: 993
-- Name: COLUMN sysuser_audit.out_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_audit.out_dt IS 'out_dt';


--
-- TOC entry 994 (class 1259 OID 22005)
-- Dependencies: 6776 14
-- Name: sysuser_geo; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW sysuser_geo AS
    SELECT p.oid, p.lastname, p.firstname, p.middlename FROM person p, sysuser s WHERE (p.oid = s.oid);


ALTER TABLE mir.sysuser_geo OWNER TO postgres;

--
-- TOC entry 16515 (class 0 OID 0)
-- Dependencies: 994
-- Name: VIEW sysuser_geo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW sysuser_geo IS 'SYSUSER_GEO';


--
-- TOC entry 995 (class 1259 OID 22009)
-- Dependencies: 6777 14
-- Name: sysuser_lpu; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW sysuser_lpu AS
    SELECT DISTINCT s.sysuser, o.lpu FROM sotr s, otdel o WHERE (s.otdel = o.oid);


ALTER TABLE mir.sysuser_lpu OWNER TO postgres;

--
-- TOC entry 16516 (class 0 OID 0)
-- Dependencies: 995
-- Name: VIEW sysuser_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW sysuser_lpu IS 'SYSUSER_LPU';


--
-- TOC entry 996 (class 1259 OID 22013)
-- Dependencies: 14
-- Name: sysuser_lpu_right2; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_lpu_right2 (
    lpu character(36) NOT NULL,
    sysuser character(36) NOT NULL
);


ALTER TABLE mir.sysuser_lpu_right2 OWNER TO postgres;

--
-- TOC entry 16517 (class 0 OID 0)
-- Dependencies: 996
-- Name: TABLE sysuser_lpu_right2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_lpu_right2 IS 'С какими ЛПУ может работать пользователь';


--
-- TOC entry 16518 (class 0 OID 0)
-- Dependencies: 996
-- Name: COLUMN sysuser_lpu_right2.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_lpu_right2.lpu IS 'lpu';


--
-- TOC entry 16519 (class 0 OID 0)
-- Dependencies: 996
-- Name: COLUMN sysuser_lpu_right2.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_lpu_right2.sysuser IS 'sysuser';


--
-- TOC entry 997 (class 1259 OID 22016)
-- Dependencies: 14
-- Name: sysuser_otdel_right2; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_otdel_right2 (
    otdel character(36) NOT NULL,
    sysuser character(36) NOT NULL
);


ALTER TABLE mir.sysuser_otdel_right2 OWNER TO postgres;

--
-- TOC entry 16520 (class 0 OID 0)
-- Dependencies: 997
-- Name: TABLE sysuser_otdel_right2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_otdel_right2 IS 'с какими подразделениями может работать пользователь';


--
-- TOC entry 16521 (class 0 OID 0)
-- Dependencies: 997
-- Name: COLUMN sysuser_otdel_right2.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_otdel_right2.otdel IS 'otdel';


--
-- TOC entry 16522 (class 0 OID 0)
-- Dependencies: 997
-- Name: COLUMN sysuser_otdel_right2.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_otdel_right2.sysuser IS 'sysuser';


--
-- TOC entry 998 (class 1259 OID 22019)
-- Dependencies: 14
-- Name: sysuser_pharmacy; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_pharmacy (
    oid character(36) NOT NULL,
    drugstore character(36) NOT NULL
);


ALTER TABLE mir.sysuser_pharmacy OWNER TO postgres;

--
-- TOC entry 16523 (class 0 OID 0)
-- Dependencies: 998
-- Name: TABLE sysuser_pharmacy; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_pharmacy IS 'sysuser_pharmacy';


--
-- TOC entry 16524 (class 0 OID 0)
-- Dependencies: 998
-- Name: COLUMN sysuser_pharmacy.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_pharmacy.oid IS 'Идентификатор пользователя';


--
-- TOC entry 16525 (class 0 OID 0)
-- Dependencies: 998
-- Name: COLUMN sysuser_pharmacy.drugstore; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_pharmacy.drugstore IS 'Идентификатор аптеки';


--
-- TOC entry 999 (class 1259 OID 22022)
-- Dependencies: 14
-- Name: sysuser_presctype; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_presctype (
    oid character(36) NOT NULL,
    sysusers character(36),
    presctypes character(36)
);


ALTER TABLE mir.sysuser_presctype OWNER TO postgres;

--
-- TOC entry 16526 (class 0 OID 0)
-- Dependencies: 999
-- Name: TABLE sysuser_presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_presctype IS 'Связь пользователя и специальности';


--
-- TOC entry 16527 (class 0 OID 0)
-- Dependencies: 999
-- Name: COLUMN sysuser_presctype.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_presctype.oid IS 'oid';


--
-- TOC entry 16528 (class 0 OID 0)
-- Dependencies: 999
-- Name: COLUMN sysuser_presctype.sysusers; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_presctype.sysusers IS 'sysusers';


--
-- TOC entry 16529 (class 0 OID 0)
-- Dependencies: 999
-- Name: COLUMN sysuser_presctype.presctypes; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_presctype.presctypes IS 'presctypes';


--
-- TOC entry 1000 (class 1259 OID 22025)
-- Dependencies: 14
-- Name: sysuser_region; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_region (
    oid character(36) NOT NULL,
    sysuser character(36),
    region character(36)
);


ALTER TABLE mir.sysuser_region OWNER TO postgres;

--
-- TOC entry 16530 (class 0 OID 0)
-- Dependencies: 1000
-- Name: TABLE sysuser_region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_region IS 'принадлежность пользователя к региону';


--
-- TOC entry 16531 (class 0 OID 0)
-- Dependencies: 1000
-- Name: COLUMN sysuser_region.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_region.oid IS 'oid';


--
-- TOC entry 16532 (class 0 OID 0)
-- Dependencies: 1000
-- Name: COLUMN sysuser_region.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_region.sysuser IS 'sysuser';


--
-- TOC entry 16533 (class 0 OID 0)
-- Dependencies: 1000
-- Name: COLUMN sysuser_region.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_region.region IS 'region';


--
-- TOC entry 1001 (class 1259 OID 22028)
-- Dependencies: 14
-- Name: sysuser_right2; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_right2 (
    sysuser character(36) NOT NULL,
    "right" character(36) NOT NULL
);


ALTER TABLE mir.sysuser_right2 OWNER TO postgres;

--
-- TOC entry 16534 (class 0 OID 0)
-- Dependencies: 1001
-- Name: TABLE sysuser_right2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_right2 IS 'Связка прав и sysuser';


--
-- TOC entry 16535 (class 0 OID 0)
-- Dependencies: 1001
-- Name: COLUMN sysuser_right2.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_right2.sysuser IS 'sysuser';


--
-- TOC entry 16536 (class 0 OID 0)
-- Dependencies: 1001
-- Name: COLUMN sysuser_right2."right"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_right2."right" IS 'right';


--
-- TOC entry 1002 (class 1259 OID 22031)
-- Dependencies: 14
-- Name: sysuser_role2; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuser_role2 (
    sysuser character(36) NOT NULL,
    role character(36) NOT NULL
);


ALTER TABLE mir.sysuser_role2 OWNER TO postgres;

--
-- TOC entry 16537 (class 0 OID 0)
-- Dependencies: 1002
-- Name: TABLE sysuser_role2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuser_role2 IS 'Связка сотрудника и ролей';


--
-- TOC entry 16538 (class 0 OID 0)
-- Dependencies: 1002
-- Name: COLUMN sysuser_role2.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_role2.sysuser IS 'sysuser';


--
-- TOC entry 16539 (class 0 OID 0)
-- Dependencies: 1002
-- Name: COLUMN sysuser_role2.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuser_role2.role IS 'role';


--
-- TOC entry 1003 (class 1259 OID 22034)
-- Dependencies: 14
-- Name: sysuserblock; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuserblock (
    oid character(36) NOT NULL,
    startblock date,
    login character varying(100)
);


ALTER TABLE mir.sysuserblock OWNER TO postgres;

--
-- TOC entry 16540 (class 0 OID 0)
-- Dependencies: 1003
-- Name: TABLE sysuserblock; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuserblock IS 'блокировка пользователей';


--
-- TOC entry 16541 (class 0 OID 0)
-- Dependencies: 1003
-- Name: COLUMN sysuserblock.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserblock.oid IS 'oid';


--
-- TOC entry 16542 (class 0 OID 0)
-- Dependencies: 1003
-- Name: COLUMN sysuserblock.startblock; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserblock.startblock IS 'startblock';


--
-- TOC entry 16543 (class 0 OID 0)
-- Dependencies: 1003
-- Name: COLUMN sysuserblock.login; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserblock.login IS 'login';


--
-- TOC entry 1004 (class 1259 OID 22037)
-- Dependencies: 14
-- Name: sysuserusers_sysroleroles; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE sysuserusers_sysroleroles (
    roles character(36),
    users character(36),
    oid character(36) NOT NULL
);


ALTER TABLE mir.sysuserusers_sysroleroles OWNER TO postgres;

--
-- TOC entry 16544 (class 0 OID 0)
-- Dependencies: 1004
-- Name: TABLE sysuserusers_sysroleroles; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE sysuserusers_sysroleroles IS 'права пользователей (роли)';


--
-- TOC entry 16545 (class 0 OID 0)
-- Dependencies: 1004
-- Name: COLUMN sysuserusers_sysroleroles.roles; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserusers_sysroleroles.roles IS 'roles';


--
-- TOC entry 16546 (class 0 OID 0)
-- Dependencies: 1004
-- Name: COLUMN sysuserusers_sysroleroles.users; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserusers_sysroleroles.users IS 'users';


--
-- TOC entry 16547 (class 0 OID 0)
-- Dependencies: 1004
-- Name: COLUMN sysuserusers_sysroleroles.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN sysuserusers_sysroleroles.oid IS 'oid';


--
-- TOC entry 1005 (class 1259 OID 22040)
-- Dependencies: 7412 7413 7414 7415 14
-- Name: tablo; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tablo (
    oid character(36) NOT NULL,
    name character varying(255),
    lpu character(36),
    tablo_type numeric DEFAULT 0 NOT NULL,
    linecount numeric DEFAULT 1 NOT NULL,
    refreshtime numeric DEFAULT 10 NOT NULL,
    note character varying(255),
    linetext character varying(4000),
    lpucreate character(36) NOT NULL,
    css_type numeric DEFAULT 0 NOT NULL,
    code numeric(6,0) NOT NULL
);


ALTER TABLE mir.tablo OWNER TO postgres;

--
-- TOC entry 16548 (class 0 OID 0)
-- Dependencies: 1005
-- Name: TABLE tablo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tablo IS 'Справочник табло by A.Nakorjakov 110204';


--
-- TOC entry 16549 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.oid IS 'oid';


--
-- TOC entry 16550 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.name IS 'name';


--
-- TOC entry 16551 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.lpu IS 'lpu';


--
-- TOC entry 16552 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.tablo_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.tablo_type IS 'tablo_type';


--
-- TOC entry 16553 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.linecount; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.linecount IS 'linecount';


--
-- TOC entry 16554 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.refreshtime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.refreshtime IS 'refreshtime';


--
-- TOC entry 16555 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.note; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.note IS 'note';


--
-- TOC entry 16556 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.linetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.linetext IS 'linetext';


--
-- TOC entry 16557 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.lpucreate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.lpucreate IS 'lpucreate';


--
-- TOC entry 16558 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.css_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.css_type IS 'тип css стиля (0-темн, 1-светл)';


--
-- TOC entry 16559 (class 0 OID 0)
-- Dependencies: 1005
-- Name: COLUMN tablo.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tablo.code IS 'Код ген. автоматически, необходим для поиска нужного терминала';


--
-- TOC entry 1006 (class 1259 OID 22050)
-- Dependencies: 14
-- Name: talonresult; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE talonresult (
    oid character(36) NOT NULL
);


ALTER TABLE mir.talonresult OWNER TO postgres;

--
-- TOC entry 16560 (class 0 OID 0)
-- Dependencies: 1006
-- Name: TABLE talonresult; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE talonresult IS 'Результат обращения';


--
-- TOC entry 16561 (class 0 OID 0)
-- Dependencies: 1006
-- Name: COLUMN talonresult.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN talonresult.oid IS 'oid';


--
-- TOC entry 1007 (class 1259 OID 22053)
-- Dependencies: 7416 7417 14
-- Name: tcrit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tcrit (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    value numeric DEFAULT 1 NOT NULL,
    type numeric NOT NULL,
    show_in_site numeric DEFAULT 1 NOT NULL
);


ALTER TABLE mir.tcrit OWNER TO postgres;

--
-- TOC entry 16562 (class 0 OID 0)
-- Dependencies: 1007
-- Name: TABLE tcrit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tcrit IS 'Критерии оценки работы ЛПУ и врачей';


--
-- TOC entry 16563 (class 0 OID 0)
-- Dependencies: 1007
-- Name: COLUMN tcrit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit.oid IS 'ID';


--
-- TOC entry 16564 (class 0 OID 0)
-- Dependencies: 1007
-- Name: COLUMN tcrit.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit.name IS 'НАЗВАНИЕ КРИТЕРИЯ';


--
-- TOC entry 16565 (class 0 OID 0)
-- Dependencies: 1007
-- Name: COLUMN tcrit.value; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit.value IS 'ВЕС КРИТЕРИЯ';


--
-- TOC entry 16566 (class 0 OID 0)
-- Dependencies: 1007
-- Name: COLUMN tcrit.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit.type IS 'ТИП КРИТЕРИЯ (КРИТЕРИЙ ДЛЯ ВРАЧА ИЛИ ДЛЯ ЛПУ)';


--
-- TOC entry 16567 (class 0 OID 0)
-- Dependencies: 1007
-- Name: COLUMN tcrit.show_in_site; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit.show_in_site IS 'ПОКАЗЫВАТЬ КРИТЕРИЙ НА САЙТЕ';


--
-- TOC entry 1008 (class 1259 OID 22061)
-- Dependencies: 14
-- Name: tcrit_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tcrit_result (
    oid character(36) NOT NULL,
    oid_crit character(36) NOT NULL,
    oid_doctororlpu character(36) NOT NULL,
    result numeric(10,2) NOT NULL,
    review_oid character(36) NOT NULL
);


ALTER TABLE mir.tcrit_result OWNER TO postgres;

--
-- TOC entry 16568 (class 0 OID 0)
-- Dependencies: 1008
-- Name: TABLE tcrit_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tcrit_result IS 'РЕЗУЛЬТАТЫ ОЦЕНОК РАБОТЫ ПО КРИТЕРИЯМ';


--
-- TOC entry 16569 (class 0 OID 0)
-- Dependencies: 1008
-- Name: COLUMN tcrit_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit_result.oid IS 'ID';


--
-- TOC entry 16570 (class 0 OID 0)
-- Dependencies: 1008
-- Name: COLUMN tcrit_result.oid_crit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit_result.oid_crit IS 'ID КРИТЕРИЯ';


--
-- TOC entry 16571 (class 0 OID 0)
-- Dependencies: 1008
-- Name: COLUMN tcrit_result.oid_doctororlpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit_result.oid_doctororlpu IS 'ID ВРАЧА ИЛИ ЛПУ';


--
-- TOC entry 16572 (class 0 OID 0)
-- Dependencies: 1008
-- Name: COLUMN tcrit_result.result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit_result.result IS 'ОЦЕНКА';


--
-- TOC entry 16573 (class 0 OID 0)
-- Dependencies: 1008
-- Name: COLUMN tcrit_result.review_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tcrit_result.review_oid IS 'ID ОТЗЫВА';


--
-- TOC entry 1009 (class 1259 OID 22064)
-- Dependencies: 7418 7419 7420 7421 7422 7423 14
-- Name: terminal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE terminal (
    oid character(36) NOT NULL,
    name character varying(255),
    city character(36),
    lpu character(36),
    isotherdistrict numeric(1,0) DEFAULT 0 NOT NULL,
    ishomevisit numeric(1,0) DEFAULT 0 NOT NULL,
    note character varying(255),
    sysusercreate character(36),
    isprinttalon numeric(1,0) DEFAULT 0 NOT NULL,
    region character(36),
    isdistrictvrach numeric(1,0) DEFAULT 0 NOT NULL,
    ispayment numeric(1,0) DEFAULT 0 NOT NULL,
    code character varying NOT NULL,
    isotherlpu numeric(1,0) DEFAULT 0,
    lpucreate character varying
);


ALTER TABLE mir.terminal OWNER TO postgres;

--
-- TOC entry 16574 (class 0 OID 0)
-- Dependencies: 1009
-- Name: TABLE terminal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE terminal IS 'Справочник терминалов by A.Nakorjakov 110112';


--
-- TOC entry 16575 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.oid IS 'oid';


--
-- TOC entry 16576 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.name IS 'name';


--
-- TOC entry 16577 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.city; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.city IS 'city';


--
-- TOC entry 16578 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.lpu IS 'lpu';


--
-- TOC entry 16579 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.isotherdistrict; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.isotherdistrict IS 'isotherdistrict';


--
-- TOC entry 16580 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.ishomevisit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.ishomevisit IS 'ishomevisit';


--
-- TOC entry 16581 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.note; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.note IS 'note';


--
-- TOC entry 16582 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.sysusercreate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.sysusercreate IS 'sysusercreate';


--
-- TOC entry 16583 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.isprinttalon; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.isprinttalon IS 'isprinttalon';


--
-- TOC entry 16584 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.region IS 'region';


--
-- TOC entry 16585 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.isdistrictvrach; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.isdistrictvrach IS 'isdistrictvrach';


--
-- TOC entry 16586 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.ispayment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.ispayment IS 'ispayment';


--
-- TOC entry 16587 (class 0 OID 0)
-- Dependencies: 1009
-- Name: COLUMN terminal.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN terminal.code IS 'code';


--
-- TOC entry 1010 (class 1259 OID 22076)
-- Dependencies: 14
-- Name: territorialaccessory; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE territorialaccessory (
    oid character(36) NOT NULL,
    lpu character(36),
    dist character(36),
    people character(36)
);


ALTER TABLE mir.territorialaccessory OWNER TO postgres;

--
-- TOC entry 16588 (class 0 OID 0)
-- Dependencies: 1010
-- Name: TABLE territorialaccessory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE territorialaccessory IS 'Принадлежность пациента к участкам';


--
-- TOC entry 16589 (class 0 OID 0)
-- Dependencies: 1010
-- Name: COLUMN territorialaccessory.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territorialaccessory.oid IS 'oid';


--
-- TOC entry 16590 (class 0 OID 0)
-- Dependencies: 1010
-- Name: COLUMN territorialaccessory.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territorialaccessory.lpu IS 'lpu';


--
-- TOC entry 16591 (class 0 OID 0)
-- Dependencies: 1010
-- Name: COLUMN territorialaccessory.dist; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territorialaccessory.dist IS 'dist';


--
-- TOC entry 16592 (class 0 OID 0)
-- Dependencies: 1010
-- Name: COLUMN territorialaccessory.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territorialaccessory.people IS 'people';


--
-- TOC entry 1011 (class 1259 OID 22079)
-- Dependencies: 14
-- Name: territory_kladr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE territory_kladr (
    oid character(36) NOT NULL,
    territory character(36) NOT NULL,
    kladr character(36)
);


ALTER TABLE mir.territory_kladr OWNER TO postgres;

--
-- TOC entry 16593 (class 0 OID 0)
-- Dependencies: 1011
-- Name: TABLE territory_kladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE territory_kladr IS 'TERRITORY_KLADR';


--
-- TOC entry 16594 (class 0 OID 0)
-- Dependencies: 1011
-- Name: COLUMN territory_kladr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_kladr.oid IS 'ID';


--
-- TOC entry 16595 (class 0 OID 0)
-- Dependencies: 1011
-- Name: COLUMN territory_kladr.territory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_kladr.territory IS 'ТЕРРИТОРИЯ';


--
-- TOC entry 16596 (class 0 OID 0)
-- Dependencies: 1011
-- Name: COLUMN territory_kladr.kladr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_kladr.kladr IS 'ID КЛАДРА';


--
-- TOC entry 1012 (class 1259 OID 22082)
-- Dependencies: 7424 7425 14
-- Name: territory_list; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE territory_list (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    area character(36),
    countsmall numeric DEFAULT 0 NOT NULL,
    region character(36) NOT NULL,
    countbig numeric DEFAULT 0 NOT NULL
);


ALTER TABLE mir.territory_list OWNER TO postgres;

--
-- TOC entry 16597 (class 0 OID 0)
-- Dependencies: 1012
-- Name: TABLE territory_list; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE territory_list IS 'TERRITORY_LIST';


--
-- TOC entry 16598 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.oid IS 'ID';


--
-- TOC entry 16599 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.name IS 'НАЗВАНИЕ';


--
-- TOC entry 16600 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.area; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.area IS 'ОКРУГ';


--
-- TOC entry 16601 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.countsmall; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.countsmall IS 'количество детей';


--
-- TOC entry 16602 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.region IS 'РЕГИОН';


--
-- TOC entry 16603 (class 0 OID 0)
-- Dependencies: 1012
-- Name: COLUMN territory_list.countbig; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_list.countbig IS 'количество взрослых';


--
-- TOC entry 1013 (class 1259 OID 22090)
-- Dependencies: 14
-- Name: territory_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE territory_lpu (
    oid character(36) NOT NULL,
    territory character(36) NOT NULL,
    lpu character(36) NOT NULL
);


ALTER TABLE mir.territory_lpu OWNER TO postgres;

--
-- TOC entry 16604 (class 0 OID 0)
-- Dependencies: 1013
-- Name: TABLE territory_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE territory_lpu IS 'TERRITORY_LPU';


--
-- TOC entry 16605 (class 0 OID 0)
-- Dependencies: 1013
-- Name: COLUMN territory_lpu.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_lpu.oid IS 'ID';


--
-- TOC entry 16606 (class 0 OID 0)
-- Dependencies: 1013
-- Name: COLUMN territory_lpu.territory; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_lpu.territory IS 'ТЕРРИТОРИЯ';


--
-- TOC entry 16607 (class 0 OID 0)
-- Dependencies: 1013
-- Name: COLUMN territory_lpu.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territory_lpu.lpu IS 'ЛПУ';


--
-- TOC entry 1014 (class 1259 OID 22093)
-- Dependencies: 14
-- Name: territoryaffilation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE territoryaffilation (
    oid character(36),
    name character varying(255)
);


ALTER TABLE mir.territoryaffilation OWNER TO postgres;

--
-- TOC entry 16608 (class 0 OID 0)
-- Dependencies: 1014
-- Name: TABLE territoryaffilation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE territoryaffilation IS 'TERRITORYAFFILATION';


--
-- TOC entry 16609 (class 0 OID 0)
-- Dependencies: 1014
-- Name: COLUMN territoryaffilation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territoryaffilation.oid IS 'oid';


--
-- TOC entry 16610 (class 0 OID 0)
-- Dependencies: 1014
-- Name: COLUMN territoryaffilation.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN territoryaffilation.name IS 'name';


--
-- TOC entry 1015 (class 1259 OID 22096)
-- Dependencies: 7426 14
-- Name: tib; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tib (
    oid character(36) NOT NULL,
    fk_id character(36),
    sotr_id character(36),
    smedit_id character(36),
    vsmid_id character(36),
    vnum numeric(15,7),
    vchar character varying(4000),
    vdate timestamp without time zone,
    create_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.tib OWNER TO postgres;

--
-- TOC entry 16611 (class 0 OID 0)
-- Dependencies: 1015
-- Name: TABLE tib; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tib IS 'tib';


--
-- TOC entry 16612 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.oid IS 'oid';


--
-- TOC entry 16613 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.fk_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.fk_id IS 'fk_id';


--
-- TOC entry 16614 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.sotr_id IS 'sotr_id';


--
-- TOC entry 16615 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.smedit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.smedit_id IS 'smedit_id';


--
-- TOC entry 16616 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.vsmid_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.vsmid_id IS 'vsmid_id';


--
-- TOC entry 16617 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.vnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.vnum IS 'vnum';


--
-- TOC entry 16618 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.vchar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.vchar IS 'vchar';


--
-- TOC entry 16619 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.vdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.vdate IS 'vdate';


--
-- TOC entry 16620 (class 0 OID 0)
-- Dependencies: 1015
-- Name: COLUMN tib.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib.create_date IS 'create_date';


--
-- TOC entry 1016 (class 1259 OID 22103)
-- Dependencies: 7427 14
-- Name: tib_mdoc; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tib_mdoc (
    oid character(36) NOT NULL,
    fk_id character(36),
    sotr_id character(36),
    smedit_id character(36),
    vsmid_id character(36),
    vnum numeric(15,7),
    vchar character varying(4000),
    vdate timestamp without time zone,
    create_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.tib_mdoc OWNER TO postgres;

--
-- TOC entry 16621 (class 0 OID 0)
-- Dependencies: 1016
-- Name: TABLE tib_mdoc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tib_mdoc IS 'tib_mdoc';


--
-- TOC entry 16622 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.oid IS 'oid';


--
-- TOC entry 16623 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.fk_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.fk_id IS 'fk_id';


--
-- TOC entry 16624 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.sotr_id IS 'sotr_id';


--
-- TOC entry 16625 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.smedit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.smedit_id IS 'smedit_id';


--
-- TOC entry 16626 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.vsmid_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.vsmid_id IS 'vsmid_id';


--
-- TOC entry 16627 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.vnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.vnum IS 'vnum';


--
-- TOC entry 16628 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.vchar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.vchar IS 'vchar';


--
-- TOC entry 16629 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.vdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.vdate IS 'vdate';


--
-- TOC entry 16630 (class 0 OID 0)
-- Dependencies: 1016
-- Name: COLUMN tib_mdoc.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_mdoc.create_date IS 'create_date';


--
-- TOC entry 1017 (class 1259 OID 22110)
-- Dependencies: 7428 14
-- Name: tib_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tib_people (
    oid character(36) NOT NULL,
    fk_id character(36),
    sotr_id character(36),
    smedit_id character(36),
    vsmid_id character(36),
    vnum numeric(15,7),
    vchar character varying(4000),
    vdate timestamp without time zone,
    create_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mir.tib_people OWNER TO postgres;

--
-- TOC entry 16631 (class 0 OID 0)
-- Dependencies: 1017
-- Name: TABLE tib_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tib_people IS 'tib_people';


--
-- TOC entry 16632 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.oid IS 'oid';


--
-- TOC entry 16633 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.fk_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.fk_id IS 'fk_id';


--
-- TOC entry 16634 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.sotr_id IS 'sotr_id';


--
-- TOC entry 16635 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.smedit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.smedit_id IS 'smedit_id';


--
-- TOC entry 16636 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.vsmid_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.vsmid_id IS 'vsmid_id';


--
-- TOC entry 16637 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.vnum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.vnum IS 'vnum';


--
-- TOC entry 16638 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.vchar; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.vchar IS 'vchar';


--
-- TOC entry 16639 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.vdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.vdate IS 'vdate';


--
-- TOC entry 16640 (class 0 OID 0)
-- Dependencies: 1017
-- Name: COLUMN tib_people.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tib_people.create_date IS 'create_date';


--
-- TOC entry 1018 (class 1259 OID 22117)
-- Dependencies: 14
-- Name: tick_res; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tick_res (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    medicalcondition character(36)
);


ALTER TABLE mir.tick_res OWNER TO postgres;

--
-- TOC entry 16641 (class 0 OID 0)
-- Dependencies: 1018
-- Name: TABLE tick_res; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tick_res IS 'Классификатор результатов обращений в поликлинику  Author: A.Nakorjakov';


--
-- TOC entry 16642 (class 0 OID 0)
-- Dependencies: 1018
-- Name: COLUMN tick_res.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_res.oid IS 'SEQUENCE=[MIS.SQ_TICK_RES]';


--
-- TOC entry 16643 (class 0 OID 0)
-- Dependencies: 1018
-- Name: COLUMN tick_res.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_res.name IS 'Название результата обращения';


--
-- TOC entry 16644 (class 0 OID 0)
-- Dependencies: 1018
-- Name: COLUMN tick_res.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_res.foms_code IS 'код ФОМС';


--
-- TOC entry 16645 (class 0 OID 0)
-- Dependencies: 1018
-- Name: COLUMN tick_res.medicalcondition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_res.medicalcondition IS 'условия мп врача';


--
-- TOC entry 1019 (class 1259 OID 22120)
-- Dependencies: 14
-- Name: tick_subres; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tick_subres (
    oid character(36) NOT NULL,
    name character varying(255),
    foms_code integer,
    medicalcondition character(36)
);


ALTER TABLE mir.tick_subres OWNER TO postgres;

--
-- TOC entry 16646 (class 0 OID 0)
-- Dependencies: 1019
-- Name: TABLE tick_subres; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tick_subres IS 'Дополнительный результат амбулаторного талона Author: Kulikovskiy';


--
-- TOC entry 16647 (class 0 OID 0)
-- Dependencies: 1019
-- Name: COLUMN tick_subres.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_subres.oid IS 'ID';


--
-- TOC entry 16648 (class 0 OID 0)
-- Dependencies: 1019
-- Name: COLUMN tick_subres.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_subres.name IS 'Название дополнительного результата';


--
-- TOC entry 16649 (class 0 OID 0)
-- Dependencies: 1019
-- Name: COLUMN tick_subres.foms_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_subres.foms_code IS 'код ФОМС';


--
-- TOC entry 16650 (class 0 OID 0)
-- Dependencies: 1019
-- Name: COLUMN tick_subres.medicalcondition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tick_subres.medicalcondition IS 'условия мп врача';


--
-- TOC entry 1020 (class 1259 OID 22123)
-- Dependencies: 7429 7430 7431 7432 14
-- Name: time_period; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE time_period (
    oid character(36) NOT NULL,
    type_period character varying(10) DEFAULT 'YEAR'::character varying,
    period_from integer DEFAULT 0 NOT NULL,
    period_to integer DEFAULT 0 NOT NULL,
    CONSTRAINT "ck_time_period$type_period" CHECK (((type_period)::text = ANY (ARRAY[('DAY'::character varying)::text, ('MONTH'::character varying)::text, ('YEAR'::character varying)::text])))
);


ALTER TABLE mir.time_period OWNER TO postgres;

--
-- TOC entry 16651 (class 0 OID 0)
-- Dependencies: 1020
-- Name: TABLE time_period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE time_period IS 'временные периоды для подстановки в отчеты';


--
-- TOC entry 16652 (class 0 OID 0)
-- Dependencies: 1020
-- Name: COLUMN time_period.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN time_period.oid IS 'oid';


--
-- TOC entry 16653 (class 0 OID 0)
-- Dependencies: 1020
-- Name: COLUMN time_period.type_period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN time_period.type_period IS 'тип периода(мес, год)';


--
-- TOC entry 16654 (class 0 OID 0)
-- Dependencies: 1020
-- Name: COLUMN time_period.period_from; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN time_period.period_from IS 'период от';


--
-- TOC entry 16655 (class 0 OID 0)
-- Dependencies: 1020
-- Name: COLUMN time_period.period_to; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN time_period.period_to IS 'период до';


--
-- TOC entry 1021 (class 1259 OID 22130)
-- Dependencies: 14
-- Name: tn_df_limp; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tn_df_limp (
    tradenameid bigint NOT NULL,
    drugformid bigint NOT NULL,
    limp_phgr_id bigint NOT NULL
);


ALTER TABLE mir.tn_df_limp OWNER TO postgres;

--
-- TOC entry 1022 (class 1259 OID 22133)
-- Dependencies: 14
-- Name: tradenames; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tradenames (
    oid character(36) NOT NULL,
    id integer,
    name character varying(1024),
    iname character varying(84)
);


ALTER TABLE mir.tradenames OWNER TO postgres;

--
-- TOC entry 16656 (class 0 OID 0)
-- Dependencies: 1022
-- Name: TABLE tradenames; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tradenames IS 'Торговые названия препаратов';


--
-- TOC entry 16657 (class 0 OID 0)
-- Dependencies: 1022
-- Name: COLUMN tradenames.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tradenames.oid IS 'oid';


--
-- TOC entry 16658 (class 0 OID 0)
-- Dependencies: 1022
-- Name: COLUMN tradenames.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tradenames.id IS 'Код ТН - первичный ключ';


--
-- TOC entry 16659 (class 0 OID 0)
-- Dependencies: 1022
-- Name: COLUMN tradenames.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tradenames.name IS 'Торговое название';


--
-- TOC entry 16660 (class 0 OID 0)
-- Dependencies: 1022
-- Name: COLUMN tradenames.iname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tradenames.iname IS 'iname';


--
-- TOC entry 1023 (class 1259 OID 22139)
-- Dependencies: 14
-- Name: tradenames_drugforms; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tradenames_drugforms (
    tradenameid bigint NOT NULL,
    drugformid bigint NOT NULL,
    mz_phgr_id bigint NOT NULL
);


ALTER TABLE mir.tradenames_drugforms OWNER TO postgres;

--
-- TOC entry 1024 (class 1259 OID 22142)
-- Dependencies: 7433 7434 14
-- Name: travm; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE travm (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(255),
    parent_id character(36),
    syn character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_travm$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.travm OWNER TO postgres;

--
-- TOC entry 16661 (class 0 OID 0)
-- Dependencies: 1024
-- Name: TABLE travm; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE travm IS 'Классификатор характеристик типов травм  Author: Spasskiy S.N.';


--
-- TOC entry 16662 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.oid IS 'SEQUENCE=[MIS.SQ_TRAVM]';


--
-- TOC entry 16663 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.name IS 'Вид операций';


--
-- TOC entry 16664 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.code IS 'Код';


--
-- TOC entry 16665 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.parent_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.parent_id IS 'parent_id';


--
-- TOC entry 16666 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.syn IS 'Синоним';


--
-- TOC entry 16667 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.show IS '1- показывать 0- скрывать';


--
-- TOC entry 16668 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 16669 (class 0 OID 0)
-- Dependencies: 1024
-- Name: COLUMN travm.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN travm.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 1025 (class 1259 OID 22150)
-- Dependencies: 14
-- Name: treatmen_conditions; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE treatmen_conditions (
    oid character(36) NOT NULL,
    otdel character(36) NOT NULL,
    food_type character(36),
    food_repetition character(36),
    food_form character(36),
    technology_name character varying(255),
    technology_class character varying(255)
);


ALTER TABLE mir.treatmen_conditions OWNER TO postgres;

--
-- TOC entry 16670 (class 0 OID 0)
-- Dependencies: 1025
-- Name: TABLE treatmen_conditions; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE treatmen_conditions IS 'условия размещения и лечения';


--
-- TOC entry 16671 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.oid IS 'oid';


--
-- TOC entry 16672 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.otdel IS 'otdel';


--
-- TOC entry 16673 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.food_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.food_type IS 'вид питания';


--
-- TOC entry 16674 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.food_repetition; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.food_repetition IS 'кратность питания';


--
-- TOC entry 16675 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.food_form; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.food_form IS 'форма питания';


--
-- TOC entry 16676 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.technology_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.technology_name IS 'наименование медицинских технологий';


--
-- TOC entry 16677 (class 0 OID 0)
-- Dependencies: 1025
-- Name: COLUMN treatmen_conditions.technology_class; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treatmen_conditions.technology_class IS 'класс медицинских технологий';


--
-- TOC entry 1026 (class 1259 OID 22156)
-- Dependencies: 7435 7436 7437 14
-- Name: treview; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE treview (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    oid_people character(36),
    email character varying(255),
    dtcreation date DEFAULT ('now'::text)::date NOT NULL,
    goodreview character varying(255),
    badreview character varying(255),
    total character varying(255) NOT NULL,
    recommendat numeric DEFAULT 0 NOT NULL,
    moderation numeric DEFAULT 0 NOT NULL,
    region character(36) NOT NULL
);


ALTER TABLE mir.treview OWNER TO postgres;

--
-- TOC entry 16678 (class 0 OID 0)
-- Dependencies: 1026
-- Name: TABLE treview; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE treview IS 'ТАБЛИЦА ОТЗЫВОВ';


--
-- TOC entry 16679 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.oid IS 'ID';


--
-- TOC entry 16680 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.name IS 'ИМЯ ПОЛЬЗОВАТЕЛЯ';


--
-- TOC entry 16681 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.oid_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.oid_people IS 'ID ПОЛЬЗОВАТЕЛЯ';


--
-- TOC entry 16682 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.email; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.email IS 'EMAIL ПОЛЬЗОВАТЕЛЯ';


--
-- TOC entry 16683 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.dtcreation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.dtcreation IS 'ДАТА ОСТАВЛЕНИЯ ОТЗЫВА';


--
-- TOC entry 16684 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.goodreview; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.goodreview IS 'ПОЛОЖИТЕЛЬНЫЕ ОТЗЫВЫ';


--
-- TOC entry 16685 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.badreview; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.badreview IS 'ОТРИЦАТЕЛЬНЫЕ ОТЗЫВЫ';


--
-- TOC entry 16686 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.total; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.total IS 'ОБЩИЙ ОТЗЫВ';


--
-- TOC entry 16687 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.recommendat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.recommendat IS 'РЕКОМЕНДАЦИЯ';


--
-- TOC entry 16688 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.moderation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.moderation IS 'СТАТУС МОДЕРАЦИИ';


--
-- TOC entry 16689 (class 0 OID 0)
-- Dependencies: 1026
-- Name: COLUMN treview.region; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN treview.region IS 'РЕГИОН';


--
-- TOC entry 1027 (class 1259 OID 22165)
-- Dependencies: 7438 7439 7440 7441 7442 7443 7444 7445 7446 7447 7448 7449 7450 14
-- Name: trsf; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf (
    oid character(36) NOT NULL,
    date_start date NOT NULL,
    date_end date NOT NULL,
    people_type numeric NOT NULL,
    doctype character(36) NOT NULL,
    insurcompany character(36) DEFAULT (-1) NOT NULL,
    people character(36) DEFAULT (-1) NOT NULL,
    title character varying(2000) NOT NULL,
    signature numeric(1,0) DEFAULT 0 NOT NULL,
    date_create date DEFAULT ('now'::text)::date NOT NULL,
    del numeric(1,0) DEFAULT 0 NOT NULL,
    date_del date,
    sf_code numeric(1,0) DEFAULT 0 NOT NULL,
    groupby numeric NOT NULL,
    date_edit date,
    sum numeric NOT NULL,
    rsf_num character varying(255),
    date_rsf date DEFAULT ('now'::text)::date NOT NULL,
    otdel character(36) NOT NULL,
    usl numeric(1,0) DEFAULT 1 NOT NULL,
    oper numeric(1,0) DEFAULT 1 NOT NULL,
    status numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_trsf$del" CHECK (((del >= (0)::numeric) AND (del <= (1)::numeric))),
    CONSTRAINT "ck_trsf$sf_code" CHECK (((sf_code >= (0)::numeric) AND (sf_code <= (1)::numeric))),
    CONSTRAINT "ck_trsf$signature" CHECK (((signature >= (0)::numeric) AND (signature <= (1)::numeric)))
);


ALTER TABLE mir.trsf OWNER TO postgres;

--
-- TOC entry 16690 (class 0 OID 0)
-- Dependencies: 1027
-- Name: TABLE trsf; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf IS 'Реестры и счет-фактуры';


--
-- TOC entry 16691 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.oid IS 'oid';


--
-- TOC entry 16692 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_start IS 'начало периода';


--
-- TOC entry 16693 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_end IS 'окончание периода';


--
-- TOC entry 16694 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.people_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.people_type IS 'тип пациентов (0-стац, 1-амб, 2-дневной стац, 3-все)';


--
-- TOC entry 16695 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.doctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.doctype IS 'вид оплаты';


--
-- TOC entry 16696 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.insurcompany IS 'страховая компания';


--
-- TOC entry 16697 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.people IS 'пациент';


--
-- TOC entry 16698 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.title IS 'заголовок реестра';


--
-- TOC entry 16699 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.signature; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.signature IS '1-выводить подписи';


--
-- TOC entry 16700 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_create IS 'дата сохранения';


--
-- TOC entry 16701 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.del IS '1-удален';


--
-- TOC entry 16702 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_del IS 'дата удаления';


--
-- TOC entry 16703 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.sf_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.sf_code IS 'отображать код услуги';


--
-- TOC entry 16704 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.groupby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.groupby IS 'группировка по (0-по пациенту, 1-по услуге)';


--
-- TOC entry 16705 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_edit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_edit IS 'дата последнего изменения';


--
-- TOC entry 16706 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.sum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.sum IS 'сумма по всему реестру';


--
-- TOC entry 16707 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.rsf_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.rsf_num IS 'номер реестра';


--
-- TOC entry 16708 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.date_rsf; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.date_rsf IS 'дата реестра';


--
-- TOC entry 16709 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.otdel IS 'отделение';


--
-- TOC entry 16710 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.usl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.usl IS '1 - считать мед. услуги';


--
-- TOC entry 16711 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.oper IS '1 - считать операции';


--
-- TOC entry 16712 (class 0 OID 0)
-- Dependencies: 1027
-- Name: COLUMN trsf.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf.status IS '1- Отправлен,  2-Подтвержден, 3- Оплачен, 4- Отказ';


--
-- TOC entry 1028 (class 1259 OID 22184)
-- Dependencies: 7451 7452 14
-- Name: trsf_all_columns; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_all_columns (
    oid character(36) NOT NULL,
    fieldname character varying(100) NOT NULL,
    caption character varying(120) NOT NULL,
    sql character varying(4000),
    is_primarykey numeric(1,0) DEFAULT 0 NOT NULL,
    is_hidden numeric(1,0) DEFAULT 0 NOT NULL,
    align character varying(50),
    width integer,
    "order" integer
);


ALTER TABLE mir.trsf_all_columns OWNER TO postgres;

--
-- TOC entry 16713 (class 0 OID 0)
-- Dependencies: 1028
-- Name: TABLE trsf_all_columns; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_all_columns IS 'Список всех возможных колонок для реестров и счетов - by Shpielevoy D. I.';


--
-- TOC entry 16714 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.oid IS 'oid';


--
-- TOC entry 16715 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.fieldname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.fieldname IS 'название столбца';


--
-- TOC entry 16716 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.caption; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.caption IS 'заголовок столбца';


--
-- TOC entry 16717 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.sql; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.sql IS 'SQL для внешнего ключа';


--
-- TOC entry 16718 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.is_primarykey; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.is_primarykey IS 'Первичный ключ для грида 1 - первичный ключ';


--
-- TOC entry 16719 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.is_hidden; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.is_hidden IS 'Скрытое поле 1 - скрыто';


--
-- TOC entry 16720 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.align; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.align IS 'Выравнивание колонки в гриде "left", "center", "right"';


--
-- TOC entry 16721 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns.width; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns.width IS 'Ширина колонки';


--
-- TOC entry 16722 (class 0 OID 0)
-- Dependencies: 1028
-- Name: COLUMN trsf_all_columns."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_all_columns."order" IS 'порядок сортировки';


--
-- TOC entry 1029 (class 1259 OID 22192)
-- Dependencies: 14
-- Name: trsf_columns; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_columns (
    oid character(36) NOT NULL,
    trsf_id character(36) NOT NULL,
    "order" numeric NOT NULL,
    all_columns_id character(36) NOT NULL
);


ALTER TABLE mir.trsf_columns OWNER TO postgres;

--
-- TOC entry 16723 (class 0 OID 0)
-- Dependencies: 1029
-- Name: TABLE trsf_columns; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_columns IS 'Список возможных колонок для реестра - by Shpielevoy D. I.';


--
-- TOC entry 16724 (class 0 OID 0)
-- Dependencies: 1029
-- Name: COLUMN trsf_columns.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_columns.oid IS 'oid';


--
-- TOC entry 16725 (class 0 OID 0)
-- Dependencies: 1029
-- Name: COLUMN trsf_columns.trsf_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_columns.trsf_id IS 'ссылка на реестр trsf';


--
-- TOC entry 16726 (class 0 OID 0)
-- Dependencies: 1029
-- Name: COLUMN trsf_columns."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_columns."order" IS 'порядок сортировки';


--
-- TOC entry 16727 (class 0 OID 0)
-- Dependencies: 1029
-- Name: COLUMN trsf_columns.all_columns_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_columns.all_columns_id IS 'ссылка на табл. всех возможных колонок';


--
-- TOC entry 1030 (class 1259 OID 22198)
-- Dependencies: 14
-- Name: trsf_reminde; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_reminde (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    showreminde boolean NOT NULL
);


ALTER TABLE mir.trsf_reminde OWNER TO postgres;

--
-- TOC entry 16728 (class 0 OID 0)
-- Dependencies: 1030
-- Name: TABLE trsf_reminde; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_reminde IS 'trsf_reminde';


--
-- TOC entry 16729 (class 0 OID 0)
-- Dependencies: 1030
-- Name: COLUMN trsf_reminde.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_reminde.oid IS 'oid';


--
-- TOC entry 16730 (class 0 OID 0)
-- Dependencies: 1030
-- Name: COLUMN trsf_reminde.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_reminde.name IS 'НАЗВАНИЕ';


--
-- TOC entry 16731 (class 0 OID 0)
-- Dependencies: 1030
-- Name: COLUMN trsf_reminde.showreminde; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_reminde.showreminde IS 'показывать напоминание';


--
-- TOC entry 1031 (class 1259 OID 22201)
-- Dependencies: 14
-- Name: trsf_saved_reestr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_saved_reestr (
    trsf character(36) NOT NULL,
    people character(36),
    presc character(36),
    service character(36),
    insur character(36),
    count numeric,
    cost numeric,
    oid character(36) NOT NULL
);


ALTER TABLE mir.trsf_saved_reestr OWNER TO postgres;

--
-- TOC entry 16732 (class 0 OID 0)
-- Dependencies: 1031
-- Name: TABLE trsf_saved_reestr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_saved_reestr IS 'Таблица содержит содержимое реестров';


--
-- TOC entry 16733 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.trsf; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.trsf IS 'ссылка на шапку реестра';


--
-- TOC entry 16734 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.people IS 'id пациента';


--
-- TOC entry 16735 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.presc IS 'id назначения';


--
-- TOC entry 16736 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.service IS 'id услуги';


--
-- TOC entry 16737 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.insur; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.insur IS 'id страхового полиса';


--
-- TOC entry 16738 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.count IS 'кол-во';


--
-- TOC entry 16739 (class 0 OID 0)
-- Dependencies: 1031
-- Name: COLUMN trsf_saved_reestr.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_saved_reestr.cost IS 'цена';


--
-- TOC entry 1032 (class 1259 OID 22207)
-- Dependencies: 14
-- Name: trsf_temp_reestr; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_temp_reestr (
    people character(36),
    presctype character(36),
    service character(36),
    insur character(36),
    count numeric,
    cost numeric,
    oid character(36) NOT NULL
);


ALTER TABLE mir.trsf_temp_reestr OWNER TO postgres;

--
-- TOC entry 16740 (class 0 OID 0)
-- Dependencies: 1032
-- Name: TABLE trsf_temp_reestr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_temp_reestr IS 'Таблица содержит содержимое реестра (временная)';


--
-- TOC entry 16741 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.people IS 'id пациента';


--
-- TOC entry 16742 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.presctype IS 'id назначения';


--
-- TOC entry 16743 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.service; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.service IS 'id услуги';


--
-- TOC entry 16744 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.insur; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.insur IS 'id страхового полиса';


--
-- TOC entry 16745 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.count IS 'кол-во';


--
-- TOC entry 16746 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.cost; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.cost IS 'цена';


--
-- TOC entry 16747 (class 0 OID 0)
-- Dependencies: 1032
-- Name: COLUMN trsf_temp_reestr.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_temp_reestr.oid IS 'id';


--
-- TOC entry 1033 (class 1259 OID 22213)
-- Dependencies: 7453 7454 7455 7456 7457 7458 7459 7460 7461 7462 7463 7464 7465 14
-- Name: trsf_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_template (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    date_create date DEFAULT ('now'::text)::date NOT NULL,
    del numeric(1,0) DEFAULT 0 NOT NULL,
    people_type numeric NOT NULL,
    doctype character(36) NOT NULL,
    sk numeric(1,0) NOT NULL,
    title character varying(2000) NOT NULL,
    groupby numeric NOT NULL,
    signature numeric(1,0) DEFAULT 0 NOT NULL,
    insurcompany character(36) DEFAULT (-1) NOT NULL,
    people character(36) DEFAULT (-1) NOT NULL,
    sf_code numeric(1,0) DEFAULT 0 NOT NULL,
    otdel character(36) NOT NULL,
    sysuser_create character(36) NOT NULL,
    sysuser_del character(36),
    usl numeric(1,0) DEFAULT 1 NOT NULL,
    oper numeric(1,0) DEFAULT 1 NOT NULL,
    kdn numeric(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT "ck_trsf_tem$del" CHECK (((del >= (0)::numeric) AND (del <= (1)::numeric))),
    CONSTRAINT "ck_trsf_tem$sf_code" CHECK (((sf_code >= (0)::numeric) AND (sf_code <= (1)::numeric))),
    CONSTRAINT "ck_trsf_tem$signature" CHECK (((signature >= (0)::numeric) AND (signature <= (1)::numeric))),
    CONSTRAINT "ck_trsf_tem$sk" CHECK (((sk >= (0)::numeric) AND (sk <= (1)::numeric)))
);


ALTER TABLE mir.trsf_template OWNER TO postgres;

--
-- TOC entry 16748 (class 0 OID 0)
-- Dependencies: 1033
-- Name: TABLE trsf_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_template IS 'Шаблоны настроек для реестров и счёт-фактур';


--
-- TOC entry 16749 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.oid IS 'oid';


--
-- TOC entry 16750 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.name IS 'название шаблона';


--
-- TOC entry 16751 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.date_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.date_create IS 'дата создания шаблона';


--
-- TOC entry 16752 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.del IS '1-удален';


--
-- TOC entry 16753 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.people_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.people_type IS 'тип пациентов (0-стац, 1-амб, 2-дневной стац, 3-все)';


--
-- TOC entry 16754 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.doctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.doctype IS 'вид оплаты';


--
-- TOC entry 16755 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.sk; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.sk IS '1-стаховая компания, 0-пациент';


--
-- TOC entry 16756 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.title IS 'заголовок реестра';


--
-- TOC entry 16757 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.groupby; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.groupby IS 'группировка по (0-по пациенту, 1-по услуге)';


--
-- TOC entry 16758 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.signature; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.signature IS '1-выводить подписи';


--
-- TOC entry 16759 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.insurcompany; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.insurcompany IS 'страховая компания';


--
-- TOC entry 16760 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.people IS 'пациент';


--
-- TOC entry 16761 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.sf_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.sf_code IS 'отображать код услуги';


--
-- TOC entry 16762 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.otdel IS 'отделение';


--
-- TOC entry 16763 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.sysuser_create; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.sysuser_create IS 'сотрудник создавший шаблон';


--
-- TOC entry 16764 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.sysuser_del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.sysuser_del IS 'сотрудник удаливший шаблон';


--
-- TOC entry 16765 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.usl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.usl IS '1 - считать мед. услуги';


--
-- TOC entry 16766 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.oper; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.oper IS '1 - считать операции';


--
-- TOC entry 16767 (class 0 OID 0)
-- Dependencies: 1033
-- Name: COLUMN trsf_template.kdn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template.kdn IS '1 - считать КДН';


--
-- TOC entry 1034 (class 1259 OID 22232)
-- Dependencies: 14
-- Name: trsf_template_columns; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE trsf_template_columns (
    oid character(36) NOT NULL,
    template character(36) NOT NULL,
    "order" numeric NOT NULL,
    all_columns_id character(36) NOT NULL
);


ALTER TABLE mir.trsf_template_columns OWNER TO postgres;

--
-- TOC entry 16768 (class 0 OID 0)
-- Dependencies: 1034
-- Name: TABLE trsf_template_columns; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE trsf_template_columns IS 'Список колонок для реестров (и шаблонов)';


--
-- TOC entry 16769 (class 0 OID 0)
-- Dependencies: 1034
-- Name: COLUMN trsf_template_columns.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template_columns.oid IS 'oid';


--
-- TOC entry 16770 (class 0 OID 0)
-- Dependencies: 1034
-- Name: COLUMN trsf_template_columns.template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template_columns.template IS 'шаблон';


--
-- TOC entry 16771 (class 0 OID 0)
-- Dependencies: 1034
-- Name: COLUMN trsf_template_columns."order"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template_columns."order" IS 'порядок сортировки';


--
-- TOC entry 16772 (class 0 OID 0)
-- Dependencies: 1034
-- Name: COLUMN trsf_template_columns.all_columns_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN trsf_template_columns.all_columns_id IS 'ссылка на табл. со списком всех доступных колонок';


--
-- TOC entry 1035 (class 1259 OID 22238)
-- Dependencies: 14
-- Name: tsmid; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tsmid (
    fk_id integer,
    fk_owner integer,
    fc_type character varying(255),
    fc_name character varying(255),
    fc_synonim character varying(255),
    fn_level integer,
    fn_order integer,
    oid character varying(36),
    parent character varying(36)
);


ALTER TABLE mir.tsmid OWNER TO postgres;

--
-- TOC entry 1036 (class 1259 OID 22244)
-- Dependencies: 14
-- Name: tuberculez; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tuberculez (
    oid character(36) NOT NULL,
    people_oid character(36) NOT NULL,
    begin_dt date,
    end_dt date
);


ALTER TABLE mir.tuberculez OWNER TO postgres;

--
-- TOC entry 16773 (class 0 OID 0)
-- Dependencies: 1036
-- Name: TABLE tuberculez; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tuberculez IS 'Тубучёт.  Author: Blazko';


--
-- TOC entry 16774 (class 0 OID 0)
-- Dependencies: 1036
-- Name: COLUMN tuberculez.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tuberculez.oid IS 'oid';


--
-- TOC entry 16775 (class 0 OID 0)
-- Dependencies: 1036
-- Name: COLUMN tuberculez.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tuberculez.people_oid IS 'people_id';


--
-- TOC entry 16776 (class 0 OID 0)
-- Dependencies: 1036
-- Name: COLUMN tuberculez.begin_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tuberculez.begin_dt IS 'Пуступил';


--
-- TOC entry 16777 (class 0 OID 0)
-- Dependencies: 1036
-- Name: COLUMN tuberculez.end_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tuberculez.end_dt IS 'Выписан';


--
-- TOC entry 1037 (class 1259 OID 22247)
-- Dependencies: 14
-- Name: tutorial; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tutorial (
    oid character(36) NOT NULL,
    name text,
    comment text
);


ALTER TABLE mir.tutorial OWNER TO postgres;

--
-- TOC entry 16778 (class 0 OID 0)
-- Dependencies: 1037
-- Name: TABLE tutorial; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tutorial IS 'Учебные курсы SCORM разбитые по ролям';


--
-- TOC entry 16779 (class 0 OID 0)
-- Dependencies: 1037
-- Name: COLUMN tutorial.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial.oid IS 'oid';


--
-- TOC entry 16780 (class 0 OID 0)
-- Dependencies: 1037
-- Name: COLUMN tutorial.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial.name IS 'Наименование курса';


--
-- TOC entry 16781 (class 0 OID 0)
-- Dependencies: 1037
-- Name: COLUMN tutorial.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial.comment IS 'Комментарий к курсу';


--
-- TOC entry 1038 (class 1259 OID 22253)
-- Dependencies: 14
-- Name: tutorial_links; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tutorial_links (
    oid character(36) NOT NULL,
    controller character varying,
    course character(36),
    section character varying,
    descr character varying
);


ALTER TABLE mir.tutorial_links OWNER TO postgres;

--
-- TOC entry 16782 (class 0 OID 0)
-- Dependencies: 1038
-- Name: TABLE tutorial_links; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tutorial_links IS 'Связь контроллеров с разделами справки';


--
-- TOC entry 16783 (class 0 OID 0)
-- Dependencies: 1038
-- Name: COLUMN tutorial_links.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_links.oid IS 'Идентификатор записи';


--
-- TOC entry 16784 (class 0 OID 0)
-- Dependencies: 1038
-- Name: COLUMN tutorial_links.controller; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_links.controller IS 'Название контроллера, из которого переходить на выбранный пунк справки';


--
-- TOC entry 16785 (class 0 OID 0)
-- Dependencies: 1038
-- Name: COLUMN tutorial_links.course; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_links.course IS 'Ссылка на курс';


--
-- TOC entry 16786 (class 0 OID 0)
-- Dependencies: 1038
-- Name: COLUMN tutorial_links.section; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_links.section IS 'Ссылка на раздел';


--
-- TOC entry 16787 (class 0 OID 0)
-- Dependencies: 1038
-- Name: COLUMN tutorial_links.descr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_links.descr IS 'Описание';


--
-- TOC entry 1039 (class 1259 OID 22259)
-- Dependencies: 14
-- Name: tutorial_role; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE tutorial_role (
    oid character(36) NOT NULL,
    role character(36),
    tutorial character(36)
);


ALTER TABLE mir.tutorial_role OWNER TO postgres;

--
-- TOC entry 16788 (class 0 OID 0)
-- Dependencies: 1039
-- Name: TABLE tutorial_role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE tutorial_role IS 'Связь ролей и учебных курсов';


--
-- TOC entry 16789 (class 0 OID 0)
-- Dependencies: 1039
-- Name: COLUMN tutorial_role.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_role.oid IS 'oid';


--
-- TOC entry 16790 (class 0 OID 0)
-- Dependencies: 1039
-- Name: COLUMN tutorial_role.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_role.role IS 'Роль';


--
-- TOC entry 16791 (class 0 OID 0)
-- Dependencies: 1039
-- Name: COLUMN tutorial_role.tutorial; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN tutorial_role.tutorial IS 'Учебный курс';


--
-- TOC entry 1040 (class 1259 OID 22262)
-- Dependencies: 14
-- Name: type_name; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE type_name (
    name character varying(30) NOT NULL,
    caption character varying(255)
);


ALTER TABLE mir.type_name OWNER TO postgres;

--
-- TOC entry 16792 (class 0 OID 0)
-- Dependencies: 1040
-- Name: TABLE type_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE type_name IS 'Таблица возможных типов параметров
Author: Kulbatsky Dmitry';


--
-- TOC entry 16793 (class 0 OID 0)
-- Dependencies: 1040
-- Name: COLUMN type_name.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN type_name.name IS 'Наименование типа [pk]';


--
-- TOC entry 16794 (class 0 OID 0)
-- Dependencies: 1040
-- Name: COLUMN type_name.caption; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN type_name.caption IS 'Отображаемое значение';


--
-- TOC entry 1041 (class 1259 OID 22265)
-- Dependencies: 14
-- Name: typeuploadfile; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE typeuploadfile (
    oid character varying(36),
    describle character varying(200),
    syn character varying(36)
);


ALTER TABLE mir.typeuploadfile OWNER TO postgres;

--
-- TOC entry 16795 (class 0 OID 0)
-- Dependencies: 1041
-- Name: TABLE typeuploadfile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE typeuploadfile IS 'типы файлов при загрузке данных';


--
-- TOC entry 16796 (class 0 OID 0)
-- Dependencies: 1041
-- Name: COLUMN typeuploadfile.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN typeuploadfile.oid IS 'oid';


--
-- TOC entry 16797 (class 0 OID 0)
-- Dependencies: 1041
-- Name: COLUMN typeuploadfile.describle; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN typeuploadfile.describle IS 'describle';


--
-- TOC entry 16798 (class 0 OID 0)
-- Dependencies: 1041
-- Name: COLUMN typeuploadfile.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN typeuploadfile.syn IS 'syn';


--
-- TOC entry 1042 (class 1259 OID 22268)
-- Dependencies: 7466 14
-- Name: unionlog; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE unionlog (
    oid character varying(36) NOT NULL,
    date_log timestamp without time zone DEFAULT now() NOT NULL,
    text character varying,
    type character varying
);


ALTER TABLE mir.unionlog OWNER TO postgres;

--
-- TOC entry 1043 (class 1259 OID 22275)
-- Dependencies: 14
-- Name: uniq_direction_number; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE uniq_direction_number (
    num numeric,
    is_use character varying(1)
);


ALTER TABLE mir.uniq_direction_number OWNER TO postgres;

--
-- TOC entry 16799 (class 0 OID 0)
-- Dependencies: 1043
-- Name: TABLE uniq_direction_number; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE uniq_direction_number IS 'старый механизм определения уникального номера направления';


--
-- TOC entry 16800 (class 0 OID 0)
-- Dependencies: 1043
-- Name: COLUMN uniq_direction_number.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uniq_direction_number.num IS 'num';


--
-- TOC entry 16801 (class 0 OID 0)
-- Dependencies: 1043
-- Name: COLUMN uniq_direction_number.is_use; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uniq_direction_number.is_use IS 'is_use';


--
-- TOC entry 1044 (class 1259 OID 22281)
-- Dependencies: 14
-- Name: uploadfiles; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE uploadfiles (
    oid character varying(36),
    filename character varying(100),
    dtupload date,
    typefile character varying(36),
    sysuser character varying(36)
);


ALTER TABLE mir.uploadfiles OWNER TO postgres;

--
-- TOC entry 16802 (class 0 OID 0)
-- Dependencies: 1044
-- Name: TABLE uploadfiles; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE uploadfiles IS 'Список загружаемых файлов';


--
-- TOC entry 16803 (class 0 OID 0)
-- Dependencies: 1044
-- Name: COLUMN uploadfiles.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uploadfiles.oid IS 'oid';


--
-- TOC entry 16804 (class 0 OID 0)
-- Dependencies: 1044
-- Name: COLUMN uploadfiles.filename; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uploadfiles.filename IS 'filename';


--
-- TOC entry 16805 (class 0 OID 0)
-- Dependencies: 1044
-- Name: COLUMN uploadfiles.dtupload; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uploadfiles.dtupload IS 'dtupload';


--
-- TOC entry 16806 (class 0 OID 0)
-- Dependencies: 1044
-- Name: COLUMN uploadfiles.typefile; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uploadfiles.typefile IS 'typefile';


--
-- TOC entry 16807 (class 0 OID 0)
-- Dependencies: 1044
-- Name: COLUMN uploadfiles.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN uploadfiles.sysuser IS 'sysuser';


--
-- TOC entry 1045 (class 1259 OID 22284)
-- Dependencies: 14
-- Name: user_presctemplate; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE user_presctemplate (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.user_presctemplate OWNER TO postgres;

--
-- TOC entry 16808 (class 0 OID 0)
-- Dependencies: 1045
-- Name: TABLE user_presctemplate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE user_presctemplate IS 'user_presctemplate';


--
-- TOC entry 16809 (class 0 OID 0)
-- Dependencies: 1045
-- Name: COLUMN user_presctemplate.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplate.oid IS 'oid';


--
-- TOC entry 16810 (class 0 OID 0)
-- Dependencies: 1045
-- Name: COLUMN user_presctemplate.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplate.sysuser IS 'sysuser';


--
-- TOC entry 16811 (class 0 OID 0)
-- Dependencies: 1045
-- Name: COLUMN user_presctemplate.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplate.name IS 'name';


--
-- TOC entry 1046 (class 1259 OID 22287)
-- Dependencies: 14
-- Name: user_presctemplatedetail; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE user_presctemplatedetail (
    oid character(36) NOT NULL,
    presctype character(36) NOT NULL,
    template character(36) NOT NULL
);


ALTER TABLE mir.user_presctemplatedetail OWNER TO postgres;

--
-- TOC entry 16812 (class 0 OID 0)
-- Dependencies: 1046
-- Name: TABLE user_presctemplatedetail; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE user_presctemplatedetail IS 'user_presctemplatedetail';


--
-- TOC entry 16813 (class 0 OID 0)
-- Dependencies: 1046
-- Name: COLUMN user_presctemplatedetail.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplatedetail.oid IS 'oid';


--
-- TOC entry 16814 (class 0 OID 0)
-- Dependencies: 1046
-- Name: COLUMN user_presctemplatedetail.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplatedetail.presctype IS 'presctype';


--
-- TOC entry 16815 (class 0 OID 0)
-- Dependencies: 1046
-- Name: COLUMN user_presctemplatedetail.template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_presctemplatedetail.template IS 'template';


--
-- TOC entry 1047 (class 1259 OID 22290)
-- Dependencies: 7467 14
-- Name: user_protocoltemplate; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE user_protocoltemplate (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    name character varying(255) NOT NULL,
    text text,
    "default" numeric(1,0) DEFAULT 0
);


ALTER TABLE mir.user_protocoltemplate OWNER TO postgres;

--
-- TOC entry 16816 (class 0 OID 0)
-- Dependencies: 1047
-- Name: TABLE user_protocoltemplate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE user_protocoltemplate IS 'user_protocoltemplate';


--
-- TOC entry 16817 (class 0 OID 0)
-- Dependencies: 1047
-- Name: COLUMN user_protocoltemplate.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_protocoltemplate.oid IS 'oid';


--
-- TOC entry 16818 (class 0 OID 0)
-- Dependencies: 1047
-- Name: COLUMN user_protocoltemplate.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_protocoltemplate.sysuser IS 'sysuser';


--
-- TOC entry 16819 (class 0 OID 0)
-- Dependencies: 1047
-- Name: COLUMN user_protocoltemplate.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_protocoltemplate.name IS 'name';


--
-- TOC entry 16820 (class 0 OID 0)
-- Dependencies: 1047
-- Name: COLUMN user_protocoltemplate.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_protocoltemplate.text IS 'text';


--
-- TOC entry 1048 (class 1259 OID 22297)
-- Dependencies: 14
-- Name: user_template; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE user_template (
    id character(36) NOT NULL,
    sotr_id character(36) NOT NULL,
    name character varying(255),
    content text
);


ALTER TABLE mir.user_template OWNER TO postgres;

--
-- TOC entry 16821 (class 0 OID 0)
-- Dependencies: 1048
-- Name: TABLE user_template; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE user_template IS 'пользовательские шаблоны by A.Nakorjakov';


--
-- TOC entry 16822 (class 0 OID 0)
-- Dependencies: 1048
-- Name: COLUMN user_template.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_template.id IS 'id';


--
-- TOC entry 16823 (class 0 OID 0)
-- Dependencies: 1048
-- Name: COLUMN user_template.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_template.sotr_id IS 'sotr_id';


--
-- TOC entry 16824 (class 0 OID 0)
-- Dependencies: 1048
-- Name: COLUMN user_template.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_template.name IS 'name';


--
-- TOC entry 16825 (class 0 OID 0)
-- Dependencies: 1048
-- Name: COLUMN user_template.content; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN user_template.content IS 'content';


--
-- TOC entry 1049 (class 1259 OID 22303)
-- Dependencies: 14
-- Name: vac_cancel; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_cancel (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    type_id character(36) NOT NULL,
    begin_date date NOT NULL,
    end_date date,
    emp_id character(36),
    emp_name character varying(255),
    comment character varying(4000)
);


ALTER TABLE mir.vac_cancel OWNER TO postgres;

--
-- TOC entry 16826 (class 0 OID 0)
-- Dependencies: 1049
-- Name: TABLE vac_cancel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_cancel IS 'Отводы, Author: kulikovskiy';


--
-- TOC entry 16827 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.oid IS 'Код';


--
-- TOC entry 16828 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.people_id IS 'SEQUENCE=[SQ_PEOPLE]';


--
-- TOC entry 16829 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.type_id IS 'ТИП отвода:ссылка на VAC_CANCEL_TYPE.ID';


--
-- TOC entry 16830 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.begin_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.begin_date IS 'Дата начала действия отвода';


--
-- TOC entry 16831 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.end_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.end_date IS 'Дата окончания действия отвода';


--
-- TOC entry 16832 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.emp_id IS 'Врач EMP.ID';


--
-- TOC entry 16833 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.emp_name IS 'ФИО врача';


--
-- TOC entry 16834 (class 0 OID 0)
-- Dependencies: 1049
-- Name: COLUMN vac_cancel.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel.comment IS 'Примечания';


--
-- TOC entry 1050 (class 1259 OID 22309)
-- Dependencies: 7468 7469 7470 14
-- Name: vac_cancel_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_cancel_type (
    oid character(36) NOT NULL,
    permanent integer DEFAULT 0 NOT NULL,
    name character varying(255) NOT NULL,
    def_duration integer,
    is_med integer DEFAULT 0 NOT NULL,
    is_all integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.vac_cancel_type OWNER TO postgres;

--
-- TOC entry 16835 (class 0 OID 0)
-- Dependencies: 1050
-- Name: TABLE vac_cancel_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_cancel_type IS 'Типы отводов
Author: kulikovskiy';


--
-- TOC entry 16836 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.oid IS '0 - отвод от всех прививок';


--
-- TOC entry 16837 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.permanent; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.permanent IS '1- постоянный отвод; 0 - Временный';


--
-- TOC entry 16838 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.name IS 'Название отвода';


--
-- TOC entry 16839 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.def_duration; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.def_duration IS 'Длительность отвода по умолчнанию (в днях)';


--
-- TOC entry 16840 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.is_med; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.is_med IS 'Признак медицинского отвода';


--
-- TOC entry 16841 (class 0 OID 0)
-- Dependencies: 1050
-- Name: COLUMN vac_cancel_type.is_all; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_cancel_type.is_all IS '1- от всех болезней и вакцин';


--
-- TOC entry 1051 (class 1259 OID 22315)
-- Dependencies: 14
-- Name: vac_company; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_company (
    oid character(36) NOT NULL,
    type_id character(36) NOT NULL
);


ALTER TABLE mir.vac_company OWNER TO postgres;

--
-- TOC entry 16842 (class 0 OID 0)
-- Dependencies: 1051
-- Name: TABLE vac_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_company IS 'Связка компаний с типом компании для вакцинации';


--
-- TOC entry 16843 (class 0 OID 0)
-- Dependencies: 1051
-- Name: COLUMN vac_company.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_company.oid IS 'Код';


--
-- TOC entry 16844 (class 0 OID 0)
-- Dependencies: 1051
-- Name: COLUMN vac_company.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_company.type_id IS 'Код типа компании для вакцинации (VAC_COMPANY_TYPE.ID)';


--
-- TOC entry 1052 (class 1259 OID 22318)
-- Dependencies: 14
-- Name: vac_company_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_company_type (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vac_company_type OWNER TO postgres;

--
-- TOC entry 16845 (class 0 OID 0)
-- Dependencies: 1052
-- Name: TABLE vac_company_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_company_type IS 'Типы компаний для вакцинации (Школы, Детские сады)';


--
-- TOC entry 16846 (class 0 OID 0)
-- Dependencies: 1052
-- Name: COLUMN vac_company_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_company_type.oid IS 'Код';


--
-- TOC entry 16847 (class 0 OID 0)
-- Dependencies: 1052
-- Name: COLUMN vac_company_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_company_type.name IS 'Наименование';


--
-- TOC entry 1053 (class 1259 OID 22321)
-- Dependencies: 14
-- Name: vac_input_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_input_type (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vac_input_type OWNER TO postgres;

--
-- TOC entry 16848 (class 0 OID 0)
-- Dependencies: 1053
-- Name: TABLE vac_input_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_input_type IS 'Способы ввдения препаратов
Не имеет интерфейса ввода
Author: kulikovskiy';


--
-- TOC entry 16849 (class 0 OID 0)
-- Dependencies: 1053
-- Name: COLUMN vac_input_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_input_type.oid IS 'Код';


--
-- TOC entry 16850 (class 0 OID 0)
-- Dependencies: 1053
-- Name: COLUMN vac_input_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_input_type.name IS 'Название способа';


--
-- TOC entry 1054 (class 1259 OID 22324)
-- Dependencies: 14
-- Name: vac_kratn; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_kratn (
    oid character(36) NOT NULL,
    infection_id character(36) NOT NULL,
    vac_people_id character(36) NOT NULL,
    kratn_id character(36) NOT NULL
);


ALTER TABLE mir.vac_kratn OWNER TO postgres;

--
-- TOC entry 16851 (class 0 OID 0)
-- Dependencies: 1054
-- Name: TABLE vac_kratn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_kratn IS 'Картности вакцинаций
Author: kulikovskiy';


--
-- TOC entry 16852 (class 0 OID 0)
-- Dependencies: 1054
-- Name: COLUMN vac_kratn.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn.oid IS 'Код';


--
-- TOC entry 16853 (class 0 OID 0)
-- Dependencies: 1054
-- Name: COLUMN vac_kratn.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn.infection_id IS 'Код инфекции INFECTION.ID';


--
-- TOC entry 16854 (class 0 OID 0)
-- Dependencies: 1054
-- Name: COLUMN vac_kratn.vac_people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn.vac_people_id IS 'Код прививки VAC_PEOPLE.ID';


--
-- TOC entry 16855 (class 0 OID 0)
-- Dependencies: 1054
-- Name: COLUMN vac_kratn.kratn_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn.kratn_id IS 'Кратность вакцинации (V, V1, R1, R2) VAC_KRATN_NAME.ID';


--
-- TOC entry 1055 (class 1259 OID 22327)
-- Dependencies: 14
-- Name: vac_kratn_name; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_kratn_name (
    oid character(36) NOT NULL,
    name character varying(25) NOT NULL,
    type integer NOT NULL,
    num integer NOT NULL
);


ALTER TABLE mir.vac_kratn_name OWNER TO postgres;

--
-- TOC entry 16856 (class 0 OID 0)
-- Dependencies: 1055
-- Name: TABLE vac_kratn_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_kratn_name IS 'Кратности выполнения прививок
Author: kulikovskiy';


--
-- TOC entry 16857 (class 0 OID 0)
-- Dependencies: 1055
-- Name: COLUMN vac_kratn_name.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn_name.oid IS 'Код';


--
-- TOC entry 16858 (class 0 OID 0)
-- Dependencies: 1055
-- Name: COLUMN vac_kratn_name.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn_name.name IS 'Наименование(V1, V2 ... R1, R2...)';


--
-- TOC entry 16859 (class 0 OID 0)
-- Dependencies: 1055
-- Name: COLUMN vac_kratn_name.type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn_name.type IS 'Тип (1 - вакцинация, 2 - ревакцинация)';


--
-- TOC entry 16860 (class 0 OID 0)
-- Dependencies: 1055
-- Name: COLUMN vac_kratn_name.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_kratn_name.num IS 'Номер';


--
-- TOC entry 1056 (class 1259 OID 22330)
-- Dependencies: 14
-- Name: vac_lpu_company; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_lpu_company (
    oid character(36) NOT NULL,
    company_lpu_id character(36) NOT NULL,
    company_id character(36) NOT NULL
);


ALTER TABLE mir.vac_lpu_company OWNER TO postgres;

--
-- TOC entry 16861 (class 0 OID 0)
-- Dependencies: 1056
-- Name: TABLE vac_lpu_company; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_lpu_company IS 'vac_lpu_company';


--
-- TOC entry 16862 (class 0 OID 0)
-- Dependencies: 1056
-- Name: COLUMN vac_lpu_company.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_lpu_company.oid IS 'Код';


--
-- TOC entry 16863 (class 0 OID 0)
-- Dependencies: 1056
-- Name: COLUMN vac_lpu_company.company_lpu_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_lpu_company.company_lpu_id IS 'Код нашей организации (COMPANY.ID)';


--
-- TOC entry 16864 (class 0 OID 0)
-- Dependencies: 1056
-- Name: COLUMN vac_lpu_company.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_lpu_company.company_id IS 'Код организации, которую мы обслуживаем (COMPANY.ID)';


--
-- TOC entry 1057 (class 1259 OID 22333)
-- Dependencies: 7471 7472 14
-- Name: vac_map; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_map (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    company_id character(36),
    company_date date,
    own_company_id character(36),
    begin_date date,
    end_date date,
    class integer DEFAULT (-100) NOT NULL,
    class_liter character varying(5),
    fl_del integer DEFAULT 0 NOT NULL
);


ALTER TABLE mir.vac_map OWNER TO postgres;

--
-- TOC entry 16865 (class 0 OID 0)
-- Dependencies: 1057
-- Name: TABLE vac_map; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_map IS 'Прививочная карта
Author: kulikovskiy';


--
-- TOC entry 16866 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.oid IS 'Код';


--
-- TOC entry 16867 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.people_id IS 'PEOPLE.ID';


--
-- TOC entry 16868 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.company_id IS 'Организация к которой относится карта COMPANY.ID';


--
-- TOC entry 16869 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.company_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.company_date IS 'ДАТА изменения инормации об органзизации нужно для класс и школы чтобы знать кода переводить';


--
-- TOC entry 16870 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.own_company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.own_company_id IS 'ЛПУ к которому относится COMPANY.ID';


--
-- TOC entry 16871 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.begin_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.begin_date IS 'Дата постановки на учет';


--
-- TOC entry 16872 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.end_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.end_date IS 'Дата снятия с учета';


--
-- TOC entry 16873 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.class; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.class IS 'Класс для школьников; (-100) для не школьников';


--
-- TOC entry 16874 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.class_liter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.class_liter IS 'Буква класс';


--
-- TOC entry 16875 (class 0 OID 0)
-- Dependencies: 1057
-- Name: COLUMN vac_map.fl_del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_map.fl_del IS 'Флаг удален';


--
-- TOC entry 1058 (class 1259 OID 22338)
-- Dependencies: 14
-- Name: vac_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_people (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    vaccin_prep_id character(36) NOT NULL,
    vaccin_prep_name character varying(150) NOT NULL,
    series character varying(50) NOT NULL,
    num numeric NOT NULL,
    unit_id character(36) NOT NULL,
    input_type_id character(36) NOT NULL,
    create_date date NOT NULL,
    status_id character(36) NOT NULL,
    emp_naz_id character(36),
    emp_naz_name character varying(255) NOT NULL,
    emp_id character(36),
    emp_name character varying(255) NOT NULL,
    vac_company_id character(36),
    vac_company_name character varying(255) NOT NULL,
    dept_id character(36),
    vaccin_shemname_id character(36),
    vaccin_shem_id character(36),
    reaction_type numeric,
    reaction character varying(4000),
    reaction_rubec integer,
    status_series_id character(36) NOT NULL,
    vaccin_prep_store_log_id character(36)
);


ALTER TABLE mir.vac_people OWNER TO postgres;

--
-- TOC entry 16876 (class 0 OID 0)
-- Dependencies: 1058
-- Name: TABLE vac_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_people IS 'Прививки человеку
Author: kulikovskiy';


--
-- TOC entry 16877 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.oid IS 'Код';


--
-- TOC entry 16878 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.people_id IS 'PEOPLE.ID';


--
-- TOC entry 16879 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vaccin_prep_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vaccin_prep_id IS 'VACCIN_PREP.FK_ID';


--
-- TOC entry 16880 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vaccin_prep_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vaccin_prep_name IS 'Название препарата при вакцинации отследить изменение в VACCIN_PREP_STORE';


--
-- TOC entry 16881 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.series IS 'Серия';


--
-- TOC entry 16882 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.num IS 'Доза';


--
-- TOC entry 16883 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.unit_id IS 'Единица измерения VACCIN_UNIT.ID';


--
-- TOC entry 16884 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.input_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.input_type_id IS 'Способ введния VAC_INPUT_TYPE.ID';


--
-- TOC entry 16885 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.create_date IS 'Дата проведения прививки';


--
-- TOC entry 16886 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.status_id IS 'Статус VAC_PEOPLE_STATUS.ID';


--
-- TOC entry 16887 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.emp_naz_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.emp_naz_id IS 'Сотрудник назанчивший прививку, может быть пустым EMP.ID';


--
-- TOC entry 16888 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.emp_naz_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.emp_naz_name IS 'ФИО сотрудника, назначившего прививку';


--
-- TOC entry 16889 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.emp_id IS 'Сотрудник сделавший прививку, можеть быть пустым EMP.ID';


--
-- TOC entry 16890 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.emp_name IS 'ФИО сотрудника, сделавшего прививку';


--
-- TOC entry 16891 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vac_company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vac_company_id IS 'ЛПУ которое сделало прививку (если мы, то брать по умолчанию) COMPANY.ID';


--
-- TOC entry 16892 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vac_company_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vac_company_name IS 'Название ЛПУ которое сделало прививку ';


--
-- TOC entry 16893 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.dept_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.dept_id IS 'Отделение в котором сделана прививка DEPT.ID';


--
-- TOC entry 16894 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vaccin_shemname_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vaccin_shemname_id IS 'Схема по которой производтся вакцина VACCIN_SHEMNAME.ID';


--
-- TOC entry 16895 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vaccin_shem_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vaccin_shem_id IS 'Указание на конкретную поизцию в схеме VACCIN_SHEM.ID';


--
-- TOC entry 16896 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.reaction_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.reaction_type IS 'Тип реакции. ПО маске';


--
-- TOC entry 16897 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.reaction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.reaction IS 'Описание реакции';


--
-- TOC entry 16898 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.reaction_rubec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.reaction_rubec IS 'Размер рубца (мм) Только для БЦЖ';


--
-- TOC entry 16899 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.status_series_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.status_series_id IS 'Статус серии VAC_STATUS_SERIES.ID';


--
-- TOC entry 16900 (class 0 OID 0)
-- Dependencies: 1058
-- Name: COLUMN vac_people.vaccin_prep_store_log_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people.vaccin_prep_store_log_id IS 'Код лога VACCIN_PREP_STORE_LOG.ID';


--
-- TOC entry 1059 (class 1259 OID 22344)
-- Dependencies: 14
-- Name: vac_people_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_people_status (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vac_people_status OWNER TO postgres;

--
-- TOC entry 16901 (class 0 OID 0)
-- Dependencies: 1059
-- Name: TABLE vac_people_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_people_status IS 'Статусы прививок
Выполнено Планируется Отменено - Неявка, отвод?
Author:kulikovskiy';


--
-- TOC entry 16902 (class 0 OID 0)
-- Dependencies: 1059
-- Name: COLUMN vac_people_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_status.oid IS 'Код';


--
-- TOC entry 16903 (class 0 OID 0)
-- Dependencies: 1059
-- Name: COLUMN vac_people_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_status.name IS 'Наименование';


--
-- TOC entry 1060 (class 1259 OID 22347)
-- Dependencies: 14
-- Name: vac_people_test; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_people_test (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    test_date date NOT NULL,
    reaction character varying(511),
    reaction_rubec integer,
    vac_test_result_id character(36),
    vac_test_id character(36) NOT NULL,
    emp_id character(36),
    emp_name character varying(255),
    company_id character(36),
    company_name character varying(255),
    register_date date,
    exec_emp_id character(36),
    exec_emp_name character varying(255)
);


ALTER TABLE mir.vac_people_test OWNER TO postgres;

--
-- TOC entry 16904 (class 0 OID 0)
-- Dependencies: 1060
-- Name: TABLE vac_people_test; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_people_test IS 'Результаты проб для каждого чела
Autthor: kulikovskiy';


--
-- TOC entry 16905 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.oid IS 'Код';


--
-- TOC entry 16906 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.people_id IS 'PEOPLE.ID';


--
-- TOC entry 16907 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.test_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.test_date IS 'Дата взятия пробы';


--
-- TOC entry 16908 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.reaction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.reaction IS 'Описание реакции на пробу';


--
-- TOC entry 16909 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.reaction_rubec; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.reaction_rubec IS 'Размер рубца (мм) Только для Манту';


--
-- TOC entry 16910 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.vac_test_result_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.vac_test_result_id IS 'Результат VAC_TEST_RESULT.ID';


--
-- TOC entry 16911 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.vac_test_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.vac_test_id IS 'Что за проба VAC_TEST.ID';


--
-- TOC entry 16912 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.emp_id IS 'Врач назначивший  пробу EMP.ID';


--
-- TOC entry 16913 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.emp_name IS 'Фамилия ИО врача  назаначившего  пробу';


--
-- TOC entry 16914 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.company_id IS 'ЛПУ в котром было сделана проба COMPANY.ID';


--
-- TOC entry 16915 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.company_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.company_name IS 'Название ЛПУ в котром было сделано';


--
-- TOC entry 16916 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.register_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.register_date IS 'ДАТА учета';


--
-- TOC entry 16917 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.exec_emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.exec_emp_id IS 'Сотрудник, который выполнил пробу EMP.ID';


--
-- TOC entry 16918 (class 0 OID 0)
-- Dependencies: 1060
-- Name: COLUMN vac_people_test.exec_emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_people_test.exec_emp_name IS 'ФИО сотрудника выполнившего пробу';


--
-- TOC entry 1061 (class 1259 OID 22353)
-- Dependencies: 14
-- Name: vac_plan; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_plan (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    infection_id character(36) NOT NULL,
    kratn_id character(36) NOT NULL,
    plan_date date NOT NULL,
    status_id character(36) NOT NULL,
    vac_cancel_id character(36),
    is_not_vaccin integer,
    is_not_exists_prev_vaccin integer,
    vaccin_period integer,
    vac_people_id character(36),
    emp_id character(36),
    emp_name character varying(255)
);


ALTER TABLE mir.vac_plan OWNER TO postgres;

--
-- TOC entry 16919 (class 0 OID 0)
-- Dependencies: 1061
-- Name: TABLE vac_plan; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_plan IS 'Индививдуальный план прививок
Author: kulikovskiy';


--
-- TOC entry 16920 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.oid IS 'Код';


--
-- TOC entry 16921 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.people_id IS 'Код пациента PEOPLE.ID';


--
-- TOC entry 16922 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.infection_id IS 'Код инфекции INFECTION.ID';


--
-- TOC entry 16923 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.kratn_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.kratn_id IS 'Картность VAC_KRATN_NAME.ID';


--
-- TOC entry 16924 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.plan_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.plan_date IS 'Предпалагаемая дата';


--
-- TOC entry 16925 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.status_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.status_id IS '1-план; 2-выполнено; 3-отвод(отмена) VAC_PLAN_STATUS.ID';


--
-- TOC entry 16926 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.vac_cancel_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.vac_cancel_id IS 'Ссылка на отвод VAC_CANCEL.ID';


--
-- TOC entry 16927 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.is_not_vaccin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.is_not_vaccin IS '1-если соблюдается условие: "Ранее не прививались"';


--
-- TOC entry 16928 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.is_not_exists_prev_vaccin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.is_not_exists_prev_vaccin IS '1-если соблюдается условие: "Не прививались в предыдущий период"';


--
-- TOC entry 16929 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.vaccin_period; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.vaccin_period IS '> 0, если прививка планируется от даты последней вакцинации.';


--
-- TOC entry 16930 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.vac_people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.vac_people_id IS 'Нежесткая ссылка на сделанную прививку VAC_PEOPLE.ID';


--
-- TOC entry 16931 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.emp_id IS 'Ссылка на сотрудника, кто последний менял индивидуальный план EMP.ID';


--
-- TOC entry 16932 (class 0 OID 0)
-- Dependencies: 1061
-- Name: COLUMN vac_plan.emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan.emp_name IS 'ФИО врача, внесшего информацию';


--
-- TOC entry 1062 (class 1259 OID 22359)
-- Dependencies: 14
-- Name: vac_plan_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_plan_status (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vac_plan_status OWNER TO postgres;

--
-- TOC entry 16933 (class 0 OID 0)
-- Dependencies: 1062
-- Name: TABLE vac_plan_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_plan_status IS 'Названия статусов планов
Author: kulikovskiy';


--
-- TOC entry 16934 (class 0 OID 0)
-- Dependencies: 1062
-- Name: COLUMN vac_plan_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan_status.oid IS 'Код';


--
-- TOC entry 16935 (class 0 OID 0)
-- Dependencies: 1062
-- Name: COLUMN vac_plan_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_plan_status.name IS 'Название';


--
-- TOC entry 1063 (class 1259 OID 22362)
-- Dependencies: 14
-- Name: vac_repl_objects; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_objects (
    oid character(36) NOT NULL,
    table_name character varying(255),
    syn character varying(255),
    fn_order integer
);


ALTER TABLE mir.vac_repl_objects OWNER TO postgres;

--
-- TOC entry 16936 (class 0 OID 0)
-- Dependencies: 1063
-- Name: TABLE vac_repl_objects; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_objects IS 'vac_repl_objects';


--
-- TOC entry 16937 (class 0 OID 0)
-- Dependencies: 1063
-- Name: COLUMN vac_repl_objects.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_objects.oid IS 'Код';


--
-- TOC entry 16938 (class 0 OID 0)
-- Dependencies: 1063
-- Name: COLUMN vac_repl_objects.table_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_objects.table_name IS 'Имя таблицы, включенной в репликацию';


--
-- TOC entry 16939 (class 0 OID 0)
-- Dependencies: 1063
-- Name: COLUMN vac_repl_objects.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_objects.syn IS 'Синоним для таблицы';


--
-- TOC entry 16940 (class 0 OID 0)
-- Dependencies: 1063
-- Name: COLUMN vac_repl_objects.fn_order; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_objects.fn_order IS 'Последовательность репликации данных';


--
-- TOC entry 1064 (class 1259 OID 22368)
-- Dependencies: 7473 14
-- Name: vac_repl_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_people (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    date_change timestamp without time zone DEFAULT now() NOT NULL,
    company_id character(36)
);


ALTER TABLE mir.vac_repl_people OWNER TO postgres;

--
-- TOC entry 16941 (class 0 OID 0)
-- Dependencies: 1064
-- Name: TABLE vac_repl_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_people IS 'Таблица репликации данных пациентов, которые подверглись изменениям';


--
-- TOC entry 16942 (class 0 OID 0)
-- Dependencies: 1064
-- Name: COLUMN vac_repl_people.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people.oid IS 'Код';


--
-- TOC entry 16943 (class 0 OID 0)
-- Dependencies: 1064
-- Name: COLUMN vac_repl_people.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people.people_id IS 'Код пациента PEOPLE.ID';


--
-- TOC entry 16944 (class 0 OID 0)
-- Dependencies: 1064
-- Name: COLUMN vac_repl_people.date_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people.date_change IS 'Дата время изменения данных';


--
-- TOC entry 16945 (class 0 OID 0)
-- Dependencies: 1064
-- Name: COLUMN vac_repl_people.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people.company_id IS 'Код компании COMPANY.ID';


--
-- TOC entry 1065 (class 1259 OID 22372)
-- Dependencies: 14
-- Name: vac_repl_people_loaded; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_people_loaded (
    oid character(36) NOT NULL,
    people_id character(36)
);


ALTER TABLE mir.vac_repl_people_loaded OWNER TO postgres;

--
-- TOC entry 16946 (class 0 OID 0)
-- Dependencies: 1065
-- Name: TABLE vac_repl_people_loaded; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_people_loaded IS 'Таблица пациентов, загруженных по репликации после инициализации';


--
-- TOC entry 16947 (class 0 OID 0)
-- Dependencies: 1065
-- Name: COLUMN vac_repl_people_loaded.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_loaded.oid IS 'Код';


--
-- TOC entry 16948 (class 0 OID 0)
-- Dependencies: 1065
-- Name: COLUMN vac_repl_people_loaded.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_loaded.people_id IS 'Код пациента PEOPLE.ID';


--
-- TOC entry 1066 (class 1259 OID 22375)
-- Dependencies: 7474 14
-- Name: vac_repl_people_queue; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_people_queue (
    oid character(36) NOT NULL,
    people_id character(36),
    date_change timestamp without time zone DEFAULT now(),
    company_id character(36)
);


ALTER TABLE mir.vac_repl_people_queue OWNER TO postgres;

--
-- TOC entry 16949 (class 0 OID 0)
-- Dependencies: 1066
-- Name: TABLE vac_repl_people_queue; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_people_queue IS 'Таблица очереди загрузки данных по репликации после инициализации';


--
-- TOC entry 16950 (class 0 OID 0)
-- Dependencies: 1066
-- Name: COLUMN vac_repl_people_queue.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_queue.oid IS 'Код';


--
-- TOC entry 16951 (class 0 OID 0)
-- Dependencies: 1066
-- Name: COLUMN vac_repl_people_queue.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_queue.people_id IS 'Код пациента PEOPLE.ID';


--
-- TOC entry 16952 (class 0 OID 0)
-- Dependencies: 1066
-- Name: COLUMN vac_repl_people_queue.date_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_queue.date_change IS 'Дата изменения данных';


--
-- TOC entry 16953 (class 0 OID 0)
-- Dependencies: 1066
-- Name: COLUMN vac_repl_people_queue.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_people_queue.company_id IS 'Код компании COMPANY.FK_ID';


--
-- TOC entry 1067 (class 1259 OID 22379)
-- Dependencies: 14
-- Name: vac_repl_subscriber; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_subscriber (
    company_id character(36) NOT NULL
);


ALTER TABLE mir.vac_repl_subscriber OWNER TO postgres;

--
-- TOC entry 16954 (class 0 OID 0)
-- Dependencies: 1067
-- Name: TABLE vac_repl_subscriber; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_subscriber IS 'Таблица подписчиков репликации вакцинации';


--
-- TOC entry 16955 (class 0 OID 0)
-- Dependencies: 1067
-- Name: COLUMN vac_repl_subscriber.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_subscriber.company_id IS 'Код организации';


--
-- TOC entry 1068 (class 1259 OID 22382)
-- Dependencies: 7475 14
-- Name: vac_repl_updates; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_repl_updates (
    oid character(36) NOT NULL,
    object_id character(36),
    rec_id character(36),
    date_change timestamp without time zone DEFAULT now(),
    company_id character(36)
);


ALTER TABLE mir.vac_repl_updates OWNER TO postgres;

--
-- TOC entry 16956 (class 0 OID 0)
-- Dependencies: 1068
-- Name: TABLE vac_repl_updates; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_repl_updates IS 'vac_repl_updates';


--
-- TOC entry 16957 (class 0 OID 0)
-- Dependencies: 1068
-- Name: COLUMN vac_repl_updates.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_updates.oid IS 'Код';


--
-- TOC entry 16958 (class 0 OID 0)
-- Dependencies: 1068
-- Name: COLUMN vac_repl_updates.object_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_updates.object_id IS 'Код объекта репликации TVAC_REPL_OBJECTS';


--
-- TOC entry 16959 (class 0 OID 0)
-- Dependencies: 1068
-- Name: COLUMN vac_repl_updates.rec_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_updates.rec_id IS 'Код записи';


--
-- TOC entry 16960 (class 0 OID 0)
-- Dependencies: 1068
-- Name: COLUMN vac_repl_updates.date_change; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_updates.date_change IS 'Дата изменения данных';


--
-- TOC entry 16961 (class 0 OID 0)
-- Dependencies: 1068
-- Name: COLUMN vac_repl_updates.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_repl_updates.company_id IS 'Код компании COMPANY.FK_ID';


--
-- TOC entry 1069 (class 1259 OID 22386)
-- Dependencies: 14
-- Name: vac_sicness; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_sicness (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    infection_id character(36),
    end_date date NOT NULL,
    comment character varying(255),
    company_id character(36),
    company_name character varying(255),
    emp_id character(36),
    emp_name character varying(255),
    icd10_id character(36),
    diag_id character(36),
    icd10_text character varying(255)
);


ALTER TABLE mir.vac_sicness OWNER TO postgres;

--
-- TOC entry 16962 (class 0 OID 0)
-- Dependencies: 1069
-- Name: TABLE vac_sicness; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_sicness IS 'Перенесенные заболевания, которые повлияли на приобритение иммунитета
Author: kulikovskiy';


--
-- TOC entry 16963 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.oid IS 'Код';


--
-- TOC entry 16964 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.people_id IS 'Код пациента PEOPLE.ID';


--
-- TOC entry 16965 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.infection_id IS 'Код инфекции INFECTION.ID';


--
-- TOC entry 16966 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.end_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.end_date IS 'Дата выздоровления';


--
-- TOC entry 16967 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.comment IS 'Примечания по ходу болезни';


--
-- TOC entry 16968 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.company_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.company_id IS 'Код ЛПУ COMPANY.ID';


--
-- TOC entry 16969 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.company_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.company_name IS 'Название ЛПУ';


--
-- TOC entry 16970 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.emp_id IS 'ВРАЧ, внесший информацию EMP.ID';


--
-- TOC entry 16971 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.emp_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.emp_name IS 'ФИО врача, внесшего информацию';


--
-- TOC entry 16972 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.icd10_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.icd10_id IS 'Код МКБ10 ICD10.ID';


--
-- TOC entry 16973 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.diag_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.diag_id IS 'по хорошему ссылка на DIAG.ID';


--
-- TOC entry 16974 (class 0 OID 0)
-- Dependencies: 1069
-- Name: COLUMN vac_sicness.icd10_text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_sicness.icd10_text IS 'Название из МКБ10';


--
-- TOC entry 1070 (class 1259 OID 22392)
-- Dependencies: 14
-- Name: vac_status_series; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_status_series (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vac_status_series OWNER TO postgres;

--
-- TOC entry 16975 (class 0 OID 0)
-- Dependencies: 1070
-- Name: TABLE vac_status_series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_status_series IS 'Статусы серий

Серия закончена (Выполнено)
Серия выплняется
Серия прервана

Author: kulikovskiy';


--
-- TOC entry 16976 (class 0 OID 0)
-- Dependencies: 1070
-- Name: COLUMN vac_status_series.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_status_series.oid IS 'Код';


--
-- TOC entry 16977 (class 0 OID 0)
-- Dependencies: 1070
-- Name: COLUMN vac_status_series.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_status_series.name IS 'Наименование';


--
-- TOC entry 1071 (class 1259 OID 22395)
-- Dependencies: 14
-- Name: vac_store; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_store (
    oid character(36) NOT NULL,
    dept_id character(36) NOT NULL,
    comment character varying(255)
);


ALTER TABLE mir.vac_store OWNER TO postgres;

--
-- TOC entry 16978 (class 0 OID 0)
-- Dependencies: 1071
-- Name: TABLE vac_store; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_store IS 'Места учета вакцин и проб
Author: kulikovskiy';


--
-- TOC entry 16979 (class 0 OID 0)
-- Dependencies: 1071
-- Name: COLUMN vac_store.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_store.oid IS 'Код';


--
-- TOC entry 16980 (class 0 OID 0)
-- Dependencies: 1071
-- Name: COLUMN vac_store.dept_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_store.dept_id IS 'DEPT.ID';


--
-- TOC entry 16981 (class 0 OID 0)
-- Dependencies: 1071
-- Name: COLUMN vac_store.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_store.comment IS 'Комментарий';


--
-- TOC entry 1072 (class 1259 OID 22398)
-- Dependencies: 14
-- Name: vac_test; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_test (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    comment character varying(255)
);


ALTER TABLE mir.vac_test OWNER TO postgres;

--
-- TOC entry 16982 (class 0 OID 0)
-- Dependencies: 1072
-- Name: TABLE vac_test; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_test IS 'Вакцинация :: справочник проб
Author: kulikovskiy';


--
-- TOC entry 16983 (class 0 OID 0)
-- Dependencies: 1072
-- Name: COLUMN vac_test.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test.oid IS 'Код';


--
-- TOC entry 16984 (class 0 OID 0)
-- Dependencies: 1072
-- Name: COLUMN vac_test.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test.name IS 'Название';


--
-- TOC entry 16985 (class 0 OID 0)
-- Dependencies: 1072
-- Name: COLUMN vac_test.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test.comment IS 'Описание';


--
-- TOC entry 1073 (class 1259 OID 22404)
-- Dependencies: 14
-- Name: vac_test_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vac_test_result (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    vac_test_id character(36) NOT NULL,
    comment character varying(4000)
);


ALTER TABLE mir.vac_test_result OWNER TO postgres;

--
-- TOC entry 16986 (class 0 OID 0)
-- Dependencies: 1073
-- Name: TABLE vac_test_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vac_test_result IS 'Возможные результаты по тестам
Например по манту и реакции Шика
Author: kulikovskiy';


--
-- TOC entry 16987 (class 0 OID 0)
-- Dependencies: 1073
-- Name: COLUMN vac_test_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test_result.oid IS 'SEQUENCE=[SEQ_VAC_TEST_RESULT]';


--
-- TOC entry 16988 (class 0 OID 0)
-- Dependencies: 1073
-- Name: COLUMN vac_test_result.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test_result.name IS 'Название обозначение';


--
-- TOC entry 16989 (class 0 OID 0)
-- Dependencies: 1073
-- Name: COLUMN vac_test_result.vac_test_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test_result.vac_test_id IS 'Код пробы VAC_TEST.ID';


--
-- TOC entry 16990 (class 0 OID 0)
-- Dependencies: 1073
-- Name: COLUMN vac_test_result.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vac_test_result.comment IS 'Описание - больше для методической части';


--
-- TOC entry 1074 (class 1259 OID 22410)
-- Dependencies: 14
-- Name: vaccin_log_operation; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_log_operation (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE mir.vaccin_log_operation OWNER TO postgres;

--
-- TOC entry 16991 (class 0 OID 0)
-- Dependencies: 1074
-- Name: TABLE vaccin_log_operation; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_log_operation IS 'Операции логирования
1- приход; 2-расход; 3-прививка; 4- Списано; 5- Перемещение на другой склад

Author: kulikovskiy';


--
-- TOC entry 16992 (class 0 OID 0)
-- Dependencies: 1074
-- Name: COLUMN vaccin_log_operation.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_log_operation.oid IS 'Код';


--
-- TOC entry 16993 (class 0 OID 0)
-- Dependencies: 1074
-- Name: COLUMN vaccin_log_operation.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_log_operation.name IS 'Название';


--
-- TOC entry 1075 (class 1259 OID 22413)
-- Dependencies: 7476 14
-- Name: vaccin_prep; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_prep (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    unit_id character(36) NOT NULL,
    dose numeric DEFAULT 1 NOT NULL,
    del integer NOT NULL,
    def_input_type_id character(36),
    comment character varying(4000)
);


ALTER TABLE mir.vaccin_prep OWNER TO postgres;

--
-- TOC entry 16994 (class 0 OID 0)
-- Dependencies: 1075
-- Name: TABLE vaccin_prep; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_prep IS 'Учет имунобилогических препаратов
Author: kulikovskiy';


--
-- TOC entry 16995 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.oid IS 'Код';


--
-- TOC entry 16996 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.name IS 'Название препарата';


--
-- TOC entry 16997 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.unit_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.unit_id IS 'Единица измерения';


--
-- TOC entry 16998 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.dose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.dose IS 'Доза по умолчанию';


--
-- TOC entry 16999 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.del; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.del IS 'Удален';


--
-- TOC entry 17000 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.def_input_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.def_input_type_id IS 'Способ ввдения по умолчанию VAC_INPUT_TYPE.ID';


--
-- TOC entry 17001 (class 0 OID 0)
-- Dependencies: 1075
-- Name: COLUMN vaccin_prep.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep.comment IS 'Примечание описание';


--
-- TOC entry 1076 (class 1259 OID 22420)
-- Dependencies: 14
-- Name: vaccin_prep_infection; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_prep_infection (
    oid character(36) NOT NULL,
    vaccin_prep_id character(36),
    vaccin_infection_id character(36)
);


ALTER TABLE mir.vaccin_prep_infection OWNER TO postgres;

--
-- TOC entry 17002 (class 0 OID 0)
-- Dependencies: 1076
-- Name: TABLE vaccin_prep_infection; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_prep_infection IS 'Связь между назваинем вакцины и болезнями от кторых она создает иммунитет
Вакцина может быть комбинированая, т.е. прививать иммунитет сразу от нескольких инфекций
Author: kulikovskiy';


--
-- TOC entry 17003 (class 0 OID 0)
-- Dependencies: 1076
-- Name: COLUMN vaccin_prep_infection.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_infection.oid IS 'Код';


--
-- TOC entry 17004 (class 0 OID 0)
-- Dependencies: 1076
-- Name: COLUMN vaccin_prep_infection.vaccin_prep_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_infection.vaccin_prep_id IS 'Код препарата VACCIN_PREP.ID';


--
-- TOC entry 17005 (class 0 OID 0)
-- Dependencies: 1076
-- Name: COLUMN vaccin_prep_infection.vaccin_infection_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_infection.vaccin_infection_id IS 'Код инфекции INFECTION.ID';


--
-- TOC entry 1077 (class 1259 OID 22423)
-- Dependencies: 14
-- Name: vaccin_prep_store; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_prep_store (
    oid character(36) NOT NULL,
    store_id character(36) NOT NULL,
    vaccin_prep_id character(36) NOT NULL,
    series character varying(50),
    fitness_date date,
    reminder numeric
);


ALTER TABLE mir.vaccin_prep_store OWNER TO postgres;

--
-- TOC entry 17006 (class 0 OID 0)
-- Dependencies: 1077
-- Name: TABLE vaccin_prep_store; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_prep_store IS 'Серии препаратов для вакцинирования
Author: kulikovskiy';


--
-- TOC entry 17007 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.oid IS 'Код';


--
-- TOC entry 17008 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.store_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.store_id IS 'Это ссылка на VAC_STORE.FK_ID';


--
-- TOC entry 17009 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.vaccin_prep_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.vaccin_prep_id IS 'ссылка на VACCIN_PREP.ID';


--
-- TOC entry 17010 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.series; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.series IS 'Серия';


--
-- TOC entry 17011 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.fitness_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.fitness_date IS 'Годность';


--
-- TOC entry 17012 (class 0 OID 0)
-- Dependencies: 1077
-- Name: COLUMN vaccin_prep_store.reminder; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store.reminder IS 'Остаток';


--
-- TOC entry 1078 (class 1259 OID 22429)
-- Dependencies: 14
-- Name: vaccin_prep_store_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_prep_store_log (
    oid character(36) NOT NULL,
    vaccin_prep_store_id character(36) NOT NULL,
    type_id character(36) NOT NULL,
    date_on date NOT NULL,
    num numeric,
    emp_id character(36),
    comment character varying(255),
    old numeric,
    new numeric
);


ALTER TABLE mir.vaccin_prep_store_log OWNER TO postgres;

--
-- TOC entry 17013 (class 0 OID 0)
-- Dependencies: 1078
-- Name: TABLE vaccin_prep_store_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_prep_store_log IS 'История операций с конкретной серией препаратов для вакцинирования
Author: kulikovskiy';


--
-- TOC entry 17014 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.oid IS 'Код';


--
-- TOC entry 17015 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.vaccin_prep_store_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.vaccin_prep_store_id IS 'ссылка на VACCIN_PREP_STORE.ID';


--
-- TOC entry 17016 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.type_id IS 'Код типа операции VACCIN_LOG_OPERATION.ID';


--
-- TOC entry 17017 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.date_on; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.date_on IS 'Дата';


--
-- TOC entry 17018 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.num IS 'Количество, положительно - приход, отрицательное расход или списано';


--
-- TOC entry 17019 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.emp_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.emp_id IS 'Врач или кто списал EMP.ID не ссылка';


--
-- TOC entry 17020 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.comment IS 'Примечание';


--
-- TOC entry 17021 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.old; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.old IS 'Было на склaде';


--
-- TOC entry 17022 (class 0 OID 0)
-- Dependencies: 1078
-- Name: COLUMN vaccin_prep_store_log.new; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_prep_store_log.new IS 'Стало на складе';


--
-- TOC entry 1079 (class 1259 OID 22435)
-- Dependencies: 14
-- Name: vaccin_shem; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_shem (
    oid character(36) NOT NULL,
    kratn_id character(36) NOT NULL,
    minpause integer,
    minpausetext character varying(255),
    minage integer,
    minagetext character varying(255),
    shemname_id character(36)
);


ALTER TABLE mir.vaccin_shem OWNER TO postgres;

--
-- TOC entry 17023 (class 0 OID 0)
-- Dependencies: 1079
-- Name: TABLE vaccin_shem; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_shem IS 'Схемы вакцинации
Author: kulikovskiy';


--
-- TOC entry 17024 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.oid IS 'Код';


--
-- TOC entry 17025 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.kratn_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.kratn_id IS '01=V1, 02=V2 11=R1, 12=R2 VAC_KRATN_NAME.ID';


--
-- TOC entry 17026 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.minpause; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.minpause IS 'Минимальная пауза в днях (для первого 0),';


--
-- TOC entry 17027 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.minpausetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.minpausetext IS 'Текст минимальной паузы';


--
-- TOC entry 17028 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.minage; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.minage IS 'Минимаьный возраст в днях';


--
-- TOC entry 17029 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.minagetext; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.minagetext IS 'Текст минимального возраста';


--
-- TOC entry 17030 (class 0 OID 0)
-- Dependencies: 1079
-- Name: COLUMN vaccin_shem.shemname_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shem.shemname_id IS 'ссылка на название схемы VACCIN_SHEMNAME.FK_D';


--
-- TOC entry 1080 (class 1259 OID 22441)
-- Dependencies: 14
-- Name: vaccin_shemname; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_shemname (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    vaccin_prep_id character(36) NOT NULL,
    comment character varying(4000)
);


ALTER TABLE mir.vaccin_shemname OWNER TO postgres;

--
-- TOC entry 17031 (class 0 OID 0)
-- Dependencies: 1080
-- Name: TABLE vaccin_shemname; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_shemname IS 'Схемы факцинации (названия)
Author: kulikovskiy';


--
-- TOC entry 17032 (class 0 OID 0)
-- Dependencies: 1080
-- Name: COLUMN vaccin_shemname.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shemname.oid IS 'Код';


--
-- TOC entry 17033 (class 0 OID 0)
-- Dependencies: 1080
-- Name: COLUMN vaccin_shemname.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shemname.name IS 'Название';


--
-- TOC entry 17034 (class 0 OID 0)
-- Dependencies: 1080
-- Name: COLUMN vaccin_shemname.vaccin_prep_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shemname.vaccin_prep_id IS 'VACCIN_PREP.FK_ID';


--
-- TOC entry 17035 (class 0 OID 0)
-- Dependencies: 1080
-- Name: COLUMN vaccin_shemname.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_shemname.comment IS 'Описание';


--
-- TOC entry 1081 (class 1259 OID 22447)
-- Dependencies: 14
-- Name: vaccin_unit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vaccin_unit (
    oid character(36) NOT NULL,
    name character varying(255) NOT NULL,
    short_name character varying(255) NOT NULL
);


ALTER TABLE mir.vaccin_unit OWNER TO postgres;

--
-- TOC entry 17036 (class 0 OID 0)
-- Dependencies: 1081
-- Name: TABLE vaccin_unit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vaccin_unit IS 'Единицы измерения для вакцинации
Сделал потому как med.tei засрали
Author: kulikovskiy';


--
-- TOC entry 17037 (class 0 OID 0)
-- Dependencies: 1081
-- Name: COLUMN vaccin_unit.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_unit.oid IS 'Код';


--
-- TOC entry 17038 (class 0 OID 0)
-- Dependencies: 1081
-- Name: COLUMN vaccin_unit.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_unit.name IS 'Название';


--
-- TOC entry 17039 (class 0 OID 0)
-- Dependencies: 1081
-- Name: COLUMN vaccin_unit.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vaccin_unit.short_name IS 'Сокращение';


--
-- TOC entry 1082 (class 1259 OID 22453)
-- Dependencies: 6778 14
-- Name: vholidayreason; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW vholidayreason AS
    SELECT holidayreason.id, holidayreason.name FROM holidayreason;


ALTER TABLE mir.vholidayreason OWNER TO postgres;

--
-- TOC entry 1083 (class 1259 OID 22457)
-- Dependencies: 14
-- Name: video_lessons; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE video_lessons (
    oid character(36) NOT NULL,
    order_video numeric(20,0),
    file_name character varying(255)
);
ALTER TABLE ONLY video_lessons ALTER COLUMN order_video SET STATISTICS 0;
ALTER TABLE ONLY video_lessons ALTER COLUMN file_name SET STATISTICS 0;


ALTER TABLE mir.video_lessons OWNER TO postgres;

--
-- TOC entry 1084 (class 1259 OID 22460)
-- Dependencies: 14
-- Name: video_tutorial; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE video_tutorial (
    oid character(36) NOT NULL,
    name text,
    comment text
);
ALTER TABLE ONLY video_tutorial ALTER COLUMN oid SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial ALTER COLUMN name SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial ALTER COLUMN comment SET STATISTICS 0;


ALTER TABLE mir.video_tutorial OWNER TO postgres;

--
-- TOC entry 17040 (class 0 OID 0)
-- Dependencies: 1084
-- Name: TABLE video_tutorial; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE video_tutorial IS 'Видеоуроки разбитые по ролям';


--
-- TOC entry 17041 (class 0 OID 0)
-- Dependencies: 1084
-- Name: COLUMN video_tutorial.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial.oid IS 'Oid';


--
-- TOC entry 17042 (class 0 OID 0)
-- Dependencies: 1084
-- Name: COLUMN video_tutorial.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial.name IS 'Наименование видеоурока';


--
-- TOC entry 17043 (class 0 OID 0)
-- Dependencies: 1084
-- Name: COLUMN video_tutorial.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial.comment IS 'Комментарий к видеоуроку';


--
-- TOC entry 1085 (class 1259 OID 22466)
-- Dependencies: 14
-- Name: video_tutorial_links; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE video_tutorial_links (
    oid character(36) NOT NULL,
    controller character varying,
    video_tutorial character(36),
    comment character varying
);
ALTER TABLE ONLY video_tutorial_links ALTER COLUMN oid SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial_links ALTER COLUMN controller SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial_links ALTER COLUMN video_tutorial SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial_links ALTER COLUMN comment SET STATISTICS 0;


ALTER TABLE mir.video_tutorial_links OWNER TO postgres;

--
-- TOC entry 17044 (class 0 OID 0)
-- Dependencies: 1085
-- Name: COLUMN video_tutorial_links.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_links.oid IS 'Oid';


--
-- TOC entry 17045 (class 0 OID 0)
-- Dependencies: 1085
-- Name: COLUMN video_tutorial_links.controller; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_links.controller IS 'Название контроллера, из которого переходить на выбранный видеоурок';


--
-- TOC entry 17046 (class 0 OID 0)
-- Dependencies: 1085
-- Name: COLUMN video_tutorial_links.video_tutorial; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_links.video_tutorial IS 'ссылка на видеоурок';


--
-- TOC entry 17047 (class 0 OID 0)
-- Dependencies: 1085
-- Name: COLUMN video_tutorial_links.comment; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_links.comment IS 'Комментарий';


--
-- TOC entry 1086 (class 1259 OID 22472)
-- Dependencies: 14
-- Name: video_tutorial_role; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE video_tutorial_role (
    oid character(36) NOT NULL,
    role character(36),
    video_tutorial character(36)
);
ALTER TABLE ONLY video_tutorial_role ALTER COLUMN oid SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial_role ALTER COLUMN role SET STATISTICS 0;
ALTER TABLE ONLY video_tutorial_role ALTER COLUMN video_tutorial SET STATISTICS 0;


ALTER TABLE mir.video_tutorial_role OWNER TO postgres;

--
-- TOC entry 17048 (class 0 OID 0)
-- Dependencies: 1086
-- Name: TABLE video_tutorial_role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE video_tutorial_role IS 'Связь ролей и видеоуроков';


--
-- TOC entry 17049 (class 0 OID 0)
-- Dependencies: 1086
-- Name: COLUMN video_tutorial_role.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_role.oid IS 'Oid';


--
-- TOC entry 17050 (class 0 OID 0)
-- Dependencies: 1086
-- Name: COLUMN video_tutorial_role.role; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_role.role IS 'Роль';


--
-- TOC entry 17051 (class 0 OID 0)
-- Dependencies: 1086
-- Name: COLUMN video_tutorial_role.video_tutorial; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN video_tutorial_role.video_tutorial IS 'Видеоурок';


--
-- TOC entry 1087 (class 1259 OID 22475)
-- Dependencies: 14
-- Name: vip_people; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vip_people (
    oid character(36) NOT NULL,
    people_oid character(36) NOT NULL,
    sotr_oid character(36),
    password character varying(100)
);


ALTER TABLE mir.vip_people OWNER TO postgres;

--
-- TOC entry 17052 (class 0 OID 0)
-- Dependencies: 1087
-- Name: TABLE vip_people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vip_people IS 'Список vip пациентов с привязкой к врачам';


--
-- TOC entry 17053 (class 0 OID 0)
-- Dependencies: 1087
-- Name: COLUMN vip_people.people_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vip_people.people_oid IS 'oid vip пациента';


--
-- TOC entry 17054 (class 0 OID 0)
-- Dependencies: 1087
-- Name: COLUMN vip_people.sotr_oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vip_people.sotr_oid IS 'oid сотрудника имеющего доступ к данным пациента';


--
-- TOC entry 17055 (class 0 OID 0)
-- Dependencies: 1087
-- Name: COLUMN vip_people.password; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vip_people.password IS 'пароль сотрудника для доступа';


--
-- TOC entry 1088 (class 1259 OID 22478)
-- Dependencies: 7477 7478 14
-- Name: visit; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE visit (
    id character(36) NOT NULL,
    beginv date DEFAULT ('now'::text)::date,
    endv date,
    mdoc_id character(36) NOT NULL,
    pay_type_id character(36),
    addr_id character(36),
    visit_state integer DEFAULT 0 NOT NULL,
    sotr_id character(36),
    pay_method character(36)
);


ALTER TABLE mir.visit OWNER TO postgres;

--
-- TOC entry 17056 (class 0 OID 0)
-- Dependencies: 1088
-- Name: TABLE visit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE visit IS 'Явки (посещения) Author: A.Nakorjakov, Author: Linnikov';


--
-- TOC entry 17057 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.id IS ' ';


--
-- TOC entry 17058 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.beginv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.beginv IS 'Начало визита';


--
-- TOC entry 17059 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.endv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.endv IS 'Окончание визита';


--
-- TOC entry 17060 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.mdoc_id IS 'Главный документ [MDOC.ID]';


--
-- TOC entry 17061 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.pay_type_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.pay_type_id IS 'Тип оплаты [PAY_TYPE.ID]';


--
-- TOC entry 17062 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.addr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.addr_id IS 'Адрес [ADDRESS.ID]';


--
-- TOC entry 17063 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.visit_state; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.visit_state IS '(0 - Used; 1 - temp)';


--
-- TOC entry 17064 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.sotr_id IS 'sotr.oid';


--
-- TOC entry 17065 (class 0 OID 0)
-- Dependencies: 1088
-- Name: COLUMN visit.pay_method; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit.pay_method IS 'код способа оплаты медицинской помощи';


--
-- TOC entry 1089 (class 1259 OID 22483)
-- Dependencies: 7479 7480 14
-- Name: visit_goal; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE visit_goal (
    oid character(36) NOT NULL,
    name character varying(255),
    tfoms numeric,
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_visit_goal$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.visit_goal OWNER TO postgres;

--
-- TOC entry 17066 (class 0 OID 0)
-- Dependencies: 1089
-- Name: TABLE visit_goal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE visit_goal IS 'Классификатор целей посещения врача   Author: Spasskiy S.N.';


--
-- TOC entry 17067 (class 0 OID 0)
-- Dependencies: 1089
-- Name: COLUMN visit_goal.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_goal.oid IS 'id';


--
-- TOC entry 17068 (class 0 OID 0)
-- Dependencies: 1089
-- Name: COLUMN visit_goal.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_goal.name IS 'name';


--
-- TOC entry 17069 (class 0 OID 0)
-- Dependencies: 1089
-- Name: COLUMN visit_goal.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_goal.show IS '1- показывать 0- скрывать';


--
-- TOC entry 17070 (class 0 OID 0)
-- Dependencies: 1089
-- Name: COLUMN visit_goal.name2; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_goal.name2 IS 'измененное значение поля для статуса "2"';


--
-- TOC entry 17071 (class 0 OID 0)
-- Dependencies: 1089
-- Name: COLUMN visit_goal.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_goal.status IS 'Статусы:
    0-актуальный
    1-предназначен для добавления
    2-предназначен для редактрования
    3-предназначен для удаления
    4-удален';


--
-- TOC entry 1090 (class 1259 OID 22491)
-- Dependencies: 14
-- Name: visit_portal_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE visit_portal_link (
    oid character(36) NOT NULL,
    visit character(36) NOT NULL,
    portal_mdoc_event character(36) NOT NULL
);


ALTER TABLE mir.visit_portal_link OWNER TO postgres;

--
-- TOC entry 17072 (class 0 OID 0)
-- Dependencies: 1090
-- Name: TABLE visit_portal_link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE visit_portal_link IS 'visit_portal_link';


--
-- TOC entry 17073 (class 0 OID 0)
-- Dependencies: 1090
-- Name: COLUMN visit_portal_link.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_portal_link.oid IS 'oid';


--
-- TOC entry 17074 (class 0 OID 0)
-- Dependencies: 1090
-- Name: COLUMN visit_portal_link.visit; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_portal_link.visit IS 'visit';


--
-- TOC entry 17075 (class 0 OID 0)
-- Dependencies: 1090
-- Name: COLUMN visit_portal_link.portal_mdoc_event; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN visit_portal_link.portal_mdoc_event IS 'portal_mdoc_event';


--
-- TOC entry 1091 (class 1259 OID 22494)
-- Dependencies: 7481 7482 14
-- Name: vk_character; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_character (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_character$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_character OWNER TO postgres;

--
-- TOC entry 17076 (class 0 OID 0)
-- Dependencies: 1091
-- Name: TABLE vk_character; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_character IS 'vk_character';


--
-- TOC entry 17077 (class 0 OID 0)
-- Dependencies: 1091
-- Name: COLUMN vk_character.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_character.oid IS 'oid';


--
-- TOC entry 17078 (class 0 OID 0)
-- Dependencies: 1091
-- Name: COLUMN vk_character.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_character.name IS 'name';


--
-- TOC entry 17079 (class 0 OID 0)
-- Dependencies: 1091
-- Name: COLUMN vk_character.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_character.short_name IS 'short_name';


--
-- TOC entry 17080 (class 0 OID 0)
-- Dependencies: 1091
-- Name: COLUMN vk_character.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_character.show IS 'show';


--
-- TOC entry 1092 (class 1259 OID 22502)
-- Dependencies: 7483 7484 14
-- Name: vk_conclusin_reason; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_conclusin_reason (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_vk_conclusin_reaso$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_conclusin_reason OWNER TO postgres;

--
-- TOC entry 17081 (class 0 OID 0)
-- Dependencies: 1092
-- Name: TABLE vk_conclusin_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_conclusin_reason IS 'vk_conclusin_reason';


--
-- TOC entry 17082 (class 0 OID 0)
-- Dependencies: 1092
-- Name: COLUMN vk_conclusin_reason.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusin_reason.oid IS 'oid';


--
-- TOC entry 17083 (class 0 OID 0)
-- Dependencies: 1092
-- Name: COLUMN vk_conclusin_reason.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusin_reason.name IS 'name';


--
-- TOC entry 17084 (class 0 OID 0)
-- Dependencies: 1092
-- Name: COLUMN vk_conclusin_reason.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusin_reason.short_name IS 'short_name';


--
-- TOC entry 17085 (class 0 OID 0)
-- Dependencies: 1092
-- Name: COLUMN vk_conclusin_reason.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusin_reason.show IS 'show';


--
-- TOC entry 1093 (class 1259 OID 22510)
-- Dependencies: 7485 7486 14
-- Name: vk_conclusion; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_conclusion (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_conclusion$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_conclusion OWNER TO postgres;

--
-- TOC entry 17086 (class 0 OID 0)
-- Dependencies: 1093
-- Name: TABLE vk_conclusion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_conclusion IS 'vk_conclusion';


--
-- TOC entry 17087 (class 0 OID 0)
-- Dependencies: 1093
-- Name: COLUMN vk_conclusion.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusion.oid IS 'oid';


--
-- TOC entry 17088 (class 0 OID 0)
-- Dependencies: 1093
-- Name: COLUMN vk_conclusion.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusion.name IS 'name';


--
-- TOC entry 17089 (class 0 OID 0)
-- Dependencies: 1093
-- Name: COLUMN vk_conclusion.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusion.short_name IS 'short_name';


--
-- TOC entry 17090 (class 0 OID 0)
-- Dependencies: 1093
-- Name: COLUMN vk_conclusion.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_conclusion.show IS 'show';


--
-- TOC entry 1094 (class 1259 OID 22518)
-- Dependencies: 14
-- Name: vk_main; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_main (
    oid character(36) NOT NULL,
    people_id character(36) NOT NULL,
    vk_characrer character(36),
    vk_type character(36),
    vk_target character(36),
    vk_standart character(36),
    vk_result character(36),
    vk_conclusion character(36),
    vk_conclusion_reason text,
    create_date date NOT NULL,
    creator character(36) NOT NULL,
    diagnoz character varying(255),
    mdoc_id character(36) NOT NULL,
    vk_pred character(36),
    vk_first_mem character(36),
    vk_second_mem character(36),
    vk_thirh_mem character(36)
);


ALTER TABLE mir.vk_main OWNER TO postgres;

--
-- TOC entry 17091 (class 0 OID 0)
-- Dependencies: 1094
-- Name: TABLE vk_main; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_main IS 'Таблица, содержащая случаи ВК для пациента';


--
-- TOC entry 17092 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.oid IS 'oid';


--
-- TOC entry 17093 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.people_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.people_id IS 'people_id';


--
-- TOC entry 17094 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_characrer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_characrer IS 'vk_characrer';


--
-- TOC entry 17095 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_type IS 'vk_type';


--
-- TOC entry 17096 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_target; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_target IS 'vk_target';


--
-- TOC entry 17097 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_standart IS 'vk_standart';


--
-- TOC entry 17098 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_result IS 'vk_result';


--
-- TOC entry 17099 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_conclusion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_conclusion IS 'vk_conclusion';


--
-- TOC entry 17100 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.vk_conclusion_reason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.vk_conclusion_reason IS 'conclusion_reason';


--
-- TOC entry 17101 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.create_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.create_date IS 'create_date';


--
-- TOC entry 17102 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.creator; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.creator IS 'creator';


--
-- TOC entry 17103 (class 0 OID 0)
-- Dependencies: 1094
-- Name: COLUMN vk_main.diagnoz; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_main.diagnoz IS 'diagnoz';


--
-- TOC entry 1095 (class 1259 OID 22524)
-- Dependencies: 7487 7488 14
-- Name: vk_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_result (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_result$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_result OWNER TO postgres;

--
-- TOC entry 17104 (class 0 OID 0)
-- Dependencies: 1095
-- Name: TABLE vk_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_result IS 'vk_result';


--
-- TOC entry 17105 (class 0 OID 0)
-- Dependencies: 1095
-- Name: COLUMN vk_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_result.oid IS 'oid';


--
-- TOC entry 17106 (class 0 OID 0)
-- Dependencies: 1095
-- Name: COLUMN vk_result.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_result.name IS 'name';


--
-- TOC entry 17107 (class 0 OID 0)
-- Dependencies: 1095
-- Name: COLUMN vk_result.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_result.short_name IS 'short_name';


--
-- TOC entry 17108 (class 0 OID 0)
-- Dependencies: 1095
-- Name: COLUMN vk_result.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_result.show IS 'show';


--
-- TOC entry 1096 (class 1259 OID 22532)
-- Dependencies: 7489 7490 14
-- Name: vk_standart; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_standart (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_standart$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_standart OWNER TO postgres;

--
-- TOC entry 17109 (class 0 OID 0)
-- Dependencies: 1096
-- Name: TABLE vk_standart; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_standart IS 'vk_standart';


--
-- TOC entry 17110 (class 0 OID 0)
-- Dependencies: 1096
-- Name: COLUMN vk_standart.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_standart.oid IS 'oid';


--
-- TOC entry 17111 (class 0 OID 0)
-- Dependencies: 1096
-- Name: COLUMN vk_standart.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_standart.name IS 'name';


--
-- TOC entry 17112 (class 0 OID 0)
-- Dependencies: 1096
-- Name: COLUMN vk_standart.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_standart.short_name IS 'short_name';


--
-- TOC entry 17113 (class 0 OID 0)
-- Dependencies: 1096
-- Name: COLUMN vk_standart.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_standart.show IS 'show';


--
-- TOC entry 1097 (class 1259 OID 22540)
-- Dependencies: 7491 7492 14
-- Name: vk_target; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_target (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_target$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_target OWNER TO postgres;

--
-- TOC entry 17114 (class 0 OID 0)
-- Dependencies: 1097
-- Name: TABLE vk_target; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_target IS 'vk_target';


--
-- TOC entry 17115 (class 0 OID 0)
-- Dependencies: 1097
-- Name: COLUMN vk_target.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_target.oid IS 'oid';


--
-- TOC entry 17116 (class 0 OID 0)
-- Dependencies: 1097
-- Name: COLUMN vk_target.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_target.name IS 'name';


--
-- TOC entry 17117 (class 0 OID 0)
-- Dependencies: 1097
-- Name: COLUMN vk_target.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_target.short_name IS 'short_name';


--
-- TOC entry 17118 (class 0 OID 0)
-- Dependencies: 1097
-- Name: COLUMN vk_target.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_target.show IS 'show';


--
-- TOC entry 1098 (class 1259 OID 22548)
-- Dependencies: 7493 7494 14
-- Name: vk_type; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vk_type (
    oid character(36) NOT NULL,
    name character varying(255),
    short_name character varying(255),
    show numeric(1,0) DEFAULT 1,
    name2 character varying(255),
    status integer,
    CONSTRAINT "ck_vk_type$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.vk_type OWNER TO postgres;

--
-- TOC entry 17119 (class 0 OID 0)
-- Dependencies: 1098
-- Name: TABLE vk_type; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vk_type IS 'vk_type';


--
-- TOC entry 17120 (class 0 OID 0)
-- Dependencies: 1098
-- Name: COLUMN vk_type.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_type.oid IS 'oid';


--
-- TOC entry 17121 (class 0 OID 0)
-- Dependencies: 1098
-- Name: COLUMN vk_type.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_type.name IS 'name';


--
-- TOC entry 17122 (class 0 OID 0)
-- Dependencies: 1098
-- Name: COLUMN vk_type.short_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_type.short_name IS 'short_name';


--
-- TOC entry 17123 (class 0 OID 0)
-- Dependencies: 1098
-- Name: COLUMN vk_type.show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vk_type.show IS 'show';


--
-- TOC entry 1099 (class 1259 OID 22556)
-- Dependencies: 6779 14
-- Name: vpriemcancelreason; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW vpriemcancelreason AS
    ((SELECT 'Отказ (отмена приема)'::text AS name, 1 AS isotmena UNION ALL SELECT 'Нет ответа'::text AS name, 0 AS isotmena) UNION ALL SELECT 'Вне зоны действия'::text AS name, 0 AS isotmena) UNION ALL SELECT 'Неверный номер'::text AS name, 0 AS isotmena;


ALTER TABLE mir.vpriemcancelreason OWNER TO postgres;

--
-- TOC entry 17124 (class 0 OID 0)
-- Dependencies: 1099
-- Name: VIEW vpriemcancelreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW vpriemcancelreason IS 'VPRIEMCANCELREASON';


--
-- TOC entry 1100 (class 1259 OID 22560)
-- Dependencies: 6780 14
-- Name: vrectypenotzapis; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW vrectypenotzapis AS
    (SELECT 'a43522d6-c755-41a3-965f-dad42f5bdc7d'::text AS oid, 'По направлению'::text AS name UNION ALL SELECT 'e6488ae3-0c9d-46d1-9e3d-45b2c754a40e'::text AS oid, 'По больничному'::text AS name) UNION ALL SELECT '276b895b-1c0c-43eb-8b53-38541f019000'::text AS oid, 'Дежурство'::text AS name;


ALTER TABLE mir.vrectypenotzapis OWNER TO postgres;

--
-- TOC entry 17125 (class 0 OID 0)
-- Dependencies: 1100
-- Name: VIEW vrectypenotzapis; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW vrectypenotzapis IS 'VRECTYPENOTZAPIS';


--
-- TOC entry 1101 (class 1259 OID 22564)
-- Dependencies: 7495 7496 7497 7498 7499 7500 7501 7502 7503 7504 7505 14
-- Name: vregion; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vregion (
    oid character(36) NOT NULL,
    name character varying(255),
    ipgeo character varying(255),
    syn character varying(255),
    root_url character varying(255),
    absolut_url character varying(255),
    csssufix character varying(255),
    showpoll numeric(1,0) DEFAULT 0 NOT NULL,
    showlls numeric(1,0) DEFAULT 0 NOT NULL,
    sms character varying(255),
    russian_name character varying(255),
    center_phone character varying(255),
    twitter character varying(255),
    jnvls character varying(255),
    project_start character varying(255),
    allstatistic numeric(1,0) DEFAULT 1 NOT NULL,
    mailserver character varying(255),
    title character varying(255),
    showjnvls numeric(1,0) DEFAULT 0 NOT NULL,
    otziv character varying(4000),
    schedule_show numeric DEFAULT 11 NOT NULL,
    showadminhelp numeric(1,0) DEFAULT 1 NOT NULL,
    stateyavka numeric(1,0) DEFAULT 0 NOT NULL,
    terminal character varying(255),
    showregisterurl numeric(1,0) DEFAULT 0,
    show_cloud numeric(1,0) DEFAULT 1 NOT NULL,
    "PAC_REGIST_ALLOW" numeric(1,0) DEFAULT 0,
    "PAC_REGIST_PREMODERATE" numeric(1,0) DEFAULT 0,
    "CALL_CENTER" character varying(255),
    "CALL_CENTER_DESC" character varying(255)
);


ALTER TABLE mir.vregion OWNER TO postgres;

--
-- TOC entry 17126 (class 0 OID 0)
-- Dependencies: 1101
-- Name: TABLE vregion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vregion IS 'настройки регионов';


--
-- TOC entry 17127 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.oid IS 'oid';


--
-- TOC entry 17128 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.name IS 'name';


--
-- TOC entry 17129 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.ipgeo; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.ipgeo IS 'ipgeo';


--
-- TOC entry 17130 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.syn; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.syn IS 'syn';


--
-- TOC entry 17131 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.root_url; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.root_url IS 'root_url';


--
-- TOC entry 17132 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.absolut_url; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.absolut_url IS 'absolut_url';


--
-- TOC entry 17133 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.csssufix; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.csssufix IS 'csssufix';


--
-- TOC entry 17134 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.showpoll; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.showpoll IS 'showpoll';


--
-- TOC entry 17135 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.showlls; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.showlls IS 'showlls';


--
-- TOC entry 17136 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.sms; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.sms IS 'sms';


--
-- TOC entry 17137 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.russian_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.russian_name IS 'russian_name';


--
-- TOC entry 17138 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.center_phone; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.center_phone IS 'center_phone';


--
-- TOC entry 17139 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.twitter; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.twitter IS 'twitter';


--
-- TOC entry 17140 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.jnvls; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.jnvls IS 'jnvls';


--
-- TOC entry 17141 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.project_start; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.project_start IS 'project_start';


--
-- TOC entry 17142 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.allstatistic; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.allstatistic IS 'allstatistic';


--
-- TOC entry 17143 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.mailserver; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.mailserver IS 'mailserver';


--
-- TOC entry 17144 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.title; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.title IS 'title';


--
-- TOC entry 17145 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.showjnvls; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.showjnvls IS 'showjnvls';


--
-- TOC entry 17146 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.otziv; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.otziv IS 'otziv';


--
-- TOC entry 17147 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.schedule_show; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.schedule_show IS 'schedule_show';


--
-- TOC entry 17148 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.showadminhelp; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.showadminhelp IS 'showadminhelp';


--
-- TOC entry 17149 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.stateyavka; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.stateyavka IS 'stateyavka';


--
-- TOC entry 17150 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.terminal; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.terminal IS 'terminal';


--
-- TOC entry 17151 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.showregisterurl; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.showregisterurl IS 'showregisterurl';


--
-- TOC entry 17152 (class 0 OID 0)
-- Dependencies: 1101
-- Name: COLUMN vregion.show_cloud; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion.show_cloud IS 'ОТОБРАЖАТЬ СПИСОК ГОРОДОВ В ВИДЕ ОБЛАКА';


--
-- TOC entry 1102 (class 1259 OID 22581)
-- Dependencies: 7506 14
-- Name: vregion_settings; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE vregion_settings (
    kladr_id character(36) NOT NULL,
    region_tz numeric DEFAULT 0
);


ALTER TABLE mir.vregion_settings OWNER TO postgres;

--
-- TOC entry 17153 (class 0 OID 0)
-- Dependencies: 1102
-- Name: TABLE vregion_settings; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE vregion_settings IS 'настройка для регионов';


--
-- TOC entry 17154 (class 0 OID 0)
-- Dependencies: 1102
-- Name: COLUMN vregion_settings.kladr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion_settings.kladr_id IS 'kladr_id';


--
-- TOC entry 17155 (class 0 OID 0)
-- Dependencies: 1102
-- Name: COLUMN vregion_settings.region_tz; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN vregion_settings.region_tz IS 'Часовой пояс региона, относительно сервера';


--
-- TOC entry 1103 (class 1259 OID 22588)
-- Dependencies: 6781 14
-- Name: vrlsregion; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW vrlsregion AS
    SELECT rlsregion.oid, rlsregion.reg_id, rlsregion.z_id, rlsregion.name FROM rlsregion WHERE ((rlsregion.reg_id)::text = ANY (ARRAY[('86'::character varying)::text, ('66'::character varying)::text]));


ALTER TABLE mir.vrlsregion OWNER TO postgres;

--
-- TOC entry 17156 (class 0 OID 0)
-- Dependencies: 1103
-- Name: VIEW vrlsregion; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW vrlsregion IS 'VRLSREGION';


--
-- TOC entry 1104 (class 1259 OID 22592)
-- Dependencies: 6782 14
-- Name: vsysuser_active; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW vsysuser_active AS
    SELECT sysuser.oid, sysuser.passwordchagedate, sysuser.storedpassword, sysuser.username, sysuser.changepasswordonfirstlogon, sysuser.isactive, sysuser.codeuser, sysuser.isadministrator, sysuser.isfulladministrator, sysuser.isaspuser, sysuser.readmessages, sysuser.showinsite FROM sysuser WHERE ((sysuser.isactive = (1)::numeric) AND (sysuser.showinsite = (1)::numeric));


ALTER TABLE mir.vsysuser_active OWNER TO postgres;

--
-- TOC entry 17157 (class 0 OID 0)
-- Dependencies: 1104
-- Name: VIEW vsysuser_active; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW vsysuser_active IS 'VSYSUSER_ACTIVE';


--
-- TOC entry 1105 (class 1259 OID 22596)
-- Dependencies: 14
-- Name: web_buffer_transfer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_buffer_transfer (
    oid character(36) NOT NULL,
    upload_date date,
    regist_date date,
    table_name character varying(64),
    key_field_value character varying(36),
    action character varying(32),
    lpu character varying(36)
);


ALTER TABLE mir.web_buffer_transfer OWNER TO postgres;

--
-- TOC entry 1106 (class 1259 OID 22599)
-- Dependencies: 14
-- Name: web_buffer_transfer_fer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_buffer_transfer_fer (
    oid character(36) NOT NULL,
    upload_date date,
    regist_date date,
    table_name character varying(64),
    key_field_value character varying(36),
    action character varying(32),
    lpu character varying(36),
    schedule_starton timestamp(0) without time zone
);


ALTER TABLE mir.web_buffer_transfer_fer OWNER TO postgres;

--
-- TOC entry 17158 (class 0 OID 0)
-- Dependencies: 1106
-- Name: TABLE web_buffer_transfer_fer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_buffer_transfer_fer IS 'буфер для передачи расписания на ФЭР';


--
-- TOC entry 1107 (class 1259 OID 22602)
-- Dependencies: 14
-- Name: web_client_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_client_info (
    lpu character varying(36) NOT NULL,
    modifies_upload_date date,
    connect_date date,
    client_info character varying(100)
);


ALTER TABLE mir.web_client_info OWNER TO postgres;

--
-- TOC entry 17159 (class 0 OID 0)
-- Dependencies: 1107
-- Name: TABLE web_client_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_client_info IS 'WEB_CLIENT_INFO';


--
-- TOC entry 17160 (class 0 OID 0)
-- Dependencies: 1107
-- Name: COLUMN web_client_info.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_client_info.lpu IS 'lpu';


--
-- TOC entry 17161 (class 0 OID 0)
-- Dependencies: 1107
-- Name: COLUMN web_client_info.modifies_upload_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_client_info.modifies_upload_date IS 'modifies_upload_date';


--
-- TOC entry 17162 (class 0 OID 0)
-- Dependencies: 1107
-- Name: COLUMN web_client_info.connect_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_client_info.connect_date IS 'connect_date';


--
-- TOC entry 17163 (class 0 OID 0)
-- Dependencies: 1107
-- Name: COLUMN web_client_info.client_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_client_info.client_info IS 'client_info';


--
-- TOC entry 1108 (class 1259 OID 22605)
-- Dependencies: 14
-- Name: web_comparison; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_comparison (
    our_oid character varying(36) NOT NULL,
    their_oid character varying(36)
);


ALTER TABLE mir.web_comparison OWNER TO postgres;

--
-- TOC entry 1109 (class 1259 OID 22608)
-- Dependencies: 7507 14
-- Name: web_dictionary; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_dictionary (
    oid character(36) NOT NULL,
    oid_our character varying(36),
    oid_their character varying(36),
    name_our character varying(255),
    name_their character varying(255),
    syn_our character varying(255),
    syn_their character varying(255),
    client_info character varying(255),
    fd_date date DEFAULT now()
);


ALTER TABLE mir.web_dictionary OWNER TO postgres;

--
-- TOC entry 17164 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.oid_our; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.oid_our IS 'Код нашего справочника';


--
-- TOC entry 17165 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.oid_their; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.oid_their IS 'Код их справочника';


--
-- TOC entry 17166 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.name_our; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.name_our IS 'Наименование наше';


--
-- TOC entry 17167 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.name_their; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.name_their IS 'Наименование их';


--
-- TOC entry 17168 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.syn_our; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.syn_our IS 'Название таблицы наше';


--
-- TOC entry 17169 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.syn_their; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.syn_their IS 'Название таблицы их';


--
-- TOC entry 17170 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.client_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.client_info IS 'Код клиента интеграции из WEB_CLIENT_INFO';


--
-- TOC entry 17171 (class 0 OID 0)
-- Dependencies: 1109
-- Name: COLUMN web_dictionary.fd_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictionary.fd_date IS 'Дата создания или изменения';


--
-- TOC entry 1110 (class 1259 OID 22615)
-- Dependencies: 7508 14
-- Name: web_dictionary_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_dictionary_link (
    oid character(36) NOT NULL,
    oid_their character varying(36),
    oid_their_parent character varying(36),
    syn_their character varying(255),
    syn_their_parent character varying(255),
    name_their character varying(255),
    name_their_parent character varying(255),
    client_info character varying(255),
    fd_date date DEFAULT now()
);


ALTER TABLE mir.web_dictionary_link OWNER TO postgres;

--
-- TOC entry 1111 (class 1259 OID 22622)
-- Dependencies: 14
-- Name: web_dictonary_table_link; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_dictonary_table_link (
    oid character(36) NOT NULL,
    table_their character varying(100),
    table_our character varying(100),
    sql_our character varying(4000)
);


ALTER TABLE mir.web_dictonary_table_link OWNER TO postgres;

--
-- TOC entry 17172 (class 0 OID 0)
-- Dependencies: 1111
-- Name: TABLE web_dictonary_table_link; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_dictonary_table_link IS 'Соответсвия между таблицами. Author: Kulbatsky D.';


--
-- TOC entry 17173 (class 0 OID 0)
-- Dependencies: 1111
-- Name: COLUMN web_dictonary_table_link.table_their; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictonary_table_link.table_their IS 'Наименование их таблицы';


--
-- TOC entry 17174 (class 0 OID 0)
-- Dependencies: 1111
-- Name: COLUMN web_dictonary_table_link.table_our; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictonary_table_link.table_our IS 'Наименование нашей таблицы';


--
-- TOC entry 17175 (class 0 OID 0)
-- Dependencies: 1111
-- Name: COLUMN web_dictonary_table_link.sql_our; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_dictonary_table_link.sql_our IS 'SQL для отображения нашего списка';


--
-- TOC entry 1112 (class 1259 OID 22628)
-- Dependencies: 14
-- Name: web_errors; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_errors (
    err_code character varying(10) NOT NULL,
    err_text character varying(4000) NOT NULL
);


ALTER TABLE mir.web_errors OWNER TO postgres;

--
-- TOC entry 17176 (class 0 OID 0)
-- Dependencies: 1112
-- Name: TABLE web_errors; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_errors IS 'WEB_ERRORS';


--
-- TOC entry 17177 (class 0 OID 0)
-- Dependencies: 1112
-- Name: COLUMN web_errors.err_code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_errors.err_code IS 'err_code';


--
-- TOC entry 17178 (class 0 OID 0)
-- Dependencies: 1112
-- Name: COLUMN web_errors.err_text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_errors.err_text IS 'err_text';


--
-- TOC entry 1113 (class 1259 OID 22634)
-- Dependencies: 14
-- Name: web_lpu; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_lpu (
    our_oid character varying(100) NOT NULL,
    their_oid character varying(100)
);


ALTER TABLE mir.web_lpu OWNER TO postgres;

--
-- TOC entry 1114 (class 1259 OID 22637)
-- Dependencies: 14
-- Name: web_lpu_info; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_lpu_info (
    lpu character varying(36) NOT NULL,
    modifies_upload_date date,
    connect_date date
);


ALTER TABLE mir.web_lpu_info OWNER TO postgres;

--
-- TOC entry 17179 (class 0 OID 0)
-- Dependencies: 1114
-- Name: TABLE web_lpu_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_lpu_info IS 'WEB_LPU_INFO';


--
-- TOC entry 17180 (class 0 OID 0)
-- Dependencies: 1114
-- Name: COLUMN web_lpu_info.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_lpu_info.lpu IS 'lpu';


--
-- TOC entry 17181 (class 0 OID 0)
-- Dependencies: 1114
-- Name: COLUMN web_lpu_info.modifies_upload_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_lpu_info.modifies_upload_date IS 'modifies_upload_date';


--
-- TOC entry 17182 (class 0 OID 0)
-- Dependencies: 1114
-- Name: COLUMN web_lpu_info.connect_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_lpu_info.connect_date IS 'connect_date';


--
-- TOC entry 1115 (class 1259 OID 22640)
-- Dependencies: 7509 14
-- Name: web_people_fs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_people_fs (
    oid character(36) NOT NULL,
    client_id character varying(128),
    fd_date date DEFAULT now()
);


ALTER TABLE mir.web_people_fs OWNER TO postgres;

--
-- TOC entry 1116 (class 1259 OID 22644)
-- Dependencies: 7510 14
-- Name: web_schedule_fs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_schedule_fs (
    oid character(36) NOT NULL,
    location_id character varying(36),
    rule_id character varying(36),
    slot_id character varying(128),
    client_id character varying(128),
    fd_date date DEFAULT now()
);


ALTER TABLE mir.web_schedule_fs OWNER TO postgres;

--
-- TOC entry 1117 (class 1259 OID 22648)
-- Dependencies: 7511 14
-- Name: web_schedule_fs_reg; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_schedule_fs_reg (
    oid character(36) NOT NULL,
    location_id character varying(36),
    rule_id character varying(36),
    slot_id character varying(128),
    client_id character varying(128),
    fd_date date DEFAULT now()
);


ALTER TABLE mir.web_schedule_fs_reg OWNER TO postgres;

--
-- TOC entry 1118 (class 1259 OID 22652)
-- Dependencies: 7512 14
-- Name: web_schedule_rule; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_schedule_rule (
    oid character(36) NOT NULL,
    sysuser character varying(36),
    service_type character varying(36),
    cabinet character varying(100),
    payment_method character varying(36),
    duration numeric(16,0),
    start_date date,
    end_date date,
    location_id character varying(36),
    rule_id character varying(36),
    fd_date date DEFAULT now(),
    rule_factor character varying(100)
);


ALTER TABLE mir.web_schedule_rule OWNER TO postgres;

--
-- TOC entry 17183 (class 0 OID 0)
-- Dependencies: 1118
-- Name: COLUMN web_schedule_rule.rule_factor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_schedule_rule.rule_factor IS ' коэфициент  расписания для выявления необходимости перехода на другую очередь';


--
-- TOC entry 1119 (class 1259 OID 22656)
-- Dependencies: 7513 14
-- Name: web_schedule_rule_reg; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_schedule_rule_reg (
    oid character(36) NOT NULL,
    sysuser character varying(36),
    service_type character varying(36),
    cabinet character varying(100),
    payment_method character varying(36),
    duration numeric(16,0),
    start_date date,
    end_date date,
    location_id character varying(36),
    rule_id character varying(36),
    fd_date date DEFAULT now(),
    rule_factor character varying(100)
);


ALTER TABLE mir.web_schedule_rule_reg OWNER TO postgres;

--
-- TOC entry 17184 (class 0 OID 0)
-- Dependencies: 1119
-- Name: COLUMN web_schedule_rule_reg.rule_factor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_schedule_rule_reg.rule_factor IS ' коэфициент  расписания для выявления необходимости перехода на другую очередь';


--
-- TOC entry 1120 (class 1259 OID 22660)
-- Dependencies: 14
-- Name: web_service_log; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE web_service_log (
    function_name character varying(100) NOT NULL,
    call_date date,
    client_lpu character(36),
    client_info character varying(25),
    function_in text,
    function_out text
);


ALTER TABLE mir.web_service_log OWNER TO postgres;

--
-- TOC entry 17185 (class 0 OID 0)
-- Dependencies: 1120
-- Name: TABLE web_service_log; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE web_service_log IS 'WEB_SERVICE_LOG';


--
-- TOC entry 17186 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.function_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.function_name IS 'function_name';


--
-- TOC entry 17187 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.call_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.call_date IS 'call_date';


--
-- TOC entry 17188 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.client_lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.client_lpu IS 'client_lpu';


--
-- TOC entry 17189 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.client_info; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.client_info IS 'client_info';


--
-- TOC entry 17190 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.function_in; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.function_in IS 'function_in';


--
-- TOC entry 17191 (class 0 OID 0)
-- Dependencies: 1120
-- Name: COLUMN web_service_log.function_out; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN web_service_log.function_out IS 'function_out';


--
-- TOC entry 1121 (class 1259 OID 22666)
-- Dependencies: 6783 14
-- Name: web_service_log_today; Type: VIEW; Schema: mir; Owner: postgres
--

CREATE VIEW web_service_log_today AS
    SELECT web_service_log.function_name, web_service_log.call_date, web_service_log.client_lpu, web_service_log.client_info, web_service_log.function_in, web_service_log.function_out FROM web_service_log WHERE (web_service_log.call_date = ('now'::text)::date);


ALTER TABLE mir.web_service_log_today OWNER TO postgres;

--
-- TOC entry 17192 (class 0 OID 0)
-- Dependencies: 1121
-- Name: VIEW web_service_log_today; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON VIEW web_service_log_today IS 'WEB_SERVICE_LOG_TODAY';


--
-- TOC entry 1122 (class 1259 OID 22670)
-- Dependencies: 7514 7515 14
-- Name: work_place; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE work_place (
    oid character(36) NOT NULL,
    name character varying(255),
    show numeric(1,0) DEFAULT 1,
    CONSTRAINT "ck_work_place$show" CHECK (((show IS NULL) OR ((show >= (0)::numeric) AND (show <= (1)::numeric))))
);


ALTER TABLE mir.work_place OWNER TO postgres;

--
-- TOC entry 1123 (class 1259 OID 22675)
-- Dependencies: 14
-- Name: workday_replace; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE workday_replace (
    oid character(36) NOT NULL,
    sotrworkday character(36),
    sysuser character(36)
);


ALTER TABLE mir.workday_replace OWNER TO postgres;

--
-- TOC entry 17193 (class 0 OID 0)
-- Dependencies: 1123
-- Name: TABLE workday_replace; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE workday_replace IS 'WORKDAY_REPLACE';


--
-- TOC entry 17194 (class 0 OID 0)
-- Dependencies: 1123
-- Name: COLUMN workday_replace.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workday_replace.oid IS 'oid';


--
-- TOC entry 17195 (class 0 OID 0)
-- Dependencies: 1123
-- Name: COLUMN workday_replace.sotrworkday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workday_replace.sotrworkday IS 'sotrworkday';


--
-- TOC entry 17196 (class 0 OID 0)
-- Dependencies: 1123
-- Name: COLUMN workday_replace.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workday_replace.sysuser IS 'sysuser';


--
-- TOC entry 1124 (class 1259 OID 22678)
-- Dependencies: 7516 7517 7518 7519 7520 7521 14
-- Name: workschedule; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE workschedule (
    oid character(36) NOT NULL,
    sysuser character(36) NOT NULL,
    presctype character(36),
    workdate date NOT NULL,
    time_begin numeric,
    time_end numeric,
    cabinet character varying(100),
    holidayreason numeric,
    lpu character(36),
    isliveline numeric DEFAULT 0,
    free_cnt numeric DEFAULT 0,
    replace_cnt numeric DEFAULT 0,
    sotrworkday character(36),
    napr_cnt numeric DEFAULT 0,
    extra_cnt numeric DEFAULT 0,
    live_cnt numeric DEFAULT 0,
    otdel character(36)
);


ALTER TABLE mir.workschedule OWNER TO postgres;

--
-- TOC entry 17197 (class 0 OID 0)
-- Dependencies: 1124
-- Name: TABLE workschedule; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE workschedule IS 'workschedule';


--
-- TOC entry 17198 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.oid IS 'oid';


--
-- TOC entry 17199 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.sysuser IS 'Сотрудник';


--
-- TOC entry 17200 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.presctype IS 'Специальность';


--
-- TOC entry 17201 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.workdate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.workdate IS 'Дата';


--
-- TOC entry 17202 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.time_begin; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.time_begin IS 'Время начала работы';


--
-- TOC entry 17203 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.time_end; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.time_end IS 'Время окончания работы';


--
-- TOC entry 17204 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.cabinet; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.cabinet IS 'Кабинет';


--
-- TOC entry 17205 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.holidayreason; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.holidayreason IS 'Причины выходного дня, если null - рабочий день';


--
-- TOC entry 17206 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.lpu IS 'ЛПУ';


--
-- TOC entry 17207 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.isliveline; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.isliveline IS 'Прием по живой очереди';


--
-- TOC entry 17208 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.free_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.free_cnt IS 'Количество свободных приемов';


--
-- TOC entry 17209 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.replace_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.replace_cnt IS 'Количество замещений';


--
-- TOC entry 17210 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.sotrworkday; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.sotrworkday IS 'SOTRWORKDAY.OID';


--
-- TOC entry 17211 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.napr_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.napr_cnt IS 'Количество приемов по направлению';


--
-- TOC entry 17212 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.extra_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.extra_cnt IS 'Количество экстренных приемов';


--
-- TOC entry 17213 (class 0 OID 0)
-- Dependencies: 1124
-- Name: COLUMN workschedule.live_cnt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule.live_cnt IS 'Количество приемов по живой очереди';


--
-- TOC entry 1125 (class 1259 OID 22690)
-- Dependencies: 14
-- Name: workschedule_change_buffer; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE workschedule_change_buffer (
    sysuser character(36),
    presctype character(36),
    work_date date,
    regist_date date,
    regist_sysuser character(36),
    lpu character(36),
    id numeric,
    table_name character varying(30)
);


ALTER TABLE mir.workschedule_change_buffer OWNER TO postgres;

--
-- TOC entry 17214 (class 0 OID 0)
-- Dependencies: 1125
-- Name: TABLE workschedule_change_buffer; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE workschedule_change_buffer IS 'WORKSCHEDULE_CHANGE_BUFFER';


--
-- TOC entry 17215 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.sysuser IS 'sysuser';


--
-- TOC entry 17216 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.presctype IS 'presctype';


--
-- TOC entry 17217 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.work_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.work_date IS 'work_date';


--
-- TOC entry 17218 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.regist_date; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.regist_date IS 'regist_date';


--
-- TOC entry 17219 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.regist_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.regist_sysuser IS 'regist_sysuser';


--
-- TOC entry 17220 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.lpu; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.lpu IS 'lpu';


--
-- TOC entry 17221 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.id IS 'id';


--
-- TOC entry 17222 (class 0 OID 0)
-- Dependencies: 1125
-- Name: COLUMN workschedule_change_buffer.table_name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN workschedule_change_buffer.table_name IS 'Название таблицы, в которой были изменения';


--
-- TOC entry 1126 (class 1259 OID 22696)
-- Dependencies: 14
-- Name: xray_bonus; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_bonus (
    oid character(36) NOT NULL,
    name character varying(255),
    calc_factor numeric(15,5)
);


ALTER TABLE mir.xray_bonus OWNER TO postgres;

--
-- TOC entry 17223 (class 0 OID 0)
-- Dependencies: 1126
-- Name: TABLE xray_bonus; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_bonus IS 'справочник надбавка (рентген исследования)';


--
-- TOC entry 17224 (class 0 OID 0)
-- Dependencies: 1126
-- Name: COLUMN xray_bonus.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_bonus.oid IS 'OID';


--
-- TOC entry 17225 (class 0 OID 0)
-- Dependencies: 1126
-- Name: COLUMN xray_bonus.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_bonus.name IS 'наименование';


--
-- TOC entry 17226 (class 0 OID 0)
-- Dependencies: 1126
-- Name: COLUMN xray_bonus.calc_factor; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_bonus.calc_factor IS 'коэфициент расчета времени исследования';


--
-- TOC entry 1127 (class 1259 OID 22699)
-- Dependencies: 14
-- Name: xray_description; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_description (
    oid character(36) NOT NULL,
    create_sysuser character(36) NOT NULL,
    create_otdel character(36) NOT NULL,
    presc_id character(36) NOT NULL,
    text text,
    sotr character(36)
);


ALTER TABLE mir.xray_description OWNER TO postgres;

--
-- TOC entry 17227 (class 0 OID 0)
-- Dependencies: 1127
-- Name: TABLE xray_description; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_description IS 'описание рентрен-исследования';


--
-- TOC entry 17228 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.oid IS 'OID';


--
-- TOC entry 17229 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.create_sysuser; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.create_sysuser IS 'пользователь создавший описание';


--
-- TOC entry 17230 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.create_otdel; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.create_otdel IS 'отдел пользователя создавшего описание';


--
-- TOC entry 17231 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.presc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.presc_id IS 'описываемое назначение';


--
-- TOC entry 17232 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.text; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.text IS 'текст описания';


--
-- TOC entry 17233 (class 0 OID 0)
-- Dependencies: 1127
-- Name: COLUMN xray_description.sotr; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_description.sotr IS 'Сотрудник, создавший описание';


--
-- TOC entry 1128 (class 1259 OID 22705)
-- Dependencies: 14
-- Name: xray_dicom_reduction; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_dicom_reduction (
    oid character(36) NOT NULL,
    name character varying(255),
    code character varying(3)
);


ALTER TABLE mir.xray_dicom_reduction OWNER TO postgres;

--
-- TOC entry 17234 (class 0 OID 0)
-- Dependencies: 1128
-- Name: TABLE xray_dicom_reduction; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_dicom_reduction IS 'Словарь DICOM сокращений';


--
-- TOC entry 17235 (class 0 OID 0)
-- Dependencies: 1128
-- Name: COLUMN xray_dicom_reduction.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_dicom_reduction.oid IS 'OID';


--
-- TOC entry 17236 (class 0 OID 0)
-- Dependencies: 1128
-- Name: COLUMN xray_dicom_reduction.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_dicom_reduction.name IS 'Наменование';


--
-- TOC entry 17237 (class 0 OID 0)
-- Dependencies: 1128
-- Name: COLUMN xray_dicom_reduction.code; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_dicom_reduction.code IS 'Сокращение';


--
-- TOC entry 1129 (class 1259 OID 22708)
-- Dependencies: 7522 14
-- Name: xray_pacs; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_pacs (
    oid character(36) NOT NULL,
    name character varying(255),
    url text,
    synonym character varying(255),
    ip character varying(255),
    port integer,
    enable numeric(1,0) DEFAULT 0
);


ALTER TABLE mir.xray_pacs OWNER TO postgres;

--
-- TOC entry 17238 (class 0 OID 0)
-- Dependencies: 1129
-- Name: TABLE xray_pacs; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_pacs IS 'справочник паксов';


--
-- TOC entry 17239 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.oid IS 'OID';


--
-- TOC entry 17240 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.name IS 'наименование';


--
-- TOC entry 17241 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.url; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.url IS 'URL вьювера для просмотра изображений';


--
-- TOC entry 17242 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.synonym; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.synonym IS 'наименование пакса для обмена HL7';


--
-- TOC entry 17243 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.ip; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.ip IS 'ip адрес';


--
-- TOC entry 17244 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.port; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.port IS 'port';


--
-- TOC entry 17245 (class 0 OID 0)
-- Dependencies: 1129
-- Name: COLUMN xray_pacs.enable; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_pacs.enable IS 'флаг использования PACS (отправлять на него сообщения)';


--
-- TOC entry 1130 (class 1259 OID 22715)
-- Dependencies: 14
-- Name: xray_param; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_param (
    oid character(36) NOT NULL,
    shots_count integer,
    runtime numeric(15,2),
    dose numeric(15,7),
    dicom_reduction_id character(36)
);


ALTER TABLE mir.xray_param OWNER TO postgres;

--
-- TOC entry 17246 (class 0 OID 0)
-- Dependencies: 1130
-- Name: TABLE xray_param; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_param IS 'справочник параметров рентген назначений';


--
-- TOC entry 17247 (class 0 OID 0)
-- Dependencies: 1130
-- Name: COLUMN xray_param.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_param.oid IS 'OID';


--
-- TOC entry 17248 (class 0 OID 0)
-- Dependencies: 1130
-- Name: COLUMN xray_param.shots_count; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_param.shots_count IS 'Количество снимков';


--
-- TOC entry 17249 (class 0 OID 0)
-- Dependencies: 1130
-- Name: COLUMN xray_param.runtime; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_param.runtime IS 'Время выполнения исследования';


--
-- TOC entry 17250 (class 0 OID 0)
-- Dependencies: 1130
-- Name: COLUMN xray_param.dose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_param.dose IS 'доза облучения';


--
-- TOC entry 17251 (class 0 OID 0)
-- Dependencies: 1130
-- Name: COLUMN xray_param.dicom_reduction_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_param.dicom_reduction_id IS 'DICOM сокращение';


--
-- TOC entry 1131 (class 1259 OID 22718)
-- Dependencies: 14
-- Name: xray_purpose; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_purpose (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.xray_purpose OWNER TO postgres;

--
-- TOC entry 17252 (class 0 OID 0)
-- Dependencies: 1131
-- Name: TABLE xray_purpose; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_purpose IS 'справочник цель направления на рентген исследования';


--
-- TOC entry 17253 (class 0 OID 0)
-- Dependencies: 1131
-- Name: COLUMN xray_purpose.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_purpose.oid IS 'OID';


--
-- TOC entry 17254 (class 0 OID 0)
-- Dependencies: 1131
-- Name: COLUMN xray_purpose.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_purpose.name IS 'наименование';


--
-- TOC entry 1132 (class 1259 OID 22721)
-- Dependencies: 7523 7524 7525 14
-- Name: xray_referral; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_referral (
    oid character(36) NOT NULL,
    mdoc_id character(36) NOT NULL,
    careate_sotr_id character(36) NOT NULL,
    register_sotr_id character(36),
    laborant_sotr_id character(36),
    purpose_id character(36),
    urgency_id character(36),
    bonus_id character(36),
    duty numeric(1,0) DEFAULT 0,
    referal_num character varying(255),
    create_dt timestamp without time zone DEFAULT now(),
    run_dt timestamp(0) without time zone,
    CONSTRAINT "ck_xray_referal$duty" CHECK (((duty IS NULL) OR ((duty >= (0)::numeric) AND (duty <= (1)::numeric))))
);


ALTER TABLE mir.xray_referral OWNER TO postgres;

--
-- TOC entry 17255 (class 0 OID 0)
-- Dependencies: 1132
-- Name: TABLE xray_referral; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_referral IS 'направления на рентрен-исследования';


--
-- TOC entry 17256 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.oid IS 'OID';


--
-- TOC entry 17257 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.mdoc_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.mdoc_id IS 'мед. карта';


--
-- TOC entry 17258 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.careate_sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.careate_sotr_id IS 'сотрудник создавший направление';


--
-- TOC entry 17259 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.register_sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.register_sotr_id IS 'регистратор';


--
-- TOC entry 17260 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.laborant_sotr_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.laborant_sotr_id IS 'рентгенлаборант';


--
-- TOC entry 17261 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.purpose_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.purpose_id IS 'цель';


--
-- TOC entry 17262 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.urgency_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.urgency_id IS 'срочность';


--
-- TOC entry 17263 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.bonus_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.bonus_id IS 'надбавка';


--
-- TOC entry 17264 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.duty; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.duty IS 'дежурство';


--
-- TOC entry 17265 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.referal_num; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.referal_num IS 'номер протокола исследования';


--
-- TOC entry 17266 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.create_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.create_dt IS 'дата создания ';


--
-- TOC entry 17267 (class 0 OID 0)
-- Dependencies: 1132
-- Name: COLUMN xray_referral.run_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_referral.run_dt IS 'время исполнения';


--
-- TOC entry 1133 (class 1259 OID 22730)
-- Dependencies: 7526 14
-- Name: xray_result; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_result (
    oid character(36) NOT NULL,
    xray_referral_id character(36) NOT NULL,
    create_dt timestamp without time zone DEFAULT now(),
    study_instance character varying(255),
    pacs_id character(36)
);


ALTER TABLE mir.xray_result OWNER TO postgres;

--
-- TOC entry 17268 (class 0 OID 0)
-- Dependencies: 1133
-- Name: TABLE xray_result; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_result IS 'результаты исследований';


--
-- TOC entry 17269 (class 0 OID 0)
-- Dependencies: 1133
-- Name: COLUMN xray_result.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_result.oid IS 'OID';


--
-- TOC entry 17270 (class 0 OID 0)
-- Dependencies: 1133
-- Name: COLUMN xray_result.xray_referral_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_result.xray_referral_id IS 'id направления на рентген исследования';


--
-- TOC entry 17271 (class 0 OID 0)
-- Dependencies: 1133
-- Name: COLUMN xray_result.create_dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_result.create_dt IS 'время зоздания записи';


--
-- TOC entry 17272 (class 0 OID 0)
-- Dependencies: 1133
-- Name: COLUMN xray_result.study_instance; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_result.study_instance IS 'id исследования(снимков)';


--
-- TOC entry 17273 (class 0 OID 0)
-- Dependencies: 1133
-- Name: COLUMN xray_result.pacs_id; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_result.pacs_id IS 'id pacs''а с которого пришел ответ';


--
-- TOC entry 1134 (class 1259 OID 22734)
-- Dependencies: 14
-- Name: xray_urgency; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE xray_urgency (
    oid character(36) NOT NULL,
    name character varying(255),
    "AdmissionType" character varying(3)
);


ALTER TABLE mir.xray_urgency OWNER TO postgres;

--
-- TOC entry 17274 (class 0 OID 0)
-- Dependencies: 1134
-- Name: TABLE xray_urgency; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE xray_urgency IS 'справочник срочность рентген исследования';


--
-- TOC entry 17275 (class 0 OID 0)
-- Dependencies: 1134
-- Name: COLUMN xray_urgency.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_urgency.oid IS 'OID';


--
-- TOC entry 17276 (class 0 OID 0)
-- Dependencies: 1134
-- Name: COLUMN xray_urgency.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_urgency.name IS 'наименование';


--
-- TOC entry 17277 (class 0 OID 0)
-- Dependencies: 1134
-- Name: COLUMN xray_urgency."AdmissionType"; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN xray_urgency."AdmissionType" IS 'Тип срочности для PACS 
(A  for  accident,  E  for emergency, L for labor and deliveryand R for routine)';


--
-- TOC entry 1135 (class 1259 OID 22737)
-- Dependencies: 7527 7528 7529 14
-- Name: zayavka; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE zayavka (
    oid character(36) NOT NULL,
    dtcreate timestamp without time zone DEFAULT now(),
    dtchange timestamp without time zone DEFAULT now(),
    presctype character(36),
    dt timestamp without time zone,
    status character(36) NOT NULL,
    fam character varying(255),
    im character varying(255),
    otch character varying(255),
    borndt date,
    people character(36),
    schedule character(36),
    email character varying(255),
    phone character varying(255),
    isplat numeric(1,0) DEFAULT 0 NOT NULL,
    kartanum character varying(255),
    people_bid_status character(36)
);


ALTER TABLE mir.zayavka OWNER TO postgres;

--
-- TOC entry 17278 (class 0 OID 0)
-- Dependencies: 1135
-- Name: TABLE zayavka; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE zayavka IS 'zayavka';


--
-- TOC entry 17279 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.oid IS 'oid';


--
-- TOC entry 17280 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.dtcreate; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.dtcreate IS 'Дата создания заявки';


--
-- TOC entry 17281 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.dtchange; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.dtchange IS 'Дата изменения заявки';


--
-- TOC entry 17282 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.presctype; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.presctype IS 'специальность';


--
-- TOC entry 17283 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.dt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.dt IS 'Желаемая дата приема и время';


--
-- TOC entry 17284 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.status IS 'Статус заявки';


--
-- TOC entry 17285 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.fam; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.fam IS 'Фамилия';


--
-- TOC entry 17286 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.im; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.im IS 'Имя';


--
-- TOC entry 17287 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.otch; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.otch IS 'Отчетство';


--
-- TOC entry 17288 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.borndt; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.borndt IS 'Дата рождения';


--
-- TOC entry 17289 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.people; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.people IS 'OID пациента';


--
-- TOC entry 17290 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.isplat; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.isplat IS 'платный прием';


--
-- TOC entry 17291 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.kartanum; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.kartanum IS 'номер карты';


--
-- TOC entry 17292 (class 0 OID 0)
-- Dependencies: 1135
-- Name: COLUMN zayavka.people_bid_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka.people_bid_status IS 'Статус интернет-заявки пациента';


--
-- TOC entry 1136 (class 1259 OID 22746)
-- Dependencies: 14
-- Name: zayavka_status; Type: TABLE; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE TABLE zayavka_status (
    oid character(36) NOT NULL,
    name character varying(255)
);


ALTER TABLE mir.zayavka_status OWNER TO postgres;

--
-- TOC entry 17293 (class 0 OID 0)
-- Dependencies: 1136
-- Name: TABLE zayavka_status; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON TABLE zayavka_status IS 'zayavka_status';


--
-- TOC entry 17294 (class 0 OID 0)
-- Dependencies: 1136
-- Name: COLUMN zayavka_status.oid; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka_status.oid IS 'oid';


--
-- TOC entry 17295 (class 0 OID 0)
-- Dependencies: 1136
-- Name: COLUMN zayavka_status.name; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON COLUMN zayavka_status.name IS 'Название';


SET search_path = mypacs, pg_catalog;

--
-- TOC entry 1256 (class 1259 OID 57470)
-- Dependencies: 17
-- Name: applytable; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE applytable (
    idfield character varying(64) NOT NULL,
    namefield character varying(100),
    enamefield character varying(100),
    apply_time timestamp without time zone,
    uidfield character varying(70),
    birthdatefield timestamp without time zone,
    sexfield character varying(4),
    doctorfield character varying(16),
    descfield character varying(40),
    bstate integer,
    prof integer,
    ward character varying(16),
    modality character varying(10),
    p_pid character varying(20),
    accessionnumber character varying(100),
    bodypart character varying(30)
);


ALTER TABLE mypacs.applytable OWNER TO postgres;

--
-- TOC entry 17296 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.idfield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.idfield IS 'уникальный id записи';


--
-- TOC entry 17297 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.namefield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.namefield IS 'фио (eng)';


--
-- TOC entry 17298 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.enamefield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.enamefield IS 'фио (rus)';


--
-- TOC entry 17299 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.apply_time; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.apply_time IS 'дата,время исследования';


--
-- TOC entry 17300 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.uidfield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.uidfield IS 'uid';


--
-- TOC entry 17301 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.birthdatefield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.birthdatefield IS 'дата рождения';


--
-- TOC entry 17302 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.sexfield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.sexfield IS 'пол';


--
-- TOC entry 17303 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.doctorfield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.doctorfield IS 'врач';


--
-- TOC entry 17304 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.descfield; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.descfield IS 'описание';


--
-- TOC entry 17305 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.bstate; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.bstate IS 'статус исследования : 1 - в процессе  2 - завершено';


--
-- TOC entry 17306 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.modality; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.modality IS 'modality';


--
-- TOC entry 17307 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.p_pid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.p_pid IS 'patientid';


--
-- TOC entry 17308 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.accessionnumber; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.accessionnumber IS 'accessionnumber';


--
-- TOC entry 17309 (class 0 OID 0)
-- Dependencies: 1256
-- Name: COLUMN applytable.bodypart; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN applytable.bodypart IS 'часть тела';


--
-- TOC entry 1257 (class 1259 OID 57478)
-- Dependencies: 17
-- Name: cns_dicomdisplay; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE cns_dicomdisplay (
    modality character varying(10) NOT NULL,
    w_position character varying(4) NOT NULL,
    display_id integer NOT NULL,
    group_id integer NOT NULL,
    element_id integer NOT NULL,
    title character varying(24),
    calledae character varying(1)
);


ALTER TABLE mypacs.cns_dicomdisplay OWNER TO postgres;

--
-- TOC entry 1258 (class 1259 OID 57484)
-- Dependencies: 17
-- Name: cns_lookup_table; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE cns_lookup_table (
    lut_name character varying(20) NOT NULL,
    lut_data text
);


ALTER TABLE mypacs.cns_lookup_table OWNER TO postgres;

--
-- TOC entry 1259 (class 1259 OID 57492)
-- Dependencies: 17
-- Name: cns_modility; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE cns_modility (
    prof character varying(20) NOT NULL,
    modality character varying(8),
    groupname character varying(20),
    wordclassify character varying(20),
    mwlfilter character varying(200),
    displaymode character varying(20),
    displayfont integer,
    autogrid character varying(1),
    displayrows integer,
    displaycolumns integer,
    defaultdisplayinfo character varying(1),
    printdpi character varying(10),
    candicomprint character varying(1),
    defaultdisplaymode character varying(10),
    function2 character varying(1),
    candeleteimage character varying(1),
    capture_save_mode character varying(4),
    cut_save_mode character varying(4),
    image_source character varying(16),
    report_source character varying(12),
    report_source_objectname character varying(40),
    report_source_objectname1 character varying(40),
    report_source_objectname2 character varying(40),
    report_filter1 character varying(200),
    report_filter2 character varying(200),
    report_classify character varying(200)
);


ALTER TABLE mypacs.cns_modility OWNER TO postgres;

--
-- TOC entry 1260 (class 1259 OID 57502)
-- Dependencies: 17
-- Name: cns_usersetting; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE cns_usersetting (
    username character varying(20) NOT NULL,
    sectionname character varying(20) NOT NULL,
    itemname character varying(24) NOT NULL,
    stringvalue character varying(250)
);


ALTER TABLE mypacs.cns_usersetting OWNER TO postgres;

--
-- TOC entry 1261 (class 1259 OID 57507)
-- Dependencies: 17
-- Name: cns_windows_self; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE cns_windows_self (
    modality character varying(10) NOT NULL,
    partname character varying(24) NOT NULL,
    window_width1 integer,
    windows_level1 integer,
    window_width2 integer,
    windows_level2 integer,
    window_width3 integer,
    windows_level3 integer
);


ALTER TABLE mypacs.cns_windows_self OWNER TO postgres;

--
-- TOC entry 1262 (class 1259 OID 57512)
-- Dependencies: 17
-- Name: conclusions; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE conclusions (
    fk_id integer NOT NULL,
    fd_date timestamp without time zone,
    fk_userid integer,
    fc_notes text,
    fk_studyuid character varying(80) NOT NULL
);


ALTER TABLE mypacs.conclusions OWNER TO postgres;

--
-- TOC entry 17310 (class 0 OID 0)
-- Dependencies: 1262
-- Name: COLUMN conclusions.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN conclusions.fk_id IS 'pk - первичный ключ';


--
-- TOC entry 17311 (class 0 OID 0)
-- Dependencies: 1262
-- Name: COLUMN conclusions.fd_date; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN conclusions.fd_date IS 'дата заключения';


--
-- TOC entry 17312 (class 0 OID 0)
-- Dependencies: 1262
-- Name: COLUMN conclusions.fk_userid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN conclusions.fk_userid IS 'ссылка на поле users.fk_id';


--
-- TOC entry 17313 (class 0 OID 0)
-- Dependencies: 1262
-- Name: COLUMN conclusions.fc_notes; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN conclusions.fc_notes IS 'текст заключения';


--
-- TOC entry 17314 (class 0 OID 0)
-- Dependencies: 1262
-- Name: COLUMN conclusions.fk_studyuid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN conclusions.fk_studyuid IS 'studyuid - ссылка на таблицу study поле studyuid';


--
-- TOC entry 1273 (class 1259 OID 57546)
-- Dependencies: 17
-- Name: devices; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE devices (
    fk_id integer NOT NULL,
    fc_ip character varying(100),
    fn_port integer,
    fc_title character varying(15),
    fc_comment character varying(250),
    fn_type integer,
    fn_transfer integer,
    fc_charset character varying(21),
    fc_mod character varying(100)
);


ALTER TABLE mypacs.devices OWNER TO postgres;

--
-- TOC entry 17315 (class 0 OID 0)
-- Dependencies: 1273
-- Name: COLUMN devices.fn_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN devices.fn_type IS 'Тип устройства (1-сервер, 2-Рабочая станция, 3-принтер)';


--
-- TOC entry 17316 (class 0 OID 0)
-- Dependencies: 1273
-- Name: COLUMN devices.fn_transfer; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN devices.fn_transfer IS 'TRANSFER SYNTAX установленный по- умолчанию для отправки снимков с PACS';


--
-- TOC entry 17317 (class 0 OID 0)
-- Dependencies: 1273
-- Name: COLUMN devices.fc_charset; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN devices.fc_charset IS 'кодировка для возврата списка worklist';


--
-- TOC entry 17318 (class 0 OID 0)
-- Dependencies: 1273
-- Name: COLUMN devices.fc_mod; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN devices.fc_mod IS 'список допустимых модальностей аппарата (через запятую)';


--
-- TOC entry 1295 (class 1259 OID 59895)
-- Dependencies: 17
-- Name: diagnoz; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE diagnoz (
    fk_id integer NOT NULL,
    fk_parentid integer,
    fc_name character varying(50),
    fn_posn integer
);


ALTER TABLE mypacs.diagnoz OWNER TO postgres;

--
-- TOC entry 1274 (class 1259 OID 57554)
-- Dependencies: 17
-- Name: dicomprinter; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE dicomprinter (
    name character varying(20) NOT NULL,
    ipaddress character varying(15),
    printport integer,
    callingae character varying(24),
    calledae character varying(24),
    magnificationtype character varying(24),
    smoothingtype character varying(24),
    polaritytype character varying(24),
    borderdensity character varying(24),
    emptyimagedensity character varying(24),
    trimtype character varying(24),
    mindensity integer,
    maxdensity integer,
    mediumtype character varying(24),
    filmdestination character varying(24),
    copies integer,
    defaultformat character varying(24),
    filmdirection character varying(24),
    resolution character varying(24),
    priori character varying(24),
    filmsize character varying(24)
);


ALTER TABLE mypacs.dicomprinter OWNER TO postgres;

--
-- TOC entry 1275 (class 1259 OID 57565)
-- Dependencies: 17
-- Name: events; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE events (
    fk_id integer NOT NULL,
    fc_name character varying(255),
    fn_type integer,
    fd_date timestamp without time zone,
    fc_remark character varying(10000)
);


ALTER TABLE mypacs.events OWNER TO postgres;

--
-- TOC entry 17319 (class 0 OID 0)
-- Dependencies: 1275
-- Name: COLUMN events.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events.fk_id IS 'Уникальный ID';


--
-- TOC entry 17320 (class 0 OID 0)
-- Dependencies: 1275
-- Name: COLUMN events.fc_name; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events.fc_name IS 'Событие';


--
-- TOC entry 17321 (class 0 OID 0)
-- Dependencies: 1275
-- Name: COLUMN events.fn_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events.fn_type IS 'Тип события
1 - запуск сервера
2 - остановка сервера
3 - ошибка
4 - событие на сервере
5 - изменились параметры сервера';


--
-- TOC entry 17322 (class 0 OID 0)
-- Dependencies: 1275
-- Name: COLUMN events.fd_date; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events.fd_date IS 'Дата события';


--
-- TOC entry 17323 (class 0 OID 0)
-- Dependencies: 1275
-- Name: COLUMN events.fc_remark; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events.fc_remark IS 'Пометки';


--
-- TOC entry 1276 (class 1259 OID 57576)
-- Dependencies: 17
-- Name: events_rsnd; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE events_rsnd (
    fk_id integer NOT NULL,
    fn_type smallint,
    fc_callingtitle character varying(20),
    fc_calledtitle character varying(20),
    fc_studyuid character varying(80),
    fc_modality character varying(10),
    fd_studydate date,
    fd_date date,
    fn_amm integer,
    fn_amm_err integer,
    fc_patientid character varying(20),
    fc_patientname character varying(250),
    fc_ename character varying(250),
    fc_accessionnumber character varying(100)
);


ALTER TABLE mypacs.events_rsnd OWNER TO postgres;

--
-- TOC entry 17324 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fk_id IS 'pk';


--
-- TOC entry 17325 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fn_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fn_type IS '0 - успешная пересылка  1 - ошибки';


--
-- TOC entry 17326 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_callingtitle; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_callingtitle IS 'aetitle отправителя снимков';


--
-- TOC entry 17327 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_calledtitle; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_calledtitle IS 'aetitle куда мы пересылаем';


--
-- TOC entry 17328 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_studyuid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_studyuid IS 'studyuid - uid исследования';


--
-- TOC entry 17329 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_modality; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_modality IS 'модальность исследования';


--
-- TOC entry 17330 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fd_studydate; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fd_studydate IS 'дата исследования';


--
-- TOC entry 17331 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fd_date; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fd_date IS 'дата пересылки';


--
-- TOC entry 17332 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fn_amm; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fn_amm IS 'всего снимков в исследовани';


--
-- TOC entry 17333 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fn_amm_err; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fn_amm_err IS 'всего снимков с ошибками при отправке';


--
-- TOC entry 17334 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_patientid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_patientid IS 'id пациента';


--
-- TOC entry 17335 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_patientname; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_patientname IS 'фио пациента';


--
-- TOC entry 17336 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_ename; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_ename IS 'фио пациента рус';


--
-- TOC entry 17337 (class 0 OID 0)
-- Dependencies: 1276
-- Name: COLUMN events_rsnd.fc_accessionnumber; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd.fc_accessionnumber IS 'accessionnumber';


--
-- TOC entry 1277 (class 1259 OID 57626)
-- Dependencies: 17
-- Name: events_rsnd_err_lst; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE events_rsnd_err_lst (
    fk_id_rsnd integer,
    fc_studyuid character varying(80),
    fc_instanceuid character varying(80),
    fc_comm character varying(250),
    fn_transfersyntax integer,
    fc_calledtitle character varying(20)
);


ALTER TABLE mypacs.events_rsnd_err_lst OWNER TO postgres;

--
-- TOC entry 17338 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fk_id_rsnd; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fk_id_rsnd IS 'ссылка на FK_id EVENTS_RSND';


--
-- TOC entry 17339 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fc_studyuid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fc_studyuid IS 'STUDYUID';


--
-- TOC entry 17340 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fc_instanceuid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fc_instanceuid IS 'INSTANCEUID';


--
-- TOC entry 17341 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fc_comm; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fc_comm IS 'текст ошибки';


--
-- TOC entry 17342 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fn_transfersyntax; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fn_transfersyntax IS 'TRANSFERSYNTAX
.  .
описано в dcm_uid.pas в dicomVCL

PrivateTransferSyntax = 8192;
  ImplicitVRLittleEndian = 8193;
  ExplicitVRLittleEndian = 8194;
  ExplicitVRBigEndian = 8195;
  RLELossless = 8198;
  //JPEG_1 = 8196;
  JPEGBaseline = 8196;
  //JPEG_14_SelectionValue1 = 8197;
  JPEGLossless = 8197;
  JPEGExtendedProcess_2_4 = 8199;
  JPEG_3_5 = 8200;
  JPEG_6_8 = 8201;
  JPEG_7_9 = 8202;
  JPEG_10_12 = 8203;
  JPEG_11_13 = 8204;
  JPEGLossless14 = 8205;
  JPEGLossless15 = 8206;
  JPEG_16_18 = 8207;
  JPEG_17_19 = 8208;
  JPEG_20_22 = 8209;
  JPEG_21_23 = 8210;
  JPEG_24_26 = 8211;
  JPEG_25_27 = 8212;
  JPEG_28 = 8213;
  JPEG_29 = 8214;
  {$IFDEF ECLZLIBTransferSyntax}
  zlibFastestTransferSyntax = 8215;
  ppmFastestTransferSyntax = 8216;
  bzipFastestTransferSyntax = 8217;

  zlibMaxTransferSyntax = 8222;
  ppmMaxTransferSyntax = 8223;
  bzipMaxTransferSyntax = 8224;

  zlibNormalTransferSyntax = 8225;
  ppmNormalTransferSyntax = 8226;
  bzipNormalTransferSyntax = 8227;
  {$ENDIF}
  JPEGLossless80 = 8218;
  JPEGNearLossless81 = 8219;
  JPEG2000Irreversible = 8220; //.90 lossless
  JPEG2000Reversible = 8221; //.91 losy';


--
-- TOC entry 17343 (class 0 OID 0)
-- Dependencies: 1277
-- Name: COLUMN events_rsnd_err_lst.fc_calledtitle; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_rsnd_err_lst.fc_calledtitle IS 'called AEtitle';


--
-- TOC entry 1278 (class 1259 OID 57629)
-- Dependencies: 17
-- Name: events_wl; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE events_wl (
    fk_id integer NOT NULL,
    fc_name character varying(255),
    fn_type integer,
    fd_date timestamp without time zone,
    fc_remark character varying(10000)
);


ALTER TABLE mypacs.events_wl OWNER TO postgres;

--
-- TOC entry 17344 (class 0 OID 0)
-- Dependencies: 1278
-- Name: COLUMN events_wl.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_wl.fk_id IS 'UID';


--
-- TOC entry 17345 (class 0 OID 0)
-- Dependencies: 1278
-- Name: COLUMN events_wl.fc_name; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_wl.fc_name IS 'Событие';


--
-- TOC entry 17346 (class 0 OID 0)
-- Dependencies: 1278
-- Name: COLUMN events_wl.fn_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_wl.fn_type IS 'Тип события (1-DicomAssociation, 2-DicomFind)';


--
-- TOC entry 17347 (class 0 OID 0)
-- Dependencies: 1278
-- Name: COLUMN events_wl.fd_date; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_wl.fd_date IS 'Дата события';


--
-- TOC entry 17348 (class 0 OID 0)
-- Dependencies: 1278
-- Name: COLUMN events_wl.fc_remark; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN events_wl.fc_remark IS 'Комментарии';


--
-- TOC entry 1263 (class 1259 OID 57522)
-- Dependencies: 17
-- Name: gen_conclusions_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_conclusions_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
    CYCLE;


ALTER TABLE mypacs.gen_conclusions_id OWNER TO postgres;

--
-- TOC entry 1264 (class 1259 OID 57526)
-- Dependencies: 17
-- Name: gen_devices_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_devices_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_devices_id OWNER TO postgres;

--
-- TOC entry 1296 (class 1259 OID 59902)
-- Dependencies: 17
-- Name: gen_diagnoz_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_diagnoz_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
    CYCLE;


ALTER TABLE mypacs.gen_diagnoz_id OWNER TO postgres;

--
-- TOC entry 1266 (class 1259 OID 57530)
-- Dependencies: 17
-- Name: gen_events_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_events_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_events_id OWNER TO postgres;

--
-- TOC entry 1267 (class 1259 OID 57532)
-- Dependencies: 17
-- Name: gen_events_rsnd_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_events_rsnd_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_events_rsnd_id OWNER TO postgres;

--
-- TOC entry 1265 (class 1259 OID 57528)
-- Dependencies: 17
-- Name: gen_eventswl_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_eventswl_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_eventswl_id OWNER TO postgres;

--
-- TOC entry 1268 (class 1259 OID 57534)
-- Dependencies: 17
-- Name: gen_hospitals_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_hospitals_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_hospitals_id OWNER TO postgres;

--
-- TOC entry 1298 (class 1259 OID 60433)
-- Dependencies: 17
-- Name: gen_nuid; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_nuid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
    CYCLE;


ALTER TABLE mypacs.gen_nuid OWNER TO postgres;

--
-- TOC entry 1269 (class 1259 OID 57538)
-- Dependencies: 17
-- Name: gen_rules_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_rules_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_rules_id OWNER TO postgres;

--
-- TOC entry 1270 (class 1259 OID 57540)
-- Dependencies: 17
-- Name: gen_templates_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_templates_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_templates_id OWNER TO postgres;

--
-- TOC entry 1271 (class 1259 OID 57542)
-- Dependencies: 17
-- Name: gen_users_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_users_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_users_id OWNER TO postgres;

--
-- TOC entry 1272 (class 1259 OID 57544)
-- Dependencies: 17
-- Name: gen_worklist_id; Type: SEQUENCE; Schema: mypacs; Owner: postgres
--

CREATE SEQUENCE gen_worklist_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mypacs.gen_worklist_id OWNER TO postgres;

--
-- TOC entry 1279 (class 1259 OID 57635)
-- Dependencies: 17
-- Name: hospitals; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE hospitals (
    p_id integer NOT NULL,
    fc_name character varying(100) NOT NULL,
    fn_type smallint NOT NULL,
    studies_image_type character varying(4),
    fn_parentid integer NOT NULL
);


ALTER TABLE mypacs.hospitals OWNER TO postgres;

--
-- TOC entry 17349 (class 0 OID 0)
-- Dependencies: 1279
-- Name: COLUMN hospitals.p_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN hospitals.p_id IS 'pk';


--
-- TOC entry 17350 (class 0 OID 0)
-- Dependencies: 1279
-- Name: COLUMN hospitals.fc_name; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN hospitals.fc_name IS 'наименование';


--
-- TOC entry 17351 (class 0 OID 0)
-- Dependencies: 1279
-- Name: COLUMN hospitals.fn_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN hospitals.fn_type IS '1-страна,
2-регион,
3-район,
4-город,
5-нас.пункт,
6-лпу,
7-отделение,
8-dicom';


--
-- TOC entry 17352 (class 0 OID 0)
-- Dependencies: 1279
-- Name: COLUMN hospitals.studies_image_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN hospitals.studies_image_type IS 'модальность - для dicom устройств';


--
-- TOC entry 17353 (class 0 OID 0)
-- Dependencies: 1279
-- Name: COLUMN hospitals.fn_parentid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN hospitals.fn_parentid IS 'id родителя';


--
-- TOC entry 1281 (class 1259 OID 57644)
-- Dependencies: 17
-- Name: image_channels; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE image_channels (
    description character varying(32) NOT NULL,
    calledaet character varying(40),
    hostname character varying(40) NOT NULL,
    dicomport integer NOT NULL,
    icport integer,
    timeoutsec integer,
    defaultdevice character varying(2),
    loadimagemode integer
);


ALTER TABLE mypacs.image_channels OWNER TO postgres;

--
-- TOC entry 1280 (class 1259 OID 57638)
-- Dependencies: 17
-- Name: images; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE images (
    studyuid character varying(80) NOT NULL,
    seriesuid character varying(80) NOT NULL,
    instanceuid character varying(80) NOT NULL,
    imgno integer NOT NULL,
    imagetype character varying(10),
    sizex integer,
    sizey integer,
    photometric character varying(24),
    bits integer,
    abits integer,
    bits_per_sample integer,
    imagedate timestamp without time zone,
    studiesdate timestamp without time zone,
    selectedindex integer,
    selectedindex1 integer,
    selectedindex2 integer,
    selectedindex3 integer,
    imageflag character varying(80),
    p_pid character varying(80),
    last_windows_center integer,
    last_windows_width integer,
    last_update_time timestamp without time zone,
    accessionnumber character varying(100),
    imagesize integer
);


ALTER TABLE mypacs.images OWNER TO postgres;

--
-- TOC entry 17354 (class 0 OID 0)
-- Dependencies: 1280
-- Name: COLUMN images.imagetype; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN images.imagetype IS 'модальность';


--
-- TOC entry 17355 (class 0 OID 0)
-- Dependencies: 1280
-- Name: COLUMN images.accessionnumber; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN images.accessionnumber IS 'accession number (номер протокола)';


--
-- TOC entry 1282 (class 1259 OID 57647)
-- Dependencies: 17
-- Name: layout_table; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE layout_table (
    name character varying(20) NOT NULL,
    layoutdata text,
    modality character varying(2)
);


ALTER TABLE mypacs.layout_table OWNER TO postgres;

--
-- TOC entry 1283 (class 1259 OID 57653)
-- Dependencies: 17
-- Name: modility_setting; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE modility_setting (
    prof character varying(20) NOT NULL,
    modality character varying(8) NOT NULL,
    groupname character varying(20),
    wordclassify character varying(20),
    defaultpreset character varying(20),
    mwlfilter character varying(200),
    displayinfo character varying(1),
    displaymode character varying(20),
    info_font integer,
    info_font_width character varying(20),
    image_autogrid character varying(1),
    image_rows integer,
    image_columns integer,
    series_autogrid character varying(1),
    series_rows integer,
    series_columns integer,
    candicomprint character varying(1),
    printdpi character varying(10),
    filmsize character varying(20),
    print_rows integer,
    print_columns integer,
    imagepositionmark character varying(1),
    candeleteimage character varying(1),
    capture_save_mode character varying(10),
    cut_save_mode character varying(10),
    image_source character varying(16),
    defaultlayout character varying(20)
);


ALTER TABLE mypacs.modility_setting OWNER TO postgres;

--
-- TOC entry 1284 (class 1259 OID 57656)
-- Dependencies: 17
-- Name: params; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE params (
    fc_section character varying(100),
    fc_key character varying(100),
    fc_value character varying(1000)
);


ALTER TABLE mypacs.params OWNER TO postgres;

--
-- TOC entry 17356 (class 0 OID 0)
-- Dependencies: 1284
-- Name: COLUMN params.fc_section; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN params.fc_section IS 'Имя секции';


--
-- TOC entry 17357 (class 0 OID 0)
-- Dependencies: 1284
-- Name: COLUMN params.fc_key; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN params.fc_key IS 'Имя ключа';


--
-- TOC entry 17358 (class 0 OID 0)
-- Dependencies: 1284
-- Name: COLUMN params.fc_value; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN params.fc_value IS 'Значение';


--
-- TOC entry 1285 (class 1259 OID 57662)
-- Dependencies: 17
-- Name: patients; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE patients (
    p_ename character varying(255),
    p_sex character varying(4),
    p_pid character varying(20) NOT NULL,
    p_dateborn timestamp without time zone,
    p_fam character varying(255),
    p_im character varying(255),
    p_otch character varying(255),
    p_ename_rus character varying(255)
);


ALTER TABLE mypacs.patients OWNER TO postgres;

--
-- TOC entry 17359 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_ename; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_ename IS 'ФИО ПАЦИЕНТА';


--
-- TOC entry 17360 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_sex; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_sex IS 'ПОЛ ПАЦИЕНТА';


--
-- TOC entry 17361 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_pid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_pid IS 'НОМЕР ПАЦИЕНТА=НОМЕР МЕДИЦИНСКОЙ КАРТЫ';


--
-- TOC entry 17362 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_dateborn; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_dateborn IS 'ДАТА РОЖДЕНИЯ ПАЦИЕНТА';


--
-- TOC entry 17363 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_fam; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_fam IS 'ФАМИЛИЯ ПАЦИЕНТА';


--
-- TOC entry 17364 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_im; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_im IS 'ИМЯ ПАЦИЕНТА';


--
-- TOC entry 17365 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_otch; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_otch IS 'ОТЧЕСТВО ПАЦИЕНТА';


--
-- TOC entry 17366 (class 0 OID 0)
-- Dependencies: 1285
-- Name: COLUMN patients.p_ename_rus; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN patients.p_ename_rus IS 'ФИО ПАЦИЕНТА (РУС)';


--
-- TOC entry 1286 (class 1259 OID 57668)
-- Dependencies: 17
-- Name: remote_devices; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE remote_devices (
    description character varying(32) NOT NULL,
    calledaet character varying(40),
    hostname character varying(40) NOT NULL,
    dicomport integer NOT NULL,
    hosttype character varying(32) NOT NULL,
    defaultdevice character varying(2),
    loadimagemode integer
);


ALTER TABLE mypacs.remote_devices OWNER TO postgres;

--
-- TOC entry 1287 (class 1259 OID 57671)
-- Dependencies: 17
-- Name: rules; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE rules (
    fk_id integer NOT NULL,
    fk_deviceid integer,
    fk_deviceid2 integer,
    fc_mod character varying(2),
    fn_compress integer,
    fn_prc_compress smallint
);


ALTER TABLE mypacs.rules OWNER TO postgres;

--
-- TOC entry 17367 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fk_id IS 'UID';


--
-- TOC entry 17368 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fk_deviceid; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fk_deviceid IS 'DEVICES.FK_ID - куда отправлять снимки';


--
-- TOC entry 17369 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fk_deviceid2; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fk_deviceid2 IS 'DEVICES.FK_ID - откуда пришли снимки';


--
-- TOC entry 17370 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fc_mod; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fc_mod IS 'Модальность';


--
-- TOC entry 17371 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fn_compress; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fn_compress IS 'transfer syntax для сжатия снимка при отправке
.   .
описано в dcm_uid.pas в dicomVCL
.   .
PrivateTransferSyntax = 8192;
  ImplicitVRLittleEndian = 8193;
  ExplicitVRLittleEndian = 8194;
  ExplicitVRBigEndian = 8195;
  RLELossless = 8198;
  //JPEG_1 = 8196;
  JPEGBaseline = 8196;
  //JPEG_14_SelectionValue1 = 8197;
  JPEGLossless = 8197;
  JPEGExtendedProcess_2_4 = 8199;
  JPEG_3_5 = 8200;
  JPEG_6_8 = 8201;
  JPEG_7_9 = 8202;
  JPEG_10_12 = 8203;
  JPEG_11_13 = 8204;
  JPEGLossless14 = 8205;
  JPEGLossless15 = 8206;
  JPEG_16_18 = 8207;
  JPEG_17_19 = 8208;
  JPEG_20_22 = 8209;
  JPEG_21_23 = 8210;
  JPEG_24_26 = 8211;
  JPEG_25_27 = 8212;
  JPEG_28 = 8213;
  JPEG_29 = 8214;
  {$IFDEF ECLZLIBTransferSyntax}
  zlibFastestTransferSyntax = 8215;
  ppmFastestTransferSyntax = 8216;
  bzipFastestTransferSyntax = 8217;

  zlibMaxTransferSyntax = 8222;
  ppmMaxTransferSyntax = 8223;
  bzipMaxTransferSyntax = 8224;

  zlibNormalTransferSyntax = 8225;
  ppmNormalTransferSyntax = 8226;
  bzipNormalTransferSyntax = 8227;
  {$ENDIF}
  JPEGLossless80 = 8218;
  JPEGNearLossless81 = 8219;
  JPEG2000Irreversible = 8220; //.90 lossless
  JPEG2000Reversible = 8221; //.91 losy';


--
-- TOC entry 17372 (class 0 OID 0)
-- Dependencies: 1287
-- Name: COLUMN rules.fn_prc_compress; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN rules.fn_prc_compress IS '% сжатия';


--
-- TOC entry 1288 (class 1259 OID 57674)
-- Dependencies: 17
-- Name: series; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE series (
    studyuid character varying(80) NOT NULL,
    seriesuid character varying(80) NOT NULL,
    series_imagetype character varying(4),
    series_image_count integer,
    series_desc character varying(80),
    accessionnumber character varying(100),
    series_date timestamp without time zone
);


ALTER TABLE mypacs.series OWNER TO postgres;

--
-- TOC entry 17373 (class 0 OID 0)
-- Dependencies: 1288
-- Name: COLUMN series.accessionnumber; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN series.accessionnumber IS 'AccessionNumber (номер протокола)';


--
-- TOC entry 1289 (class 1259 OID 57677)
-- Dependencies: 17
-- Name: studies; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE studies (
    studyuid character varying(80) NOT NULL,
    p_ename character varying(50),
    p_sex character varying(4),
    p_pid character varying(80),
    studyid character varying(50),
    peer_ip character varying(20),
    bstate integer,
    ldate timestamp without time zone NOT NULL,
    backuptime timestamp without time zone,
    backupval character varying(20),
    study_image_count integer,
    studies_image_type character varying(10),
    rphys character varying(20),
    opname character varying(20),
    performphys character varying(20),
    calling_ae_title character varying(16),
    studydescription character varying(80),
    institutionaldepartmentname character varying(80),
    referringphysicianname character varying(80),
    reportstate integer,
    printstate integer,
    p_age character varying(4),
    p_dob character varying(4),
    p_dateborn timestamp without time zone,
    p_ename_rus character varying(50),
    status integer,
    accessionnumber character varying(100),
    name_disc character varying(50),
    actuality smallint,
    fc_aeapparat character varying(15),
    fc_mndiagnos text,
    fc_adddiagnos text,
    studyuid_old character varying(80),
    fk_idosndiag integer,
    fk_iddopdiag integer
);


ALTER TABLE mypacs.studies OWNER TO postgres;

--
-- TOC entry 17374 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.ldate; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.ldate IS 'StudyDate (Дата исследования)';


--
-- TOC entry 17375 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.studies_image_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.studies_image_type IS 'модальность';


--
-- TOC entry 17376 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.status; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.status IS 'Study Status
0 - server
1 - archive
2 - localbase';


--
-- TOC entry 17377 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.accessionnumber; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.accessionnumber IS 'Protocol Number (Номер протокола)';


--
-- TOC entry 17378 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.name_disc; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.name_disc IS 'Name of Disc';


--
-- TOC entry 17379 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.actuality; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.actuality IS 'актуальность исследования (для телемедицины)
значения :
0-не установлено
1-плановая
2-срочная
3-экстренная
4-завершенная';


--
-- TOC entry 17380 (class 0 OID 0)
-- Dependencies: 1289
-- Name: COLUMN studies.fc_aeapparat; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN studies.fc_aeapparat IS 'AEtitle аппарата с которого пришло исследование';


--
-- TOC entry 1297 (class 1259 OID 60090)
-- Dependencies: 17
-- Name: studydocs; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE studydocs (
    studyuid character varying(80),
    fdate date,
    fcomment character varying(50),
    f_file text,
    fc_login character varying(50),
    f_id integer NOT NULL
);


ALTER TABLE mypacs.studydocs OWNER TO postgres;

--
-- TOC entry 1290 (class 1259 OID 57683)
-- Dependencies: 17
-- Name: tags; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE tags (
    fc_title character varying(15) NOT NULL,
    fc_imagetype_1 character varying(5),
    fc_imagetype_2 character varying(5),
    fc_studyid_1 character varying(5),
    fc_studyid_2 character varying(5),
    fc_patientid_1 character varying(5),
    fc_patientid_2 character varying(5),
    fc_studydescription_1 character varying(5),
    fc_studydescription_2 character varying(5),
    fc_accessionnumber_1 character varying(5),
    fc_accessionnumber_2 character varying(5),
    fc_da_1 character varying(5),
    fc_da_2 character varying(5),
    fc_dt_1 character varying(5),
    fc_dt_2 character varying(5),
    fc_studyuid_1 character varying(5),
    fc_studyuid_2 character varying(5),
    fc_seriesuid_1 character varying(5),
    fc_seriesuid_2 character varying(5),
    fc_sernum_1 character varying(5),
    fc_sernum_2 character varying(5),
    fc_physname_1 character varying(5),
    fc_physname_2 character varying(5),
    fc_pname_1 character varying(5),
    fc_pname_2 character varying(5),
    fc_pdateborn_1 character varying(5),
    fc_pdateborn_2 character varying(5),
    fc_psex_1 character varying(5),
    fc_psex_2 character varying(5),
    fc_aid_1 character varying(5),
    fc_aid_2 character varying(5),
    fc_acqnum_1 character varying(5),
    fc_acqnum_2 character varying(5),
    fc_instanceuid_1 character varying(5),
    fc_instanceuid_2 character varying(5),
    fc_kin_1 character varying(5),
    fc_kin_2 character varying(5)
);


ALTER TABLE mypacs.tags OWNER TO postgres;

--
-- TOC entry 17381 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_title; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_title IS 'AETITLE';


--
-- TOC entry 17382 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_imagetype_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_imagetype_1 IS 'Модальность (CS Modality)';


--
-- TOC entry 17383 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_studyid_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_studyid_1 IS 'ID исследования (StudyID)';


--
-- TOC entry 17384 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_patientid_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_patientid_1 IS 'ID пациента (PatientID)';


--
-- TOC entry 17385 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_studydescription_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_studydescription_1 IS 'Комментарий-описание к исследованию (Study Description)';


--
-- TOC entry 17386 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_accessionnumber_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_accessionnumber_1 IS 'Номер протокола исследования';


--
-- TOC entry 17387 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_da_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_da_1 IS 'Дата исследования (Study Date)';


--
-- TOC entry 17388 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_dt_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_dt_1 IS 'Время исследования (Study Time)';


--
-- TOC entry 17389 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_studyuid_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_studyuid_1 IS 'Study Instance UID';


--
-- TOC entry 17390 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_seriesuid_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_seriesuid_1 IS 'Series Instanse UID';


--
-- TOC entry 17391 (class 0 OID 0)
-- Dependencies: 1290
-- Name: COLUMN tags.fc_sernum_1; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN tags.fc_sernum_1 IS 'Series Number';


--
-- TOC entry 1291 (class 1259 OID 57686)
-- Dependencies: 17
-- Name: templates; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE templates (
    fk_id integer NOT NULL,
    studies_image_type character varying(10),
    fc_notes text,
    fc_comm character varying(100) NOT NULL,
    fn_is_del smallint
);


ALTER TABLE mypacs.templates OWNER TO postgres;

--
-- TOC entry 17392 (class 0 OID 0)
-- Dependencies: 1291
-- Name: COLUMN templates.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN templates.fk_id IS 'PK - первичный ключ';


--
-- TOC entry 17393 (class 0 OID 0)
-- Dependencies: 1291
-- Name: COLUMN templates.studies_image_type; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN templates.studies_image_type IS 'Модальность';


--
-- TOC entry 17394 (class 0 OID 0)
-- Dependencies: 1291
-- Name: COLUMN templates.fc_notes; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN templates.fc_notes IS 'Текст шаблона';


--
-- TOC entry 17395 (class 0 OID 0)
-- Dependencies: 1291
-- Name: COLUMN templates.fc_comm; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN templates.fc_comm IS 'Комментарии';


--
-- TOC entry 17396 (class 0 OID 0)
-- Dependencies: 1291
-- Name: COLUMN templates.fn_is_del; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN templates.fn_is_del IS '(=1) - признак удаленной записи';


--
-- TOC entry 1292 (class 1259 OID 57692)
-- Dependencies: 17
-- Name: users; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE users (
    fc_login character varying(50) NOT NULL,
    fc_fam character varying(100),
    fc_im character varying(100),
    fc_otch character varying(100),
    fd_rojd timestamp without time zone,
    fc_address character varying(150),
    fc_tel character varying(100),
    fn_adm integer,
    fn_del integer,
    fk_id integer NOT NULL,
    fn_iswado smallint,
    fn_isqueries smallint,
    fn_isconcl smallint,
    fc_firma character varying(100),
    fc_doljn character varying(50),
    fc_uslugi character varying(250),
    fc_specializations character varying(250),
    fn_cr smallint,
    fn_dx smallint,
    fn_io smallint,
    fn_mr smallint,
    fn_ot smallint,
    fn_sc smallint,
    fn_xa smallint,
    fn_ct smallint,
    fn_es smallint,
    fn_mg smallint,
    fn_nm smallint,
    fn_px smallint,
    fn_rg smallint,
    fn_us smallint,
    fn_xc smallint,
    fn_rf smallint
);


ALTER TABLE mypacs.users OWNER TO postgres;

--
-- TOC entry 17397 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_login; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_login IS 'Логин пользователя';


--
-- TOC entry 17398 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_fam; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_fam IS 'Фамилия пользователя';


--
-- TOC entry 17399 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_im; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_im IS 'Имя пользователя';


--
-- TOC entry 17400 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_otch; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_otch IS 'Отчество пользователя';


--
-- TOC entry 17401 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fd_rojd; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fd_rojd IS 'Дата рождения пользователя';


--
-- TOC entry 17402 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_address; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_address IS 'Адрес пользователя';


--
-- TOC entry 17403 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_tel; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_tel IS 'Телефон пользователя';


--
-- TOC entry 17404 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_adm; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_adm IS 'Признак является ли админом данный пользователь (0 - нет, 1 - да)';


--
-- TOC entry 17405 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_del; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_del IS 'Признак удаления (0 - не удален, 1 - удален)';


--
-- TOC entry 17406 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fk_id; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fk_id IS 'Уникальный идентификатор';


--
-- TOC entry 17407 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_iswado; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_iswado IS '(=1) признак что пользователь заведен для ЦМИ';


--
-- TOC entry 17408 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_isqueries; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_isqueries IS 'право формировать очередь исследований на заключение';


--
-- TOC entry 17409 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_isconcl; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_isconcl IS 'право писать заключения (=1)
только смотреть заключения (=2)';


--
-- TOC entry 17410 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_firma; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_firma IS 'организация';


--
-- TOC entry 17411 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_doljn; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_doljn IS 'должность';


--
-- TOC entry 17412 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_uslugi; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_uslugi IS 'список предоставляемых услуг';


--
-- TOC entry 17413 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fc_specializations; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fc_specializations IS 'список специализаций';


--
-- TOC entry 17414 (class 0 OID 0)
-- Dependencies: 1292
-- Name: COLUMN users.fn_cr; Type: COMMENT; Schema: mypacs; Owner: postgres
--

COMMENT ON COLUMN users.fn_cr IS 'фильтр по этой модальности при просмотре исследований';


--
-- TOC entry 1293 (class 1259 OID 57698)
-- Dependencies: 17
-- Name: windows_preset; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE windows_preset (
    modality character varying(2) NOT NULL,
    partname character varying(24) NOT NULL,
    hotkey character varying(24) NOT NULL,
    window_width integer,
    windows_level integer
);


ALTER TABLE mypacs.windows_preset OWNER TO postgres;

--
-- TOC entry 1294 (class 1259 OID 57701)
-- Dependencies: 17
-- Name: worklist; Type: TABLE; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE TABLE worklist (
    p_ename character varying(255),
    p_sex character varying(4),
    p_pid character varying(20) NOT NULL,
    p_dateborn timestamp without time zone,
    p_fam character varying(255),
    p_im character varying(255),
    p_otch character varying(255),
    p_ename_rus character varying(255),
    p_patientsex character varying(3),
    accessionnumber character varying(100),
    modality character varying(10),
    studyuid character varying(80),
    p_st_dt timestamp without time zone,
    status character varying(20),
    fk_id integer NOT NULL,
    procedureid integer,
    startdateworklist date,
    enddateworklist date,
    stepstarttime character varying(10),
    stepfinishtime character varying(10),
    physiciansname character varying(100),
    stepdescription character varying(250),
    stepid character varying(20),
    stationname character varying(50),
    procdescription character varying(250),
    procpriority character varying(20),
    stationaetitle character varying(50)
);


ALTER TABLE mypacs.worklist OWNER TO postgres;

SET search_path = mir, pg_catalog;

--
-- TOC entry 7094 (class 2604 OID 23433)
-- Dependencies: 578 577
-- Name: id; Type: DEFAULT; Schema: mir; Owner: postgres
--

ALTER TABLE icd10 ALTER COLUMN id SET DEFAULT nextval('icd10_id_seq'::regclass);


--
-- TOC entry 8326 (class 2606 OID 46216)
-- Dependencies: 532 532
-- Name: Export_COD_Table_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY export_cod_table
    ADD CONSTRAINT "Export_COD_Table_pkey" PRIMARY KEY (oid);


--
-- TOC entry 7589 (class 2606 OID 46218)
-- Dependencies: 303 303 303 303
-- Name: actmat_iic_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actmat_iic
    ADD CONSTRAINT actmat_iic_pk PRIMARY KEY (phgrid, uniqid, matterid);


--
-- TOC entry 7591 (class 2606 OID 46220)
-- Dependencies: 304 304 304 304
-- Name: actmat_phact_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actmat_phact
    ADD CONSTRAINT actmat_phact_idx PRIMARY KEY (number, phactid, matterid);


--
-- TOC entry 7593 (class 2606 OID 46222)
-- Dependencies: 305 305 305
-- Name: actmat_phgr_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actmat_phgr
    ADD CONSTRAINT actmat_phgr_idx PRIMARY KEY (uniqid, matterid);


--
-- TOC entry 7598 (class 2606 OID 46224)
-- Dependencies: 307 307 307 307
-- Name: actmatters_drugforms_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actmatters_drugforms
    ADD CONSTRAINT actmatters_drugforms_idx PRIMARY KEY (mz_phgr_id, drugformid, actmatterid);


--
-- TOC entry 7603 (class 2606 OID 46226)
-- Dependencies: 309 309
-- Name: addressex_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY addressex_history
    ADD CONSTRAINT addressex_history_pkey PRIMARY KEY (oid);


--
-- TOC entry 8201 (class 2606 OID 46228)
-- Dependencies: 505 505
-- Name: ak_key_2_epicris; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT ak_key_2_epicris UNIQUE (oid);


--
-- TOC entry 9786 (class 2606 OID 46230)
-- Dependencies: 1025 1025
-- Name: ak_otdel_treatmen; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT ak_otdel_treatmen UNIQUE (otdel);


--
-- TOC entry 7618 (class 2606 OID 46232)
-- Dependencies: 314 314 314 314
-- Name: am_df_limp_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY am_df_limp
    ADD CONSTRAINT am_df_limp_idx PRIMARY KEY (limp_phgr_id, drugformid, actmatterid);


--
-- TOC entry 7645 (class 2606 OID 46234)
-- Dependencies: 320 320
-- Name: ambtick_diag_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ambtick_diag
    ADD CONSTRAINT ambtick_diag_pk PRIMARY KEY (oid);


--
-- TOC entry 7669 (class 2606 OID 46236)
-- Dependencies: 324 324
-- Name: anamnesis_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY anamnesis
    ADD CONSTRAINT anamnesis_pkey PRIMARY KEY (people_id);


--
-- TOC entry 7682 (class 2606 OID 46238)
-- Dependencies: 329 329
-- Name: areal_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_history
    ADD CONSTRAINT areal_history_pkey PRIMARY KEY (hid);


--
-- TOC entry 7733 (class 2606 OID 46240)
-- Dependencies: 347 347
-- Name: bank_account_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bank_account_history
    ADD CONSTRAINT bank_account_history_pkey PRIMARY KEY (hid);


--
-- TOC entry 7780 (class 2606 OID 46242)
-- Dependencies: 361 361
-- Name: benefit_medic_upload_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_medic_upload
    ADD CONSTRAINT benefit_medic_upload_pkey PRIMARY KEY (oid);


--
-- TOC entry 7784 (class 2606 OID 46244)
-- Dependencies: 363 363
-- Name: benefit_upload_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_upload
    ADD CONSTRAINT benefit_upload_pkey PRIMARY KEY (oid);


--
-- TOC entry 7788 (class 2606 OID 46246)
-- Dependencies: 365 365
-- Name: bill_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bill
    ADD CONSTRAINT bill_pkey PRIMARY KEY (oid);


--
-- TOC entry 7791 (class 2606 OID 46248)
-- Dependencies: 366 366
-- Name: bill_uslug_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bill_uslug
    ADD CONSTRAINT bill_uslug_pkey PRIMARY KEY (oid);


--
-- TOC entry 7876 (class 2606 OID 46250)
-- Dependencies: 389 389
-- Name: callservise_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY callservice
    ADD CONSTRAINT callservise_pkey PRIMARY KEY (oid);


--
-- TOC entry 7889 (class 2606 OID 46252)
-- Dependencies: 391 391
-- Name: category_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY category
    ADD CONSTRAINT category_pkey PRIMARY KEY (oid);


--
-- TOC entry 8710 (class 2606 OID 46254)
-- Dependencies: 683 683
-- Name: ck_mparam$id; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mparam
    ADD CONSTRAINT "ck_mparam$id" PRIMARY KEY (id);


--
-- TOC entry 7933 (class 2606 OID 46256)
-- Dependencies: 407 407
-- Name: cls_mz_phgroup_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cls_mz_phgroup
    ADD CONSTRAINT cls_mz_phgroup_pkey PRIMARY KEY (id);


--
-- TOC entry 7935 (class 2606 OID 46258)
-- Dependencies: 408 408
-- Name: cls_phgr_limp_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cls_phgr_limp
    ADD CONSTRAINT cls_phgr_limp_pkey PRIMARY KEY (id);


--
-- TOC entry 7947 (class 2606 OID 46260)
-- Dependencies: 412 412
-- Name: clsntfr_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clsntfr
    ADD CONSTRAINT clsntfr_pkey PRIMARY KEY (id);


--
-- TOC entry 7952 (class 2606 OID 46262)
-- Dependencies: 414 414
-- Name: cod_buffer_transfer_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cod_buffer_transfer
    ADD CONSTRAINT cod_buffer_transfer_pkey PRIMARY KEY (oid);


--
-- TOC entry 7962 (class 2606 OID 46264)
-- Dependencies: 417 417
-- Name: comp_comptype_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY comp_comptype
    ADD CONSTRAINT comp_comptype_pkey PRIMARY KEY (oid);


--
-- TOC entry 7983 (class 2606 OID 46266)
-- Dependencies: 423 423
-- Name: counterpart_contract_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_contract
    ADD CONSTRAINT counterpart_contract_pkey PRIMARY KEY (oid);


--
-- TOC entry 7985 (class 2606 OID 46268)
-- Dependencies: 424 424
-- Name: counterpart_forbid_diag_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_forbid_diag
    ADD CONSTRAINT counterpart_forbid_diag_pkey PRIMARY KEY (oid);


--
-- TOC entry 7987 (class 2606 OID 46270)
-- Dependencies: 425 425
-- Name: counterpart_forbid_kab_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_forbid_kab
    ADD CONSTRAINT counterpart_forbid_kab_pkey PRIMARY KEY (oid);


--
-- TOC entry 7989 (class 2606 OID 46272)
-- Dependencies: 426 426
-- Name: counterpart_forbid_prof_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_forbid_prof
    ADD CONSTRAINT counterpart_forbid_prof_pkey PRIMARY KEY (oid);


--
-- TOC entry 7991 (class 2606 OID 46274)
-- Dependencies: 427 427
-- Name: counterpart_forbid_time_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_forbid_time
    ADD CONSTRAINT counterpart_forbid_time_pkey PRIMARY KEY (oid);


--
-- TOC entry 7993 (class 2606 OID 46276)
-- Dependencies: 428 428
-- Name: counterpart_forbid_usl_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_forbid_usl
    ADD CONSTRAINT counterpart_forbid_usl_pkey PRIMARY KEY (oid);


--
-- TOC entry 7999 (class 2606 OID 46278)
-- Dependencies: 430 430
-- Name: counterpart_otdel_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_otdel
    ADD CONSTRAINT counterpart_otdel_pkey PRIMARY KEY (oid);


--
-- TOC entry 8001 (class 2606 OID 46280)
-- Dependencies: 431 431
-- Name: counterpart_pepl_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_pepl
    ADD CONSTRAINT counterpart_pepl_pkey PRIMARY KEY (oid);


--
-- TOC entry 8003 (class 2606 OID 46282)
-- Dependencies: 432 432
-- Name: counterpart_program_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_program
    ADD CONSTRAINT counterpart_program_pkey PRIMARY KEY (oid);


--
-- TOC entry 8043 (class 2606 OID 46284)
-- Dependencies: 450 450
-- Name: desctextes_descid_key; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY desctextes
    ADD CONSTRAINT desctextes_descid_key UNIQUE (descid);


--
-- TOC entry 8089 (class 2606 OID 46286)
-- Dependencies: 464 464 464
-- Name: dictionary_right_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dictionary_right
    ADD CONSTRAINT dictionary_right_pkey PRIMARY KEY ("right", dictionary);


--
-- TOC entry 8171 (class 2606 OID 46288)
-- Dependencies: 492 492
-- Name: druglifetime_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY druglifetime
    ADD CONSTRAINT druglifetime_pkey PRIMARY KEY (id);


--
-- TOC entry 8182 (class 2606 OID 46290)
-- Dependencies: 496 496
-- Name: drugstore_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY drugstore
    ADD CONSTRAINT drugstore_pkey PRIMARY KEY (oid);


--
-- TOC entry 8309 (class 2606 OID 46292)
-- Dependencies: 530 530
-- Name: export_cod_dictionary_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY export_cod_dictionary
    ADD CONSTRAINT export_cod_dictionary_pkey PRIMARY KEY (oid);


--
-- TOC entry 8356 (class 2606 OID 46294)
-- Dependencies: 544 544
-- Name: fg_people_period_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY fg_people_period
    ADD CONSTRAINT fg_people_period_pkey PRIMARY KEY (oid);


--
-- TOC entry 8354 (class 2606 OID 46296)
-- Dependencies: 543 543
-- Name: fg_people_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY fg_people
    ADD CONSTRAINT fg_people_pkey PRIMARY KEY (oid);


--
-- TOC entry 8358 (class 2606 OID 46298)
-- Dependencies: 545 545
-- Name: fg_period_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY fg_period
    ADD CONSTRAINT fg_period_pkey PRIMARY KEY (oid);


--
-- TOC entry 8360 (class 2606 OID 46300)
-- Dependencies: 546 546
-- Name: fg_presctype_change_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY fg_presctype_change
    ADD CONSTRAINT fg_presctype_change_pkey PRIMARY KEY (oid);


--
-- TOC entry 8362 (class 2606 OID 46302)
-- Dependencies: 547 547
-- Name: firmnames_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY firmnames
    ADD CONSTRAINT firmnames_pkey PRIMARY KEY (id);


--
-- TOC entry 8421 (class 2606 OID 46304)
-- Dependencies: 574 574
-- Name: ib_attachments_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ib_attachments
    ADD CONSTRAINT ib_attachments_pkey PRIMARY KEY (oid);


--
-- TOC entry 8424 (class 2606 OID 46306)
-- Dependencies: 575 575
-- Name: ib_mkab_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ib_mkab
    ADD CONSTRAINT ib_mkab_pkey PRIMARY KEY (oid);


--
-- TOC entry 8426 (class 2606 OID 46308)
-- Dependencies: 576 576
-- Name: ib_sections_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ib_sections
    ADD CONSTRAINT ib_sections_pkey PRIMARY KEY (oid);


--
-- TOC entry 8428 (class 2606 OID 46310)
-- Dependencies: 577 577
-- Name: icd10_guid_key; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY icd10
    ADD CONSTRAINT icd10_guid_key UNIQUE (guid);


--
-- TOC entry 8432 (class 2606 OID 46312)
-- Dependencies: 579 579
-- Name: ident_wind_str_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ident_wind_str
    ADD CONSTRAINT ident_wind_str_pkey PRIMARY KEY (nomenid);


--
-- TOC entry 8434 (class 2606 OID 46314)
-- Dependencies: 580 580
-- Name: iicsynonyms_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY iicsynonyms
    ADD CONSTRAINT iicsynonyms_pkey PRIMARY KEY (id);


--
-- TOC entry 7949 (class 2606 OID 46316)
-- Dependencies: 413 413
-- Name: integ_10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clspharmagroup
    ADD CONSTRAINT integ_10 PRIMARY KEY (id);


--
-- TOC entry 7944 (class 2606 OID 46318)
-- Dependencies: 411 411
-- Name: integ_11; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clsiic
    ADD CONSTRAINT integ_11 PRIMARY KEY (id);


--
-- TOC entry 7938 (class 2606 OID 46320)
-- Dependencies: 409 409
-- Name: integ_12; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clsatc
    ADD CONSTRAINT integ_12 PRIMARY KEY (id);


--
-- TOC entry 8173 (class 2606 OID 46322)
-- Dependencies: 493 493
-- Name: integ_13; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY drugpack
    ADD CONSTRAINT integ_13 PRIMARY KEY (id);


--
-- TOC entry 8168 (class 2606 OID 46324)
-- Dependencies: 491 491
-- Name: integ_16; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY drugformchars
    ADD CONSTRAINT integ_16 PRIMARY KEY (id);


--
-- TOC entry 9673 (class 2606 OID 46326)
-- Dependencies: 983 983
-- Name: integ_17; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stronggroups
    ADD CONSTRAINT integ_17 PRIMARY KEY (id);


--
-- TOC entry 8734 (class 2606 OID 46328)
-- Dependencies: 690 690
-- Name: integ_18; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY narcogroups
    ADD CONSTRAINT integ_18 PRIMARY KEY (id);


--
-- TOC entry 7595 (class 2606 OID 46330)
-- Dependencies: 306 306
-- Name: integ_19; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actmatters
    ADD CONSTRAINT integ_19 PRIMARY KEY (id);


--
-- TOC entry 8005 (class 2606 OID 46332)
-- Dependencies: 433 433
-- Name: integ_2; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY countries
    ADD CONSTRAINT integ_2 PRIMARY KEY (id);


--
-- TOC entry 8176 (class 2606 OID 46334)
-- Dependencies: 494 494
-- Name: integ_23; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY drugset
    ADD CONSTRAINT integ_23 PRIMARY KEY (id);


--
-- TOC entry 8179 (class 2606 OID 46336)
-- Dependencies: 495 495
-- Name: integ_24; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY drugstorcond
    ADD CONSTRAINT integ_24 PRIMARY KEY (id);


--
-- TOC entry 8019 (class 2606 OID 46338)
-- Dependencies: 438 438
-- Name: integ_26; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY currency
    ADD CONSTRAINT integ_26 PRIMARY KEY (id);


--
-- TOC entry 8973 (class 2606 OID 46340)
-- Dependencies: 779 779
-- Name: integ_28; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pharmaactions
    ADD CONSTRAINT integ_28 PRIMARY KEY (id);


--
-- TOC entry 8364 (class 2606 OID 46342)
-- Dependencies: 548 548
-- Name: integ_3; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY firms
    ADD CONSTRAINT integ_3 PRIMARY KEY (id);


--
-- TOC entry 8040 (class 2606 OID 46344)
-- Dependencies: 449 449
-- Name: integ_30; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY descriptions
    ADD CONSTRAINT integ_30 PRIMARY KEY (id);


--
-- TOC entry 8620 (class 2606 OID 46346)
-- Dependencies: 651 651
-- Name: integ_4; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY massunits
    ADD CONSTRAINT integ_4 PRIMARY KEY (id);


--
-- TOC entry 8014 (class 2606 OID 46348)
-- Dependencies: 436 436
-- Name: integ_5; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cubicunits
    ADD CONSTRAINT integ_5 PRIMARY KEY (id);


--
-- TOC entry 7980 (class 2606 OID 46350)
-- Dependencies: 422 422
-- Name: integ_6; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY concenunits
    ADD CONSTRAINT integ_6 PRIMARY KEY (id);


--
-- TOC entry 7600 (class 2606 OID 46352)
-- Dependencies: 308 308
-- Name: integ_7; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY actunits
    ADD CONSTRAINT integ_7 PRIMARY KEY (id);


--
-- TOC entry 9556 (class 2606 OID 46354)
-- Dependencies: 945 945
-- Name: integ_8; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sizeunits
    ADD CONSTRAINT integ_8 PRIMARY KEY (id);


--
-- TOC entry 7941 (class 2606 OID 46356)
-- Dependencies: 410 410
-- Name: integ_9; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clsdrugforms
    ADD CONSTRAINT integ_9 PRIMARY KEY (id);


--
-- TOC entry 8487 (class 2606 OID 46358)
-- Dependencies: 601 601
-- Name: intolerance_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY intolerance
    ADD CONSTRAINT intolerance_pkey PRIMARY KEY (oid);


--
-- TOC entry 9325 (class 2606 OID 46360)
-- Dependencies: 881 881 881
-- Name: ix_uk_registwindow_linetype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registwindow_linetype
    ADD CONSTRAINT ix_uk_registwindow_linetype UNIQUE (registrywindow, linetype);


--
-- TOC entry 7585 (class 2606 OID 46362)
-- Dependencies: 216 216
-- Name: kladr_prefix_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tkladr_prefix
    ADD CONSTRAINT kladr_prefix_pkey PRIMARY KEY (oid);


--
-- TOC entry 8506 (class 2606 OID 46364)
-- Dependencies: 608 608
-- Name: lab_probe_color_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lab_probe_color
    ADD CONSTRAINT lab_probe_color_pkey PRIMARY KEY (oid);


--
-- TOC entry 9119 (class 2606 OID 46366)
-- Dependencies: 823 823
-- Name: lab_storage_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prescparam_storage
    ADD CONSTRAINT lab_storage_pkey PRIMARY KEY (oid);


--
-- TOC entry 8521 (class 2606 OID 46368)
-- Dependencies: 613 613
-- Name: laboratory_reports_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY laboratory_reports
    ADD CONSTRAINT laboratory_reports_pkey PRIMARY KEY (oid);


--
-- TOC entry 8587 (class 2606 OID 46370)
-- Dependencies: 638 638
-- Name: lpu_information_system_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_information_system_history
    ADD CONSTRAINT lpu_information_system_history_pkey PRIMARY KEY (hid);


--
-- TOC entry 8583 (class 2606 OID 46372)
-- Dependencies: 637 637
-- Name: lpu_information_system_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_information_system
    ADD CONSTRAINT lpu_information_system_pkey PRIMARY KEY (oid);


--
-- TOC entry 8606 (class 2606 OID 46374)
-- Dependencies: 646 646
-- Name: lpudorovor_profile_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpudorovor_profile
    ADD CONSTRAINT lpudorovor_profile_pkey PRIMARY KEY (oid);


--
-- TOC entry 8613 (class 2606 OID 46376)
-- Dependencies: 648 648
-- Name: map_teeth_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY map_teeth
    ADD CONSTRAINT map_teeth_pkey PRIMARY KEY (oid);


--
-- TOC entry 8628 (class 2606 OID 46378)
-- Dependencies: 653 653
-- Name: mdoc_barcode_code_key; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_barcode
    ADD CONSTRAINT mdoc_barcode_code_key UNIQUE (code);


--
-- TOC entry 8630 (class 2606 OID 46380)
-- Dependencies: 653 653
-- Name: mdoc_barcode_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_barcode
    ADD CONSTRAINT mdoc_barcode_pkey PRIMARY KEY (mdoc);


--
-- TOC entry 8638 (class 2606 OID 46382)
-- Dependencies: 655 655
-- Name: mdoc_last_number_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_last_number
    ADD CONSTRAINT mdoc_last_number_pkey PRIMARY KEY (oid);


--
-- TOC entry 8640 (class 2606 OID 46384)
-- Dependencies: 656 656
-- Name: mdoc_location_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_location
    ADD CONSTRAINT mdoc_location_pkey PRIMARY KEY (oid);


--
-- TOC entry 8642 (class 2606 OID 46386)
-- Dependencies: 657 657
-- Name: mdoc_mdoc_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_mdoc
    ADD CONSTRAINT mdoc_mdoc_pkey PRIMARY KEY (oid);


--
-- TOC entry 8654 (class 2606 OID 46388)
-- Dependencies: 662 662
-- Name: medic_given_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medic_given
    ADD CONSTRAINT medic_given_pkey PRIMARY KEY (id);


--
-- TOC entry 8661 (class 2606 OID 46390)
-- Dependencies: 665 665
-- Name: medic_template_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medic_template
    ADD CONSTRAINT medic_template_pkey PRIMARY KEY (oid);


--
-- TOC entry 8749 (class 2606 OID 46392)
-- Dependencies: 696 696 696
-- Name: nomen_desc_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nomen_desc
    ADD CONSTRAINT nomen_desc_idx PRIMARY KEY (nomenid, descid);


--
-- TOC entry 8747 (class 2606 OID 46394)
-- Dependencies: 695 695
-- Name: nomen_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_pkey PRIMARY KEY (id);


--
-- TOC entry 8763 (class 2606 OID 46435)
-- Dependencies: 700 700
-- Name: nosology_mkb10_benefitmedic_upload_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nosology_mkb10_benefitmedic_upload
    ADD CONSTRAINT nosology_mkb10_benefitmedic_upload_pkey PRIMARY KEY (oid);


--
-- TOC entry 8765 (class 2606 OID 46437)
-- Dependencies: 701 701
-- Name: nsi_log_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nsi_log
    ADD CONSTRAINT nsi_log_pkey PRIMARY KEY (oid);


--
-- TOC entry 8777 (class 2606 OID 46439)
-- Dependencies: 709 709
-- Name: oper_anest_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oper_anest
    ADD CONSTRAINT oper_anest_pkey PRIMARY KEY (oid);


--
-- TOC entry 8782 (class 2606 OID 46441)
-- Dependencies: 711 711
-- Name: oper_plan_diag_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oper_plan_diag
    ADD CONSTRAINT oper_plan_diag_pkey PRIMARY KEY (oid);


--
-- TOC entry 8780 (class 2606 OID 46443)
-- Dependencies: 710 710
-- Name: oper_plan_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oper_plan
    ADD CONSTRAINT oper_plan_pkey PRIMARY KEY (oid);


--
-- TOC entry 8784 (class 2606 OID 46446)
-- Dependencies: 712 712
-- Name: oper_plan_sotr_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oper_plan_sotr
    ADD CONSTRAINT oper_plan_sotr_pkey PRIMARY KEY (oid);


--
-- TOC entry 8825 (class 2606 OID 46448)
-- Dependencies: 726 726
-- Name: otdel_region_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_region
    ADD CONSTRAINT otdel_region_pkey PRIMARY KEY (otdel);


--
-- TOC entry 8844 (class 2606 OID 46450)
-- Dependencies: 734 734
-- Name: parameters_name_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY parametrs_name
    ADD CONSTRAINT parameters_name_idx PRIMARY KEY (oid);


--
-- TOC entry 8862 (class 2606 OID 46452)
-- Dependencies: 740 740
-- Name: pay_agreement_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT pay_agreement_pkey PRIMARY KEY (oid);


--
-- TOC entry 8872 (class 2606 OID 46454)
-- Dependencies: 743 743
-- Name: pay_appendix_naz_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_appendix_naz
    ADD CONSTRAINT pay_appendix_naz_pkey PRIMARY KEY (oid);


--
-- TOC entry 8867 (class 2606 OID 46456)
-- Dependencies: 742 742
-- Name: pay_appendix_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_appendix
    ADD CONSTRAINT pay_appendix_pkey PRIMARY KEY (oid);


--
-- TOC entry 8878 (class 2606 OID 46458)
-- Dependencies: 746 746
-- Name: pay_type_appendix_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_type_appendix
    ADD CONSTRAINT pay_type_appendix_pkey PRIMARY KEY (oid);


--
-- TOC entry 8926 (class 2606 OID 46460)
-- Dependencies: 760 760
-- Name: people_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT people_history_pkey PRIMARY KEY (oid);


--
-- TOC entry 8933 (class 2606 OID 46462)
-- Dependencies: 763 763
-- Name: people_monitoring_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_monitoring
    ADD CONSTRAINT people_monitoring_pkey PRIMARY KEY (oid);


--
-- TOC entry 8971 (class 2606 OID 46464)
-- Dependencies: 778 778 778
-- Name: phact_desc_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY phact_desc
    ADD CONSTRAINT phact_desc_idx PRIMARY KEY (phactid, descid);


--
-- TOC entry 8997 (class 2606 OID 46467)
-- Dependencies: 784 784
-- Name: pinforequiredfilds_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pinforequiredfilds
    ADD CONSTRAINT pinforequiredfilds_pkey PRIMARY KEY (id);


--
-- TOC entry 7587 (class 2606 OID 46469)
-- Dependencies: 302 302
-- Name: pk_academicdegree; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY academicdegree
    ADD CONSTRAINT pk_academicdegree PRIMARY KEY (oid);


--
-- TOC entry 7548 (class 2606 OID 46471)
-- Dependencies: 212 212
-- Name: pk_address_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY address_type
    ADD CONSTRAINT pk_address_type PRIMARY KEY (oid);


--
-- TOC entry 7552 (class 2606 OID 46473)
-- Dependencies: 213 213
-- Name: pk_addressex; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY addressex
    ADD CONSTRAINT pk_addressex PRIMARY KEY (oid);


--
-- TOC entry 7608 (class 2606 OID 46479)
-- Dependencies: 311 311
-- Name: pk_age_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY age_group
    ADD CONSTRAINT pk_age_group PRIMARY KEY (oid);


--
-- TOC entry 7614 (class 2606 OID 46481)
-- Dependencies: 312 312
-- Name: pk_age_group_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY age_group_history
    ADD CONSTRAINT pk_age_group_history PRIMARY KEY (hid);


--
-- TOC entry 7616 (class 2606 OID 46483)
-- Dependencies: 313 313
-- Name: pk_age_group_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY age_group_type
    ADD CONSTRAINT pk_age_group_type PRIMARY KEY (oid);


--
-- TOC entry 7627 (class 2606 OID 46485)
-- Dependencies: 315 315
-- Name: pk_ambtalon; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT pk_ambtalon PRIMARY KEY (oid);


--
-- TOC entry 7650 (class 2606 OID 46487)
-- Dependencies: 321 321
-- Name: pk_ambtick_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ambtick_status
    ADD CONSTRAINT pk_ambtick_status PRIMARY KEY (id);


--
-- TOC entry 7667 (class 2606 OID 46489)
-- Dependencies: 322 322
-- Name: pk_ambticket; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT pk_ambticket PRIMARY KEY (id);


--
-- TOC entry 7673 (class 2606 OID 46491)
-- Dependencies: 325 325
-- Name: pk_answerclientmessages; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY answerclientmessages
    ADD CONSTRAINT pk_answerclientmessages PRIMARY KEY (oid);


--
-- TOC entry 7675 (class 2606 OID 46493)
-- Dependencies: 326 326
-- Name: pk_area_list; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY area_list
    ADD CONSTRAINT pk_area_list PRIMARY KEY (oid);


--
-- TOC entry 7677 (class 2606 OID 46495)
-- Dependencies: 327 327
-- Name: pk_area_lpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY area_lpu
    ADD CONSTRAINT pk_area_lpu PRIMARY KEY (oid);


--
-- TOC entry 7680 (class 2606 OID 46497)
-- Dependencies: 328 328
-- Name: pk_areal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal
    ADD CONSTRAINT pk_areal PRIMARY KEY (oid);


--
-- TOC entry 7688 (class 2606 OID 46499)
-- Dependencies: 330 330
-- Name: pk_areal_kladr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_kladr
    ADD CONSTRAINT pk_areal_kladr PRIMARY KEY (oid);


--
-- TOC entry 7690 (class 2606 OID 46501)
-- Dependencies: 331 331
-- Name: pk_areal_move_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_move_type
    ADD CONSTRAINT pk_areal_move_type PRIMARY KEY (oid);


--
-- TOC entry 7694 (class 2606 OID 46503)
-- Dependencies: 332 332
-- Name: pk_areal_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT pk_areal_people PRIMARY KEY (oid);


--
-- TOC entry 7701 (class 2606 OID 46505)
-- Dependencies: 333 333
-- Name: pk_areal_people_hist; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT pk_areal_people_hist PRIMARY KEY (oid);


--
-- TOC entry 7703 (class 2606 OID 46507)
-- Dependencies: 334 334
-- Name: pk_areal_reason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_reason
    ADD CONSTRAINT pk_areal_reason PRIMARY KEY (id);


--
-- TOC entry 7709 (class 2606 OID 46509)
-- Dependencies: 335 335
-- Name: pk_areal_sotr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_sotr
    ADD CONSTRAINT pk_areal_sotr PRIMARY KEY (oid);


--
-- TOC entry 7711 (class 2606 OID 46511)
-- Dependencies: 336 336
-- Name: pk_areal_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY areal_type
    ADD CONSTRAINT pk_areal_type PRIMARY KEY (oid);


--
-- TOC entry 7714 (class 2606 OID 46513)
-- Dependencies: 337 337
-- Name: pk_arrivals; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY arrivals
    ADD CONSTRAINT pk_arrivals PRIMARY KEY (oid);


--
-- TOC entry 7716 (class 2606 OID 46515)
-- Dependencies: 338 338
-- Name: pk_arriveplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY arriveplace
    ADD CONSTRAINT pk_arriveplace PRIMARY KEY (oid);


--
-- TOC entry 7718 (class 2606 OID 46517)
-- Dependencies: 339 339
-- Name: pk_arrivereason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY arrivereason
    ADD CONSTRAINT pk_arrivereason PRIMARY KEY (oid);


--
-- TOC entry 7720 (class 2606 OID 46519)
-- Dependencies: 341 341
-- Name: pk_audit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY audit
    ADD CONSTRAINT pk_audit PRIMARY KEY (oid);


--
-- TOC entry 7722 (class 2606 OID 46521)
-- Dependencies: 342 342
-- Name: pk_auditactiontypes; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY auditactiontypes
    ADD CONSTRAINT pk_auditactiontypes PRIMARY KEY (oid);


--
-- TOC entry 7724 (class 2606 OID 46523)
-- Dependencies: 343 343
-- Name: pk_auditfailedlogin; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY auditfailedlogin
    ADD CONSTRAINT pk_auditfailedlogin PRIMARY KEY (oid);


--
-- TOC entry 7727 (class 2606 OID 46525)
-- Dependencies: 345 345
-- Name: pk_award; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY award
    ADD CONSTRAINT pk_award PRIMARY KEY (oid);


--
-- TOC entry 7731 (class 2606 OID 46527)
-- Dependencies: 346 346
-- Name: pk_bank_account; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bank_account
    ADD CONSTRAINT pk_bank_account PRIMARY KEY (oid);


--
-- TOC entry 7738 (class 2606 OID 46529)
-- Dependencies: 348 348
-- Name: pk_bed; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed
    ADD CONSTRAINT pk_bed PRIMARY KEY (oid);


--
-- TOC entry 7741 (class 2606 OID 46531)
-- Dependencies: 349 349
-- Name: pk_bed_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed_history
    ADD CONSTRAINT pk_bed_history PRIMARY KEY (hid);


--
-- TOC entry 7745 (class 2606 OID 46533)
-- Dependencies: 350 350
-- Name: pk_bed_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed_info
    ADD CONSTRAINT pk_bed_info PRIMARY KEY (oid);


--
-- TOC entry 7749 (class 2606 OID 46535)
-- Dependencies: 351 351
-- Name: pk_bed_oper; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed_oper
    ADD CONSTRAINT pk_bed_oper PRIMARY KEY (oid);


--
-- TOC entry 7751 (class 2606 OID 46537)
-- Dependencies: 352 352
-- Name: pk_bed_oper_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed_oper_type
    ADD CONSTRAINT pk_bed_oper_type PRIMARY KEY (oid);


--
-- TOC entry 7753 (class 2606 OID 46539)
-- Dependencies: 353 353
-- Name: pk_bed_profile; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bed_profile
    ADD CONSTRAINT pk_bed_profile PRIMARY KEY (oid);


--
-- TOC entry 7759 (class 2606 OID 46541)
-- Dependencies: 354 354
-- Name: pk_benefit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT pk_benefit PRIMARY KEY (oid);


--
-- TOC entry 7764 (class 2606 OID 46543)
-- Dependencies: 356 356
-- Name: pk_benefit_employee_upload; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_employee_upload
    ADD CONSTRAINT pk_benefit_employee_upload PRIMARY KEY (oid);


--
-- TOC entry 7770 (class 2606 OID 46545)
-- Dependencies: 358 358
-- Name: pk_benefit_finansing_lgot_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_finansing_lgot_type
    ADD CONSTRAINT pk_benefit_finansing_lgot_type PRIMARY KEY (oid);


--
-- TOC entry 7766 (class 2606 OID 46547)
-- Dependencies: 357 357
-- Name: pk_benefit_lgot_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_financing
    ADD CONSTRAINT pk_benefit_lgot_type PRIMARY KEY (oid);


--
-- TOC entry 7775 (class 2606 OID 46549)
-- Dependencies: 359 359
-- Name: pk_benefit_medic; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_medic
    ADD CONSTRAINT pk_benefit_medic PRIMARY KEY (oid);


--
-- TOC entry 7778 (class 2606 OID 46551)
-- Dependencies: 360 360
-- Name: pk_benefit_medic_price; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_medic_price
    ADD CONSTRAINT pk_benefit_medic_price PRIMARY KEY (oid);


--
-- TOC entry 7782 (class 2606 OID 46553)
-- Dependencies: 362 362
-- Name: pk_benefit_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefit_type
    ADD CONSTRAINT pk_benefit_type PRIMARY KEY (oid);


--
-- TOC entry 7786 (class 2606 OID 46555)
-- Dependencies: 364 364
-- Name: pk_benefittype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY benefittype
    ADD CONSTRAINT pk_benefittype PRIMARY KEY (oid);


--
-- TOC entry 7795 (class 2606 OID 46557)
-- Dependencies: 367 367
-- Name: pk_birth_place; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY birth_place
    ADD CONSTRAINT pk_birth_place PRIMARY KEY (oid);


--
-- TOC entry 7798 (class 2606 OID 46559)
-- Dependencies: 368 368
-- Name: pk_blog; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY blog
    ADD CONSTRAINT pk_blog PRIMARY KEY (oid);


--
-- TOC entry 7801 (class 2606 OID 46561)
-- Dependencies: 369 369
-- Name: pk_blog_article; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY blog_article
    ADD CONSTRAINT pk_blog_article PRIMARY KEY (oid);


--
-- TOC entry 7804 (class 2606 OID 46563)
-- Dependencies: 370 370
-- Name: pk_blog_log; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY blog_log
    ADD CONSTRAINT pk_blog_log PRIMARY KEY (oid);


--
-- TOC entry 7808 (class 2606 OID 46565)
-- Dependencies: 371 371
-- Name: pk_blog_rating; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY blog_rating
    ADD CONSTRAINT pk_blog_rating PRIMARY KEY (oid);


--
-- TOC entry 7823 (class 2606 OID 46567)
-- Dependencies: 372 372
-- Name: pk_building; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building
    ADD CONSTRAINT pk_building PRIMARY KEY (oid);


--
-- TOC entry 7825 (class 2606 OID 46569)
-- Dependencies: 373 373
-- Name: pk_building_communication_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_communication_type
    ADD CONSTRAINT pk_building_communication_type PRIMARY KEY (oid);


--
-- TOC entry 7827 (class 2606 OID 46571)
-- Dependencies: 374 374
-- Name: pk_building_floor_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_floor_type
    ADD CONSTRAINT pk_building_floor_type PRIMARY KEY (oid);


--
-- TOC entry 7829 (class 2606 OID 46573)
-- Dependencies: 375 375
-- Name: pk_building_heating_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_heating_type
    ADD CONSTRAINT pk_building_heating_type PRIMARY KEY (oid);


--
-- TOC entry 7845 (class 2606 OID 46575)
-- Dependencies: 376 376
-- Name: pk_building_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT pk_building_history PRIMARY KEY (hid);


--
-- TOC entry 7847 (class 2606 OID 46577)
-- Dependencies: 377 377
-- Name: pk_building_hot_water_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_hot_water_type
    ADD CONSTRAINT pk_building_hot_water_type PRIMARY KEY (oid);


--
-- TOC entry 7849 (class 2606 OID 46579)
-- Dependencies: 378 378
-- Name: pk_building_ownership; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_ownership
    ADD CONSTRAINT pk_building_ownership PRIMARY KEY (oid);


--
-- TOC entry 7851 (class 2606 OID 46581)
-- Dependencies: 379 379
-- Name: pk_building_power_supply_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_power_supply_type
    ADD CONSTRAINT pk_building_power_supply_type PRIMARY KEY (oid);


--
-- TOC entry 7854 (class 2606 OID 46583)
-- Dependencies: 380 380
-- Name: pk_building_price; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_price
    ADD CONSTRAINT pk_building_price PRIMARY KEY (oid);


--
-- TOC entry 7856 (class 2606 OID 46585)
-- Dependencies: 381 381
-- Name: pk_building_project_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_project_type
    ADD CONSTRAINT pk_building_project_type PRIMARY KEY (oid);


--
-- TOC entry 7858 (class 2606 OID 46587)
-- Dependencies: 382 382
-- Name: pk_building_purpose; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_purpose
    ADD CONSTRAINT pk_building_purpose PRIMARY KEY (oid);


--
-- TOC entry 7860 (class 2606 OID 46589)
-- Dependencies: 383 383
-- Name: pk_building_sewerage_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_sewerage_type
    ADD CONSTRAINT pk_building_sewerage_type PRIMARY KEY (oid);


--
-- TOC entry 7864 (class 2606 OID 46591)
-- Dependencies: 384 384
-- Name: pk_building_state; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_state
    ADD CONSTRAINT pk_building_state PRIMARY KEY (oid);


--
-- TOC entry 7866 (class 2606 OID 46593)
-- Dependencies: 385 385
-- Name: pk_building_state_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_state_type
    ADD CONSTRAINT pk_building_state_type PRIMARY KEY (oid);


--
-- TOC entry 7868 (class 2606 OID 46595)
-- Dependencies: 386 386
-- Name: pk_building_supporting_structu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_supporting_structure
    ADD CONSTRAINT pk_building_supporting_structu PRIMARY KEY (oid);


--
-- TOC entry 7870 (class 2606 OID 46597)
-- Dependencies: 387 387
-- Name: pk_building_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building_type
    ADD CONSTRAINT pk_building_type PRIMARY KEY (oid);


--
-- TOC entry 7874 (class 2606 OID 46599)
-- Dependencies: 388 388
-- Name: pk_cabinet; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cabinet
    ADD CONSTRAINT pk_cabinet PRIMARY KEY (oid);


--
-- TOC entry 7887 (class 2606 OID 46601)
-- Dependencies: 390 390
-- Name: pk_cardemployee; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT pk_cardemployee PRIMARY KEY (oid);


--
-- TOC entry 7891 (class 2606 OID 46603)
-- Dependencies: 392 392
-- Name: pk_changedusers; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY changedusers
    ADD CONSTRAINT pk_changedusers PRIMARY KEY (oid);


--
-- TOC entry 7904 (class 2606 OID 46605)
-- Dependencies: 393 393
-- Name: pk_changelpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT pk_changelpu PRIMARY KEY (oid);


--
-- TOC entry 7906 (class 2606 OID 46607)
-- Dependencies: 394 394
-- Name: pk_chatgroup; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY chatgroup
    ADD CONSTRAINT pk_chatgroup PRIMARY KEY (oid);


--
-- TOC entry 7908 (class 2606 OID 46609)
-- Dependencies: 395 395 395
-- Name: pk_chatgroup_sotr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY chatgroupuser
    ADD CONSTRAINT pk_chatgroup_sotr PRIMARY KEY (chatgroupid, sotrid);


--
-- TOC entry 7910 (class 2606 OID 46611)
-- Dependencies: 396 396
-- Name: pk_chathistory; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY chathistory
    ADD CONSTRAINT pk_chathistory PRIMARY KEY (oid);


--
-- TOC entry 7912 (class 2606 OID 46613)
-- Dependencies: 397 397
-- Name: pk_children_evolution_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY children_evolution_history
    ADD CONSTRAINT pk_children_evolution_type PRIMARY KEY (id);


--
-- TOC entry 7914 (class 2606 OID 46615)
-- Dependencies: 398 398
-- Name: pk_citizenship; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY citizenship
    ADD CONSTRAINT pk_citizenship PRIMARY KEY (oid);


--
-- TOC entry 7919 (class 2606 OID 46617)
-- Dependencies: 401 401
-- Name: pk_citycloud_city; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY citycloud
    ADD CONSTRAINT pk_citycloud_city PRIMARY KEY (city);


--
-- TOC entry 7921 (class 2606 OID 46619)
-- Dependencies: 402 402
-- Name: pk_clientscompany; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clientscompany
    ADD CONSTRAINT pk_clientscompany PRIMARY KEY (oid);


--
-- TOC entry 7923 (class 2606 OID 46621)
-- Dependencies: 403 403
-- Name: pk_clinicalmin; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clinicalmin
    ADD CONSTRAINT pk_clinicalmin PRIMARY KEY (oid);


--
-- TOC entry 7926 (class 2606 OID 46623)
-- Dependencies: 404 404
-- Name: pk_clinicalminservices; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clinicalminservices
    ADD CONSTRAINT pk_clinicalminservices PRIMARY KEY (oid);


--
-- TOC entry 7928 (class 2606 OID 46625)
-- Dependencies: 405 405
-- Name: pk_clinicalminservicesshablon; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clinicalminservicesshablon
    ADD CONSTRAINT pk_clinicalminservicesshablon PRIMARY KEY (oid);


--
-- TOC entry 7931 (class 2606 OID 46627)
-- Dependencies: 406 406
-- Name: pk_clinicalminservicesvalues; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY clinicalminservicesvalues
    ADD CONSTRAINT pk_clinicalminservicesvalues PRIMARY KEY (oid);


--
-- TOC entry 7957 (class 2606 OID 46629)
-- Dependencies: 415 415
-- Name: pk_comfort; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY comfort
    ADD CONSTRAINT pk_comfort PRIMARY KEY (oid);


--
-- TOC entry 7960 (class 2606 OID 46631)
-- Dependencies: 416 416
-- Name: pk_comfort_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY comfort_type
    ADD CONSTRAINT pk_comfort_type PRIMARY KEY (oid);


--
-- TOC entry 7969 (class 2606 OID 46633)
-- Dependencies: 418 418
-- Name: pk_company; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY company
    ADD CONSTRAINT pk_company PRIMARY KEY (oid);


--
-- TOC entry 7973 (class 2606 OID 46635)
-- Dependencies: 419 419 419
-- Name: pk_company_address; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY company_address
    ADD CONSTRAINT pk_company_address PRIMARY KEY (company, address);


--
-- TOC entry 7976 (class 2606 OID 46637)
-- Dependencies: 420 420
-- Name: pk_company_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY company_history
    ADD CONSTRAINT pk_company_history PRIMARY KEY (hid);


--
-- TOC entry 7978 (class 2606 OID 46639)
-- Dependencies: 421 421
-- Name: pk_companytype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY companytype
    ADD CONSTRAINT pk_companytype PRIMARY KEY (oid);


--
-- TOC entry 7997 (class 2606 OID 46641)
-- Dependencies: 429 429
-- Name: pk_counterpart_garanty_letter; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY counterpart_garanty_letter
    ADD CONSTRAINT pk_counterpart_garanty_letter PRIMARY KEY (oid);


--
-- TOC entry 8008 (class 2606 OID 46643)
-- Dependencies: 434 434
-- Name: pk_country; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY country
    ADD CONSTRAINT pk_country PRIMARY KEY (oid);


--
-- TOC entry 8012 (class 2606 OID 46645)
-- Dependencies: 435 435
-- Name: pk_court; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY court
    ADD CONSTRAINT pk_court PRIMARY KEY (oid);


--
-- TOC entry 8017 (class 2606 OID 46647)
-- Dependencies: 437 437
-- Name: pk_cure_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cure_type
    ADD CONSTRAINT pk_cure_type PRIMARY KEY (oid);


--
-- TOC entry 8022 (class 2606 OID 46649)
-- Dependencies: 439 439
-- Name: pk_demand; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand
    ADD CONSTRAINT pk_demand PRIMARY KEY (oid);


--
-- TOC entry 8024 (class 2606 OID 46651)
-- Dependencies: 440 440
-- Name: pk_demand_cancel_reason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_cancel_reason
    ADD CONSTRAINT pk_demand_cancel_reason PRIMARY KEY (oid);


--
-- TOC entry 8028 (class 2606 OID 46653)
-- Dependencies: 442 442
-- Name: pk_demand_diag; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_diag
    ADD CONSTRAINT pk_demand_diag PRIMARY KEY (oid);


--
-- TOC entry 8030 (class 2606 OID 46655)
-- Dependencies: 443 443
-- Name: pk_demand_goal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_goal
    ADD CONSTRAINT pk_demand_goal PRIMARY KEY (oid);


--
-- TOC entry 8032 (class 2606 OID 46657)
-- Dependencies: 445 445
-- Name: pk_demand_refuse_variant; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_refuse_variant
    ADD CONSTRAINT pk_demand_refuse_variant PRIMARY KEY (oid);


--
-- TOC entry 8036 (class 2606 OID 46659)
-- Dependencies: 447 447
-- Name: pk_demand_standart; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_standart
    ADD CONSTRAINT pk_demand_standart PRIMARY KEY (oid);


--
-- TOC entry 8038 (class 2606 OID 46661)
-- Dependencies: 448 448
-- Name: pk_demand_statement; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY demand_statement
    ADD CONSTRAINT pk_demand_statement PRIMARY KEY (oid);


--
-- TOC entry 8056 (class 2606 OID 46663)
-- Dependencies: 451 451
-- Name: pk_diag; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT pk_diag PRIMARY KEY (id);


--
-- TOC entry 8058 (class 2606 OID 46665)
-- Dependencies: 452 452
-- Name: pk_diag_detect; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diag_detect
    ADD CONSTRAINT pk_diag_detect PRIMARY KEY (oid);


--
-- TOC entry 8060 (class 2606 OID 46667)
-- Dependencies: 453 453
-- Name: pk_diag_kind; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diag_kind
    ADD CONSTRAINT pk_diag_kind PRIMARY KEY (id);


--
-- TOC entry 8065 (class 2606 OID 46669)
-- Dependencies: 454 454
-- Name: pk_diag_presc_model; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diag_presc_model
    ADD CONSTRAINT pk_diag_presc_model PRIMARY KEY (oid);


--
-- TOC entry 8068 (class 2606 OID 46671)
-- Dependencies: 455 455
-- Name: pk_diag_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diag_type
    ADD CONSTRAINT pk_diag_type PRIMARY KEY (id);


--
-- TOC entry 8070 (class 2606 OID 46673)
-- Dependencies: 458 458
-- Name: pk_diagnoz_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diagnoz_template
    ADD CONSTRAINT pk_diagnoz_template PRIMARY KEY (oid);


--
-- TOC entry 8076 (class 2606 OID 46675)
-- Dependencies: 459 459
-- Name: pk_diary; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diary
    ADD CONSTRAINT pk_diary PRIMARY KEY (oid);


--
-- TOC entry 8078 (class 2606 OID 46677)
-- Dependencies: 460 460
-- Name: pk_diary_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diary_type
    ADD CONSTRAINT pk_diary_type PRIMARY KEY (oid);


--
-- TOC entry 7630 (class 2606 OID 46679)
-- Dependencies: 316 316
-- Name: pk_dictionary; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dictionary
    ADD CONSTRAINT pk_dictionary PRIMARY KEY (oid);


--
-- TOC entry 8082 (class 2606 OID 46681)
-- Dependencies: 461 461
-- Name: pk_dictionary_field; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dictionary_field
    ADD CONSTRAINT pk_dictionary_field PRIMARY KEY (oid);


--
-- TOC entry 8084 (class 2606 OID 46683)
-- Dependencies: 462 462
-- Name: pk_dictionary_field_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dictionary_field_type
    ADD CONSTRAINT pk_dictionary_field_type PRIMARY KEY (oid);


--
-- TOC entry 8087 (class 2606 OID 46685)
-- Dependencies: 463 463
-- Name: pk_dictionary_nsi; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dictionary_nsi
    ADD CONSTRAINT pk_dictionary_nsi PRIMARY KEY (oid);


--
-- TOC entry 8096 (class 2606 OID 46687)
-- Dependencies: 465 465
-- Name: pk_diplomaeducation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diplomaeducation
    ADD CONSTRAINT pk_diplomaeducation PRIMARY KEY (oid);


--
-- TOC entry 8107 (class 2606 OID 46689)
-- Dependencies: 470 470
-- Name: pk_disp_card_diag; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_card_diag
    ADD CONSTRAINT pk_disp_card_diag PRIMARY KEY (oid);


--
-- TOC entry 8114 (class 2606 OID 46691)
-- Dependencies: 471 471
-- Name: pk_disp_card_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT pk_disp_card_info PRIMARY KEY (oid);


--
-- TOC entry 8116 (class 2606 OID 46693)
-- Dependencies: 472 472
-- Name: pk_disp_close_cause; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_close_cause
    ADD CONSTRAINT pk_disp_close_cause PRIMARY KEY (oid);


--
-- TOC entry 8118 (class 2606 OID 46695)
-- Dependencies: 473 473
-- Name: pk_disp_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_group
    ADD CONSTRAINT pk_disp_group PRIMARY KEY (oid);


--
-- TOC entry 8120 (class 2606 OID 46697)
-- Dependencies: 474 474
-- Name: pk_disp_stage; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_stage
    ADD CONSTRAINT pk_disp_stage PRIMARY KEY (id);


--
-- TOC entry 8122 (class 2606 OID 46699)
-- Dependencies: 475 475
-- Name: pk_disp_step; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_step
    ADD CONSTRAINT pk_disp_step PRIMARY KEY (id);


--
-- TOC entry 8124 (class 2606 OID 46701)
-- Dependencies: 476 476
-- Name: pk_disp_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY disp_type
    ADD CONSTRAINT pk_disp_type PRIMARY KEY (oid);


--
-- TOC entry 8126 (class 2606 OID 46703)
-- Dependencies: 477 477
-- Name: pk_dispgroup; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dispgroup
    ADD CONSTRAINT pk_dispgroup PRIMARY KEY (id);


--
-- TOC entry 8128 (class 2606 OID 46705)
-- Dependencies: 478 478
-- Name: pk_dispstate; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dispstate
    ADD CONSTRAINT pk_dispstate PRIMARY KEY (oid);


--
-- TOC entry 8132 (class 2606 OID 46707)
-- Dependencies: 479 479
-- Name: pk_district; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY district
    ADD CONSTRAINT pk_district PRIMARY KEY (oid);


--
-- TOC entry 8136 (class 2606 OID 46709)
-- Dependencies: 481 481
-- Name: pk_districtstreet; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY districtstreet
    ADD CONSTRAINT pk_districtstreet PRIMARY KEY (oid);


--
-- TOC entry 8142 (class 2606 OID 46711)
-- Dependencies: 484 484
-- Name: pk_docobsl; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY docobsl
    ADD CONSTRAINT pk_docobsl PRIMARY KEY (oid);


--
-- TOC entry 8633 (class 2606 OID 46713)
-- Dependencies: 654 654
-- Name: pk_document_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_group
    ADD CONSTRAINT pk_document_group PRIMARY KEY (oid);


--
-- TOC entry 8166 (class 2606 OID 46715)
-- Dependencies: 490 490
-- Name: pk_dop_disp_card_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dop_disp_card_info
    ADD CONSTRAINT pk_dop_disp_card_info PRIMARY KEY (oid);


--
-- TOC entry 8184 (class 2606 OID 46717)
-- Dependencies: 497 497
-- Name: pk_ecompany; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ecompany
    ADD CONSTRAINT pk_ecompany PRIMARY KEY (oid);


--
-- TOC entry 8187 (class 2606 OID 46719)
-- Dependencies: 498 498
-- Name: pk_edizm; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY edizm
    ADD CONSTRAINT pk_edizm PRIMARY KEY (oid);


--
-- TOC entry 8189 (class 2606 OID 46721)
-- Dependencies: 499 499
-- Name: pk_edizmtype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY edizmtype
    ADD CONSTRAINT pk_edizmtype PRIMARY KEY (oid);


--
-- TOC entry 8191 (class 2606 OID 46723)
-- Dependencies: 500 500
-- Name: pk_educationinstitution; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY educationinstitution
    ADD CONSTRAINT pk_educationinstitution PRIMARY KEY (oid);


--
-- TOC entry 8193 (class 2606 OID 46725)
-- Dependencies: 501 501
-- Name: pk_educationtype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY educationtype
    ADD CONSTRAINT pk_educationtype PRIMARY KEY (oid);


--
-- TOC entry 8195 (class 2606 OID 46727)
-- Dependencies: 502 502
-- Name: pk_email_buffer; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY email_buffer
    ADD CONSTRAINT pk_email_buffer PRIMARY KEY (oid);


--
-- TOC entry 8199 (class 2606 OID 46729)
-- Dependencies: 504 504
-- Name: pk_eown; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY eown
    ADD CONSTRAINT pk_eown PRIMARY KEY (oid);


--
-- TOC entry 8205 (class 2606 OID 46731)
-- Dependencies: 505 505
-- Name: pk_epicris; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT pk_epicris PRIMARY KEY (oid);


--
-- TOC entry 8209 (class 2606 OID 46733)
-- Dependencies: 506 506
-- Name: pk_epicris_portal_link; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY epicris_portal_link
    ADD CONSTRAINT pk_epicris_portal_link PRIMARY KEY (oid);


--
-- TOC entry 8211 (class 2606 OID 46735)
-- Dependencies: 507 507
-- Name: pk_epicris_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY epicris_type
    ADD CONSTRAINT pk_epicris_type PRIMARY KEY (oid);


--
-- TOC entry 8219 (class 2606 OID 46737)
-- Dependencies: 508 508
-- Name: pk_equipment; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT pk_equipment PRIMARY KEY (oid);


--
-- TOC entry 8221 (class 2606 OID 46739)
-- Dependencies: 509 509
-- Name: pk_equipment_delivery; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_delivery
    ADD CONSTRAINT pk_equipment_delivery PRIMARY KEY (oid);


--
-- TOC entry 8225 (class 2606 OID 46741)
-- Dependencies: 510 510
-- Name: pk_equipment_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_history
    ADD CONSTRAINT pk_equipment_history PRIMARY KEY (hid);


--
-- TOC entry 8227 (class 2606 OID 46743)
-- Dependencies: 511 511
-- Name: pk_equipment_model; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_model
    ADD CONSTRAINT pk_equipment_model PRIMARY KEY (oid);


--
-- TOC entry 8231 (class 2606 OID 46745)
-- Dependencies: 512 512
-- Name: pk_equipment_oper; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_oper
    ADD CONSTRAINT pk_equipment_oper PRIMARY KEY (oid);


--
-- TOC entry 8233 (class 2606 OID 46747)
-- Dependencies: 513 513
-- Name: pk_equipment_oper_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_oper_type
    ADD CONSTRAINT pk_equipment_oper_type PRIMARY KEY (oid);


--
-- TOC entry 8235 (class 2606 OID 46749)
-- Dependencies: 514 514
-- Name: pk_equipment_ownership; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_ownership
    ADD CONSTRAINT pk_equipment_ownership PRIMARY KEY (oid);


--
-- TOC entry 8238 (class 2606 OID 46751)
-- Dependencies: 515 515
-- Name: pk_equipment_price; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_price
    ADD CONSTRAINT pk_equipment_price PRIMARY KEY (oid);


--
-- TOC entry 8241 (class 2606 OID 46753)
-- Dependencies: 516 516
-- Name: pk_equipment_state; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_state
    ADD CONSTRAINT pk_equipment_state PRIMARY KEY (oid);


--
-- TOC entry 8243 (class 2606 OID 46755)
-- Dependencies: 517 517
-- Name: pk_equipment_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY equipment_type
    ADD CONSTRAINT pk_equipment_type PRIMARY KEY (oid);


--
-- TOC entry 8247 (class 2606 OID 46757)
-- Dependencies: 518 518
-- Name: pk_errorclientmessages; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY errorclientmessages
    ADD CONSTRAINT pk_errorclientmessages PRIMARY KEY (oid);


--
-- TOC entry 8251 (class 2606 OID 46759)
-- Dependencies: 519 519
-- Name: pk_etable; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY etable
    ADD CONSTRAINT pk_etable PRIMARY KEY (oid);


--
-- TOC entry 8255 (class 2606 OID 46761)
-- Dependencies: 520 520
-- Name: pk_etheir; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY etheir
    ADD CONSTRAINT pk_etheir PRIMARY KEY (oid);


--
-- TOC entry 8262 (class 2606 OID 46763)
-- Dependencies: 521 521
-- Name: pk_event; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY event
    ADD CONSTRAINT pk_event PRIMARY KEY (oid);


--
-- TOC entry 8265 (class 2606 OID 46765)
-- Dependencies: 522 522
-- Name: pk_expert_part_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_part_type
    ADD CONSTRAINT pk_expert_part_type PRIMARY KEY (oid);


--
-- TOC entry 8272 (class 2606 OID 46767)
-- Dependencies: 523 523
-- Name: pk_expert_raiting; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_raiting
    ADD CONSTRAINT pk_expert_raiting PRIMARY KEY (oid);


--
-- TOC entry 8277 (class 2606 OID 46769)
-- Dependencies: 524 524
-- Name: pk_expert_raiting_section_part; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_raiting_section_part
    ADD CONSTRAINT pk_expert_raiting_section_part PRIMARY KEY (oid);


--
-- TOC entry 8282 (class 2606 OID 46771)
-- Dependencies: 525 525
-- Name: pk_expert_raiting_sections; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_raiting_sections
    ADD CONSTRAINT pk_expert_raiting_sections PRIMARY KEY (oid);


--
-- TOC entry 8285 (class 2606 OID 46773)
-- Dependencies: 526 526
-- Name: pk_expert_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_result
    ADD CONSTRAINT pk_expert_result PRIMARY KEY (oid);


--
-- TOC entry 8290 (class 2606 OID 46775)
-- Dependencies: 527 527
-- Name: pk_expert_templations_parts; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_templations_parts
    ADD CONSTRAINT pk_expert_templations_parts PRIMARY KEY (oid);


--
-- TOC entry 8293 (class 2606 OID 46777)
-- Dependencies: 528 528
-- Name: pk_expert_templations_sections; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY expert_templations_sections
    ADD CONSTRAINT pk_expert_templations_sections PRIMARY KEY (oid);


--
-- TOC entry 8328 (class 2606 OID 46779)
-- Dependencies: 533 533
-- Name: pk_extra_reason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY extra_reason
    ADD CONSTRAINT pk_extra_reason PRIMARY KEY (oid);


--
-- TOC entry 8330 (class 2606 OID 46781)
-- Dependencies: 534 534
-- Name: pk_faillogon; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY faillogon
    ADD CONSTRAINT pk_faillogon PRIMARY KEY (oid);


--
-- TOC entry 8332 (class 2606 OID 46783)
-- Dependencies: 535 535
-- Name: pk_family; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY family
    ADD CONSTRAINT pk_family PRIMARY KEY (oid);


--
-- TOC entry 8336 (class 2606 OID 46785)
-- Dependencies: 537 537
-- Name: pk_favorite_insurcompany; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY favorite_insurcompany
    ADD CONSTRAINT pk_favorite_insurcompany PRIMARY KEY (oid);


--
-- TOC entry 8340 (class 2606 OID 46787)
-- Dependencies: 538 538
-- Name: pk_favorite_otdel; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY favorite_otdel
    ADD CONSTRAINT pk_favorite_otdel PRIMARY KEY (oid);


--
-- TOC entry 8344 (class 2606 OID 46789)
-- Dependencies: 539 539
-- Name: pk_favorite_sotr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY favorite_sotr
    ADD CONSTRAINT pk_favorite_sotr PRIMARY KEY (oid);


--
-- TOC entry 8347 (class 2606 OID 46791)
-- Dependencies: 540 540
-- Name: pk_favorkind; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY favorkind
    ADD CONSTRAINT pk_favorkind PRIMARY KEY (oid);


--
-- TOC entry 8349 (class 2606 OID 46793)
-- Dependencies: 541 541
-- Name: pk_feature_diag; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY feature_diag
    ADD CONSTRAINT pk_feature_diag PRIMARY KEY (oid);


--
-- TOC entry 8352 (class 2606 OID 46795)
-- Dependencies: 542 542
-- Name: pk_feedback; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY feedback
    ADD CONSTRAINT pk_feedback PRIMARY KEY (oid);


--
-- TOC entry 8367 (class 2606 OID 46797)
-- Dependencies: 549 549
-- Name: pk_food_form; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY food_form
    ADD CONSTRAINT pk_food_form PRIMARY KEY (oid);


--
-- TOC entry 8369 (class 2606 OID 46799)
-- Dependencies: 550 550
-- Name: pk_food_repetition; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY food_repetition
    ADD CONSTRAINT pk_food_repetition PRIMARY KEY (oid);


--
-- TOC entry 8371 (class 2606 OID 46801)
-- Dependencies: 551 551
-- Name: pk_food_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY food_type
    ADD CONSTRAINT pk_food_type PRIMARY KEY (oid);


--
-- TOC entry 8375 (class 2606 OID 46803)
-- Dependencies: 555 555
-- Name: pk_form_dynamic; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY form_dynamic
    ADD CONSTRAINT pk_form_dynamic PRIMARY KEY (oid);


--
-- TOC entry 8378 (class 2606 OID 46805)
-- Dependencies: 556 556
-- Name: pk_form_smid; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY form_smid
    ADD CONSTRAINT pk_form_smid PRIMARY KEY (oid);


--
-- TOC entry 8384 (class 2606 OID 46807)
-- Dependencies: 558 558
-- Name: pk_functioning; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY functioning
    ADD CONSTRAINT pk_functioning PRIMARY KEY (oid);


--
-- TOC entry 8386 (class 2606 OID 46809)
-- Dependencies: 559 559
-- Name: pk_group_risk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY group_risk
    ADD CONSTRAINT pk_group_risk PRIMARY KEY (oid);


--
-- TOC entry 8388 (class 2606 OID 46811)
-- Dependencies: 560 560
-- Name: pk_hard_life; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY hard_life
    ADD CONSTRAINT pk_hard_life PRIMARY KEY (oid);


--
-- TOC entry 7917 (class 2606 OID 46813)
-- Dependencies: 399 399
-- Name: pk_hcategory; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY hcategory
    ADD CONSTRAINT pk_hcategory PRIMARY KEY (oid);


--
-- TOC entry 8391 (class 2606 OID 46815)
-- Dependencies: 561 561
-- Name: pk_heal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal
    ADD CONSTRAINT pk_heal PRIMARY KEY (oid);


--
-- TOC entry 8393 (class 2606 OID 46817)
-- Dependencies: 562 562
-- Name: pk_heal_dogovor; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal_dogovor
    ADD CONSTRAINT pk_heal_dogovor PRIMARY KEY (oid);


--
-- TOC entry 8397 (class 2606 OID 46819)
-- Dependencies: 563 563
-- Name: pk_heal_lpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal_lpu
    ADD CONSTRAINT pk_heal_lpu PRIMARY KEY (oid);


--
-- TOC entry 8400 (class 2606 OID 46821)
-- Dependencies: 564 564
-- Name: pk_heal_lpu_cost; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal_lpu_cost
    ADD CONSTRAINT pk_heal_lpu_cost PRIMARY KEY (oid);


--
-- TOC entry 8402 (class 2606 OID 46823)
-- Dependencies: 565 565
-- Name: pk_heal_presc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal_presc
    ADD CONSTRAINT pk_heal_presc PRIMARY KEY (oid);


--
-- TOC entry 8404 (class 2606 OID 46825)
-- Dependencies: 566 566
-- Name: pk_heal_profile_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY heal_profile_type
    ADD CONSTRAINT pk_heal_profile_type PRIMARY KEY (oid);


--
-- TOC entry 8406 (class 2606 OID 46827)
-- Dependencies: 567 567
-- Name: pk_healtype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY healtype
    ADD CONSTRAINT pk_healtype PRIMARY KEY (oid);


--
-- TOC entry 8411 (class 2606 OID 46829)
-- Dependencies: 570 570
-- Name: pk_history_mdoc_location; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY history_mdoc_location
    ADD CONSTRAINT pk_history_mdoc_location PRIMARY KEY (oid);


--
-- TOC entry 8413 (class 2606 OID 46831)
-- Dependencies: 571 571
-- Name: pk_holidayreason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY holidayreason
    ADD CONSTRAINT pk_holidayreason PRIMARY KEY (id);


--
-- TOC entry 8419 (class 2606 OID 46833)
-- Dependencies: 572 572
-- Name: pk_homevisit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY homevisit
    ADD CONSTRAINT pk_homevisit PRIMARY KEY (oid);


--
-- TOC entry 8430 (class 2606 OID 46835)
-- Dependencies: 577 577
-- Name: pk_icd10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY icd10
    ADD CONSTRAINT pk_icd10 PRIMARY KEY (id);


--
-- TOC entry 8438 (class 2606 OID 46837)
-- Dependencies: 586 586
-- Name: pk_infection; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infection
    ADD CONSTRAINT pk_infection PRIMARY KEY (oid);


--
-- TOC entry 8442 (class 2606 OID 46839)
-- Dependencies: 587 587
-- Name: pk_infection_icd10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infection_icd10
    ADD CONSTRAINT pk_infection_icd10 PRIMARY KEY (oid);


--
-- TOC entry 8445 (class 2606 OID 46841)
-- Dependencies: 588 588
-- Name: pk_information_system; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY information_system
    ADD CONSTRAINT pk_information_system PRIMARY KEY (oid);


--
-- TOC entry 8447 (class 2606 OID 46843)
-- Dependencies: 589 589
-- Name: pk_information_system_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY information_system_type
    ADD CONSTRAINT pk_information_system_type PRIMARY KEY (oid);


--
-- TOC entry 8451 (class 2606 OID 46845)
-- Dependencies: 590 590
-- Name: pk_infotype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infotype
    ADD CONSTRAINT pk_infotype PRIMARY KEY (oid);


--
-- TOC entry 8459 (class 2606 OID 46847)
-- Dependencies: 591 591
-- Name: pk_infovalue; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT pk_infovalue PRIMARY KEY (oid);


--
-- TOC entry 8464 (class 2606 OID 46849)
-- Dependencies: 592 592
-- Name: pk_infrastructure; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infrastructure
    ADD CONSTRAINT pk_infrastructure PRIMARY KEY (oid);


--
-- TOC entry 8466 (class 2606 OID 46851)
-- Dependencies: 593 593
-- Name: pk_infrastructure_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY infrastructure_type
    ADD CONSTRAINT pk_infrastructure_type PRIMARY KEY (oid);


--
-- TOC entry 8472 (class 2606 OID 46853)
-- Dependencies: 595 595
-- Name: pk_insur_rating; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insur_rating
    ADD CONSTRAINT pk_insur_rating PRIMARY KEY (oid);


--
-- TOC entry 8476 (class 2606 OID 46855)
-- Dependencies: 596 596
-- Name: pk_insur_review; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insur_review
    ADD CONSTRAINT pk_insur_review PRIMARY KEY (oid);


--
-- TOC entry 8478 (class 2606 OID 46857)
-- Dependencies: 597 597
-- Name: pk_insur_terr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insur_terr
    ADD CONSTRAINT pk_insur_terr PRIMARY KEY (oid);


--
-- TOC entry 7640 (class 2606 OID 46859)
-- Dependencies: 317 317
-- Name: pk_insurance; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT pk_insurance PRIMARY KEY (oid);


--
-- TOC entry 8480 (class 2606 OID 46861)
-- Dependencies: 598 598
-- Name: pk_insurance_state; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insurance_state
    ADD CONSTRAINT pk_insurance_state PRIMARY KEY (oid);


--
-- TOC entry 8482 (class 2606 OID 46863)
-- Dependencies: 599 599
-- Name: pk_insurcompany; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insurcompany
    ADD CONSTRAINT pk_insurcompany PRIMARY KEY (oid);


--
-- TOC entry 8485 (class 2606 OID 46865)
-- Dependencies: 600 600
-- Name: pk_insurprogram; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insurprogram
    ADD CONSTRAINT pk_insurprogram PRIMARY KEY (oid);


--
-- TOC entry 8496 (class 2606 OID 46867)
-- Dependencies: 602 602
-- Name: pk_invalid; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY invalid
    ADD CONSTRAINT pk_invalid PRIMARY KEY (oid);


--
-- TOC entry 8498 (class 2606 OID 46869)
-- Dependencies: 603 603
-- Name: pk_invalidgroup; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY invalidgroup
    ADD CONSTRAINT pk_invalidgroup PRIMARY KEY (oid);


--
-- TOC entry 8500 (class 2606 OID 46871)
-- Dependencies: 604 604
-- Name: pk_invalidkind; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY invalidkind
    ADD CONSTRAINT pk_invalidkind PRIMARY KEY (oid);


--
-- TOC entry 8502 (class 2606 OID 46873)
-- Dependencies: 605 605
-- Name: pk_invalidkind111; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY invalidtype
    ADD CONSTRAINT pk_invalidkind111 PRIMARY KEY (oid);


--
-- TOC entry 8504 (class 2606 OID 46875)
-- Dependencies: 606 606
-- Name: pk_kartaplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY kartaplace
    ADD CONSTRAINT pk_kartaplace PRIMARY KEY (oid);


--
-- TOC entry 8508 (class 2606 OID 46877)
-- Dependencies: 609 609
-- Name: pk_lab_run_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lab_run_type
    ADD CONSTRAINT pk_lab_run_type PRIMARY KEY (oid);


--
-- TOC entry 8510 (class 2606 OID 46879)
-- Dependencies: 610 610
-- Name: pk_lab_work_place; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lab_work_place
    ADD CONSTRAINT pk_lab_work_place PRIMARY KEY (oid);


--
-- TOC entry 8513 (class 2606 OID 46881)
-- Dependencies: 611 611
-- Name: pk_laboratory_norm; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY laboratory_norm
    ADD CONSTRAINT pk_laboratory_norm PRIMARY KEY (oid);


--
-- TOC entry 8518 (class 2606 OID 46883)
-- Dependencies: 612 612
-- Name: pk_laboratory_param; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY laboratory_param
    ADD CONSTRAINT pk_laboratory_param PRIMARY KEY (oid);


--
-- TOC entry 8523 (class 2606 OID 46885)
-- Dependencies: 614 614
-- Name: pk_lastonlinedatetime; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lastonlinedatetime
    ADD CONSTRAINT pk_lastonlinedatetime PRIMARY KEY (oid);


--
-- TOC entry 8526 (class 2606 OID 46887)
-- Dependencies: 615 615
-- Name: pk_latinnames; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY latinnames
    ADD CONSTRAINT pk_latinnames PRIMARY KEY (oid);


--
-- TOC entry 8530 (class 2606 OID 46889)
-- Dependencies: 616 616
-- Name: pk_level_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY level_type
    ADD CONSTRAINT pk_level_type PRIMARY KEY (oid);


--
-- TOC entry 8532 (class 2606 OID 46891)
-- Dependencies: 617 617
-- Name: pk_lgota; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lgota
    ADD CONSTRAINT pk_lgota PRIMARY KEY (oid);


--
-- TOC entry 8538 (class 2606 OID 46893)
-- Dependencies: 618 618
-- Name: pk_licence; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence
    ADD CONSTRAINT pk_licence PRIMARY KEY (oid);


--
-- TOC entry 8540 (class 2606 OID 46895)
-- Dependencies: 619 619
-- Name: pk_licence_activity_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence_activity_type
    ADD CONSTRAINT pk_licence_activity_type PRIMARY KEY (oid);


--
-- TOC entry 8544 (class 2606 OID 46897)
-- Dependencies: 620 620
-- Name: pk_licence_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence_history
    ADD CONSTRAINT pk_licence_history PRIMARY KEY (hid);


--
-- TOC entry 8548 (class 2606 OID 46899)
-- Dependencies: 621 621
-- Name: pk_licence_oper; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence_oper
    ADD CONSTRAINT pk_licence_oper PRIMARY KEY (oid);


--
-- TOC entry 8550 (class 2606 OID 46901)
-- Dependencies: 622 622
-- Name: pk_licence_oper_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence_oper_type
    ADD CONSTRAINT pk_licence_oper_type PRIMARY KEY (oid);


--
-- TOC entry 8554 (class 2606 OID 46903)
-- Dependencies: 623 623 623
-- Name: pk_licence_service; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY licence_service
    ADD CONSTRAINT pk_licence_service PRIMARY KEY (services, licence);


--
-- TOC entry 8556 (class 2606 OID 46905)
-- Dependencies: 624 624
-- Name: pk_linetype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY linetype
    ADD CONSTRAINT pk_linetype PRIMARY KEY (oid);


--
-- TOC entry 8558 (class 2606 OID 46907)
-- Dependencies: 625 625 625
-- Name: pk_live_count; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY live_count
    ADD CONSTRAINT pk_live_count PRIMARY KEY (presctype, otdel);


--
-- TOC entry 8560 (class 2606 OID 46909)
-- Dependencies: 626 626
-- Name: pk_liveplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY liveplace
    ADD CONSTRAINT pk_liveplace PRIMARY KEY (oid);


--
-- TOC entry 8567 (class 2606 OID 46911)
-- Dependencies: 631 631
-- Name: pk_lpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT pk_lpu PRIMARY KEY (oid);


--
-- TOC entry 8579 (class 2606 OID 46913)
-- Dependencies: 636 636
-- Name: pk_lpu_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT pk_lpu_history PRIMARY KEY (hid);


--
-- TOC entry 8591 (class 2606 OID 46915)
-- Dependencies: 639 639 639
-- Name: pk_lpu_insurprogram; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_insurprogram
    ADD CONSTRAINT pk_lpu_insurprogram PRIMARY KEY (lpu, insurprogram);


--
-- TOC entry 8593 (class 2606 OID 46917)
-- Dependencies: 640 640
-- Name: pk_lpu_organizational_form; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_organizational_form
    ADD CONSTRAINT pk_lpu_organizational_form PRIMARY KEY (oid);


--
-- TOC entry 8595 (class 2606 OID 46919)
-- Dependencies: 641 641
-- Name: pk_lpu_ownership; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_ownership
    ADD CONSTRAINT pk_lpu_ownership PRIMARY KEY (oid);


--
-- TOC entry 8597 (class 2606 OID 46921)
-- Dependencies: 642 642
-- Name: pk_lpu_profile; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_profile
    ADD CONSTRAINT pk_lpu_profile PRIMARY KEY (oid);


--
-- TOC entry 8600 (class 2606 OID 46923)
-- Dependencies: 643 643
-- Name: pk_lpu_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpu_type
    ADD CONSTRAINT pk_lpu_type PRIMARY KEY (oid);


--
-- TOC entry 8602 (class 2606 OID 46925)
-- Dependencies: 644 644
-- Name: pk_lpudogovor; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpudogovor
    ADD CONSTRAINT pk_lpudogovor PRIMARY KEY (oid);


--
-- TOC entry 8610 (class 2606 OID 46927)
-- Dependencies: 647 647
-- Name: pk_lpusettings; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpusettings
    ADD CONSTRAINT pk_lpusettings PRIMARY KEY (oid);


--
-- TOC entry 8616 (class 2606 OID 46929)
-- Dependencies: 649 649
-- Name: pk_marriage; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY marriage
    ADD CONSTRAINT pk_marriage PRIMARY KEY (oid);


--
-- TOC entry 8618 (class 2606 OID 46931)
-- Dependencies: 650 650
-- Name: pk_massunit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY massunit
    ADD CONSTRAINT pk_massunit PRIMARY KEY (oid);


--
-- TOC entry 8626 (class 2606 OID 46933)
-- Dependencies: 652 652
-- Name: pk_mdoc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT pk_mdoc PRIMARY KEY (id);


--
-- TOC entry 8644 (class 2606 OID 46935)
-- Dependencies: 658 658
-- Name: pk_mdoc_number; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_number
    ADD CONSTRAINT pk_mdoc_number PRIMARY KEY (mdoc_id);


--
-- TOC entry 8648 (class 2606 OID 46937)
-- Dependencies: 659 659
-- Name: pk_mdoc_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mdoc_type
    ADD CONSTRAINT pk_mdoc_type PRIMARY KEY (id);


--
-- TOC entry 8650 (class 2606 OID 46939)
-- Dependencies: 660 660
-- Name: pk_medhelptype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medhelptype
    ADD CONSTRAINT pk_medhelptype PRIMARY KEY (oid);


--
-- TOC entry 8652 (class 2606 OID 46941)
-- Dependencies: 661 661
-- Name: pk_medic_frequency; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medic_frequency
    ADD CONSTRAINT pk_medic_frequency PRIMARY KEY (oid);


--
-- TOC entry 8656 (class 2606 OID 46943)
-- Dependencies: 663 663
-- Name: pk_medic_input_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medic_input_type
    ADD CONSTRAINT pk_medic_input_type PRIMARY KEY (oid);


--
-- TOC entry 8659 (class 2606 OID 46945)
-- Dependencies: 664 664
-- Name: pk_medic_name; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medic_name
    ADD CONSTRAINT pk_medic_name PRIMARY KEY (oid);


--
-- TOC entry 8664 (class 2606 OID 46947)
-- Dependencies: 666 666
-- Name: pk_medicalcare; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medicalcare
    ADD CONSTRAINT pk_medicalcare PRIMARY KEY (oid);


--
-- TOC entry 8666 (class 2606 OID 46949)
-- Dependencies: 667 667
-- Name: pk_medicalcondition; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medicalcondition
    ADD CONSTRAINT pk_medicalcondition PRIMARY KEY (oid);


--
-- TOC entry 8668 (class 2606 OID 46951)
-- Dependencies: 668 668
-- Name: pk_medictype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medictype
    ADD CONSTRAINT pk_medictype PRIMARY KEY (oid);


--
-- TOC entry 8672 (class 2606 OID 46953)
-- Dependencies: 669 669
-- Name: pk_medremain; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medremain
    ADD CONSTRAINT pk_medremain PRIMARY KEY (oid);


--
-- TOC entry 8675 (class 2606 OID 46955)
-- Dependencies: 670 670
-- Name: pk_medtyperls; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY medtyperls
    ADD CONSTRAINT pk_medtyperls PRIMARY KEY (oid);


--
-- TOC entry 8677 (class 2606 OID 46957)
-- Dependencies: 671 671
-- Name: pk_messages; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY messages
    ADD CONSTRAINT pk_messages PRIMARY KEY (oid);


--
-- TOC entry 8679 (class 2606 OID 46959)
-- Dependencies: 672 672
-- Name: pk_military; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY military
    ADD CONSTRAINT pk_military PRIMARY KEY (oid);


--
-- TOC entry 8685 (class 2606 OID 46961)
-- Dependencies: 673 673
-- Name: pk_mkb_10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mkb_10
    ADD CONSTRAINT pk_mkb_10 PRIMARY KEY (oid);


--
-- TOC entry 8687 (class 2606 OID 46963)
-- Dependencies: 674 674
-- Name: pk_mkb_10_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY mkb_10_template
    ADD CONSTRAINT pk_mkb_10_template PRIMARY KEY (oid);


--
-- TOC entry 8692 (class 2606 OID 46965)
-- Dependencies: 676 676
-- Name: pk_monitoring_imt; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_imt
    ADD CONSTRAINT pk_monitoring_imt PRIMARY KEY (oid);


--
-- TOC entry 8696 (class 2606 OID 46967)
-- Dependencies: 677 677
-- Name: pk_monitoring_phisical_activit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_phisical_activity
    ADD CONSTRAINT pk_monitoring_phisical_activit PRIMARY KEY (oid);


--
-- TOC entry 8699 (class 2606 OID 46969)
-- Dependencies: 678 678
-- Name: pk_monitoring_press; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_press
    ADD CONSTRAINT pk_monitoring_press PRIMARY KEY (oid);


--
-- TOC entry 8702 (class 2606 OID 46971)
-- Dependencies: 679 679
-- Name: pk_monitoring_puls; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_puls
    ADD CONSTRAINT pk_monitoring_puls PRIMARY KEY (oid);


--
-- TOC entry 8705 (class 2606 OID 46973)
-- Dependencies: 680 680
-- Name: pk_monitoring_sugar; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_sugar
    ADD CONSTRAINT pk_monitoring_sugar PRIMARY KEY (oid);


--
-- TOC entry 8708 (class 2606 OID 46975)
-- Dependencies: 681 681
-- Name: pk_monitoring_temperature; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY monitoring_temperature
    ADD CONSTRAINT pk_monitoring_temperature PRIMARY KEY (oid);


--
-- TOC entry 8715 (class 2606 OID 46977)
-- Dependencies: 684 684
-- Name: pk_msec_conclusin; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY msec_conclusin
    ADD CONSTRAINT pk_msec_conclusin PRIMARY KEY (oid);


--
-- TOC entry 8722 (class 2606 OID 46979)
-- Dependencies: 685 685
-- Name: pk_msec_main; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY msec_main
    ADD CONSTRAINT pk_msec_main PRIMARY KEY (oid);


--
-- TOC entry 8725 (class 2606 OID 46981)
-- Dependencies: 686 686
-- Name: pk_msec_target; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY msec_target
    ADD CONSTRAINT pk_msec_target PRIMARY KEY (oid);


--
-- TOC entry 8727 (class 2606 OID 46983)
-- Dependencies: 687 687
-- Name: pk_myphonetype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY myphonetype
    ADD CONSTRAINT pk_myphonetype PRIMARY KEY (oid);


--
-- TOC entry 8729 (class 2606 OID 46985)
-- Dependencies: 688 688
-- Name: pk_nacionality; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nacionality
    ADD CONSTRAINT pk_nacionality PRIMARY KEY (oid);


--
-- TOC entry 8732 (class 2606 OID 46987)
-- Dependencies: 689 689
-- Name: pk_names; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY names
    ADD CONSTRAINT pk_names PRIMARY KEY (oid);


--
-- TOC entry 8739 (class 2606 OID 46989)
-- Dependencies: 691 691
-- Name: pk_natural_factor; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY natural_factor
    ADD CONSTRAINT pk_natural_factor PRIMARY KEY (oid);


--
-- TOC entry 8741 (class 2606 OID 46991)
-- Dependencies: 692 692
-- Name: pk_natural_factor_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY natural_factor_type
    ADD CONSTRAINT pk_natural_factor_type PRIMARY KEY (oid);


--
-- TOC entry 8743 (class 2606 OID 46993)
-- Dependencies: 693 693
-- Name: pk_newborn_state; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY newborn_state
    ADD CONSTRAINT pk_newborn_state PRIMARY KEY (oid);


--
-- TOC entry 8745 (class 2606 OID 46995)
-- Dependencies: 694 694
-- Name: pk_news; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY news
    ADD CONSTRAINT pk_news PRIMARY KEY (oid);


--
-- TOC entry 8751 (class 2606 OID 46997)
-- Dependencies: 697 697
-- Name: pk_nosology; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nosology
    ADD CONSTRAINT pk_nosology PRIMARY KEY (oid);


--
-- TOC entry 8755 (class 2606 OID 46999)
-- Dependencies: 698 698
-- Name: pk_nosology_mkb10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nosology_mkb10
    ADD CONSTRAINT pk_nosology_mkb10 PRIMARY KEY (oid);


--
-- TOC entry 8760 (class 2606 OID 47001)
-- Dependencies: 699 699
-- Name: pk_nosology_mkb10_benefitmedic; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nosology_mkb10_benefitmedic
    ADD CONSTRAINT pk_nosology_mkb10_benefitmedic PRIMARY KEY (oid);


--
-- TOC entry 8767 (class 2606 OID 47003)
-- Dependencies: 704 704
-- Name: pk_nursing_baby; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY nursing_baby
    ADD CONSTRAINT pk_nursing_baby PRIMARY KEY (oid);


--
-- TOC entry 8769 (class 2606 OID 47005)
-- Dependencies: 705 705
-- Name: pk_okato; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY okato
    ADD CONSTRAINT pk_okato PRIMARY KEY (oid);


--
-- TOC entry 8468 (class 2606 OID 47007)
-- Dependencies: 594 594
-- Name: pk_oms_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY insur_oms_type
    ADD CONSTRAINT pk_oms_type PRIMARY KEY (oid);


--
-- TOC entry 8771 (class 2606 OID 47009)
-- Dependencies: 706 706
-- Name: pk_oncologylist; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oncologylist
    ADD CONSTRAINT pk_oncologylist PRIMARY KEY (oid);


--
-- TOC entry 8773 (class 2606 OID 47011)
-- Dependencies: 707 707
-- Name: pk_oncologylistdetail; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oncologylistdetail
    ADD CONSTRAINT pk_oncologylistdetail PRIMARY KEY (oid);


--
-- TOC entry 8775 (class 2606 OID 47013)
-- Dependencies: 708 708
-- Name: pk_oncologyparametr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY oncologyparametr
    ADD CONSTRAINT pk_oncologyparametr PRIMARY KEY (oid);


--
-- TOC entry 8787 (class 2606 OID 47015)
-- Dependencies: 713 713
-- Name: pk_operation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY operation
    ADD CONSTRAINT pk_operation PRIMARY KEY (oid);


--
-- TOC entry 8789 (class 2606 OID 47017)
-- Dependencies: 714 714
-- Name: pk_operation_complication; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY operation_complication
    ADD CONSTRAINT pk_operation_complication PRIMARY KEY (oid);


--
-- TOC entry 8793 (class 2606 OID 47019)
-- Dependencies: 716 716
-- Name: pk_operation_list; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY operation_type_list
    ADD CONSTRAINT pk_operation_list PRIMARY KEY (oid);


--
-- TOC entry 8791 (class 2606 OID 47021)
-- Dependencies: 715 715
-- Name: pk_operation_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY operation_type
    ADD CONSTRAINT pk_operation_type PRIMARY KEY (oid);


--
-- TOC entry 8148 (class 2606 OID 47023)
-- Dependencies: 485 485
-- Name: pk_otdel; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT pk_otdel PRIMARY KEY (oid);


--
-- TOC entry 8797 (class 2606 OID 47025)
-- Dependencies: 717 717 717
-- Name: pk_otdel_building; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_building
    ADD CONSTRAINT pk_otdel_building PRIMARY KEY (otdel, building);


--
-- TOC entry 8799 (class 2606 OID 47027)
-- Dependencies: 718 718
-- Name: pk_otdel_ext; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_ext
    ADD CONSTRAINT pk_otdel_ext PRIMARY KEY (oid);


--
-- TOC entry 8803 (class 2606 OID 47029)
-- Dependencies: 719 719
-- Name: pk_otdel_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_history
    ADD CONSTRAINT pk_otdel_history PRIMARY KEY (hid);


--
-- TOC entry 8806 (class 2606 OID 47031)
-- Dependencies: 720 720
-- Name: pk_otdel_mdoc_number; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_mdoc_number
    ADD CONSTRAINT pk_otdel_mdoc_number PRIMARY KEY (oid);


--
-- TOC entry 8811 (class 2606 OID 47033)
-- Dependencies: 721 721
-- Name: pk_otdel_mdoctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_mdoctype
    ADD CONSTRAINT pk_otdel_mdoctype PRIMARY KEY (oid);


--
-- TOC entry 8813 (class 2606 OID 47035)
-- Dependencies: 722 722
-- Name: pk_otdel_profile; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_profile
    ADD CONSTRAINT pk_otdel_profile PRIMARY KEY (oid);


--
-- TOC entry 8815 (class 2606 OID 47037)
-- Dependencies: 723 723
-- Name: pk_otdel_profile_additional; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_profile_additional
    ADD CONSTRAINT pk_otdel_profile_additional PRIMARY KEY (oid);


--
-- TOC entry 8819 (class 2606 OID 47039)
-- Dependencies: 724 724 724
-- Name: pk_otdel_profile_care; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_profile_care
    ADD CONSTRAINT pk_otdel_profile_care PRIMARY KEY (otdel, profile_care);


--
-- TOC entry 8823 (class 2606 OID 47041)
-- Dependencies: 725 725
-- Name: pk_otdel_rating; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_rating
    ADD CONSTRAINT pk_otdel_rating PRIMARY KEY (oid);


--
-- TOC entry 8829 (class 2606 OID 47043)
-- Dependencies: 727 727
-- Name: pk_otdel_review; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_review
    ADD CONSTRAINT pk_otdel_review PRIMARY KEY (oid);


--
-- TOC entry 8832 (class 2606 OID 47045)
-- Dependencies: 728 728
-- Name: pk_otdel_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_type
    ADD CONSTRAINT pk_otdel_type PRIMARY KEY (oid);


--
-- TOC entry 8834 (class 2606 OID 47047)
-- Dependencies: 729 729
-- Name: pk_otdel_type_additional; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY otdel_type_additional
    ADD CONSTRAINT pk_otdel_type_additional PRIMARY KEY (oid);


--
-- TOC entry 7643 (class 2606 OID 47049)
-- Dependencies: 318 318
-- Name: pk_pacient; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pacient
    ADD CONSTRAINT pk_pacient PRIMARY KEY (oid);


--
-- TOC entry 8836 (class 2606 OID 47051)
-- Dependencies: 730 730
-- Name: pk_paidagree_docs; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY paidagree_docs
    ADD CONSTRAINT pk_paidagree_docs PRIMARY KEY (oid);


--
-- TOC entry 8840 (class 2606 OID 47053)
-- Dependencies: 732 732
-- Name: pk_paidagree_fields; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY paidagree_fields
    ADD CONSTRAINT pk_paidagree_fields PRIMARY KEY (oid);


--
-- TOC entry 8846 (class 2606 OID 47055)
-- Dependencies: 735 735
-- Name: pk_parent_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY parent_status
    ADD CONSTRAINT pk_parent_status PRIMARY KEY (oid);


--
-- TOC entry 8848 (class 2606 OID 47057)
-- Dependencies: 736 736
-- Name: pk_party; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY party
    ADD CONSTRAINT pk_party PRIMARY KEY (oid);


--
-- TOC entry 8853 (class 2606 OID 47059)
-- Dependencies: 737 737
-- Name: pk_passport_log; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY passport_log
    ADD CONSTRAINT pk_passport_log PRIMARY KEY (oid);


--
-- TOC entry 8857 (class 2606 OID 47061)
-- Dependencies: 739 739
-- Name: pk_patientcardsettings_uniquef; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY patientcardsettings_uniquefield
    ADD CONSTRAINT pk_patientcardsettings_uniquef PRIMARY KEY (oid);


--
-- TOC entry 8864 (class 2606 OID 47063)
-- Dependencies: 741 741
-- Name: pk_pay_agreement_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_agreement_status
    ADD CONSTRAINT pk_pay_agreement_status PRIMARY KEY (oid);


--
-- TOC entry 8874 (class 2606 OID 47065)
-- Dependencies: 744 744
-- Name: pk_pay_method; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_method
    ADD CONSTRAINT pk_pay_method PRIMARY KEY (oid);


--
-- TOC entry 8876 (class 2606 OID 47067)
-- Dependencies: 745 745
-- Name: pk_pay_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pay_type
    ADD CONSTRAINT pk_pay_type PRIMARY KEY (oid);


--
-- TOC entry 8881 (class 2606 OID 47069)
-- Dependencies: 747 747
-- Name: pk_pdoc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pdoc
    ADD CONSTRAINT pk_pdoc PRIMARY KEY (id);


--
-- TOC entry 8883 (class 2606 OID 47071)
-- Dependencies: 748 748
-- Name: pk_pdoctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pdoctype
    ADD CONSTRAINT pk_pdoctype PRIMARY KEY (id);


--
-- TOC entry 7578 (class 2606 OID 47073)
-- Dependencies: 214 214
-- Name: pk_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people
    ADD CONSTRAINT pk_people PRIMARY KEY (oid);


--
-- TOC entry 7582 (class 2606 OID 47075)
-- Dependencies: 215 215 215
-- Name: pk_people_address; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_address
    ADD CONSTRAINT pk_people_address PRIMARY KEY (people, address);


--
-- TOC entry 8889 (class 2606 OID 47077)
-- Dependencies: 749 749
-- Name: pk_people_change_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_change_history
    ADD CONSTRAINT pk_people_change_history PRIMARY KEY (oid);


--
-- TOC entry 8938 (class 2606 OID 47079)
-- Dependencies: 764 764
-- Name: pk_people_relation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_relation
    ADD CONSTRAINT pk_people_relation PRIMARY KEY (oid);


--
-- TOC entry 8941 (class 2606 OID 47081)
-- Dependencies: 765 765
-- Name: pk_people_relation_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_relation_status
    ADD CONSTRAINT pk_people_relation_status PRIMARY KEY (oid);


--
-- TOC entry 8945 (class 2606 OID 47083)
-- Dependencies: 766 766
-- Name: pk_people_specialty; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_specialty
    ADD CONSTRAINT pk_people_specialty PRIMARY KEY (oid);


--
-- TOC entry 8950 (class 2606 OID 47085)
-- Dependencies: 767 767
-- Name: pk_people_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY people_status
    ADD CONSTRAINT pk_people_status PRIMARY KEY (oid);


--
-- TOC entry 8952 (class 2606 OID 47087)
-- Dependencies: 768 768
-- Name: pk_peopledoctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY peopledoctype
    ADD CONSTRAINT pk_peopledoctype PRIMARY KEY (oid);


--
-- TOC entry 8958 (class 2606 OID 47089)
-- Dependencies: 769 769
-- Name: pk_peoplekartaplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY peoplekartaplace
    ADD CONSTRAINT pk_peoplekartaplace PRIMARY KEY (oid);


--
-- TOC entry 8961 (class 2606 OID 47091)
-- Dependencies: 772 772
-- Name: pk_peoplephoneabsence; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY peoplephoneabsence
    ADD CONSTRAINT pk_peoplephoneabsence PRIMARY KEY (oid);


--
-- TOC entry 8963 (class 2606 OID 47093)
-- Dependencies: 773 773
-- Name: pk_peoplepost; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY peoplepost
    ADD CONSTRAINT pk_peoplepost PRIMARY KEY (oid);


--
-- TOC entry 8966 (class 2606 OID 47095)
-- Dependencies: 776 776
-- Name: pk_persistentpermission; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY persistentpermission
    ADD CONSTRAINT pk_persistentpermission PRIMARY KEY (oid);


--
-- TOC entry 8929 (class 2606 OID 47097)
-- Dependencies: 761 761
-- Name: pk_person; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY person
    ADD CONSTRAINT pk_person PRIMARY KEY (oid);


--
-- TOC entry 8969 (class 2606 OID 47099)
-- Dependencies: 777 777
-- Name: pk_person_setting; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY person_setting
    ADD CONSTRAINT pk_person_setting PRIMARY KEY (oid);


--
-- TOC entry 8977 (class 2606 OID 47101)
-- Dependencies: 780 780
-- Name: pk_pharmacy; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pharmacy
    ADD CONSTRAINT pk_pharmacy PRIMARY KEY (oid);


--
-- TOC entry 8979 (class 2606 OID 47103)
-- Dependencies: 781 781
-- Name: pk_phisical_activity; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY phisical_activity
    ADD CONSTRAINT pk_phisical_activity PRIMARY KEY (oid);


--
-- TOC entry 8993 (class 2606 OID 47105)
-- Dependencies: 782 782
-- Name: pk_pinfo; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT pk_pinfo PRIMARY KEY (oid);


--
-- TOC entry 8995 (class 2606 OID 47107)
-- Dependencies: 783 783
-- Name: pk_pinfo_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT pk_pinfo_history PRIMARY KEY (oid);


--
-- TOC entry 9001 (class 2606 OID 47109)
-- Dependencies: 785 785
-- Name: pk_plot; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY plot
    ADD CONSTRAINT pk_plot PRIMARY KEY (oid);


--
-- TOC entry 9006 (class 2606 OID 47111)
-- Dependencies: 786 786
-- Name: pk_plot_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY plot_history
    ADD CONSTRAINT pk_plot_history PRIMARY KEY (hid);


--
-- TOC entry 9010 (class 2606 OID 47113)
-- Dependencies: 787 787
-- Name: pk_poll; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY poll
    ADD CONSTRAINT pk_poll PRIMARY KEY (oid);


--
-- TOC entry 9013 (class 2606 OID 47115)
-- Dependencies: 788 788
-- Name: pk_pollanswer; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pollanswer
    ADD CONSTRAINT pk_pollanswer PRIMARY KEY (oid);


--
-- TOC entry 9019 (class 2606 OID 47117)
-- Dependencies: 790 790
-- Name: pk_portal_mdoc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc
    ADD CONSTRAINT pk_portal_mdoc PRIMARY KEY (oid);


--
-- TOC entry 9023 (class 2606 OID 47123)
-- Dependencies: 791 791
-- Name: pk_portal_mdoc_appointment; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_appointment
    ADD CONSTRAINT pk_portal_mdoc_appointment PRIMARY KEY (oid);


--
-- TOC entry 9026 (class 2606 OID 47125)
-- Dependencies: 792 792
-- Name: pk_portal_mdoc_diag; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_diag
    ADD CONSTRAINT pk_portal_mdoc_diag PRIMARY KEY (oid);


--
-- TOC entry 9029 (class 2606 OID 47127)
-- Dependencies: 793 793
-- Name: pk_portal_mdoc_event; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_event
    ADD CONSTRAINT pk_portal_mdoc_event PRIMARY KEY (oid);


--
-- TOC entry 9032 (class 2606 OID 47129)
-- Dependencies: 794 794
-- Name: pk_portal_mdoc_extract; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_extract
    ADD CONSTRAINT pk_portal_mdoc_extract PRIMARY KEY (oid);


--
-- TOC entry 9037 (class 2606 OID 47131)
-- Dependencies: 795 795
-- Name: pk_portal_mdoc_medic; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_medic
    ADD CONSTRAINT pk_portal_mdoc_medic PRIMARY KEY (oid);


--
-- TOC entry 9041 (class 2606 OID 47133)
-- Dependencies: 796 796
-- Name: pk_portal_mdoc_survey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY portal_mdoc_survey
    ADD CONSTRAINT pk_portal_mdoc_survey PRIMARY KEY (oid);


--
-- TOC entry 9043 (class 2606 OID 47135)
-- Dependencies: 797 797
-- Name: pk_position; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY "position"
    ADD CONSTRAINT pk_position PRIMARY KEY (oid);


--
-- TOC entry 9045 (class 2606 OID 47137)
-- Dependencies: 798 798
-- Name: pk_positiontype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY positiontype
    ADD CONSTRAINT pk_positiontype PRIMARY KEY (oid);


--
-- TOC entry 8151 (class 2606 OID 47139)
-- Dependencies: 486 486
-- Name: pk_post; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY post
    ADD CONSTRAINT pk_post PRIMARY KEY (oid);


--
-- TOC entry 9047 (class 2606 OID 47141)
-- Dependencies: 799 799
-- Name: pk_post_birth_running; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY post_birth_running
    ADD CONSTRAINT pk_post_birth_running PRIMARY KEY (oid);


--
-- TOC entry 8891 (class 2606 OID 47143)
-- Dependencies: 750 750
-- Name: pk_posteducation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY posteducation
    ADD CONSTRAINT pk_posteducation PRIMARY KEY (oid);


--
-- TOC entry 8898 (class 2606 OID 47145)
-- Dependencies: 751 751
-- Name: pk_postgraduateeducation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT pk_postgraduateeducation PRIMARY KEY (oid);


--
-- TOC entry 9049 (class 2606 OID 47147)
-- Dependencies: 800 800
-- Name: pk_pregnancies; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pregnancies
    ADD CONSTRAINT pk_pregnancies PRIMARY KEY (oid);


--
-- TOC entry 9051 (class 2606 OID 47149)
-- Dependencies: 801 801
-- Name: pk_pregnancy_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pregnancy_result
    ADD CONSTRAINT pk_pregnancy_result PRIMARY KEY (oid);


--
-- TOC entry 9053 (class 2606 OID 47151)
-- Dependencies: 802 802
-- Name: pk_pregnancy_running; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pregnancy_running
    ADD CONSTRAINT pk_pregnancy_running PRIMARY KEY (oid);


--
-- TOC entry 9055 (class 2606 OID 47153)
-- Dependencies: 803 803
-- Name: pk_pregnant_card_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pregnant_card_info
    ADD CONSTRAINT pk_pregnant_card_info PRIMARY KEY (oid);


--
-- TOC entry 9057 (class 2606 OID 47155)
-- Dependencies: 804 804
-- Name: pk_premilitary; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY premilitary
    ADD CONSTRAINT pk_premilitary PRIMARY KEY (oid);


--
-- TOC entry 9060 (class 2606 OID 47157)
-- Dependencies: 805 805
-- Name: pk_prenatal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prenatal
    ADD CONSTRAINT pk_prenatal PRIMARY KEY (oid);


--
-- TOC entry 9082 (class 2606 OID 47159)
-- Dependencies: 811 811
-- Name: pk_presc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT pk_presc PRIMARY KEY (id);


--
-- TOC entry 9091 (class 2606 OID 47161)
-- Dependencies: 813 813
-- Name: pk_presc_parval; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_parval
    ADD CONSTRAINT pk_presc_parval PRIMARY KEY (id);


--
-- TOC entry 9095 (class 2606 OID 47163)
-- Dependencies: 814 814
-- Name: pk_presc_portal_link; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_portal_link
    ADD CONSTRAINT pk_presc_portal_link PRIMARY KEY (oid);


--
-- TOC entry 9097 (class 2606 OID 47165)
-- Dependencies: 815 815
-- Name: pk_presc_reason_cancel; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_reason_cancel
    ADD CONSTRAINT pk_presc_reason_cancel PRIMARY KEY (oid);


--
-- TOC entry 9099 (class 2606 OID 47167)
-- Dependencies: 816 816
-- Name: pk_presc_res; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_result
    ADD CONSTRAINT pk_presc_res PRIMARY KEY (oid);


--
-- TOC entry 9102 (class 2606 OID 47169)
-- Dependencies: 817 817
-- Name: pk_presc_schedule; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_schedule
    ADD CONSTRAINT pk_presc_schedule PRIMARY KEY (id);


--
-- TOC entry 9107 (class 2606 OID 47171)
-- Dependencies: 818 818
-- Name: pk_presc_service; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_service
    ADD CONSTRAINT pk_presc_service PRIMARY KEY (oid);


--
-- TOC entry 9113 (class 2606 OID 47173)
-- Dependencies: 820 820
-- Name: pk_presc_state; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_state
    ADD CONSTRAINT pk_presc_state PRIMARY KEY (id);


--
-- TOC entry 9115 (class 2606 OID 47175)
-- Dependencies: 821 821
-- Name: pk_presc_time; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_time
    ADD CONSTRAINT pk_presc_time PRIMARY KEY (id);


--
-- TOC entry 9117 (class 2606 OID 47177)
-- Dependencies: 822 822
-- Name: pk_presc_xrayparam; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_xrayparam
    ADD CONSTRAINT pk_presc_xrayparam PRIMARY KEY (oid);


--
-- TOC entry 9128 (class 2606 OID 47179)
-- Dependencies: 825 825
-- Name: pk_presctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presctype
    ADD CONSTRAINT pk_presctype PRIMARY KEY (oid);


--
-- TOC entry 7533 (class 2606 OID 47181)
-- Dependencies: 175 175
-- Name: pk_presctypefolder; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presctypefolder
    ADD CONSTRAINT pk_presctypefolder PRIMARY KEY (id);


--
-- TOC entry 8842 (class 2606 OID 47183)
-- Dependencies: 733 733
-- Name: pk_presctypeparam_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY param_datatype
    ADD CONSTRAINT pk_presctypeparam_type PRIMARY KEY (oid);


--
-- TOC entry 9139 (class 2606 OID 47185)
-- Dependencies: 829 829
-- Name: pk_profession; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profession
    ADD CONSTRAINT pk_profession PRIMARY KEY (oid);


--
-- TOC entry 9145 (class 2606 OID 47187)
-- Dependencies: 830 830
-- Name: pk_profex_actions; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_actions
    ADD CONSTRAINT pk_profex_actions PRIMARY KEY (oid);


--
-- TOC entry 9147 (class 2606 OID 47189)
-- Dependencies: 831 831
-- Name: pk_profex_actions_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_actions_type
    ADD CONSTRAINT pk_profex_actions_type PRIMARY KEY (oid);


--
-- TOC entry 9153 (class 2606 OID 47191)
-- Dependencies: 833 833
-- Name: pk_profex_company; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_company
    ADD CONSTRAINT pk_profex_company PRIMARY KEY (oid);


--
-- TOC entry 9157 (class 2606 OID 47193)
-- Dependencies: 834 834
-- Name: pk_profex_contract; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_contract
    ADD CONSTRAINT pk_profex_contract PRIMARY KEY (oid);


--
-- TOC entry 9163 (class 2606 OID 47195)
-- Dependencies: 835 835
-- Name: pk_profex_list; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_list
    ADD CONSTRAINT pk_profex_list PRIMARY KEY (oid);


--
-- TOC entry 9168 (class 2606 OID 47197)
-- Dependencies: 836 836
-- Name: pk_profex_list_naz; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_list_naz
    ADD CONSTRAINT pk_profex_list_naz PRIMARY KEY (oid);


--
-- TOC entry 9173 (class 2606 OID 47199)
-- Dependencies: 838 838
-- Name: pk_profex_proffactor; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_proffactor
    ADD CONSTRAINT pk_profex_proffactor PRIMARY KEY (oid);


--
-- TOC entry 9175 (class 2606 OID 47201)
-- Dependencies: 839 839
-- Name: pk_profex_proffactor_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_proffactor_info
    ADD CONSTRAINT pk_profex_proffactor_info PRIMARY KEY (oid);


--
-- TOC entry 9179 (class 2606 OID 47203)
-- Dependencies: 840 840
-- Name: pk_profex_proffactor_presc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_proffactor_presc
    ADD CONSTRAINT pk_profex_proffactor_presc PRIMARY KEY (oid);


--
-- TOC entry 9183 (class 2606 OID 47205)
-- Dependencies: 841 841
-- Name: pk_profex_proffactor_profexlis; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_proffactor_profexlist
    ADD CONSTRAINT pk_profex_proffactor_profexlis PRIMARY KEY (oid);


--
-- TOC entry 9185 (class 2606 OID 47207)
-- Dependencies: 842 842
-- Name: pk_profex_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_result
    ADD CONSTRAINT pk_profex_result PRIMARY KEY (oid);


--
-- TOC entry 9187 (class 2606 OID 47209)
-- Dependencies: 843 843
-- Name: pk_profex_result_comment; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_result_comment
    ADD CONSTRAINT pk_profex_result_comment PRIMARY KEY (oid);


--
-- TOC entry 9189 (class 2606 OID 47211)
-- Dependencies: 844 844
-- Name: pk_profex_workconditions; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profex_workconditions
    ADD CONSTRAINT pk_profex_workconditions PRIMARY KEY (oid);


--
-- TOC entry 9191 (class 2606 OID 47213)
-- Dependencies: 845 845
-- Name: pk_profile_care; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profile_care
    ADD CONSTRAINT pk_profile_care PRIMARY KEY (oid);


--
-- TOC entry 9193 (class 2606 OID 47215)
-- Dependencies: 846 846
-- Name: pk_profile_gosp; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profile_gosp
    ADD CONSTRAINT pk_profile_gosp PRIMARY KEY (oid);


--
-- TOC entry 9195 (class 2606 OID 47217)
-- Dependencies: 847 847
-- Name: pk_profile_gosp_mkb; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profile_gosp_mkb
    ADD CONSTRAINT pk_profile_gosp_mkb PRIMARY KEY (oid);


--
-- TOC entry 9197 (class 2606 OID 47219)
-- Dependencies: 848 848
-- Name: pk_profile_gosp_standart; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY profile_gosp_standart
    ADD CONSTRAINT pk_profile_gosp_standart PRIMARY KEY (oid);


--
-- TOC entry 9201 (class 2606 OID 47221)
-- Dependencies: 849 849
-- Name: pk_progression; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY progression
    ADD CONSTRAINT pk_progression PRIMARY KEY (oid);


--
-- TOC entry 9212 (class 2606 OID 47223)
-- Dependencies: 850 850
-- Name: pk_progression_stat; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY progression_stat
    ADD CONSTRAINT pk_progression_stat PRIMARY KEY (oid);


--
-- TOC entry 9217 (class 2606 OID 47225)
-- Dependencies: 851 851
-- Name: pk_protocol; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY protocol
    ADD CONSTRAINT pk_protocol PRIMARY KEY (presc_id);


--
-- TOC entry 9219 (class 2606 OID 47227)
-- Dependencies: 852 852
-- Name: pk_protocol_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY protocol_template
    ADD CONSTRAINT pk_protocol_template PRIMARY KEY (oid);


--
-- TOC entry 8903 (class 2606 OID 47229)
-- Dependencies: 752 752
-- Name: pk_qualification; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY qualification
    ADD CONSTRAINT pk_qualification PRIMARY KEY (oid);


--
-- TOC entry 8905 (class 2606 OID 47231)
-- Dependencies: 753 753
-- Name: pk_qualificationcategory; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY qualificationcategory
    ADD CONSTRAINT pk_qualificationcategory PRIMARY KEY (oid);


--
-- TOC entry 9221 (class 2606 OID 47233)
-- Dependencies: 854 854
-- Name: pk_reason_sending_archive; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY reason_sending_archive
    ADD CONSTRAINT pk_reason_sending_archive PRIMARY KEY (oid);


--
-- TOC entry 9224 (class 2606 OID 47235)
-- Dependencies: 855 855
-- Name: pk_receptiontype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY receptiontype
    ADD CONSTRAINT pk_receptiontype PRIMARY KEY (oid);


--
-- TOC entry 9242 (class 2606 OID 47237)
-- Dependencies: 857 857
-- Name: pk_recipe; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT pk_recipe PRIMARY KEY (oid);


--
-- TOC entry 9246 (class 2606 OID 47239)
-- Dependencies: 858 858
-- Name: pk_recipe_duration; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_duration
    ADD CONSTRAINT pk_recipe_duration PRIMARY KEY (oid);


--
-- TOC entry 9248 (class 2606 OID 47241)
-- Dependencies: 859 859
-- Name: pk_recipe_lgot_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_lgot_type
    ADD CONSTRAINT pk_recipe_lgot_type PRIMARY KEY (oid);


--
-- TOC entry 9259 (class 2606 OID 47243)
-- Dependencies: 860 860
-- Name: pk_recipe_medic; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT pk_recipe_medic PRIMARY KEY (oid);


--
-- TOC entry 9270 (class 2606 OID 47245)
-- Dependencies: 861 861
-- Name: pk_recipe_medic_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT pk_recipe_medic_template PRIMARY KEY (oid);


--
-- TOC entry 9274 (class 2606 OID 47247)
-- Dependencies: 862 862
-- Name: pk_recipe_percent; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_percent
    ADD CONSTRAINT pk_recipe_percent PRIMARY KEY (oid);


--
-- TOC entry 9276 (class 2606 OID 47249)
-- Dependencies: 863 863
-- Name: pk_recipe_prescription_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_prescription_type
    ADD CONSTRAINT pk_recipe_prescription_type PRIMARY KEY (oid);


--
-- TOC entry 9278 (class 2606 OID 47251)
-- Dependencies: 864 864
-- Name: pk_recipe_source; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_source
    ADD CONSTRAINT pk_recipe_source PRIMARY KEY (oid);


--
-- TOC entry 9280 (class 2606 OID 47253)
-- Dependencies: 865 865
-- Name: pk_recipe_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_status
    ADD CONSTRAINT pk_recipe_status PRIMARY KEY (oid);


--
-- TOC entry 9282 (class 2606 OID 47255)
-- Dependencies: 866 866
-- Name: pk_recipe_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recipe_type
    ADD CONSTRAINT pk_recipe_type PRIMARY KEY (oid);


--
-- TOC entry 9284 (class 2606 OID 47257)
-- Dependencies: 867 867
-- Name: pk_recordtypein; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recordtypein
    ADD CONSTRAINT pk_recordtypein PRIMARY KEY (oid);


--
-- TOC entry 9286 (class 2606 OID 47259)
-- Dependencies: 868 868
-- Name: pk_recordtypeout; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY recordtypeout
    ADD CONSTRAINT pk_recordtypeout PRIMARY KEY (oid);


--
-- TOC entry 9288 (class 2606 OID 47261)
-- Dependencies: 869 869
-- Name: pk_referrals; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY referrals
    ADD CONSTRAINT pk_referrals PRIMARY KEY (oid);


--
-- TOC entry 9294 (class 2606 OID 47263)
-- Dependencies: 872 872
-- Name: pk_regime; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY regime
    ADD CONSTRAINT pk_regime PRIMARY KEY (oid);


--
-- TOC entry 9299 (class 2606 OID 47265)
-- Dependencies: 875 875
-- Name: pk_registr_ill_diagnoses; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registr_ill_diagnoses
    ADD CONSTRAINT pk_registr_ill_diagnoses PRIMARY KEY (oid);


--
-- TOC entry 9305 (class 2606 OID 47267)
-- Dependencies: 876 876
-- Name: pk_registr_ill_pacients; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registr_ill_pacients
    ADD CONSTRAINT pk_registr_ill_pacients PRIMARY KEY (oid);


--
-- TOC entry 9309 (class 2606 OID 47269)
-- Dependencies: 877 877
-- Name: pk_registr_nosology_diagnoses; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registr_nosology_diagnoses
    ADD CONSTRAINT pk_registr_nosology_diagnoses PRIMARY KEY (oid);


--
-- TOC entry 9315 (class 2606 OID 47271)
-- Dependencies: 878 878
-- Name: pk_registr_nosology_pacients; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registr_nosology_pacients
    ADD CONSTRAINT pk_registr_nosology_pacients PRIMARY KEY (oid);


--
-- TOC entry 9319 (class 2606 OID 47273)
-- Dependencies: 880 880
-- Name: pk_registwindow; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registwindow
    ADD CONSTRAINT pk_registwindow PRIMARY KEY (oid);


--
-- TOC entry 9327 (class 2606 OID 47275)
-- Dependencies: 881 881
-- Name: pk_registwindow_linetype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registwindow_linetype
    ADD CONSTRAINT pk_registwindow_linetype PRIMARY KEY (oid);


--
-- TOC entry 9329 (class 2606 OID 47277)
-- Dependencies: 882 882
-- Name: pk_regplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY regplace
    ADD CONSTRAINT pk_regplace PRIMARY KEY (oid);


--
-- TOC entry 9331 (class 2606 OID 47279)
-- Dependencies: 884 884
-- Name: pk_report_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY report_group
    ADD CONSTRAINT pk_report_group PRIMARY KEY (oid);


--
-- TOC entry 9336 (class 2606 OID 47281)
-- Dependencies: 885 885 885
-- Name: pk_report_parameter; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY report_parameter
    ADD CONSTRAINT pk_report_parameter PRIMARY KEY (report_template, param_datatype);


--
-- TOC entry 9340 (class 2606 OID 47283)
-- Dependencies: 886 886
-- Name: pk_report_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY report_template
    ADD CONSTRAINT pk_report_template PRIMARY KEY (oid);


--
-- TOC entry 9345 (class 2606 OID 47285)
-- Dependencies: 887 887 887
-- Name: pk_report_template_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY report_template_group
    ADD CONSTRAINT pk_report_template_group PRIMARY KEY (report_group, report_template);


--
-- TOC entry 9349 (class 2606 OID 47287)
-- Dependencies: 888 888
-- Name: pk_response_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY response_people
    ADD CONSTRAINT pk_response_people PRIMARY KEY (oid);


--
-- TOC entry 9353 (class 2606 OID 47289)
-- Dependencies: 889 889
-- Name: pk_response_people_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY response_people_history
    ADD CONSTRAINT pk_response_people_history PRIMARY KEY (hid);


--
-- TOC entry 8910 (class 2606 OID 47291)
-- Dependencies: 754 754
-- Name: pk_retrainment; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY retrainment
    ADD CONSTRAINT pk_retrainment PRIMARY KEY (oid);


--
-- TOC entry 9356 (class 2606 OID 47293)
-- Dependencies: 890 890
-- Name: pk_right; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY "right"
    ADD CONSTRAINT pk_right PRIMARY KEY (oid);


--
-- TOC entry 9374 (class 2606 OID 47295)
-- Dependencies: 895 895
-- Name: pk_rlsregion; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY rlsregion
    ADD CONSTRAINT pk_rlsregion PRIMARY KEY (oid);


--
-- TOC entry 9376 (class 2606 OID 47297)
-- Dependencies: 896 896
-- Name: pk_role; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY role
    ADD CONSTRAINT pk_role PRIMARY KEY (oid);


--
-- TOC entry 9380 (class 2606 OID 47299)
-- Dependencies: 898 898
-- Name: pk_rolebase; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY rolebase
    ADD CONSTRAINT pk_rolebase PRIMARY KEY (oid);


--
-- TOC entry 8156 (class 2606 OID 47301)
-- Dependencies: 487 487
-- Name: pk_room; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY room
    ADD CONSTRAINT pk_room PRIMARY KEY (oid);


--
-- TOC entry 9384 (class 2606 OID 47303)
-- Dependencies: 900 900
-- Name: pk_room_history; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY room_history
    ADD CONSTRAINT pk_room_history PRIMARY KEY (hid);


--
-- TOC entry 9387 (class 2606 OID 47305)
-- Dependencies: 901 901
-- Name: pk_room_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY room_type
    ADD CONSTRAINT pk_room_type PRIMARY KEY (oid);


--
-- TOC entry 9389 (class 2606 OID 47307)
-- Dependencies: 902 902
-- Name: pk_rw_accidentnotification_condition; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY rw_accidentnotification_condition
    ADD CONSTRAINT pk_rw_accidentnotification_condition PRIMARY KEY (oid);


--
-- TOC entry 9392 (class 2606 OID 47309)
-- Dependencies: 903 903
-- Name: pk_rw_accidentnotification_tmp; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY rw_accidentnotification_tmpl
    ADD CONSTRAINT pk_rw_accidentnotification_tmp PRIMARY KEY (oid);


--
-- TOC entry 9396 (class 2606 OID 47311)
-- Dependencies: 904 904
-- Name: pk_sanatorium; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sanatorium
    ADD CONSTRAINT pk_sanatorium PRIMARY KEY (oid);


--
-- TOC entry 9402 (class 2606 OID 47313)
-- Dependencies: 906 906
-- Name: pk_sanatorium_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sanatorium_type
    ADD CONSTRAINT pk_sanatorium_type PRIMARY KEY (oid);


--
-- TOC entry 9421 (class 2606 OID 47315)
-- Dependencies: 907 907
-- Name: pk_schedule; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT pk_schedule PRIMARY KEY (oid);


--
-- TOC entry 8105 (class 2606 OID 47317)
-- Dependencies: 467 467
-- Name: pk_schedule_p; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY schedule_p
    ADD CONSTRAINT pk_schedule_p PRIMARY KEY (oid);


--
-- TOC entry 9442 (class 2606 OID 47319)
-- Dependencies: 914 914
-- Name: pk_schedule_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY schedule_template
    ADD CONSTRAINT pk_schedule_template PRIMARY KEY (oid);


--
-- TOC entry 9447 (class 2606 OID 47321)
-- Dependencies: 915 915
-- Name: pk_schedule_template_detail; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY schedule_template_detail
    ADD CONSTRAINT pk_schedule_template_detail PRIMARY KEY (oid);


--
-- TOC entry 9450 (class 2606 OID 47323)
-- Dependencies: 916 916
-- Name: pk_scheduleautomake; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY scheduleautomake
    ADD CONSTRAINT pk_scheduleautomake PRIMARY KEY (oid);


--
-- TOC entry 8915 (class 2606 OID 47325)
-- Dependencies: 755 755
-- Name: pk_sertificateeducation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sertificateeducation
    ADD CONSTRAINT pk_sertificateeducation PRIMARY KEY (oid);


--
-- TOC entry 8917 (class 2606 OID 47327)
-- Dependencies: 756 756
-- Name: pk_sertificatespeciality; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sertificatespeciality
    ADD CONSTRAINT pk_sertificatespeciality PRIMARY KEY (oid);


--
-- TOC entry 9472 (class 2606 OID 47329)
-- Dependencies: 921 921
-- Name: pk_service_bed_profile; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_bed_profile
    ADD CONSTRAINT pk_service_bed_profile PRIMARY KEY (oid);


--
-- TOC entry 9475 (class 2606 OID 47331)
-- Dependencies: 922 922
-- Name: pk_service_group; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_group
    ADD CONSTRAINT pk_service_group PRIMARY KEY (oid);


--
-- TOC entry 9477 (class 2606 OID 47333)
-- Dependencies: 923 923
-- Name: pk_service_lpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_lpu
    ADD CONSTRAINT pk_service_lpu PRIMARY KEY (oid);


--
-- TOC entry 9481 (class 2606 OID 47335)
-- Dependencies: 924 924
-- Name: pk_service_mkb10; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_mkb10
    ADD CONSTRAINT pk_service_mkb10 PRIMARY KEY (oid);


--
-- TOC entry 9486 (class 2606 OID 47337)
-- Dependencies: 925 925
-- Name: pk_service_presctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_presctype
    ADD CONSTRAINT pk_service_presctype PRIMARY KEY (oid);


--
-- TOC entry 7545 (class 2606 OID 47339)
-- Dependencies: 177 177
-- Name: pk_service_price; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_price
    ADD CONSTRAINT pk_service_price PRIMARY KEY (oid);


--
-- TOC entry 9489 (class 2606 OID 47341)
-- Dependencies: 926 926
-- Name: pk_service_price_category; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_price_category
    ADD CONSTRAINT pk_service_price_category PRIMARY KEY (oid);


--
-- TOC entry 9492 (class 2606 OID 47343)
-- Dependencies: 927 927
-- Name: pk_service_required; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY service_required
    ADD CONSTRAINT pk_service_required PRIMARY KEY (id);


--
-- TOC entry 9499 (class 2606 OID 47345)
-- Dependencies: 928 928
-- Name: pk_services; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT pk_services PRIMARY KEY (oid);


--
-- TOC entry 9502 (class 2606 OID 47347)
-- Dependencies: 929 929
-- Name: pk_servplace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY servplace
    ADD CONSTRAINT pk_servplace PRIMARY KEY (oid);


--
-- TOC entry 9504 (class 2606 OID 47349)
-- Dependencies: 930 930
-- Name: pk_settings; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY settings
    ADD CONSTRAINT pk_settings PRIMARY KEY (oid);


--
-- TOC entry 9506 (class 2606 OID 47351)
-- Dependencies: 931 931
-- Name: pk_sex; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sex
    ADD CONSTRAINT pk_sex PRIMARY KEY (id);


--
-- TOC entry 9520 (class 2606 OID 47353)
-- Dependencies: 932 932
-- Name: pk_sicklist; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT pk_sicklist PRIMARY KEY (id);


--
-- TOC entry 9531 (class 2606 OID 47355)
-- Dependencies: 934 934
-- Name: pk_sicklist_formstate; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_formstate
    ADD CONSTRAINT pk_sicklist_formstate PRIMARY KEY (oid);


--
-- TOC entry 9533 (class 2606 OID 47357)
-- Dependencies: 935 935
-- Name: pk_sicklist_formtitle; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_formtitle
    ADD CONSTRAINT pk_sicklist_formtitle PRIMARY KEY (oid);


--
-- TOC entry 9536 (class 2606 OID 47359)
-- Dependencies: 936 936
-- Name: pk_sicklist_link; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_link
    ADD CONSTRAINT pk_sicklist_link PRIMARY KEY (id);


--
-- TOC entry 9538 (class 2606 OID 47361)
-- Dependencies: 937 937
-- Name: pk_sicklist_other; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_other
    ADD CONSTRAINT pk_sicklist_other PRIMARY KEY (id);


--
-- TOC entry 9541 (class 2606 OID 47363)
-- Dependencies: 938 938
-- Name: pk_sicklist_period; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_period
    ADD CONSTRAINT pk_sicklist_period PRIMARY KEY (id);


--
-- TOC entry 9543 (class 2606 OID 47365)
-- Dependencies: 939 939
-- Name: pk_sicklist_reason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_reason
    ADD CONSTRAINT pk_sicklist_reason PRIMARY KEY (id);


--
-- TOC entry 9545 (class 2606 OID 47367)
-- Dependencies: 940 940
-- Name: pk_sicklist_reason_change; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_reason_change
    ADD CONSTRAINT pk_sicklist_reason_change PRIMARY KEY (id);


--
-- TOC entry 9547 (class 2606 OID 47369)
-- Dependencies: 941 941
-- Name: pk_sicklist_reason_dop; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_reason_dop
    ADD CONSTRAINT pk_sicklist_reason_dop PRIMARY KEY (id);


--
-- TOC entry 9549 (class 2606 OID 47371)
-- Dependencies: 942 942
-- Name: pk_sicklist_regimen; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_regimen
    ADD CONSTRAINT pk_sicklist_regimen PRIMARY KEY (id);


--
-- TOC entry 9554 (class 2606 OID 47373)
-- Dependencies: 944 944
-- Name: pk_sicklist_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_status
    ADD CONSTRAINT pk_sicklist_status PRIMARY KEY (oid);


--
-- TOC entry 8922 (class 2606 OID 47375)
-- Dependencies: 757 757
-- Name: pk_skillimprovement; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY skillimprovement
    ADD CONSTRAINT pk_skillimprovement PRIMARY KEY (oid);


--
-- TOC entry 9561 (class 2606 OID 47377)
-- Dependencies: 946 946
-- Name: pk_skippayment; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY skippayment
    ADD CONSTRAINT pk_skippayment PRIMARY KEY (oid);


--
-- TOC entry 9563 (class 2606 OID 47379)
-- Dependencies: 947 947
-- Name: pk_skippaymentreason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY skippaymentreason
    ADD CONSTRAINT pk_skippaymentreason PRIMARY KEY (oid);


--
-- TOC entry 9565 (class 2606 OID 47381)
-- Dependencies: 948 948
-- Name: pk_smid; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY smid
    ADD CONSTRAINT pk_smid PRIMARY KEY (oid);


--
-- TOC entry 9569 (class 2606 OID 47383)
-- Dependencies: 949 949
-- Name: pk_smscenter; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY smscenter
    ADD CONSTRAINT pk_smscenter PRIMARY KEY (oid);


--
-- TOC entry 9571 (class 2606 OID 47385)
-- Dependencies: 952 952
-- Name: pk_socialrank; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY socialrank
    ADD CONSTRAINT pk_socialrank PRIMARY KEY (oid);


--
-- TOC entry 8164 (class 2606 OID 47387)
-- Dependencies: 488 488
-- Name: pk_sotr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr
    ADD CONSTRAINT pk_sotr PRIMARY KEY (oid);


--
-- TOC entry 9618 (class 2606 OID 47389)
-- Dependencies: 968 968
-- Name: pk_sotr_district; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotrsotrs_districtdistrict
    ADD CONSTRAINT pk_sotr_district PRIMARY KEY (oid);


--
-- TOC entry 9579 (class 2606 OID 47391)
-- Dependencies: 956 956
-- Name: pk_sotr_mdoctype; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_mdoctype
    ADD CONSTRAINT pk_sotr_mdoctype PRIMARY KEY (id);


--
-- TOC entry 9592 (class 2606 OID 47393)
-- Dependencies: 960 960
-- Name: pk_sotr_rating; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_rating
    ADD CONSTRAINT pk_sotr_rating PRIMARY KEY (oid);


--
-- TOC entry 9598 (class 2606 OID 47395)
-- Dependencies: 962 962
-- Name: pk_sotr_recipe_lgot_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_recipe_lgot_type
    ADD CONSTRAINT pk_sotr_recipe_lgot_type PRIMARY KEY (oid);


--
-- TOC entry 9602 (class 2606 OID 47397)
-- Dependencies: 963 963
-- Name: pk_sotr_review; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_review
    ADD CONSTRAINT pk_sotr_review PRIMARY KEY (oid);


--
-- TOC entry 9613 (class 2606 OID 47399)
-- Dependencies: 967 967
-- Name: pk_sotr_section_ib; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_section_ib2
    ADD CONSTRAINT pk_sotr_section_ib PRIMARY KEY (oid);


--
-- TOC entry 9622 (class 2606 OID 47401)
-- Dependencies: 969 969
-- Name: pk_sotrworkday; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotrworkday
    ADD CONSTRAINT pk_sotrworkday PRIMARY KEY (oid);


--
-- TOC entry 8924 (class 2606 OID 47403)
-- Dependencies: 758 758
-- Name: pk_specialities; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY specialities
    ADD CONSTRAINT pk_specialities PRIMARY KEY (oid);


--
-- TOC entry 9629 (class 2606 OID 47405)
-- Dependencies: 970 970
-- Name: pk_specialization; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY specialization
    ADD CONSTRAINT pk_specialization PRIMARY KEY (oid);


--
-- TOC entry 9631 (class 2606 OID 47407)
-- Dependencies: 971 971
-- Name: pk_specialty; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY specialty
    ADD CONSTRAINT pk_specialty PRIMARY KEY (oid);


--
-- TOC entry 9635 (class 2606 OID 47409)
-- Dependencies: 973 973
-- Name: pk_stacionar_card_info; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stacionar_card_info
    ADD CONSTRAINT pk_stacionar_card_info PRIMARY KEY (oid);


--
-- TOC entry 9640 (class 2606 OID 47411)
-- Dependencies: 974 974
-- Name: pk_stacionar_operations; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stacionar_operations
    ADD CONSTRAINT pk_stacionar_operations PRIMARY KEY (oid);


--
-- TOC entry 9642 (class 2606 OID 47413)
-- Dependencies: 975 975
-- Name: pk_stacionar_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stacionar_type
    ADD CONSTRAINT pk_stacionar_type PRIMARY KEY (oid);


--
-- TOC entry 9647 (class 2606 OID 47415)
-- Dependencies: 976 976
-- Name: pk_stafflist; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stafflist
    ADD CONSTRAINT pk_stafflist PRIMARY KEY (oid);


--
-- TOC entry 9649 (class 2606 OID 47417)
-- Dependencies: 977 977
-- Name: pk_stafflist_header; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY stafflist_header
    ADD CONSTRAINT pk_stafflist_header PRIMARY KEY (oid);


--
-- TOC entry 9651 (class 2606 OID 47419)
-- Dependencies: 978 978
-- Name: pk_standart_gosp; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY standart_gosp
    ADD CONSTRAINT pk_standart_gosp PRIMARY KEY (oid);


--
-- TOC entry 9653 (class 2606 OID 47421)
-- Dependencies: 979 979
-- Name: pk_standart_gosp_mkb; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY standart_gosp_mkb
    ADD CONSTRAINT pk_standart_gosp_mkb PRIMARY KEY (oid);


--
-- TOC entry 9655 (class 2606 OID 47423)
-- Dependencies: 980 980
-- Name: pk_standart_gosp_service; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY standart_gosp_service
    ADD CONSTRAINT pk_standart_gosp_service PRIMARY KEY (oid);


--
-- TOC entry 9657 (class 2606 OID 47425)
-- Dependencies: 981 981
-- Name: pk_standart_med_help; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY standart_med_help
    ADD CONSTRAINT pk_standart_med_help PRIMARY KEY (id);


--
-- TOC entry 9671 (class 2606 OID 47427)
-- Dependencies: 982 982
-- Name: pk_statticket; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT pk_statticket PRIMARY KEY (id);


--
-- TOC entry 9676 (class 2606 OID 47429)
-- Dependencies: 984 984
-- Name: pk_subordination_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY subordination_type
    ADD CONSTRAINT pk_subordination_type PRIMARY KEY (oid);


--
-- TOC entry 9678 (class 2606 OID 47431)
-- Dependencies: 985 985
-- Name: pk_supreme_department; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY supreme_department
    ADD CONSTRAINT pk_supreme_department PRIMARY KEY (oid);


--
-- TOC entry 9682 (class 2606 OID 47433)
-- Dependencies: 987 987
-- Name: pk_sysrole; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysrole
    ADD CONSTRAINT pk_sysrole PRIMARY KEY (oid);


--
-- TOC entry 9686 (class 2606 OID 47435)
-- Dependencies: 988 988
-- Name: pk_system_presctemplatedetail; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY system_presctemplatedetail
    ADD CONSTRAINT pk_system_presctemplatedetail PRIMARY KEY (oid);


--
-- TOC entry 9688 (class 2606 OID 47437)
-- Dependencies: 989 989
-- Name: pk_system_protocoltemplate; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY system_protocoltemplate
    ADD CONSTRAINT pk_system_protocoltemplate PRIMARY KEY (oid);


--
-- TOC entry 9690 (class 2606 OID 47439)
-- Dependencies: 990 990
-- Name: pk_systemlink; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY systemlink
    ADD CONSTRAINT pk_systemlink PRIMARY KEY (oid);


--
-- TOC entry 9692 (class 2606 OID 47441)
-- Dependencies: 991 991
-- Name: pk_systemsettings; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY systemsettings
    ADD CONSTRAINT pk_systemsettings PRIMARY KEY (oid);


--
-- TOC entry 9696 (class 2606 OID 47443)
-- Dependencies: 992 992
-- Name: pk_sysuser; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuser
    ADD CONSTRAINT pk_sysuser PRIMARY KEY (oid);


--
-- TOC entry 9702 (class 2606 OID 47445)
-- Dependencies: 993 993
-- Name: pk_sysuser_audit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuser_audit
    ADD CONSTRAINT pk_sysuser_audit PRIMARY KEY (oid);


--
-- TOC entry 9711 (class 2606 OID 47447)
-- Dependencies: 998 998
-- Name: pk_sysuser_pharmacy; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuser_pharmacy
    ADD CONSTRAINT pk_sysuser_pharmacy PRIMARY KEY (oid);


--
-- TOC entry 9722 (class 2606 OID 47449)
-- Dependencies: 1000 1000
-- Name: pk_sysuser_region; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuser_region
    ADD CONSTRAINT pk_sysuser_region PRIMARY KEY (oid);


--
-- TOC entry 9728 (class 2606 OID 47451)
-- Dependencies: 1003 1003
-- Name: pk_sysuserblock; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuserblock
    ADD CONSTRAINT pk_sysuserblock PRIMARY KEY (oid);


--
-- TOC entry 9733 (class 2606 OID 47453)
-- Dependencies: 1004 1004
-- Name: pk_sysuserusers_sysroleroles; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuserusers_sysroleroles
    ADD CONSTRAINT pk_sysuserusers_sysroleroles PRIMARY KEY (oid);


--
-- TOC entry 9736 (class 2606 OID 47455)
-- Dependencies: 1005 1005
-- Name: pk_tablo; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tablo
    ADD CONSTRAINT pk_tablo PRIMARY KEY (oid);


--
-- TOC entry 9738 (class 2606 OID 47457)
-- Dependencies: 1006 1006
-- Name: pk_talonresult; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY talonresult
    ADD CONSTRAINT pk_talonresult PRIMARY KEY (oid);


--
-- TOC entry 9740 (class 2606 OID 47459)
-- Dependencies: 1007 1007
-- Name: pk_tcrit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tcrit
    ADD CONSTRAINT pk_tcrit PRIMARY KEY (oid);


--
-- TOC entry 9742 (class 2606 OID 47461)
-- Dependencies: 1008 1008
-- Name: pk_tcrit_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tcrit_result
    ADD CONSTRAINT pk_tcrit_result PRIMARY KEY (oid);


--
-- TOC entry 9746 (class 2606 OID 47463)
-- Dependencies: 1009 1009
-- Name: pk_terminal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT pk_terminal PRIMARY KEY (oid);


--
-- TOC entry 9751 (class 2606 OID 47465)
-- Dependencies: 1010 1010
-- Name: pk_territorialaccessory; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY territorialaccessory
    ADD CONSTRAINT pk_territorialaccessory PRIMARY KEY (oid);


--
-- TOC entry 9753 (class 2606 OID 47467)
-- Dependencies: 1011 1011
-- Name: pk_territory_kladr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY territory_kladr
    ADD CONSTRAINT pk_territory_kladr PRIMARY KEY (oid);


--
-- TOC entry 9755 (class 2606 OID 47469)
-- Dependencies: 1012 1012
-- Name: pk_territory_list; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY territory_list
    ADD CONSTRAINT pk_territory_list PRIMARY KEY (oid);


--
-- TOC entry 9757 (class 2606 OID 47471)
-- Dependencies: 1013 1013
-- Name: pk_territory_lpu; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY territory_lpu
    ADD CONSTRAINT pk_territory_lpu PRIMARY KEY (oid);


--
-- TOC entry 9759 (class 2606 OID 47473)
-- Dependencies: 1015 1015
-- Name: pk_tib; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tib
    ADD CONSTRAINT pk_tib PRIMARY KEY (oid);


--
-- TOC entry 9761 (class 2606 OID 47475)
-- Dependencies: 1016 1016
-- Name: pk_tib_mdoc; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tib_mdoc
    ADD CONSTRAINT pk_tib_mdoc PRIMARY KEY (oid);


--
-- TOC entry 9764 (class 2606 OID 47477)
-- Dependencies: 1017 1017
-- Name: pk_tib_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tib_people
    ADD CONSTRAINT pk_tib_people PRIMARY KEY (oid);


--
-- TOC entry 9767 (class 2606 OID 47479)
-- Dependencies: 1018 1018
-- Name: pk_tick_res; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tick_res
    ADD CONSTRAINT pk_tick_res PRIMARY KEY (oid);


--
-- TOC entry 9770 (class 2606 OID 47481)
-- Dependencies: 1019 1019
-- Name: pk_tick_subres; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tick_subres
    ADD CONSTRAINT pk_tick_subres PRIMARY KEY (oid);


--
-- TOC entry 9773 (class 2606 OID 47483)
-- Dependencies: 1020 1020
-- Name: pk_time_period; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY time_period
    ADD CONSTRAINT pk_time_period PRIMARY KEY (oid);


--
-- TOC entry 7539 (class 2606 OID 47511)
-- Dependencies: 176 176
-- Name: pk_tkladrspr; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tkladrspr
    ADD CONSTRAINT pk_tkladrspr PRIMARY KEY (oid);


--
-- TOC entry 9778 (class 2606 OID 47557)
-- Dependencies: 1022 1022
-- Name: pk_tradenames; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tradenames
    ADD CONSTRAINT pk_tradenames PRIMARY KEY (oid);


--
-- TOC entry 9784 (class 2606 OID 47559)
-- Dependencies: 1024 1024
-- Name: pk_travm; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY travm
    ADD CONSTRAINT pk_travm PRIMARY KEY (oid);


--
-- TOC entry 9792 (class 2606 OID 47561)
-- Dependencies: 1025 1025
-- Name: pk_treatmen_conditions; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT pk_treatmen_conditions PRIMARY KEY (oid);


--
-- TOC entry 9797 (class 2606 OID 47563)
-- Dependencies: 1027 1027
-- Name: pk_trsf; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf
    ADD CONSTRAINT pk_trsf PRIMARY KEY (oid);


--
-- TOC entry 9822 (class 2606 OID 47565)
-- Dependencies: 1033 1033
-- Name: pk_trsf_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_template
    ADD CONSTRAINT pk_trsf_template PRIMARY KEY (oid);


--
-- TOC entry 9825 (class 2606 OID 47567)
-- Dependencies: 1034 1034
-- Name: pk_trsf_template_columns; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_template_columns
    ADD CONSTRAINT pk_trsf_template_columns PRIMARY KEY (oid);


--
-- TOC entry 9828 (class 2606 OID 47569)
-- Dependencies: 1036 1036
-- Name: pk_tuberculez; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tuberculez
    ADD CONSTRAINT pk_tuberculez PRIMARY KEY (oid);


--
-- TOC entry 9830 (class 2606 OID 47571)
-- Dependencies: 1037 1037
-- Name: pk_tutorial; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tutorial
    ADD CONSTRAINT pk_tutorial PRIMARY KEY (oid);


--
-- TOC entry 9836 (class 2606 OID 47573)
-- Dependencies: 1039 1039
-- Name: pk_tutorial_role; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tutorial_role
    ADD CONSTRAINT pk_tutorial_role PRIMARY KEY (oid);


--
-- TOC entry 9900 (class 2606 OID 47575)
-- Dependencies: 1058 1058
-- Name: pk_tvac_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT pk_tvac_people PRIMARY KEY (oid);


--
-- TOC entry 9838 (class 2606 OID 47577)
-- Dependencies: 1040 1040
-- Name: pk_type_name; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY type_name
    ADD CONSTRAINT pk_type_name PRIMARY KEY (name);


--
-- TOC entry 9844 (class 2606 OID 47579)
-- Dependencies: 1045 1045
-- Name: pk_user_presctemplate; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY user_presctemplate
    ADD CONSTRAINT pk_user_presctemplate PRIMARY KEY (oid);


--
-- TOC entry 9848 (class 2606 OID 47581)
-- Dependencies: 1046 1046
-- Name: pk_user_presctemplatedetail; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY user_presctemplatedetail
    ADD CONSTRAINT pk_user_presctemplatedetail PRIMARY KEY (oid);


--
-- TOC entry 9851 (class 2606 OID 47583)
-- Dependencies: 1047 1047
-- Name: pk_user_protocoltemplate; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY user_protocoltemplate
    ADD CONSTRAINT pk_user_protocoltemplate PRIMARY KEY (oid);


--
-- TOC entry 9854 (class 2606 OID 47585)
-- Dependencies: 1048 1048
-- Name: pk_user_template; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY user_template
    ADD CONSTRAINT pk_user_template PRIMARY KEY (id);


--
-- TOC entry 9859 (class 2606 OID 47587)
-- Dependencies: 1049 1049
-- Name: pk_vac_cancel; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_cancel
    ADD CONSTRAINT pk_vac_cancel PRIMARY KEY (oid);


--
-- TOC entry 9861 (class 2606 OID 47589)
-- Dependencies: 1050 1050
-- Name: pk_vac_cancel_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_cancel_type
    ADD CONSTRAINT pk_vac_cancel_type PRIMARY KEY (oid);


--
-- TOC entry 9864 (class 2606 OID 47591)
-- Dependencies: 1051 1051
-- Name: pk_vac_company; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_company
    ADD CONSTRAINT pk_vac_company PRIMARY KEY (oid);


--
-- TOC entry 9866 (class 2606 OID 47593)
-- Dependencies: 1052 1052
-- Name: pk_vac_company_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_company_type
    ADD CONSTRAINT pk_vac_company_type PRIMARY KEY (oid);


--
-- TOC entry 9868 (class 2606 OID 47595)
-- Dependencies: 1053 1053
-- Name: pk_vac_input_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_input_type
    ADD CONSTRAINT pk_vac_input_type PRIMARY KEY (oid);


--
-- TOC entry 9873 (class 2606 OID 47597)
-- Dependencies: 1054 1054
-- Name: pk_vac_kratn; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_kratn
    ADD CONSTRAINT pk_vac_kratn PRIMARY KEY (oid);


--
-- TOC entry 9875 (class 2606 OID 47599)
-- Dependencies: 1055 1055
-- Name: pk_vac_kratn_name; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_kratn_name
    ADD CONSTRAINT pk_vac_kratn_name PRIMARY KEY (oid);


--
-- TOC entry 9879 (class 2606 OID 47601)
-- Dependencies: 1056 1056
-- Name: pk_vac_lpu_company; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_lpu_company
    ADD CONSTRAINT pk_vac_lpu_company PRIMARY KEY (oid);


--
-- TOC entry 9884 (class 2606 OID 47603)
-- Dependencies: 1057 1057
-- Name: pk_vac_map; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_map
    ADD CONSTRAINT pk_vac_map PRIMARY KEY (oid);


--
-- TOC entry 9902 (class 2606 OID 47605)
-- Dependencies: 1059 1059
-- Name: pk_vac_people_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_people_status
    ADD CONSTRAINT pk_vac_people_status PRIMARY KEY (oid);


--
-- TOC entry 9911 (class 2606 OID 47607)
-- Dependencies: 1060 1060
-- Name: pk_vac_people_test; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT pk_vac_people_test PRIMARY KEY (oid);


--
-- TOC entry 9920 (class 2606 OID 47609)
-- Dependencies: 1061 1061
-- Name: pk_vac_plan; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT pk_vac_plan PRIMARY KEY (oid);


--
-- TOC entry 9922 (class 2606 OID 47611)
-- Dependencies: 1062 1062
-- Name: pk_vac_plan_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_plan_status
    ADD CONSTRAINT pk_vac_plan_status PRIMARY KEY (oid);


--
-- TOC entry 9925 (class 2606 OID 47613)
-- Dependencies: 1063 1063
-- Name: pk_vac_repl_objects; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_objects
    ADD CONSTRAINT pk_vac_repl_objects PRIMARY KEY (oid);


--
-- TOC entry 9928 (class 2606 OID 47615)
-- Dependencies: 1064 1064
-- Name: pk_vac_repl_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_people
    ADD CONSTRAINT pk_vac_repl_people PRIMARY KEY (oid);


--
-- TOC entry 9931 (class 2606 OID 47617)
-- Dependencies: 1065 1065
-- Name: pk_vac_repl_people_loaded; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_people_loaded
    ADD CONSTRAINT pk_vac_repl_people_loaded PRIMARY KEY (oid);


--
-- TOC entry 9934 (class 2606 OID 47619)
-- Dependencies: 1066 1066
-- Name: pk_vac_repl_people_queue; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_people_queue
    ADD CONSTRAINT pk_vac_repl_people_queue PRIMARY KEY (oid);


--
-- TOC entry 9936 (class 2606 OID 47621)
-- Dependencies: 1067 1067
-- Name: pk_vac_repl_subscriber; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_subscriber
    ADD CONSTRAINT pk_vac_repl_subscriber PRIMARY KEY (company_id);


--
-- TOC entry 9939 (class 2606 OID 47623)
-- Dependencies: 1068 1068
-- Name: pk_vac_repl_updates; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_repl_updates
    ADD CONSTRAINT pk_vac_repl_updates PRIMARY KEY (oid);


--
-- TOC entry 9946 (class 2606 OID 47625)
-- Dependencies: 1069 1069
-- Name: pk_vac_sicness; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT pk_vac_sicness PRIMARY KEY (oid);


--
-- TOC entry 9948 (class 2606 OID 47627)
-- Dependencies: 1070 1070
-- Name: pk_vac_status_series; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_status_series
    ADD CONSTRAINT pk_vac_status_series PRIMARY KEY (oid);


--
-- TOC entry 9951 (class 2606 OID 47629)
-- Dependencies: 1071 1071
-- Name: pk_vac_store; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_store
    ADD CONSTRAINT pk_vac_store PRIMARY KEY (oid);


--
-- TOC entry 9953 (class 2606 OID 47631)
-- Dependencies: 1072 1072
-- Name: pk_vac_test; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_test
    ADD CONSTRAINT pk_vac_test PRIMARY KEY (oid);


--
-- TOC entry 9956 (class 2606 OID 47633)
-- Dependencies: 1073 1073
-- Name: pk_vac_test_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vac_test_result
    ADD CONSTRAINT pk_vac_test_result PRIMARY KEY (oid);


--
-- TOC entry 9958 (class 2606 OID 47635)
-- Dependencies: 1074 1074
-- Name: pk_vaccin_log_operation; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_log_operation
    ADD CONSTRAINT pk_vaccin_log_operation PRIMARY KEY (oid);


--
-- TOC entry 9963 (class 2606 OID 47637)
-- Dependencies: 1075 1075
-- Name: pk_vaccin_prep; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_prep
    ADD CONSTRAINT pk_vaccin_prep PRIMARY KEY (oid);


--
-- TOC entry 9967 (class 2606 OID 47639)
-- Dependencies: 1076 1076
-- Name: pk_vaccin_prep_infection; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_prep_infection
    ADD CONSTRAINT pk_vaccin_prep_infection PRIMARY KEY (oid);


--
-- TOC entry 9972 (class 2606 OID 47641)
-- Dependencies: 1077 1077
-- Name: pk_vaccin_prep_store; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_prep_store
    ADD CONSTRAINT pk_vaccin_prep_store PRIMARY KEY (oid);


--
-- TOC entry 9977 (class 2606 OID 47643)
-- Dependencies: 1078 1078
-- Name: pk_vaccin_prep_store_log; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_prep_store_log
    ADD CONSTRAINT pk_vaccin_prep_store_log PRIMARY KEY (oid);


--
-- TOC entry 9981 (class 2606 OID 47645)
-- Dependencies: 1079 1079
-- Name: pk_vaccin_shem; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_shem
    ADD CONSTRAINT pk_vaccin_shem PRIMARY KEY (oid);


--
-- TOC entry 9985 (class 2606 OID 47647)
-- Dependencies: 1080 1080
-- Name: pk_vaccin_shemname; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_shemname
    ADD CONSTRAINT pk_vaccin_shemname PRIMARY KEY (oid);


--
-- TOC entry 9988 (class 2606 OID 47649)
-- Dependencies: 1081 1081
-- Name: pk_vaccin_unit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vaccin_unit
    ADD CONSTRAINT pk_vaccin_unit PRIMARY KEY (oid);


--
-- TOC entry 9998 (class 2606 OID 47651)
-- Dependencies: 1087 1087
-- Name: pk_vip_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vip_people
    ADD CONSTRAINT pk_vip_people PRIMARY KEY (oid);


--
-- TOC entry 10005 (class 2606 OID 47653)
-- Dependencies: 1088 1088
-- Name: pk_visit; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY visit
    ADD CONSTRAINT pk_visit PRIMARY KEY (id);


--
-- TOC entry 10007 (class 2606 OID 47655)
-- Dependencies: 1089 1089
-- Name: pk_visit_goal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY visit_goal
    ADD CONSTRAINT pk_visit_goal PRIMARY KEY (oid);


--
-- TOC entry 10011 (class 2606 OID 47657)
-- Dependencies: 1090 1090
-- Name: pk_visit_portal_link; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY visit_portal_link
    ADD CONSTRAINT pk_visit_portal_link PRIMARY KEY (oid);


--
-- TOC entry 10013 (class 2606 OID 47659)
-- Dependencies: 1091 1091
-- Name: pk_vk_character; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_character
    ADD CONSTRAINT pk_vk_character PRIMARY KEY (oid);


--
-- TOC entry 10016 (class 2606 OID 47661)
-- Dependencies: 1092 1092
-- Name: pk_vk_conclusin_reason; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_conclusin_reason
    ADD CONSTRAINT pk_vk_conclusin_reason PRIMARY KEY (oid);


--
-- TOC entry 10019 (class 2606 OID 47663)
-- Dependencies: 1093 1093
-- Name: pk_vk_conclusion; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_conclusion
    ADD CONSTRAINT pk_vk_conclusion PRIMARY KEY (oid);


--
-- TOC entry 10036 (class 2606 OID 47665)
-- Dependencies: 1094 1094
-- Name: pk_vk_main; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT pk_vk_main PRIMARY KEY (oid);


--
-- TOC entry 10039 (class 2606 OID 47667)
-- Dependencies: 1095 1095
-- Name: pk_vk_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_result
    ADD CONSTRAINT pk_vk_result PRIMARY KEY (oid);


--
-- TOC entry 10042 (class 2606 OID 47669)
-- Dependencies: 1096 1096
-- Name: pk_vk_standart; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_standart
    ADD CONSTRAINT pk_vk_standart PRIMARY KEY (oid);


--
-- TOC entry 10045 (class 2606 OID 47671)
-- Dependencies: 1097 1097
-- Name: pk_vk_target; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_target
    ADD CONSTRAINT pk_vk_target PRIMARY KEY (oid);


--
-- TOC entry 10048 (class 2606 OID 47673)
-- Dependencies: 1098 1098
-- Name: pk_vk_type; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vk_type
    ADD CONSTRAINT pk_vk_type PRIMARY KEY (oid);


--
-- TOC entry 10051 (class 2606 OID 47675)
-- Dependencies: 1101 1101
-- Name: pk_vregion; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vregion
    ADD CONSTRAINT pk_vregion PRIMARY KEY (oid);


--
-- TOC entry 10101 (class 2606 OID 47677)
-- Dependencies: 1122 1122
-- Name: pk_work_place; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY work_place
    ADD CONSTRAINT pk_work_place PRIMARY KEY (oid);


--
-- TOC entry 10105 (class 2606 OID 47679)
-- Dependencies: 1123 1123
-- Name: pk_workday_replace; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY workday_replace
    ADD CONSTRAINT pk_workday_replace PRIMARY KEY (oid);


--
-- TOC entry 10111 (class 2606 OID 47681)
-- Dependencies: 1126 1126
-- Name: pk_xray_bonus; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_bonus
    ADD CONSTRAINT pk_xray_bonus PRIMARY KEY (oid);


--
-- TOC entry 10117 (class 2606 OID 47683)
-- Dependencies: 1127 1127
-- Name: pk_xray_description; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_description
    ADD CONSTRAINT pk_xray_description PRIMARY KEY (oid);


--
-- TOC entry 10119 (class 2606 OID 47685)
-- Dependencies: 1128 1128
-- Name: pk_xray_dicom_reduction; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_dicom_reduction
    ADD CONSTRAINT pk_xray_dicom_reduction PRIMARY KEY (oid);


--
-- TOC entry 10121 (class 2606 OID 47687)
-- Dependencies: 1129 1129
-- Name: pk_xray_pacs; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_pacs
    ADD CONSTRAINT pk_xray_pacs PRIMARY KEY (oid);


--
-- TOC entry 10124 (class 2606 OID 47689)
-- Dependencies: 1130 1130
-- Name: pk_xray_param; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_param
    ADD CONSTRAINT pk_xray_param PRIMARY KEY (oid);


--
-- TOC entry 10126 (class 2606 OID 47691)
-- Dependencies: 1131 1131
-- Name: pk_xray_purpose; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_purpose
    ADD CONSTRAINT pk_xray_purpose PRIMARY KEY (oid);


--
-- TOC entry 10135 (class 2606 OID 47693)
-- Dependencies: 1132 1132
-- Name: pk_xray_referal; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT pk_xray_referal PRIMARY KEY (oid);


--
-- TOC entry 10139 (class 2606 OID 47695)
-- Dependencies: 1133 1133
-- Name: pk_xray_result; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_result
    ADD CONSTRAINT pk_xray_result PRIMARY KEY (oid);


--
-- TOC entry 10141 (class 2606 OID 47697)
-- Dependencies: 1134 1134
-- Name: pk_xray_urgency; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY xray_urgency
    ADD CONSTRAINT pk_xray_urgency PRIMARY KEY (oid);


--
-- TOC entry 10143 (class 2606 OID 47699)
-- Dependencies: 1135 1135
-- Name: pk_zayavka; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT pk_zayavka PRIMARY KEY (oid);


--
-- TOC entry 10150 (class 2606 OID 47701)
-- Dependencies: 1136 1136
-- Name: pk_zayavka_status; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY zayavka_status
    ADD CONSTRAINT pk_zayavka_status PRIMARY KEY (oid);


--
-- TOC entry 9064 (class 2606 OID 47703)
-- Dependencies: 807 807 807
-- Name: prep_actmatters_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prep_actmatters
    ADD CONSTRAINT prep_actmatters_idx PRIMARY KEY (prepid, matterid);


--
-- TOC entry 9066 (class 2606 OID 47705)
-- Dependencies: 808 808 808
-- Name: prep_atc_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prep_atc
    ADD CONSTRAINT prep_atc_idx PRIMARY KEY (prepid, uniqid);


--
-- TOC entry 9068 (class 2606 OID 47707)
-- Dependencies: 809 809 809 809
-- Name: prep_iic_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prep_iic
    ADD CONSTRAINT prep_iic_idx PRIMARY KEY (prepid, uniqid, phgrid);


--
-- TOC entry 9070 (class 2606 OID 47709)
-- Dependencies: 810 810 810
-- Name: prep_pharmagroup_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prep_pharmagroup
    ADD CONSTRAINT prep_pharmagroup_idx PRIMARY KEY (prepid, uniqid);


--
-- TOC entry 9062 (class 2606 OID 47711)
-- Dependencies: 806 806
-- Name: prep_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_pkey PRIMARY KEY (id);


--
-- TOC entry 9111 (class 2606 OID 47713)
-- Dependencies: 819 819
-- Name: presc_sign_sotr_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_sign_sotr
    ADD CONSTRAINT presc_sign_sotr_pkey PRIMARY KEY (oid);


--
-- TOC entry 9085 (class 2606 OID 47715)
-- Dependencies: 812 812
-- Name: presctype_lab_searching_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presc_card
    ADD CONSTRAINT presctype_lab_searching_pkey PRIMARY KEY (oid);


--
-- TOC entry 9136 (class 2606 OID 47717)
-- Dependencies: 827 827
-- Name: presctypeparam_dictionary_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presctypeparam_dictionary
    ADD CONSTRAINT presctypeparam_dictionary_pkey PRIMARY KEY (oid);


--
-- TOC entry 9133 (class 2606 OID 47719)
-- Dependencies: 826 826
-- Name: presctypeparam_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY presctypeparam
    ADD CONSTRAINT presctypeparam_pkey PRIMARY KEY (oid);


--
-- TOC entry 9123 (class 2606 OID 47721)
-- Dependencies: 824 824 824
-- Name: presctypeparam_values_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY prescparam_values
    ADD CONSTRAINT presctypeparam_values_pkey PRIMARY KEY (oid, prescparam_id);


--
-- TOC entry 9317 (class 2606 OID 47723)
-- Dependencies: 879 879
-- Name: profile_lpu_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY registration_profile
    ADD CONSTRAINT profile_lpu_pkey PRIMARY KEY (oid);


--
-- TOC entry 9292 (class 2606 OID 47725)
-- Dependencies: 871 871 871
-- Name: regcert_extrafirms_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY regcert_extrafirms
    ADD CONSTRAINT regcert_extrafirms_idx PRIMARY KEY (certid, firmid);


--
-- TOC entry 9290 (class 2606 OID 47727)
-- Dependencies: 870 870
-- Name: regcert_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY regcert
    ADD CONSTRAINT regcert_pkey PRIMARY KEY (id);


--
-- TOC entry 9362 (class 2606 OID 47729)
-- Dependencies: 892 892
-- Name: risk_factors_diabetes_second_type_people_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_diabetes_second_type_people
    ADD CONSTRAINT risk_factors_diabetes_second_type_people_pkey PRIMARY KEY (oid);


--
-- TOC entry 9358 (class 2606 OID 47731)
-- Dependencies: 891 891
-- Name: risk_factors_diabetes_second_type_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_diabetes_second_type
    ADD CONSTRAINT risk_factors_diabetes_second_type_pkey PRIMARY KEY (oid);


--
-- TOC entry 9370 (class 2606 OID 47733)
-- Dependencies: 894 894
-- Name: risk_factors_ibs_people_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_ibs_people
    ADD CONSTRAINT risk_factors_ibs_people_pkey PRIMARY KEY (oid);


--
-- TOC entry 9366 (class 2606 OID 47735)
-- Dependencies: 893 893
-- Name: risk_factors_ibs_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_ibs
    ADD CONSTRAINT risk_factors_ibs_pkey PRIMARY KEY (oid);


--
-- TOC entry 9400 (class 2606 OID 47737)
-- Dependencies: 905 905
-- Name: sanatorium_history_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sanatorium_history
    ADD CONSTRAINT sanatorium_history_pkey PRIMARY KEY (hid);


--
-- TOC entry 9437 (class 2606 OID 47739)
-- Dependencies: 912 912
-- Name: schedule_log_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY schedule_log
    ADD CONSTRAINT schedule_log_pkey PRIMARY KEY (oid);


--
-- TOC entry 9452 (class 2606 OID 47741)
-- Dependencies: 917 917
-- Name: screening_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening
    ADD CONSTRAINT screening_pkey PRIMARY KEY (oid);


--
-- TOC entry 9456 (class 2606 OID 47743)
-- Dependencies: 918 918
-- Name: screening_presctype_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening_presctype
    ADD CONSTRAINT screening_presctype_pkey PRIMARY KEY (oid);


--
-- TOC entry 9460 (class 2606 OID 47745)
-- Dependencies: 919 919
-- Name: screening_presctype_risk_fact_diab_second_type_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening_presctype_risk_fact_diab_second_type
    ADD CONSTRAINT screening_presctype_risk_fact_diab_second_type_pkey PRIMARY KEY (oid);


--
-- TOC entry 9466 (class 2606 OID 47747)
-- Dependencies: 920 920
-- Name: screening_presctype_risk_fact_ibs_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening_presctype_risk_fact_ibs
    ADD CONSTRAINT screening_presctype_risk_fact_ibs_pkey PRIMARY KEY (oid);


--
-- TOC entry 9588 (class 2606 OID 47749)
-- Dependencies: 959 959
-- Name: sotr_presctype_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sotr_presctype
    ADD CONSTRAINT sotr_presctype_pkey PRIMARY KEY (oid);


--
-- TOC entry 9633 (class 2606 OID 47751)
-- Dependencies: 972 972
-- Name: speed_test_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY speed_test
    ADD CONSTRAINT speed_test_pkey PRIMARY KEY (oid);


--
-- TOC entry 9680 (class 2606 OID 47753)
-- Dependencies: 986 986 986
-- Name: synon_iic_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY synon_iic
    ADD CONSTRAINT synon_iic_idx PRIMARY KEY (synon_id, iic_id);


--
-- TOC entry 9717 (class 2606 OID 47755)
-- Dependencies: 999 999
-- Name: sysuser_presctype_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sysuser_presctype
    ADD CONSTRAINT sysuser_presctype_pkey PRIMARY KEY (oid);


--
-- TOC entry 9775 (class 2606 OID 47757)
-- Dependencies: 1021 1021 1021 1021
-- Name: tn_df_limp_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tn_df_limp
    ADD CONSTRAINT tn_df_limp_idx PRIMARY KEY (tradenameid, drugformid, limp_phgr_id);


--
-- TOC entry 9781 (class 2606 OID 47759)
-- Dependencies: 1023 1023 1023 1023
-- Name: tradenames_drugforms_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tradenames_drugforms
    ADD CONSTRAINT tradenames_drugforms_idx PRIMARY KEY (tradenameid, drugformid, mz_phgr_id);


--
-- TOC entry 9802 (class 2606 OID 47761)
-- Dependencies: 1029 1029
-- Name: trsf_columns_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_columns
    ADD CONSTRAINT trsf_columns_pkey PRIMARY KEY (oid);


--
-- TOC entry 9804 (class 2606 OID 47763)
-- Dependencies: 1030 1030
-- Name: trsf_reminde_idx; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_reminde
    ADD CONSTRAINT trsf_reminde_idx PRIMARY KEY (oid);


--
-- TOC entry 9811 (class 2606 OID 47765)
-- Dependencies: 1031 1031
-- Name: trsf_saved_reestr_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT trsf_saved_reestr_pkey PRIMARY KEY (oid);


--
-- TOC entry 9817 (class 2606 OID 47767)
-- Dependencies: 1032 1032
-- Name: trsf_temp_reestr_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_temp_reestr
    ADD CONSTRAINT trsf_temp_reestr_pkey PRIMARY KEY (oid);


--
-- TOC entry 9799 (class 2606 OID 47769)
-- Dependencies: 1028 1028
-- Name: trsf_template_all_columns_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY trsf_all_columns
    ADD CONSTRAINT trsf_template_all_columns_pkey PRIMARY KEY (oid);


--
-- TOC entry 9529 (class 2606 OID 47771)
-- Dependencies: 933 933
-- Name: tslform_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT tslform_pk PRIMARY KEY (formnum);


--
-- TOC entry 9552 (class 2606 OID 47773)
-- Dependencies: 943 943
-- Name: tslrequest_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sicklist_request
    ADD CONSTRAINT tslrequest_pk PRIMARY KEY (oid);


--
-- TOC entry 9832 (class 2606 OID 47775)
-- Dependencies: 1038 1038
-- Name: tutorial_links_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tutorial_links
    ADD CONSTRAINT tutorial_links_pkey PRIMARY KEY (oid);


--
-- TOC entry 8604 (class 2606 OID 47777)
-- Dependencies: 644 644
-- Name: u_lpudogovor; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY lpudogovor
    ADD CONSTRAINT u_lpudogovor UNIQUE (numdogovor);


--
-- TOC entry 8931 (class 2606 OID 47779)
-- Dependencies: 761 761
-- Name: u_person_login; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY person
    ADD CONSTRAINT u_person_login UNIQUE (login);


--
-- TOC entry 9462 (class 2606 OID 47781)
-- Dependencies: 919 919 919
-- Name: uk_fk_scr_presc_risk_d2t; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening_presctype_risk_fact_diab_second_type
    ADD CONSTRAINT uk_fk_scr_presc_risk_d2t UNIQUE (screening_presctype, risk_factor_diabet_second_type);


--
-- TOC entry 9468 (class 2606 OID 47783)
-- Dependencies: 920 920 920
-- Name: uk_fk_scr_presc_risk_ibs; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY screening_presctype_risk_fact_ibs
    ADD CONSTRAINT uk_fk_scr_presc_risk_ibs UNIQUE (screening_presctype, risk_factor_ibs);


--
-- TOC entry 9364 (class 2606 OID 47785)
-- Dependencies: 892 892 892
-- Name: uk_risk_factors_diabetes_second_type_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_diabetes_second_type_people
    ADD CONSTRAINT uk_risk_factors_diabetes_second_type_people UNIQUE (risk_factor_diabetes_second_type, people);


--
-- TOC entry 9372 (class 2606 OID 47787)
-- Dependencies: 894 894 894
-- Name: uk_risk_factors_ibs_people; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY risk_factors_ibs_people
    ADD CONSTRAINT uk_risk_factors_ibs_people UNIQUE (risk_factor_ibs, people);


--
-- TOC entry 9840 (class 2606 OID 47789)
-- Dependencies: 1042 1042
-- Name: unionlog_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY unionlog
    ADD CONSTRAINT unionlog_pkey PRIMARY KEY (oid);


--
-- TOC entry 9992 (class 2606 OID 47791)
-- Dependencies: 1085 1085
-- Name: video_tutorial_links_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY video_tutorial_links
    ADD CONSTRAINT video_tutorial_links_pkey PRIMARY KEY (oid);


--
-- TOC entry 9990 (class 2606 OID 47793)
-- Dependencies: 1084 1084
-- Name: video_tutorial_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY video_tutorial
    ADD CONSTRAINT video_tutorial_pkey PRIMARY KEY (oid);


--
-- TOC entry 9994 (class 2606 OID 47795)
-- Dependencies: 1086 1086
-- Name: video_tutorial_role_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY video_tutorial_role
    ADD CONSTRAINT video_tutorial_role_pkey PRIMARY KEY (oid);


--
-- TOC entry 10053 (class 2606 OID 47797)
-- Dependencies: 1102 1102
-- Name: vregion_settings_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY vregion_settings
    ADD CONSTRAINT vregion_settings_pkey PRIMARY KEY (kladr_id);


--
-- TOC entry 10069 (class 2606 OID 47799)
-- Dependencies: 1106 1106
-- Name: web_buffer_transfer_fer_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_buffer_transfer_fer
    ADD CONSTRAINT web_buffer_transfer_fer_pk PRIMARY KEY (oid);


--
-- TOC entry 10061 (class 2606 OID 47825)
-- Dependencies: 1105 1105
-- Name: web_buffer_transfer_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_buffer_transfer
    ADD CONSTRAINT web_buffer_transfer_pk PRIMARY KEY (oid);


--
-- TOC entry 10071 (class 2606 OID 47848)
-- Dependencies: 1108 1108
-- Name: web_comparison_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_comparison
    ADD CONSTRAINT web_comparison_pkey PRIMARY KEY (our_oid);


--
-- TOC entry 10078 (class 2606 OID 47850)
-- Dependencies: 1110 1110
-- Name: web_dictionary_link_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_dictionary_link
    ADD CONSTRAINT web_dictionary_link_pk PRIMARY KEY (oid);


--
-- TOC entry 10076 (class 2606 OID 47852)
-- Dependencies: 1109 1109
-- Name: web_dictionary_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_dictionary
    ADD CONSTRAINT web_dictionary_pk PRIMARY KEY (oid);


--
-- TOC entry 10080 (class 2606 OID 47854)
-- Dependencies: 1111 1111
-- Name: web_dictonary_table_link_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_dictonary_table_link
    ADD CONSTRAINT web_dictonary_table_link_pk PRIMARY KEY (oid);


--
-- TOC entry 10082 (class 2606 OID 47856)
-- Dependencies: 1113 1113
-- Name: web_lpu_pkey; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_lpu
    ADD CONSTRAINT web_lpu_pkey PRIMARY KEY (our_oid);


--
-- TOC entry 10085 (class 2606 OID 47858)
-- Dependencies: 1115 1115
-- Name: web_people_fs_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_people_fs
    ADD CONSTRAINT web_people_fs_pk PRIMARY KEY (oid);


--
-- TOC entry 10087 (class 2606 OID 47860)
-- Dependencies: 1116 1116
-- Name: web_schedule_fs_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_schedule_fs
    ADD CONSTRAINT web_schedule_fs_pk PRIMARY KEY (oid);


--
-- TOC entry 10089 (class 2606 OID 47862)
-- Dependencies: 1117 1117
-- Name: web_schedule_fs_reg_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_schedule_fs_reg
    ADD CONSTRAINT web_schedule_fs_reg_pk PRIMARY KEY (oid);


--
-- TOC entry 10094 (class 2606 OID 47864)
-- Dependencies: 1118 1118
-- Name: web_schedule_rule_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_schedule_rule
    ADD CONSTRAINT web_schedule_rule_pk PRIMARY KEY (oid);


--
-- TOC entry 10099 (class 2606 OID 47866)
-- Dependencies: 1119 1119
-- Name: web_schedule_rule_reg_pk; Type: CONSTRAINT; Schema: mir; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY web_schedule_rule_reg
    ADD CONSTRAINT web_schedule_rule_reg_pk PRIMARY KEY (oid);


SET search_path = mypacs, pg_catalog;

--
-- TOC entry 10152 (class 2606 OID 59056)
-- Dependencies: 1256 1256
-- Name: applytable_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY applytable
    ADD CONSTRAINT applytable_pkey PRIMARY KEY (idfield);


--
-- TOC entry 10155 (class 2606 OID 59603)
-- Dependencies: 1257 1257 1257 1257
-- Name: cns_dicomdisplay_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cns_dicomdisplay
    ADD CONSTRAINT cns_dicomdisplay_pkey PRIMARY KEY (modality, w_position, display_id);


--
-- TOC entry 10157 (class 2606 OID 59587)
-- Dependencies: 1258 1258
-- Name: cns_lookup_table_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cns_lookup_table
    ADD CONSTRAINT cns_lookup_table_pkey PRIMARY KEY (lut_name);


--
-- TOC entry 10161 (class 2606 OID 59374)
-- Dependencies: 1259 1259
-- Name: cns_modility_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cns_modility
    ADD CONSTRAINT cns_modility_pkey PRIMARY KEY (prof);


--
-- TOC entry 10163 (class 2606 OID 59043)
-- Dependencies: 1260 1260 1260 1260
-- Name: cns_usersetting_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cns_usersetting
    ADD CONSTRAINT cns_usersetting_idx PRIMARY KEY (itemname, sectionname, username);


--
-- TOC entry 10165 (class 2606 OID 59021)
-- Dependencies: 1261 1261 1261
-- Name: cns_windows_self_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cns_windows_self
    ADD CONSTRAINT cns_windows_self_idx PRIMARY KEY (partname, modality);


--
-- TOC entry 10167 (class 2606 OID 57519)
-- Dependencies: 1262 1262
-- Name: conclusions_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY conclusions
    ADD CONSTRAINT conclusions_idx PRIMARY KEY (fk_id);


--
-- TOC entry 10171 (class 2606 OID 57550)
-- Dependencies: 1273 1273
-- Name: devices_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY devices
    ADD CONSTRAINT devices_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10225 (class 2606 OID 59899)
-- Dependencies: 1295 1295
-- Name: diagnoz_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY diagnoz
    ADD CONSTRAINT diagnoz_idx PRIMARY KEY (fk_id);


--
-- TOC entry 10173 (class 2606 OID 59001)
-- Dependencies: 1274 1274
-- Name: dicomprinter_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY dicomprinter
    ADD CONSTRAINT dicomprinter_pkey PRIMARY KEY (name);


--
-- TOC entry 10176 (class 2606 OID 57572)
-- Dependencies: 1275 1275
-- Name: events_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY events
    ADD CONSTRAINT events_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10178 (class 2606 OID 57583)
-- Dependencies: 1276 1276
-- Name: events_rsnd_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY events_rsnd
    ADD CONSTRAINT events_rsnd_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10181 (class 2606 OID 57714)
-- Dependencies: 1278 1278
-- Name: events_wl_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY events_wl
    ADD CONSTRAINT events_wl_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10183 (class 2606 OID 57718)
-- Dependencies: 1279 1279
-- Name: hospitals_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY hospitals
    ADD CONSTRAINT hospitals_pkey PRIMARY KEY (p_id);


--
-- TOC entry 10190 (class 2606 OID 58907)
-- Dependencies: 1281 1281
-- Name: image_channels_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY image_channels
    ADD CONSTRAINT image_channels_pkey PRIMARY KEY (description);


--
-- TOC entry 10188 (class 2606 OID 58850)
-- Dependencies: 1280 1280
-- Name: images_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY images
    ADD CONSTRAINT images_pkey PRIMARY KEY (instanceuid);


--
-- TOC entry 10192 (class 2606 OID 58815)
-- Dependencies: 1282 1282
-- Name: layout_table_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY layout_table
    ADD CONSTRAINT layout_table_pkey PRIMARY KEY (name);


--
-- TOC entry 10196 (class 2606 OID 58691)
-- Dependencies: 1283 1283
-- Name: modility_setting_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY modility_setting
    ADD CONSTRAINT modility_setting_pkey PRIMARY KEY (prof);


--
-- TOC entry 10200 (class 2606 OID 58454)
-- Dependencies: 1285 1285
-- Name: patients_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY patients
    ADD CONSTRAINT patients_pkey PRIMARY KEY (p_pid);


--
-- TOC entry 10202 (class 2606 OID 58662)
-- Dependencies: 1286 1286
-- Name: remote_devices_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY remote_devices
    ADD CONSTRAINT remote_devices_pkey PRIMARY KEY (description);


--
-- TOC entry 10204 (class 2606 OID 57744)
-- Dependencies: 1287 1287
-- Name: rules_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY rules
    ADD CONSTRAINT rules_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10207 (class 2606 OID 58638)
-- Dependencies: 1288 1288
-- Name: series_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY series
    ADD CONSTRAINT series_pkey PRIMARY KEY (seriesuid);


--
-- TOC entry 10212 (class 2606 OID 58491)
-- Dependencies: 1289 1289
-- Name: studies_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY studies
    ADD CONSTRAINT studies_pkey PRIMARY KEY (studyuid);


--
-- TOC entry 10229 (class 2606 OID 60097)
-- Dependencies: 1297 1297
-- Name: studydocs_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY studydocs
    ADD CONSTRAINT studydocs_idx PRIMARY KEY (f_id);


--
-- TOC entry 10214 (class 2606 OID 58626)
-- Dependencies: 1290 1290
-- Name: tags_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (fc_title);


--
-- TOC entry 10216 (class 2606 OID 57765)
-- Dependencies: 1291 1291
-- Name: templates_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY templates
    ADD CONSTRAINT templates_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10219 (class 2606 OID 57769)
-- Dependencies: 1292 1292
-- Name: users_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (fk_id);


--
-- TOC entry 10221 (class 2606 OID 59209)
-- Dependencies: 1293 1293 1293
-- Name: windows_preset_idx; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY windows_preset
    ADD CONSTRAINT windows_preset_idx PRIMARY KEY (partname, modality);


--
-- TOC entry 10223 (class 2606 OID 57776)
-- Dependencies: 1294 1294
-- Name: worklist_pkey; Type: CONSTRAINT; Schema: mypacs; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY worklist
    ADD CONSTRAINT worklist_pkey PRIMARY KEY (fk_id);


SET search_path = mir, pg_catalog;

--
-- TOC entry 7609 (class 1259 OID 48184)
-- Dependencies: 312
-- Name: age_group_pk2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX age_group_pk2 ON age_group_history USING btree (hid);


--
-- TOC entry 7704 (class 1259 OID 48185)
-- Dependencies: 335
-- Name: areal_sotr_idx_areal_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX areal_sotr_idx_areal_id ON areal_sotr USING btree (areal_id);


--
-- TOC entry 7761 (class 1259 OID 48186)
-- Dependencies: 356 356
-- Name: benefit_employee_upload_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX benefit_employee_upload_idx ON benefit_employee_upload USING btree (post_name, employee_code);


--
-- TOC entry 7830 (class 1259 OID 48187)
-- Dependencies: 376
-- Name: building_history_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX building_history_pk ON building_history USING btree (hid);


--
-- TOC entry 7936 (class 1259 OID 48188)
-- Dependencies: 409
-- Name: clsatc$idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "clsatc$idx" ON clsatc USING btree (parentid);


--
-- TOC entry 7994 (class 1259 OID 48189)
-- Dependencies: 429
-- Name: counterpart_garanty_letter_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX counterpart_garanty_letter_pk ON counterpart_garanty_letter USING btree (oid);


--
-- TOC entry 8025 (class 1259 OID 48190)
-- Dependencies: 441
-- Name: dchange; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX dchange ON demand_changes USING btree (date_change);


--
-- TOC entry 10231 (class 1259 OID 60657)
-- Dependencies: 1301
-- Name: dicom_wl_buffer_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX dicom_wl_buffer_idx ON dicom_wl_buffer USING btree (prescid);


--
-- TOC entry 10232 (class 1259 OID 60658)
-- Dependencies: 1301
-- Name: dicom_wl_buffer_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX dicom_wl_buffer_idx1 ON dicom_wl_buffer USING btree (create_date);


--
-- TOC entry 10233 (class 1259 OID 60659)
-- Dependencies: 1301
-- Name: dicom_wl_buffer_idx2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX dicom_wl_buffer_idx2 ON dicom_wl_buffer USING btree (runbeg_dt);


--
-- TOC entry 7628 (class 1259 OID 48191)
-- Dependencies: 316
-- Name: dictionary_idx_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX dictionary_idx_name ON dictionary USING btree (name);


--
-- TOC entry 8137 (class 1259 OID 48192)
-- Dependencies: 484
-- Name: docobsl$fn_year; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "docobsl$fn_year" ON docobsl USING btree (year_doc);


--
-- TOC entry 8138 (class 1259 OID 48193)
-- Dependencies: 484
-- Name: docobsl_by_id_viddoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX docobsl_by_id_viddoc ON docobsl USING btree (mdoc_type_id);


--
-- TOC entry 8139 (class 1259 OID 48194)
-- Dependencies: 484 484
-- Name: docobsl_by_viddoc_numdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX docobsl_by_viddoc_numdoc ON docobsl USING btree (mdoc_type_id, num_doc);


--
-- TOC entry 8140 (class 1259 OID 48195)
-- Dependencies: 484 484
-- Name: docobsl_numdoc_year; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX docobsl_numdoc_year ON docobsl USING btree (num_doc, year_doc);


--
-- TOC entry 8222 (class 1259 OID 48196)
-- Dependencies: 510
-- Name: equipment_pk2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX equipment_pk2 ON equipment_history USING btree (hid);


--
-- TOC entry 8263 (class 1259 OID 48197)
-- Dependencies: 522
-- Name: expert_part_type_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_part_type_pk ON expert_part_type USING btree (oid);


--
-- TOC entry 8266 (class 1259 OID 48198)
-- Dependencies: 523
-- Name: expert_raiting_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_raiting_pk ON expert_raiting USING btree (oid);


--
-- TOC entry 8273 (class 1259 OID 48199)
-- Dependencies: 524
-- Name: expert_raiting_section_part_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_raiting_section_part_pk ON expert_raiting_section_part USING btree (oid);


--
-- TOC entry 8278 (class 1259 OID 48200)
-- Dependencies: 525
-- Name: expert_raiting_sections_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_raiting_sections_pk ON expert_raiting_sections USING btree (oid);


--
-- TOC entry 8283 (class 1259 OID 48201)
-- Dependencies: 526
-- Name: expert_result_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX expert_result_idx ON expert_result USING btree (lpu);


--
-- TOC entry 8286 (class 1259 OID 48202)
-- Dependencies: 527
-- Name: expert_templations_parts_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_templations_parts_pk ON expert_templations_parts USING btree (oid);


--
-- TOC entry 8291 (class 1259 OID 48203)
-- Dependencies: 528
-- Name: expert_templations_sections_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX expert_templations_sections_pk ON expert_templations_sections USING btree (oid);


--
-- TOC entry 8310 (class 1259 OID 48204)
-- Dependencies: 531 531
-- Name: export_cod_people_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_idx ON export_cod_people USING btree (upper((lastname)::text) varchar_ops);


--
-- TOC entry 8311 (class 1259 OID 48205)
-- Dependencies: 531
-- Name: export_cod_people_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_idx1 ON export_cod_people USING btree (lastname);


--
-- TOC entry 8312 (class 1259 OID 48206)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_addresse ON export_cod_people USING btree (addressex1);


--
-- TOC entry 8313 (class 1259 OID 48207)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_addresse2 ON export_cod_people USING btree (addressex2);


--
-- TOC entry 8314 (class 1259 OID 48208)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_benefitt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_benefitt ON export_cod_people USING btree (benefittype);


--
-- TOC entry 8315 (class 1259 OID 48209)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_category; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_category ON export_cod_people USING btree (category);


--
-- TOC entry 8316 (class 1259 OID 48210)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_company ON export_cod_people USING btree (company);


--
-- TOC entry 8317 (class 1259 OID 48211)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_district ON export_cod_people USING btree (district);


--
-- TOC entry 8318 (class 1259 OID 48212)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_lpu ON export_cod_people USING btree (lpu);


--
-- TOC entry 8319 (class 1259 OID 48213)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_pacient; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_pacient ON export_cod_people USING btree (pacient);


--
-- TOC entry 8320 (class 1259 OID 48214)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_peopledo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_peopledo ON export_cod_people USING btree (benefitdoctype);


--
-- TOC entry 8321 (class 1259 OID 48215)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_peopledo2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_peopledo2 ON export_cod_people USING btree (peopledoctype);


--
-- TOC entry 8322 (class 1259 OID 48216)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_peoplepo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_peoplepo ON export_cod_people USING btree (peoplepost);


--
-- TOC entry 8323 (class 1259 OID 48217)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_professi; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_professi ON export_cod_people USING btree (profession);


--
-- TOC entry 8324 (class 1259 OID 48218)
-- Dependencies: 531
-- Name: export_cod_people_ix_fk_people_vregion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX export_cod_people_ix_fk_people_vregion ON export_cod_people USING btree (region);


--
-- TOC entry 7678 (class 1259 OID 48219)
-- Dependencies: 328
-- Name: fk_areal_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX fk_areal_otdel ON areal USING btree (otdel_id);


--
-- TOC entry 9347 (class 1259 OID 48220)
-- Dependencies: 888
-- Name: fk_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX fk_lpu ON response_people USING btree (lpu);


--
-- TOC entry 9350 (class 1259 OID 48221)
-- Dependencies: 889
-- Name: fk_lpu2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX fk_lpu2 ON response_people_history USING btree (lpu);


--
-- TOC entry 8662 (class 1259 OID 48222)
-- Dependencies: 666
-- Name: fkix_medicalcare_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX fkix_medicalcare_parent ON medicalcare USING btree (parent);


--
-- TOC entry 8372 (class 1259 OID 48223)
-- Dependencies: 552
-- Name: form6_calc_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX form6_calc_idx ON form6_calc USING btree (lpu);


--
-- TOC entry 8373 (class 1259 OID 48224)
-- Dependencies: 554 554
-- Name: form6_types_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX form6_types_idx ON form6_types USING btree (oid, val);


--
-- TOC entry 8376 (class 1259 OID 48225)
-- Dependencies: 556
-- Name: form_smid_by_form_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX form_smid_by_form_id ON form_smid USING btree (form_id);


--
-- TOC entry 8379 (class 1259 OID 48226)
-- Dependencies: 557 557
-- Name: forms_mkb10_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX forms_mkb10_idx ON forms_mkb10 USING btree (form_name, fc_mkb10);


--
-- TOC entry 8380 (class 1259 OID 48227)
-- Dependencies: 557
-- Name: forms_mkb10_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX forms_mkb10_idx1 ON forms_mkb10 USING btree (form_name);


--
-- TOC entry 8381 (class 1259 OID 48228)
-- Dependencies: 557 557
-- Name: forms_mkb10_idx2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX forms_mkb10_idx2 ON forms_mkb10 USING btree (form_name, fn_shablonnum);


--
-- TOC entry 7915 (class 1259 OID 48229)
-- Dependencies: 399
-- Name: i_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX i_parent ON hcategory USING btree (parent);


--
-- TOC entry 9826 (class 1259 OID 48230)
-- Dependencies: 1036
-- Name: i_peoples2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX i_peoples2 ON tuberculez USING btree (people_oid);


--
-- TOC entry 8422 (class 1259 OID 48231)
-- Dependencies: 575 575
-- Name: ib_mkab_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ib_mkab_idx ON ib_mkab USING btree (presc_id, mdoc_id);


--
-- TOC entry 8098 (class 1259 OID 48238)
-- Dependencies: 467 467
-- Name: idx$$_18670001; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "idx$$_18670001" ON schedule_p USING btree (peoplescheduleplace, gcrecord);


--
-- TOC entry 8257 (class 1259 OID 48239)
-- Dependencies: 521 521
-- Name: idx_event_gc_s; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX idx_event_gc_s ON event USING btree (gcrecord, starton);


--
-- TOC entry 8448 (class 1259 OID 48240)
-- Dependencies: 590
-- Name: idx_infotypename_en; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX idx_infotypename_en ON infotype USING btree (infotypename_en);


--
-- TOC entry 8449 (class 1259 OID 48241)
-- Dependencies: 590
-- Name: idx_infotypename_ru; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX idx_infotypename_ru ON infotype USING btree (infotypename_ru);


--
-- TOC entry 9058 (class 1259 OID 48242)
-- Dependencies: 805
-- Name: idx_people_id2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX idx_people_id2 ON prenatal USING btree (people_oid);


--
-- TOC entry 8149 (class 1259 OID 48243)
-- Dependencies: 486
-- Name: idx_post_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX idx_post_id ON post USING btree (id);


--
-- TOC entry 9100 (class 1259 OID 48244)
-- Dependencies: 817
-- Name: idx_presc_schedule_schedule_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX idx_presc_schedule_schedule_id ON presc_schedule USING btree (shedule_id);


--
-- TOC entry 9338 (class 1259 OID 48245)
-- Dependencies: 886
-- Name: idx_report_template_filename; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX idx_report_template_filename ON report_template USING btree (filename);


--
-- TOC entry 8099 (class 1259 OID 48246)
-- Dependencies: 467
-- Name: idx_schedule$gcrecord; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "idx_schedule$gcrecord" ON schedule_p USING btree (gcrecord);


--
-- TOC entry 8100 (class 1259 OID 48247)
-- Dependencies: 467 467 467
-- Name: idx_schedule$people_gc_place; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "idx_schedule$people_gc_place" ON schedule_p USING btree (peoplescheduleplace, gcrecord, updatepeopledate);


--
-- TOC entry 8533 (class 1259 OID 48248)
-- Dependencies: 618 618 618
-- Name: idx_u_licence; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX idx_u_licence ON licence USING btree (licence_series, licence_number, licence_registration);


--
-- TOC entry 8258 (class 1259 OID 48249)
-- Dependencies: 521
-- Name: iendon_event; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX iendon_event ON event USING btree (endon);


--
-- TOC entry 8568 (class 1259 OID 48250)
-- Dependencies: 634 634
-- Name: index_1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX index_1 ON lpu_direction USING btree (lpu_id, lpu_direction_id);


--
-- TOC entry 7631 (class 1259 OID 48251)
-- Dependencies: 317
-- Name: insurance_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX insurance_idx ON insurance USING btree (state);


--
-- TOC entry 9403 (class 1259 OID 48254)
-- Dependencies: 907 907 907
-- Name: ipeople_peoplescheduleplace; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipeople_peoplescheduleplace ON schedule USING btree (people, peoplescheduleplace, updatepeopledate);


--
-- TOC entry 9404 (class 1259 OID 48255)
-- Dependencies: 907 907
-- Name: ipeople_place_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipeople_place_lpu ON schedule USING btree (people, peoplescheduleplace);


--
-- TOC entry 9405 (class 1259 OID 48256)
-- Dependencies: 907 907 907
-- Name: ipeople_place_lpu_date; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipeople_place_lpu_date ON schedule USING btree (people, peoplescheduleplace, updatepeopledate);


--
-- TOC entry 8101 (class 1259 OID 48257)
-- Dependencies: 467 467 467
-- Name: ipeople_place_lpu_p; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipeople_place_lpu_p ON schedule_p USING btree (people, peoplescheduleplace, lpu);


--
-- TOC entry 9406 (class 1259 OID 48258)
-- Dependencies: 907 907
-- Name: ipresctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipresctype ON schedule USING btree (presctype, insite);


--
-- TOC entry 9407 (class 1259 OID 48259)
-- Dependencies: 907 907
-- Name: ipresctype_sysuser_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipresctype_sysuser_lpu ON schedule USING btree (sysuser, presctype);


--
-- TOC entry 8102 (class 1259 OID 48260)
-- Dependencies: 467 467 467
-- Name: ipresctype_sysuser_lpu_p; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipresctype_sysuser_lpu_p ON schedule_p USING btree (sysuser, presctype, lpu);


--
-- TOC entry 9408 (class 1259 OID 48261)
-- Dependencies: 907 907 907
-- Name: ipresctype_sysuser_lpu_starton; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ipresctype_sysuser_lpu_starton ON schedule USING btree (sysuser, presctype, starton);


--
-- TOC entry 9729 (class 1259 OID 48262)
-- Dependencies: 1004 1004
-- Name: irolesusers_sysuserus_2761b31e; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX irolesusers_sysuserus_2761b31e ON sysuserusers_sysroleroles USING btree (roles, users);


--
-- TOC entry 8259 (class 1259 OID 48263)
-- Dependencies: 521
-- Name: istarton_event; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX istarton_event ON event USING btree (starton);


--
-- TOC entry 9409 (class 1259 OID 48264)
-- Dependencies: 907 907 907 907
-- Name: isysuser_isnapronli_state; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX isysuser_isnapronli_state ON schedule USING btree (sysuser, isnapronly, state, insite);


--
-- TOC entry 8103 (class 1259 OID 48267)
-- Dependencies: 467 467 467 467
-- Name: isysuser_isnapronli_state_p; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX isysuser_isnapronli_state_p ON schedule_p USING btree (sysuser, isnapronly, state, insite);


--
-- TOC entry 8157 (class 1259 OID 48268)
-- Dependencies: 488 488
-- Name: isysuser_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX isysuser_otdel ON sotr USING btree (otdel, sysuser);


--
-- TOC entry 7530 (class 1259 OID 48269)
-- Dependencies: 175 175
-- Name: iu_mfolder$parent_id$id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "iu_mfolder$parent_id$id" ON presctypefolder USING btree (parent_id, id);


--
-- TOC entry 9086 (class 1259 OID 48270)
-- Dependencies: 813 813 813
-- Name: iu_presc_parval$presc_mpar_val; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "iu_presc_parval$presc_mpar_val" ON presc_parval USING btree (presc_id, mparam_id, value);


--
-- TOC entry 9087 (class 1259 OID 48271)
-- Dependencies: 813 813
-- Name: iu_presc_parval$presc_mparam; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "iu_presc_parval$presc_mparam" ON presc_parval USING btree (presc_id, mparam_id);


--
-- TOC entry 9507 (class 1259 OID 48272)
-- Dependencies: 932
-- Name: iu_sicklist$num; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "iu_sicklist$num" ON sicklist USING btree (num);


--
-- TOC entry 7762 (class 1259 OID 48273)
-- Dependencies: 356
-- Name: ix_benefit_employee_upload_foms_title; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_benefit_employee_upload_foms_title ON benefit_employee_upload USING btree (foms_title);


--
-- TOC entry 7789 (class 1259 OID 48274)
-- Dependencies: 365
-- Name: ix_bill_appendix; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_bill_appendix ON bill USING btree (appendix_id);


--
-- TOC entry 7792 (class 1259 OID 48275)
-- Dependencies: 366
-- Name: ix_bill_uslug_bill; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_bill_uslug_bill ON bill_uslug USING btree (bill_id);


--
-- TOC entry 7793 (class 1259 OID 48276)
-- Dependencies: 366
-- Name: ix_bill_uslug_resc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_bill_uslug_resc ON bill_uslug USING btree (presc_id);


--
-- TOC entry 8927 (class 1259 OID 48277)
-- Dependencies: 761
-- Name: ix_birthday_person; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_birthday_person ON person USING btree (birthday);


--
-- TOC entry 8680 (class 1259 OID 48278)
-- Dependencies: 673
-- Name: ix_codemkb10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_codemkb10 ON mkb_10 USING btree (code);


--
-- TOC entry 9137 (class 1259 OID 48279)
-- Dependencies: 828
-- Name: ix_data_print_prnt_tln; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_data_print_prnt_tln ON print_talon USING btree (print_date);


--
-- TOC entry 8097 (class 1259 OID 48280)
-- Dependencies: 466
-- Name: ix_direction$schedule; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_direction$schedule" ON direction USING btree (schedule_id);


--
-- TOC entry 8248 (class 1259 OID 48281)
-- Dependencies: 519 519
-- Name: ix_ecompany_table; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_ecompany_table ON etable USING btree (ecompany_id, name);


--
-- TOC entry 8196 (class 1259 OID 48282)
-- Dependencies: 504 504
-- Name: ix_eown_code; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_eown_code ON eown USING btree (upper((code)::text));


--
-- TOC entry 8197 (class 1259 OID 48283)
-- Dependencies: 504 504
-- Name: ix_etable_etheir; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_etable_etheir ON eown USING btree (etable_id, etheir_id);


--
-- TOC entry 8249 (class 1259 OID 48284)
-- Dependencies: 519 519
-- Name: ix_etable_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_etable_name ON etable USING btree (upper((name)::text));


--
-- TOC entry 8252 (class 1259 OID 48285)
-- Dependencies: 520 520
-- Name: ix_etheir_code; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_etheir_code ON etheir USING btree (upper((code)::text));


--
-- TOC entry 8260 (class 1259 OID 48286)
-- Dependencies: 521
-- Name: ix_event$recurrencepattern; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_event$recurrencepattern" ON event USING btree (recurrencepattern);


--
-- TOC entry 8858 (class 1259 OID 48287)
-- Dependencies: 740
-- Name: ix_fk_PAY_AGREEMENT_PAY_AGREEMENT_ST; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_PAY_AGREEMENT_PAY_AGREEMENT_ST" ON pay_agreement USING btree (status);


--
-- TOC entry 7549 (class 1259 OID 48288)
-- Dependencies: 213
-- Name: ix_fk_addresse_address_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_addresse_address_ ON addressex USING btree (address_type);


--
-- TOC entry 7550 (class 1259 OID 48289)
-- Dependencies: 213
-- Name: ix_fk_addresse_tkladrsp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_addresse_tkladrsp ON addressex USING btree (tkladr);


--
-- TOC entry 7604 (class 1259 OID 48290)
-- Dependencies: 311
-- Name: ix_fk_age_grou_age_grou; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_age_grou_age_grou ON age_group USING btree (age_group_type);


--
-- TOC entry 7610 (class 1259 OID 48291)
-- Dependencies: 312
-- Name: ix_fk_age_grou_age_grou2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_age_grou_age_grou2 ON age_group_history USING btree (age_group_type);


--
-- TOC entry 7605 (class 1259 OID 48292)
-- Dependencies: 311
-- Name: ix_fk_age_grou_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_age_grou_otdel ON age_group USING btree (otdel);


--
-- TOC entry 7611 (class 1259 OID 48293)
-- Dependencies: 312
-- Name: ix_fk_age_grou_otdel2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_age_grou_otdel2 ON age_group_history USING btree (otdel);


--
-- TOC entry 9800 (class 1259 OID 48294)
-- Dependencies: 1029
-- Name: ix_fk_all_columns; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_all_columns ON trsf_columns USING btree (all_columns_id);


--
-- TOC entry 7619 (class 1259 OID 48295)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_arrivepl; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_arrivepl ON ambtalon USING btree (arriveplace);


--
-- TOC entry 7620 (class 1259 OID 48296)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_arrivere; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_arrivere ON ambtalon USING btree (arrivereason);


--
-- TOC entry 7621 (class 1259 OID 48297)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_insuranc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_insuranc ON ambtalon USING btree (insurance);


--
-- TOC entry 7622 (class 1259 OID 48298)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_pacient; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_pacient ON ambtalon USING btree (pacient);


--
-- TOC entry 7623 (class 1259 OID 48299)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_sysuser ON ambtalon USING btree (spec1);


--
-- TOC entry 7624 (class 1259 OID 48300)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_sysuser2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_sysuser2 ON ambtalon USING btree (spec2);


--
-- TOC entry 7625 (class 1259 OID 48301)
-- Dependencies: 315
-- Name: ix_fk_ambtalon_talonres; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtalon_talonres ON ambtalon USING btree (talonresult);


--
-- TOC entry 7646 (class 1259 OID 48302)
-- Dependencies: 320
-- Name: ix_fk_ambtick_diag_diag; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtick_diag_diag ON ambtick_diag USING btree (diag_oid);


--
-- TOC entry 7647 (class 1259 OID 48303)
-- Dependencies: 320
-- Name: ix_fk_ambtick_diag_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtick_diag_mdoc ON ambtick_diag USING btree (mdoc_oid);


--
-- TOC entry 7648 (class 1259 OID 48304)
-- Dependencies: 320
-- Name: ix_fk_ambtick_diag_ticket; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambtick_diag_ticket ON ambtick_diag USING btree (ticket_oid);


--
-- TOC entry 7651 (class 1259 OID 48305)
-- Dependencies: 322
-- Name: ix_fk_ambticke_ambtick_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_ambtick_ ON ambticket USING btree (status_id);


--
-- TOC entry 7652 (class 1259 OID 48306)
-- Dependencies: 322
-- Name: ix_fk_ambticke_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_company ON ambticket USING btree (refer_id);


--
-- TOC entry 7653 (class 1259 OID 48307)
-- Dependencies: 322
-- Name: ix_fk_ambticke_dispstat; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_dispstat ON ambticket USING btree (dispstate_id);


--
-- TOC entry 7654 (class 1259 OID 48308)
-- Dependencies: 322
-- Name: ix_fk_ambticke_insuranc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_insuranc ON ambticket USING btree (idoc_id);


--
-- TOC entry 7655 (class 1259 OID 48309)
-- Dependencies: 322
-- Name: ix_fk_ambticke_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_otdel ON ambticket USING btree (otdel);


--
-- TOC entry 7656 (class 1259 OID 48310)
-- Dependencies: 322
-- Name: ix_fk_ambticke_servplac; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_servplac ON ambticket USING btree (servplace_id);


--
-- TOC entry 7657 (class 1259 OID 48311)
-- Dependencies: 322
-- Name: ix_fk_ambticke_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_sotr ON ambticket USING btree (empcancel_id);


--
-- TOC entry 7658 (class 1259 OID 48312)
-- Dependencies: 322
-- Name: ix_fk_ambticke_sotr2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_sotr2 ON ambticket USING btree (empc_id);


--
-- TOC entry 7659 (class 1259 OID 48313)
-- Dependencies: 322
-- Name: ix_fk_ambticke_sotr3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_sotr3 ON ambticket USING btree (empo_id);


--
-- TOC entry 7660 (class 1259 OID 48314)
-- Dependencies: 322
-- Name: ix_fk_ambticke_standart; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_standart ON ambticket USING btree (med_help_id);


--
-- TOC entry 7661 (class 1259 OID 48315)
-- Dependencies: 322
-- Name: ix_fk_ambticke_tick_res; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_tick_res ON ambticket USING btree (result_id);


--
-- TOC entry 7662 (class 1259 OID 48316)
-- Dependencies: 322
-- Name: ix_fk_ambticke_tick_sub; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_tick_sub ON ambticket USING btree (subresult_id);


--
-- TOC entry 7663 (class 1259 OID 48317)
-- Dependencies: 322
-- Name: ix_fk_ambticke_travm; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_travm ON ambticket USING btree (travm_id);


--
-- TOC entry 7664 (class 1259 OID 48318)
-- Dependencies: 322
-- Name: ix_fk_ambticke_visit_go; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticke_visit_go ON ambticket USING btree (goal_id);


--
-- TOC entry 7665 (class 1259 OID 48319)
-- Dependencies: 322
-- Name: ix_fk_ambticket_medicalcare; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_ambticket_medicalcare ON ambticket USING btree (medicalcare);


--
-- TOC entry 7670 (class 1259 OID 48320)
-- Dependencies: 325
-- Name: ix_fk_answercl_errorcli; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_answercl_errorcli ON answerclientmessages USING btree (errmess);


--
-- TOC entry 7671 (class 1259 OID 48321)
-- Dependencies: 325
-- Name: ix_fk_answercl_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_answercl_people ON answerclientmessages USING btree (peopleanswer);


--
-- TOC entry 7683 (class 1259 OID 48322)
-- Dependencies: 329
-- Name: ix_fk_areal_areal_ty2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_areal_ty2 ON areal_history USING btree (arealtype_oid);


--
-- TOC entry 7684 (class 1259 OID 48323)
-- Dependencies: 329
-- Name: ix_fk_areal_otdel2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_otdel2 ON areal_history USING btree (otdel_id);


--
-- TOC entry 7695 (class 1259 OID 48324)
-- Dependencies: 333
-- Name: ix_fk_areal_people_hist_areal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_people_hist_areal ON areal_people_hist USING btree (areal);


--
-- TOC entry 7696 (class 1259 OID 48325)
-- Dependencies: 333
-- Name: ix_fk_areal_people_hist_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_people_hist_people ON areal_people_hist USING btree (people);


--
-- TOC entry 7697 (class 1259 OID 48326)
-- Dependencies: 333
-- Name: ix_fk_areal_people_hist_reason_move; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_people_hist_reason_move ON areal_people_hist USING btree (reason_move);


--
-- TOC entry 7698 (class 1259 OID 48327)
-- Dependencies: 333
-- Name: ix_fk_areal_people_hist_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_people_hist_sotr ON areal_people_hist USING btree (sotr);


--
-- TOC entry 7699 (class 1259 OID 48328)
-- Dependencies: 333
-- Name: ix_fk_areal_people_hist_type_move; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_people_hist_type_move ON areal_people_hist USING btree (type_move);


--
-- TOC entry 7705 (class 1259 OID 48329)
-- Dependencies: 335
-- Name: ix_fk_areal_so_areal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_so_areal ON areal_sotr USING btree (areal_id);


--
-- TOC entry 7706 (class 1259 OID 48330)
-- Dependencies: 335
-- Name: ix_fk_areal_so_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_areal_so_sotr ON areal_sotr USING btree (sotr_id);


--
-- TOC entry 7712 (class 1259 OID 48331)
-- Dependencies: 337
-- Name: ix_fk_arrivals_sanatori; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_arrivals_sanatori ON arrivals USING btree (sanatorium);


--
-- TOC entry 7725 (class 1259 OID 48332)
-- Dependencies: 345
-- Name: ix_fk_award_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_award_people ON award USING btree (people);


--
-- TOC entry 7728 (class 1259 OID 48333)
-- Dependencies: 346
-- Name: ix_fk_bank_acc_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bank_acc_company ON bank_account USING btree (company);


--
-- TOC entry 7734 (class 1259 OID 48334)
-- Dependencies: 347
-- Name: ix_fk_bank_acc_company2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bank_acc_company2 ON bank_account_history USING btree (company);


--
-- TOC entry 7729 (class 1259 OID 48335)
-- Dependencies: 346
-- Name: ix_fk_bank_acc_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bank_acc_lpu ON bank_account USING btree (lpu);


--
-- TOC entry 7735 (class 1259 OID 48336)
-- Dependencies: 347
-- Name: ix_fk_bank_acc_lpu2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bank_acc_lpu2 ON bank_account_history USING btree (lpu);


--
-- TOC entry 7742 (class 1259 OID 48337)
-- Dependencies: 350
-- Name: ix_fk_bed_info_bed; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bed_info_bed ON bed_info USING btree (bed);


--
-- TOC entry 7743 (class 1259 OID 48338)
-- Dependencies: 350
-- Name: ix_fk_bed_info_bed_profile; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bed_info_bed_profile ON bed_info USING btree (bed_profile);


--
-- TOC entry 7746 (class 1259 OID 48339)
-- Dependencies: 351
-- Name: ix_fk_bed_oper_bed; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bed_oper_bed ON bed_oper USING btree (bed);


--
-- TOC entry 7747 (class 1259 OID 48340)
-- Dependencies: 351
-- Name: ix_fk_bed_oper_bed_oper; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bed_oper_bed_oper ON bed_oper USING btree (bed_oper_type);


--
-- TOC entry 7736 (class 1259 OID 48341)
-- Dependencies: 348
-- Name: ix_fk_bed_room; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_bed_room ON bed USING btree (room);


--
-- TOC entry 7754 (class 1259 OID 48342)
-- Dependencies: 354
-- Name: ix_fk_benefit_benefit_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_benefit_ ON benefit USING btree (benefit_type);


--
-- TOC entry 7767 (class 1259 OID 48343)
-- Dependencies: 358
-- Name: ix_fk_benefit_finansin_benefit_financin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_finansin_benefit_financin ON benefit_finansing_lgot_type USING btree (benefit_finansing);


--
-- TOC entry 7768 (class 1259 OID 48344)
-- Dependencies: 358
-- Name: ix_fk_benefit_finansin_recipe_lgot_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_finansin_recipe_lgot_type ON benefit_finansing_lgot_type USING btree (lgot_type);


--
-- TOC entry 7771 (class 1259 OID 48345)
-- Dependencies: 359
-- Name: ix_fk_benefit_medic_benefit_financin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_medic_benefit_financin ON benefit_medic USING btree (benefit_financing);


--
-- TOC entry 7772 (class 1259 OID 48346)
-- Dependencies: 359
-- Name: ix_fk_benefit_medic_latinnames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_medic_latinnames ON benefit_medic USING btree (latinnames);


--
-- TOC entry 7776 (class 1259 OID 48347)
-- Dependencies: 360
-- Name: ix_fk_benefit_medic_pr_benefit_medic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_medic_pr_benefit_medic ON benefit_medic_price USING btree (benefit_medic);


--
-- TOC entry 7773 (class 1259 OID 48348)
-- Dependencies: 359
-- Name: ix_fk_benefit_medic_tradenames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_medic_tradenames ON benefit_medic USING btree (tradenames);


--
-- TOC entry 7755 (class 1259 OID 48349)
-- Dependencies: 354
-- Name: ix_fk_benefit_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_mkb_10 ON benefit USING btree (mkb10);


--
-- TOC entry 7756 (class 1259 OID 48350)
-- Dependencies: 354
-- Name: ix_fk_benefit_nosology; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_nosology ON benefit USING btree (nosology);


--
-- TOC entry 7757 (class 1259 OID 48351)
-- Dependencies: 354
-- Name: ix_fk_benefit_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_benefit_people ON benefit USING btree (people);


--
-- TOC entry 7799 (class 1259 OID 48352)
-- Dependencies: 369
-- Name: ix_fk_blog_article_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_blog_article_sotr ON blog_article USING btree (sotr_create);


--
-- TOC entry 7802 (class 1259 OID 48353)
-- Dependencies: 370
-- Name: ix_fk_blog_log_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_blog_log_sotr ON blog_log USING btree (sotr_action);


--
-- TOC entry 7805 (class 1259 OID 48354)
-- Dependencies: 371
-- Name: ix_fk_blog_rating_blog_article; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_blog_rating_blog_article ON blog_rating USING btree (blog_article);


--
-- TOC entry 7806 (class 1259 OID 48355)
-- Dependencies: 371
-- Name: ix_fk_blog_rating_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_blog_rating_people ON blog_rating USING btree (people);


--
-- TOC entry 7796 (class 1259 OID 48356)
-- Dependencies: 368
-- Name: ix_fk_blog_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_blog_sotr ON blog USING btree (sotr_create);


--
-- TOC entry 7809 (class 1259 OID 48357)
-- Dependencies: 372
-- Name: ix_fk_building_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_addresse ON building USING btree (address);


--
-- TOC entry 7831 (class 1259 OID 48358)
-- Dependencies: 376
-- Name: ix_fk_building_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_addresse2 ON building_history USING btree (address);


--
-- TOC entry 7810 (class 1259 OID 48359)
-- Dependencies: 372
-- Name: ix_fk_building_building; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building ON building USING btree (building_purpose);


--
-- TOC entry 7811 (class 1259 OID 48360)
-- Dependencies: 372
-- Name: ix_fk_building_building10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building10 ON building USING btree (floor_type);


--
-- TOC entry 7812 (class 1259 OID 48361)
-- Dependencies: 372
-- Name: ix_fk_building_building11; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building11 ON building USING btree (power_supply);


--
-- TOC entry 7852 (class 1259 OID 48362)
-- Dependencies: 380
-- Name: ix_fk_building_building12; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building12 ON building_price USING btree (building);


--
-- TOC entry 7861 (class 1259 OID 48363)
-- Dependencies: 384
-- Name: ix_fk_building_building13; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building13 ON building_state USING btree (building);


--
-- TOC entry 7862 (class 1259 OID 48364)
-- Dependencies: 384
-- Name: ix_fk_building_building14; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building14 ON building_state USING btree (current_state);


--
-- TOC entry 7832 (class 1259 OID 48365)
-- Dependencies: 376
-- Name: ix_fk_building_building15; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building15 ON building_history USING btree (communication_type);


--
-- TOC entry 7833 (class 1259 OID 48366)
-- Dependencies: 376
-- Name: ix_fk_building_building16; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building16 ON building_history USING btree (heating_type);


--
-- TOC entry 7834 (class 1259 OID 48367)
-- Dependencies: 376
-- Name: ix_fk_building_building17; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building17 ON building_history USING btree (hot_water_type);


--
-- TOC entry 7835 (class 1259 OID 48368)
-- Dependencies: 376
-- Name: ix_fk_building_building18; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building18 ON building_history USING btree (supporting_structure);


--
-- TOC entry 7836 (class 1259 OID 48369)
-- Dependencies: 376
-- Name: ix_fk_building_building19; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building19 ON building_history USING btree (power_supply);


--
-- TOC entry 7813 (class 1259 OID 48370)
-- Dependencies: 372
-- Name: ix_fk_building_building2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building2 ON building USING btree (hot_water_type);


--
-- TOC entry 7837 (class 1259 OID 48371)
-- Dependencies: 376
-- Name: ix_fk_building_building20; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building20 ON building_history USING btree (project_type);


--
-- TOC entry 7838 (class 1259 OID 48372)
-- Dependencies: 376
-- Name: ix_fk_building_building21; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building21 ON building_history USING btree (building_purpose);


--
-- TOC entry 7839 (class 1259 OID 48373)
-- Dependencies: 376
-- Name: ix_fk_building_building22; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building22 ON building_history USING btree (equipment_ownership);


--
-- TOC entry 7840 (class 1259 OID 48374)
-- Dependencies: 376
-- Name: ix_fk_building_building23; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building23 ON building_history USING btree (building_type);


--
-- TOC entry 7841 (class 1259 OID 48375)
-- Dependencies: 376
-- Name: ix_fk_building_building24; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building24 ON building_history USING btree (sewerage_type);


--
-- TOC entry 7842 (class 1259 OID 48376)
-- Dependencies: 376
-- Name: ix_fk_building_building25; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building25 ON building_history USING btree (floor_type);


--
-- TOC entry 7814 (class 1259 OID 48377)
-- Dependencies: 372
-- Name: ix_fk_building_building3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building3 ON building USING btree (project_type);


--
-- TOC entry 7815 (class 1259 OID 48378)
-- Dependencies: 372
-- Name: ix_fk_building_building4; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building4 ON building USING btree (heating_type);


--
-- TOC entry 7816 (class 1259 OID 48379)
-- Dependencies: 372
-- Name: ix_fk_building_building5; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building5 ON building USING btree (supporting_structure);


--
-- TOC entry 7817 (class 1259 OID 48380)
-- Dependencies: 372
-- Name: ix_fk_building_building6; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building6 ON building USING btree (building_type);


--
-- TOC entry 7818 (class 1259 OID 48381)
-- Dependencies: 372
-- Name: ix_fk_building_building7; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building7 ON building USING btree (equipment_ownership);


--
-- TOC entry 7819 (class 1259 OID 48382)
-- Dependencies: 372
-- Name: ix_fk_building_building8; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building8 ON building USING btree (communication_type);


--
-- TOC entry 7820 (class 1259 OID 48383)
-- Dependencies: 372
-- Name: ix_fk_building_building9; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_building9 ON building USING btree (sewerage_type);


--
-- TOC entry 7821 (class 1259 OID 48384)
-- Dependencies: 372
-- Name: ix_fk_building_plot; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_building_plot ON building USING btree (plot);


--
-- TOC entry 7871 (class 1259 OID 48385)
-- Dependencies: 388
-- Name: ix_fk_cabinet_building; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cabinet_building ON cabinet USING btree (building);


--
-- TOC entry 7872 (class 1259 OID 48386)
-- Dependencies: 388
-- Name: ix_fk_cabinet_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cabinet_otdel ON cabinet USING btree (otdel);


--
-- TOC entry 7877 (class 1259 OID 48387)
-- Dependencies: 390
-- Name: ix_fk_cardempl_medicalc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_medicalc ON cardemployee USING btree (care);


--
-- TOC entry 7878 (class 1259 OID 48388)
-- Dependencies: 390
-- Name: ix_fk_cardempl_medicalc2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_medicalc2 ON cardemployee USING btree (conditions);


--
-- TOC entry 7879 (class 1259 OID 48389)
-- Dependencies: 390
-- Name: ix_fk_cardempl_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_otdel ON cardemployee USING btree (otdel);


--
-- TOC entry 7880 (class 1259 OID 48390)
-- Dependencies: 390
-- Name: ix_fk_cardempl_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_people ON cardemployee USING btree (people);


--
-- TOC entry 7881 (class 1259 OID 48391)
-- Dependencies: 390
-- Name: ix_fk_cardempl_position; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_position ON cardemployee USING btree ("position");


--
-- TOC entry 7882 (class 1259 OID 48392)
-- Dependencies: 390
-- Name: ix_fk_cardempl_post; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_post ON cardemployee USING btree (post);


--
-- TOC entry 7883 (class 1259 OID 48393)
-- Dependencies: 390
-- Name: ix_fk_cardempl_recordty; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_recordty ON cardemployee USING btree (typein);


--
-- TOC entry 7884 (class 1259 OID 48394)
-- Dependencies: 390
-- Name: ix_fk_cardempl_recordty2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_recordty2 ON cardemployee USING btree (typeout);


--
-- TOC entry 7885 (class 1259 OID 48395)
-- Dependencies: 390
-- Name: ix_fk_cardempl_regime; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_cardempl_regime ON cardemployee USING btree (regime);


--
-- TOC entry 7892 (class 1259 OID 48396)
-- Dependencies: 393
-- Name: ix_fk_changelp_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_addresse ON changelpu USING btree (address_live);


--
-- TOC entry 7893 (class 1259 OID 48397)
-- Dependencies: 393
-- Name: ix_fk_changelp_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_addresse2 ON changelpu USING btree (address_polis);


--
-- TOC entry 7894 (class 1259 OID 48398)
-- Dependencies: 393
-- Name: ix_fk_changelp_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_district ON changelpu USING btree (districtto);


--
-- TOC entry 7895 (class 1259 OID 48399)
-- Dependencies: 393
-- Name: ix_fk_changelp_district2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_district2 ON changelpu USING btree (districtfrom);


--
-- TOC entry 7896 (class 1259 OID 48400)
-- Dependencies: 393
-- Name: ix_fk_changelp_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_lpu ON changelpu USING btree (lputo);


--
-- TOC entry 7897 (class 1259 OID 48401)
-- Dependencies: 393
-- Name: ix_fk_changelp_lpu2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_lpu2 ON changelpu USING btree (lpufrom);


--
-- TOC entry 7898 (class 1259 OID 48402)
-- Dependencies: 393
-- Name: ix_fk_changelp_medhelpt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_medhelpt ON changelpu USING btree (medhelptype);


--
-- TOC entry 7899 (class 1259 OID 48403)
-- Dependencies: 393
-- Name: ix_fk_changelp_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_people ON changelpu USING btree (people);


--
-- TOC entry 7900 (class 1259 OID 48404)
-- Dependencies: 393
-- Name: ix_fk_changelp_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_sysuser ON changelpu USING btree (processuser);


--
-- TOC entry 7901 (class 1259 OID 48405)
-- Dependencies: 393
-- Name: ix_fk_changelp_sysuser2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_sysuser2 ON changelpu USING btree (sysuserto);


--
-- TOC entry 7902 (class 1259 OID 48406)
-- Dependencies: 393
-- Name: ix_fk_changelp_sysuser3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_changelp_sysuser3 ON changelpu USING btree (sysuserfrom);


--
-- TOC entry 7929 (class 1259 OID 48407)
-- Dependencies: 406
-- Name: ix_fk_clinical_clinical; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_clinical_clinical ON clinicalminservicesvalues USING btree (oidclinicalservice);


--
-- TOC entry 7924 (class 1259 OID 48411)
-- Dependencies: 404
-- Name: ix_fk_clinical_clinical2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_clinical_clinical2 ON clinicalminservices USING btree (oidclinical);


--
-- TOC entry 7953 (class 1259 OID 48412)
-- Dependencies: 414
-- Name: ix_fk_cod_buffer_transfer$lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_cod_buffer_transfer$lpu" ON cod_buffer_transfer USING btree (lpu);


--
-- TOC entry 7954 (class 1259 OID 48413)
-- Dependencies: 415
-- Name: ix_fk_comfort_comfort_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_comfort_comfort_ ON comfort USING btree (comfort_type);


--
-- TOC entry 7955 (class 1259 OID 48414)
-- Dependencies: 415
-- Name: ix_fk_comfort_room; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_comfort_room ON comfort USING btree (room);


--
-- TOC entry 7963 (class 1259 OID 48415)
-- Dependencies: 417
-- Name: ix_fk_comp_com_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_comp_com_company ON comp_comptype USING btree (company);


--
-- TOC entry 7964 (class 1259 OID 48416)
-- Dependencies: 417
-- Name: ix_fk_comp_com_companyt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_comp_com_companyt ON comp_comptype USING btree (companytype);


--
-- TOC entry 7970 (class 1259 OID 48417)
-- Dependencies: 419
-- Name: ix_fk_company__addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_company__addresse ON company_address USING btree (address);


--
-- TOC entry 7971 (class 1259 OID 48418)
-- Dependencies: 419
-- Name: ix_fk_company__company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_company__company ON company_address USING btree (company);


--
-- TOC entry 7965 (class 1259 OID 48419)
-- Dependencies: 418
-- Name: ix_fk_company_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_company_addresse ON company USING btree (address);


--
-- TOC entry 7966 (class 1259 OID 48423)
-- Dependencies: 418
-- Name: ix_fk_company_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_company_addresse2 ON company USING btree (addressfact);


--
-- TOC entry 7967 (class 1259 OID 48424)
-- Dependencies: 418
-- Name: ix_fk_company_vregion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_company_vregion ON company USING btree (region);


--
-- TOC entry 7995 (class 1259 OID 48425)
-- Dependencies: 429
-- Name: ix_fk_counterpart_gara_counterpart_cont; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_counterpart_gara_counterpart_cont ON counterpart_garanty_letter USING btree (contragent_docum_id);


--
-- TOC entry 8009 (class 1259 OID 48426)
-- Dependencies: 435
-- Name: ix_fk_court_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_court_addresse ON court USING btree (address);


--
-- TOC entry 8010 (class 1259 OID 48427)
-- Dependencies: 435
-- Name: ix_fk_court_plot; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_court_plot ON court USING btree (plot);


--
-- TOC entry 8778 (class 1259 OID 48428)
-- Dependencies: 710 710
-- Name: ix_fk_date_on; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_date_on ON oper_plan USING btree (lpu, date_on);


--
-- TOC entry 8026 (class 1259 OID 48429)
-- Dependencies: 441
-- Name: ix_fk_demand_c_demand; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_demand_c_demand ON demand_changes USING btree (demand);


--
-- TOC entry 8033 (class 1259 OID 48430)
-- Dependencies: 446
-- Name: ix_fk_demand_s_demand; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_demand_s_demand ON demand_schedule USING btree (demand);


--
-- TOC entry 8034 (class 1259 OID 48431)
-- Dependencies: 447
-- Name: ix_fk_demand_s_demand2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_demand_s_demand2 ON demand_standart USING btree (demand);


--
-- TOC entry 8044 (class 1259 OID 48432)
-- Dependencies: 451
-- Name: ix_fk_diag$diag_detect; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$diag_detect" ON diag USING btree (detect_id);


--
-- TOC entry 8045 (class 1259 OID 48433)
-- Dependencies: 451
-- Name: ix_fk_diag$diag_kind; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$diag_kind" ON diag USING btree (kind_id);


--
-- TOC entry 8046 (class 1259 OID 48434)
-- Dependencies: 451
-- Name: ix_fk_diag$diag_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$diag_type" ON diag USING btree (type_id);


--
-- TOC entry 8047 (class 1259 OID 48435)
-- Dependencies: 451
-- Name: ix_fk_diag$disp_stage; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$disp_stage" ON diag USING btree (disp_stage_id);


--
-- TOC entry 8048 (class 1259 OID 48436)
-- Dependencies: 451
-- Name: ix_fk_diag$disp_step; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$disp_step" ON diag USING btree (disp_step_id);


--
-- TOC entry 8049 (class 1259 OID 48437)
-- Dependencies: 451
-- Name: ix_fk_diag$dispgroup; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$dispgroup" ON diag USING btree (dispgroup_id);


--
-- TOC entry 8050 (class 1259 OID 48438)
-- Dependencies: 451
-- Name: ix_fk_diag$icd10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$icd10" ON diag USING btree (icd10_id);


--
-- TOC entry 8051 (class 1259 OID 48439)
-- Dependencies: 451
-- Name: ix_fk_diag$mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$mdoc" ON diag USING btree (mdoc_id);


--
-- TOC entry 8052 (class 1259 OID 48440)
-- Dependencies: 451
-- Name: ix_fk_diag$presc_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$presc_id" ON diag USING btree (presc_id);


--
-- TOC entry 8053 (class 1259 OID 48441)
-- Dependencies: 451
-- Name: ix_fk_diag$sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$sotr" ON diag USING btree (sotr_id);


--
-- TOC entry 8054 (class 1259 OID 48442)
-- Dependencies: 451
-- Name: ix_fk_diag$visit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_diag$visit" ON diag USING btree (visit_id);


--
-- TOC entry 8061 (class 1259 OID 48443)
-- Dependencies: 454
-- Name: ix_fk_diag_presc_model_diag; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diag_presc_model_diag ON diag_presc_model USING btree (diag);


--
-- TOC entry 8062 (class 1259 OID 48444)
-- Dependencies: 454
-- Name: ix_fk_diag_presc_model_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diag_presc_model_presc ON diag_presc_model USING btree (presc);


--
-- TOC entry 8063 (class 1259 OID 48445)
-- Dependencies: 454
-- Name: ix_fk_diag_presc_model_tmodel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diag_presc_model_tmodel ON diag_presc_model USING btree (model);


--
-- TOC entry 8071 (class 1259 OID 48446)
-- Dependencies: 459
-- Name: ix_fk_diary_diary_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diary_diary_type ON diary USING btree (diary_type);


--
-- TOC entry 8072 (class 1259 OID 48447)
-- Dependencies: 459
-- Name: ix_fk_diary_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diary_mdoc ON diary USING btree (mdoc);


--
-- TOC entry 8090 (class 1259 OID 48448)
-- Dependencies: 464
-- Name: ix_fk_dictiona_dictiona; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_dictiona_dictiona ON dictionary_right USING btree (dictionary);


--
-- TOC entry 8085 (class 1259 OID 48449)
-- Dependencies: 463
-- Name: ix_fk_dictionary_nsi_dictionary; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_dictionary_nsi_dictionary ON dictionary_nsi USING btree (dictionary);


--
-- TOC entry 8091 (class 1259 OID 48450)
-- Dependencies: 465
-- Name: ix_fk_diplomae_educatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diplomae_educatio ON diplomaeducation USING btree (educationinstitution);


--
-- TOC entry 8092 (class 1259 OID 48451)
-- Dependencies: 465
-- Name: ix_fk_diplomae_educatio2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diplomae_educatio2 ON diplomaeducation USING btree (educationtype);


--
-- TOC entry 8093 (class 1259 OID 48452)
-- Dependencies: 465
-- Name: ix_fk_diplomae_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diplomae_people ON diplomaeducation USING btree (people);


--
-- TOC entry 8094 (class 1259 OID 48453)
-- Dependencies: 465
-- Name: ix_fk_diplomae_speciali; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_diplomae_speciali ON diplomaeducation USING btree (specialities);


--
-- TOC entry 8108 (class 1259 OID 48454)
-- Dependencies: 471
-- Name: ix_fk_disp_car_diag2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_disp_car_diag2 ON disp_card_info USING btree (diag_main);


--
-- TOC entry 8109 (class 1259 OID 48455)
-- Dependencies: 471
-- Name: ix_fk_disp_car_disp_clo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_disp_car_disp_clo ON disp_card_info USING btree (cause_close);


--
-- TOC entry 8110 (class 1259 OID 48456)
-- Dependencies: 471
-- Name: ix_fk_disp_car_disp_gro; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_disp_car_disp_gro ON disp_card_info USING btree (disp_group);


--
-- TOC entry 8111 (class 1259 OID 48457)
-- Dependencies: 471
-- Name: ix_fk_disp_car_mdoc_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_disp_car_mdoc_id ON disp_card_info USING btree (mdoc_id);


--
-- TOC entry 8112 (class 1259 OID 48458)
-- Dependencies: 471
-- Name: ix_fk_disp_car_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_disp_car_sotr ON disp_card_info USING btree (disp_sotr);


--
-- TOC entry 8133 (class 1259 OID 48459)
-- Dependencies: 481
-- Name: ix_fk_district_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_district_district ON districtstreet USING btree (district);


--
-- TOC entry 8129 (class 1259 OID 48460)
-- Dependencies: 479
-- Name: ix_fk_district_medhelpt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_district_medhelpt ON district USING btree (helptype);


--
-- TOC entry 8130 (class 1259 OID 48461)
-- Dependencies: 479
-- Name: ix_fk_district_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_district_otdel ON district USING btree (otdel);


--
-- TOC entry 8134 (class 1259 OID 48462)
-- Dependencies: 481
-- Name: ix_fk_district_tkladrsp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_district_tkladrsp ON districtstreet USING btree (tkladr);


--
-- TOC entry 8185 (class 1259 OID 48463)
-- Dependencies: 498
-- Name: ix_fk_edizm_edizmtyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_edizm_edizmtyp ON edizm USING btree (edizmtype);


--
-- TOC entry 8206 (class 1259 OID 48464)
-- Dependencies: 506
-- Name: ix_fk_epicris_portal_l_epicris; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_epicris_portal_l_epicris ON epicris_portal_link USING btree (epicris);


--
-- TOC entry 8207 (class 1259 OID 48465)
-- Dependencies: 506
-- Name: ix_fk_epicris_portal_l_portal_mdoc_extr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_epicris_portal_l_portal_mdoc_extr ON epicris_portal_link USING btree (portal_extract);


--
-- TOC entry 8212 (class 1259 OID 48466)
-- Dependencies: 508
-- Name: ix_fk_equipmen_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_company ON equipment USING btree (company_supplier);


--
-- TOC entry 8213 (class 1259 OID 48467)
-- Dependencies: 508
-- Name: ix_fk_equipmen_company2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_company2 ON equipment USING btree (company_maker);


--
-- TOC entry 8214 (class 1259 OID 48468)
-- Dependencies: 508
-- Name: ix_fk_equipmen_equipmen; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen ON equipment USING btree (equipment_type);


--
-- TOC entry 8215 (class 1259 OID 48469)
-- Dependencies: 508
-- Name: ix_fk_equipmen_equipmen2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen2 ON equipment USING btree (equipment_model);


--
-- TOC entry 8216 (class 1259 OID 48470)
-- Dependencies: 508
-- Name: ix_fk_equipmen_equipmen3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen3 ON equipment USING btree (equipment_ownership);


--
-- TOC entry 8228 (class 1259 OID 48471)
-- Dependencies: 512
-- Name: ix_fk_equipmen_equipmen5; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen5 ON equipment_oper USING btree (equipment);


--
-- TOC entry 8229 (class 1259 OID 48472)
-- Dependencies: 512
-- Name: ix_fk_equipmen_equipmen6; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen6 ON equipment_oper USING btree (equipment_oper);


--
-- TOC entry 8236 (class 1259 OID 48473)
-- Dependencies: 515
-- Name: ix_fk_equipmen_equipmen7; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen7 ON equipment_price USING btree (equipmen);


--
-- TOC entry 8239 (class 1259 OID 48474)
-- Dependencies: 516
-- Name: ix_fk_equipmen_equipmen8; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_equipmen8 ON equipment_state USING btree (equipmen);


--
-- TOC entry 8217 (class 1259 OID 48475)
-- Dependencies: 508
-- Name: ix_fk_equipmen_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_equipmen_otdel ON equipment USING btree (otdel);


--
-- TOC entry 8244 (class 1259 OID 48476)
-- Dependencies: 518
-- Name: ix_fk_errorcli_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_errorcli_people ON errorclientmessages USING btree (people);


--
-- TOC entry 8245 (class 1259 OID 48477)
-- Dependencies: 518
-- Name: ix_fk_errorcli_vregion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_errorcli_vregion ON errorclientmessages USING btree (region);


--
-- TOC entry 8253 (class 1259 OID 48478)
-- Dependencies: 520
-- Name: ix_fk_etheir_etable; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_etheir_etable ON etheir USING btree (etable_id);


--
-- TOC entry 8267 (class 1259 OID 48479)
-- Dependencies: 523
-- Name: ix_fk_expert_raiting_ambticket; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_ambticket ON expert_raiting USING btree (ambticket_id);


--
-- TOC entry 8268 (class 1259 OID 48480)
-- Dependencies: 523
-- Name: ix_fk_expert_raiting_expert; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_expert ON expert_raiting USING btree (expert);


--
-- TOC entry 8269 (class 1259 OID 48481)
-- Dependencies: 523
-- Name: ix_fk_expert_raiting_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_mdoc ON expert_raiting USING btree (mdoc_id);


--
-- TOC entry 8279 (class 1259 OID 48482)
-- Dependencies: 525
-- Name: ix_fk_expert_raiting_s_expert_raiting; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_s_expert_raiting ON expert_raiting_sections USING btree (expert_raiting_id);


--
-- TOC entry 8274 (class 1259 OID 48483)
-- Dependencies: 524
-- Name: ix_fk_expert_raiting_s_expert_raiting_s; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_s_expert_raiting_s ON expert_raiting_section_part USING btree (expert_section_id);


--
-- TOC entry 8275 (class 1259 OID 48484)
-- Dependencies: 524
-- Name: ix_fk_expert_raiting_s_expert_templatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_s_expert_templatio ON expert_raiting_section_part USING btree (part_id);


--
-- TOC entry 8280 (class 1259 OID 48485)
-- Dependencies: 525
-- Name: ix_fk_expert_raiting_s_expert_templatio2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_s_expert_templatio2 ON expert_raiting_sections USING btree (section_id);


--
-- TOC entry 8270 (class 1259 OID 48486)
-- Dependencies: 523
-- Name: ix_fk_expert_raiting_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_raiting_sysuser ON expert_raiting USING btree (sysuser);


--
-- TOC entry 8287 (class 1259 OID 48487)
-- Dependencies: 527
-- Name: ix_fk_expert_templatio_expert_part_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_templatio_expert_part_type ON expert_templations_parts USING btree (expert_part_type);


--
-- TOC entry 8288 (class 1259 OID 48488)
-- Dependencies: 527
-- Name: ix_fk_expert_templatio_expert_templatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_expert_templatio_expert_templatio ON expert_templations_parts USING btree (expert_templations_sections);


--
-- TOC entry 8294 (class 1259 OID 48489)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_ambtick_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_ambtick_ ON export_cod_ambticket USING btree (status_id);


--
-- TOC entry 8295 (class 1259 OID 48490)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_company ON export_cod_ambticket USING btree (refer_id);


--
-- TOC entry 8296 (class 1259 OID 48491)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_dispstat; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_dispstat ON export_cod_ambticket USING btree (dispstate_id);


--
-- TOC entry 8297 (class 1259 OID 48492)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_insuranc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_insuranc ON export_cod_ambticket USING btree (idoc_id);


--
-- TOC entry 8298 (class 1259 OID 48493)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_otdel ON export_cod_ambticket USING btree (otdel);


--
-- TOC entry 8299 (class 1259 OID 48494)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_servplac; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_servplac ON export_cod_ambticket USING btree (servplace_id);


--
-- TOC entry 8300 (class 1259 OID 48495)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_sotr ON export_cod_ambticket USING btree (empcancel_id);


--
-- TOC entry 8301 (class 1259 OID 48496)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_sotr2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_sotr2 ON export_cod_ambticket USING btree (empc_id);


--
-- TOC entry 8302 (class 1259 OID 48497)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_sotr3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_sotr3 ON export_cod_ambticket USING btree (empo_id);


--
-- TOC entry 8303 (class 1259 OID 48498)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_standart; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_standart ON export_cod_ambticket USING btree (med_help_id);


--
-- TOC entry 8304 (class 1259 OID 48499)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_tick_res; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_tick_res ON export_cod_ambticket USING btree (result_id);


--
-- TOC entry 8305 (class 1259 OID 48500)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_tick_sub; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_tick_sub ON export_cod_ambticket USING btree (subresult_id);


--
-- TOC entry 8306 (class 1259 OID 48501)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_travm; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_travm ON export_cod_ambticket USING btree (travm_id);


--
-- TOC entry 8307 (class 1259 OID 48502)
-- Dependencies: 529
-- Name: ix_fk_export_cod_ambticket_visit_go; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_export_cod_ambticket_visit_go ON export_cod_ambticket USING btree (goal_id);


--
-- TOC entry 8333 (class 1259 OID 48503)
-- Dependencies: 537
-- Name: ix_fk_favorite_insurco_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_insurco_company ON favorite_insurcompany USING btree (insurcompany);


--
-- TOC entry 8334 (class 1259 OID 48504)
-- Dependencies: 537
-- Name: ix_fk_favorite_insurco_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_insurco_people ON favorite_insurcompany USING btree (people);


--
-- TOC entry 8337 (class 1259 OID 48505)
-- Dependencies: 538
-- Name: ix_fk_favorite_otdel_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_otdel_otdel ON favorite_otdel USING btree (otdel);


--
-- TOC entry 8338 (class 1259 OID 48506)
-- Dependencies: 538
-- Name: ix_fk_favorite_otdel_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_otdel_people ON favorite_otdel USING btree (people);


--
-- TOC entry 8341 (class 1259 OID 48507)
-- Dependencies: 539
-- Name: ix_fk_favorite_sotr_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_sotr_people ON favorite_sotr USING btree (people);


--
-- TOC entry 8342 (class 1259 OID 48508)
-- Dependencies: 539
-- Name: ix_fk_favorite_sotr_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_favorite_sotr_sotr ON favorite_sotr USING btree (sotr);


--
-- TOC entry 8345 (class 1259 OID 48509)
-- Dependencies: 540
-- Name: ix_fk_favorkind$recipe_lgot_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_favorkind$recipe_lgot_type" ON favorkind USING btree (recipe_lgot_type_id);


--
-- TOC entry 8350 (class 1259 OID 48510)
-- Dependencies: 542
-- Name: ix_fk_feedback_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_feedback_people ON feedback USING btree (people);


--
-- TOC entry 8382 (class 1259 OID 48511)
-- Dependencies: 558
-- Name: ix_fk_function_sanatori; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_function_sanatori ON functioning USING btree (sanatorium);


--
-- TOC entry 8389 (class 1259 OID 48512)
-- Dependencies: 561
-- Name: ix_fk_heal_healtype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_heal_healtype ON heal USING btree (healtype);


--
-- TOC entry 8394 (class 1259 OID 48513)
-- Dependencies: 563
-- Name: ix_fk_heal_lpu_heal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_heal_lpu_heal ON heal_lpu USING btree (heal);


--
-- TOC entry 8398 (class 1259 OID 48514)
-- Dependencies: 564
-- Name: ix_fk_heal_lpu_heal_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_heal_lpu_heal_lpu ON heal_lpu_cost USING btree (heal_lpu);


--
-- TOC entry 8395 (class 1259 OID 48515)
-- Dependencies: 563
-- Name: ix_fk_heal_lpu_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_heal_lpu_lpu ON heal_lpu USING btree (lpu);


--
-- TOC entry 8407 (class 1259 OID 48516)
-- Dependencies: 570
-- Name: ix_fk_history_mdoc_loc_mdoc_location; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_history_mdoc_loc_mdoc_location ON history_mdoc_location USING btree (from_loc);


--
-- TOC entry 8408 (class 1259 OID 48517)
-- Dependencies: 570
-- Name: ix_fk_history_mdoc_loc_mdoc_location2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_history_mdoc_loc_mdoc_location2 ON history_mdoc_location USING btree (to_loc);


--
-- TOC entry 8409 (class 1259 OID 48518)
-- Dependencies: 570
-- Name: ix_fk_history_mdoc_loc_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_history_mdoc_loc_sysuser ON history_mdoc_location USING btree (sysuser);


--
-- TOC entry 8414 (class 1259 OID 48519)
-- Dependencies: 572
-- Name: ix_fk_homevisi_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_homevisi_district ON homevisit USING btree (district);


--
-- TOC entry 8415 (class 1259 OID 48520)
-- Dependencies: 572
-- Name: ix_fk_homevisi_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_homevisi_lpu ON homevisit USING btree (lpu);


--
-- TOC entry 8416 (class 1259 OID 48521)
-- Dependencies: 572
-- Name: ix_fk_homevisi_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_homevisi_people ON homevisit USING btree (people);


--
-- TOC entry 8417 (class 1259 OID 48522)
-- Dependencies: 572
-- Name: ix_fk_homevisi_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_homevisi_sysuser ON homevisit USING btree (sotr);


--
-- TOC entry 8435 (class 1259 OID 48523)
-- Dependencies: 586
-- Name: ix_fk_infection$vac_test; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_infection$vac_test" ON infection USING btree (def_vac_test_id);


--
-- TOC entry 8443 (class 1259 OID 48524)
-- Dependencies: 588
-- Name: ix_fk_informat_informat; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_informat_informat ON information_system USING btree (system_type);


--
-- TOC entry 8452 (class 1259 OID 48525)
-- Dependencies: 591
-- Name: ix_fk_infovalu_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_company ON infovalue USING btree (company);


--
-- TOC entry 8453 (class 1259 OID 48526)
-- Dependencies: 591
-- Name: ix_fk_infovalu_infotype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_infotype ON infovalue USING btree (infotype);


--
-- TOC entry 8454 (class 1259 OID 48527)
-- Dependencies: 591
-- Name: ix_fk_infovalu_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_lpu ON infovalue USING btree (lpu);


--
-- TOC entry 8455 (class 1259 OID 48528)
-- Dependencies: 591
-- Name: ix_fk_infovalu_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_otdel ON infovalue USING btree (otdel);


--
-- TOC entry 8456 (class 1259 OID 48529)
-- Dependencies: 591
-- Name: ix_fk_infovalu_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_people ON infovalue USING btree (people);


--
-- TOC entry 8457 (class 1259 OID 48530)
-- Dependencies: 591
-- Name: ix_fk_infovalu_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infovalu_sotr ON infovalue USING btree (sotr);


--
-- TOC entry 8460 (class 1259 OID 48531)
-- Dependencies: 592
-- Name: ix_fk_infrastr_infrastr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infrastr_infrastr ON infrastructure USING btree (infrastructure_type);


--
-- TOC entry 8461 (class 1259 OID 48532)
-- Dependencies: 592
-- Name: ix_fk_infrastr_plot; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_infrastr_plot ON infrastructure USING btree (plot);


--
-- TOC entry 8469 (class 1259 OID 48533)
-- Dependencies: 595
-- Name: ix_fk_insur_rating_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insur_rating_company ON insur_rating USING btree (insurcompany);


--
-- TOC entry 8470 (class 1259 OID 48534)
-- Dependencies: 595
-- Name: ix_fk_insur_rating_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insur_rating_people ON insur_rating USING btree (people);


--
-- TOC entry 8473 (class 1259 OID 48535)
-- Dependencies: 596
-- Name: ix_fk_insur_review_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insur_review_company ON insur_review USING btree (insurcompany);


--
-- TOC entry 8474 (class 1259 OID 48536)
-- Dependencies: 596
-- Name: ix_fk_insur_review_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insur_review_people ON insur_review USING btree (people);


--
-- TOC entry 7632 (class 1259 OID 48537)
-- Dependencies: 317
-- Name: ix_fk_insuranc_contract; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insuranc_contract ON insurance USING btree (contract_id);


--
-- TOC entry 7633 (class 1259 OID 48538)
-- Dependencies: 317
-- Name: ix_fk_insuranc_insur_oms_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insuranc_insur_oms_type ON insurance USING btree (insur_oms_type);


--
-- TOC entry 7634 (class 1259 OID 48539)
-- Dependencies: 317
-- Name: ix_fk_insuranc_insurcom; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insuranc_insurcom ON insurance USING btree (company);


--
-- TOC entry 7635 (class 1259 OID 48540)
-- Dependencies: 317
-- Name: ix_fk_insuranc_insurtyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insuranc_insurtyp ON insurance USING btree (pay_type);


--
-- TOC entry 7636 (class 1259 OID 48543)
-- Dependencies: 317
-- Name: ix_fk_insuranc_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insuranc_people ON insurance USING btree (people);


--
-- TOC entry 7637 (class 1259 OID 48552)
-- Dependencies: 317
-- Name: ix_fk_insurance_insurance_state; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_insurance_insurance_state ON insurance USING btree (insurance_state);


--
-- TOC entry 8488 (class 1259 OID 48559)
-- Dependencies: 601
-- Name: ix_fk_intolerance_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_intolerance_people ON intolerance USING btree (people_id);


--
-- TOC entry 8489 (class 1259 OID 48562)
-- Dependencies: 601
-- Name: ix_fk_intolerance_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_intolerance_sotr ON intolerance USING btree (sotr_id);


--
-- TOC entry 8490 (class 1259 OID 48567)
-- Dependencies: 601
-- Name: ix_fk_intolerance_tradenames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_intolerance_tradenames ON intolerance USING btree (tradenames_id);


--
-- TOC entry 8491 (class 1259 OID 48568)
-- Dependencies: 602
-- Name: ix_fk_invalid_invalidg; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_invalid_invalidg ON invalid USING btree (invalidgroup);


--
-- TOC entry 8492 (class 1259 OID 48569)
-- Dependencies: 602
-- Name: ix_fk_invalid_invalidk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_invalid_invalidk ON invalid USING btree (invalidkind);


--
-- TOC entry 8493 (class 1259 OID 48570)
-- Dependencies: 602
-- Name: ix_fk_invalid_invalidt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_invalid_invalidt ON invalid USING btree (invalidtype);


--
-- TOC entry 8494 (class 1259 OID 48571)
-- Dependencies: 602
-- Name: ix_fk_invalid_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_invalid_people ON invalid USING btree (people);


--
-- TOC entry 8511 (class 1259 OID 48572)
-- Dependencies: 611
-- Name: ix_fk_laboratory_norm_presctypeparam; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_laboratory_norm_presctypeparam ON laboratory_norm USING btree (presctypeparam);


--
-- TOC entry 8514 (class 1259 OID 48573)
-- Dependencies: 612
-- Name: ix_fk_laboratory_param_lab_probe_color; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_laboratory_param_lab_probe_color ON laboratory_param USING btree (color_id);


--
-- TOC entry 8515 (class 1259 OID 48574)
-- Dependencies: 612
-- Name: ix_fk_laboratory_param_lab_run_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_laboratory_param_lab_run_type ON laboratory_param USING btree (run_type_id);


--
-- TOC entry 8516 (class 1259 OID 48575)
-- Dependencies: 612
-- Name: ix_fk_laboratory_param_lab_work_place; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_laboratory_param_lab_work_place ON laboratory_param USING btree (work_place_id);


--
-- TOC entry 8519 (class 1259 OID 48576)
-- Dependencies: 613
-- Name: ix_fk_laboratory_reports_presctype_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_laboratory_reports_presctype_id ON laboratory_reports USING btree (presctype_id);


--
-- TOC entry 8545 (class 1259 OID 48577)
-- Dependencies: 621
-- Name: ix_fk_licence__licence; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence__licence ON licence_oper USING btree (licence);


--
-- TOC entry 8551 (class 1259 OID 48578)
-- Dependencies: 623
-- Name: ix_fk_licence__licence3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence__licence3 ON licence_service USING btree (licence);


--
-- TOC entry 8546 (class 1259 OID 48579)
-- Dependencies: 621
-- Name: ix_fk_licence__licence_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence__licence_ ON licence_oper USING btree (licence_oper_type);


--
-- TOC entry 8552 (class 1259 OID 48580)
-- Dependencies: 623
-- Name: ix_fk_licence__services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence__services ON licence_service USING btree (services);


--
-- TOC entry 8534 (class 1259 OID 48581)
-- Dependencies: 618
-- Name: ix_fk_licence_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence_company ON licence USING btree (company);


--
-- TOC entry 8535 (class 1259 OID 48582)
-- Dependencies: 618
-- Name: ix_fk_licence_licence_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence_licence_ ON licence USING btree (licence_activity);


--
-- TOC entry 8536 (class 1259 OID 48583)
-- Dependencies: 618
-- Name: ix_fk_licence_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_licence_lpu ON licence USING btree (lpu);


--
-- TOC entry 8569 (class 1259 OID 48584)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_level_ty; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_level_ty ON lpu_history USING btree (level_type);


--
-- TOC entry 8570 (class 1259 OID 48585)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_lpu_orga; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_lpu_orga ON lpu_history USING btree (organizational_form);


--
-- TOC entry 8571 (class 1259 OID 48586)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_lpu_owne; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_lpu_owne ON lpu_history USING btree (ownership);


--
-- TOC entry 8572 (class 1259 OID 48587)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_lpu_prof; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_lpu_prof ON lpu_history USING btree (lpu_profile);


--
-- TOC entry 8573 (class 1259 OID 48588)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_lpu_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_lpu_type ON lpu_history USING btree (lpu_type);


--
-- TOC entry 8574 (class 1259 OID 48589)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_subordin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_subordin ON lpu_history USING btree (subordination_type);


--
-- TOC entry 8575 (class 1259 OID 48590)
-- Dependencies: 636
-- Name: ix_fk_lpu_hist_supreme_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_hist_supreme_ ON lpu_history USING btree (supreme_department);


--
-- TOC entry 8580 (class 1259 OID 48591)
-- Dependencies: 637
-- Name: ix_fk_lpu_in_informat; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_in_informat ON lpu_information_system USING btree (information_system);


--
-- TOC entry 8584 (class 1259 OID 48592)
-- Dependencies: 638
-- Name: ix_fk_lpu_in_informat2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_in_informat2 ON lpu_information_system_history USING btree (information_system);


--
-- TOC entry 8581 (class 1259 OID 48593)
-- Dependencies: 637
-- Name: ix_fk_lpu_in_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_in_lpu ON lpu_information_system USING btree (lpu);


--
-- TOC entry 8585 (class 1259 OID 48594)
-- Dependencies: 638
-- Name: ix_fk_lpu_in_lpu2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_in_lpu2 ON lpu_information_system_history USING btree (lpu);


--
-- TOC entry 8588 (class 1259 OID 48595)
-- Dependencies: 639
-- Name: ix_fk_lpu_insurprogram_insurprogram; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_insurprogram_insurprogram ON lpu_insurprogram USING btree (insurprogram);


--
-- TOC entry 8589 (class 1259 OID 48596)
-- Dependencies: 639
-- Name: ix_fk_lpu_insurprogram_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_insurprogram_lpu ON lpu_insurprogram USING btree (lpu);


--
-- TOC entry 8561 (class 1259 OID 48599)
-- Dependencies: 631
-- Name: ix_fk_lpu_lpu_orga; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_lpu_orga ON lpu USING btree (organizational_form);


--
-- TOC entry 8562 (class 1259 OID 48600)
-- Dependencies: 631
-- Name: ix_fk_lpu_lpu_owne; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_lpu_owne ON lpu USING btree (ownership);


--
-- TOC entry 8563 (class 1259 OID 48601)
-- Dependencies: 631
-- Name: ix_fk_lpu_lpu_prof; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_lpu_prof ON lpu USING btree (lpu_profile);


--
-- TOC entry 8564 (class 1259 OID 48602)
-- Dependencies: 631
-- Name: ix_fk_lpu_lpu_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_lpu_type ON lpu USING btree (lpu_type);


--
-- TOC entry 8565 (class 1259 OID 48603)
-- Dependencies: 631
-- Name: ix_fk_lpu_supreme_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpu_supreme_ ON lpu USING btree (supreme_department);


--
-- TOC entry 8607 (class 1259 OID 48604)
-- Dependencies: 647
-- Name: ix_fk_lpusetti_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpusetti_lpu ON lpusettings USING btree (lpu);


--
-- TOC entry 8608 (class 1259 OID 48605)
-- Dependencies: 647
-- Name: ix_fk_lpusetti_settings; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_lpusetti_settings ON lpusettings USING btree (settings);


--
-- TOC entry 8631 (class 1259 OID 48606)
-- Dependencies: 654
-- Name: ix_fk_mdoc_group_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_group_lpu ON mdoc_group USING btree (lpu);


--
-- TOC entry 8634 (class 1259 OID 48607)
-- Dependencies: 655
-- Name: ix_fk_mdoc_last_number_mdoc_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_last_number_mdoc_type ON mdoc_last_number USING btree (mdoc_type);


--
-- TOC entry 8635 (class 1259 OID 48608)
-- Dependencies: 655
-- Name: ix_fk_mdoc_last_number_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_last_number_otdel ON mdoc_last_number USING btree (otdel);


--
-- TOC entry 8622 (class 1259 OID 48609)
-- Dependencies: 652
-- Name: ix_fk_mdoc_mdoc_typ; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_mdoc_typ ON mdoc USING btree (mdoc_type_id);


--
-- TOC entry 8623 (class 1259 OID 48615)
-- Dependencies: 652
-- Name: ix_fk_mdoc_pdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_pdoc ON mdoc USING btree (pdoc_id);


--
-- TOC entry 8624 (class 1259 OID 48616)
-- Dependencies: 652
-- Name: ix_fk_mdoc_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mdoc_people ON mdoc USING btree (people_id);


--
-- TOC entry 8645 (class 1259 OID 48617)
-- Dependencies: 659
-- Name: ix_fk_mdoc_type$mdoc_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_mdoc_type$mdoc_type" ON mdoc_type USING btree (parent_id);


--
-- TOC entry 8646 (class 1259 OID 48618)
-- Dependencies: 659
-- Name: ix_fk_mdoc_type$num_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_mdoc_type$num_type" ON mdoc_type USING btree (num_type_id);


--
-- TOC entry 8669 (class 1259 OID 48619)
-- Dependencies: 669
-- Name: ix_fk_medremai_lgota; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_medremai_lgota ON medremain USING btree (lgota);


--
-- TOC entry 8670 (class 1259 OID 48620)
-- Dependencies: 669
-- Name: ix_fk_medremai_medictyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_medremai_medictyp ON medremain USING btree (medictype);


--
-- TOC entry 8673 (class 1259 OID 48621)
-- Dependencies: 670
-- Name: ix_fk_medtyper_rlsregio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_medtyper_rlsregio ON medtyperls USING btree (rlsregion);


--
-- TOC entry 7531 (class 1259 OID 48622)
-- Dependencies: 175
-- Name: ix_fk_mfolder$mfolder; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_mfolder$mfolder" ON presctypefolder USING btree (parent_id);


--
-- TOC entry 8688 (class 1259 OID 48623)
-- Dependencies: 675
-- Name: ix_fk_mkb_10_template__mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mkb_10_template__mkb_10 ON mkb_10_template_list USING btree (mkb10);


--
-- TOC entry 8689 (class 1259 OID 48624)
-- Dependencies: 675
-- Name: ix_fk_mkb_10_template__mkb_10_template; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_mkb_10_template__mkb_10_template ON mkb_10_template_list USING btree (mkb10_template);


--
-- TOC entry 8690 (class 1259 OID 48625)
-- Dependencies: 676
-- Name: ix_fk_monitoring_imt_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_imt_people ON monitoring_imt USING btree (people);


--
-- TOC entry 8693 (class 1259 OID 48626)
-- Dependencies: 677
-- Name: ix_fk_monitoring_phisi_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_phisi_people ON monitoring_phisical_activity USING btree (people);


--
-- TOC entry 8694 (class 1259 OID 48627)
-- Dependencies: 677
-- Name: ix_fk_monitoring_phisi_phisical_activit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_phisi_phisical_activit ON monitoring_phisical_activity USING btree (phisical_activity);


--
-- TOC entry 8697 (class 1259 OID 48628)
-- Dependencies: 678
-- Name: ix_fk_monitoring_press_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_press_people ON monitoring_press USING btree (people);


--
-- TOC entry 8700 (class 1259 OID 48629)
-- Dependencies: 679
-- Name: ix_fk_monitoring_puls_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_puls_people ON monitoring_puls USING btree (people);


--
-- TOC entry 8703 (class 1259 OID 48630)
-- Dependencies: 680
-- Name: ix_fk_monitoring_sugar_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_sugar_people ON monitoring_sugar USING btree (people);


--
-- TOC entry 8706 (class 1259 OID 48631)
-- Dependencies: 681
-- Name: ix_fk_monitoring_tempe_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_monitoring_tempe_people ON monitoring_temperature USING btree (people);


--
-- TOC entry 8711 (class 1259 OID 48632)
-- Dependencies: 683
-- Name: ix_fk_mparam$mparam; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_mparam$mparam" ON mparam USING btree (parent_id);


--
-- TOC entry 8712 (class 1259 OID 48633)
-- Dependencies: 683
-- Name: ix_fk_mparam$type_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_mparam$type_name" ON mparam USING btree (type_name);


--
-- TOC entry 8716 (class 1259 OID 48634)
-- Dependencies: 685
-- Name: ix_fk_msec_main_invalidgroup; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_msec_main_invalidgroup ON msec_main USING btree (invalid_group_id);


--
-- TOC entry 8717 (class 1259 OID 48635)
-- Dependencies: 685
-- Name: ix_fk_msec_main_msec_conclusin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_msec_main_msec_conclusin ON msec_main USING btree (msec_conclusion_id);


--
-- TOC entry 8718 (class 1259 OID 48636)
-- Dependencies: 685
-- Name: ix_fk_msec_main_msec_target; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_msec_main_msec_target ON msec_main USING btree (msec_target);


--
-- TOC entry 8719 (class 1259 OID 48637)
-- Dependencies: 685
-- Name: ix_fk_msec_main_vk_main; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_msec_main_vk_main ON msec_main USING btree (vk_main_id);


--
-- TOC entry 8736 (class 1259 OID 48638)
-- Dependencies: 691
-- Name: ix_fk_natural__natural_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_natural__natural_ ON natural_factor USING btree (natural_factor_type);


--
-- TOC entry 8737 (class 1259 OID 48639)
-- Dependencies: 691
-- Name: ix_fk_natural__sanatori; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_natural__sanatori ON natural_factor USING btree (sanatorium);


--
-- TOC entry 8757 (class 1259 OID 48640)
-- Dependencies: 699
-- Name: ix_fk_nosology_mkb10_b_benefit_medic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_nosology_mkb10_b_benefit_medic ON nosology_mkb10_benefitmedic USING btree (benefit_medic);


--
-- TOC entry 8758 (class 1259 OID 48641)
-- Dependencies: 699
-- Name: ix_fk_nosology_mkb10_b_nosology_mkb10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_nosology_mkb10_b_nosology_mkb10 ON nosology_mkb10_benefitmedic USING btree (nosology_mkb10);


--
-- TOC entry 8752 (class 1259 OID 48642)
-- Dependencies: 698
-- Name: ix_fk_nosology_mkb10_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_nosology_mkb10_mkb_10 ON nosology_mkb10 USING btree (mkb10);


--
-- TOC entry 8753 (class 1259 OID 48643)
-- Dependencies: 698
-- Name: ix_fk_nosology_mkb10_nosology; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_nosology_mkb10_nosology ON nosology_mkb10 USING btree (nosology);


--
-- TOC entry 8143 (class 1259 OID 48644)
-- Dependencies: 485
-- Name: ix_fk_otdel_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_addresse ON otdel USING btree (addressex);


--
-- TOC entry 8794 (class 1259 OID 48645)
-- Dependencies: 717
-- Name: ix_fk_otdel_bu_building; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_bu_building ON otdel_building USING btree (building);


--
-- TOC entry 8795 (class 1259 OID 48646)
-- Dependencies: 717
-- Name: ix_fk_otdel_bu_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_bu_otdel ON otdel_building USING btree (otdel);


--
-- TOC entry 8800 (class 1259 OID 48647)
-- Dependencies: 719
-- Name: ix_fk_otdel_hi_otdel_pr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_hi_otdel_pr ON otdel_history USING btree (otdel_profile);


--
-- TOC entry 8144 (class 1259 OID 48648)
-- Dependencies: 485
-- Name: ix_fk_otdel_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_lpu ON otdel USING btree (lpu);


--
-- TOC entry 8804 (class 1259 OID 48649)
-- Dependencies: 720
-- Name: ix_fk_otdel_mdoc_numbe_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_mdoc_numbe_otdel ON otdel_mdoc_number USING btree (otdel);


--
-- TOC entry 8807 (class 1259 OID 48650)
-- Dependencies: 721
-- Name: ix_fk_otdel_mdoctype_mdoc_group; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_mdoctype_mdoc_group ON otdel_mdoctype USING btree (mdoc_group);


--
-- TOC entry 8808 (class 1259 OID 48651)
-- Dependencies: 721
-- Name: ix_fk_otdel_mdoctype_mdoc_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_mdoctype_mdoc_type ON otdel_mdoctype USING btree (mdoctype_id);


--
-- TOC entry 8809 (class 1259 OID 48652)
-- Dependencies: 721
-- Name: ix_fk_otdel_mdoctype_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_mdoctype_otdel ON otdel_mdoctype USING btree (otdel_id);


--
-- TOC entry 8145 (class 1259 OID 48653)
-- Dependencies: 485
-- Name: ix_fk_otdel_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_otdel ON otdel USING btree (parent);


--
-- TOC entry 8816 (class 1259 OID 48654)
-- Dependencies: 724
-- Name: ix_fk_otdel_pr_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_pr_otdel ON otdel_profile_care USING btree (otdel);


--
-- TOC entry 8817 (class 1259 OID 48655)
-- Dependencies: 724
-- Name: ix_fk_otdel_pr_profile_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_pr_profile_ ON otdel_profile_care USING btree (profile_care);


--
-- TOC entry 8820 (class 1259 OID 48656)
-- Dependencies: 725
-- Name: ix_fk_otdel_rating_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_rating_otdel ON otdel_rating USING btree (otdel);


--
-- TOC entry 8821 (class 1259 OID 48657)
-- Dependencies: 725
-- Name: ix_fk_otdel_rating_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_rating_people ON otdel_rating USING btree (people);


--
-- TOC entry 8826 (class 1259 OID 48658)
-- Dependencies: 727
-- Name: ix_fk_otdel_review_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_review_otdel ON otdel_review USING btree (otdel);


--
-- TOC entry 8827 (class 1259 OID 48659)
-- Dependencies: 727
-- Name: ix_fk_otdel_review_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_review_people ON otdel_review USING btree (people);


--
-- TOC entry 8146 (class 1259 OID 48660)
-- Dependencies: 485
-- Name: ix_fk_otdel_subdivis; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_subdivis ON otdel USING btree (otdel_type);


--
-- TOC entry 8830 (class 1259 OID 48661)
-- Dependencies: 728
-- Name: ix_fk_otdel_type_otdel_profile_ad; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_otdel_type_otdel_profile_ad ON otdel_type USING btree (additional_type);


--
-- TOC entry 7641 (class 1259 OID 48662)
-- Dependencies: 318
-- Name: ix_fk_pacient_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pacient_people ON pacient USING btree (people);


--
-- TOC entry 8837 (class 1259 OID 48663)
-- Dependencies: 731
-- Name: ix_fk_paidagree_docs_f_paidagree_docs; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_paidagree_docs_f_paidagree_docs ON paidagree_docs_fields USING btree (paid_agreement_docs);


--
-- TOC entry 8838 (class 1259 OID 48664)
-- Dependencies: 731
-- Name: ix_fk_paidagree_docs_f_paidagree_fields; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_paidagree_docs_f_paidagree_fields ON paidagree_docs_fields USING btree (paid_agreement_fields);


--
-- TOC entry 8849 (class 1259 OID 48665)
-- Dependencies: 737
-- Name: ix_fk_passport_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_passport_lpu ON passport_log USING btree (lpu);


--
-- TOC entry 8850 (class 1259 OID 48666)
-- Dependencies: 737
-- Name: ix_fk_passport_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_passport_otdel ON passport_log USING btree (otdel);


--
-- TOC entry 8851 (class 1259 OID 48667)
-- Dependencies: 737
-- Name: ix_fk_passport_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_passport_sysuser ON passport_log USING btree (sysuser);


--
-- TOC entry 8854 (class 1259 OID 48668)
-- Dependencies: 738 738
-- Name: ix_fk_patientcarduniquefield_lpu_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_fk_patientcarduniquefield_lpu_lpu ON patientcard_uniquefield_lpu USING btree (patientcardsettings_uniquefield, lpu);


--
-- TOC entry 8855 (class 1259 OID 48669)
-- Dependencies: 738 738
-- Name: ix_fk_patientcarduniquefield_lpu_patientcardsettings; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_fk_patientcarduniquefield_lpu_patientcardsettings ON patientcard_uniquefield_lpu USING btree (patientcardsettings_uniquefield, lpu);


--
-- TOC entry 8879 (class 1259 OID 48670)
-- Dependencies: 747
-- Name: ix_fk_pdoc$pdoctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pdoc$pdoctype" ON pdoc USING btree (pdoctype_id);


--
-- TOC entry 7579 (class 1259 OID 48671)
-- Dependencies: 215
-- Name: ix_fk_people_a_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_a_addresse ON people_address USING btree (address);


--
-- TOC entry 7580 (class 1259 OID 48672)
-- Dependencies: 215
-- Name: ix_fk_people_a_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_a_people ON people_address USING btree (people);


--
-- TOC entry 7553 (class 1259 OID 48673)
-- Dependencies: 214
-- Name: ix_fk_people_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_addresse ON people USING btree (addressex1);


--
-- TOC entry 7554 (class 1259 OID 48674)
-- Dependencies: 214
-- Name: ix_fk_people_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_addresse2 ON people USING btree (addressex2);


--
-- TOC entry 7555 (class 1259 OID 48675)
-- Dependencies: 214
-- Name: ix_fk_people_benefitt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_benefitt ON people USING btree (benefittype);


--
-- TOC entry 7556 (class 1259 OID 48676)
-- Dependencies: 214
-- Name: ix_fk_people_category; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_category ON people USING btree (category);


--
-- TOC entry 8884 (class 1259 OID 48677)
-- Dependencies: 749
-- Name: ix_fk_people_change_hi_addressex; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_change_hi_addressex ON people_change_history USING btree (addressex1);


--
-- TOC entry 8885 (class 1259 OID 48678)
-- Dependencies: 749
-- Name: ix_fk_people_change_hi_addressex2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_change_hi_addressex2 ON people_change_history USING btree (addressex2);


--
-- TOC entry 8886 (class 1259 OID 48679)
-- Dependencies: 749
-- Name: ix_fk_people_change_hi_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_change_hi_people ON people_change_history USING btree (people);


--
-- TOC entry 8887 (class 1259 OID 48680)
-- Dependencies: 749
-- Name: ix_fk_people_change_hi_peopledoctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_change_hi_peopledoctype ON people_change_history USING btree (peopledoctype);


--
-- TOC entry 7557 (class 1259 OID 48681)
-- Dependencies: 214
-- Name: ix_fk_people_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_company ON people USING btree (company);


--
-- TOC entry 7558 (class 1259 OID 48682)
-- Dependencies: 214
-- Name: ix_fk_people_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_district ON people USING btree (district);


--
-- TOC entry 7559 (class 1259 OID 48683)
-- Dependencies: 214
-- Name: ix_fk_people_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_lpu ON people USING btree (lpu);


--
-- TOC entry 7560 (class 1259 OID 48684)
-- Dependencies: 214
-- Name: ix_fk_people_pacient; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_pacient ON people USING btree (pacient);


--
-- TOC entry 7561 (class 1259 OID 48685)
-- Dependencies: 214
-- Name: ix_fk_people_peopledo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_peopledo ON people USING btree (benefitdoctype);


--
-- TOC entry 7562 (class 1259 OID 48686)
-- Dependencies: 214
-- Name: ix_fk_people_peopledo2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_peopledo2 ON people USING btree (peopledoctype);


--
-- TOC entry 7563 (class 1259 OID 48687)
-- Dependencies: 214
-- Name: ix_fk_people_peoplepo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_peoplepo ON people USING btree (peoplepost);


--
-- TOC entry 7564 (class 1259 OID 48688)
-- Dependencies: 214
-- Name: ix_fk_people_professi; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_professi ON people USING btree (profession);


--
-- TOC entry 8934 (class 1259 OID 48689)
-- Dependencies: 764
-- Name: ix_fk_people_relation_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_relation_people ON people_relation USING btree (people);


--
-- TOC entry 8935 (class 1259 OID 48690)
-- Dependencies: 764
-- Name: ix_fk_people_relation_people2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_relation_people2 ON people_relation USING btree (people_relation);


--
-- TOC entry 8936 (class 1259 OID 48691)
-- Dependencies: 764
-- Name: ix_fk_people_relation_people_relation_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_relation_people_relation_ ON people_relation USING btree (people_relation_status);


--
-- TOC entry 8946 (class 1259 OID 48692)
-- Dependencies: 767
-- Name: ix_fk_people_s_marriage; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_s_marriage ON people_status USING btree (marriage);


--
-- TOC entry 8947 (class 1259 OID 48693)
-- Dependencies: 767
-- Name: ix_fk_people_s_military; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_s_military ON people_status USING btree (military);


--
-- TOC entry 8948 (class 1259 OID 48694)
-- Dependencies: 767
-- Name: ix_fk_people_s_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_s_people ON people_status USING btree (people);


--
-- TOC entry 8942 (class 1259 OID 48695)
-- Dependencies: 766
-- Name: ix_fk_people_specialty_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_specialty_people ON people_specialty USING btree (people);


--
-- TOC entry 8943 (class 1259 OID 48696)
-- Dependencies: 766
-- Name: ix_fk_people_specialty_specialty; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_specialty_specialty ON people_specialty USING btree (specialty);


--
-- TOC entry 7565 (class 1259 OID 48697)
-- Dependencies: 214
-- Name: ix_fk_people_vregion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_people_vregion ON people USING btree (region);


--
-- TOC entry 8953 (class 1259 OID 48698)
-- Dependencies: 769
-- Name: ix_fk_peopleka_kartapla; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_peopleka_kartapla ON peoplekartaplace USING btree (kartaplace);


--
-- TOC entry 8954 (class 1259 OID 48699)
-- Dependencies: 769
-- Name: ix_fk_peopleka_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_peopleka_people ON peoplekartaplace USING btree (people);


--
-- TOC entry 8959 (class 1259 OID 48700)
-- Dependencies: 772
-- Name: ix_fk_peopleph_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_peopleph_people ON peoplephoneabsence USING btree (people);


--
-- TOC entry 8964 (class 1259 OID 48701)
-- Dependencies: 776
-- Name: ix_fk_persiste_rolebase; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_persiste_rolebase ON persistentpermission USING btree (role);


--
-- TOC entry 8975 (class 1259 OID 48702)
-- Dependencies: 780
-- Name: ix_fk_pharmacy_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pharmacy_addresse ON pharmacy USING btree (address);


--
-- TOC entry 8980 (class 1259 OID 48703)
-- Dependencies: 782
-- Name: ix_fk_pinfo$country; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$country" ON pinfo USING btree (country);


--
-- TOC entry 8981 (class 1259 OID 48704)
-- Dependencies: 782
-- Name: ix_fk_pinfo$dispgroup; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$dispgroup" ON pinfo USING btree (dispgroup);


--
-- TOC entry 8982 (class 1259 OID 48705)
-- Dependencies: 782
-- Name: ix_fk_pinfo$education; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$education" ON pinfo USING btree (education);


--
-- TOC entry 8983 (class 1259 OID 48706)
-- Dependencies: 782
-- Name: ix_fk_pinfo$favorkind; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$favorkind" ON pinfo USING btree (favorkind);


--
-- TOC entry 8984 (class 1259 OID 48707)
-- Dependencies: 782
-- Name: ix_fk_pinfo$liveplace; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$liveplace" ON pinfo USING btree (liveplace);


--
-- TOC entry 8985 (class 1259 OID 48708)
-- Dependencies: 782
-- Name: ix_fk_pinfo$marriage; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$marriage" ON pinfo USING btree (marriage);


--
-- TOC entry 8986 (class 1259 OID 48709)
-- Dependencies: 782
-- Name: ix_fk_pinfo$nacionality; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$nacionality" ON pinfo USING btree (nacionality);


--
-- TOC entry 8987 (class 1259 OID 48710)
-- Dependencies: 782
-- Name: ix_fk_pinfo$parent_status; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$parent_status" ON pinfo USING btree (parent_status_id);


--
-- TOC entry 8988 (class 1259 OID 48711)
-- Dependencies: 782
-- Name: ix_fk_pinfo$regplace; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$regplace" ON pinfo USING btree (regplace);


--
-- TOC entry 8989 (class 1259 OID 48712)
-- Dependencies: 782
-- Name: ix_fk_pinfo$socialrank; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_pinfo$socialrank" ON pinfo USING btree (socialrank);


--
-- TOC entry 8990 (class 1259 OID 48713)
-- Dependencies: 782
-- Name: ix_fk_pinfo_hard_lif; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pinfo_hard_lif ON pinfo USING btree (hard_life);


--
-- TOC entry 8991 (class 1259 OID 48714)
-- Dependencies: 782
-- Name: ix_fk_pinfo_recipe_l; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pinfo_recipe_l ON pinfo USING btree (recipe_lgot_type);


--
-- TOC entry 8998 (class 1259 OID 48715)
-- Dependencies: 785
-- Name: ix_fk_plot_addresse; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_plot_addresse ON plot USING btree (addressex);


--
-- TOC entry 9002 (class 1259 OID 48716)
-- Dependencies: 786
-- Name: ix_fk_plot_addresse2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_plot_addresse2 ON plot_history USING btree (addressex);


--
-- TOC entry 8999 (class 1259 OID 48717)
-- Dependencies: 785
-- Name: ix_fk_plot_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_plot_lpu ON plot USING btree (lpu);


--
-- TOC entry 9003 (class 1259 OID 48718)
-- Dependencies: 786
-- Name: ix_fk_plot_lpu2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_plot_lpu2 ON plot_history USING btree (lpu);


--
-- TOC entry 9008 (class 1259 OID 48719)
-- Dependencies: 787
-- Name: ix_fk_poll_tkladrsp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_poll_tkladrsp ON poll USING btree (region);


--
-- TOC entry 9014 (class 1259 OID 48720)
-- Dependencies: 789
-- Name: ix_fk_pollansw_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pollansw_people ON pollanswer_people USING btree (people);


--
-- TOC entry 9011 (class 1259 OID 48721)
-- Dependencies: 788
-- Name: ix_fk_pollansw_poll; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pollansw_poll ON pollanswer USING btree (poll);


--
-- TOC entry 9015 (class 1259 OID 48722)
-- Dependencies: 789
-- Name: ix_fk_pollansw_pollansw; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_pollansw_pollansw ON pollanswer_people USING btree (pollanswer);


--
-- TOC entry 9020 (class 1259 OID 48723)
-- Dependencies: 791
-- Name: ix_fk_portal_mdoc_appo_portal_mdoc_even; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_appo_portal_mdoc_even ON portal_mdoc_appointment USING btree (mdoc_event);


--
-- TOC entry 9021 (class 1259 OID 48724)
-- Dependencies: 791
-- Name: ix_fk_portal_mdoc_appo_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_appo_presctype ON portal_mdoc_appointment USING btree (presctype_oid);


--
-- TOC entry 9024 (class 1259 OID 48725)
-- Dependencies: 792
-- Name: ix_fk_portal_mdoc_diag_portal_mdoc_appo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_diag_portal_mdoc_appo ON portal_mdoc_diag USING btree (mdoc_appointment);


--
-- TOC entry 9027 (class 1259 OID 48726)
-- Dependencies: 793
-- Name: ix_fk_portal_mdoc_even_portal_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_even_portal_mdoc ON portal_mdoc_event USING btree (mdoc);


--
-- TOC entry 9030 (class 1259 OID 48727)
-- Dependencies: 794
-- Name: ix_fk_portal_mdoc_extr_portal_mdoc_even; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_extr_portal_mdoc_even ON portal_mdoc_extract USING btree (mdoc_event);


--
-- TOC entry 9016 (class 1259 OID 48728)
-- Dependencies: 790
-- Name: ix_fk_portal_mdoc_mdoc_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_mdoc_type ON portal_mdoc USING btree (type);


--
-- TOC entry 9033 (class 1259 OID 48748)
-- Dependencies: 795
-- Name: ix_fk_portal_mdoc_medi_medic_frequency; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_medi_medic_frequency ON portal_mdoc_medic USING btree (frequency);


--
-- TOC entry 9034 (class 1259 OID 48749)
-- Dependencies: 795
-- Name: ix_fk_portal_mdoc_medi_portal_mdoc_appo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_medi_portal_mdoc_appo ON portal_mdoc_medic USING btree (mdoc_appointment);


--
-- TOC entry 9035 (class 1259 OID 48750)
-- Dependencies: 795
-- Name: ix_fk_portal_mdoc_medi_tradenames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_medi_tradenames ON portal_mdoc_medic USING btree (tradename_oid);


--
-- TOC entry 9017 (class 1259 OID 48751)
-- Dependencies: 790
-- Name: ix_fk_portal_mdoc_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_people ON portal_mdoc USING btree (people);


--
-- TOC entry 9038 (class 1259 OID 48755)
-- Dependencies: 796
-- Name: ix_fk_portal_mdoc_surv_portal_mdoc_appo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_surv_portal_mdoc_appo ON portal_mdoc_survey USING btree (mdoc_appointment);


--
-- TOC entry 9039 (class 1259 OID 48756)
-- Dependencies: 796
-- Name: ix_fk_portal_mdoc_surv_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_portal_mdoc_surv_presctype ON portal_mdoc_survey USING btree (presctype_oid);


--
-- TOC entry 8892 (class 1259 OID 48757)
-- Dependencies: 751
-- Name: ix_fk_postgrad_academic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_postgrad_academic ON postgraduateeducation USING btree (academicdegree);


--
-- TOC entry 8893 (class 1259 OID 48758)
-- Dependencies: 751
-- Name: ix_fk_postgrad_educatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_postgrad_educatio ON postgraduateeducation USING btree (educationinstitution);


--
-- TOC entry 8894 (class 1259 OID 48759)
-- Dependencies: 751
-- Name: ix_fk_postgrad_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_postgrad_people ON postgraduateeducation USING btree (people);


--
-- TOC entry 8895 (class 1259 OID 48760)
-- Dependencies: 751
-- Name: ix_fk_postgrad_posteduc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_postgrad_posteduc ON postgraduateeducation USING btree (posteducation);


--
-- TOC entry 8896 (class 1259 OID 48761)
-- Dependencies: 751
-- Name: ix_fk_postgrad_sertific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_postgrad_sertific ON postgraduateeducation USING btree (sertificatespeciality);


--
-- TOC entry 9071 (class 1259 OID 48762)
-- Dependencies: 811
-- Name: ix_fk_presc$appendix; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$appendix" ON presc USING btree (appendix_id);


--
-- TOC entry 9072 (class 1259 OID 48763)
-- Dependencies: 811
-- Name: ix_fk_presc$cabinet; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$cabinet" ON presc USING btree (cabinet_id);


--
-- TOC entry 9073 (class 1259 OID 48764)
-- Dependencies: 811
-- Name: ix_fk_presc$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$emp" ON presc USING btree (creator_id);


--
-- TOC entry 9074 (class 1259 OID 48765)
-- Dependencies: 811
-- Name: ix_fk_presc$emp2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$emp2" ON presc USING btree (runemp_id);


--
-- TOC entry 9075 (class 1259 OID 48766)
-- Dependencies: 811
-- Name: ix_fk_presc$mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$mdoc" ON presc USING btree (mdoc_id);


--
-- TOC entry 9076 (class 1259 OID 48767)
-- Dependencies: 811
-- Name: ix_fk_presc$presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$presc" ON presc USING btree (parent_id);


--
-- TOC entry 9077 (class 1259 OID 48768)
-- Dependencies: 811
-- Name: ix_fk_presc$presc_state; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$presc_state" ON presc USING btree (presc_state_id);


--
-- TOC entry 9078 (class 1259 OID 48769)
-- Dependencies: 811
-- Name: ix_fk_presc$presc_time; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$presc_time" ON presc USING btree (presc_time_id);


--
-- TOC entry 9079 (class 1259 OID 48770)
-- Dependencies: 811
-- Name: ix_fk_presc$visit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc$visit" ON presc USING btree (visit_id);


--
-- TOC entry 9083 (class 1259 OID 48771)
-- Dependencies: 812
-- Name: ix_fk_presc_card_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_card_presc ON presc_card USING btree (presc_id);


--
-- TOC entry 9088 (class 1259 OID 48772)
-- Dependencies: 813
-- Name: ix_fk_presc_parval$mparam; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc_parval$mparam" ON presc_parval USING btree (mparam_id);


--
-- TOC entry 9089 (class 1259 OID 48773)
-- Dependencies: 813
-- Name: ix_fk_presc_parval$type_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc_parval$type_name" ON presc_parval USING btree (type_name);


--
-- TOC entry 9092 (class 1259 OID 48774)
-- Dependencies: 814
-- Name: ix_fk_presc_portal_lin_portal_mdoc_appo; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_portal_lin_portal_mdoc_appo ON presc_portal_link USING btree (portal_mdoc_appointment);


--
-- TOC entry 9093 (class 1259 OID 48775)
-- Dependencies: 814
-- Name: ix_fk_presc_portal_lin_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_portal_lin_presc ON presc_portal_link USING btree (presc);


--
-- TOC entry 9104 (class 1259 OID 48776)
-- Dependencies: 818
-- Name: ix_fk_presc_service_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_service_presc ON presc_service USING btree (presc);


--
-- TOC entry 9105 (class 1259 OID 48777)
-- Dependencies: 818
-- Name: ix_fk_presc_service_service_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_service_service_presctyp ON presc_service USING btree (service_presctype);


--
-- TOC entry 9108 (class 1259 OID 48778)
-- Dependencies: 819
-- Name: ix_fk_presc_sign_sotr$presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc_sign_sotr$presc" ON presc_sign_sotr USING btree (presc);


--
-- TOC entry 9109 (class 1259 OID 48779)
-- Dependencies: 819
-- Name: ix_fk_presc_sign_sotr$sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_presc_sign_sotr$sotr" ON presc_sign_sotr USING btree (sotr);


--
-- TOC entry 9080 (class 1259 OID 48780)
-- Dependencies: 811
-- Name: ix_fk_presc_tmodel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presc_tmodel ON presc USING btree (tmodel);


--
-- TOC entry 9120 (class 1259 OID 48781)
-- Dependencies: 824
-- Name: ix_fk_prescparam_value_presc_card; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_prescparam_value_presc_card ON prescparam_values USING btree (presc_card);


--
-- TOC entry 9121 (class 1259 OID 48782)
-- Dependencies: 824
-- Name: ix_fk_prescparam_value_presctypeparam; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_prescparam_value_presctypeparam ON prescparam_values USING btree (prescparam_id);


--
-- TOC entry 9124 (class 1259 OID 48783)
-- Dependencies: 825
-- Name: ix_fk_presctyp_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presctyp_presctyp ON presctype USING btree (presctypefolder_id);


--
-- TOC entry 9125 (class 1259 OID 48784)
-- Dependencies: 825
-- Name: ix_fk_presctype_parent_folder_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presctype_parent_folder_id ON presctype USING btree (presctypefolderid_parent);


--
-- TOC entry 9130 (class 1259 OID 48785)
-- Dependencies: 826
-- Name: ix_fk_presctypeparam_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presctypeparam_presctype ON presctypeparam USING btree (presctype_id);


--
-- TOC entry 9131 (class 1259 OID 48786)
-- Dependencies: 826
-- Name: ix_fk_presctypeparam_presctypeparam_t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_presctypeparam_presctypeparam_t ON presctypeparam USING btree (parametr_type);


--
-- TOC entry 9140 (class 1259 OID 48787)
-- Dependencies: 830
-- Name: ix_fk_profex_actions_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actions_otdel ON profex_actions USING btree (create_otdel);


--
-- TOC entry 9141 (class 1259 OID 48788)
-- Dependencies: 830
-- Name: ix_fk_profex_actions_profex_actions_t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actions_profex_actions_t ON profex_actions USING btree (type);


--
-- TOC entry 9142 (class 1259 OID 48789)
-- Dependencies: 830
-- Name: ix_fk_profex_actions_profex_contract; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actions_profex_contract ON profex_actions USING btree (profex_contract);


--
-- TOC entry 9143 (class 1259 OID 48790)
-- Dependencies: 830
-- Name: ix_fk_profex_actions_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actions_sysuser ON profex_actions USING btree (create_sysuser);


--
-- TOC entry 9148 (class 1259 OID 48791)
-- Dependencies: 832
-- Name: ix_fk_profex_actionsty_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actionsty_presctype ON profex_actionstype_presctype USING btree (presctype);


--
-- TOC entry 9149 (class 1259 OID 48792)
-- Dependencies: 832
-- Name: ix_fk_profex_actionsty_profex_actions_t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_actionsty_profex_actions_t ON profex_actionstype_presctype USING btree (profex_actionstype);


--
-- TOC entry 9150 (class 1259 OID 48793)
-- Dependencies: 833
-- Name: ix_fk_profex_company_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_company_company ON profex_company USING btree (company);


--
-- TOC entry 9151 (class 1259 OID 48794)
-- Dependencies: 833
-- Name: ix_fk_profex_company_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_company_lpu ON profex_company USING btree (lpu);


--
-- TOC entry 9154 (class 1259 OID 48795)
-- Dependencies: 834
-- Name: ix_fk_profex_contract_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_contract_otdel ON profex_contract USING btree (create_otdel);


--
-- TOC entry 9155 (class 1259 OID 48796)
-- Dependencies: 834
-- Name: ix_fk_profex_contract_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_contract_sysuser ON profex_contract USING btree (create_sysuser);


--
-- TOC entry 9158 (class 1259 OID 48797)
-- Dependencies: 835
-- Name: ix_fk_profex_list_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_mdoc ON profex_list USING btree (mdoc);


--
-- TOC entry 9164 (class 1259 OID 48798)
-- Dependencies: 836
-- Name: ix_fk_profex_list_naz_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_naz_presc ON profex_list_naz USING btree (presc);


--
-- TOC entry 9165 (class 1259 OID 48799)
-- Dependencies: 836
-- Name: ix_fk_profex_list_naz_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_naz_presctype ON profex_list_naz USING btree (presc_type);


--
-- TOC entry 9166 (class 1259 OID 48800)
-- Dependencies: 836
-- Name: ix_fk_profex_list_naz_profex_list; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_naz_profex_list ON profex_list_naz USING btree (profex_list);


--
-- TOC entry 9159 (class 1259 OID 48801)
-- Dependencies: 835
-- Name: ix_fk_profex_list_profex_actions; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_profex_actions ON profex_list USING btree (prof_action);


--
-- TOC entry 9160 (class 1259 OID 48802)
-- Dependencies: 835
-- Name: ix_fk_profex_list_profex_result; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_profex_result ON profex_list USING btree (result);


--
-- TOC entry 9161 (class 1259 OID 48803)
-- Dependencies: 835
-- Name: ix_fk_profex_list_profex_workcondi; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_profex_workcondi ON profex_list USING btree (workconditions);


--
-- TOC entry 9169 (class 1259 OID 48804)
-- Dependencies: 837
-- Name: ix_fk_profex_list_resu_profex_list; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_resu_profex_list ON profex_list_resultcomment USING btree (profex_lis);


--
-- TOC entry 9170 (class 1259 OID 48805)
-- Dependencies: 837
-- Name: ix_fk_profex_list_resu_profex_result_co; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_list_resu_profex_result_co ON profex_list_resultcomment USING btree (profex_result_comment);


--
-- TOC entry 9176 (class 1259 OID 48806)
-- Dependencies: 840
-- Name: ix_fk_profex_proffacto_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_proffacto_presctype ON profex_proffactor_presc USING btree (presctype);


--
-- TOC entry 9180 (class 1259 OID 48807)
-- Dependencies: 841
-- Name: ix_fk_profex_proffacto_profex_list; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_proffacto_profex_list ON profex_proffactor_profexlist USING btree (prophex_list);


--
-- TOC entry 9181 (class 1259 OID 48808)
-- Dependencies: 841
-- Name: ix_fk_profex_proffacto_profex_proffacto; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_proffacto_profex_proffacto ON profex_proffactor_profexlist USING btree (proffactor);


--
-- TOC entry 9171 (class 1259 OID 48809)
-- Dependencies: 838
-- Name: ix_fk_profex_proffacto_profex_proffacto2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_proffacto_profex_proffacto2 ON profex_proffactor USING btree (parent);


--
-- TOC entry 9177 (class 1259 OID 48810)
-- Dependencies: 840
-- Name: ix_fk_profex_proffacto_profex_proffacto3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_profex_proffacto_profex_proffacto3 ON profex_proffactor_presc USING btree (proffactor);


--
-- TOC entry 9198 (class 1259 OID 48811)
-- Dependencies: 849
-- Name: ix_fk_progress_linetype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_progress_linetype ON progression USING btree (linetype);


--
-- TOC entry 9205 (class 1259 OID 48812)
-- Dependencies: 850
-- Name: ix_fk_progress_linetype2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_progress_linetype2 ON progression_stat USING btree (linetype);


--
-- TOC entry 9206 (class 1259 OID 48813)
-- Dependencies: 850
-- Name: ix_fk_progress_registwi; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_progress_registwi ON progression_stat USING btree (registwindow);


--
-- TOC entry 9207 (class 1259 OID 48814)
-- Dependencies: 850
-- Name: ix_fk_progress_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_progress_sysuser ON progression_stat USING btree (sysuser);


--
-- TOC entry 8899 (class 1259 OID 48815)
-- Dependencies: 752
-- Name: ix_fk_qualific_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_qualific_people ON qualification USING btree (people);


--
-- TOC entry 8900 (class 1259 OID 48816)
-- Dependencies: 752
-- Name: ix_fk_qualific_qualific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_qualific_qualific ON qualification USING btree (qualificationcategory);


--
-- TOC entry 8901 (class 1259 OID 48817)
-- Dependencies: 752
-- Name: ix_fk_qualific_sertific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_qualific_sertific ON qualification USING btree (sertificatespeciality);


--
-- TOC entry 9222 (class 1259 OID 48818)
-- Dependencies: 855
-- Name: ix_fk_receptiontype_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_receptiontype_lpu ON receptiontype USING btree (lpu);


--
-- TOC entry 9226 (class 1259 OID 48819)
-- Dependencies: 856
-- Name: ix_fk_receptiontype_rights_receptiontype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_receptiontype_rights_receptiontype ON receptiontype_rights USING btree (receptiontype);


--
-- TOC entry 9227 (class 1259 OID 48820)
-- Dependencies: 856
-- Name: ix_fk_receptiontype_rights_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_receptiontype_rights_sysuser ON receptiontype_rights USING btree (sysuser);


--
-- TOC entry 9228 (class 1259 OID 48821)
-- Dependencies: 857
-- Name: ix_fk_recipe$ambtick_status; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$ambtick_status" ON recipe USING btree (status_id);


--
-- TOC entry 9229 (class 1259 OID 48822)
-- Dependencies: 857
-- Name: ix_fk_recipe$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$emp" ON recipe USING btree (emp_id);


--
-- TOC entry 9230 (class 1259 OID 48823)
-- Dependencies: 857
-- Name: ix_fk_recipe$icd10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$icd10" ON recipe USING btree (icd10_id);


--
-- TOC entry 9231 (class 1259 OID 48824)
-- Dependencies: 857
-- Name: ix_fk_recipe$idoc_a; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$idoc_a" ON recipe USING btree (idoc_a_id);


--
-- TOC entry 9232 (class 1259 OID 48825)
-- Dependencies: 857
-- Name: ix_fk_recipe$mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$mdoc" ON recipe USING btree (mdoc_id);


--
-- TOC entry 9233 (class 1259 OID 48826)
-- Dependencies: 857
-- Name: ix_fk_recipe$pay_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$pay_type" ON recipe USING btree (pay_type_id);


--
-- TOC entry 9234 (class 1259 OID 48827)
-- Dependencies: 857
-- Name: ix_fk_recipe$recipe_duration; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$recipe_duration" ON recipe USING btree (duration_id);


--
-- TOC entry 9235 (class 1259 OID 48828)
-- Dependencies: 857
-- Name: ix_fk_recipe$recipe_lgot_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$recipe_lgot_type" ON recipe USING btree (lgot_type_id);


--
-- TOC entry 9236 (class 1259 OID 48829)
-- Dependencies: 857
-- Name: ix_fk_recipe$recipe_percent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$recipe_percent" ON recipe USING btree (percent_id);


--
-- TOC entry 9237 (class 1259 OID 48830)
-- Dependencies: 857
-- Name: ix_fk_recipe$recipe_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$recipe_type" ON recipe USING btree (type_id);


--
-- TOC entry 9238 (class 1259 OID 48831)
-- Dependencies: 857
-- Name: ix_fk_recipe$visit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe$visit" ON recipe USING btree (visit_id);


--
-- TOC entry 9239 (class 1259 OID 48832)
-- Dependencies: 857
-- Name: ix_fk_recipe_benefit_financin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_benefit_financin ON recipe USING btree (benefit_financing);


--
-- TOC entry 9243 (class 1259 OID 48833)
-- Dependencies: 858
-- Name: ix_fk_recipe_duration$recipe_lgot_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_duration$recipe_lgot_type" ON recipe_duration USING btree (type_id);


--
-- TOC entry 9244 (class 1259 OID 48834)
-- Dependencies: 858
-- Name: ix_fk_recipe_duration_benefit_financin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_duration_benefit_financin ON recipe_duration USING btree (benefit_financing);


--
-- TOC entry 9249 (class 1259 OID 48835)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$actmatter; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$actmatter" ON recipe_medic USING btree (actmatter);


--
-- TOC entry 9250 (class 1259 OID 48836)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$massunit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$massunit" ON recipe_medic USING btree (doza_unit_id);


--
-- TOC entry 9251 (class 1259 OID 48837)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$massunit2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$massunit2" ON recipe_medic USING btree (unit_id);


--
-- TOC entry 9252 (class 1259 OID 48838)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$medic_frequency; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$medic_frequency" ON recipe_medic USING btree (frequency_id);


--
-- TOC entry 9253 (class 1259 OID 48839)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$medic_input_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$medic_input_type" ON recipe_medic USING btree (input_id);


--
-- TOC entry 9254 (class 1259 OID 48840)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$medic_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$medic_name" ON recipe_medic USING btree (tradenames);


--
-- TOC entry 9255 (class 1259 OID 48841)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic$recipe; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic$recipe" ON recipe_medic USING btree (recipe_id);


--
-- TOC entry 9256 (class 1259 OID 48842)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic_benefit_medic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_medic_benefit_medic ON recipe_medic USING btree (benefit_medic);


--
-- TOC entry 9257 (class 1259 OID 48843)
-- Dependencies: 860
-- Name: ix_fk_recipe_medic_latinnames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_medic_latinnames ON recipe_medic USING btree (latinnames);


--
-- TOC entry 9260 (class 1259 OID 48844)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$actmatter; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$actmatter" ON recipe_medic_template USING btree (actmatter);


--
-- TOC entry 9261 (class 1259 OID 48845)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$massunit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$massunit" ON recipe_medic_template USING btree (doza_unit_id);


--
-- TOC entry 9262 (class 1259 OID 48846)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$massunit2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$massunit2" ON recipe_medic_template USING btree (unit_id);


--
-- TOC entry 9263 (class 1259 OID 48847)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$medic_frequency; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$medic_frequency" ON recipe_medic_template USING btree (frequency_id);


--
-- TOC entry 9264 (class 1259 OID 48848)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$medic_input_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$medic_input_type" ON recipe_medic_template USING btree (input_id);


--
-- TOC entry 9265 (class 1259 OID 48849)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$medic_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$medic_name" ON recipe_medic_template USING btree (tradenames);


--
-- TOC entry 9266 (class 1259 OID 48850)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t$medic_template; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_medic_t$medic_template" ON recipe_medic_template USING btree (medic_template_id);


--
-- TOC entry 9267 (class 1259 OID 48851)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t_benefit_medic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_medic_t_benefit_medic ON recipe_medic_template USING btree (benefit_medic);


--
-- TOC entry 9268 (class 1259 OID 48852)
-- Dependencies: 861
-- Name: ix_fk_recipe_medic_t_latinnames; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_medic_t_latinnames ON recipe_medic_template USING btree (latinnames);


--
-- TOC entry 9271 (class 1259 OID 48853)
-- Dependencies: 862
-- Name: ix_fk_recipe_percent$recipe_lgot_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_recipe_percent$recipe_lgot_type" ON recipe_percent USING btree (type_id);


--
-- TOC entry 9272 (class 1259 OID 48854)
-- Dependencies: 862
-- Name: ix_fk_recipe_percent_benefit_financin; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_percent_benefit_financin ON recipe_percent USING btree (benefit_financing);


--
-- TOC entry 9240 (class 1259 OID 48855)
-- Dependencies: 857
-- Name: ix_fk_recipe_recipe_prescript; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_recipe_recipe_prescript ON recipe USING btree (recipe_prescription_type);


--
-- TOC entry 9296 (class 1259 OID 48856)
-- Dependencies: 875
-- Name: ix_fk_registr_ill_diag_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_diag_mkb_10 ON registr_ill_diagnoses USING btree (mkb_10);


--
-- TOC entry 9297 (class 1259 OID 48857)
-- Dependencies: 875
-- Name: ix_fk_registr_ill_diag_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_diag_sysuser ON registr_ill_diagnoses USING btree (creator);


--
-- TOC entry 9300 (class 1259 OID 48858)
-- Dependencies: 876
-- Name: ix_fk_registr_ill_paci_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_paci_mdoc ON registr_ill_pacients USING btree (mdoc_id);


--
-- TOC entry 9301 (class 1259 OID 48859)
-- Dependencies: 876
-- Name: ix_fk_registr_ill_paci_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_paci_people ON registr_ill_pacients USING btree (people);


--
-- TOC entry 9302 (class 1259 OID 48860)
-- Dependencies: 876
-- Name: ix_fk_registr_ill_paci_registr_ill_diag; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_paci_registr_ill_diag ON registr_ill_pacients USING btree (registr_ill_diagnoses);


--
-- TOC entry 9303 (class 1259 OID 48861)
-- Dependencies: 876
-- Name: ix_fk_registr_ill_paci_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_ill_paci_sysuser ON registr_ill_pacients USING btree (sysuser);


--
-- TOC entry 9306 (class 1259 OID 48862)
-- Dependencies: 877
-- Name: ix_fk_registr_nosology_diag_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_diag_mkb_10 ON registr_nosology_diagnoses USING btree (mkb_10);


--
-- TOC entry 9307 (class 1259 OID 48863)
-- Dependencies: 877
-- Name: ix_fk_registr_nosology_diag_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_diag_sysuser ON registr_nosology_diagnoses USING btree (creator);


--
-- TOC entry 9310 (class 1259 OID 48864)
-- Dependencies: 878
-- Name: ix_fk_registr_nosology_paci_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_paci_mdoc ON registr_nosology_pacients USING btree (mdoc_id);


--
-- TOC entry 9311 (class 1259 OID 48865)
-- Dependencies: 878
-- Name: ix_fk_registr_nosology_paci_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_paci_people ON registr_nosology_pacients USING btree (people);


--
-- TOC entry 9312 (class 1259 OID 48866)
-- Dependencies: 878
-- Name: ix_fk_registr_nosology_paci_registr_nosology_diag; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_paci_registr_nosology_diag ON registr_nosology_pacients USING btree (registr_nosology_diagnoses);


--
-- TOC entry 9313 (class 1259 OID 48867)
-- Dependencies: 878
-- Name: ix_fk_registr_nosology_paci_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registr_nosology_paci_sysuser ON registr_nosology_pacients USING btree (sysuser);


--
-- TOC entry 9320 (class 1259 OID 48868)
-- Dependencies: 881
-- Name: ix_fk_registwi_linetype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registwi_linetype ON registwindow_linetype USING btree (linetype);


--
-- TOC entry 9321 (class 1259 OID 48869)
-- Dependencies: 881
-- Name: ix_fk_registwi_registwi; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registwi_registwi ON registwindow_linetype USING btree (registrywindow);


--
-- TOC entry 9322 (class 1259 OID 48870)
-- Dependencies: 881
-- Name: ix_fk_registwindow_linetype_linetype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registwindow_linetype_linetype ON registwindow_linetype USING btree (linetype);


--
-- TOC entry 9323 (class 1259 OID 48871)
-- Dependencies: 881
-- Name: ix_fk_registwindow_linetype_registwindow; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_registwindow_linetype_registwindow ON registwindow_linetype USING btree (registrywindow);


--
-- TOC entry 9333 (class 1259 OID 48872)
-- Dependencies: 885
-- Name: ix_fk_report_parameter_param_datatype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_report_parameter_param_datatype ON report_parameter USING btree (param_datatype);


--
-- TOC entry 9334 (class 1259 OID 48873)
-- Dependencies: 885
-- Name: ix_fk_report_parameter_report_template; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_report_parameter_report_template ON report_parameter USING btree (report_template);


--
-- TOC entry 9342 (class 1259 OID 48874)
-- Dependencies: 887
-- Name: ix_fk_report_template__report_group; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_report_template__report_group ON report_template_group USING btree (report_group);


--
-- TOC entry 9343 (class 1259 OID 48875)
-- Dependencies: 887
-- Name: ix_fk_report_template__report_template; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_report_template__report_template ON report_template_group USING btree (report_template);


--
-- TOC entry 8906 (class 1259 OID 48876)
-- Dependencies: 754
-- Name: ix_fk_retrainm_educatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_retrainm_educatio ON retrainment USING btree (educationinstitution);


--
-- TOC entry 8907 (class 1259 OID 48877)
-- Dependencies: 754
-- Name: ix_fk_retrainm_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_retrainm_people ON retrainment USING btree (people);


--
-- TOC entry 8908 (class 1259 OID 48878)
-- Dependencies: 754
-- Name: ix_fk_retrainm_sertific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_retrainm_sertific ON retrainment USING btree (sertificatespeciality);


--
-- TOC entry 9359 (class 1259 OID 48879)
-- Dependencies: 892
-- Name: ix_fk_risk_factors_diabetes_second_type_people_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_risk_factors_diabetes_second_type_people_people ON risk_factors_diabetes_second_type_people USING btree (people);


--
-- TOC entry 9360 (class 1259 OID 48880)
-- Dependencies: 892
-- Name: ix_fk_risk_factors_diabetes_second_type_people_risk_factor_d2t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_risk_factors_diabetes_second_type_people_risk_factor_d2t ON risk_factors_diabetes_second_type_people USING btree (risk_factor_diabetes_second_type);


--
-- TOC entry 9367 (class 1259 OID 48881)
-- Dependencies: 894
-- Name: ix_fk_risk_factors_ibs_people_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_risk_factors_ibs_people_people ON risk_factors_ibs_people USING btree (people);


--
-- TOC entry 9368 (class 1259 OID 48882)
-- Dependencies: 894
-- Name: ix_fk_risk_factors_ibs_people_risk_factor_ibs; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_risk_factors_ibs_people_risk_factor_ibs ON risk_factors_ibs_people USING btree (risk_factor_ibs);


--
-- TOC entry 9377 (class 1259 OID 48883)
-- Dependencies: 897 897
-- Name: ix_fk_role_right$right_role; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_role_right$right_role" ON role_right USING btree ("right", role);


--
-- TOC entry 9378 (class 1259 OID 48884)
-- Dependencies: 897 897
-- Name: ix_fk_role_right$role_right; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_role_right$role_right" ON role_right USING btree (role, "right");


--
-- TOC entry 8152 (class 1259 OID 48885)
-- Dependencies: 487
-- Name: ix_fk_room_building; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_room_building ON room USING btree (building);


--
-- TOC entry 9381 (class 1259 OID 48886)
-- Dependencies: 900
-- Name: ix_fk_room_his_room_typ; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_room_his_room_typ ON room_history USING btree (room_type);


--
-- TOC entry 8153 (class 1259 OID 48887)
-- Dependencies: 487
-- Name: ix_fk_room_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_room_otdel ON room USING btree (otdel);


--
-- TOC entry 8154 (class 1259 OID 48888)
-- Dependencies: 487
-- Name: ix_fk_room_room_typ; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_room_room_typ ON room USING btree (room_type);


--
-- TOC entry 9390 (class 1259 OID 48889)
-- Dependencies: 903
-- Name: ix_fk_rw_accidentnotification_tmpl_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_rw_accidentnotification_tmpl_lpu ON rw_accidentnotification_tmpl USING btree (lpu);


--
-- TOC entry 9393 (class 1259 OID 48890)
-- Dependencies: 904
-- Name: ix_fk_sanatori_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sanatori_otdel ON sanatorium USING btree (otdel);


--
-- TOC entry 9397 (class 1259 OID 48891)
-- Dependencies: 905
-- Name: ix_fk_sanatori_otdel2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sanatori_otdel2 ON sanatorium_history USING btree (otdel);


--
-- TOC entry 9394 (class 1259 OID 48892)
-- Dependencies: 904
-- Name: ix_fk_sanatori_resort_t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sanatori_resort_t ON sanatorium USING btree (resort_type_oid);


--
-- TOC entry 9398 (class 1259 OID 48893)
-- Dependencies: 905
-- Name: ix_fk_sanatori_sanatori2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sanatori_sanatori2 ON sanatorium_history USING btree (resort_type_oid);


--
-- TOC entry 9410 (class 1259 OID 48894)
-- Dependencies: 907
-- Name: ix_fk_schedule_blockoperator; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_blockoperator ON schedule USING btree (blockoperator);


--
-- TOC entry 9411 (class 1259 OID 48895)
-- Dependencies: 907
-- Name: ix_fk_schedule_cabinet; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_cabinet ON schedule USING btree (cabinet);


--
-- TOC entry 9433 (class 1259 OID 48896)
-- Dependencies: 912
-- Name: ix_fk_schedule_log$operator; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_schedule_log$operator" ON schedule_log USING btree (operator);


--
-- TOC entry 9434 (class 1259 OID 48897)
-- Dependencies: 912
-- Name: ix_fk_schedule_log$patient; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_schedule_log$patient" ON schedule_log USING btree (patient);


--
-- TOC entry 9435 (class 1259 OID 48898)
-- Dependencies: 912
-- Name: ix_fk_schedule_log$schedule; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_schedule_log$schedule" ON schedule_log USING btree (schedule);


--
-- TOC entry 9412 (class 1259 OID 48899)
-- Dependencies: 907
-- Name: ix_fk_schedule_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_lpu ON schedule USING btree (lpu);


--
-- TOC entry 9413 (class 1259 OID 48900)
-- Dependencies: 907
-- Name: ix_fk_schedule_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_people ON schedule USING btree (people);


--
-- TOC entry 9438 (class 1259 OID 48901)
-- Dependencies: 913
-- Name: ix_fk_schedule_people_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_people_people ON schedule_people USING btree (people);


--
-- TOC entry 9439 (class 1259 OID 48902)
-- Dependencies: 913
-- Name: ix_fk_schedule_people_schedule; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_people_schedule ON schedule_people USING btree (schedule);


--
-- TOC entry 9414 (class 1259 OID 48903)
-- Dependencies: 907
-- Name: ix_fk_schedule_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_presctyp ON schedule USING btree (presctype);


--
-- TOC entry 9415 (class 1259 OID 48904)
-- Dependencies: 907
-- Name: ix_fk_schedule_receptio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_receptio ON schedule USING btree (isnapronly);


--
-- TOC entry 9416 (class 1259 OID 48905)
-- Dependencies: 907
-- Name: ix_fk_schedule_recordoperator; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_recordoperator ON schedule USING btree (recordoperator);


--
-- TOC entry 9443 (class 1259 OID 48906)
-- Dependencies: 915
-- Name: ix_fk_schedule_schedule; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_schedule ON schedule_template_detail USING btree (template_oid);


--
-- TOC entry 9417 (class 1259 OID 48907)
-- Dependencies: 907
-- Name: ix_fk_schedule_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_sotr ON schedule USING btree (sotr);


--
-- TOC entry 9448 (class 1259 OID 48908)
-- Dependencies: 916
-- Name: ix_fk_schedule_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_sysuser ON scheduleautomake USING btree (sysuser);


--
-- TOC entry 9418 (class 1259 OID 48909)
-- Dependencies: 907
-- Name: ix_fk_schedule_sysuser2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_sysuser2 ON schedule USING btree (sysuser);


--
-- TOC entry 9444 (class 1259 OID 48910)
-- Dependencies: 915
-- Name: ix_fk_schedule_templat_cabinet; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_templat_cabinet ON schedule_template_detail USING btree (cabinet);


--
-- TOC entry 9445 (class 1259 OID 48911)
-- Dependencies: 915
-- Name: ix_fk_schedule_templat_post; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_templat_post ON schedule_template_detail USING btree (post);


--
-- TOC entry 9440 (class 1259 OID 48912)
-- Dependencies: 914
-- Name: ix_fk_schedule_templat_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_schedule_templat_sotr ON schedule_template USING btree (sotr);


--
-- TOC entry 9457 (class 1259 OID 48916)
-- Dependencies: 919
-- Name: ix_fk_scr_presc_risk_d2t_risk_d2t; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_scr_presc_risk_d2t_risk_d2t ON screening_presctype_risk_fact_diab_second_type USING btree (risk_factor_diabet_second_type);


--
-- TOC entry 9458 (class 1259 OID 48917)
-- Dependencies: 919
-- Name: ix_fk_scr_presc_risk_d2t_scr_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_scr_presc_risk_d2t_scr_presc ON screening_presctype_risk_fact_diab_second_type USING btree (screening_presctype);


--
-- TOC entry 9463 (class 1259 OID 48918)
-- Dependencies: 920
-- Name: ix_fk_scr_presc_risk_ibs_risk_ibs; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_scr_presc_risk_ibs_risk_ibs ON screening_presctype_risk_fact_ibs USING btree (risk_factor_ibs);


--
-- TOC entry 9464 (class 1259 OID 48919)
-- Dependencies: 920
-- Name: ix_fk_scr_presc_risk_ibs_scr_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_scr_presc_risk_ibs_scr_presc ON screening_presctype_risk_fact_ibs USING btree (screening_presctype);


--
-- TOC entry 9453 (class 1259 OID 48920)
-- Dependencies: 918
-- Name: ix_fk_screening_presctype_idx_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_screening_presctype_idx_presctype ON screening_presctype USING btree (presctype);


--
-- TOC entry 9454 (class 1259 OID 48921)
-- Dependencies: 918
-- Name: ix_fk_screening_presctype_idx_screening; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_screening_presctype_idx_screening ON screening_presctype USING btree (screening);


--
-- TOC entry 8911 (class 1259 OID 48922)
-- Dependencies: 755
-- Name: ix_fk_sertific_educatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sertific_educatio ON sertificateeducation USING btree (educationinstitution);


--
-- TOC entry 8912 (class 1259 OID 48923)
-- Dependencies: 755
-- Name: ix_fk_sertific_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sertific_people ON sertificateeducation USING btree (people);


--
-- TOC entry 8913 (class 1259 OID 48924)
-- Dependencies: 755
-- Name: ix_fk_sertific_sertific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sertific_sertific ON sertificateeducation USING btree (sertificatespeciality);


--
-- TOC entry 9490 (class 1259 OID 48925)
-- Dependencies: 927
-- Name: ix_fk_service__services2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service__services2 ON service_required USING btree (service);


--
-- TOC entry 9469 (class 1259 OID 48926)
-- Dependencies: 921
-- Name: ix_fk_service_bed_prof_bed_profile; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_bed_prof_bed_profile ON service_bed_profile USING btree (bed_profile);


--
-- TOC entry 9470 (class 1259 OID 48927)
-- Dependencies: 921
-- Name: ix_fk_service_bed_prof_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_bed_prof_services ON service_bed_profile USING btree (service);


--
-- TOC entry 9478 (class 1259 OID 48928)
-- Dependencies: 924
-- Name: ix_fk_service_mkb10_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_mkb10_mkb_10 ON service_mkb10 USING btree (mkb_10);


--
-- TOC entry 9479 (class 1259 OID 48929)
-- Dependencies: 924
-- Name: ix_fk_service_mkb10_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_mkb10_services ON service_mkb10 USING btree (service);


--
-- TOC entry 9483 (class 1259 OID 48930)
-- Dependencies: 925
-- Name: ix_fk_service_presctyp_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_presctyp_presctype ON service_presctype USING btree (presctype);


--
-- TOC entry 9484 (class 1259 OID 48931)
-- Dependencies: 925
-- Name: ix_fk_service_presctyp_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_presctyp_services ON service_presctype USING btree (service);


--
-- TOC entry 7540 (class 1259 OID 48932)
-- Dependencies: 177
-- Name: ix_fk_service_price_insurprogram; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_price_insurprogram ON service_price USING btree (insurprogram);


--
-- TOC entry 7541 (class 1259 OID 48935)
-- Dependencies: 177
-- Name: ix_fk_service_price_service_price_ca; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_price_service_price_ca ON service_price USING btree (service_price_category);


--
-- TOC entry 7542 (class 1259 OID 48936)
-- Dependencies: 177
-- Name: ix_fk_service_price_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_service_price_services ON service_price USING btree (services);


--
-- TOC entry 9493 (class 1259 OID 48937)
-- Dependencies: 928
-- Name: ix_fk_services_pay_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_services_pay_type ON services USING btree (pay_type);


--
-- TOC entry 9494 (class 1259 OID 48938)
-- Dependencies: 928
-- Name: ix_fk_services_service_group; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_services_service_group ON services USING btree (service_group);


--
-- TOC entry 9521 (class 1259 OID 48939)
-- Dependencies: 933
-- Name: ix_fk_sicklist_form_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_form_company ON sicklist_form USING btree (company);


--
-- TOC entry 9522 (class 1259 OID 48940)
-- Dependencies: 933
-- Name: ix_fk_sicklist_form_sicklist_formsta; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_form_sicklist_formsta ON sicklist_form USING btree (sicklist_formstate);


--
-- TOC entry 9523 (class 1259 OID 48941)
-- Dependencies: 933
-- Name: ix_fk_sicklist_form_sicklist_formtit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_form_sicklist_formtit ON sicklist_form USING btree (sicklist_formtitle);


--
-- TOC entry 9524 (class 1259 OID 48942)
-- Dependencies: 933
-- Name: ix_fk_sicklist_form_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_form_sysuser ON sicklist_form USING btree (sysuser);


--
-- TOC entry 9508 (class 1259 OID 48943)
-- Dependencies: 932
-- Name: ix_fk_sicklist_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_lpu ON sicklist USING btree (lpu);


--
-- TOC entry 9509 (class 1259 OID 48944)
-- Dependencies: 932
-- Name: ix_fk_sicklist_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_people ON sicklist USING btree (people_id);


--
-- TOC entry 9539 (class 1259 OID 48945)
-- Dependencies: 938
-- Name: ix_fk_sicklist_period$sicklist; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sicklist_period$sicklist" ON sicklist_period USING btree (sicklist_id);


--
-- TOC entry 9510 (class 1259 OID 48946)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist ON sicklist USING btree (parent_id);


--
-- TOC entry 9511 (class 1259 OID 48947)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist7; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist7 ON sicklist USING btree (regimen_id);


--
-- TOC entry 9512 (class 1259 OID 48948)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_link; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_link ON sicklist USING btree (link_id1);


--
-- TOC entry 9513 (class 1259 OID 48949)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_link2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_link2 ON sicklist USING btree (link_id2);


--
-- TOC entry 9514 (class 1259 OID 48950)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_other; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_other ON sicklist USING btree (other_id);


--
-- TOC entry 9515 (class 1259 OID 48953)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_reason; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_reason ON sicklist USING btree (reason_id);


--
-- TOC entry 9516 (class 1259 OID 48954)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_reason_ch; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_reason_ch ON sicklist USING btree (reason_change_id);


--
-- TOC entry 9517 (class 1259 OID 48955)
-- Dependencies: 932
-- Name: ix_fk_sicklist_sicklist_reason_do; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sicklist_sicklist_reason_do ON sicklist USING btree (reason_dop_id);


--
-- TOC entry 8918 (class 1259 OID 48956)
-- Dependencies: 757
-- Name: ix_fk_skillimp_educatio; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_skillimp_educatio ON skillimprovement USING btree (educationinstitution);


--
-- TOC entry 8919 (class 1259 OID 48957)
-- Dependencies: 757
-- Name: ix_fk_skillimp_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_skillimp_people ON skillimprovement USING btree (people);


--
-- TOC entry 8920 (class 1259 OID 48958)
-- Dependencies: 757
-- Name: ix_fk_skillimp_sertific; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_skillimp_sertific ON skillimprovement USING btree (sertificatespeciality);


--
-- TOC entry 9558 (class 1259 OID 48959)
-- Dependencies: 946
-- Name: ix_fk_skippaym_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_skippaym_people ON skippayment USING btree (people);


--
-- TOC entry 9559 (class 1259 OID 48960)
-- Dependencies: 946
-- Name: ix_fk_skippaym_skippaym; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_skippaym_skippaym ON skippayment USING btree (skippaymentreason);


--
-- TOC entry 9567 (class 1259 OID 48962)
-- Dependencies: 949
-- Name: ix_fk_smscente_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_smscente_people ON smscenter USING btree (people);


--
-- TOC entry 9614 (class 1259 OID 48963)
-- Dependencies: 968
-- Name: ix_fk_sotr_dis_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_dis_district ON sotrsotrs_districtdistrict USING btree (district);


--
-- TOC entry 9615 (class 1259 OID 48964)
-- Dependencies: 968
-- Name: ix_fk_sotr_dis_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_dis_sotr ON sotrsotrs_districtdistrict USING btree (sotrs);


--
-- TOC entry 8158 (class 1259 OID 48965)
-- Dependencies: 488
-- Name: ix_fk_sotr_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_district ON sotr USING btree (district);


--
-- TOC entry 9574 (class 1259 OID 48967)
-- Dependencies: 954 954
-- Name: ix_fk_sotr_ib_section$ib_section_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_ib_section$ib_section_sotr" ON sotr_ib_section USING btree (ib_section, sotr);


--
-- TOC entry 9575 (class 1259 OID 48968)
-- Dependencies: 954 954
-- Name: ix_fk_sotr_ib_section$sotr_ib_section; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_ib_section$sotr_ib_section" ON sotr_ib_section USING btree (sotr, ib_section);


--
-- TOC entry 9576 (class 1259 OID 48969)
-- Dependencies: 955 955
-- Name: ix_fk_sotr_lpu$lpu_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_lpu$lpu_sotr" ON sotr_lpu USING btree (lpu, sotr);


--
-- TOC entry 9577 (class 1259 OID 48970)
-- Dependencies: 955 955
-- Name: ix_fk_sotr_lpu$sotr_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_lpu$sotr_lpu" ON sotr_lpu USING btree (sotr, lpu);


--
-- TOC entry 8159 (class 1259 OID 48971)
-- Dependencies: 488
-- Name: ix_fk_sotr_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_otdel ON sotr USING btree (otdel);


--
-- TOC entry 9581 (class 1259 OID 48972)
-- Dependencies: 957 957
-- Name: ix_fk_sotr_otdel$otdel_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_otdel$otdel_sotr" ON sotr_otdel USING btree (otdel, sotr);


--
-- TOC entry 9582 (class 1259 OID 48973)
-- Dependencies: 957 957
-- Name: ix_fk_sotr_otdel$sotr_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_otdel$sotr_otdel" ON sotr_otdel USING btree (sotr, otdel);


--
-- TOC entry 8160 (class 1259 OID 48974)
-- Dependencies: 488
-- Name: ix_fk_sotr_post; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_post ON sotr USING btree (post);


--
-- TOC entry 9583 (class 1259 OID 48975)
-- Dependencies: 959
-- Name: ix_fk_sotr_pre_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_pre_presctyp ON sotr_presctype USING btree (presctype_id);


--
-- TOC entry 9584 (class 1259 OID 48976)
-- Dependencies: 959
-- Name: ix_fk_sotr_presctype_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_presctype_sotr ON sotr_presctype USING btree (sotr);


--
-- TOC entry 9585 (class 1259 OID 48977)
-- Dependencies: 959 959
-- Name: ix_fk_sotr_presctype_sotr_appoint; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_presctype_sotr_appoint ON sotr_presctype USING btree (sotr, appoint);


--
-- TOC entry 9586 (class 1259 OID 48978)
-- Dependencies: 959 959
-- Name: ix_fk_sotr_presctype_sotr_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_presctype_sotr_presctype ON sotr_presctype USING btree (sotr, presctype_id);


--
-- TOC entry 9589 (class 1259 OID 48979)
-- Dependencies: 960
-- Name: ix_fk_sotr_rating_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_rating_people ON sotr_rating USING btree (people);


--
-- TOC entry 9590 (class 1259 OID 48980)
-- Dependencies: 960
-- Name: ix_fk_sotr_rating_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_rating_sotr ON sotr_rating USING btree (sotr);


--
-- TOC entry 9595 (class 1259 OID 48981)
-- Dependencies: 962
-- Name: ix_fk_sotr_rec_recipe_l; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_rec_recipe_l ON sotr_recipe_lgot_type USING btree (recipe_lgot_type);


--
-- TOC entry 9596 (class 1259 OID 48982)
-- Dependencies: 962
-- Name: ix_fk_sotr_rec_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_rec_sotr ON sotr_recipe_lgot_type USING btree (sotr);


--
-- TOC entry 9593 (class 1259 OID 48983)
-- Dependencies: 961 961
-- Name: ix_fk_sotr_receptiontype$receptiontype_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_receptiontype$receptiontype_sotr" ON sotr_receptiontype USING btree (receptiontype, sotr);


--
-- TOC entry 9594 (class 1259 OID 48984)
-- Dependencies: 961 961
-- Name: ix_fk_sotr_receptiontype$sotr_receptiontype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_receptiontype$sotr_receptiontype" ON sotr_receptiontype USING btree (sotr, receptiontype);


--
-- TOC entry 9599 (class 1259 OID 48985)
-- Dependencies: 963
-- Name: ix_fk_sotr_review_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_review_people ON sotr_review USING btree (people);


--
-- TOC entry 9600 (class 1259 OID 48986)
-- Dependencies: 963
-- Name: ix_fk_sotr_review_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_review_sotr ON sotr_review USING btree (sotr);


--
-- TOC entry 9603 (class 1259 OID 48987)
-- Dependencies: 964 964
-- Name: ix_fk_sotr_right$right_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_right$right_sotr" ON sotr_right USING btree ("right", sotr);


--
-- TOC entry 9604 (class 1259 OID 48988)
-- Dependencies: 964 964
-- Name: ix_fk_sotr_right$sotr_right; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_right$sotr_right" ON sotr_right USING btree (sotr, "right");


--
-- TOC entry 9605 (class 1259 OID 48989)
-- Dependencies: 965 965
-- Name: ix_fk_sotr_right_all$right_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_right_all$right_sotr" ON sotr_right_all USING btree ("right", sotr);


--
-- TOC entry 9606 (class 1259 OID 48990)
-- Dependencies: 965 965
-- Name: ix_fk_sotr_right_all$sotr_right; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_right_all$sotr_right" ON sotr_right_all USING btree (sotr, "right");


--
-- TOC entry 9607 (class 1259 OID 48991)
-- Dependencies: 966 966
-- Name: ix_fk_sotr_role$role_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_sotr_role$role_sotr" ON sotr_role USING btree (role, sotr);


--
-- TOC entry 9608 (class 1259 OID 48992)
-- Dependencies: 966 966
-- Name: ix_fk_sotr_role$sotr_role; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "ix_fk_sotr_role$sotr_role" ON sotr_role USING btree (sotr, role);


--
-- TOC entry 9609 (class 1259 OID 48993)
-- Dependencies: 967
-- Name: ix_fk_sotr_sec_ib_secti; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_sec_ib_secti ON sotr_section_ib2 USING btree (section_ib);


--
-- TOC entry 9610 (class 1259 OID 48994)
-- Dependencies: 967
-- Name: ix_fk_sotr_sec_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_sec_otdel ON sotr_section_ib2 USING btree (otdel);


--
-- TOC entry 9611 (class 1259 OID 48995)
-- Dependencies: 967
-- Name: ix_fk_sotr_sec_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_sec_sysuser ON sotr_section_ib2 USING btree (sysuser);


--
-- TOC entry 8161 (class 1259 OID 48996)
-- Dependencies: 488 488 488
-- Name: ix_fk_sotr_sys_otd_post; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_sys_otd_post ON sotr USING btree (sysuser, otdel, post);


--
-- TOC entry 8162 (class 1259 OID 48997)
-- Dependencies: 488
-- Name: ix_fk_sotr_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotr_sysuser ON sotr USING btree (sysuser);


--
-- TOC entry 9619 (class 1259 OID 48998)
-- Dependencies: 969
-- Name: ix_fk_sotrwork_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotrwork_sysuser ON sotrworkday USING btree (sysuser);


--
-- TOC entry 9620 (class 1259 OID 48999)
-- Dependencies: 969
-- Name: ix_fk_sotrworkday_holidayreason; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sotrworkday_holidayreason ON sotrworkday USING btree (holidayreason);


--
-- TOC entry 9625 (class 1259 OID 49000)
-- Dependencies: 970
-- Name: ix_fk_speciali_heal_pro; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_speciali_heal_pro ON specialization USING btree (heal_profile);


--
-- TOC entry 9626 (class 1259 OID 49001)
-- Dependencies: 970
-- Name: ix_fk_speciali_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_speciali_mkb_10 ON specialization USING btree (mkb10);


--
-- TOC entry 9627 (class 1259 OID 49002)
-- Dependencies: 970
-- Name: ix_fk_speciali_sanatori; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_speciali_sanatori ON specialization USING btree (sanatorium);


--
-- TOC entry 9636 (class 1259 OID 49003)
-- Dependencies: 974
-- Name: ix_fk_stacionar_operat_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stacionar_operat_mdoc ON stacionar_operations USING btree (mdoc);


--
-- TOC entry 9637 (class 1259 OID 49004)
-- Dependencies: 974
-- Name: ix_fk_stacionar_operat_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stacionar_operat_sotr ON stacionar_operations USING btree (operator);


--
-- TOC entry 9638 (class 1259 OID 49005)
-- Dependencies: 974
-- Name: ix_fk_stacionar_operat_sotr2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stacionar_operat_sotr2 ON stacionar_operations USING btree (register);


--
-- TOC entry 9643 (class 1259 OID 49006)
-- Dependencies: 976
-- Name: ix_fk_stafflis_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stafflis_otdel ON stafflist USING btree (otdel);


--
-- TOC entry 9644 (class 1259 OID 49007)
-- Dependencies: 976
-- Name: ix_fk_stafflis_post; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stafflis_post ON stafflist USING btree (post);


--
-- TOC entry 9645 (class 1259 OID 49008)
-- Dependencies: 976
-- Name: ix_fk_stafflis_stafflis; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_stafflis_stafflis ON stafflist USING btree (stafflist_header);


--
-- TOC entry 9658 (class 1259 OID 49009)
-- Dependencies: 982
-- Name: ix_fk_statticket_company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_company ON statticket USING btree (refer_id);


--
-- TOC entry 9659 (class 1259 OID 49010)
-- Dependencies: 982
-- Name: ix_fk_statticket_die_reason_mkb_10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_die_reason_mkb_10 ON statticket USING btree (die_reason_mkb_10);


--
-- TOC entry 9660 (class 1259 OID 49011)
-- Dependencies: 982
-- Name: ix_fk_statticket_insurance; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_insurance ON statticket USING btree (idoc_id);


--
-- TOC entry 9661 (class 1259 OID 49012)
-- Dependencies: 982
-- Name: ix_fk_statticket_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_otdel ON statticket USING btree (otdel);


--
-- TOC entry 9662 (class 1259 OID 49013)
-- Dependencies: 982
-- Name: ix_fk_statticket_reason_late_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_reason_late_type ON statticket USING btree (reason_late);


--
-- TOC entry 9663 (class 1259 OID 49014)
-- Dependencies: 982
-- Name: ix_fk_statticket_sign_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_sign_sotr ON statticket USING btree (sign_sotr);


--
-- TOC entry 9664 (class 1259 OID 49015)
-- Dependencies: 982
-- Name: ix_fk_statticket_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_sotr ON statticket USING btree (empo_id);


--
-- TOC entry 9665 (class 1259 OID 49016)
-- Dependencies: 982
-- Name: ix_fk_statticket_sotr2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_sotr2 ON statticket USING btree (empc_id);


--
-- TOC entry 9666 (class 1259 OID 49017)
-- Dependencies: 982
-- Name: ix_fk_statticket_standart_med_hel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_standart_med_hel ON statticket USING btree (med_help_id);


--
-- TOC entry 9667 (class 1259 OID 49018)
-- Dependencies: 982
-- Name: ix_fk_statticket_tick_res; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_tick_res ON statticket USING btree (result_id);


--
-- TOC entry 9668 (class 1259 OID 49019)
-- Dependencies: 982
-- Name: ix_fk_statticket_tick_subres; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_tick_subres ON statticket USING btree (subresult_id);


--
-- TOC entry 9669 (class 1259 OID 49020)
-- Dependencies: 982
-- Name: ix_fk_statticket_trauma; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_statticket_trauma ON statticket USING btree (trauma);


--
-- TOC entry 9683 (class 1259 OID 49021)
-- Dependencies: 988
-- Name: ix_fk_system_presctemp_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_system_presctemp_presctype ON system_presctemplatedetail USING btree (presctype);


--
-- TOC entry 9684 (class 1259 OID 49022)
-- Dependencies: 988
-- Name: ix_fk_system_presctemp_system_protocolt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_system_presctemp_system_protocolt ON system_presctemplatedetail USING btree (system_template_oid);


--
-- TOC entry 9705 (class 1259 OID 49023)
-- Dependencies: 996
-- Name: ix_fk_sysuser__lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__lpu ON sysuser_lpu_right2 USING btree (lpu);


--
-- TOC entry 9707 (class 1259 OID 49024)
-- Dependencies: 997
-- Name: ix_fk_sysuser__otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__otdel ON sysuser_otdel_right2 USING btree (otdel);


--
-- TOC entry 9723 (class 1259 OID 49025)
-- Dependencies: 1001
-- Name: ix_fk_sysuser__right; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__right ON sysuser_right2 USING btree ("right");


--
-- TOC entry 9725 (class 1259 OID 49026)
-- Dependencies: 1002
-- Name: ix_fk_sysuser__role; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__role ON sysuser_role2 USING btree (role);


--
-- TOC entry 9719 (class 1259 OID 49027)
-- Dependencies: 1000
-- Name: ix_fk_sysuser__sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser ON sysuser_region USING btree (sysuser);


--
-- TOC entry 9724 (class 1259 OID 49028)
-- Dependencies: 1001
-- Name: ix_fk_sysuser__sysuser2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser2 ON sysuser_right2 USING btree (sysuser);


--
-- TOC entry 9726 (class 1259 OID 49029)
-- Dependencies: 1002
-- Name: ix_fk_sysuser__sysuser3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser3 ON sysuser_role2 USING btree (sysuser);


--
-- TOC entry 9706 (class 1259 OID 49030)
-- Dependencies: 996
-- Name: ix_fk_sysuser__sysuser4; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser4 ON sysuser_lpu_right2 USING btree (sysuser);


--
-- TOC entry 9708 (class 1259 OID 49031)
-- Dependencies: 997
-- Name: ix_fk_sysuser__sysuser5; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser5 ON sysuser_otdel_right2 USING btree (sysuser);


--
-- TOC entry 9700 (class 1259 OID 49032)
-- Dependencies: 993
-- Name: ix_fk_sysuser__sysuser6; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__sysuser6 ON sysuser_audit USING btree (sysuser);


--
-- TOC entry 9720 (class 1259 OID 49033)
-- Dependencies: 1000
-- Name: ix_fk_sysuser__vregion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser__vregion ON sysuser_region USING btree (region);


--
-- TOC entry 9709 (class 1259 OID 49034)
-- Dependencies: 998
-- Name: ix_fk_sysuser_pharmacy_drugstore; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser_pharmacy_drugstore ON sysuser_pharmacy USING btree (drugstore);


--
-- TOC entry 9712 (class 1259 OID 49035)
-- Dependencies: 999
-- Name: ix_fk_sysuser_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser_presctyp ON sysuser_presctype USING btree (presctypes);


--
-- TOC entry 9713 (class 1259 OID 49036)
-- Dependencies: 999
-- Name: ix_fk_sysuser_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuser_sysuser ON sysuser_presctype USING btree (sysusers);


--
-- TOC entry 9714 (class 1259 OID 49037)
-- Dependencies: 999
-- Name: ix_fk_sysusers_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysusers_presctyp ON sysuser_presctype USING btree (presctypes);


--
-- TOC entry 9715 (class 1259 OID 49038)
-- Dependencies: 999
-- Name: ix_fk_sysusers_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysusers_sysuser ON sysuser_presctype USING btree (sysusers);


--
-- TOC entry 9730 (class 1259 OID 49039)
-- Dependencies: 1004
-- Name: ix_fk_sysuseru_sysrole; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuseru_sysrole ON sysuserusers_sysroleroles USING btree (roles);


--
-- TOC entry 9731 (class 1259 OID 49040)
-- Dependencies: 1004
-- Name: ix_fk_sysuseru_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_sysuseru_sysuser ON sysuserusers_sysroleroles USING btree (users);


--
-- TOC entry 9734 (class 1259 OID 49041)
-- Dependencies: 1005
-- Name: ix_fk_tablo_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_tablo_lpu ON tablo USING btree (lpu);


--
-- TOC entry 9743 (class 1259 OID 49042)
-- Dependencies: 1009
-- Name: ix_fk_terminal_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_terminal_lpu ON terminal USING btree (lpu);


--
-- TOC entry 9744 (class 1259 OID 49043)
-- Dependencies: 1009
-- Name: ix_fk_terminal_tkladrsp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_terminal_tkladrsp ON terminal USING btree (city);


--
-- TOC entry 9747 (class 1259 OID 49044)
-- Dependencies: 1010
-- Name: ix_fk_territor_district; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_territor_district ON territorialaccessory USING btree (dist);


--
-- TOC entry 9748 (class 1259 OID 49045)
-- Dependencies: 1010
-- Name: ix_fk_territor_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_territor_lpu ON territorialaccessory USING btree (lpu);


--
-- TOC entry 9749 (class 1259 OID 49046)
-- Dependencies: 1010
-- Name: ix_fk_territor_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_territor_people ON territorialaccessory USING btree (people);


--
-- TOC entry 9765 (class 1259 OID 49047)
-- Dependencies: 1018
-- Name: ix_fk_tick_res_medicalc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_tick_res_medicalc ON tick_res USING btree (medicalcondition);


--
-- TOC entry 9768 (class 1259 OID 49048)
-- Dependencies: 1019
-- Name: ix_fk_tick_sub_medicalc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_tick_sub_medicalc ON tick_subres USING btree (medicalcondition);


--
-- TOC entry 9782 (class 1259 OID 49049)
-- Dependencies: 1024
-- Name: ix_fk_travm$travm; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_travm$travm" ON travm USING btree (parent_id);


--
-- TOC entry 9787 (class 1259 OID 49050)
-- Dependencies: 1025
-- Name: ix_fk_treatmen_food_for; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_treatmen_food_for ON treatmen_conditions USING btree (food_form);


--
-- TOC entry 9788 (class 1259 OID 49051)
-- Dependencies: 1025
-- Name: ix_fk_treatmen_food_rep; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_treatmen_food_rep ON treatmen_conditions USING btree (food_repetition);


--
-- TOC entry 9789 (class 1259 OID 49052)
-- Dependencies: 1025
-- Name: ix_fk_treatmen_food_typ; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_treatmen_food_typ ON treatmen_conditions USING btree (food_type);


--
-- TOC entry 9790 (class 1259 OID 49053)
-- Dependencies: 1025
-- Name: ix_fk_treatmen_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_treatmen_otdel ON treatmen_conditions USING btree (otdel);


--
-- TOC entry 9793 (class 1259 OID 49054)
-- Dependencies: 1027
-- Name: ix_fk_trsf_insurcompany; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_insurcompany ON trsf USING btree (insurcompany);


--
-- TOC entry 9794 (class 1259 OID 49055)
-- Dependencies: 1027
-- Name: ix_fk_trsf_insurtype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_insurtype ON trsf USING btree (doctype);


--
-- TOC entry 9795 (class 1259 OID 49056)
-- Dependencies: 1027
-- Name: ix_fk_trsf_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_people ON trsf USING btree (people);


--
-- TOC entry 9805 (class 1259 OID 49057)
-- Dependencies: 1031
-- Name: ix_fk_trsf_saved_reest_insurance; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_saved_reest_insurance ON trsf_saved_reestr USING btree (insur);


--
-- TOC entry 9806 (class 1259 OID 49058)
-- Dependencies: 1031
-- Name: ix_fk_trsf_saved_reest_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_saved_reest_people ON trsf_saved_reestr USING btree (people);


--
-- TOC entry 9807 (class 1259 OID 49059)
-- Dependencies: 1031
-- Name: ix_fk_trsf_saved_reest_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_saved_reest_presctype ON trsf_saved_reestr USING btree (presc);


--
-- TOC entry 9808 (class 1259 OID 49060)
-- Dependencies: 1031
-- Name: ix_fk_trsf_saved_reest_rsf_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_saved_reest_rsf_id ON trsf_saved_reestr USING btree (trsf);


--
-- TOC entry 9809 (class 1259 OID 49061)
-- Dependencies: 1031
-- Name: ix_fk_trsf_saved_reest_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_saved_reest_services ON trsf_saved_reestr USING btree (service);


--
-- TOC entry 9812 (class 1259 OID 49062)
-- Dependencies: 1032
-- Name: ix_fk_trsf_temp_reestr_insurance; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_temp_reestr_insurance ON trsf_temp_reestr USING btree (insur);


--
-- TOC entry 9813 (class 1259 OID 49063)
-- Dependencies: 1032
-- Name: ix_fk_trsf_temp_reestr_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_temp_reestr_people ON trsf_temp_reestr USING btree (people);


--
-- TOC entry 9814 (class 1259 OID 49064)
-- Dependencies: 1032
-- Name: ix_fk_trsf_temp_reestr_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_temp_reestr_presctype ON trsf_temp_reestr USING btree (presctype);


--
-- TOC entry 9815 (class 1259 OID 49065)
-- Dependencies: 1032
-- Name: ix_fk_trsf_temp_reestr_services; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_temp_reestr_services ON trsf_temp_reestr USING btree (service);


--
-- TOC entry 9823 (class 1259 OID 49066)
-- Dependencies: 1034
-- Name: ix_fk_trsf_template_co_trsf_template; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_template_co_trsf_template ON trsf_template_columns USING btree (template);


--
-- TOC entry 9818 (class 1259 OID 49067)
-- Dependencies: 1033
-- Name: ix_fk_trsf_template_insurcompany; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_template_insurcompany ON trsf_template USING btree (insurcompany);


--
-- TOC entry 9819 (class 1259 OID 49068)
-- Dependencies: 1033
-- Name: ix_fk_trsf_template_insurtype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_template_insurtype ON trsf_template USING btree (doctype);


--
-- TOC entry 9820 (class 1259 OID 49069)
-- Dependencies: 1033
-- Name: ix_fk_trsf_template_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_trsf_template_people ON trsf_template USING btree (people);


--
-- TOC entry 9833 (class 1259 OID 49070)
-- Dependencies: 1039
-- Name: ix_fk_tutorial_role_role; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_tutorial_role_role ON tutorial_role USING btree (role);


--
-- TOC entry 9834 (class 1259 OID 49071)
-- Dependencies: 1039
-- Name: ix_fk_tutorial_role_tutorial; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_tutorial_role_tutorial ON tutorial_role USING btree (tutorial);


--
-- TOC entry 9845 (class 1259 OID 49072)
-- Dependencies: 1046
-- Name: ix_fk_user_pre_presctyp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_user_pre_presctyp ON user_presctemplatedetail USING btree (presctype);


--
-- TOC entry 9842 (class 1259 OID 49073)
-- Dependencies: 1045
-- Name: ix_fk_user_pre_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_user_pre_sysuser ON user_presctemplate USING btree (sysuser);


--
-- TOC entry 9846 (class 1259 OID 49074)
-- Dependencies: 1046
-- Name: ix_fk_user_pre_user_pre; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_user_pre_user_pre ON user_presctemplatedetail USING btree (template);


--
-- TOC entry 9849 (class 1259 OID 49075)
-- Dependencies: 1047
-- Name: ix_fk_user_pro_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_user_pro_sysuser ON user_protocoltemplate USING btree (sysuser);


--
-- TOC entry 9852 (class 1259 OID 49076)
-- Dependencies: 1048
-- Name: ix_fk_user_template$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_user_template$emp" ON user_template USING btree (sotr_id);


--
-- TOC entry 9855 (class 1259 OID 49077)
-- Dependencies: 1049
-- Name: ix_fk_vac_cancel$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_cancel$emp" ON vac_cancel USING btree (emp_id);


--
-- TOC entry 9856 (class 1259 OID 49078)
-- Dependencies: 1049
-- Name: ix_fk_vac_cancel$people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_cancel$people" ON vac_cancel USING btree (people_id);


--
-- TOC entry 9857 (class 1259 OID 49079)
-- Dependencies: 1049
-- Name: ix_fk_vac_cancel$vac_cancel_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_cancel$vac_cancel_type" ON vac_cancel USING btree (type_id);


--
-- TOC entry 9862 (class 1259 OID 49080)
-- Dependencies: 1051
-- Name: ix_fk_vac_company$vac_company_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_company$vac_company_type" ON vac_company USING btree (type_id);


--
-- TOC entry 9869 (class 1259 OID 49081)
-- Dependencies: 1054
-- Name: ix_fk_vac_kratn$infection; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_kratn$infection" ON vac_kratn USING btree (infection_id);


--
-- TOC entry 9870 (class 1259 OID 49082)
-- Dependencies: 1054
-- Name: ix_fk_vac_kratn$vac_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_kratn$vac_people" ON vac_kratn USING btree (vac_people_id);


--
-- TOC entry 9885 (class 1259 OID 49083)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$company" ON vac_people USING btree (vac_company_id);


--
-- TOC entry 9886 (class 1259 OID 49084)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$dept; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$dept" ON vac_people USING btree (dept_id);


--
-- TOC entry 9887 (class 1259 OID 49085)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$emp" ON vac_people USING btree (emp_id);


--
-- TOC entry 9888 (class 1259 OID 49086)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$emp2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$emp2" ON vac_people USING btree (emp_naz_id);


--
-- TOC entry 9889 (class 1259 OID 49087)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$vac_input_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$vac_input_type" ON vac_people USING btree (input_type_id);


--
-- TOC entry 9890 (class 1259 OID 49088)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$vaccin_prep; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$vaccin_prep" ON vac_people USING btree (vaccin_prep_id);


--
-- TOC entry 9891 (class 1259 OID 49089)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$vaccin_prep_store_; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$vaccin_prep_store_" ON vac_people USING btree (vaccin_prep_store_log_id);


--
-- TOC entry 9892 (class 1259 OID 49090)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$vaccin_shem; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$vaccin_shem" ON vac_people USING btree (vaccin_shem_id);


--
-- TOC entry 9893 (class 1259 OID 49091)
-- Dependencies: 1058
-- Name: ix_fk_vac_people$vaccin_shemname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people$vaccin_shemname" ON vac_people USING btree (vaccin_shemname_id);


--
-- TOC entry 9903 (class 1259 OID 49092)
-- Dependencies: 1060
-- Name: ix_fk_vac_people_test$company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people_test$company" ON vac_people_test USING btree (company_id);


--
-- TOC entry 9904 (class 1259 OID 49093)
-- Dependencies: 1060
-- Name: ix_fk_vac_people_test$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people_test$emp" ON vac_people_test USING btree (emp_id);


--
-- TOC entry 9905 (class 1259 OID 49094)
-- Dependencies: 1060
-- Name: ix_fk_vac_people_test$emp2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_people_test$emp2" ON vac_people_test USING btree (exec_emp_id);


--
-- TOC entry 9912 (class 1259 OID 49095)
-- Dependencies: 1061
-- Name: ix_fk_vac_plan$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_plan$emp" ON vac_plan USING btree (emp_id);


--
-- TOC entry 9913 (class 1259 OID 49096)
-- Dependencies: 1061
-- Name: ix_fk_vac_plan$infection; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_plan$infection" ON vac_plan USING btree (infection_id);


--
-- TOC entry 9914 (class 1259 OID 49097)
-- Dependencies: 1061
-- Name: ix_fk_vac_plan$vac_cancel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_plan$vac_cancel" ON vac_plan USING btree (vac_cancel_id);


--
-- TOC entry 9915 (class 1259 OID 49098)
-- Dependencies: 1061
-- Name: ix_fk_vac_plan$vac_plan_status; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_plan$vac_plan_status" ON vac_plan USING btree (status_id);


--
-- TOC entry 9940 (class 1259 OID 49099)
-- Dependencies: 1069
-- Name: ix_fk_vac_sicness$company; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_sicness$company" ON vac_sicness USING btree (company_id);


--
-- TOC entry 9941 (class 1259 OID 49100)
-- Dependencies: 1069
-- Name: ix_fk_vac_sicness$emp; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_sicness$emp" ON vac_sicness USING btree (emp_id);


--
-- TOC entry 9942 (class 1259 OID 49101)
-- Dependencies: 1069
-- Name: ix_fk_vac_sicness$icd10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_sicness$icd10" ON vac_sicness USING btree (icd10_id);


--
-- TOC entry 9943 (class 1259 OID 49102)
-- Dependencies: 1069
-- Name: ix_fk_vac_sicness$infection; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vac_sicness$infection" ON vac_sicness USING btree (infection_id);


--
-- TOC entry 9959 (class 1259 OID 49103)
-- Dependencies: 1075
-- Name: ix_fk_vaccin_prep$vac_input_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vaccin_prep$vac_input_type" ON vaccin_prep USING btree (def_input_type_id);


--
-- TOC entry 9978 (class 1259 OID 49104)
-- Dependencies: 1079
-- Name: ix_fk_vaccin_shem$vac_kratn_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_fk_vaccin_shem$vac_kratn_name" ON vaccin_shem USING btree (kratn_id);


--
-- TOC entry 9995 (class 1259 OID 49105)
-- Dependencies: 1087
-- Name: ix_fk_vip_people_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vip_people_people ON vip_people USING btree (people_oid);


--
-- TOC entry 9996 (class 1259 OID 49106)
-- Dependencies: 1087
-- Name: ix_fk_vip_people_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vip_people_sotr ON vip_people USING btree (sotr_oid);


--
-- TOC entry 9999 (class 1259 OID 49107)
-- Dependencies: 1088
-- Name: ix_fk_visit_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_visit_mdoc ON visit USING btree (mdoc_id);


--
-- TOC entry 10000 (class 1259 OID 49108)
-- Dependencies: 1088
-- Name: ix_fk_visit_pay_meth; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_visit_pay_meth ON visit USING btree (pay_method);


--
-- TOC entry 10001 (class 1259 OID 49109)
-- Dependencies: 1088
-- Name: ix_fk_visit_pay_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_visit_pay_type ON visit USING btree (pay_type_id);


--
-- TOC entry 10008 (class 1259 OID 49110)
-- Dependencies: 1090
-- Name: ix_fk_visit_portal_lin_portal_mdoc_even; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_visit_portal_lin_portal_mdoc_even ON visit_portal_link USING btree (portal_mdoc_event);


--
-- TOC entry 10009 (class 1259 OID 49111)
-- Dependencies: 1090
-- Name: ix_fk_visit_portal_lin_visit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_visit_portal_lin_visit ON visit_portal_link USING btree (visit);


--
-- TOC entry 10021 (class 1259 OID 49112)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_creator; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_creator ON vk_main USING btree (creator);


--
-- TOC entry 10022 (class 1259 OID 49113)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_mdoc_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_mdoc_id ON vk_main USING btree (mdoc_id);


--
-- TOC entry 10023 (class 1259 OID 49114)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_people_id ON vk_main USING btree (people_id);


--
-- TOC entry 10024 (class 1259 OID 49115)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_character; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_character ON vk_main USING btree (vk_characrer);


--
-- TOC entry 10025 (class 1259 OID 49116)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_conclusin_rea; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_conclusin_rea ON vk_main USING btree (vk_conclusion_reason);


--
-- TOC entry 10026 (class 1259 OID 49117)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_conclusion; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_conclusion ON vk_main USING btree (vk_conclusion);


--
-- TOC entry 10027 (class 1259 OID 49118)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_first_mem; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_first_mem ON vk_main USING btree (vk_first_mem);


--
-- TOC entry 10028 (class 1259 OID 49119)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_pred; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_pred ON vk_main USING btree (vk_pred);


--
-- TOC entry 10029 (class 1259 OID 49120)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_result; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_result ON vk_main USING btree (vk_result);


--
-- TOC entry 10030 (class 1259 OID 49121)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_second_mem; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_second_mem ON vk_main USING btree (vk_second_mem);


--
-- TOC entry 10031 (class 1259 OID 49122)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_standart; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_standart ON vk_main USING btree (vk_standart);


--
-- TOC entry 10032 (class 1259 OID 49123)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_target; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_target ON vk_main USING btree (vk_target);


--
-- TOC entry 10033 (class 1259 OID 49124)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_third_mem; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_third_mem ON vk_main USING btree (vk_thirh_mem);


--
-- TOC entry 10034 (class 1259 OID 49125)
-- Dependencies: 1094
-- Name: ix_fk_vk_main_vk_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_vk_main_vk_type ON vk_main USING btree (vk_type);


--
-- TOC entry 10102 (class 1259 OID 49126)
-- Dependencies: 1123
-- Name: ix_fk_workday__sotrwork; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_workday__sotrwork ON workday_replace USING btree (sotrworkday);


--
-- TOC entry 10103 (class 1259 OID 49127)
-- Dependencies: 1123
-- Name: ix_fk_workday__sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_workday__sysuser ON workday_replace USING btree (sysuser);


--
-- TOC entry 10106 (class 1259 OID 49128)
-- Dependencies: 1124
-- Name: ix_fk_workschedule_holidayreason; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_workschedule_holidayreason ON workschedule USING btree (sotrworkday);


--
-- TOC entry 10112 (class 1259 OID 49132)
-- Dependencies: 1127
-- Name: ix_fk_xray_description_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_description_otdel ON xray_description USING btree (create_otdel);


--
-- TOC entry 10113 (class 1259 OID 49133)
-- Dependencies: 1127
-- Name: ix_fk_xray_description_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_description_presc ON xray_description USING btree (presc_id);


--
-- TOC entry 10114 (class 1259 OID 49134)
-- Dependencies: 1127
-- Name: ix_fk_xray_description_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_description_sysuser ON xray_description USING btree (create_sysuser);


--
-- TOC entry 10122 (class 1259 OID 49135)
-- Dependencies: 1130
-- Name: ix_fk_xray_param_xray_dicom_reduc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_param_xray_dicom_reduc ON xray_param USING btree (dicom_reduction_id);


--
-- TOC entry 10127 (class 1259 OID 49136)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_mdoc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_mdoc ON xray_referral USING btree (mdoc_id);


--
-- TOC entry 10128 (class 1259 OID 49137)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_sotr ON xray_referral USING btree (careate_sotr_id);


--
-- TOC entry 10129 (class 1259 OID 49138)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_sotr2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_sotr2 ON xray_referral USING btree (register_sotr_id);


--
-- TOC entry 10130 (class 1259 OID 49139)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_sotr3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_sotr3 ON xray_referral USING btree (laborant_sotr_id);


--
-- TOC entry 10131 (class 1259 OID 49140)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_xray_bonus; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_xray_bonus ON xray_referral USING btree (bonus_id);


--
-- TOC entry 10132 (class 1259 OID 49141)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_xray_purpose; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_xray_purpose ON xray_referral USING btree (purpose_id);


--
-- TOC entry 10133 (class 1259 OID 49142)
-- Dependencies: 1132
-- Name: ix_fk_xray_referal_xray_urgency; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_referal_xray_urgency ON xray_referral USING btree (urgency_id);


--
-- TOC entry 10136 (class 1259 OID 49143)
-- Dependencies: 1133
-- Name: ix_fk_xray_result_xray_pacs; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_result_xray_pacs ON xray_result USING btree (pacs_id);


--
-- TOC entry 10137 (class 1259 OID 49144)
-- Dependencies: 1133
-- Name: ix_fk_xray_result_xray_referral; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_fk_xray_result_xray_referral ON xray_result USING btree (xray_referral_id);


--
-- TOC entry 8436 (class 1259 OID 49145)
-- Dependencies: 586
-- Name: ix_infection$name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_infection$name" ON infection USING btree (name);


--
-- TOC entry 8439 (class 1259 OID 49146)
-- Dependencies: 587
-- Name: ix_infection_icd10$icd10_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_infection_icd10$icd10_id" ON infection_icd10 USING btree (icd10_id);


--
-- TOC entry 8440 (class 1259 OID 49147)
-- Dependencies: 587
-- Name: ix_infection_icd10$infection_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_infection_icd10$infection_id" ON infection_icd10 USING btree (infection_id);


--
-- TOC entry 8483 (class 1259 OID 49148)
-- Dependencies: 600 600
-- Name: ix_iprogram_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_iprogram_name ON insurprogram USING btree (upper((name)::text));


--
-- TOC entry 8524 (class 1259 OID 49149)
-- Dependencies: 615 615
-- Name: ix_latinnames_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_latinnames_name ON latinnames USING btree (upper((name)::text));


--
-- TOC entry 8528 (class 1259 OID 49150)
-- Dependencies: 616
-- Name: ix_level_type_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_level_type_parent ON level_type USING btree (parent);


--
-- TOC entry 8598 (class 1259 OID 49151)
-- Dependencies: 643
-- Name: ix_lpu_type_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_lpu_type_parent ON lpu_type USING btree (parent);


--
-- TOC entry 8657 (class 1259 OID 49152)
-- Dependencies: 664
-- Name: ix_medic_name$name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_medic_name$name" ON medic_name USING btree (name);


--
-- TOC entry 8681 (class 1259 OID 49153)
-- Dependencies: 1731 673 673
-- Name: ix_mkb10_code_func; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_mkb10_code_func ON mkb_10 USING btree (substr((get_fullmkb10(code))::text, 1, 20) varchar_ops);


--
-- TOC entry 8682 (class 1259 OID 49154)
-- Dependencies: 673
-- Name: ix_mkb10_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_mkb10_name ON mkb_10 USING btree (name);


--
-- TOC entry 8683 (class 1259 OID 49155)
-- Dependencies: 673
-- Name: ix_mkb10_oid; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_mkb10_oid ON mkb_10 USING btree (oid);


--
-- TOC entry 8730 (class 1259 OID 49156)
-- Dependencies: 689 689
-- Name: ix_names$name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_names$name" ON names USING btree (btrim(lower((name)::text)));


--
-- TOC entry 7638 (class 1259 OID 49157)
-- Dependencies: 317
-- Name: ix_num_insurance; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_num_insurance ON insurance USING btree (num);


--
-- TOC entry 8859 (class 1259 OID 49158)
-- Dependencies: 740
-- Name: ix_pay_agreement_pay_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_agreement_pay_type ON pay_agreement USING btree (pay_type);


--
-- TOC entry 8860 (class 1259 OID 49159)
-- Dependencies: 740
-- Name: ix_pay_agreement_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_agreement_people ON pay_agreement USING btree (people_id);


--
-- TOC entry 8865 (class 1259 OID 49160)
-- Dependencies: 742
-- Name: ix_pay_appendix_agreement; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_appendix_agreement ON pay_appendix USING btree (agreement_id);


--
-- TOC entry 8868 (class 1259 OID 49161)
-- Dependencies: 743
-- Name: ix_pay_appendix_naz_app; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_appendix_naz_app ON pay_appendix_naz USING btree (appendix_id);


--
-- TOC entry 8869 (class 1259 OID 49162)
-- Dependencies: 743 743
-- Name: ix_pay_appendix_naz_app_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_appendix_naz_app_presc ON pay_appendix_naz USING btree (appendix_id, presc_id);


--
-- TOC entry 8870 (class 1259 OID 49163)
-- Dependencies: 743
-- Name: ix_pay_appendix_naz_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_pay_appendix_naz_presc ON pay_appendix_naz USING btree (presc_id);


--
-- TOC entry 8955 (class 1259 OID 49164)
-- Dependencies: 769
-- Name: ix_peoplekartaplace$lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_peoplekartaplace$lpu" ON peoplekartaplace USING btree (lpu);


--
-- TOC entry 8956 (class 1259 OID 49165)
-- Dependencies: 769
-- Name: ix_peoplekartaplace$number; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_peoplekartaplace$number" ON peoplekartaplace USING btree (numberkarta);


--
-- TOC entry 9126 (class 1259 OID 49166)
-- Dependencies: 825 825
-- Name: ix_prescytpe_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_prescytpe_name ON presctype USING btree (upper((name)::text));


--
-- TOC entry 9199 (class 1259 OID 49167)
-- Dependencies: 849
-- Name: ix_progression_print_dt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_progression_print_dt ON progression USING btree (print_dt);


--
-- TOC entry 9208 (class 1259 OID 49168)
-- Dependencies: 850
-- Name: ix_progression_stat_fact_dt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_progression_stat_fact_dt ON progression_stat USING btree (fact_dt);


--
-- TOC entry 9209 (class 1259 OID 49169)
-- Dependencies: 850
-- Name: ix_progression_stat_order; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_progression_stat_order ON progression_stat USING btree ("order");


--
-- TOC entry 9210 (class 1259 OID 49170)
-- Dependencies: 850
-- Name: ix_progression_stat_status; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_progression_stat_status ON progression_stat USING btree (status);


--
-- TOC entry 9419 (class 1259 OID 49171)
-- Dependencies: 907
-- Name: ix_schedule_starton; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_schedule_starton ON schedule USING btree (starton);


--
-- TOC entry 9495 (class 1259 OID 49172)
-- Dependencies: 928 928
-- Name: ix_service_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_service_name ON services USING btree (upper((defaultname)::text));


--
-- TOC entry 7543 (class 1259 OID 49173)
-- Dependencies: 177 177
-- Name: ix_service_price_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_service_price_name ON service_price USING btree (upper((name)::text));


--
-- TOC entry 9496 (class 1259 OID 49174)
-- Dependencies: 928
-- Name: ix_services_code; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_services_code ON services USING btree (code);


--
-- TOC entry 9497 (class 1259 OID 49175)
-- Dependencies: 928 928
-- Name: ix_services_name_group; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_services_name_group ON services USING btree (service_group, upper((defaultname)::text));


--
-- TOC entry 9518 (class 1259 OID 49176)
-- Dependencies: 932
-- Name: ix_sicklist$regimen_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_sicklist$regimen_id" ON sicklist USING btree (regimen_id);


--
-- TOC entry 9694 (class 1259 OID 49177)
-- Dependencies: 992 992
-- Name: ix_sysuser$username_lower; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_sysuser$username_lower" ON sysuser USING btree (lower((username)::text));


--
-- TOC entry 7583 (class 1259 OID 49178)
-- Dependencies: 216 216
-- Name: ix_tkladr_prefix; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_tkladr_prefix ON tkladr_prefix USING btree (upper((prefix)::text));


--
-- TOC entry 7534 (class 1259 OID 49179)
-- Dependencies: 176
-- Name: ix_tkladrspr_code; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_tkladrspr_code ON tkladrspr USING btree (code);


--
-- TOC entry 7535 (class 1259 OID 49237)
-- Dependencies: 176
-- Name: ix_tkladrspr_id_oracle; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_tkladrspr_id_oracle ON tkladrspr USING btree (fk_id_oracle);


--
-- TOC entry 7536 (class 1259 OID 49243)
-- Dependencies: 176
-- Name: ix_tkladrspr_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_tkladrspr_parent ON tkladrspr USING btree (parent);


--
-- TOC entry 7537 (class 1259 OID 49262)
-- Dependencies: 176
-- Name: ix_tkladrspr_showelement; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_tkladrspr_showelement ON tkladrspr USING btree (showelement);


--
-- TOC entry 9776 (class 1259 OID 49263)
-- Dependencies: 1022 1022
-- Name: ix_tradenames_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_tradenames_name ON tradenames USING btree (upper((name)::text));


--
-- TOC entry 7612 (class 1259 OID 49264)
-- Dependencies: 312 312
-- Name: ix_u_age_group_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_age_group_history ON age_group_history USING btree (h_date, oid);


--
-- TOC entry 7606 (class 1259 OID 49265)
-- Dependencies: 311 311
-- Name: ix_u_age_type_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_age_type_otdel ON age_group USING btree (age_group_type, otdel);


--
-- TOC entry 7739 (class 1259 OID 49266)
-- Dependencies: 349 349
-- Name: ix_u_bed_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_bed_history ON bed_history USING btree (h_date, oid);


--
-- TOC entry 7843 (class 1259 OID 49267)
-- Dependencies: 376 376
-- Name: ix_u_building_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_building_history ON building_history USING btree (h_date, oid);


--
-- TOC entry 7974 (class 1259 OID 49268)
-- Dependencies: 420 420
-- Name: ix_u_company_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_company_history ON company_history USING btree (h_date, oid);


--
-- TOC entry 9616 (class 1259 OID 49269)
-- Dependencies: 968 968
-- Name: ix_u_district_sotrs; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_district_sotrs ON sotrsotrs_districtdistrict USING btree (district, sotrs);


--
-- TOC entry 8223 (class 1259 OID 49270)
-- Dependencies: 510 510
-- Name: ix_u_equipment_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_equipment_history ON equipment_history USING btree (h_date, oid);


--
-- TOC entry 8541 (class 1259 OID 49271)
-- Dependencies: 620 620
-- Name: ix_u_licence_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_licence_history ON licence_history USING btree (h_date, oid);


--
-- TOC entry 8576 (class 1259 OID 49272)
-- Dependencies: 636 636
-- Name: ix_u_lpu_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_lpu_history ON lpu_history USING btree (h_date, oid);


--
-- TOC entry 8801 (class 1259 OID 49273)
-- Dependencies: 719 719
-- Name: ix_u_otdel_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_otdel_history ON otdel_history USING btree (h_date, oid);


--
-- TOC entry 9004 (class 1259 OID 49274)
-- Dependencies: 786 786
-- Name: ix_u_plot_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_plot_history ON plot_history USING btree (h_date, oid);


--
-- TOC entry 8462 (class 1259 OID 49275)
-- Dependencies: 592 592
-- Name: ix_u_plot_infrastr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_plot_infrastr ON infrastructure USING btree (plot, infrastructure_type);


--
-- TOC entry 9351 (class 1259 OID 49276)
-- Dependencies: 889 889
-- Name: ix_u_response_people_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_response_people_history ON response_people_history USING btree (h_date, oid);


--
-- TOC entry 9382 (class 1259 OID 49277)
-- Dependencies: 900 900
-- Name: ix_u_room_history; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_room_history ON room_history USING btree (h_date, oid);


--
-- TOC entry 7707 (class 1259 OID 49278)
-- Dependencies: 335 335
-- Name: ix_u_sotrareal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_sotrareal ON areal_sotr USING btree (sotr_id, areal_id);


--
-- TOC entry 9771 (class 1259 OID 49279)
-- Dependencies: 1020 1020 1020
-- Name: ix_u_type_period; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ix_u_type_period ON time_period USING btree (type_period, period_from, period_to);


--
-- TOC entry 9841 (class 1259 OID 49280)
-- Dependencies: 1043
-- Name: ix_udn_num; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_udn_num ON uniq_direction_number USING btree (num);


--
-- TOC entry 9876 (class 1259 OID 49281)
-- Dependencies: 1056
-- Name: ix_vac_company$company_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_company$company_id" ON vac_lpu_company USING btree (company_id);


--
-- TOC entry 9877 (class 1259 OID 49282)
-- Dependencies: 1056
-- Name: ix_vac_company$company_lpu_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_company$company_lpu_id" ON vac_lpu_company USING btree (company_lpu_id);


--
-- TOC entry 9871 (class 1259 OID 49283)
-- Dependencies: 1054
-- Name: ix_vac_kratn$kratn_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_kratn$kratn_id" ON vac_kratn USING btree (kratn_id);


--
-- TOC entry 9880 (class 1259 OID 49284)
-- Dependencies: 1057
-- Name: ix_vac_map$company_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_map$company_id" ON vac_map USING btree (company_id);


--
-- TOC entry 9881 (class 1259 OID 49285)
-- Dependencies: 1057
-- Name: ix_vac_map$own_company_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_map$own_company_id" ON vac_map USING btree (own_company_id);


--
-- TOC entry 9882 (class 1259 OID 49286)
-- Dependencies: 1057
-- Name: ix_vac_map$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_map$people_id" ON vac_map USING btree (people_id);


--
-- TOC entry 9894 (class 1259 OID 49287)
-- Dependencies: 1058
-- Name: ix_vac_people$create_date; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people$create_date" ON vac_people USING btree (create_date);


--
-- TOC entry 9895 (class 1259 OID 49288)
-- Dependencies: 1058
-- Name: ix_vac_people$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people$people_id" ON vac_people USING btree (people_id);


--
-- TOC entry 9896 (class 1259 OID 49289)
-- Dependencies: 1058
-- Name: ix_vac_people$status_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people$status_id" ON vac_people USING btree (status_id);


--
-- TOC entry 9897 (class 1259 OID 49290)
-- Dependencies: 1058
-- Name: ix_vac_people$status_series_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people$status_series_id" ON vac_people USING btree (status_series_id);


--
-- TOC entry 9898 (class 1259 OID 49291)
-- Dependencies: 1058
-- Name: ix_vac_people$unit_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people$unit_id" ON vac_people USING btree (unit_id);


--
-- TOC entry 9906 (class 1259 OID 49292)
-- Dependencies: 1060
-- Name: ix_vac_people_test$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people_test$people_id" ON vac_people_test USING btree (people_id);


--
-- TOC entry 9907 (class 1259 OID 49293)
-- Dependencies: 1060
-- Name: ix_vac_people_test$test_date; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people_test$test_date" ON vac_people_test USING btree (test_date);


--
-- TOC entry 9908 (class 1259 OID 49294)
-- Dependencies: 1060
-- Name: ix_vac_people_test$test_result_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people_test$test_result_id" ON vac_people_test USING btree (vac_test_result_id);


--
-- TOC entry 9909 (class 1259 OID 49295)
-- Dependencies: 1060
-- Name: ix_vac_people_test$vac_test_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_people_test$vac_test_id" ON vac_people_test USING btree (vac_test_id);


--
-- TOC entry 9916 (class 1259 OID 49296)
-- Dependencies: 1061
-- Name: ix_vac_plan$kratn_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_plan$kratn_id" ON vac_plan USING btree (kratn_id);


--
-- TOC entry 9917 (class 1259 OID 49297)
-- Dependencies: 1061
-- Name: ix_vac_plan$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_plan$people_id" ON vac_plan USING btree (people_id);


--
-- TOC entry 9918 (class 1259 OID 49298)
-- Dependencies: 1061
-- Name: ix_vac_plan$plan_date; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_plan$plan_date" ON vac_plan USING btree (plan_date);


--
-- TOC entry 9923 (class 1259 OID 49299)
-- Dependencies: 1063
-- Name: ix_vac_repl_objects$table_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_repl_objects$table_name" ON vac_repl_objects USING btree (table_name);


--
-- TOC entry 9926 (class 1259 OID 49300)
-- Dependencies: 1064
-- Name: ix_vac_repl_people$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_repl_people$people_id" ON vac_repl_people USING btree (people_id);


--
-- TOC entry 9929 (class 1259 OID 49301)
-- Dependencies: 1065
-- Name: ix_vac_repl_people_loaded_people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_vac_repl_people_loaded_people_id ON vac_repl_people_loaded USING btree (people_id);


--
-- TOC entry 9932 (class 1259 OID 49302)
-- Dependencies: 1066
-- Name: ix_vac_repl_people_queue$object_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_repl_people_queue$object_id" ON vac_repl_people_queue USING btree (people_id);


--
-- TOC entry 9937 (class 1259 OID 49303)
-- Dependencies: 1068
-- Name: ix_vac_repl_updates$object_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_repl_updates$object_id" ON vac_repl_updates USING btree (object_id);


--
-- TOC entry 9944 (class 1259 OID 49304)
-- Dependencies: 1069
-- Name: ix_vac_sicness$people_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_sicness$people_id" ON vac_sicness USING btree (people_id);


--
-- TOC entry 9949 (class 1259 OID 49305)
-- Dependencies: 1071
-- Name: ix_vac_store$dept_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_store$dept_id" ON vac_store USING btree (dept_id);


--
-- TOC entry 9954 (class 1259 OID 49306)
-- Dependencies: 1073
-- Name: ix_vac_test_result$vac_test_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vac_test_result$vac_test_id" ON vac_test_result USING btree (vac_test_id);


--
-- TOC entry 9960 (class 1259 OID 49307)
-- Dependencies: 1075
-- Name: ix_vaccin_prep$name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep$name" ON vaccin_prep USING btree (name);


--
-- TOC entry 9961 (class 1259 OID 49308)
-- Dependencies: 1075
-- Name: ix_vaccin_prep$unit_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep$unit_id" ON vaccin_prep USING btree (unit_id);


--
-- TOC entry 9968 (class 1259 OID 49309)
-- Dependencies: 1077
-- Name: ix_vaccin_prep_store$series; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store$series" ON vaccin_prep_store USING btree (series);


--
-- TOC entry 9969 (class 1259 OID 49310)
-- Dependencies: 1077
-- Name: ix_vaccin_prep_store$store_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store$store_id" ON vaccin_prep_store USING btree (store_id);


--
-- TOC entry 9970 (class 1259 OID 49311)
-- Dependencies: 1077
-- Name: ix_vaccin_prep_store$vaccin_prep_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store$vaccin_prep_id" ON vaccin_prep_store USING btree (vaccin_prep_id);


--
-- TOC entry 9973 (class 1259 OID 49312)
-- Dependencies: 1078
-- Name: ix_vaccin_prep_store_log$date_on; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store_log$date_on" ON vaccin_prep_store_log USING btree (date_on);


--
-- TOC entry 9974 (class 1259 OID 49313)
-- Dependencies: 1078
-- Name: ix_vaccin_prep_store_log$type_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store_log$type_id" ON vaccin_prep_store_log USING btree (type_id);


--
-- TOC entry 9975 (class 1259 OID 49314)
-- Dependencies: 1078
-- Name: ix_vaccin_prep_store_log$vaccin_prep_store_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_prep_store_log$vaccin_prep_store_id" ON vaccin_prep_store_log USING btree (vaccin_prep_store_id);


--
-- TOC entry 9979 (class 1259 OID 49315)
-- Dependencies: 1079
-- Name: ix_vaccin_shem$shemname_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_shem$shemname_id" ON vaccin_shem USING btree (shemname_id);


--
-- TOC entry 9982 (class 1259 OID 49316)
-- Dependencies: 1080
-- Name: ix_vaccin_shemname$name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_shemname$name" ON vaccin_shemname USING btree (name);


--
-- TOC entry 9983 (class 1259 OID 49317)
-- Dependencies: 1080
-- Name: ix_vaccin_shemname$vaccin_prep_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_shemname$vaccin_prep_id" ON vaccin_shemname USING btree (vaccin_prep_id);


--
-- TOC entry 9986 (class 1259 OID 49318)
-- Dependencies: 1081
-- Name: ix_vaccin_unit$short_name; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vaccin_unit$short_name" ON vaccin_unit USING btree (short_name);


--
-- TOC entry 10002 (class 1259 OID 49319)
-- Dependencies: 1088
-- Name: ix_visit_beginv; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_visit_beginv ON visit USING btree (beginv);


--
-- TOC entry 10003 (class 1259 OID 49320)
-- Dependencies: 1088
-- Name: ix_visit_endv; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_visit_endv ON visit USING btree (endv);


--
-- TOC entry 9964 (class 1259 OID 49321)
-- Dependencies: 1076
-- Name: ix_vpi$vaccin_infection_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vpi$vaccin_infection_id" ON vaccin_prep_infection USING btree (vaccin_infection_id);


--
-- TOC entry 9965 (class 1259 OID 49322)
-- Dependencies: 1076
-- Name: ix_vpi$vaccin_prep_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_vpi$vaccin_prep_id" ON vaccin_prep_infection USING btree (vaccin_prep_id);


--
-- TOC entry 10054 (class 1259 OID 49323)
-- Dependencies: 1105 1105
-- Name: ix_web_buf_transfer_action; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_action ON web_buffer_transfer USING btree (upper((action)::text));


--
-- TOC entry 10062 (class 1259 OID 49324)
-- Dependencies: 1106 1106
-- Name: ix_web_buf_transfer_fer_action; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_fer_action ON web_buffer_transfer_fer USING btree (upper((action)::text));


--
-- TOC entry 10063 (class 1259 OID 49325)
-- Dependencies: 1106
-- Name: ix_web_buf_transfer_fer_key_val; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_fer_key_val ON web_buffer_transfer_fer USING btree (key_field_value);


--
-- TOC entry 10064 (class 1259 OID 49326)
-- Dependencies: 1106 1106
-- Name: ix_web_buf_transfer_fer_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_fer_lpu ON web_buffer_transfer_fer USING btree (upper((lpu)::text));


--
-- TOC entry 10065 (class 1259 OID 49327)
-- Dependencies: 1106
-- Name: ix_web_buf_transfer_fer_table; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_fer_table ON web_buffer_transfer_fer USING btree (table_name);


--
-- TOC entry 10066 (class 1259 OID 49328)
-- Dependencies: 1106
-- Name: ix_web_buf_transfer_fer_upload_d; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_fer_upload_d ON web_buffer_transfer_fer USING btree (upload_date);


--
-- TOC entry 10055 (class 1259 OID 49329)
-- Dependencies: 1105
-- Name: ix_web_buf_transfer_key_val; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_key_val ON web_buffer_transfer USING btree (key_field_value);


--
-- TOC entry 10056 (class 1259 OID 49330)
-- Dependencies: 1105 1105
-- Name: ix_web_buf_transfer_lpu; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_lpu ON web_buffer_transfer USING btree (upper((lpu)::text));


--
-- TOC entry 10057 (class 1259 OID 49331)
-- Dependencies: 1105
-- Name: ix_web_buf_transfer_table; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_table ON web_buffer_transfer USING btree (table_name);


--
-- TOC entry 10058 (class 1259 OID 49332)
-- Dependencies: 1105
-- Name: ix_web_buf_transfer_upload_d; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_buf_transfer_upload_d ON web_buffer_transfer USING btree (upload_date);


--
-- TOC entry 10090 (class 1259 OID 49333)
-- Dependencies: 1118
-- Name: ix_web_schedule_rule_location; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_schedule_rule_location ON web_schedule_rule USING btree (location_id);


--
-- TOC entry 10095 (class 1259 OID 49334)
-- Dependencies: 1119
-- Name: ix_web_schedule_rule_reg_location; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ix_web_schedule_rule_reg_location ON web_schedule_rule_reg USING btree (location_id);


--
-- TOC entry 10107 (class 1259 OID 49335)
-- Dependencies: 1124
-- Name: ix_workschedule$sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ix_workschedule$sysuser" ON workschedule USING btree (sysuser);


--
-- TOC entry 7685 (class 1259 OID 49336)
-- Dependencies: 330
-- Name: ixfk_areal_kladr_areal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_areal_kladr_areal ON areal_kladr USING btree (areal_oid);


--
-- TOC entry 7686 (class 1259 OID 49337)
-- Dependencies: 330
-- Name: ixfk_areal_kladr_kladr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_areal_kladr_kladr ON areal_kladr USING btree (kladr_oid);


--
-- TOC entry 7691 (class 1259 OID 49338)
-- Dependencies: 332
-- Name: ixfk_areal_people_areal; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_areal_people_areal ON areal_people USING btree (areal_oid);


--
-- TOC entry 7692 (class 1259 OID 49339)
-- Dependencies: 332
-- Name: ixfk_areal_people_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_areal_people_people ON areal_people USING btree (people_oid);


--
-- TOC entry 9525 (class 1259 OID 49340)
-- Dependencies: 933
-- Name: ixfk_counterpart_garanty_letter_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_counterpart_garanty_letter_sotr ON sicklist_form USING btree (sotr);


--
-- TOC entry 8073 (class 1259 OID 49341)
-- Dependencies: 459
-- Name: ixfk_diary$presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_diary$presctype" ON diary USING btree (presctype);


--
-- TOC entry 8074 (class 1259 OID 49342)
-- Dependencies: 459
-- Name: ixfk_diary_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_diary_sotr ON diary USING btree (sotr);


--
-- TOC entry 8079 (class 1259 OID 49343)
-- Dependencies: 461
-- Name: ixfk_dictionary_field$dictionary; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_dictionary_field$dictionary" ON dictionary_field USING btree (dictionary);


--
-- TOC entry 8080 (class 1259 OID 49344)
-- Dependencies: 461
-- Name: ixfk_dictionary_field$fieldtype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_dictionary_field$fieldtype" ON dictionary_field USING btree (fieldtype);


--
-- TOC entry 8202 (class 1259 OID 49345)
-- Dependencies: 505
-- Name: ixfk_epicris$presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_epicris$presctype" ON epicris USING btree (presctype);


--
-- TOC entry 8203 (class 1259 OID 49346)
-- Dependencies: 505
-- Name: ixfk_epicris$visit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_epicris$visit" ON epicris USING btree (visit);


--
-- TOC entry 8785 (class 1259 OID 49347)
-- Dependencies: 713
-- Name: ixfk_operation$presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_operation$presctype" ON operation USING btree (presctype);


--
-- TOC entry 9526 (class 1259 OID 49348)
-- Dependencies: 933
-- Name: ixfk_sicklist_form_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_sicklist_form_sotr ON sicklist_form USING btree (sotr);


--
-- TOC entry 9572 (class 1259 OID 49349)
-- Dependencies: 953 953
-- Name: ixfk_sotr_dictionary$dictionary_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_sotr_dictionary$dictionary_sotr" ON sotr_dictionary USING btree (dictionary, sotr);


--
-- TOC entry 9573 (class 1259 OID 49350)
-- Dependencies: 953 953
-- Name: ixfk_sotr_dictionary$sotr_dictionary; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "ixfk_sotr_dictionary$sotr_dictionary" ON sotr_dictionary USING btree (sotr, dictionary);


--
-- TOC entry 10115 (class 1259 OID 49351)
-- Dependencies: 1127
-- Name: ixfk_xray_description_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ixfk_xray_description_sotr ON xray_description USING btree (sotr);


--
-- TOC entry 8542 (class 1259 OID 49352)
-- Dependencies: 620
-- Name: licence_history_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX licence_history_pk ON licence_history USING btree (hid);


--
-- TOC entry 8577 (class 1259 OID 49353)
-- Dependencies: 636
-- Name: lpu_history_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX lpu_history_pk ON lpu_history USING btree (hid);


--
-- TOC entry 8636 (class 1259 OID 49354)
-- Dependencies: 655 655 655
-- Name: mdoc_last_number_idx_lny; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX mdoc_last_number_idx_lny ON mdoc_last_number USING btree (otdel, mdoc_type, year);


--
-- TOC entry 8713 (class 1259 OID 49355)
-- Dependencies: 684
-- Name: msec_conclusin_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX msec_conclusin_pk ON msec_conclusin USING btree (oid);


--
-- TOC entry 8720 (class 1259 OID 49356)
-- Dependencies: 685
-- Name: msec_main_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX msec_main_pk ON msec_main USING btree (oid);


--
-- TOC entry 8723 (class 1259 OID 49357)
-- Dependencies: 686
-- Name: msec_target_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX msec_target_pk ON msec_target USING btree (oid);


--
-- TOC entry 10073 (class 1259 OID 49358)
-- Dependencies: 1109 1109
-- Name: our_their_uniq; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX our_their_uniq ON web_dictionary USING btree (oid_our, oid_their);


--
-- TOC entry 7566 (class 1259 OID 49359)
-- Dependencies: 214 214 214 214
-- Name: people_cidx_last_first_middlename; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_cidx_last_first_middlename ON people USING btree (upper((lastname)::text) varchar_pattern_ops, upper((firstname)::text) varchar_pattern_ops, upper((middlename)::text) varchar_pattern_ops);


--
-- TOC entry 7567 (class 1259 OID 49360)
-- Dependencies: 214 214 214
-- Name: people_cidx_last_fistname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_cidx_last_fistname ON people USING btree (upper((lastname)::text) varchar_pattern_ops, upper((firstname)::text) varchar_pattern_ops);


--
-- TOC entry 7568 (class 1259 OID 49361)
-- Dependencies: 214 214
-- Name: people_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx ON people USING btree (upper((lastname)::text) varchar_ops);


--
-- TOC entry 7569 (class 1259 OID 49362)
-- Dependencies: 214
-- Name: people_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx1 ON people USING btree (lastname);


--
-- TOC entry 7570 (class 1259 OID 49363)
-- Dependencies: 214
-- Name: people_idx_birthday; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_birthday ON people USING btree (birthday);


--
-- TOC entry 7571 (class 1259 OID 49364)
-- Dependencies: 1729 214 214 214 214 214
-- Name: people_idx_fiogr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_fiogr ON people USING btree (get_fiogr(lastname, firstname, middlename, (birthday)::timestamp without time zone) varchar_pattern_ops);


--
-- TOC entry 7572 (class 1259 OID 49365)
-- Dependencies: 1625 214 214
-- Name: people_idx_firstname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_firstname ON people USING btree (convert_letter(firstname) varchar_pattern_ops);


--
-- TOC entry 7573 (class 1259 OID 49366)
-- Dependencies: 1625 214 214
-- Name: people_idx_lastname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_lastname ON people USING btree (convert_letter(lastname) varchar_pattern_ops);


--
-- TOC entry 7574 (class 1259 OID 49367)
-- Dependencies: 1625 214 214
-- Name: people_idx_middlename; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_middlename ON people USING btree (convert_letter(middlename) varchar_pattern_ops);


--
-- TOC entry 7575 (class 1259 OID 49368)
-- Dependencies: 214 214
-- Name: people_idx_upper_firstname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_upper_firstname ON people USING btree (upper((firstname)::text) varchar_pattern_ops);


--
-- TOC entry 7576 (class 1259 OID 49369)
-- Dependencies: 214 214
-- Name: people_idx_upper_lastname; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX people_idx_upper_lastname ON people USING btree (upper((lastname)::text) varchar_pattern_ops);


--
-- TOC entry 8967 (class 1259 OID 49370)
-- Dependencies: 777
-- Name: pfk_person_setting$sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX "pfk_person_setting$sysuser" ON person_setting USING btree (sysuser);


--
-- TOC entry 8614 (class 1259 OID 49371)
-- Dependencies: 648
-- Name: pk_protocol_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX pk_protocol_id ON map_teeth USING btree (presc_id);


--
-- TOC entry 10074 (class 1259 OID 49372)
-- Dependencies: 1109 1109 1109 1109
-- Name: pkg_get_their; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX pkg_get_their ON web_dictionary USING btree (oid_our, upper((syn_our)::text), upper((syn_their)::text), client_info);


--
-- TOC entry 9007 (class 1259 OID 49373)
-- Dependencies: 786
-- Name: plot_history_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX plot_history_pk ON plot_history USING btree (hid);


--
-- TOC entry 9103 (class 1259 OID 49374)
-- Dependencies: 817
-- Name: presc_schedule_idx_presc; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX presc_schedule_idx_presc ON presc_schedule USING btree (presc_id);


--
-- TOC entry 9129 (class 1259 OID 49375)
-- Dependencies: 825
-- Name: presctype_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX presctype_idx ON presctype USING btree (parent);


--
-- TOC entry 9134 (class 1259 OID 49376)
-- Dependencies: 827
-- Name: presctypeparam_dictionary_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX presctypeparam_dictionary_idx ON presctypeparam_dictionary USING btree (parent);


--
-- TOC entry 9202 (class 1259 OID 49377)
-- Dependencies: 849
-- Name: progression_idx_ordern; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_idx_ordern ON progression USING btree (order_n);


--
-- TOC entry 9203 (class 1259 OID 49378)
-- Dependencies: 849
-- Name: progression_idx_otder; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_idx_otder ON progression USING btree ("order");


--
-- TOC entry 9204 (class 1259 OID 49379)
-- Dependencies: 849
-- Name: progression_idx_plandt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_idx_plandt ON progression USING btree (plan_dt);


--
-- TOC entry 9213 (class 1259 OID 49380)
-- Dependencies: 850
-- Name: progression_stat_idx_plandt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_stat_idx_plandt ON progression_stat USING btree (plan_dt);


--
-- TOC entry 9214 (class 1259 OID 49381)
-- Dependencies: 850
-- Name: progression_stat_idx_printdt; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_stat_idx_printdt ON progression_stat USING btree (print_dt);


--
-- TOC entry 9215 (class 1259 OID 49382)
-- Dependencies: 850 850 850
-- Name: progression_stat_idx_where_rpl; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX progression_stat_idx_where_rpl ON progression_stat USING btree (registwindow, print_dt, linetype);


--
-- TOC entry 7950 (class 1259 OID 49383)
-- Dependencies: 413
-- Name: rdb$primary10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary10" ON clspharmagroup USING btree (id);


--
-- TOC entry 7945 (class 1259 OID 49384)
-- Dependencies: 411
-- Name: rdb$primary11; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary11" ON clsiic USING btree (id);


--
-- TOC entry 7939 (class 1259 OID 49385)
-- Dependencies: 409
-- Name: rdb$primary12; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary12" ON clsatc USING btree (id);


--
-- TOC entry 8174 (class 1259 OID 49386)
-- Dependencies: 493
-- Name: rdb$primary13; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary13" ON drugpack USING btree (id);


--
-- TOC entry 8169 (class 1259 OID 49387)
-- Dependencies: 491
-- Name: rdb$primary16; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary16" ON drugformchars USING btree (id);


--
-- TOC entry 9674 (class 1259 OID 49388)
-- Dependencies: 983
-- Name: rdb$primary17; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary17" ON stronggroups USING btree (id);


--
-- TOC entry 8735 (class 1259 OID 49389)
-- Dependencies: 690
-- Name: rdb$primary18; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary18" ON narcogroups USING btree (id);


--
-- TOC entry 7596 (class 1259 OID 49390)
-- Dependencies: 306
-- Name: rdb$primary19; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary19" ON actmatters USING btree (id);


--
-- TOC entry 8006 (class 1259 OID 49391)
-- Dependencies: 433
-- Name: rdb$primary2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary2" ON countries USING btree (id);


--
-- TOC entry 8177 (class 1259 OID 49392)
-- Dependencies: 494
-- Name: rdb$primary22; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary22" ON drugset USING btree (id);


--
-- TOC entry 8180 (class 1259 OID 49393)
-- Dependencies: 495
-- Name: rdb$primary23; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary23" ON drugstorcond USING btree (id);


--
-- TOC entry 8020 (class 1259 OID 49394)
-- Dependencies: 438
-- Name: rdb$primary25; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary25" ON currency USING btree (id);


--
-- TOC entry 8974 (class 1259 OID 49395)
-- Dependencies: 779
-- Name: rdb$primary27; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary27" ON pharmaactions USING btree (id);


--
-- TOC entry 8041 (class 1259 OID 49396)
-- Dependencies: 449
-- Name: rdb$primary28; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary28" ON descriptions USING btree (id);


--
-- TOC entry 8365 (class 1259 OID 49397)
-- Dependencies: 548
-- Name: rdb$primary3; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary3" ON firms USING btree (id);


--
-- TOC entry 8621 (class 1259 OID 49398)
-- Dependencies: 651
-- Name: rdb$primary4; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary4" ON massunits USING btree (id);


--
-- TOC entry 8015 (class 1259 OID 49399)
-- Dependencies: 436
-- Name: rdb$primary5; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary5" ON cubicunits USING btree (id);


--
-- TOC entry 7981 (class 1259 OID 49400)
-- Dependencies: 422
-- Name: rdb$primary6; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary6" ON concenunits USING btree (id);


--
-- TOC entry 7601 (class 1259 OID 49401)
-- Dependencies: 308
-- Name: rdb$primary7; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary7" ON actunits USING btree (id);


--
-- TOC entry 9557 (class 1259 OID 49402)
-- Dependencies: 945
-- Name: rdb$primary8; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary8" ON sizeunits USING btree (id);


--
-- TOC entry 7942 (class 1259 OID 49403)
-- Dependencies: 410
-- Name: rdb$primary9; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX "rdb$primary9" ON clsdrugforms USING btree (id);


--
-- TOC entry 9295 (class 1259 OID 49404)
-- Dependencies: 874
-- Name: registers_oid_key; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX registers_oid_key ON registers USING btree (oid);


--
-- TOC entry 9332 (class 1259 OID 49405)
-- Dependencies: 884
-- Name: report_group_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX report_group_pk ON report_group USING btree (oid);


--
-- TOC entry 9337 (class 1259 OID 49406)
-- Dependencies: 885 885
-- Name: report_parameter_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX report_parameter_pk ON report_parameter USING btree (report_template, param_datatype);


--
-- TOC entry 9346 (class 1259 OID 49407)
-- Dependencies: 887 887
-- Name: report_template_group_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX report_template_group_pk ON report_template_group USING btree (report_group, report_template);


--
-- TOC entry 9341 (class 1259 OID 49408)
-- Dependencies: 886
-- Name: report_template_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX report_template_pk ON report_template USING btree (oid);


--
-- TOC entry 9354 (class 1259 OID 49409)
-- Dependencies: 889
-- Name: response_people_pk2; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX response_people_pk2 ON response_people_history USING btree (hid);


--
-- TOC entry 9385 (class 1259 OID 49410)
-- Dependencies: 900
-- Name: room_history_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX room_history_pk ON room_history USING btree (hid);


--
-- TOC entry 9422 (class 1259 OID 49411)
-- Dependencies: 907 907 907
-- Name: schedule_cidx_starton_endon_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_cidx_starton_endon_sysuser ON schedule USING btree (sysuser, lpu, otdel);


--
-- TOC entry 9423 (class 1259 OID 49412)
-- Dependencies: 907 907
-- Name: schedule_cidx_starton_sotr; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_cidx_starton_sotr ON schedule USING btree (date(starton), sotr);


--
-- TOC entry 9424 (class 1259 OID 49413)
-- Dependencies: 907 907 907
-- Name: schedule_cidx_starton_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_cidx_starton_sysuser ON schedule USING btree (starton, sysuser, otdel);


--
-- TOC entry 9431 (class 1259 OID 49414)
-- Dependencies: 908
-- Name: schedule_history_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_history_idx ON schedule_history USING btree (old_oid);


--
-- TOC entry 9432 (class 1259 OID 49415)
-- Dependencies: 908
-- Name: schedule_history_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_history_idx1 ON schedule_history USING btree (new_oid);


--
-- TOC entry 9425 (class 1259 OID 49416)
-- Dependencies: 907 907
-- Name: schedule_idx_date_starton; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_date_starton ON schedule USING btree (date(starton));


--
-- TOC entry 9426 (class 1259 OID 49417)
-- Dependencies: 907 907 907 907 907 907
-- Name: schedule_idx_group; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_group ON schedule USING btree (sysuser, presctype, state, isbron, starton, otdel);


--
-- TOC entry 9427 (class 1259 OID 49418)
-- Dependencies: 907
-- Name: schedule_idx_isborn; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_isborn ON schedule USING btree (isbron);


--
-- TOC entry 9428 (class 1259 OID 49419)
-- Dependencies: 907
-- Name: schedule_idx_otdel; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_otdel ON schedule USING btree (otdel);


--
-- TOC entry 9429 (class 1259 OID 49420)
-- Dependencies: 907
-- Name: schedule_idx_paid; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_paid ON schedule USING btree (paid);


--
-- TOC entry 9430 (class 1259 OID 49421)
-- Dependencies: 907
-- Name: schedule_idx_state; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX schedule_idx_state ON schedule USING btree (state);


--
-- TOC entry 9527 (class 1259 OID 49422)
-- Dependencies: 933
-- Name: sicklist_form_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX sicklist_form_pk ON sicklist_form USING btree (formnum);


--
-- TOC entry 9534 (class 1259 OID 49423)
-- Dependencies: 935
-- Name: sicklist_formtitle_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX sicklist_formtitle_pk ON sicklist_formtitle USING btree (oid);


--
-- TOC entry 9550 (class 1259 OID 49424)
-- Dependencies: 943
-- Name: sicklist_request_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX sicklist_request_pk ON sicklist_request USING btree (oid);


--
-- TOC entry 9566 (class 1259 OID 49425)
-- Dependencies: 948
-- Name: smid_idx_by_parent; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX smid_idx_by_parent ON smid USING btree (parent_id);


--
-- TOC entry 9580 (class 1259 OID 49426)
-- Dependencies: 956 956
-- Name: sotr_mdoctype_otd_sys_bind_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sotr_mdoctype_otd_sys_bind_idx ON sotr_mdoctype USING btree (sysuser, otdel);


--
-- TOC entry 9623 (class 1259 OID 49427)
-- Dependencies: 969
-- Name: sotrworkday_idx_dates; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sotrworkday_idx_dates ON sotrworkday USING btree (dates);


--
-- TOC entry 9624 (class 1259 OID 49428)
-- Dependencies: 969
-- Name: sotrworkday_idx_isholiday; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sotrworkday_idx_isholiday ON sotrworkday USING btree (isholiday);


--
-- TOC entry 9703 (class 1259 OID 49429)
-- Dependencies: 993
-- Name: sysuser_audit_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sysuser_audit_idx ON sysuser_audit USING btree (in_dt);


--
-- TOC entry 9704 (class 1259 OID 49430)
-- Dependencies: 993
-- Name: sysuser_audit_idx1; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sysuser_audit_idx1 ON sysuser_audit USING btree (out_dt);


--
-- TOC entry 9697 (class 1259 OID 49431)
-- Dependencies: 992
-- Name: sysuser_idx; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sysuser_idx ON sysuser USING btree (username);


--
-- TOC entry 9698 (class 1259 OID 49432)
-- Dependencies: 992
-- Name: sysuser_idx_isactive; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sysuser_idx_isactive ON sysuser USING btree (isactive);


--
-- TOC entry 9699 (class 1259 OID 49433)
-- Dependencies: 992 992
-- Name: sysuser_idx_username; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX sysuser_idx_username ON sysuser USING btree (upper((username)::text));


--
-- TOC entry 17415 (class 0 OID 0)
-- Dependencies: 9699
-- Name: INDEX sysuser_idx_username; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON INDEX sysuser_idx_username IS 'Думаю нужно удалить, потому что при логине пользователя используется lower(sy.username)';


--
-- TOC entry 9762 (class 1259 OID 49434)
-- Dependencies: 1016 1016
-- Name: tib_mdoc_by_fk_id_smedit; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX tib_mdoc_by_fk_id_smedit ON tib_mdoc USING btree (fk_id, smedit_id);


--
-- TOC entry 8527 (class 1259 OID 49435)
-- Dependencies: 615
-- Name: ui_latinnames_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ui_latinnames_id ON latinnames USING btree (id);


--
-- TOC entry 8756 (class 1259 OID 49436)
-- Dependencies: 698 698
-- Name: ui_nosology_mkb10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ui_nosology_mkb10 ON nosology_mkb10 USING btree (nosology, mkb10);


--
-- TOC entry 8761 (class 1259 OID 49437)
-- Dependencies: 699 699
-- Name: ui_nosology_mkb10_benefitmedic; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ui_nosology_mkb10_benefitmedic ON nosology_mkb10_benefitmedic USING btree (nosology_mkb10, benefit_medic);


--
-- TOC entry 9225 (class 1259 OID 49438)
-- Dependencies: 855
-- Name: ui_receptiontype_class; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX ui_receptiontype_class ON receptiontype USING btree (class);


--
-- TOC entry 9779 (class 1259 OID 49439)
-- Dependencies: 1022
-- Name: ui_tradenames_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ui_tradenames_id ON tradenames USING btree (id);


--
-- TOC entry 7760 (class 1259 OID 49440)
-- Dependencies: 354
-- Name: unic_number; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX unic_number ON benefit USING btree (code);


--
-- TOC entry 7958 (class 1259 OID 49441)
-- Dependencies: 415 415
-- Name: ux_comfort_room_comfort_type; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_comfort_room_comfort_type ON comfort USING btree (room, comfort_type);


--
-- TOC entry 8066 (class 1259 OID 49442)
-- Dependencies: 454 454 454
-- Name: ux_diag_presc_model; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_diag_presc_model ON diag_presc_model USING btree (presc, diag, model);


--
-- TOC entry 8256 (class 1259 OID 49443)
-- Dependencies: 520 520
-- Name: ux_etheir_code_table; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_etheir_code_table ON etheir USING btree (etable_id, upper((code)::text));


--
-- TOC entry 8939 (class 1259 OID 49444)
-- Dependencies: 764 764
-- Name: ux_fk_people_relation_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_fk_people_relation_people ON people_relation USING btree (people, people_relation);


--
-- TOC entry 8611 (class 1259 OID 49445)
-- Dependencies: 647 647
-- Name: ux_lpusettings; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_lpusettings ON lpusettings USING btree (lpu, settings);


--
-- TOC entry 9473 (class 1259 OID 49446)
-- Dependencies: 921 921
-- Name: ux_service_bed_profile; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_service_bed_profile ON service_bed_profile USING btree (service, bed_profile);


--
-- TOC entry 9482 (class 1259 OID 49447)
-- Dependencies: 924 924
-- Name: ux_service_mkb10; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_service_mkb10 ON service_mkb10 USING btree (service, mkb_10);


--
-- TOC entry 9487 (class 1259 OID 49448)
-- Dependencies: 925 925
-- Name: ux_service_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_service_presctype ON service_presctype USING btree (service, presctype);


--
-- TOC entry 7546 (class 1259 OID 49449)
-- Dependencies: 177 177 177 177
-- Name: ux_service_price; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_service_price ON service_price USING btree (services, insurprogram, fromdate, service_price_category);


--
-- TOC entry 9500 (class 1259 OID 49450)
-- Dependencies: 928 928 928
-- Name: ux_services_group_code_pay; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_services_group_code_pay ON services USING btree (service_group, pay_type, code);


--
-- TOC entry 9693 (class 1259 OID 49451)
-- Dependencies: 991
-- Name: ux_systemsettings_param; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_systemsettings_param ON systemsettings USING btree (param);


--
-- TOC entry 9718 (class 1259 OID 49452)
-- Dependencies: 999 999
-- Name: ux_sysuser_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX ux_sysuser_presctype ON sysuser_presctype USING btree (sysusers, presctypes);


--
-- TOC entry 10014 (class 1259 OID 49453)
-- Dependencies: 1091
-- Name: vk_character_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_character_pk ON vk_character USING btree (oid);


--
-- TOC entry 10017 (class 1259 OID 49454)
-- Dependencies: 1092
-- Name: vk_conclusin_reason_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_conclusin_reason_pk ON vk_conclusin_reason USING btree (oid);


--
-- TOC entry 10020 (class 1259 OID 49455)
-- Dependencies: 1093
-- Name: vk_conclusion_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_conclusion_pk ON vk_conclusion USING btree (oid);


--
-- TOC entry 10037 (class 1259 OID 49456)
-- Dependencies: 1094
-- Name: vk_main_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_main_pk ON vk_main USING btree (oid);


--
-- TOC entry 10040 (class 1259 OID 49457)
-- Dependencies: 1095
-- Name: vk_result_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_result_pk ON vk_result USING btree (oid);


--
-- TOC entry 10043 (class 1259 OID 49458)
-- Dependencies: 1096
-- Name: vk_standart_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_standart_pk ON vk_standart USING btree (oid);


--
-- TOC entry 10046 (class 1259 OID 49459)
-- Dependencies: 1097
-- Name: vk_target_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_target_pk ON vk_target USING btree (oid);


--
-- TOC entry 10049 (class 1259 OID 49460)
-- Dependencies: 1098
-- Name: vk_type_pk; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX vk_type_pk ON vk_type USING btree (oid);


--
-- TOC entry 10067 (class 1259 OID 49461)
-- Dependencies: 1106 1106 1106
-- Name: web_buffer_tr_fer_tabl_key_act; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX web_buffer_tr_fer_tabl_key_act ON web_buffer_transfer_fer USING btree (table_name, key_field_value, upper((action)::text));


--
-- TOC entry 10059 (class 1259 OID 49466)
-- Dependencies: 1105 1105 1105
-- Name: web_buffer_tr_tabl_key_act; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX web_buffer_tr_tabl_key_act ON web_buffer_transfer USING btree (table_name, key_field_value, upper((action)::text));


--
-- TOC entry 10072 (class 1259 OID 49467)
-- Dependencies: 1108
-- Name: web_comparison_their; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX web_comparison_their ON web_comparison USING btree (their_oid);


--
-- TOC entry 10083 (class 1259 OID 49468)
-- Dependencies: 1115
-- Name: web_people_fs_client_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX web_people_fs_client_id ON web_people_fs USING btree (client_id);


--
-- TOC entry 10091 (class 1259 OID 49469)
-- Dependencies: 1118 1118 1118 1118 1118 1118 1118
-- Name: web_schedule_rule_by_all; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX web_schedule_rule_by_all ON web_schedule_rule USING btree (sysuser, service_type, cabinet, payment_method, duration, start_date, end_date);


--
-- TOC entry 10092 (class 1259 OID 49470)
-- Dependencies: 1118
-- Name: web_schedule_rule_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX web_schedule_rule_id ON web_schedule_rule USING btree (rule_id);


--
-- TOC entry 10096 (class 1259 OID 49471)
-- Dependencies: 1119 1119 1119 1119 1119 1119 1119
-- Name: web_schedule_rule_reg_by_all; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX web_schedule_rule_reg_by_all ON web_schedule_rule_reg USING btree (sysuser, service_type, cabinet, payment_method, duration, start_date, end_date);


--
-- TOC entry 10097 (class 1259 OID 49472)
-- Dependencies: 1119
-- Name: web_schedule_rule_reg_id; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX web_schedule_rule_reg_id ON web_schedule_rule_reg USING btree (rule_id);


--
-- TOC entry 10108 (class 1259 OID 49473)
-- Dependencies: 1124 1124 1124
-- Name: workschedule_cidx_workdate_sysuser; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX workschedule_cidx_workdate_sysuser ON workschedule USING btree (workdate, sysuser, presctype);


--
-- TOC entry 10109 (class 1259 OID 49474)
-- Dependencies: 1124
-- Name: workschedule_idx_oid; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX workschedule_idx_oid ON workschedule USING btree (oid);


--
-- TOC entry 10144 (class 1259 OID 49475)
-- Dependencies: 1135
-- Name: zayavka_idx_people; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX zayavka_idx_people ON zayavka USING btree (people);


--
-- TOC entry 10145 (class 1259 OID 49476)
-- Dependencies: 1135
-- Name: zayavka_idx_people_bid; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX zayavka_idx_people_bid ON zayavka USING btree (people_bid_status);


--
-- TOC entry 10146 (class 1259 OID 49477)
-- Dependencies: 1135
-- Name: zayavka_idx_presctype; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX zayavka_idx_presctype ON zayavka USING btree (presctype);


--
-- TOC entry 10147 (class 1259 OID 49478)
-- Dependencies: 1135
-- Name: zayavka_idx_schedule; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX zayavka_idx_schedule ON zayavka USING btree (schedule);


--
-- TOC entry 10148 (class 1259 OID 49479)
-- Dependencies: 1135
-- Name: zayavka_idx_status; Type: INDEX; Schema: mir; Owner: postgres; Tablespace: 
--

CREATE INDEX zayavka_idx_status ON zayavka USING btree (status);


SET search_path = mypacs, pg_catalog;

--
-- TOC entry 10153 (class 1259 OID 57483)
-- Dependencies: 1257
-- Name: cns_dicomdisplay_group_id; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX cns_dicomdisplay_group_id ON cns_dicomdisplay USING btree (group_id);


--
-- TOC entry 10158 (class 1259 OID 59384)
-- Dependencies: 1259
-- Name: cns_modility_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX cns_modility_idx ON cns_modility USING btree (modality);


--
-- TOC entry 10159 (class 1259 OID 59394)
-- Dependencies: 1259
-- Name: cns_modility_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX cns_modility_idx1 ON cns_modility USING btree (groupname);


--
-- TOC entry 10168 (class 1259 OID 57520)
-- Dependencies: 1262
-- Name: conclusions_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX conclusions_idx1 ON conclusions USING btree (fk_userid);


--
-- TOC entry 10169 (class 1259 OID 57521)
-- Dependencies: 1262
-- Name: conclusions_idx2; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX conclusions_idx2 ON conclusions USING btree (fk_studyuid);


--
-- TOC entry 10226 (class 1259 OID 59900)
-- Dependencies: 1295
-- Name: diagnoz_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX diagnoz_idx1 ON diagnoz USING btree (fk_parentid);


--
-- TOC entry 10227 (class 1259 OID 59901)
-- Dependencies: 1295
-- Name: diagnoz_idx2; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX diagnoz_idx2 ON diagnoz USING btree (fc_name);


--
-- TOC entry 10174 (class 1259 OID 57573)
-- Dependencies: 1275
-- Name: events_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX events_idx ON events USING btree (fd_date);


--
-- TOC entry 10179 (class 1259 OID 57712)
-- Dependencies: 1277 1277 1277
-- Name: events_rsnd_err_lst_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX events_rsnd_err_lst_idx ON events_rsnd_err_lst USING btree (fc_calledtitle, fc_studyuid, fk_id_rsnd);


--
-- TOC entry 10184 (class 1259 OID 58896)
-- Dependencies: 1280
-- Name: images_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX images_idx ON images USING btree (accessionnumber);


--
-- TOC entry 10185 (class 1259 OID 58830)
-- Dependencies: 1280
-- Name: images_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX images_idx1 ON images USING btree (studyuid);


--
-- TOC entry 10186 (class 1259 OID 60701)
-- Dependencies: 1280
-- Name: images_idx2; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX images_idx2 ON images USING btree (p_pid);


--
-- TOC entry 10193 (class 1259 OID 58698)
-- Dependencies: 1283
-- Name: modility_setting_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX modility_setting_idx ON modility_setting USING btree (modality);


--
-- TOC entry 10194 (class 1259 OID 58705)
-- Dependencies: 1283
-- Name: modility_setting_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX modility_setting_idx1 ON modility_setting USING btree (groupname);


--
-- TOC entry 10197 (class 1259 OID 57735)
-- Dependencies: 1284
-- Name: params_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX params_idx ON params USING btree (fc_key);


--
-- TOC entry 10198 (class 1259 OID 57736)
-- Dependencies: 1284
-- Name: params_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX params_idx1 ON params USING btree (fc_section);


--
-- TOC entry 10205 (class 1259 OID 58654)
-- Dependencies: 1288
-- Name: series_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX series_idx ON series USING btree (accessionnumber);


--
-- TOC entry 10208 (class 1259 OID 60702)
-- Dependencies: 1289
-- Name: studies_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX studies_idx ON studies USING btree (studyuid);


--
-- TOC entry 10209 (class 1259 OID 60703)
-- Dependencies: 1289
-- Name: studies_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX studies_idx1 ON studies USING btree (accessionnumber);


--
-- TOC entry 10210 (class 1259 OID 60704)
-- Dependencies: 1289
-- Name: studies_idx2; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX studies_idx2 ON studies USING btree (studyuid_old);


--
-- TOC entry 10230 (class 1259 OID 60098)
-- Dependencies: 1297
-- Name: studydocs_idx1; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX studydocs_idx1 ON studydocs USING btree (studyuid);


--
-- TOC entry 10217 (class 1259 OID 57772)
-- Dependencies: 1292 1292
-- Name: users_idx; Type: INDEX; Schema: mypacs; Owner: postgres; Tablespace: 
--

CREATE INDEX users_idx ON users USING btree (fc_login, fn_del);


SET search_path = mir, pg_catalog;

--
-- TOC entry 11490 (class 2620 OID 49697)
-- Dependencies: 631 1469
-- Name: LPU_BEFORE_IU; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "LPU_BEFORE_IU" BEFORE INSERT OR UPDATE ON lpu FOR EACH ROW EXECUTE PROCEDURE before_after_insert_or_update_lpu();


--
-- TOC entry 11358 (class 2620 OID 49698)
-- Dependencies: 302 2266
-- Name: academicdegree$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "academicdegree$tr" BEFORE INSERT OR UPDATE ON academicdegree FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11350 (class 2620 OID 49699)
-- Dependencies: 212 2266
-- Name: address_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "address_type$tr" BEFORE INSERT OR UPDATE ON address_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11351 (class 2620 OID 49700)
-- Dependencies: 213 1865
-- Name: addressex$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "addressex$tr" BEFORE INSERT OR UPDATE ON addressex FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11352 (class 2620 OID 49701)
-- Dependencies: 213 2270
-- Name: addressex$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "addressex$tr_sysdate" BEFORE INSERT OR UPDATE ON addressex FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11353 (class 2620 OID 49702)
-- Dependencies: 213 1445
-- Name: addressex_tr_addr_str; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER addressex_tr_addr_str AFTER INSERT OR UPDATE ON addressex FOR EACH ROW EXECUTE PROCEDURE addressex_tr_addr_str();


--
-- TOC entry 11359 (class 2620 OID 49703)
-- Dependencies: 311 1865
-- Name: age_group$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "age_group$tr" BEFORE INSERT OR UPDATE ON age_group FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11360 (class 2620 OID 49704)
-- Dependencies: 313 1865
-- Name: age_group_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "age_group_type$tr" BEFORE INSERT OR UPDATE ON age_group_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11363 (class 2620 OID 49705)
-- Dependencies: 322 2270
-- Name: ambticket$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "ambticket$tr_sysdate" BEFORE INSERT OR UPDATE ON ambticket FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11364 (class 2620 OID 49706)
-- Dependencies: 328 1865
-- Name: areal$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "areal$tr" BEFORE INSERT OR UPDATE ON areal FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11365 (class 2620 OID 49707)
-- Dependencies: 329 1865
-- Name: areal$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "areal$tr" BEFORE INSERT OR UPDATE ON areal_history FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11366 (class 2620 OID 49708)
-- Dependencies: 335 2266
-- Name: areal_sotr$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "areal_sotr$tr" BEFORE INSERT OR UPDATE ON areal_sotr FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11367 (class 2620 OID 49709)
-- Dependencies: 337 1865
-- Name: arrivals$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "arrivals$tr" BEFORE INSERT OR UPDATE ON arrivals FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11368 (class 2620 OID 49710)
-- Dependencies: 345 1865
-- Name: award$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "award$tr" BEFORE INSERT OR UPDATE ON award FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11369 (class 2620 OID 49711)
-- Dependencies: 346 1865
-- Name: bank_account$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bank_account$tr" BEFORE INSERT OR UPDATE ON bank_account FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11370 (class 2620 OID 49712)
-- Dependencies: 347 1865
-- Name: bank_account$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bank_account$tr" BEFORE INSERT OR UPDATE ON bank_account_history FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11371 (class 2620 OID 49713)
-- Dependencies: 348 1865
-- Name: bed$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bed$tr" BEFORE INSERT OR UPDATE ON bed FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11372 (class 2620 OID 49714)
-- Dependencies: 350 2266
-- Name: bed_info$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bed_info$tr" BEFORE INSERT OR UPDATE ON bed_info FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11373 (class 2620 OID 49715)
-- Dependencies: 351 1865
-- Name: bed_oper$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bed_oper$tr" BEFORE INSERT OR UPDATE ON bed_oper FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11374 (class 2620 OID 49716)
-- Dependencies: 352 1865
-- Name: bed_oper_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bed_oper_type$tr" BEFORE INSERT OR UPDATE ON bed_oper_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11375 (class 2620 OID 49717)
-- Dependencies: 353 1865
-- Name: bed_profile$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "bed_profile$tr" BEFORE INSERT OR UPDATE ON bed_profile FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11376 (class 2620 OID 49718)
-- Dependencies: 354 2266
-- Name: benefit$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit$tr" BEFORE INSERT OR UPDATE ON benefit FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11377 (class 2620 OID 49719)
-- Dependencies: 355 2266
-- Name: benefit_7nos_upload$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_7nos_upload$tr" BEFORE INSERT ON benefit_7nos_upload FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11378 (class 2620 OID 49720)
-- Dependencies: 356 2266
-- Name: benefit_employee_upload$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_employee_upload$tr" BEFORE INSERT OR UPDATE ON benefit_employee_upload FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11379 (class 2620 OID 49721)
-- Dependencies: 357 2266
-- Name: benefit_financing$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_financing$tr" BEFORE INSERT OR UPDATE ON benefit_financing FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11380 (class 2620 OID 49722)
-- Dependencies: 359 2266
-- Name: benefit_medic$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_medic$tr" BEFORE INSERT OR UPDATE ON benefit_medic FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11381 (class 2620 OID 49723)
-- Dependencies: 360 2266
-- Name: benefit_medic_price$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_medic_price$tr" BEFORE INSERT OR UPDATE ON benefit_medic_price FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11382 (class 2620 OID 49724)
-- Dependencies: 361 2266
-- Name: benefit_medic_upload$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_medic_upload$tr" BEFORE INSERT OR UPDATE ON benefit_medic_upload FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11383 (class 2620 OID 49725)
-- Dependencies: 362 2266
-- Name: benefit_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_type$tr" BEFORE INSERT OR UPDATE ON benefit_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11384 (class 2620 OID 49726)
-- Dependencies: 363 2266
-- Name: benefit_upload$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "benefit_upload$tr" BEFORE INSERT OR UPDATE ON benefit_upload FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11385 (class 2620 OID 49727)
-- Dependencies: 365 2266
-- Name: bill_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER bill_tr BEFORE INSERT ON bill FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11386 (class 2620 OID 49728)
-- Dependencies: 366 2266
-- Name: bill_uslug_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER bill_uslug_tr BEFORE INSERT ON bill_uslug FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11387 (class 2620 OID 49729)
-- Dependencies: 372 1865
-- Name: building$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building$tr" BEFORE INSERT OR UPDATE ON building FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11388 (class 2620 OID 49730)
-- Dependencies: 373 1865
-- Name: building_communication_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_communication_type$tr" BEFORE INSERT OR UPDATE ON building_communication_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11389 (class 2620 OID 49731)
-- Dependencies: 374 1865
-- Name: building_floor_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_floor_type$tr" BEFORE INSERT OR UPDATE ON building_floor_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11390 (class 2620 OID 49732)
-- Dependencies: 375 1865
-- Name: building_heating_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_heating_type$tr" BEFORE INSERT OR UPDATE ON building_heating_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11391 (class 2620 OID 49733)
-- Dependencies: 377 1865
-- Name: building_hot_water_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_hot_water_type$tr" BEFORE INSERT OR UPDATE ON building_hot_water_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11392 (class 2620 OID 49734)
-- Dependencies: 378 1865
-- Name: building_ownership$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_ownership$tr" BEFORE INSERT OR UPDATE ON building_ownership FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11393 (class 2620 OID 49735)
-- Dependencies: 379 1865
-- Name: building_power_supply_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_power_supply_type$tr" BEFORE INSERT OR UPDATE ON building_power_supply_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11394 (class 2620 OID 49736)
-- Dependencies: 380 1865
-- Name: building_price$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_price$tr" BEFORE INSERT OR UPDATE ON building_price FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11395 (class 2620 OID 49737)
-- Dependencies: 381 1865
-- Name: building_project_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_project_type$tr" BEFORE INSERT OR UPDATE ON building_project_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11396 (class 2620 OID 49738)
-- Dependencies: 382 1865
-- Name: building_purpose$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_purpose$tr" BEFORE INSERT OR UPDATE ON building_purpose FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11397 (class 2620 OID 49739)
-- Dependencies: 383 1865
-- Name: building_sewerage_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_sewerage_type$tr" BEFORE INSERT OR UPDATE ON building_sewerage_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11398 (class 2620 OID 49740)
-- Dependencies: 384 1865
-- Name: building_state$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_state$tr" BEFORE INSERT OR UPDATE ON building_state FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11399 (class 2620 OID 49741)
-- Dependencies: 385 1865
-- Name: building_state_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_state_type$tr" BEFORE INSERT OR UPDATE ON building_state_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11400 (class 2620 OID 49742)
-- Dependencies: 386 1865
-- Name: building_supporting_str$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_supporting_str$tr" BEFORE INSERT OR UPDATE ON building_supporting_structure FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11401 (class 2620 OID 49743)
-- Dependencies: 387 1865
-- Name: building_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "building_type$tr" BEFORE INSERT OR UPDATE ON building_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11402 (class 2620 OID 49744)
-- Dependencies: 388 2266
-- Name: cabinet$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "cabinet$tr" BEFORE INSERT OR UPDATE ON cabinet FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11403 (class 2620 OID 49745)
-- Dependencies: 390 1865
-- Name: cardemployee$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "cardemployee$tr" BEFORE INSERT OR UPDATE ON cardemployee FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11404 (class 2620 OID 49746)
-- Dependencies: 394 2266
-- Name: chatgroup$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "chatgroup$tr" BEFORE INSERT OR UPDATE ON chatgroup FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11405 (class 2620 OID 49747)
-- Dependencies: 396 2266
-- Name: chathistory$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "chathistory$tr" BEFORE INSERT OR UPDATE ON chathistory FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11406 (class 2620 OID 49748)
-- Dependencies: 398 1865
-- Name: citizenship$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "citizenship$tr" BEFORE INSERT OR UPDATE ON citizenship FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11407 (class 2620 OID 49749)
-- Dependencies: 407 1474
-- Name: cls_mz_phgroup_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER cls_mz_phgroup_tr BEFORE INSERT ON cls_mz_phgroup FOR EACH ROW EXECUTE PROCEDURE cls_mz_phgroup_tr_new_id();


--
-- TOC entry 11408 (class 2620 OID 49750)
-- Dependencies: 409 1475
-- Name: clsatc_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER clsatc_tr BEFORE INSERT ON clsatc FOR EACH ROW EXECUTE PROCEDURE clsatc_tr_new_id();


--
-- TOC entry 11409 (class 2620 OID 49751)
-- Dependencies: 415 1865
-- Name: comfort$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "comfort$tr" BEFORE INSERT OR UPDATE ON comfort FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11410 (class 2620 OID 49752)
-- Dependencies: 416 1865
-- Name: comfort_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "comfort_type$tr" BEFORE INSERT OR UPDATE ON comfort_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11411 (class 2620 OID 49753)
-- Dependencies: 417 2266
-- Name: comp_comptype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "comp_comptype$tr" BEFORE INSERT OR UPDATE ON comp_comptype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11413 (class 2620 OID 49754)
-- Dependencies: 419 2266
-- Name: company_address$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "company_address$tr" BEFORE INSERT OR UPDATE ON company_address FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11412 (class 2620 OID 49755)
-- Dependencies: 418 1865
-- Name: company_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER company_tr BEFORE INSERT OR UPDATE ON company FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11414 (class 2620 OID 49756)
-- Dependencies: 421 1865
-- Name: companytype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "companytype$tr" BEFORE INSERT OR UPDATE ON companytype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11415 (class 2620 OID 49757)
-- Dependencies: 423 2266
-- Name: counterpart_contract_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER counterpart_contract_tr BEFORE INSERT ON counterpart_contract FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11416 (class 2620 OID 49758)
-- Dependencies: 435 1865
-- Name: court$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "court$tr" BEFORE INSERT OR UPDATE ON court FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11418 (class 2620 OID 49759)
-- Dependencies: 454 2266
-- Name: diag_presc_model$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "diag_presc_model$tr" BEFORE INSERT OR UPDATE ON diag_presc_model FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11417 (class 2620 OID 49760)
-- Dependencies: 451 1658
-- Name: diag_tr_after; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER diag_tr_after AFTER INSERT OR UPDATE ON diag FOR EACH ROW EXECUTE PROCEDURE diag_tr_after();


--
-- TOC entry 11419 (class 2620 OID 49761)
-- Dependencies: 458 2266
-- Name: diagnoz_template$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "diagnoz_template$tr" BEFORE INSERT OR UPDATE ON diagnoz_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11420 (class 2620 OID 49762)
-- Dependencies: 459 2266
-- Name: diary$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "diary$tr" BEFORE INSERT OR UPDATE ON diary FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11421 (class 2620 OID 49763)
-- Dependencies: 460 2266
-- Name: diary_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "diary_type$tr" BEFORE INSERT OR UPDATE ON diary_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11696 (class 2620 OID 60656)
-- Dependencies: 1301 1319
-- Name: dicom_wl_buffer_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER dicom_wl_buffer_tr AFTER INSERT ON dicom_wl_buffer FOR EACH ROW EXECUTE PROCEDURE dicom_wl_buffer_trigger_after();


--
-- TOC entry 11695 (class 2620 OID 60648)
-- Dependencies: 1300 1318
-- Name: dicom_wl_log_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER dicom_wl_log_tr AFTER INSERT ON dicom_wl_log FOR EACH ROW EXECUTE PROCEDURE dicom_wl_log_trigger_after();


--
-- TOC entry 11422 (class 2620 OID 49764)
-- Dependencies: 463 2266
-- Name: dictionary_nsi$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "dictionary_nsi$tr" BEFORE INSERT OR UPDATE ON dictionary_nsi FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11423 (class 2620 OID 49765)
-- Dependencies: 465 1865
-- Name: diplomaeducation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "diplomaeducation$tr" BEFORE INSERT OR UPDATE ON diplomaeducation FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11433 (class 2620 OID 49766)
-- Dependencies: 497 1865
-- Name: ecompany$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "ecompany$tr" BEFORE INSERT OR UPDATE ON ecompany FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11434 (class 2620 OID 49767)
-- Dependencies: 500 1865
-- Name: educationinstitution$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "educationinstitution$tr" BEFORE INSERT OR UPDATE ON educationinstitution FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11435 (class 2620 OID 49768)
-- Dependencies: 501 1865
-- Name: educationtype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "educationtype$tr" BEFORE INSERT OR UPDATE ON educationtype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11436 (class 2620 OID 49769)
-- Dependencies: 504 1865
-- Name: eown$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "eown$tr" BEFORE INSERT OR UPDATE ON eown FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11437 (class 2620 OID 49770)
-- Dependencies: 508 1865
-- Name: equipment$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment$tr" BEFORE INSERT OR UPDATE ON equipment FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11439 (class 2620 OID 49771)
-- Dependencies: 511 1865
-- Name: equipment_model$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_model$tr" BEFORE INSERT OR UPDATE ON equipment_model FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11440 (class 2620 OID 49772)
-- Dependencies: 512 1865
-- Name: equipment_oper$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_oper$tr" BEFORE INSERT OR UPDATE ON equipment_oper FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11441 (class 2620 OID 49773)
-- Dependencies: 513 1865
-- Name: equipment_oper_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_oper_type$tr" BEFORE INSERT OR UPDATE ON equipment_oper_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11442 (class 2620 OID 49774)
-- Dependencies: 514 1865
-- Name: equipment_ownership$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_ownership$tr" BEFORE INSERT OR UPDATE ON equipment_ownership FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11443 (class 2620 OID 49775)
-- Dependencies: 515 1865
-- Name: equipment_price$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_price$tr" BEFORE INSERT OR UPDATE ON equipment_price FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11444 (class 2620 OID 49776)
-- Dependencies: 516 1865
-- Name: equipment_state$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_state$tr" BEFORE INSERT OR UPDATE ON equipment_state FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11438 (class 2620 OID 49777)
-- Dependencies: 509 1865
-- Name: equipment_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_type$tr" BEFORE INSERT OR UPDATE ON equipment_delivery FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11445 (class 2620 OID 49778)
-- Dependencies: 517 1865
-- Name: equipment_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "equipment_type$tr" BEFORE INSERT OR UPDATE ON equipment_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11446 (class 2620 OID 49779)
-- Dependencies: 518 1683
-- Name: errorclientmessages_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER errorclientmessages_tr BEFORE INSERT ON errorclientmessages FOR EACH ROW EXECUTE PROCEDURE error_message_tr();


--
-- TOC entry 11447 (class 2620 OID 49780)
-- Dependencies: 519 1865
-- Name: etable$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "etable$tr" BEFORE INSERT OR UPDATE ON etable FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11448 (class 2620 OID 49781)
-- Dependencies: 520 1865
-- Name: etheir$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "etheir$tr" BEFORE INSERT OR UPDATE ON etheir FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11449 (class 2620 OID 49782)
-- Dependencies: 522 2266
-- Name: expert_part_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_part_type$tr" BEFORE INSERT OR UPDATE ON expert_part_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11450 (class 2620 OID 49783)
-- Dependencies: 523 2266
-- Name: expert_raiting$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_raiting$tr" BEFORE INSERT OR UPDATE ON expert_raiting FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11451 (class 2620 OID 49784)
-- Dependencies: 524 2266
-- Name: expert_raiting_section_part$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_raiting_section_part$tr" BEFORE INSERT OR UPDATE ON expert_raiting_section_part FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11452 (class 2620 OID 49785)
-- Dependencies: 525 2266
-- Name: expert_raiting_sections$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_raiting_sections$tr" BEFORE INSERT OR UPDATE ON expert_raiting_sections FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11453 (class 2620 OID 49786)
-- Dependencies: 526 2266
-- Name: expert_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_result$tr" BEFORE INSERT OR UPDATE ON expert_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11454 (class 2620 OID 49787)
-- Dependencies: 527 2266
-- Name: expert_templations_parts$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_templations_parts$tr" BEFORE INSERT OR UPDATE ON expert_templations_parts FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11455 (class 2620 OID 49788)
-- Dependencies: 528 2266
-- Name: expert_templations_sections$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "expert_templations_sections$tr" BEFORE INSERT OR UPDATE ON expert_templations_sections FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11456 (class 2620 OID 49789)
-- Dependencies: 530 2266
-- Name: export_cod_dictionary_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER export_cod_dictionary_tr BEFORE INSERT ON export_cod_dictionary FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11457 (class 2620 OID 49790)
-- Dependencies: 532 2266
-- Name: export_cod_table_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER export_cod_table_tr BEFORE INSERT ON export_cod_table FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11458 (class 2620 OID 49791)
-- Dependencies: 549 1865
-- Name: food_form$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "food_form$tr" BEFORE INSERT OR UPDATE ON food_form FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11459 (class 2620 OID 49792)
-- Dependencies: 550 1865
-- Name: food_repetition$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "food_repetition$tr" BEFORE INSERT OR UPDATE ON food_repetition FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11460 (class 2620 OID 49793)
-- Dependencies: 551 1865
-- Name: food_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "food_type$tr" BEFORE INSERT OR UPDATE ON food_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11461 (class 2620 OID 49794)
-- Dependencies: 558 1865
-- Name: functioning$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "functioning$tr" BEFORE INSERT OR UPDATE ON functioning FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11462 (class 2620 OID 49795)
-- Dependencies: 566 1865
-- Name: heal_profile_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "heal_profile_type$tr" BEFORE INSERT OR UPDATE ON heal_profile_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11463 (class 2620 OID 49796)
-- Dependencies: 570 2266
-- Name: history_mdoc_location$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "history_mdoc_location$tr" BEFORE INSERT OR UPDATE ON history_mdoc_location FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11464 (class 2620 OID 49797)
-- Dependencies: 576 1865
-- Name: ib_sections$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "ib_sections$tr" BEFORE INSERT OR UPDATE ON ib_sections FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11465 (class 2620 OID 49798)
-- Dependencies: 588 1865
-- Name: information_system$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "information_system$tr" BEFORE INSERT OR UPDATE ON information_system FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11466 (class 2620 OID 49799)
-- Dependencies: 589 1865
-- Name: information_system_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "information_system_type$tr" BEFORE INSERT OR UPDATE ON information_system_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11467 (class 2620 OID 49800)
-- Dependencies: 590 1865
-- Name: infotype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "infotype$tr" BEFORE INSERT OR UPDATE ON infotype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11468 (class 2620 OID 49801)
-- Dependencies: 591 1865
-- Name: infovalue$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "infovalue$tr" BEFORE INSERT OR UPDATE ON infovalue FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11469 (class 2620 OID 49802)
-- Dependencies: 592 1865
-- Name: infrastructure$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "infrastructure$tr" BEFORE INSERT OR UPDATE ON infrastructure FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11470 (class 2620 OID 49803)
-- Dependencies: 593 1865
-- Name: infrastructure_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "infrastructure_type$tr" BEFORE INSERT OR UPDATE ON infrastructure_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11471 (class 2620 OID 49804)
-- Dependencies: 597 1865
-- Name: insur_terr$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "insur_terr$tr" BEFORE INSERT OR UPDATE ON insur_terr FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11361 (class 2620 OID 49805)
-- Dependencies: 317 2266
-- Name: insurance$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "insurance$tr" BEFORE INSERT OR UPDATE ON insurance FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11362 (class 2620 OID 49806)
-- Dependencies: 317 2270
-- Name: insurance$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "insurance$tr_sysdate" BEFORE INSERT OR UPDATE ON insurance FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11472 (class 2620 OID 49807)
-- Dependencies: 600 2266
-- Name: insurprogram$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "insurprogram$tr" BEFORE INSERT OR UPDATE ON insurprogram FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11473 (class 2620 OID 49808)
-- Dependencies: 602 2266
-- Name: invalid$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "invalid$tr" BEFORE INSERT OR UPDATE ON invalid FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11474 (class 2620 OID 49809)
-- Dependencies: 603 2266
-- Name: invalidgroup$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "invalidgroup$tr" BEFORE INSERT OR UPDATE ON invalidgroup FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11475 (class 2620 OID 49810)
-- Dependencies: 604 2266
-- Name: invalidkind$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "invalidkind$tr" BEFORE INSERT OR UPDATE ON invalidkind FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11476 (class 2620 OID 49811)
-- Dependencies: 605 2266
-- Name: invalidtype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "invalidtype$tr" BEFORE INSERT OR UPDATE ON invalidtype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11477 (class 2620 OID 49812)
-- Dependencies: 608 2266
-- Name: lab_probe_color$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lab_probe_color$tr" BEFORE INSERT OR UPDATE ON lab_probe_color FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11478 (class 2620 OID 49813)
-- Dependencies: 609 2266
-- Name: lab_run_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lab_run_type$tr" BEFORE INSERT OR UPDATE ON lab_run_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11479 (class 2620 OID 49814)
-- Dependencies: 610 2266
-- Name: lab_work_place$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lab_work_place$tr" BEFORE INSERT OR UPDATE ON lab_work_place FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11480 (class 2620 OID 49815)
-- Dependencies: 611 2266
-- Name: laboratory_norm$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "laboratory_norm$tr" BEFORE INSERT OR UPDATE ON laboratory_norm FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11481 (class 2620 OID 49816)
-- Dependencies: 612 2266
-- Name: laboratory_param$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "laboratory_param$tr" BEFORE INSERT OR UPDATE ON laboratory_param FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11482 (class 2620 OID 49817)
-- Dependencies: 613 1865
-- Name: laboratory_reports$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "laboratory_reports$tr" BEFORE INSERT OR UPDATE ON laboratory_reports FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11483 (class 2620 OID 49818)
-- Dependencies: 615 2266
-- Name: latinnames$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "latinnames$tr" BEFORE INSERT OR UPDATE ON latinnames FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11484 (class 2620 OID 49819)
-- Dependencies: 616 1865
-- Name: level_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "level_type$tr" BEFORE INSERT OR UPDATE ON level_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11485 (class 2620 OID 49820)
-- Dependencies: 618 1865
-- Name: licence$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "licence$tr" BEFORE INSERT OR UPDATE ON licence FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11486 (class 2620 OID 49821)
-- Dependencies: 619 1865
-- Name: licence_activity_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "licence_activity_type$tr" BEFORE INSERT OR UPDATE ON licence_activity_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11487 (class 2620 OID 49822)
-- Dependencies: 621 1865
-- Name: licence_oper$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "licence_oper$tr" BEFORE INSERT OR UPDATE ON licence_oper FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11488 (class 2620 OID 49823)
-- Dependencies: 622 1865
-- Name: licence_oper_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "licence_oper_type$tr" BEFORE INSERT OR UPDATE ON licence_oper_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11489 (class 2620 OID 49824)
-- Dependencies: 624 1865
-- Name: linetype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "linetype$tr" BEFORE INSERT OR UPDATE ON linetype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11491 (class 2620 OID 49825)
-- Dependencies: 640 1865
-- Name: lpu_organizational_form_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER lpu_organizational_form_tr BEFORE INSERT OR UPDATE ON lpu_organizational_form FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11492 (class 2620 OID 49826)
-- Dependencies: 641 1865
-- Name: lpu_ownership$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lpu_ownership$tr" BEFORE INSERT OR UPDATE ON lpu_ownership FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11493 (class 2620 OID 49827)
-- Dependencies: 642 1865
-- Name: lpu_profile$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lpu_profile$tr" BEFORE INSERT OR UPDATE ON lpu_profile FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11494 (class 2620 OID 49828)
-- Dependencies: 643 1865
-- Name: lpu_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lpu_type$tr" BEFORE INSERT OR UPDATE ON lpu_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11495 (class 2620 OID 49829)
-- Dependencies: 644 1431
-- Name: lpudogovor$tr_new_lpu; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "lpudogovor$tr_new_lpu" BEFORE INSERT OR UPDATE ON lpudogovor FOR EACH ROW EXECUTE PROCEDURE add_new_lpu_sysuser();


--
-- TOC entry 11496 (class 2620 OID 49830)
-- Dependencies: 648 2266
-- Name: map_teeth$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "map_teeth$tr" BEFORE INSERT ON map_teeth FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();

ALTER TABLE map_teeth DISABLE TRIGGER "map_teeth$tr";


--
-- TOC entry 11497 (class 2620 OID 49831)
-- Dependencies: 649 1865
-- Name: marriage$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "marriage$tr" BEFORE INSERT OR UPDATE ON marriage FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11500 (class 2620 OID 49832)
-- Dependencies: 654 2266
-- Name: mdoc_group$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "mdoc_group$tr" BEFORE INSERT OR UPDATE ON mdoc_group FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11501 (class 2620 OID 49833)
-- Dependencies: 656 2266
-- Name: mdoc_location_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER mdoc_location_tr BEFORE INSERT OR UPDATE ON mdoc_location FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11498 (class 2620 OID 49834)
-- Dependencies: 652 1847
-- Name: mdoc_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER mdoc_tr AFTER INSERT ON mdoc FOR EACH ROW EXECUTE PROCEDURE mdoc_after_insert();


--
-- TOC entry 11499 (class 2620 OID 49835)
-- Dependencies: 652 1848
-- Name: mdoc_tr_bar; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER mdoc_tr_bar AFTER INSERT ON mdoc FOR EACH ROW EXECUTE PROCEDURE mdoc_generate_barcode();


--
-- TOC entry 11502 (class 2620 OID 49836)
-- Dependencies: 665 2266
-- Name: medic_template_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER medic_template_tr BEFORE INSERT OR UPDATE ON medic_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11503 (class 2620 OID 49837)
-- Dependencies: 666 1865
-- Name: medicalcare$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "medicalcare$tr" BEFORE INSERT OR UPDATE ON medicalcare FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11504 (class 2620 OID 49838)
-- Dependencies: 667 1865
-- Name: medicalcondition$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "medicalcondition$tr" BEFORE INSERT OR UPDATE ON medicalcondition FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11505 (class 2620 OID 49839)
-- Dependencies: 672 1865
-- Name: military$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "military$tr" BEFORE INSERT OR UPDATE ON military FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11506 (class 2620 OID 49840)
-- Dependencies: 674 2266
-- Name: mkb_10_template$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "mkb_10_template$tr" BEFORE INSERT OR UPDATE ON mkb_10_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11507 (class 2620 OID 49841)
-- Dependencies: 684 2266
-- Name: msec_conclusin$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "msec_conclusin$tr" BEFORE INSERT OR UPDATE ON msec_conclusin FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11508 (class 2620 OID 49842)
-- Dependencies: 685 2266
-- Name: msec_main$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "msec_main$tr" BEFORE INSERT OR UPDATE ON msec_main FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11509 (class 2620 OID 49843)
-- Dependencies: 686 2266
-- Name: msec_target$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "msec_target$tr" BEFORE INSERT OR UPDATE ON msec_target FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11510 (class 2620 OID 49844)
-- Dependencies: 688 1865
-- Name: nacionality$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "nacionality$tr" BEFORE INSERT OR UPDATE ON nacionality FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11511 (class 2620 OID 49845)
-- Dependencies: 689 2266
-- Name: names$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "names$tr" BEFORE INSERT OR UPDATE ON names FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11512 (class 2620 OID 49846)
-- Dependencies: 691 1865
-- Name: natural_factor$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "natural_factor$tr" BEFORE INSERT OR UPDATE ON natural_factor FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11513 (class 2620 OID 49847)
-- Dependencies: 692 1865
-- Name: natural_factor_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "natural_factor_type$tr" BEFORE INSERT OR UPDATE ON natural_factor_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11514 (class 2620 OID 49848)
-- Dependencies: 697 2266
-- Name: nosology$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "nosology$tr" BEFORE INSERT OR UPDATE ON nosology FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11515 (class 2620 OID 49849)
-- Dependencies: 698 2266
-- Name: nosology_mkb10$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "nosology_mkb10$tr" BEFORE INSERT OR UPDATE ON nosology_mkb10 FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11516 (class 2620 OID 49850)
-- Dependencies: 700 2266
-- Name: nosology_mkb10_benefitmedic_upload$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "nosology_mkb10_benefitmedic_upload$tr" BEFORE INSERT OR UPDATE ON nosology_mkb10_benefitmedic_upload FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11517 (class 2620 OID 49851)
-- Dependencies: 714 1865
-- Name: operation_complication$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "operation_complication$tr" BEFORE INSERT OR UPDATE ON operation_complication FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11518 (class 2620 OID 49852)
-- Dependencies: 716 1865
-- Name: operation_list$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "operation_list$tr" BEFORE INSERT OR UPDATE ON operation_type_list FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11424 (class 2620 OID 49853)
-- Dependencies: 485 1865
-- Name: otdel$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel$tr" BEFORE INSERT OR UPDATE ON otdel FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11425 (class 2620 OID 49854)
-- Dependencies: 485 2270
-- Name: otdel$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel$tr_sysdate" BEFORE INSERT OR UPDATE ON otdel FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11519 (class 2620 OID 49855)
-- Dependencies: 721 2266
-- Name: otdel_mdoctype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_mdoctype$tr" BEFORE INSERT OR UPDATE ON otdel_mdoctype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11520 (class 2620 OID 49856)
-- Dependencies: 721 1871
-- Name: otdel_mdoctype$tr_obr_to_stac; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_mdoctype$tr_obr_to_stac" BEFORE INSERT ON otdel_mdoctype FOR EACH ROW EXECUTE PROCEDURE otdel_mdoctype_tr_obr_to_stac();


--
-- TOC entry 11521 (class 2620 OID 49857)
-- Dependencies: 721 1872
-- Name: otdel_mdoctype$tr_upd_childs; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_mdoctype$tr_upd_childs" AFTER INSERT OR DELETE OR UPDATE ON otdel_mdoctype FOR EACH ROW EXECUTE PROCEDURE otdel_mdoctype_tr_upd_childs();

ALTER TABLE otdel_mdoctype DISABLE TRIGGER "otdel_mdoctype$tr_upd_childs";


--
-- TOC entry 11522 (class 2620 OID 49858)
-- Dependencies: 722 1865
-- Name: otdel_profile$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_profile$tr" BEFORE INSERT OR UPDATE ON otdel_profile FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11523 (class 2620 OID 49859)
-- Dependencies: 723 2266
-- Name: otdel_profile_additional$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_profile_additional$tr" BEFORE INSERT OR UPDATE ON otdel_profile_additional FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11525 (class 2620 OID 49860)
-- Dependencies: 729 2266
-- Name: otdel_profile_additional$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_profile_additional$tr" BEFORE INSERT OR UPDATE ON otdel_type_additional FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11524 (class 2620 OID 49861)
-- Dependencies: 728 1865
-- Name: otdel_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "otdel_type$tr" BEFORE INSERT OR UPDATE ON otdel_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11526 (class 2620 OID 49862)
-- Dependencies: 730 2266
-- Name: paidagree_docs$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "paidagree_docs$tr" BEFORE INSERT OR UPDATE ON paidagree_docs FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11527 (class 2620 OID 49863)
-- Dependencies: 732 2266
-- Name: paidagree_fields$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "paidagree_fields$tr" BEFORE INSERT OR UPDATE ON paidagree_fields FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11530 (class 2620 OID 49864)
-- Dependencies: 740 2266
-- Name: pay_agreement_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER pay_agreement_tr BEFORE INSERT ON pay_agreement FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11532 (class 2620 OID 49865)
-- Dependencies: 743 2266
-- Name: pay_appendix_naz$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "pay_appendix_naz$tr" BEFORE INSERT ON pay_appendix_naz FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11531 (class 2620 OID 49866)
-- Dependencies: 742 2266
-- Name: pay_appendix_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER pay_appendix_tr BEFORE INSERT ON pay_appendix FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11533 (class 2620 OID 49867)
-- Dependencies: 744 1865
-- Name: pay_method$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "pay_method$tr" BEFORE INSERT OR UPDATE ON pay_method FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11535 (class 2620 OID 49868)
-- Dependencies: 746 2266
-- Name: pay_type_appendix_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER pay_type_appendix_tr BEFORE INSERT ON pay_type_appendix FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11534 (class 2620 OID 49869)
-- Dependencies: 744 2266
-- Name: payment_method$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "payment_method$tr" BEFORE INSERT OR UPDATE ON pay_method FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11354 (class 2620 OID 49870)
-- Dependencies: 214 2270
-- Name: people$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people$tr_sysdate" BEFORE INSERT OR UPDATE ON people FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11355 (class 2620 OID 49871)
-- Dependencies: 214 1912
-- Name: people_before_update; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER people_before_update BEFORE UPDATE ON people FOR EACH ROW EXECUTE PROCEDURE people_update_tr();


--
-- TOC entry 11536 (class 2620 OID 49872)
-- Dependencies: 749 2266
-- Name: people_change_history$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people_change_history$tr" BEFORE INSERT OR UPDATE ON people_change_history FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11548 (class 2620 OID 49873)
-- Dependencies: 766 2266
-- Name: people_post$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people_post$tr" BEFORE INSERT OR UPDATE ON people_specialty FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11546 (class 2620 OID 49874)
-- Dependencies: 764 2266
-- Name: people_relation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people_relation$tr" BEFORE INSERT OR UPDATE ON people_relation FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11547 (class 2620 OID 49875)
-- Dependencies: 765 2266
-- Name: people_relation_status$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people_relation_status$tr" BEFORE INSERT OR UPDATE ON people_relation_status FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11549 (class 2620 OID 49876)
-- Dependencies: 767 1865
-- Name: people_status$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "people_status$tr" BEFORE INSERT OR UPDATE ON people_status FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11356 (class 2620 OID 49877)
-- Dependencies: 214 1910
-- Name: people_tr_portal_mdoc; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER people_tr_portal_mdoc AFTER INSERT ON people FOR EACH ROW EXECUTE PROCEDURE people_tr_portal_mdoc();


--
-- TOC entry 11550 (class 2620 OID 49878)
-- Dependencies: 782 2270
-- Name: pinfo$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "pinfo$tr_sysdate" BEFORE INSERT OR UPDATE ON pinfo FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11551 (class 2620 OID 49879)
-- Dependencies: 785 1865
-- Name: plot$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "plot$tr" BEFORE INSERT OR UPDATE ON plot FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11552 (class 2620 OID 49880)
-- Dependencies: 797 1865
-- Name: position$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "position$tr" BEFORE INSERT OR UPDATE ON "position" FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11553 (class 2620 OID 49881)
-- Dependencies: 798 1865
-- Name: positiontype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "positiontype$tr" BEFORE INSERT OR UPDATE ON positiontype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11427 (class 2620 OID 49882)
-- Dependencies: 486 1865
-- Name: post$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "post$tr" BEFORE INSERT OR UPDATE ON post FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11537 (class 2620 OID 49883)
-- Dependencies: 750 1865
-- Name: posteducation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "posteducation$tr" BEFORE INSERT OR UPDATE ON posteducation FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11538 (class 2620 OID 49884)
-- Dependencies: 751 1865
-- Name: postgraduateeducation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "postgraduateeducation$tr" BEFORE INSERT OR UPDATE ON postgraduateeducation FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11554 (class 2620 OID 49885)
-- Dependencies: 801 2266
-- Name: pregnancy_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "pregnancy_result$tr" BEFORE INSERT OR UPDATE ON pregnancy_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11557 (class 2620 OID 49886)
-- Dependencies: 812 2266
-- Name: presc_card$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presc_card$tr" BEFORE INSERT OR UPDATE ON presc_card FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11556 (class 2620 OID 60700)
-- Dependencies: 811 1330
-- Name: presc_dicom_update_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER presc_dicom_update_tr AFTER INSERT OR DELETE OR UPDATE ON presc FOR EACH ROW EXECUTE PROCEDURE presc_dicom_wl_buffer_tr();


--
-- TOC entry 11558 (class 2620 OID 49887)
-- Dependencies: 815 2266
-- Name: presc_reason_cancel$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presc_reason_cancel$tr" BEFORE INSERT OR UPDATE ON presc_reason_cancel FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11559 (class 2620 OID 49888)
-- Dependencies: 816 2266
-- Name: presc_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presc_result$tr" BEFORE INSERT OR UPDATE ON presc_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11560 (class 2620 OID 49889)
-- Dependencies: 817 2269
-- Name: presc_schedule_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER presc_schedule_tr AFTER INSERT OR DELETE OR UPDATE ON presc_schedule FOR EACH ROW EXECUTE PROCEDURE public.set_maxvisitors_count();


--
-- TOC entry 11561 (class 2620 OID 49890)
-- Dependencies: 818 2266
-- Name: presc_service$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presc_service$tr" BEFORE INSERT OR UPDATE ON presc_service FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11562 (class 2620 OID 49891)
-- Dependencies: 819 1865
-- Name: presc_sign_sotr$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presc_sign_sotr$tr" BEFORE INSERT OR UPDATE ON presc_sign_sotr FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11555 (class 2620 OID 49892)
-- Dependencies: 811 1952
-- Name: presc_tr_after; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER presc_tr_after AFTER INSERT OR UPDATE ON presc FOR EACH ROW EXECUTE PROCEDURE presc_trigger_after();


--
-- TOC entry 11565 (class 2620 OID 49893)
-- Dependencies: 825 1865
-- Name: presctype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctype$tr" BEFORE INSERT OR UPDATE ON presctype FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11566 (class 2620 OID 49894)
-- Dependencies: 826 2266
-- Name: presctypeparam$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctypeparam$tr" BEFORE INSERT OR UPDATE ON presctypeparam FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11567 (class 2620 OID 49895)
-- Dependencies: 827 2266
-- Name: presctypeparam_dictionary$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctypeparam_dictionary$tr" BEFORE INSERT OR UPDATE ON presctypeparam_dictionary FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11563 (class 2620 OID 49896)
-- Dependencies: 823 2266
-- Name: presctypeparam_storage$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctypeparam_storage$tr" BEFORE INSERT OR UPDATE ON prescparam_storage FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11528 (class 2620 OID 49897)
-- Dependencies: 733 2266
-- Name: presctypeparam_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctypeparam_type$tr" BEFORE INSERT OR UPDATE ON param_datatype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11564 (class 2620 OID 49898)
-- Dependencies: 824 2266
-- Name: presctypeparam_values$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "presctypeparam_values$tr" BEFORE INSERT OR UPDATE ON prescparam_values FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11568 (class 2620 OID 49899)
-- Dependencies: 830 2266
-- Name: profex_actions$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_actions$tr" BEFORE INSERT OR UPDATE ON profex_actions FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11569 (class 2620 OID 49900)
-- Dependencies: 831 2266
-- Name: profex_actions_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_actions_type$tr" BEFORE INSERT OR UPDATE ON profex_actions_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11570 (class 2620 OID 49901)
-- Dependencies: 833 2266
-- Name: profex_company$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_company$tr" BEFORE INSERT OR UPDATE ON profex_company FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11571 (class 2620 OID 49902)
-- Dependencies: 834 2266
-- Name: profex_contract$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_contract$tr" BEFORE INSERT OR UPDATE ON profex_contract FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11572 (class 2620 OID 49903)
-- Dependencies: 835 2266
-- Name: profex_list$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_list$tr" BEFORE INSERT OR UPDATE ON profex_list FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11573 (class 2620 OID 49904)
-- Dependencies: 836 2266
-- Name: profex_list_naz$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_list_naz$tr" BEFORE INSERT OR UPDATE ON profex_list_naz FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11575 (class 2620 OID 49905)
-- Dependencies: 839 2266
-- Name: profex_proffactor_info$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_proffactor_info$tr" BEFORE INSERT OR UPDATE ON profex_proffactor_info FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11576 (class 2620 OID 49906)
-- Dependencies: 840 2266
-- Name: profex_proffactor_presc$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_proffactor_presc$tr" BEFORE INSERT OR UPDATE ON profex_proffactor_presc FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11577 (class 2620 OID 49907)
-- Dependencies: 841 2266
-- Name: profex_proffactor_profexlist$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_proffactor_profexlist$tr" BEFORE INSERT OR UPDATE ON profex_proffactor_profexlist FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11578 (class 2620 OID 49908)
-- Dependencies: 842 2266
-- Name: profex_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_result$tr" BEFORE INSERT OR UPDATE ON profex_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11579 (class 2620 OID 49909)
-- Dependencies: 843 2266
-- Name: profex_result_comment$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profex_result_comment$tr" BEFORE INSERT OR UPDATE ON profex_result_comment FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11581 (class 2620 OID 49910)
-- Dependencies: 845 1865
-- Name: profile_care$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "profile_care$tr" BEFORE INSERT OR UPDATE ON profile_care FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11582 (class 2620 OID 49911)
-- Dependencies: 850 1865
-- Name: progression_stat$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "progression_stat$tr" BEFORE INSERT OR UPDATE ON progression_stat FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11574 (class 2620 OID 49912)
-- Dependencies: 838 2266
-- Name: prophex_proffactor$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "prophex_proffactor$tr" BEFORE INSERT OR UPDATE ON profex_proffactor FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11580 (class 2620 OID 49913)
-- Dependencies: 844 2266
-- Name: prophex_workconditions$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "prophex_workconditions$tr" BEFORE INSERT OR UPDATE ON profex_workconditions FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11584 (class 2620 OID 49914)
-- Dependencies: 852 2266
-- Name: protocol_template$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "protocol_template$tr" BEFORE INSERT OR UPDATE ON protocol_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11583 (class 2620 OID 49915)
-- Dependencies: 851 1955
-- Name: protocol_tr_after; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER protocol_tr_after AFTER INSERT OR UPDATE ON protocol FOR EACH ROW EXECUTE PROCEDURE protocol_tr_after();


--
-- TOC entry 11539 (class 2620 OID 49916)
-- Dependencies: 752 1865
-- Name: qualification$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "qualification$tr" BEFORE INSERT OR UPDATE ON qualification FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11540 (class 2620 OID 49917)
-- Dependencies: 753 1865
-- Name: qualificationcategory$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "qualificationcategory$tr" BEFORE INSERT OR UPDATE ON qualificationcategory FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11585 (class 2620 OID 49918)
-- Dependencies: 854 1865
-- Name: reason_sending_archive$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "reason_sending_archive$tr" BEFORE INSERT OR UPDATE ON reason_sending_archive FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11586 (class 2620 OID 49919)
-- Dependencies: 861 2266
-- Name: recipe_medic_template_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER recipe_medic_template_tr BEFORE INSERT OR UPDATE ON recipe_medic_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11587 (class 2620 OID 49920)
-- Dependencies: 867 1865
-- Name: recordtypein$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "recordtypein$tr" BEFORE INSERT OR UPDATE ON recordtypein FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11588 (class 2620 OID 49921)
-- Dependencies: 868 1865
-- Name: recordtypeout$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "recordtypeout$tr" BEFORE INSERT OR UPDATE ON recordtypeout FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11589 (class 2620 OID 49922)
-- Dependencies: 872 1865
-- Name: regime$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "regime$tr" BEFORE INSERT OR UPDATE ON regime FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11590 (class 2620 OID 49923)
-- Dependencies: 874 2266
-- Name: registers_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER registers_tr BEFORE INSERT OR UPDATE ON registers FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11591 (class 2620 OID 49924)
-- Dependencies: 875 2266
-- Name: registr_ill_diagnoses$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "registr_ill_diagnoses$tr" BEFORE INSERT OR UPDATE ON registr_ill_diagnoses FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11592 (class 2620 OID 49925)
-- Dependencies: 876 2266
-- Name: registr_ill_pacients$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "registr_ill_pacients$tr" BEFORE INSERT OR UPDATE ON registr_ill_pacients FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11593 (class 2620 OID 49926)
-- Dependencies: 877 2266
-- Name: registr_nosology_diagnoses$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "registr_nosology_diagnoses$tr" BEFORE INSERT OR UPDATE ON registr_nosology_diagnoses FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11594 (class 2620 OID 49927)
-- Dependencies: 878 2266
-- Name: registr_nosology_pacients$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "registr_nosology_pacients$tr" BEFORE INSERT OR UPDATE ON registr_nosology_pacients FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11595 (class 2620 OID 49928)
-- Dependencies: 880 1865
-- Name: registwindow$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "registwindow$tr" BEFORE INSERT OR UPDATE ON registwindow FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11596 (class 2620 OID 49929)
-- Dependencies: 880 1818
-- Name: registwindow_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER registwindow_tr AFTER INSERT ON registwindow FOR EACH ROW EXECUTE PROCEDURE insert_new_row_in_lastonlinedatetime();


--
-- TOC entry 11597 (class 2620 OID 49930)
-- Dependencies: 884 2266
-- Name: report_group$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "report_group$tr" BEFORE INSERT OR UPDATE ON report_group FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11598 (class 2620 OID 49931)
-- Dependencies: 886 2266
-- Name: report_template$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "report_template$tr" BEFORE INSERT OR UPDATE ON report_template FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11605 (class 2620 OID 49932)
-- Dependencies: 906 1865
-- Name: resort_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "resort_type$tr" BEFORE INSERT OR UPDATE ON sanatorium_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11541 (class 2620 OID 49933)
-- Dependencies: 754 1865
-- Name: retrainment$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "retrainment$tr" BEFORE INSERT OR UPDATE ON retrainment FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11599 (class 2620 OID 49934)
-- Dependencies: 897 1961
-- Name: role_right$tr_upd_all; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "role_right$tr_upd_all" AFTER INSERT OR DELETE ON role_right FOR EACH ROW EXECUTE PROCEDURE role_right_upd_all_tr();


--
-- TOC entry 11428 (class 2620 OID 49935)
-- Dependencies: 487 1865
-- Name: room$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "room$tr" BEFORE INSERT OR UPDATE ON room FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11600 (class 2620 OID 49936)
-- Dependencies: 901 1865
-- Name: room_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "room_type$tr" BEFORE INSERT OR UPDATE ON room_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11601 (class 2620 OID 49937)
-- Dependencies: 902 2266
-- Name: rw_accidentnotification_condition$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "rw_accidentnotification_condition$tr" BEFORE INSERT OR UPDATE ON rw_accidentnotification_condition FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11602 (class 2620 OID 49938)
-- Dependencies: 903 2266
-- Name: rw_accidentnotification_tmpl$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "rw_accidentnotification_tmpl$tr" BEFORE INSERT OR UPDATE ON rw_accidentnotification_tmpl FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11603 (class 2620 OID 49939)
-- Dependencies: 904 1865
-- Name: sanatorium$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sanatorium$tr" BEFORE INSERT OR UPDATE ON sanatorium FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11604 (class 2620 OID 49940)
-- Dependencies: 905 1865
-- Name: sanatorium$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sanatorium$tr" BEFORE INSERT OR UPDATE ON sanatorium_history FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11611 (class 2620 OID 49941)
-- Dependencies: 913 2005
-- Name: schedule_people_tr_insert; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_people_tr_insert BEFORE INSERT OR DELETE OR UPDATE ON schedule_people FOR EACH ROW EXECUTE PROCEDURE schedule_people_tr_insert();


--
-- TOC entry 11606 (class 2620 OID 49942)
-- Dependencies: 907 2007
-- Name: schedule_sms_email; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_sms_email AFTER UPDATE ON schedule FOR EACH ROW EXECUTE PROCEDURE schedule_sms_email();


--
-- TOC entry 11607 (class 2620 OID 49943)
-- Dependencies: 907 2009
-- Name: schedule_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_tr BEFORE DELETE OR UPDATE ON schedule FOR EACH ROW EXECUTE PROCEDURE schedule_trigger();


--
-- TOC entry 11608 (class 2620 OID 49944)
-- Dependencies: 907 2012
-- Name: schedule_tr_after; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_tr_after AFTER INSERT OR UPDATE ON schedule FOR EACH ROW EXECUTE PROCEDURE schedule_trigger_after();


--
-- TOC entry 11609 (class 2620 OID 49945)
-- Dependencies: 907 2013
-- Name: schedule_tr_before; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_tr_before BEFORE UPDATE ON schedule FOR EACH ROW EXECUTE PROCEDURE schedule_trigger_before();

ALTER TABLE schedule DISABLE TRIGGER schedule_tr_before;


--
-- TOC entry 11610 (class 2620 OID 49946)
-- Dependencies: 907 2014
-- Name: schedule_tr_web_buffer_transfer; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER schedule_tr_web_buffer_transfer BEFORE INSERT OR DELETE OR UPDATE ON schedule FOR EACH ROW EXECUTE PROCEDURE schedule_trigger_web_buffer_transfer();


--
-- TOC entry 11542 (class 2620 OID 49947)
-- Dependencies: 755 1865
-- Name: sertificateeducation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sertificateeducation$tr" BEFORE INSERT OR UPDATE ON sertificateeducation FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11543 (class 2620 OID 49948)
-- Dependencies: 756 1865
-- Name: sertificatespeciality$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sertificatespeciality$tr" BEFORE INSERT OR UPDATE ON sertificatespeciality FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11612 (class 2620 OID 49949)
-- Dependencies: 921 2266
-- Name: service_bed_profile$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "service_bed_profile$tr" BEFORE INSERT OR UPDATE ON service_bed_profile FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11613 (class 2620 OID 49950)
-- Dependencies: 922 2266
-- Name: service_group$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "service_group$tr" BEFORE INSERT OR UPDATE ON service_group FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11614 (class 2620 OID 49951)
-- Dependencies: 924 2266
-- Name: service_mkb10$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "service_mkb10$tr" BEFORE INSERT OR UPDATE ON service_mkb10 FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11615 (class 2620 OID 49952)
-- Dependencies: 925 2266
-- Name: service_presctype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "service_presctype$tr" BEFORE INSERT OR UPDATE ON service_presctype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11616 (class 2620 OID 49953)
-- Dependencies: 926 2266
-- Name: service_price_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "service_price_type$tr" BEFORE INSERT OR UPDATE ON service_price_category FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11617 (class 2620 OID 49954)
-- Dependencies: 928 2266
-- Name: services$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "services$tr" BEFORE INSERT OR UPDATE ON services FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11349 (class 2620 OID 49955)
-- Dependencies: 177 2266
-- Name: services_price$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "services_price$tr" BEFORE INSERT OR UPDATE ON service_price FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11618 (class 2620 OID 49956)
-- Dependencies: 932 2266
-- Name: sicklist$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sicklist$tr" BEFORE INSERT OR UPDATE ON sicklist FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11619 (class 2620 OID 49957)
-- Dependencies: 935 2266
-- Name: sicklist_formtitle$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sicklist_formtitle$tr" BEFORE INSERT OR UPDATE ON sicklist_formtitle FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11620 (class 2620 OID 49958)
-- Dependencies: 943 2266
-- Name: sicklist_request$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sicklist_request$tr" BEFORE INSERT OR UPDATE ON sicklist_request FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11621 (class 2620 OID 49959)
-- Dependencies: 944 1865
-- Name: sicklist_status$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sicklist_status$tr" BEFORE INSERT OR UPDATE ON sicklist_status FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11544 (class 2620 OID 49960)
-- Dependencies: 757 1865
-- Name: skillimprovement$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "skillimprovement$tr" BEFORE INSERT OR UPDATE ON skillimprovement FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11622 (class 2620 OID 49961)
-- Dependencies: 946 2266
-- Name: skippayment$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "skippayment$tr" BEFORE INSERT OR UPDATE ON skippayment FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11623 (class 2620 OID 49962)
-- Dependencies: 947 2266
-- Name: skippaymentreason$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "skippaymentreason$tr" BEFORE INSERT OR UPDATE ON skippaymentreason FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11429 (class 2620 OID 49963)
-- Dependencies: 488 2049
-- Name: sotr$aiud_init_default; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr$aiud_init_default" AFTER INSERT OR DELETE OR UPDATE ON sotr FOR EACH ROW EXECUTE PROCEDURE sotr_aiud_init_default_tr();


--
-- TOC entry 11430 (class 2620 OID 49964)
-- Dependencies: 488 1865
-- Name: sotr$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr$tr" BEFORE INSERT OR UPDATE ON sotr FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11431 (class 2620 OID 49965)
-- Dependencies: 488 2270
-- Name: sotr$tr_sysdate; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr$tr_sysdate" BEFORE INSERT OR UPDATE ON sotr FOR EACH ROW EXECUTE PROCEDURE public.sysdate_generate_tr();


--
-- TOC entry 11628 (class 2620 OID 49966)
-- Dependencies: 968 1865
-- Name: sotr_district$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr_district$tr" BEFORE INSERT OR UPDATE ON sotrsotrs_districtdistrict FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11624 (class 2620 OID 49967)
-- Dependencies: 959 2266
-- Name: sotr_presctype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr_presctype$tr" BEFORE INSERT OR UPDATE ON sotr_presctype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11625 (class 2620 OID 49968)
-- Dependencies: 962 2266
-- Name: sotr_recipe_lgot_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr_recipe_lgot_type$tr" BEFORE INSERT OR UPDATE ON sotr_recipe_lgot_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11626 (class 2620 OID 49969)
-- Dependencies: 964 2059
-- Name: sotr_right$tr_upd_all; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr_right$tr_upd_all" AFTER INSERT OR DELETE ON sotr_right FOR EACH ROW EXECUTE PROCEDURE sotr_right_upd_all_tr();


--
-- TOC entry 11627 (class 2620 OID 49970)
-- Dependencies: 966 2061
-- Name: sotr_role$tr_upd_all; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sotr_role$tr_upd_all" AFTER INSERT OR DELETE ON sotr_role FOR EACH ROW EXECUTE PROCEDURE sotr_role_upd_all_tr();


--
-- TOC entry 11432 (class 2620 OID 49971)
-- Dependencies: 488 2063
-- Name: sotr_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER sotr_tr BEFORE INSERT OR DELETE OR UPDATE ON sotr FOR EACH ROW EXECUTE PROCEDURE sotr_tr_web_repl();


--
-- TOC entry 11629 (class 2620 OID 49972)
-- Dependencies: 969 2065
-- Name: sotrworkday_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER sotrworkday_tr BEFORE INSERT OR DELETE OR UPDATE ON sotrworkday FOR EACH ROW EXECUTE PROCEDURE sotrworkday_tr_func();


--
-- TOC entry 11545 (class 2620 OID 49973)
-- Dependencies: 758 1865
-- Name: specialities$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "specialities$tr" BEFORE INSERT OR UPDATE ON specialities FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11630 (class 2620 OID 49974)
-- Dependencies: 970 1865
-- Name: specialization$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "specialization$tr" BEFORE INSERT OR UPDATE ON specialization FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11631 (class 2620 OID 49975)
-- Dependencies: 971 2266
-- Name: specialtyt$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "specialtyt$tr" BEFORE INSERT OR UPDATE ON specialty FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11632 (class 2620 OID 49976)
-- Dependencies: 974 2266
-- Name: stacionar_operation$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "stacionar_operation$tr" BEFORE INSERT OR UPDATE ON stacionar_operations FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11633 (class 2620 OID 49977)
-- Dependencies: 975 1865
-- Name: stacionar_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "stacionar_type$tr" BEFORE INSERT OR UPDATE ON stacionar_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11634 (class 2620 OID 49978)
-- Dependencies: 976 1865
-- Name: stafflist$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "stafflist$tr" BEFORE INSERT OR UPDATE ON stafflist FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11635 (class 2620 OID 49979)
-- Dependencies: 977 1865
-- Name: stafflist_header$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "stafflist_header$tr" BEFORE INSERT OR UPDATE ON stafflist_header FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11636 (class 2620 OID 49980)
-- Dependencies: 984 1865
-- Name: subordination_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "subordination_type$tr" BEFORE INSERT OR UPDATE ON subordination_type FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11637 (class 2620 OID 49981)
-- Dependencies: 985 1865
-- Name: supreme_department$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "supreme_department$tr" BEFORE INSERT OR UPDATE ON supreme_department FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11641 (class 2620 OID 49982)
-- Dependencies: 998 2266
-- Name: sususer_pharmacy$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sususer_pharmacy$tr" BEFORE INSERT OR UPDATE ON sysuser_pharmacy FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11638 (class 2620 OID 49983)
-- Dependencies: 989 2266
-- Name: system_protocoltemplate$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "system_protocoltemplate$tr" BEFORE INSERT OR UPDATE ON system_protocoltemplate FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11639 (class 2620 OID 49984)
-- Dependencies: 992 1865
-- Name: sysuser$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sysuser$tr" BEFORE INSERT OR UPDATE ON sysuser FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11640 (class 2620 OID 49985)
-- Dependencies: 993 1865
-- Name: sysuser_audit$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sysuser_audit$tr" BEFORE INSERT OR UPDATE ON sysuser_audit FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11642 (class 2620 OID 49986)
-- Dependencies: 999 2266
-- Name: sysuser_presctype$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "sysuser_presctype$tr" BEFORE INSERT OR UPDATE ON sysuser_presctype FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11643 (class 2620 OID 49987)
-- Dependencies: 1020 1865
-- Name: time_period$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "time_period$tr" BEFORE INSERT OR UPDATE ON time_period FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11426 (class 2620 OID 49988)
-- Dependencies: 485 2105
-- Name: tr_region; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER tr_region AFTER INSERT OR UPDATE ON otdel FOR EACH ROW EXECUTE PROCEDURE tr_region_otdel();


--
-- TOC entry 11644 (class 2620 OID 49989)
-- Dependencies: 1022 2266
-- Name: tradenames$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "tradenames$tr" BEFORE INSERT OR UPDATE ON tradenames FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11357 (class 2620 OID 49990)
-- Dependencies: 216 1865
-- Name: trigger_1; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER trigger_1 BEFORE INSERT OR UPDATE ON tkladr_prefix FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11646 (class 2620 OID 49991)
-- Dependencies: 1029 2266
-- Name: trsf_columns_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER trsf_columns_tr BEFORE INSERT ON trsf_columns FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11645 (class 2620 OID 49992)
-- Dependencies: 1028 2266
-- Name: trsf_template_all_columns_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER trsf_template_all_columns_tr BEFORE INSERT ON trsf_all_columns FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11647 (class 2620 OID 49993)
-- Dependencies: 1034 2266
-- Name: trsf_template_columns_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER trsf_template_columns_tr BEFORE INSERT ON trsf_template_columns FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11648 (class 2620 OID 49994)
-- Dependencies: 1039 2266
-- Name: tutorial_role_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER tutorial_role_tr BEFORE INSERT ON tutorial_role FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11529 (class 2620 OID 49995)
-- Dependencies: 739 2266
-- Name: uniquefield$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "uniquefield$tr" BEFORE INSERT OR UPDATE ON patientcardsettings_uniquefield FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11649 (class 2620 OID 49996)
-- Dependencies: 1083 2266
-- Name: video_lessons_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER video_lessons_tr BEFORE INSERT OR UPDATE ON video_lessons FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11650 (class 2620 OID 49997)
-- Dependencies: 1085 2266
-- Name: video_tutorial_links$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "video_tutorial_links$tr" BEFORE INSERT ON video_tutorial_links FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11651 (class 2620 OID 49998)
-- Dependencies: 1086 2266
-- Name: video_tutorial_role$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "video_tutorial_role$tr" BEFORE INSERT ON video_tutorial_role FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11652 (class 2620 OID 49999)
-- Dependencies: 1087 1865
-- Name: vip_people$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vip_people$tr" BEFORE INSERT OR UPDATE ON vip_people FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11653 (class 2620 OID 50000)
-- Dependencies: 1088 2243
-- Name: visit_tr_portal; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER visit_tr_portal AFTER INSERT OR UPDATE ON visit FOR EACH ROW EXECUTE PROCEDURE public.ambticket_tr_portal();


--
-- TOC entry 11654 (class 2620 OID 50001)
-- Dependencies: 1091 2266
-- Name: vk_character$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_character$tr" BEFORE INSERT OR UPDATE ON vk_character FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11655 (class 2620 OID 50002)
-- Dependencies: 1092 2266
-- Name: vk_conclusin_reason$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_conclusin_reason$tr" BEFORE INSERT OR UPDATE ON vk_conclusin_reason FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11656 (class 2620 OID 50003)
-- Dependencies: 1093 2266
-- Name: vk_conclusion$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_conclusion$tr" BEFORE INSERT OR UPDATE ON vk_conclusion FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11657 (class 2620 OID 50004)
-- Dependencies: 1094 2266
-- Name: vk_main$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_main$tr" BEFORE INSERT OR UPDATE ON vk_main FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11658 (class 2620 OID 50005)
-- Dependencies: 1095 2266
-- Name: vk_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_result$tr" BEFORE INSERT OR UPDATE ON vk_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11659 (class 2620 OID 50006)
-- Dependencies: 1096 2266
-- Name: vk_standart$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_standart$tr" BEFORE INSERT OR UPDATE ON vk_standart FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11660 (class 2620 OID 50007)
-- Dependencies: 1097 2266
-- Name: vk_target$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_target$tr" BEFORE INSERT OR UPDATE ON vk_target FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11661 (class 2620 OID 50008)
-- Dependencies: 1098 2266
-- Name: vk_type$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "vk_type$tr" BEFORE INSERT OR UPDATE ON vk_type FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11662 (class 2620 OID 50009)
-- Dependencies: 1105 1865
-- Name: web_buffer_transfer$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_buffer_transfer$tr" BEFORE INSERT OR UPDATE ON web_buffer_transfer FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11663 (class 2620 OID 50010)
-- Dependencies: 1106 1865
-- Name: web_buffer_transfer_fer$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_buffer_transfer_fer$tr" BEFORE INSERT OR UPDATE ON web_buffer_transfer_fer FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11664 (class 2620 OID 50011)
-- Dependencies: 1109 2140
-- Name: web_dictionary$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_dictionary$tr" BEFORE INSERT OR UPDATE ON web_dictionary FOR EACH ROW EXECUTE PROCEDURE "web_dictionary$tr"();


--
-- TOC entry 11665 (class 2620 OID 50012)
-- Dependencies: 1110 1865
-- Name: web_dictionary_link$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_dictionary_link$tr" BEFORE INSERT OR UPDATE ON web_dictionary_link FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11666 (class 2620 OID 50013)
-- Dependencies: 1111 1865
-- Name: web_dictonary_table_link$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_dictonary_table_link$tr" BEFORE INSERT OR UPDATE ON web_dictonary_table_link FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11667 (class 2620 OID 50014)
-- Dependencies: 1116 1865
-- Name: web_schedule_fs$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_schedule_fs$tr" BEFORE INSERT OR UPDATE ON web_schedule_fs FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11668 (class 2620 OID 50015)
-- Dependencies: 1117 1865
-- Name: web_schedule_fs_reg$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_schedule_fs_reg$tr" BEFORE INSERT OR UPDATE ON web_schedule_fs_reg FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11669 (class 2620 OID 50016)
-- Dependencies: 1118 1865
-- Name: web_schedule_rule$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_schedule_rule$tr" BEFORE INSERT OR UPDATE ON web_schedule_rule FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11670 (class 2620 OID 50017)
-- Dependencies: 1119 1865
-- Name: web_schedule_rule_reg$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "web_schedule_rule_reg$tr" BEFORE INSERT OR UPDATE ON web_schedule_rule_reg FOR EACH ROW EXECUTE PROCEDURE oid_generate_tr();


--
-- TOC entry 11671 (class 2620 OID 50018)
-- Dependencies: 1126 2266
-- Name: xray_bonus$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_bonus$tr" BEFORE INSERT OR UPDATE ON xray_bonus FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11672 (class 2620 OID 50019)
-- Dependencies: 1127 2266
-- Name: xray_descriptionl$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_descriptionl$tr" BEFORE INSERT OR UPDATE ON xray_description FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11673 (class 2620 OID 50020)
-- Dependencies: 1128 2266
-- Name: xray_dicom_reduction$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_dicom_reduction$tr" BEFORE INSERT OR UPDATE ON xray_dicom_reduction FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11674 (class 2620 OID 50021)
-- Dependencies: 1129 2266
-- Name: xray_pacs$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_pacs$tr" BEFORE INSERT OR UPDATE ON xray_pacs FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11675 (class 2620 OID 50022)
-- Dependencies: 1130 2266
-- Name: xray_param$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_param$tr" BEFORE INSERT OR UPDATE ON xray_param FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11676 (class 2620 OID 50023)
-- Dependencies: 1131 2266
-- Name: xray_purpose$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_purpose$tr" BEFORE INSERT OR UPDATE ON xray_purpose FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11677 (class 2620 OID 50024)
-- Dependencies: 1132 2266
-- Name: xray_referal$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_referal$tr" BEFORE INSERT OR UPDATE ON xray_referral FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11678 (class 2620 OID 50025)
-- Dependencies: 1133 2266
-- Name: xray_result$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_result$tr" BEFORE INSERT OR UPDATE ON xray_result FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11679 (class 2620 OID 50026)
-- Dependencies: 1134 2266
-- Name: xray_urgency$tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER "xray_urgency$tr" BEFORE INSERT OR UPDATE ON xray_urgency FOR EACH ROW EXECUTE PROCEDURE public.oid_generate_tr();


--
-- TOC entry 11680 (class 2620 OID 50027)
-- Dependencies: 1135 2173
-- Name: zayavka_tr; Type: TRIGGER; Schema: mir; Owner: postgres
--

CREATE TRIGGER zayavka_tr BEFORE INSERT ON zayavka FOR EACH ROW EXECUTE PROCEDURE zayavka_tr();


SET search_path = mypacs, pg_catalog;

--
-- TOC entry 11681 (class 2620 OID 57553)
-- Dependencies: 1262 2286
-- Name: conclusions_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER conclusions_tr_bi BEFORE INSERT ON conclusions FOR EACH ROW EXECUTE PROCEDURE f_conclusions();


--
-- TOC entry 11682 (class 2620 OID 57552)
-- Dependencies: 1273 2282
-- Name: devices_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER devices_tr_bi BEFORE INSERT ON devices FOR EACH ROW EXECUTE PROCEDURE f_devices();


--
-- TOC entry 11694 (class 2620 OID 59905)
-- Dependencies: 1295 2294
-- Name: diagnoz_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER diagnoz_tr_bi BEFORE INSERT ON diagnoz FOR EACH ROW EXECUTE PROCEDURE f_diagnoz();


--
-- TOC entry 11684 (class 2620 OID 60437)
-- Dependencies: 1276 2274
-- Name: events_rsnd_tr_bd; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER events_rsnd_tr_bd AFTER DELETE ON events_rsnd FOR EACH ROW EXECUTE PROCEDURE f_events_rsnd_del();


--
-- TOC entry 11685 (class 2620 OID 57711)
-- Dependencies: 1276 2287
-- Name: events_rsnd_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER events_rsnd_tr_bi BEFORE INSERT ON events_rsnd FOR EACH ROW EXECUTE PROCEDURE f_events_rsnd_ins();


--
-- TOC entry 11683 (class 2620 OID 57575)
-- Dependencies: 1275 2283
-- Name: events_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER events_tr_bi BEFORE INSERT ON events FOR EACH ROW EXECUTE PROCEDURE f_events();


--
-- TOC entry 11686 (class 2620 OID 57754)
-- Dependencies: 1278 2288
-- Name: events_wl_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER events_wl_tr_bi BEFORE INSERT ON events_wl FOR EACH ROW EXECUTE PROCEDURE f_events_wl();


--
-- TOC entry 11687 (class 2620 OID 57752)
-- Dependencies: 1279 2289
-- Name: hospitals_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER hospitals_tr_bi BEFORE INSERT ON hospitals FOR EACH ROW EXECUTE PROCEDURE f_hospitals();


--
-- TOC entry 11688 (class 2620 OID 60436)
-- Dependencies: 1285 2285
-- Name: patients_tr_bd; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER patients_tr_bd AFTER DELETE ON patients FOR EACH ROW EXECUTE PROCEDURE f_patients_dl();


--
-- TOC entry 11689 (class 2620 OID 57748)
-- Dependencies: 1287 2290
-- Name: rules_tr; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER rules_tr BEFORE INSERT ON rules FOR EACH ROW EXECUTE PROCEDURE f_rules();


--
-- TOC entry 11690 (class 2620 OID 60435)
-- Dependencies: 1289 2295
-- Name: studies_tr; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER studies_tr AFTER DELETE ON studies FOR EACH ROW EXECUTE PROCEDURE f_studies_bd();


--
-- TOC entry 11691 (class 2620 OID 57767)
-- Dependencies: 1291 2291
-- Name: templates_tr_bi; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER templates_tr_bi BEFORE INSERT ON templates FOR EACH ROW EXECUTE PROCEDURE f_templates();


--
-- TOC entry 11692 (class 2620 OID 57771)
-- Dependencies: 1292 2292
-- Name: users_tr; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER users_tr BEFORE INSERT ON users FOR EACH ROW EXECUTE PROCEDURE f_users();


--
-- TOC entry 11693 (class 2620 OID 57778)
-- Dependencies: 1294 2293
-- Name: worklist_tr; Type: TRIGGER; Schema: mypacs; Owner: postgres
--

CREATE TRIGGER worklist_tr BEFORE INSERT ON worklist FOR EACH ROW EXECUTE PROCEDURE f_worklist();


SET search_path = mir, pg_catalog;

--
-- TOC entry 10266 (class 2606 OID 50912)
-- Dependencies: 7594 306 307
-- Name: actmatters_drugforms_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmatters_drugforms
    ADD CONSTRAINT actmatters_drugforms_fk FOREIGN KEY (actmatterid) REFERENCES actmatters(id);


--
-- TOC entry 10265 (class 2606 OID 50917)
-- Dependencies: 7940 410 307
-- Name: actmatters_drugforms_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmatters_drugforms
    ADD CONSTRAINT actmatters_drugforms_fk1 FOREIGN KEY (drugformid) REFERENCES clsdrugforms(id);


--
-- TOC entry 10264 (class 2606 OID 50922)
-- Dependencies: 7932 407 307
-- Name: actmatters_drugforms_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmatters_drugforms
    ADD CONSTRAINT actmatters_drugforms_fk2 FOREIGN KEY (mz_phgr_id) REFERENCES cls_mz_phgroup(id);


--
-- TOC entry 10271 (class 2606 OID 50927)
-- Dependencies: 7594 306 314
-- Name: am_df_limp_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY am_df_limp
    ADD CONSTRAINT am_df_limp_fk FOREIGN KEY (actmatterid) REFERENCES actmatters(id);


--
-- TOC entry 10270 (class 2606 OID 50932)
-- Dependencies: 7940 410 314
-- Name: am_df_limp_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY am_df_limp
    ADD CONSTRAINT am_df_limp_fk1 FOREIGN KEY (drugformid) REFERENCES clsdrugforms(id);


--
-- TOC entry 10269 (class 2606 OID 50937)
-- Dependencies: 7934 408 314
-- Name: am_df_limp_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY am_df_limp
    ADD CONSTRAINT am_df_limp_fk2 FOREIGN KEY (limp_phgr_id) REFERENCES cls_phgr_limp(id);


--
-- TOC entry 10288 (class 2606 OID 50942)
-- Dependencies: 8055 451 320
-- Name: ambtick_diag_fk$diag; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtick_diag
    ADD CONSTRAINT "ambtick_diag_fk$diag" FOREIGN KEY (diag_oid) REFERENCES diag(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10287 (class 2606 OID 50947)
-- Dependencies: 8625 652 320
-- Name: ambtick_diag_fk$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtick_diag
    ADD CONSTRAINT "ambtick_diag_fk$mdoc" FOREIGN KEY (mdoc_oid) REFERENCES mdoc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10353 (class 2606 OID 50952)
-- Dependencies: 8866 742 365
-- Name: bill_appendix; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill
    ADD CONSTRAINT bill_appendix FOREIGN KEY (appendix_id) REFERENCES pay_appendix(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10352 (class 2606 OID 50957)
-- Dependencies: 8163 488 365
-- Name: bill_sotr_annul; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill
    ADD CONSTRAINT bill_sotr_annul FOREIGN KEY (sotr_annul) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10351 (class 2606 OID 50962)
-- Dependencies: 8163 488 365
-- Name: bill_sotr_create; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill
    ADD CONSTRAINT bill_sotr_create FOREIGN KEY (sotr_create) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10350 (class 2606 OID 50967)
-- Dependencies: 8163 488 365
-- Name: bill_sotr_pay; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill
    ADD CONSTRAINT bill_sotr_pay FOREIGN KEY (sotr_pay) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10355 (class 2606 OID 50972)
-- Dependencies: 7787 365 366
-- Name: bill_uslug_bill; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill_uslug
    ADD CONSTRAINT bill_uslug_bill FOREIGN KEY (bill_id) REFERENCES bill(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10354 (class 2606 OID 50977)
-- Dependencies: 9081 811 366
-- Name: bill_uslug_presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bill_uslug
    ADD CONSTRAINT bill_uslug_presc FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10418 (class 2606 OID 50982)
-- Dependencies: 8625 652 397
-- Name: children_evolution_history_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY children_evolution_history
    ADD CONSTRAINT children_evolution_history_fk FOREIGN KEY (id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10460 (class 2606 OID 50987)
-- Dependencies: 8039 449 450
-- Name: desctextes_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY desctextes
    ADD CONSTRAINT desctextes_fk FOREIGN KEY (descid) REFERENCES descriptions(id);


--
-- TOC entry 10476 (class 2606 OID 50992)
-- Dependencies: 8684 673 458
-- Name: diagnoz_template_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diagnoz_template
    ADD CONSTRAINT diagnoz_template_fk FOREIGN KEY (mkb10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10559 (class 2606 OID 50997)
-- Dependencies: 8566 631 526
-- Name: expert_result_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_result
    ADD CONSTRAINT expert_result_fk FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10568 (class 2606 OID 51002)
-- Dependencies: 9247 859 540
-- Name: favorkind_fk_recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorkind
    ADD CONSTRAINT favorkind_fk_recipe_lgot_type FOREIGN KEY (recipe_lgot_type_id) REFERENCES recipe_lgot_type(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10573 (class 2606 OID 51007)
-- Dependencies: 7968 418 543
-- Name: fg_people$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people
    ADD CONSTRAINT "fg_people$company" FOREIGN KEY (company) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10572 (class 2606 OID 51012)
-- Dependencies: 8131 479 543
-- Name: fg_people$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people
    ADD CONSTRAINT "fg_people$district" FOREIGN KEY (district) REFERENCES district(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10571 (class 2606 OID 51017)
-- Dependencies: 8566 631 543
-- Name: fg_people$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people
    ADD CONSTRAINT "fg_people$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10570 (class 2606 OID 51022)
-- Dependencies: 7577 214 543
-- Name: fg_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people
    ADD CONSTRAINT "fg_people$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10575 (class 2606 OID 51027)
-- Dependencies: 8357 545 544
-- Name: fg_people_period$fg_period; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people_period
    ADD CONSTRAINT "fg_people_period$fg_period" FOREIGN KEY (period) REFERENCES fg_period(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10574 (class 2606 OID 51032)
-- Dependencies: 7577 214 544
-- Name: fg_people_period$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_people_period
    ADD CONSTRAINT "fg_people_period$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10577 (class 2606 OID 51037)
-- Dependencies: 8566 631 546
-- Name: fg_presctype_change$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_presctype_change
    ADD CONSTRAINT "fg_presctype_change$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10576 (class 2606 OID 51042)
-- Dependencies: 9127 825 546
-- Name: fg_presctype_change$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY fg_presctype_change
    ADD CONSTRAINT "fg_presctype_change$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10257 (class 2606 OID 51047)
-- Dependencies: 7594 306 303
-- Name: fk_actmat_i_actmatte; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_iic
    ADD CONSTRAINT fk_actmat_i_actmatte FOREIGN KEY (matterid) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10256 (class 2606 OID 51052)
-- Dependencies: 7943 411 303
-- Name: fk_actmat_i_clsiic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_iic
    ADD CONSTRAINT fk_actmat_i_clsiic FOREIGN KEY (uniqid) REFERENCES clsiic(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10255 (class 2606 OID 51057)
-- Dependencies: 7948 413 303
-- Name: fk_actmat_i_clspharm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_iic
    ADD CONSTRAINT fk_actmat_i_clspharm FOREIGN KEY (phgrid) REFERENCES clspharmagroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10259 (class 2606 OID 51062)
-- Dependencies: 7594 306 304
-- Name: fk_actmat_p_actmatte; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_phact
    ADD CONSTRAINT fk_actmat_p_actmatte FOREIGN KEY (matterid) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10261 (class 2606 OID 51067)
-- Dependencies: 7594 306 305
-- Name: fk_actmat_p_actmatte; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_phgr
    ADD CONSTRAINT fk_actmat_p_actmatte FOREIGN KEY (matterid) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10260 (class 2606 OID 51072)
-- Dependencies: 7948 413 305
-- Name: fk_actmat_p_clspharm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_phgr
    ADD CONSTRAINT fk_actmat_p_clspharm FOREIGN KEY (uniqid) REFERENCES clspharmagroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10258 (class 2606 OID 51077)
-- Dependencies: 8972 779 304
-- Name: fk_actmat_p_pharmaac; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmat_phact
    ADD CONSTRAINT fk_actmat_p_pharmaac FOREIGN KEY (phactid) REFERENCES pharmaactions(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10263 (class 2606 OID 51082)
-- Dependencies: 8733 690 306
-- Name: fk_actmatte_narcogro; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmatters
    ADD CONSTRAINT fk_actmatte_narcogro FOREIGN KEY (narcogroupid) REFERENCES narcogroups(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10262 (class 2606 OID 51087)
-- Dependencies: 9672 983 306
-- Name: fk_actmatte_stronggr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY actmatters
    ADD CONSTRAINT fk_actmatte_stronggr FOREIGN KEY (stronggroupid) REFERENCES stronggroups(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10239 (class 2606 OID 51092)
-- Dependencies: 7547 212 213
-- Name: fk_addressex$address_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY addressex
    ADD CONSTRAINT "fk_addressex$address_type" FOREIGN KEY (address_type) REFERENCES address_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10238 (class 2606 OID 51097)
-- Dependencies: 7538 176 213
-- Name: fk_addressex$tkladrspr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY addressex
    ADD CONSTRAINT "fk_addressex$tkladrspr" FOREIGN KEY (tkladr) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10268 (class 2606 OID 51102)
-- Dependencies: 7615 313 311
-- Name: fk_age_group$age_group_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY age_group
    ADD CONSTRAINT "fk_age_group$age_group_type" FOREIGN KEY (age_group_type) REFERENCES age_group_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10267 (class 2606 OID 51107)
-- Dependencies: 8147 485 311
-- Name: fk_age_group$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY age_group
    ADD CONSTRAINT "fk_age_group$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10272 (class 2606 OID 51112)
-- Dependencies: 7715 338 315
-- Name: fk_ambtalon$arriveplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$arriveplace" FOREIGN KEY (arriveplace) REFERENCES arriveplace(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10273 (class 2606 OID 51117)
-- Dependencies: 7717 339 315
-- Name: fk_ambtalon$arrivereason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$arrivereason" FOREIGN KEY (arrivereason) REFERENCES arrivereason(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10274 (class 2606 OID 51122)
-- Dependencies: 7639 317 315
-- Name: fk_ambtalon$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$insurance" FOREIGN KEY (insurance) REFERENCES insurance(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10275 (class 2606 OID 51127)
-- Dependencies: 7642 318 315
-- Name: fk_ambtalon$pacient; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$pacient" FOREIGN KEY (pacient) REFERENCES pacient(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10276 (class 2606 OID 51132)
-- Dependencies: 9695 992 315
-- Name: fk_ambtalon$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$sysuser" FOREIGN KEY (spec1) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10277 (class 2606 OID 51137)
-- Dependencies: 9737 1006 315
-- Name: fk_ambtalon$talonresult; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT "fk_ambtalon$talonresult" FOREIGN KEY (talonresult) REFERENCES talonresult(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10278 (class 2606 OID 51142)
-- Dependencies: 9695 992 315
-- Name: fk_ambtalon_spec2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtalon
    ADD CONSTRAINT fk_ambtalon_spec2 FOREIGN KEY (spec2) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10286 (class 2606 OID 51147)
-- Dependencies: 7666 322 320
-- Name: fk_ambtick_diag$ambticket; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambtick_diag
    ADD CONSTRAINT "fk_ambtick_diag$ambticket" FOREIGN KEY (ticket_oid) REFERENCES ambticket(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10289 (class 2606 OID 51152)
-- Dependencies: 7649 321 322
-- Name: fk_ambticket$ambtick_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$ambtick_status" FOREIGN KEY (status_id) REFERENCES ambtick_status(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10290 (class 2606 OID 51157)
-- Dependencies: 7968 418 322
-- Name: fk_ambticket$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$company" FOREIGN KEY (refer_id) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10291 (class 2606 OID 51162)
-- Dependencies: 8127 478 322
-- Name: fk_ambticket$dispstate; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$dispstate" FOREIGN KEY (dispstate_id) REFERENCES dispstate(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10292 (class 2606 OID 51167)
-- Dependencies: 8163 488 322
-- Name: fk_ambticket$emp_empc_id; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$emp_empc_id" FOREIGN KEY (empc_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10293 (class 2606 OID 51172)
-- Dependencies: 8163 488 322
-- Name: fk_ambticket$emp_empcancel_id; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$emp_empcancel_id" FOREIGN KEY (empcancel_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10294 (class 2606 OID 51177)
-- Dependencies: 8163 488 322
-- Name: fk_ambticket$emp_empo_id; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$emp_empo_id" FOREIGN KEY (empo_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10295 (class 2606 OID 51182)
-- Dependencies: 7639 317 322
-- Name: fk_ambticket$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$insurance" FOREIGN KEY (idoc_id) REFERENCES insurance(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10296 (class 2606 OID 51187)
-- Dependencies: 8663 666 322
-- Name: fk_ambticket$medicalcare; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$medicalcare" FOREIGN KEY (medicalcare) REFERENCES medicalcare(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10297 (class 2606 OID 51192)
-- Dependencies: 8147 485 322
-- Name: fk_ambticket$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10298 (class 2606 OID 51197)
-- Dependencies: 9501 929 322
-- Name: fk_ambticket$servplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$servplace" FOREIGN KEY (servplace_id) REFERENCES servplace(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10299 (class 2606 OID 51202)
-- Dependencies: 9656 981 322
-- Name: fk_ambticket$standart_med_help; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$standart_med_help" FOREIGN KEY (med_help_id) REFERENCES standart_med_help(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10300 (class 2606 OID 51207)
-- Dependencies: 9766 1018 322
-- Name: fk_ambticket$tick_res; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$tick_res" FOREIGN KEY (result_id) REFERENCES tick_res(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10301 (class 2606 OID 51212)
-- Dependencies: 9769 1019 322
-- Name: fk_ambticket$tick_subres; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$tick_subres" FOREIGN KEY (subresult_id) REFERENCES tick_subres(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10302 (class 2606 OID 51217)
-- Dependencies: 9783 1024 322
-- Name: fk_ambticket$travm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$travm" FOREIGN KEY (travm_id) REFERENCES travm(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10303 (class 2606 OID 51222)
-- Dependencies: 10004 1088 322
-- Name: fk_ambticket$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$visit" FOREIGN KEY (id) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10304 (class 2606 OID 51227)
-- Dependencies: 10006 1089 322
-- Name: fk_ambticket$visit_goal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambticket
    ADD CONSTRAINT "fk_ambticket$visit_goal" FOREIGN KEY (goal_id) REFERENCES visit_goal(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10306 (class 2606 OID 51232)
-- Dependencies: 8123 476 323
-- Name: fk_ambul_card_info$disp_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambul_card_info
    ADD CONSTRAINT "fk_ambul_card_info$disp_type" FOREIGN KEY (disp_type) REFERENCES disp_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10305 (class 2606 OID 51237)
-- Dependencies: 8625 652 323
-- Name: fk_ambul_card_info$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ambul_card_info
    ADD CONSTRAINT "fk_ambul_card_info$mdoc" FOREIGN KEY (oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10308 (class 2606 OID 51242)
-- Dependencies: 8246 518 325
-- Name: fk_answerclientmessag$errorclientmessage; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY answerclientmessages
    ADD CONSTRAINT "fk_answerclientmessag$errorclientmessage" FOREIGN KEY (errmess) REFERENCES errorclientmessages(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10307 (class 2606 OID 51247)
-- Dependencies: 7577 214 325
-- Name: fk_answerclientmessag$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY answerclientmessages
    ADD CONSTRAINT "fk_answerclientmessag$people" FOREIGN KEY (peopleanswer) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10310 (class 2606 OID 51252)
-- Dependencies: 7710 336 328
-- Name: fk_areal$areal_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal
    ADD CONSTRAINT "fk_areal$areal_type" FOREIGN KEY (arealtype_oid) REFERENCES areal_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10309 (class 2606 OID 51257)
-- Dependencies: 8147 485 328
-- Name: fk_areal$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal
    ADD CONSTRAINT "fk_areal$otdel" FOREIGN KEY (otdel_id) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10312 (class 2606 OID 51262)
-- Dependencies: 7679 328 330
-- Name: fk_areal_kladr$areal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_kladr
    ADD CONSTRAINT "fk_areal_kladr$areal" FOREIGN KEY (areal_oid) REFERENCES areal(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10311 (class 2606 OID 51267)
-- Dependencies: 7538 176 330
-- Name: fk_areal_kladr$tkladrspr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_kladr
    ADD CONSTRAINT "fk_areal_kladr$tkladrspr" FOREIGN KEY (kladr_oid) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10313 (class 2606 OID 51272)
-- Dependencies: 8684 673 332
-- Name: fk_areal_pe$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT "fk_areal_pe$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10314 (class 2606 OID 51277)
-- Dependencies: 7577 214 332
-- Name: fk_areal_pe$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT "fk_areal_pe$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10315 (class 2606 OID 51282)
-- Dependencies: 8163 488 332
-- Name: fk_areal_pe$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT "fk_areal_pe$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10316 (class 2606 OID 51287)
-- Dependencies: 7679 328 332
-- Name: fk_areal_people$areal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT "fk_areal_people$areal" FOREIGN KEY (areal_oid) REFERENCES areal(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10317 (class 2606 OID 51292)
-- Dependencies: 7577 214 332
-- Name: fk_areal_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people
    ADD CONSTRAINT "fk_areal_people$people" FOREIGN KEY (people_oid) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10318 (class 2606 OID 51297)
-- Dependencies: 7679 328 333
-- Name: fk_areal_people_hist$areal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT "fk_areal_people_hist$areal" FOREIGN KEY (areal) REFERENCES areal(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10319 (class 2606 OID 51302)
-- Dependencies: 7702 334 333
-- Name: fk_areal_people_hist$areal_reason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT "fk_areal_people_hist$areal_reason" FOREIGN KEY (reason_move) REFERENCES areal_reason(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10320 (class 2606 OID 51307)
-- Dependencies: 7689 331 333
-- Name: fk_areal_people_hist$move_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT "fk_areal_people_hist$move_type" FOREIGN KEY (type_move) REFERENCES areal_move_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10321 (class 2606 OID 51312)
-- Dependencies: 7577 214 333
-- Name: fk_areal_people_hist$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT "fk_areal_people_hist$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10322 (class 2606 OID 51317)
-- Dependencies: 8163 488 333
-- Name: fk_areal_people_hist$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_people_hist
    ADD CONSTRAINT "fk_areal_people_hist$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10324 (class 2606 OID 51322)
-- Dependencies: 7679 328 335
-- Name: fk_areal_so$areal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_sotr
    ADD CONSTRAINT "fk_areal_so$areal" FOREIGN KEY (areal_id) REFERENCES areal(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10323 (class 2606 OID 51327)
-- Dependencies: 8163 488 335
-- Name: fk_areal_so$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY areal_sotr
    ADD CONSTRAINT "fk_areal_so$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10325 (class 2606 OID 51332)
-- Dependencies: 9395 904 337
-- Name: fk_arrivals$sanatorium; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY arrivals
    ADD CONSTRAINT "fk_arrivals$sanatorium" FOREIGN KEY (sanatorium) REFERENCES sanatorium(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10326 (class 2606 OID 51337)
-- Dependencies: 7629 316 338
-- Name: fk_arriveplace$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY arriveplace
    ADD CONSTRAINT "fk_arriveplace$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10327 (class 2606 OID 51342)
-- Dependencies: 7629 316 339
-- Name: fk_arrivereason$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY arrivereason
    ADD CONSTRAINT "fk_arrivereason$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10329 (class 2606 OID 51347)
-- Dependencies: 7721 342 341
-- Name: fk_audit$auditactiontype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY audit
    ADD CONSTRAINT "fk_audit$auditactiontype" FOREIGN KEY (auditactiontype) REFERENCES auditactiontypes(oid);


--
-- TOC entry 10328 (class 2606 OID 51352)
-- Dependencies: 9695 992 341
-- Name: fk_audit$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY audit
    ADD CONSTRAINT "fk_audit$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10330 (class 2606 OID 51357)
-- Dependencies: 7577 214 345
-- Name: fk_award$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY award
    ADD CONSTRAINT "fk_award$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10332 (class 2606 OID 51362)
-- Dependencies: 7968 418 346
-- Name: fk_bank_account$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bank_account
    ADD CONSTRAINT "fk_bank_account$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10331 (class 2606 OID 51367)
-- Dependencies: 8566 631 346
-- Name: fk_bank_account$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bank_account
    ADD CONSTRAINT "fk_bank_account$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10333 (class 2606 OID 51372)
-- Dependencies: 8155 487 348
-- Name: fk_bed$room; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bed
    ADD CONSTRAINT "fk_bed$room" FOREIGN KEY (room) REFERENCES room(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10335 (class 2606 OID 51377)
-- Dependencies: 7737 348 350
-- Name: fk_bed_info$bed; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bed_info
    ADD CONSTRAINT "fk_bed_info$bed" FOREIGN KEY (bed) REFERENCES bed(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10334 (class 2606 OID 51382)
-- Dependencies: 7752 353 350
-- Name: fk_bed_info$bed_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bed_info
    ADD CONSTRAINT "fk_bed_info$bed_profile" FOREIGN KEY (bed_profile) REFERENCES bed_profile(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10337 (class 2606 OID 51387)
-- Dependencies: 7737 348 351
-- Name: fk_bed_oper$bed; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bed_oper
    ADD CONSTRAINT "fk_bed_oper$bed" FOREIGN KEY (bed) REFERENCES bed(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10336 (class 2606 OID 51392)
-- Dependencies: 7750 352 351
-- Name: fk_bed_oper$bed_oper_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY bed_oper
    ADD CONSTRAINT "fk_bed_oper$bed_oper_type" FOREIGN KEY (bed_oper_type) REFERENCES bed_oper_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10338 (class 2606 OID 51397)
-- Dependencies: 7765 357 354
-- Name: fk_benefit$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT "fk_benefit$benefit_financing" FOREIGN KEY (benefit_financing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10339 (class 2606 OID 51402)
-- Dependencies: 7781 362 354
-- Name: fk_benefit$benefit_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT "fk_benefit$benefit_type" FOREIGN KEY (benefit_type) REFERENCES benefit_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10340 (class 2606 OID 51407)
-- Dependencies: 8684 673 354
-- Name: fk_benefit$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT "fk_benefit$mkb_10" FOREIGN KEY (mkb10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10341 (class 2606 OID 51412)
-- Dependencies: 8750 697 354
-- Name: fk_benefit$nosology; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT "fk_benefit$nosology" FOREIGN KEY (nosology) REFERENCES nosology(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10342 (class 2606 OID 51417)
-- Dependencies: 7577 214 354
-- Name: fk_benefit$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit
    ADD CONSTRAINT "fk_benefit$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10344 (class 2606 OID 51422)
-- Dependencies: 7765 357 358
-- Name: fk_benefit_finansing_$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_finansing_lgot_type
    ADD CONSTRAINT "fk_benefit_finansing_$benefit_financing" FOREIGN KEY (benefit_finansing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10343 (class 2606 OID 51427)
-- Dependencies: 9247 859 358
-- Name: fk_benefit_finansing_$recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_finansing_lgot_type
    ADD CONSTRAINT "fk_benefit_finansing_$recipe_lgot_type" FOREIGN KEY (lgot_type) REFERENCES recipe_lgot_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10345 (class 2606 OID 51432)
-- Dependencies: 7765 357 359
-- Name: fk_benefit_medic$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_medic
    ADD CONSTRAINT "fk_benefit_medic$benefit_financing" FOREIGN KEY (benefit_financing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10346 (class 2606 OID 51437)
-- Dependencies: 8525 615 359
-- Name: fk_benefit_medic$latinnames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_medic
    ADD CONSTRAINT "fk_benefit_medic$latinnames" FOREIGN KEY (latinnames) REFERENCES latinnames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10347 (class 2606 OID 51442)
-- Dependencies: 9777 1022 359
-- Name: fk_benefit_medic$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_medic
    ADD CONSTRAINT "fk_benefit_medic$tradenames" FOREIGN KEY (tradenames) REFERENCES tradenames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10348 (class 2606 OID 51447)
-- Dependencies: 7774 359 360
-- Name: fk_benefit_medic_pric$benefit_medic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefit_medic_price
    ADD CONSTRAINT "fk_benefit_medic_pric$benefit_medic" FOREIGN KEY (benefit_medic) REFERENCES benefit_medic(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10349 (class 2606 OID 51452)
-- Dependencies: 7629 316 364
-- Name: fk_benefittype$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY benefittype
    ADD CONSTRAINT "fk_benefittype$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10356 (class 2606 OID 51457)
-- Dependencies: 8163 488 368
-- Name: fk_blog$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY blog
    ADD CONSTRAINT "fk_blog$sotr" FOREIGN KEY (sotr_create) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10357 (class 2606 OID 51462)
-- Dependencies: 8163 488 369
-- Name: fk_blog_article$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY blog_article
    ADD CONSTRAINT "fk_blog_article$sotr" FOREIGN KEY (sotr_create) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10358 (class 2606 OID 51467)
-- Dependencies: 8163 488 370
-- Name: fk_blog_log$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY blog_log
    ADD CONSTRAINT "fk_blog_log$sotr" FOREIGN KEY (sotr_action) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10360 (class 2606 OID 51472)
-- Dependencies: 7800 369 371
-- Name: fk_blog_rating$blog_article; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY blog_rating
    ADD CONSTRAINT "fk_blog_rating$blog_article" FOREIGN KEY (blog_article) REFERENCES blog_article(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10359 (class 2606 OID 51477)
-- Dependencies: 7577 214 371
-- Name: fk_blog_rating$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY blog_rating
    ADD CONSTRAINT "fk_blog_rating$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10361 (class 2606 OID 51482)
-- Dependencies: 7551 213 372
-- Name: fk_building$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10362 (class 2606 OID 51487)
-- Dependencies: 7824 373 372
-- Name: fk_building$building_communica; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_communica" FOREIGN KEY (communication_type) REFERENCES building_communication_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10363 (class 2606 OID 51492)
-- Dependencies: 7826 374 372
-- Name: fk_building$building_floor_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_floor_typ" FOREIGN KEY (floor_type) REFERENCES building_floor_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10364 (class 2606 OID 51497)
-- Dependencies: 7828 375 372
-- Name: fk_building$building_heating_t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_heating_t" FOREIGN KEY (heating_type) REFERENCES building_heating_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10365 (class 2606 OID 51502)
-- Dependencies: 7846 377 372
-- Name: fk_building$building_hot_water; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_hot_water" FOREIGN KEY (hot_water_type) REFERENCES building_hot_water_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10366 (class 2606 OID 51507)
-- Dependencies: 7848 378 372
-- Name: fk_building$building_ownership; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_ownership" FOREIGN KEY (equipment_ownership) REFERENCES building_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10367 (class 2606 OID 51512)
-- Dependencies: 7850 379 372
-- Name: fk_building$building_power_sup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_power_sup" FOREIGN KEY (power_supply) REFERENCES building_power_supply_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10368 (class 2606 OID 51517)
-- Dependencies: 7855 381 372
-- Name: fk_building$building_project_t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_project_t" FOREIGN KEY (project_type) REFERENCES building_project_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10369 (class 2606 OID 51522)
-- Dependencies: 7857 382 372
-- Name: fk_building$building_purpose; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_purpose" FOREIGN KEY (building_purpose) REFERENCES building_purpose(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10370 (class 2606 OID 51527)
-- Dependencies: 7859 383 372
-- Name: fk_building$building_sewerage_; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_sewerage_" FOREIGN KEY (sewerage_type) REFERENCES building_sewerage_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10371 (class 2606 OID 51532)
-- Dependencies: 7867 386 372
-- Name: fk_building$building_supportin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_supportin" FOREIGN KEY (supporting_structure) REFERENCES building_supporting_structure(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10372 (class 2606 OID 51537)
-- Dependencies: 7869 387 372
-- Name: fk_building$building_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$building_type" FOREIGN KEY (building_type) REFERENCES building_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10373 (class 2606 OID 51542)
-- Dependencies: 9000 785 372
-- Name: fk_building$plot; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building
    ADD CONSTRAINT "fk_building$plot" FOREIGN KEY (plot) REFERENCES plot(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10374 (class 2606 OID 51547)
-- Dependencies: 7551 213 376
-- Name: fk_building_history$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10375 (class 2606 OID 51552)
-- Dependencies: 7824 373 376
-- Name: fk_building_history$building_communica; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_communica" FOREIGN KEY (communication_type) REFERENCES building_communication_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10376 (class 2606 OID 51557)
-- Dependencies: 7826 374 376
-- Name: fk_building_history$building_floor_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_floor_typ" FOREIGN KEY (floor_type) REFERENCES building_floor_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10377 (class 2606 OID 51562)
-- Dependencies: 7828 375 376
-- Name: fk_building_history$building_heating_t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_heating_t" FOREIGN KEY (heating_type) REFERENCES building_heating_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10378 (class 2606 OID 51567)
-- Dependencies: 7846 377 376
-- Name: fk_building_history$building_hot_water; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_hot_water" FOREIGN KEY (hot_water_type) REFERENCES building_hot_water_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10379 (class 2606 OID 51572)
-- Dependencies: 7848 378 376
-- Name: fk_building_history$building_ownership; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_ownership" FOREIGN KEY (equipment_ownership) REFERENCES building_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10380 (class 2606 OID 51577)
-- Dependencies: 7850 379 376
-- Name: fk_building_history$building_power_sup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_power_sup" FOREIGN KEY (power_supply) REFERENCES building_power_supply_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10381 (class 2606 OID 51582)
-- Dependencies: 7855 381 376
-- Name: fk_building_history$building_project_t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_project_t" FOREIGN KEY (project_type) REFERENCES building_project_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10382 (class 2606 OID 51587)
-- Dependencies: 7857 382 376
-- Name: fk_building_history$building_purpose; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_purpose" FOREIGN KEY (building_purpose) REFERENCES building_purpose(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10383 (class 2606 OID 51592)
-- Dependencies: 7859 383 376
-- Name: fk_building_history$building_sewerage_; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_sewerage_" FOREIGN KEY (sewerage_type) REFERENCES building_sewerage_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10384 (class 2606 OID 51597)
-- Dependencies: 7867 386 376
-- Name: fk_building_history$building_supportin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_supportin" FOREIGN KEY (supporting_structure) REFERENCES building_supporting_structure(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10385 (class 2606 OID 51602)
-- Dependencies: 7869 387 376
-- Name: fk_building_history$building_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_history
    ADD CONSTRAINT "fk_building_history$building_type" FOREIGN KEY (building_type) REFERENCES building_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10386 (class 2606 OID 51607)
-- Dependencies: 7822 372 380
-- Name: fk_building_price$building; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_price
    ADD CONSTRAINT "fk_building_price$building" FOREIGN KEY (building) REFERENCES building(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10387 (class 2606 OID 51612)
-- Dependencies: 7822 372 384
-- Name: fk_building_state$building; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_state
    ADD CONSTRAINT "fk_building_state$building" FOREIGN KEY (building) REFERENCES building(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10388 (class 2606 OID 51617)
-- Dependencies: 7865 385 384
-- Name: fk_building_state$building_state_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY building_state
    ADD CONSTRAINT "fk_building_state$building_state_typ" FOREIGN KEY (current_state) REFERENCES building_state_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10390 (class 2606 OID 51622)
-- Dependencies: 7822 372 388
-- Name: fk_cabinet$building; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cabinet
    ADD CONSTRAINT "fk_cabinet$building" FOREIGN KEY (building) REFERENCES building(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10389 (class 2606 OID 51627)
-- Dependencies: 8147 485 388
-- Name: fk_cabinet$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cabinet
    ADD CONSTRAINT "fk_cabinet$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10391 (class 2606 OID 51632)
-- Dependencies: 8663 666 390
-- Name: fk_cardemployee$medicalcare; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$medicalcare" FOREIGN KEY (care) REFERENCES medicalcare(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10392 (class 2606 OID 51637)
-- Dependencies: 8665 667 390
-- Name: fk_cardemployee$medicalcondition; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$medicalcondition" FOREIGN KEY (conditions) REFERENCES medicalcondition(oid) MATCH FULL ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10393 (class 2606 OID 51642)
-- Dependencies: 8147 485 390
-- Name: fk_cardemployee$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10394 (class 2606 OID 51647)
-- Dependencies: 7577 214 390
-- Name: fk_cardemployee$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10395 (class 2606 OID 51652)
-- Dependencies: 9042 797 390
-- Name: fk_cardemployee$position; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$position" FOREIGN KEY ("position") REFERENCES "position"(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10396 (class 2606 OID 51657)
-- Dependencies: 9044 798 390
-- Name: fk_cardemployee$positiontype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$positiontype" FOREIGN KEY (positiontype) REFERENCES positiontype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10397 (class 2606 OID 51662)
-- Dependencies: 8150 486 390
-- Name: fk_cardemployee$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$post" FOREIGN KEY (post) REFERENCES post(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10398 (class 2606 OID 51667)
-- Dependencies: 9283 867 390
-- Name: fk_cardemployee$recordtypein; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$recordtypein" FOREIGN KEY (typein) REFERENCES recordtypein(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10399 (class 2606 OID 51672)
-- Dependencies: 9285 868 390
-- Name: fk_cardemployee$recordtypeout; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$recordtypeout" FOREIGN KEY (typeout) REFERENCES recordtypeout(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10400 (class 2606 OID 51677)
-- Dependencies: 9293 872 390
-- Name: fk_cardemployee$regime; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY cardemployee
    ADD CONSTRAINT "fk_cardemployee$regime" FOREIGN KEY (regime) REFERENCES regime(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10401 (class 2606 OID 51682)
-- Dependencies: 7551 213 393
-- Name: fk_changelpu$address_live; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$address_live" FOREIGN KEY (address_live) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10402 (class 2606 OID 51687)
-- Dependencies: 7551 213 393
-- Name: fk_changelpu$address_polis; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$address_polis" FOREIGN KEY (address_polis) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10403 (class 2606 OID 51692)
-- Dependencies: 8131 479 393
-- Name: fk_changelpu$districtfrom; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$districtfrom" FOREIGN KEY (districtfrom) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10404 (class 2606 OID 51697)
-- Dependencies: 8131 479 393
-- Name: fk_changelpu$districtto; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$districtto" FOREIGN KEY (districtto) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10405 (class 2606 OID 51702)
-- Dependencies: 8566 631 393
-- Name: fk_changelpu$lpu1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$lpu1" FOREIGN KEY (lpufrom) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10406 (class 2606 OID 51707)
-- Dependencies: 8566 631 393
-- Name: fk_changelpu$lpu2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$lpu2" FOREIGN KEY (lputo) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10407 (class 2606 OID 51712)
-- Dependencies: 8649 660 393
-- Name: fk_changelpu$medhelptype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$medhelptype" FOREIGN KEY (medhelptype) REFERENCES medhelptype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10408 (class 2606 OID 51717)
-- Dependencies: 7577 214 393
-- Name: fk_changelpu$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT "fk_changelpu$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10409 (class 2606 OID 51722)
-- Dependencies: 9695 992 393
-- Name: fk_changelpu_processuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT fk_changelpu_processuser FOREIGN KEY (processuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10410 (class 2606 OID 51727)
-- Dependencies: 9695 992 393
-- Name: fk_changelpu_sysuserfrom; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT fk_changelpu_sysuserfrom FOREIGN KEY (sysuserfrom) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10411 (class 2606 OID 51732)
-- Dependencies: 9695 992 393
-- Name: fk_changelpu_sysuserto; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY changelpu
    ADD CONSTRAINT fk_changelpu_sysuserto FOREIGN KEY (sysuserto) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10412 (class 2606 OID 51737)
-- Dependencies: 8163 488 394
-- Name: fk_chatgroup$ownerid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY chatgroup
    ADD CONSTRAINT "fk_chatgroup$ownerid" FOREIGN KEY (ownerid) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10414 (class 2606 OID 51742)
-- Dependencies: 7905 394 395
-- Name: fk_chatgroupuser$chatgroupid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY chatgroupuser
    ADD CONSTRAINT "fk_chatgroupuser$chatgroupid" FOREIGN KEY (chatgroupid) REFERENCES chatgroup(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10413 (class 2606 OID 51747)
-- Dependencies: 8163 488 395
-- Name: fk_chatgroupuser$sotrid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY chatgroupuser
    ADD CONSTRAINT "fk_chatgroupuser$sotrid" FOREIGN KEY (sotrid) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10416 (class 2606 OID 51752)
-- Dependencies: 8163 488 396
-- Name: fk_chathistory$receiver; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY chathistory
    ADD CONSTRAINT "fk_chathistory$receiver" FOREIGN KEY (receiverid) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10415 (class 2606 OID 51757)
-- Dependencies: 8163 488 396
-- Name: fk_chathistory$sender; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY chathistory
    ADD CONSTRAINT "fk_chathistory$sender" FOREIGN KEY (senderid) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10417 (class 2606 OID 51762)
-- Dependencies: 7577 214 397
-- Name: fk_children_evolution$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY children_evolution_history
    ADD CONSTRAINT "fk_children_evolution$people" FOREIGN KEY (people_id) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10419 (class 2606 OID 51767)
-- Dependencies: 7968 418 402
-- Name: fk_clientscompany$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY clientscompany
    ADD CONSTRAINT "fk_clientscompany$company" FOREIGN KEY (oid) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10420 (class 2606 OID 51772)
-- Dependencies: 8625 652 403
-- Name: fk_clinicalmin$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY clinicalmin
    ADD CONSTRAINT "fk_clinicalmin$mdoc" FOREIGN KEY (oid_mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10421 (class 2606 OID 51777)
-- Dependencies: 7922 403 404
-- Name: fk_clinicalminservice$clinicalmin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY clinicalminservices
    ADD CONSTRAINT "fk_clinicalminservice$clinicalmin" FOREIGN KEY (oidclinical) REFERENCES clinicalmin(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10423 (class 2606 OID 51782)
-- Dependencies: 7959 416 415
-- Name: fk_comfort$comfort_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY comfort
    ADD CONSTRAINT "fk_comfort$comfort_type" FOREIGN KEY (comfort_type) REFERENCES comfort_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10422 (class 2606 OID 51787)
-- Dependencies: 8155 487 415
-- Name: fk_comfort$room; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY comfort
    ADD CONSTRAINT "fk_comfort$room" FOREIGN KEY (room) REFERENCES room(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10425 (class 2606 OID 51792)
-- Dependencies: 7968 418 417
-- Name: fk_comp_comptype$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY comp_comptype
    ADD CONSTRAINT "fk_comp_comptype$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10424 (class 2606 OID 51797)
-- Dependencies: 7977 421 417
-- Name: fk_comp_comptype$companytype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY comp_comptype
    ADD CONSTRAINT "fk_comp_comptype$companytype" FOREIGN KEY (companytype) REFERENCES companytype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10428 (class 2606 OID 51802)
-- Dependencies: 7538 176 418
-- Name: fk_company$vregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company
    ADD CONSTRAINT "fk_company$vregion" FOREIGN KEY (region) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10427 (class 2606 OID 51807)
-- Dependencies: 7551 213 418
-- Name: fk_company_address; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company
    ADD CONSTRAINT fk_company_address FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10430 (class 2606 OID 51812)
-- Dependencies: 7551 213 419
-- Name: fk_company_address$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company_address
    ADD CONSTRAINT "fk_company_address$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10429 (class 2606 OID 51817)
-- Dependencies: 7968 418 419
-- Name: fk_company_address$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company_address
    ADD CONSTRAINT "fk_company_address$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10426 (class 2606 OID 51822)
-- Dependencies: 7551 213 418
-- Name: fk_company_addressfact; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company
    ADD CONSTRAINT fk_company_addressfact FOREIGN KEY (addressfact) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10431 (class 2606 OID 51827)
-- Dependencies: 7551 213 420
-- Name: fk_company_history$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY company_history
    ADD CONSTRAINT "fk_company_history$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10433 (class 2606 OID 51832)
-- Dependencies: 7968 418 423
-- Name: fk_counterpart$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_contract
    ADD CONSTRAINT "fk_counterpart$company" FOREIGN KEY (company_id) REFERENCES company(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10432 (class 2606 OID 51837)
-- Dependencies: 8875 745 423
-- Name: fk_counterpart_contra$pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_contract
    ADD CONSTRAINT "fk_counterpart_contra$pay_type" FOREIGN KEY (pay_type) REFERENCES pay_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10436 (class 2606 OID 51842)
-- Dependencies: 7982 423 424
-- Name: fk_counterpart_forbid_diag$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_diag
    ADD CONSTRAINT "fk_counterpart_forbid_diag$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10435 (class 2606 OID 51847)
-- Dependencies: 8684 673 424
-- Name: fk_counterpart_forbid_diag$mkb10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_diag
    ADD CONSTRAINT "fk_counterpart_forbid_diag$mkb10" FOREIGN KEY (mkb10_id) REFERENCES mkb_10(oid) ON UPDATE CASCADE;


--
-- TOC entry 10434 (class 2606 OID 51852)
-- Dependencies: 9127 825 424
-- Name: fk_counterpart_forbid_diag$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_diag
    ADD CONSTRAINT "fk_counterpart_forbid_diag$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10439 (class 2606 OID 51857)
-- Dependencies: 7873 388 425
-- Name: fk_counterpart_forbid_kab$cabinet; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_kab
    ADD CONSTRAINT "fk_counterpart_forbid_kab$cabinet" FOREIGN KEY (cabinet_id) REFERENCES cabinet(oid) ON UPDATE CASCADE;


--
-- TOC entry 10438 (class 2606 OID 51862)
-- Dependencies: 7982 423 425
-- Name: fk_counterpart_forbid_kab$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_kab
    ADD CONSTRAINT "fk_counterpart_forbid_kab$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10437 (class 2606 OID 51867)
-- Dependencies: 9127 825 425
-- Name: fk_counterpart_forbid_kab$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_kab
    ADD CONSTRAINT "fk_counterpart_forbid_kab$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10441 (class 2606 OID 51872)
-- Dependencies: 7982 423 426
-- Name: fk_counterpart_forbid_prof$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_prof
    ADD CONSTRAINT "fk_counterpart_forbid_prof$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10440 (class 2606 OID 51877)
-- Dependencies: 9127 825 426
-- Name: fk_counterpart_forbid_prof$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_prof
    ADD CONSTRAINT "fk_counterpart_forbid_prof$presc" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10443 (class 2606 OID 51882)
-- Dependencies: 7982 423 427
-- Name: fk_counterpart_forbid_time$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_time
    ADD CONSTRAINT "fk_counterpart_forbid_time$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10442 (class 2606 OID 51887)
-- Dependencies: 9127 825 427
-- Name: fk_counterpart_forbid_time$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_time
    ADD CONSTRAINT "fk_counterpart_forbid_time$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10445 (class 2606 OID 51892)
-- Dependencies: 7982 423 428
-- Name: fk_counterpart_forbid_usl$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_usl
    ADD CONSTRAINT "fk_counterpart_forbid_usl$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10444 (class 2606 OID 51897)
-- Dependencies: 9127 825 428
-- Name: fk_counterpart_forbid_usl$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_forbid_usl
    ADD CONSTRAINT "fk_counterpart_forbid_usl$presc" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10447 (class 2606 OID 51902)
-- Dependencies: 7982 423 429
-- Name: fk_counterpart_garant$counterpart_contra; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_garanty_letter
    ADD CONSTRAINT "fk_counterpart_garant$counterpart_contra" FOREIGN KEY (contragent_docum_id) REFERENCES counterpart_contract(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10446 (class 2606 OID 51907)
-- Dependencies: 8163 488 429
-- Name: fk_counterpart_garanty_letter$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_garanty_letter
    ADD CONSTRAINT "fk_counterpart_garanty_letter$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10449 (class 2606 OID 51912)
-- Dependencies: 7982 423 430
-- Name: fk_counterpart_otdel$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_otdel
    ADD CONSTRAINT "fk_counterpart_otdel$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10448 (class 2606 OID 51917)
-- Dependencies: 8147 485 430
-- Name: fk_counterpart_otdel$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_otdel
    ADD CONSTRAINT "fk_counterpart_otdel$otdel" FOREIGN KEY (otdel_id) REFERENCES otdel(oid) ON UPDATE CASCADE;


--
-- TOC entry 10451 (class 2606 OID 51922)
-- Dependencies: 7982 423 431
-- Name: fk_counterpart_pepl$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_pepl
    ADD CONSTRAINT "fk_counterpart_pepl$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10450 (class 2606 OID 51927)
-- Dependencies: 7577 214 431
-- Name: fk_counterpart_pepl$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_pepl
    ADD CONSTRAINT "fk_counterpart_pepl$people" FOREIGN KEY (people_id) REFERENCES people(oid);


--
-- TOC entry 10453 (class 2606 OID 51932)
-- Dependencies: 7982 423 432
-- Name: fk_counterpart_program$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_program
    ADD CONSTRAINT "fk_counterpart_program$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE CASCADE;


--
-- TOC entry 10452 (class 2606 OID 51937)
-- Dependencies: 9127 825 432
-- Name: fk_counterpart_program$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY counterpart_program
    ADD CONSTRAINT "fk_counterpart_program$presc" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE;


--
-- TOC entry 10455 (class 2606 OID 51942)
-- Dependencies: 7551 213 435
-- Name: fk_court$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY court
    ADD CONSTRAINT "fk_court$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10454 (class 2606 OID 51947)
-- Dependencies: 9000 785 435
-- Name: fk_court$plot; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY court
    ADD CONSTRAINT "fk_court$plot" FOREIGN KEY (plot) REFERENCES plot(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10456 (class 2606 OID 51952)
-- Dependencies: 8021 439 441
-- Name: fk_demand_changes$demand; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY demand_changes
    ADD CONSTRAINT "fk_demand_changes$demand" FOREIGN KEY (demand) REFERENCES demand(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10457 (class 2606 OID 51957)
-- Dependencies: 8021 439 446
-- Name: fk_demand_schedule$demand; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY demand_schedule
    ADD CONSTRAINT "fk_demand_schedule$demand" FOREIGN KEY (demand) REFERENCES demand(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10458 (class 2606 OID 51962)
-- Dependencies: 8021 439 447
-- Name: fk_demand_standart$demand; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY demand_standart
    ADD CONSTRAINT "fk_demand_standart$demand" FOREIGN KEY (demand) REFERENCES demand(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10459 (class 2606 OID 51967)
-- Dependencies: 8363 548 449
-- Name: fk_descript_firms; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY descriptions
    ADD CONSTRAINT fk_descript_firms FOREIGN KEY (firmid) REFERENCES firms(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10461 (class 2606 OID 51972)
-- Dependencies: 8057 452 451
-- Name: fk_diag$diag_detect; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$diag_detect" FOREIGN KEY (detect_id) REFERENCES diag_detect(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10462 (class 2606 OID 51977)
-- Dependencies: 8059 453 451
-- Name: fk_diag$diag_kind; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$diag_kind" FOREIGN KEY (kind_id) REFERENCES diag_kind(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10463 (class 2606 OID 51982)
-- Dependencies: 8067 455 451
-- Name: fk_diag$diag_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$diag_type" FOREIGN KEY (type_id) REFERENCES diag_type(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10464 (class 2606 OID 51987)
-- Dependencies: 8119 474 451
-- Name: fk_diag$disp_stage; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$disp_stage" FOREIGN KEY (disp_stage_id) REFERENCES disp_stage(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10465 (class 2606 OID 51992)
-- Dependencies: 8121 475 451
-- Name: fk_diag$disp_step; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$disp_step" FOREIGN KEY (disp_step_id) REFERENCES disp_step(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10466 (class 2606 OID 51997)
-- Dependencies: 8125 477 451
-- Name: fk_diag$dispgroup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$dispgroup" FOREIGN KEY (dispgroup_id) REFERENCES dispgroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10467 (class 2606 OID 52002)
-- Dependencies: 8625 652 451
-- Name: fk_diag$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10468 (class 2606 OID 52007)
-- Dependencies: 8684 673 451
-- Name: fk_diag$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10469 (class 2606 OID 52012)
-- Dependencies: 9081 811 451
-- Name: fk_diag$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10470 (class 2606 OID 52017)
-- Dependencies: 9564 948 451
-- Name: fk_diag$smid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$smid" FOREIGN KEY (doctor_action) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10471 (class 2606 OID 52022)
-- Dependencies: 8163 488 451
-- Name: fk_diag$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10472 (class 2606 OID 52027)
-- Dependencies: 10004 1088 451
-- Name: fk_diag$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag
    ADD CONSTRAINT "fk_diag$visit" FOREIGN KEY (visit_id) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10475 (class 2606 OID 52032)
-- Dependencies: 8055 451 454
-- Name: fk_diag_presc_model$diag; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag_presc_model
    ADD CONSTRAINT "fk_diag_presc_model$diag" FOREIGN KEY (diag) REFERENCES diag(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10474 (class 2606 OID 52037)
-- Dependencies: 9081 811 454
-- Name: fk_diag_presc_model$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag_presc_model
    ADD CONSTRAINT "fk_diag_presc_model$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10473 (class 2606 OID 52042)
-- Dependencies: 286 454
-- Name: fk_diag_presc_model$tmodel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diag_presc_model
    ADD CONSTRAINT "fk_diag_presc_model$tmodel" FOREIGN KEY (model) REFERENCES medserv.tmodel(fk_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10480 (class 2606 OID 52047)
-- Dependencies: 8077 460 459
-- Name: fk_diary$diary_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diary
    ADD CONSTRAINT "fk_diary$diary_type" FOREIGN KEY (diary_type) REFERENCES diary_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10479 (class 2606 OID 52052)
-- Dependencies: 8625 652 459
-- Name: fk_diary$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diary
    ADD CONSTRAINT "fk_diary$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10478 (class 2606 OID 52057)
-- Dependencies: 9127 825 459
-- Name: fk_diary$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diary
    ADD CONSTRAINT "fk_diary$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10477 (class 2606 OID 52062)
-- Dependencies: 8163 488 459
-- Name: fk_diary$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diary
    ADD CONSTRAINT "fk_diary$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10482 (class 2606 OID 52067)
-- Dependencies: 7629 316 461
-- Name: fk_dictionary_field$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dictionary_field
    ADD CONSTRAINT "fk_dictionary_field$dictionary" FOREIGN KEY (dictionary) REFERENCES dictionary(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10481 (class 2606 OID 52072)
-- Dependencies: 8083 462 461
-- Name: fk_dictionary_field$dictionary_field_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dictionary_field
    ADD CONSTRAINT "fk_dictionary_field$dictionary_field_type" FOREIGN KEY (fieldtype) REFERENCES dictionary_field_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10483 (class 2606 OID 52077)
-- Dependencies: 7629 316 463
-- Name: fk_dictionary_nsi$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dictionary_nsi
    ADD CONSTRAINT "fk_dictionary_nsi$dictionary" FOREIGN KEY (dictionary) REFERENCES dictionary(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10485 (class 2606 OID 52082)
-- Dependencies: 7629 316 464
-- Name: fk_dictionary_right$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dictionary_right
    ADD CONSTRAINT "fk_dictionary_right$dictionary" FOREIGN KEY (dictionary) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10484 (class 2606 OID 52087)
-- Dependencies: 9355 890 464
-- Name: fk_dictionary_right$right; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dictionary_right
    ADD CONSTRAINT "fk_dictionary_right$right" FOREIGN KEY ("right") REFERENCES "right"(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10489 (class 2606 OID 52092)
-- Dependencies: 8190 500 465
-- Name: fk_diplomaeducation$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diplomaeducation
    ADD CONSTRAINT "fk_diplomaeducation$educationinstituti" FOREIGN KEY (educationinstitution) REFERENCES educationinstitution(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10488 (class 2606 OID 52097)
-- Dependencies: 8192 501 465
-- Name: fk_diplomaeducation$educationtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diplomaeducation
    ADD CONSTRAINT "fk_diplomaeducation$educationtype" FOREIGN KEY (educationtype) REFERENCES educationtype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10487 (class 2606 OID 52102)
-- Dependencies: 7577 214 465
-- Name: fk_diplomaeducation$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diplomaeducation
    ADD CONSTRAINT "fk_diplomaeducation$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10486 (class 2606 OID 52107)
-- Dependencies: 8923 758 465
-- Name: fk_diplomaeducation$specialities; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY diplomaeducation
    ADD CONSTRAINT "fk_diplomaeducation$specialities" FOREIGN KEY (specialities) REFERENCES specialities(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10491 (class 2606 OID 52112)
-- Dependencies: 8055 451 470
-- Name: fk_disp_card_diag$diag; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_diag
    ADD CONSTRAINT "fk_disp_card_diag$diag" FOREIGN KEY (diag_id) REFERENCES diag(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10490 (class 2606 OID 52117)
-- Dependencies: 8113 471 470
-- Name: fk_disp_card_diag$disp_card_info; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_diag
    ADD CONSTRAINT "fk_disp_card_diag$disp_card_info" FOREIGN KEY (disp_card) REFERENCES disp_card_info(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10492 (class 2606 OID 52122)
-- Dependencies: 8055 451 471
-- Name: fk_disp_card_info$diag; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT "fk_disp_card_info$diag" FOREIGN KEY (diag_main) REFERENCES diag(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10493 (class 2606 OID 52127)
-- Dependencies: 8115 472 471
-- Name: fk_disp_card_info$disp_close_cause; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT "fk_disp_card_info$disp_close_cause" FOREIGN KEY (cause_close) REFERENCES disp_close_cause(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10494 (class 2606 OID 52132)
-- Dependencies: 8125 477 471
-- Name: fk_disp_card_info$disp_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT "fk_disp_card_info$disp_group" FOREIGN KEY (disp_group) REFERENCES dispgroup(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10495 (class 2606 OID 52137)
-- Dependencies: 8625 652 471
-- Name: fk_disp_card_info$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT "fk_disp_card_info$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10496 (class 2606 OID 52142)
-- Dependencies: 8163 488 471
-- Name: fk_disp_card_info$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY disp_card_info
    ADD CONSTRAINT "fk_disp_card_info$sotr" FOREIGN KEY (disp_sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10499 (class 2606 OID 52147)
-- Dependencies: 7629 316 479
-- Name: fk_district$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY district
    ADD CONSTRAINT "fk_district$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10498 (class 2606 OID 52152)
-- Dependencies: 8649 660 479
-- Name: fk_district$medhelptype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY district
    ADD CONSTRAINT "fk_district$medhelptype" FOREIGN KEY (helptype) REFERENCES medhelptype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10497 (class 2606 OID 52157)
-- Dependencies: 8147 485 479
-- Name: fk_district$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY district
    ADD CONSTRAINT "fk_district$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10501 (class 2606 OID 52162)
-- Dependencies: 8131 479 481
-- Name: fk_districtstreet$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY districtstreet
    ADD CONSTRAINT "fk_districtstreet$district" FOREIGN KEY (district) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10500 (class 2606 OID 52167)
-- Dependencies: 7538 176 481
-- Name: fk_districtstreet$tkladrspr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY districtstreet
    ADD CONSTRAINT "fk_districtstreet$tkladrspr" FOREIGN KEY (tkladr) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10503 (class 2606 OID 52172)
-- Dependencies: 8566 631 484
-- Name: fk_docobsl$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY docobsl
    ADD CONSTRAINT "fk_docobsl$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10502 (class 2606 OID 52177)
-- Dependencies: 8647 659 484
-- Name: fk_docobsl$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY docobsl
    ADD CONSTRAINT "fk_docobsl$mdoc_type" FOREIGN KEY (mdoc_type_id) REFERENCES mdoc_type(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10517 (class 2606 OID 52182)
-- Dependencies: 8625 652 490
-- Name: fk_dop_disp_card_info$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY dop_disp_card_info
    ADD CONSTRAINT "fk_dop_disp_card_info$mdoc" FOREIGN KEY (oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10519 (class 2606 OID 52187)
-- Dependencies: 7968 418 496
-- Name: fk_drugstore$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY drugstore
    ADD CONSTRAINT "fk_drugstore$company" FOREIGN KEY (oid) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10518 (class 2606 OID 52192)
-- Dependencies: 1182 496
-- Name: fk_drugstore$mo_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY drugstore
    ADD CONSTRAINT "fk_drugstore$mo_group" FOREIGN KEY (mo_group_oid) REFERENCES phar.mo_group(oid) ON UPDATE CASCADE;


--
-- TOC entry 10521 (class 2606 OID 52197)
-- Dependencies: 7629 316 498
-- Name: fk_edizm$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY edizm
    ADD CONSTRAINT "fk_edizm$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10520 (class 2606 OID 52202)
-- Dependencies: 8188 499 498
-- Name: fk_edizm$edizmtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY edizm
    ADD CONSTRAINT "fk_edizm$edizmtype" FOREIGN KEY (edizmtype) REFERENCES edizmtype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10522 (class 2606 OID 52207)
-- Dependencies: 7629 316 499
-- Name: fk_edizmtype$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY edizmtype
    ADD CONSTRAINT "fk_edizmtype$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10523 (class 2606 OID 52212)
-- Dependencies: 8190 500 500
-- Name: fk_educationinstituti$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY educationinstitution
    ADD CONSTRAINT "fk_educationinstituti$educationinstituti" FOREIGN KEY (parent) REFERENCES educationinstitution(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10525 (class 2606 OID 52217)
-- Dependencies: 8250 519 504
-- Name: fk_eown$etable; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY eown
    ADD CONSTRAINT "fk_eown$etable" FOREIGN KEY (etable_id) REFERENCES etable(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10524 (class 2606 OID 52222)
-- Dependencies: 8254 520 504
-- Name: fk_eown$etheir; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY eown
    ADD CONSTRAINT "fk_eown$etheir" FOREIGN KEY (etheir_id) REFERENCES etheir(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10526 (class 2606 OID 52227)
-- Dependencies: 8210 507 505
-- Name: fk_epicris$epicris_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT "fk_epicris$epicris_type" FOREIGN KEY (type) REFERENCES epicris_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10527 (class 2606 OID 52232)
-- Dependencies: 8625 652 505
-- Name: fk_epicris$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT "fk_epicris$mdoc" FOREIGN KEY (mdoc_oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10528 (class 2606 OID 52237)
-- Dependencies: 9127 825 505
-- Name: fk_epicris$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT "fk_epicris$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10529 (class 2606 OID 52242)
-- Dependencies: 10004 1088 505
-- Name: fk_epicris$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris
    ADD CONSTRAINT "fk_epicris$visit" FOREIGN KEY (visit) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10531 (class 2606 OID 52247)
-- Dependencies: 8200 505 506
-- Name: fk_epicris_portal_lin$epicris; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris_portal_link
    ADD CONSTRAINT "fk_epicris_portal_lin$epicris" FOREIGN KEY (epicris) REFERENCES epicris(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10530 (class 2606 OID 52252)
-- Dependencies: 9031 794 506
-- Name: fk_epicris_portal_lin$portal_mdoc_extrac; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY epicris_portal_link
    ADD CONSTRAINT "fk_epicris_portal_lin$portal_mdoc_extrac" FOREIGN KEY (portal_extract) REFERENCES portal_mdoc_extract(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10532 (class 2606 OID 52257)
-- Dependencies: 7968 418 508
-- Name: fk_equipment$company_mak; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$company_mak" FOREIGN KEY (company_maker) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10533 (class 2606 OID 52262)
-- Dependencies: 7968 418 508
-- Name: fk_equipment$company_sup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$company_sup" FOREIGN KEY (company_supplier) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10534 (class 2606 OID 52267)
-- Dependencies: 8220 509 508
-- Name: fk_equipment$equipment_delivery; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$equipment_delivery" FOREIGN KEY (delivery) REFERENCES equipment_delivery(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10535 (class 2606 OID 52272)
-- Dependencies: 8226 511 508
-- Name: fk_equipment$equipment_model; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$equipment_model" FOREIGN KEY (equipment_model) REFERENCES equipment_model(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10536 (class 2606 OID 52277)
-- Dependencies: 8234 514 508
-- Name: fk_equipment$equipment_ownershi; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$equipment_ownershi" FOREIGN KEY (equipment_ownership) REFERENCES equipment_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10537 (class 2606 OID 52282)
-- Dependencies: 8242 517 508
-- Name: fk_equipment$equipment_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$equipment_type" FOREIGN KEY (equipment_type) REFERENCES equipment_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10538 (class 2606 OID 52287)
-- Dependencies: 8147 485 508
-- Name: fk_equipment$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment
    ADD CONSTRAINT "fk_equipment$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10542 (class 2606 OID 52292)
-- Dependencies: 8220 509 510
-- Name: fk_equipment_history$equipment_delivery; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_history
    ADD CONSTRAINT "fk_equipment_history$equipment_delivery" FOREIGN KEY (delivery) REFERENCES equipment_delivery(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10541 (class 2606 OID 52297)
-- Dependencies: 8226 511 510
-- Name: fk_equipment_history$equipment_model; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_history
    ADD CONSTRAINT "fk_equipment_history$equipment_model" FOREIGN KEY (equipment_model) REFERENCES equipment_model(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10540 (class 2606 OID 52302)
-- Dependencies: 8234 514 510
-- Name: fk_equipment_history$equipment_ownershi; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_history
    ADD CONSTRAINT "fk_equipment_history$equipment_ownershi" FOREIGN KEY (equipment_ownership) REFERENCES equipment_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10539 (class 2606 OID 52307)
-- Dependencies: 8242 517 510
-- Name: fk_equipment_history$equipment_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_history
    ADD CONSTRAINT "fk_equipment_history$equipment_type" FOREIGN KEY (equipment_type) REFERENCES equipment_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10544 (class 2606 OID 52312)
-- Dependencies: 8218 508 512
-- Name: fk_equipment_oper$equipment; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_oper
    ADD CONSTRAINT "fk_equipment_oper$equipment" FOREIGN KEY (equipment) REFERENCES equipment(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10543 (class 2606 OID 52317)
-- Dependencies: 8232 513 512
-- Name: fk_equipment_oper$equipment_oper_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_oper
    ADD CONSTRAINT "fk_equipment_oper$equipment_oper_typ" FOREIGN KEY (equipment_oper) REFERENCES equipment_oper_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10545 (class 2606 OID 52322)
-- Dependencies: 8218 508 515
-- Name: fk_equipment_price$equipment; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_price
    ADD CONSTRAINT "fk_equipment_price$equipment" FOREIGN KEY (equipmen) REFERENCES equipment(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10546 (class 2606 OID 52327)
-- Dependencies: 8218 508 516
-- Name: fk_equipment_state$equipment; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY equipment_state
    ADD CONSTRAINT "fk_equipment_state$equipment" FOREIGN KEY (equipmen) REFERENCES equipment(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10548 (class 2606 OID 52332)
-- Dependencies: 7577 214 518
-- Name: fk_errorclientmessage$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY errorclientmessages
    ADD CONSTRAINT "fk_errorclientmessage$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10547 (class 2606 OID 52337)
-- Dependencies: 10050 1101 518
-- Name: fk_errorclientmessage$vregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY errorclientmessages
    ADD CONSTRAINT "fk_errorclientmessage$vregion" FOREIGN KEY (region) REFERENCES vregion(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10549 (class 2606 OID 52342)
-- Dependencies: 8183 497 519
-- Name: fk_etable$ecompany; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY etable
    ADD CONSTRAINT "fk_etable$ecompany" FOREIGN KEY (ecompany_id) REFERENCES ecompany(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10550 (class 2606 OID 52347)
-- Dependencies: 8250 519 520
-- Name: fk_etheir$etable; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY etheir
    ADD CONSTRAINT "fk_etheir$etable" FOREIGN KEY (etable_id) REFERENCES etable(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10554 (class 2606 OID 52352)
-- Dependencies: 7666 322 523
-- Name: fk_expert_raiting$ambticket; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting
    ADD CONSTRAINT "fk_expert_raiting$ambticket" FOREIGN KEY (ambticket_id) REFERENCES ambticket(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10553 (class 2606 OID 52357)
-- Dependencies: 9695 992 523
-- Name: fk_expert_raiting$expert; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting
    ADD CONSTRAINT "fk_expert_raiting$expert" FOREIGN KEY (expert) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10552 (class 2606 OID 52362)
-- Dependencies: 8625 652 523
-- Name: fk_expert_raiting$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting
    ADD CONSTRAINT "fk_expert_raiting$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10551 (class 2606 OID 52367)
-- Dependencies: 9695 992 523
-- Name: fk_expert_raiting$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting
    ADD CONSTRAINT "fk_expert_raiting$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10558 (class 2606 OID 52372)
-- Dependencies: 8271 523 525
-- Name: fk_expert_raiting_sec$expert_raiting; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting_sections
    ADD CONSTRAINT "fk_expert_raiting_sec$expert_raiting" FOREIGN KEY (expert_raiting_id) REFERENCES expert_raiting(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10556 (class 2606 OID 52377)
-- Dependencies: 8281 525 524
-- Name: fk_expert_raiting_sec$expert_raiting_sec; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting_section_part
    ADD CONSTRAINT "fk_expert_raiting_sec$expert_raiting_sec" FOREIGN KEY (expert_section_id) REFERENCES expert_raiting_sections(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10555 (class 2606 OID 52382)
-- Dependencies: 8289 527 524
-- Name: fk_expert_raiting_sec$expert_templations; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting_section_part
    ADD CONSTRAINT "fk_expert_raiting_sec$expert_templations" FOREIGN KEY (part_id) REFERENCES expert_templations_parts(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10557 (class 2606 OID 52387)
-- Dependencies: 8292 528 525
-- Name: fk_expert_raiting_sec$expert_templations; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_raiting_sections
    ADD CONSTRAINT "fk_expert_raiting_sec$expert_templations" FOREIGN KEY (section_id) REFERENCES expert_templations_sections(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10561 (class 2606 OID 52392)
-- Dependencies: 8264 522 527
-- Name: fk_expert_templations$expert_part_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_templations_parts
    ADD CONSTRAINT "fk_expert_templations$expert_part_type" FOREIGN KEY (expert_part_type) REFERENCES expert_part_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10560 (class 2606 OID 52397)
-- Dependencies: 8292 528 527
-- Name: fk_expert_templations$expert_templations; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY expert_templations_parts
    ADD CONSTRAINT "fk_expert_templations$expert_templations" FOREIGN KEY (expert_templations_sections) REFERENCES expert_templations_sections(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10563 (class 2606 OID 52402)
-- Dependencies: 7968 418 537
-- Name: fk_favorite_insurcomp$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_insurcompany
    ADD CONSTRAINT "fk_favorite_insurcomp$company" FOREIGN KEY (insurcompany) REFERENCES company(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10562 (class 2606 OID 52407)
-- Dependencies: 7577 214 537
-- Name: fk_favorite_insurcomp$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_insurcompany
    ADD CONSTRAINT "fk_favorite_insurcomp$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10565 (class 2606 OID 52412)
-- Dependencies: 8147 485 538
-- Name: fk_favorite_otdel$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_otdel
    ADD CONSTRAINT "fk_favorite_otdel$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10564 (class 2606 OID 52417)
-- Dependencies: 7577 214 538
-- Name: fk_favorite_otdel$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_otdel
    ADD CONSTRAINT "fk_favorite_otdel$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10567 (class 2606 OID 52422)
-- Dependencies: 7577 214 539
-- Name: fk_favorite_sotr$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_sotr
    ADD CONSTRAINT "fk_favorite_sotr$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10566 (class 2606 OID 52427)
-- Dependencies: 8163 488 539
-- Name: fk_favorite_sotr$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY favorite_sotr
    ADD CONSTRAINT "fk_favorite_sotr$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10569 (class 2606 OID 52432)
-- Dependencies: 7577 214 542
-- Name: fk_feedback$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY feedback
    ADD CONSTRAINT "fk_feedback$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10579 (class 2606 OID 52437)
-- Dependencies: 8004 433 548
-- Name: fk_firms_countrie; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY firms
    ADD CONSTRAINT fk_firms_countrie FOREIGN KEY (countid) REFERENCES countries(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10578 (class 2606 OID 52442)
-- Dependencies: 8361 547 548
-- Name: fk_firms_firmname; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY firms
    ADD CONSTRAINT fk_firms_firmname FOREIGN KEY (nameid) REFERENCES firmnames(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10582 (class 2606 OID 52447)
-- Dependencies: 8566 631 555
-- Name: fk_form_dynamic$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY form_dynamic
    ADD CONSTRAINT "fk_form_dynamic$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10581 (class 2606 OID 52452)
-- Dependencies: 8647 659 555
-- Name: fk_form_dynamic$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY form_dynamic
    ADD CONSTRAINT "fk_form_dynamic$mdoc_type" FOREIGN KEY (mdoc_type_id) REFERENCES mdoc_type(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10584 (class 2606 OID 52457)
-- Dependencies: 8374 555 556
-- Name: fk_form_smid$form_dynamic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY form_smid
    ADD CONSTRAINT "fk_form_smid$form_dynamic" FOREIGN KEY (form_id) REFERENCES form_dynamic(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10583 (class 2606 OID 52462)
-- Dependencies: 9564 948 556
-- Name: fk_form_smid$smid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY form_smid
    ADD CONSTRAINT "fk_form_smid$smid" FOREIGN KEY (smid_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10585 (class 2606 OID 52467)
-- Dependencies: 9395 904 558
-- Name: fk_functioning$sanatorium; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY functioning
    ADD CONSTRAINT "fk_functioning$sanatorium" FOREIGN KEY (sanatorium) REFERENCES sanatorium(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10586 (class 2606 OID 52472)
-- Dependencies: 8405 567 561
-- Name: fk_heal$healtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY heal
    ADD CONSTRAINT "fk_heal$healtype" FOREIGN KEY (healtype) REFERENCES healtype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10588 (class 2606 OID 52477)
-- Dependencies: 8390 561 563
-- Name: fk_heal_lpu$heal; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY heal_lpu
    ADD CONSTRAINT "fk_heal_lpu$heal" FOREIGN KEY (heal) REFERENCES heal(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10587 (class 2606 OID 52482)
-- Dependencies: 8566 631 563
-- Name: fk_heal_lpu$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY heal_lpu
    ADD CONSTRAINT "fk_heal_lpu$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10589 (class 2606 OID 52487)
-- Dependencies: 8396 563 564
-- Name: fk_heal_lpu_cost$heal_lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY heal_lpu_cost
    ADD CONSTRAINT "fk_heal_lpu_cost$heal_lpu" FOREIGN KEY (heal_lpu) REFERENCES heal_lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10592 (class 2606 OID 52492)
-- Dependencies: 8639 656 570
-- Name: fk_history_mdoc_locat_f$mdoc_location; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY history_mdoc_location
    ADD CONSTRAINT "fk_history_mdoc_locat_f$mdoc_location" FOREIGN KEY (from_loc) REFERENCES mdoc_location(oid);


--
-- TOC entry 10591 (class 2606 OID 52497)
-- Dependencies: 8639 656 570
-- Name: fk_history_mdoc_locat_to$mdoc_location; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY history_mdoc_location
    ADD CONSTRAINT "fk_history_mdoc_locat_to$mdoc_location" FOREIGN KEY (to_loc) REFERENCES mdoc_location(oid);


--
-- TOC entry 10596 (class 2606 OID 52502)
-- Dependencies: 8131 479 572
-- Name: fk_homevisit$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY homevisit
    ADD CONSTRAINT "fk_homevisit$district" FOREIGN KEY (district) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10595 (class 2606 OID 52507)
-- Dependencies: 8147 485 572
-- Name: fk_homevisit$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY homevisit
    ADD CONSTRAINT "fk_homevisit$lpu" FOREIGN KEY (lpu) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10594 (class 2606 OID 52512)
-- Dependencies: 7577 214 572
-- Name: fk_homevisit$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY homevisit
    ADD CONSTRAINT "fk_homevisit$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10593 (class 2606 OID 52517)
-- Dependencies: 8163 488 572
-- Name: fk_homevisit$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY homevisit
    ADD CONSTRAINT "fk_homevisit$sysuser" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10600 (class 2606 OID 52522)
-- Dependencies: 8429 577 577
-- Name: fk_icd10$icd10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY icd10
    ADD CONSTRAINT "fk_icd10$icd10" FOREIGN KEY (parent_id) REFERENCES icd10(id) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10602 (class 2606 OID 52527)
-- Dependencies: 8437 586 587
-- Name: fk_infection_icd10$infection; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infection_icd10
    ADD CONSTRAINT "fk_infection_icd10$infection" FOREIGN KEY (infection_id) REFERENCES infection(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10603 (class 2606 OID 52532)
-- Dependencies: 8446 589 588
-- Name: fk_information_system$information_system; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY information_system
    ADD CONSTRAINT "fk_information_system$information_system" FOREIGN KEY (system_type) REFERENCES information_system_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10604 (class 2606 OID 52537)
-- Dependencies: 7968 418 591
-- Name: fk_infovalue$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10605 (class 2606 OID 52542)
-- Dependencies: 8450 590 591
-- Name: fk_infovalue$infotype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$infotype" FOREIGN KEY (infotype) REFERENCES infotype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10606 (class 2606 OID 52547)
-- Dependencies: 8566 631 591
-- Name: fk_infovalue$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10607 (class 2606 OID 52552)
-- Dependencies: 8147 485 591
-- Name: fk_infovalue$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10608 (class 2606 OID 52557)
-- Dependencies: 7577 214 591
-- Name: fk_infovalue$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10609 (class 2606 OID 52562)
-- Dependencies: 8163 488 591
-- Name: fk_infovalue$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infovalue
    ADD CONSTRAINT "fk_infovalue$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10611 (class 2606 OID 52567)
-- Dependencies: 8465 593 592
-- Name: fk_infrastructure$infrastructure_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infrastructure
    ADD CONSTRAINT "fk_infrastructure$infrastructure_typ" FOREIGN KEY (infrastructure_type) REFERENCES infrastructure_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10610 (class 2606 OID 52572)
-- Dependencies: 9000 785 592
-- Name: fk_infrastructure$plot; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infrastructure
    ADD CONSTRAINT "fk_infrastructure$plot" FOREIGN KEY (plot) REFERENCES plot(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10613 (class 2606 OID 52577)
-- Dependencies: 7968 418 595
-- Name: fk_insur_rating$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insur_rating
    ADD CONSTRAINT "fk_insur_rating$company" FOREIGN KEY (insurcompany) REFERENCES company(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10612 (class 2606 OID 52582)
-- Dependencies: 7577 214 595
-- Name: fk_insur_rating$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insur_rating
    ADD CONSTRAINT "fk_insur_rating$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10615 (class 2606 OID 52587)
-- Dependencies: 7968 418 596
-- Name: fk_insur_review$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insur_review
    ADD CONSTRAINT "fk_insur_review$company" FOREIGN KEY (insurcompany) REFERENCES company(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10614 (class 2606 OID 52592)
-- Dependencies: 7577 214 596
-- Name: fk_insur_review$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insur_review
    ADD CONSTRAINT "fk_insur_review$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10279 (class 2606 OID 52597)
-- Dependencies: 7982 423 317
-- Name: fk_insurance$contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$contract" FOREIGN KEY (contract_id) REFERENCES counterpart_contract(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10280 (class 2606 OID 52602)
-- Dependencies: 8467 594 317
-- Name: fk_insurance$insur_oms_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$insur_oms_type" FOREIGN KEY (insur_oms_type) REFERENCES insur_oms_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10281 (class 2606 OID 52607)
-- Dependencies: 8479 598 317
-- Name: fk_insurance$insurance_state; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$insurance_state" FOREIGN KEY (insurance_state) REFERENCES insurance_state(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10282 (class 2606 OID 52612)
-- Dependencies: 8481 599 317
-- Name: fk_insurance$insurcompany; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$insurcompany" FOREIGN KEY (company) REFERENCES insurcompany(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10283 (class 2606 OID 52617)
-- Dependencies: 8875 745 317
-- Name: fk_insurance$pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$pay_type" FOREIGN KEY (pay_type) REFERENCES pay_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10284 (class 2606 OID 52622)
-- Dependencies: 7577 214 317
-- Name: fk_insurance$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurance
    ADD CONSTRAINT "fk_insurance$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10616 (class 2606 OID 52627)
-- Dependencies: 7968 418 599
-- Name: fk_insurcompany$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY insurcompany
    ADD CONSTRAINT "fk_insurcompany$company" FOREIGN KEY (oid) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10619 (class 2606 OID 52632)
-- Dependencies: 7577 214 601
-- Name: fk_intolerance$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY intolerance
    ADD CONSTRAINT "fk_intolerance$people" FOREIGN KEY (people_id) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10618 (class 2606 OID 52637)
-- Dependencies: 8163 488 601
-- Name: fk_intolerance$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY intolerance
    ADD CONSTRAINT "fk_intolerance$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10617 (class 2606 OID 52642)
-- Dependencies: 9779 1022 601
-- Name: fk_intolerance$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY intolerance
    ADD CONSTRAINT "fk_intolerance$tradenames" FOREIGN KEY (tradenames_id) REFERENCES tradenames(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10620 (class 2606 OID 52647)
-- Dependencies: 8497 603 602
-- Name: fk_invalid$invalidgroup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY invalid
    ADD CONSTRAINT "fk_invalid$invalidgroup" FOREIGN KEY (invalidgroup) REFERENCES invalidgroup(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10621 (class 2606 OID 52652)
-- Dependencies: 8499 604 602
-- Name: fk_invalid$invalidkind; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY invalid
    ADD CONSTRAINT "fk_invalid$invalidkind" FOREIGN KEY (invalidkind) REFERENCES invalidkind(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10622 (class 2606 OID 52657)
-- Dependencies: 8501 605 602
-- Name: fk_invalid$invalidtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY invalid
    ADD CONSTRAINT "fk_invalid$invalidtype" FOREIGN KEY (invalidtype) REFERENCES invalidtype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10623 (class 2606 OID 52662)
-- Dependencies: 7577 214 602
-- Name: fk_invalid$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY invalid
    ADD CONSTRAINT "fk_invalid$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10624 (class 2606 OID 52667)
-- Dependencies: 7629 316 606
-- Name: fk_kartaplace$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY kartaplace
    ADD CONSTRAINT "fk_kartaplace$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10625 (class 2606 OID 52672)
-- Dependencies: 9132 826 611
-- Name: fk_laboratory_norm$presctypeparam; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_norm
    ADD CONSTRAINT "fk_laboratory_norm$presctypeparam" FOREIGN KEY (presctypeparam) REFERENCES presctypeparam(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10626 (class 2606 OID 52677)
-- Dependencies: 8505 608 612
-- Name: fk_laboratory_param$lab_probe_color; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_param
    ADD CONSTRAINT "fk_laboratory_param$lab_probe_color" FOREIGN KEY (color_id) REFERENCES lab_probe_color(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10627 (class 2606 OID 52682)
-- Dependencies: 8507 609 612
-- Name: fk_laboratory_param$lab_run_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_param
    ADD CONSTRAINT "fk_laboratory_param$lab_run_type" FOREIGN KEY (run_type_id) REFERENCES lab_run_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10628 (class 2606 OID 52687)
-- Dependencies: 8509 610 612
-- Name: fk_laboratory_param$lab_work_place; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_param
    ADD CONSTRAINT "fk_laboratory_param$lab_work_place" FOREIGN KEY (work_place_id) REFERENCES lab_work_place(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10629 (class 2606 OID 52692)
-- Dependencies: 9127 825 612
-- Name: fk_laboratory_param$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_param
    ADD CONSTRAINT "fk_laboratory_param$presctype" FOREIGN KEY (oid) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10631 (class 2606 OID 52697)
-- Dependencies: 9318 880 614
-- Name: fk_lastonlinedatetime$registwindow; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lastonlinedatetime
    ADD CONSTRAINT "fk_lastonlinedatetime$registwindow" FOREIGN KEY (oid) REFERENCES registwindow(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10634 (class 2606 OID 52702)
-- Dependencies: 7968 418 618
-- Name: fk_licence$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence
    ADD CONSTRAINT "fk_licence$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10633 (class 2606 OID 52707)
-- Dependencies: 8539 619 618
-- Name: fk_licence$licence_activity_t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence
    ADD CONSTRAINT "fk_licence$licence_activity_t" FOREIGN KEY (licence_activity) REFERENCES licence_activity_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10632 (class 2606 OID 52712)
-- Dependencies: 8566 631 618
-- Name: fk_licence$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence
    ADD CONSTRAINT "fk_licence$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10636 (class 2606 OID 52717)
-- Dependencies: 8537 618 621
-- Name: fk_licence_oper$licence; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence_oper
    ADD CONSTRAINT "fk_licence_oper$licence" FOREIGN KEY (licence) REFERENCES licence(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10635 (class 2606 OID 52722)
-- Dependencies: 8549 622 621
-- Name: fk_licence_oper$licence_oper_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence_oper
    ADD CONSTRAINT "fk_licence_oper$licence_oper_type" FOREIGN KEY (licence_oper_type) REFERENCES licence_oper_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10638 (class 2606 OID 52727)
-- Dependencies: 8537 618 623
-- Name: fk_licence_service$licence; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence_service
    ADD CONSTRAINT "fk_licence_service$licence" FOREIGN KEY (licence) REFERENCES licence(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10637 (class 2606 OID 52732)
-- Dependencies: 9498 928 623
-- Name: fk_licence_service$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY licence_service
    ADD CONSTRAINT "fk_licence_service$services" FOREIGN KEY (services) REFERENCES services(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10963 (class 2606 OID 52737)
-- Dependencies: 9186 843 837
-- Name: fk_listnaz_resultcomment$result_comment; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list_resultcomment
    ADD CONSTRAINT "fk_listnaz_resultcomment$result_comment" FOREIGN KEY (profex_result_comment) REFERENCES profex_result_comment(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10639 (class 2606 OID 52742)
-- Dependencies: 7968 418 631
-- Name: fk_lpu$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$company" FOREIGN KEY (oid) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10640 (class 2606 OID 52747)
-- Dependencies: 8529 616 631
-- Name: fk_lpu$level_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$level_type" FOREIGN KEY (level_type) REFERENCES level_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10641 (class 2606 OID 52752)
-- Dependencies: 8592 640 631
-- Name: fk_lpu$lpu_organizational; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$lpu_organizational" FOREIGN KEY (organizational_form) REFERENCES lpu_organizational_form(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10642 (class 2606 OID 52757)
-- Dependencies: 8594 641 631
-- Name: fk_lpu$lpu_ownership; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$lpu_ownership" FOREIGN KEY (ownership) REFERENCES lpu_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10643 (class 2606 OID 52762)
-- Dependencies: 8596 642 631
-- Name: fk_lpu$lpu_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$lpu_profile" FOREIGN KEY (lpu_profile) REFERENCES lpu_profile(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10644 (class 2606 OID 52767)
-- Dependencies: 8599 643 631
-- Name: fk_lpu$lpu_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$lpu_type" FOREIGN KEY (lpu_type) REFERENCES lpu_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10645 (class 2606 OID 52772)
-- Dependencies: 9675 984 631
-- Name: fk_lpu$subordination_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$subordination_type" FOREIGN KEY (subordination_type) REFERENCES subordination_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10646 (class 2606 OID 52777)
-- Dependencies: 9677 985 631
-- Name: fk_lpu$supreme_department; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu
    ADD CONSTRAINT "fk_lpu$supreme_department" FOREIGN KEY (supreme_department) REFERENCES supreme_department(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10648 (class 2606 OID 52782)
-- Dependencies: 8566 631 634
-- Name: fk_lpu_direction$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_direction
    ADD CONSTRAINT "fk_lpu_direction$lpu" FOREIGN KEY (lpu_direction_id) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10647 (class 2606 OID 52787)
-- Dependencies: 8566 631 634
-- Name: fk_lpu_direction1$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_direction
    ADD CONSTRAINT "fk_lpu_direction1$lpu" FOREIGN KEY (lpu_id) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10649 (class 2606 OID 52792)
-- Dependencies: 8529 616 636
-- Name: fk_lpu_history$level_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$level_type" FOREIGN KEY (level_type) REFERENCES level_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10650 (class 2606 OID 52797)
-- Dependencies: 8592 640 636
-- Name: fk_lpu_history$lpu_organizational; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$lpu_organizational" FOREIGN KEY (organizational_form) REFERENCES lpu_organizational_form(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10651 (class 2606 OID 52802)
-- Dependencies: 8594 641 636
-- Name: fk_lpu_history$lpu_ownership; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$lpu_ownership" FOREIGN KEY (ownership) REFERENCES lpu_ownership(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10652 (class 2606 OID 52807)
-- Dependencies: 8596 642 636
-- Name: fk_lpu_history$lpu_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$lpu_profile" FOREIGN KEY (lpu_profile) REFERENCES lpu_profile(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10653 (class 2606 OID 52812)
-- Dependencies: 8599 643 636
-- Name: fk_lpu_history$lpu_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$lpu_type" FOREIGN KEY (lpu_type) REFERENCES lpu_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10654 (class 2606 OID 52817)
-- Dependencies: 9675 984 636
-- Name: fk_lpu_history$subordination_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$subordination_type" FOREIGN KEY (subordination_type) REFERENCES subordination_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10655 (class 2606 OID 52822)
-- Dependencies: 9677 985 636
-- Name: fk_lpu_history$supreme_department; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_history
    ADD CONSTRAINT "fk_lpu_history$supreme_department" FOREIGN KEY (supreme_department) REFERENCES supreme_department(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10657 (class 2606 OID 52827)
-- Dependencies: 8566 631 637
-- Name: fk_lpu_information$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_information_system
    ADD CONSTRAINT "fk_lpu_information$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10656 (class 2606 OID 52832)
-- Dependencies: 8444 588 637
-- Name: fk_lpu_information$system; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_information_system
    ADD CONSTRAINT "fk_lpu_information$system" FOREIGN KEY (information_system) REFERENCES information_system(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10659 (class 2606 OID 52837)
-- Dependencies: 8484 600 639
-- Name: fk_lpu_insurprogram$insurprogram; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_insurprogram
    ADD CONSTRAINT "fk_lpu_insurprogram$insurprogram" FOREIGN KEY (insurprogram) REFERENCES insurprogram(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10658 (class 2606 OID 52842)
-- Dependencies: 8566 631 639
-- Name: fk_lpu_insurprogram$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpu_insurprogram
    ADD CONSTRAINT "fk_lpu_insurprogram$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10663 (class 2606 OID 52847)
-- Dependencies: 8566 631 647
-- Name: fk_lpusettings$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpusettings
    ADD CONSTRAINT "fk_lpusettings$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10662 (class 2606 OID 52852)
-- Dependencies: 9691 991 647
-- Name: fk_lpusettings$settings; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpusettings
    ADD CONSTRAINT "fk_lpusettings$settings" FOREIGN KEY (settings) REFERENCES systemsettings(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10665 (class 2606 OID 52857)
-- Dependencies: 8141 484 652
-- Name: fk_mdoc$docobsl; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$docobsl" FOREIGN KEY (docobsl_id) REFERENCES docobsl(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10666 (class 2606 OID 52862)
-- Dependencies: 8566 631 652
-- Name: fk_mdoc$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10667 (class 2606 OID 52867)
-- Dependencies: 8647 659 652
-- Name: fk_mdoc$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$mdoc_type" FOREIGN KEY (mdoc_type_id) REFERENCES mdoc_type(id) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10668 (class 2606 OID 52872)
-- Dependencies: 8147 485 652
-- Name: fk_mdoc$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10669 (class 2606 OID 52877)
-- Dependencies: 8880 747 652
-- Name: fk_mdoc$pdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$pdoc" FOREIGN KEY (pdoc_id) REFERENCES pdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10670 (class 2606 OID 52882)
-- Dependencies: 7577 214 652
-- Name: fk_mdoc$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10671 (class 2606 OID 52887)
-- Dependencies: 9220 854 652
-- Name: fk_mdoc$reason_archive; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc
    ADD CONSTRAINT "fk_mdoc$reason_archive" FOREIGN KEY (reason_archive_id) REFERENCES reason_sending_archive(oid);


--
-- TOC entry 10673 (class 2606 OID 52892)
-- Dependencies: 8566 631 654
-- Name: fk_mdoc_group$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_group
    ADD CONSTRAINT "fk_mdoc_group$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10675 (class 2606 OID 52897)
-- Dependencies: 8647 659 655
-- Name: fk_mdoc_last_number$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_last_number
    ADD CONSTRAINT "fk_mdoc_last_number$mdoc_type" FOREIGN KEY (mdoc_type) REFERENCES mdoc_type(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10674 (class 2606 OID 52902)
-- Dependencies: 8147 485 655
-- Name: fk_mdoc_last_number$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_last_number
    ADD CONSTRAINT "fk_mdoc_last_number$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10680 (class 2606 OID 52907)
-- Dependencies: 8625 652 658
-- Name: fk_mdoc_number$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_number
    ADD CONSTRAINT "fk_mdoc_number$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10679 (class 2606 OID 52912)
-- Dependencies: 8647 659 658
-- Name: fk_mdoc_number$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_number
    ADD CONSTRAINT "fk_mdoc_number$mdoc_type" FOREIGN KEY (mdoc_type_id) REFERENCES mdoc_type(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10681 (class 2606 OID 52917)
-- Dependencies: 7629 316 660
-- Name: fk_medhelptype$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medhelptype
    ADD CONSTRAINT "fk_medhelptype$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10685 (class 2606 OID 52922)
-- Dependencies: 1168 662
-- Name: fk_medic_given$medicgiven; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medic_given
    ADD CONSTRAINT "fk_medic_given$medicgiven" FOREIGN KEY (medicgiven) REFERENCES phar.medic(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10684 (class 2606 OID 52927)
-- Dependencies: 1189 662
-- Name: fk_medic_given$position_doc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medic_given
    ADD CONSTRAINT "fk_medic_given$position_doc" FOREIGN KEY (position_doc) REFERENCES phar.position_doc(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10683 (class 2606 OID 52932)
-- Dependencies: 9241 857 662
-- Name: fk_medic_given$recipe; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medic_given
    ADD CONSTRAINT "fk_medic_given$recipe" FOREIGN KEY (recipe) REFERENCES recipe(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10682 (class 2606 OID 52937)
-- Dependencies: 8163 488 662
-- Name: fk_medic_given$sotrfrom; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medic_given
    ADD CONSTRAINT "fk_medic_given$sotrfrom" FOREIGN KEY (sotrfrom) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10686 (class 2606 OID 52942)
-- Dependencies: 8663 666 666
-- Name: fk_medicalcare$medicalcare; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medicalcare
    ADD CONSTRAINT "fk_medicalcare$medicalcare" FOREIGN KEY (parent) REFERENCES medicalcare(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10687 (class 2606 OID 52947)
-- Dependencies: 7629 316 668
-- Name: fk_medictype$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medictype
    ADD CONSTRAINT "fk_medictype$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10689 (class 2606 OID 52952)
-- Dependencies: 8531 617 669
-- Name: fk_medremain$lgota; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medremain
    ADD CONSTRAINT "fk_medremain$lgota" FOREIGN KEY (lgota) REFERENCES lgota(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10688 (class 2606 OID 52957)
-- Dependencies: 8667 668 669
-- Name: fk_medremain$medictype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medremain
    ADD CONSTRAINT "fk_medremain$medictype" FOREIGN KEY (medictype) REFERENCES medictype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10690 (class 2606 OID 52962)
-- Dependencies: 9373 895 670
-- Name: fk_medtyperls$rlsregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY medtyperls
    ADD CONSTRAINT "fk_medtyperls$rlsregion" FOREIGN KEY (rlsregion) REFERENCES rlsregion(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10693 (class 2606 OID 52967)
-- Dependencies: 8684 673 673
-- Name: fk_mkb_10$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mkb_10
    ADD CONSTRAINT "fk_mkb_10$mkb_10" FOREIGN KEY (parent) REFERENCES mkb_10(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10695 (class 2606 OID 52972)
-- Dependencies: 8684 673 675
-- Name: fk_mkb_10_template_li$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mkb_10_template_list
    ADD CONSTRAINT "fk_mkb_10_template_li$mkb_10" FOREIGN KEY (mkb10) REFERENCES mkb_10(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10694 (class 2606 OID 52977)
-- Dependencies: 8686 674 675
-- Name: fk_mkb_10_template_li$mkb_10_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mkb_10_template_list
    ADD CONSTRAINT "fk_mkb_10_template_li$mkb_10_template" FOREIGN KEY (mkb10_template) REFERENCES mkb_10_template(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10696 (class 2606 OID 52982)
-- Dependencies: 7577 214 676
-- Name: fk_monitoring_imt$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_imt
    ADD CONSTRAINT "fk_monitoring_imt$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10698 (class 2606 OID 52987)
-- Dependencies: 7577 214 677
-- Name: fk_monitoring_phisica$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_phisical_activity
    ADD CONSTRAINT "fk_monitoring_phisica$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10697 (class 2606 OID 52992)
-- Dependencies: 8978 781 677
-- Name: fk_monitoring_phisica$phisical_activity; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_phisical_activity
    ADD CONSTRAINT "fk_monitoring_phisica$phisical_activity" FOREIGN KEY (phisical_activity) REFERENCES phisical_activity(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10699 (class 2606 OID 52997)
-- Dependencies: 7577 214 678
-- Name: fk_monitoring_press$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_press
    ADD CONSTRAINT "fk_monitoring_press$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10700 (class 2606 OID 53002)
-- Dependencies: 7577 214 679
-- Name: fk_monitoring_puls$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_puls
    ADD CONSTRAINT "fk_monitoring_puls$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10701 (class 2606 OID 53007)
-- Dependencies: 7577 214 680
-- Name: fk_monitoring_sugar$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_sugar
    ADD CONSTRAINT "fk_monitoring_sugar$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10702 (class 2606 OID 53012)
-- Dependencies: 7577 214 681
-- Name: fk_monitoring_tempera$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY monitoring_temperature
    ADD CONSTRAINT "fk_monitoring_tempera$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10703 (class 2606 OID 53017)
-- Dependencies: 9127 825 683
-- Name: fk_mparam$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mparam
    ADD CONSTRAINT "fk_mparam$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10707 (class 2606 OID 53022)
-- Dependencies: 8497 603 685
-- Name: fk_msec_main$invalidgroup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY msec_main
    ADD CONSTRAINT "fk_msec_main$invalidgroup" FOREIGN KEY (invalid_group_id) REFERENCES invalidgroup(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10706 (class 2606 OID 53027)
-- Dependencies: 8714 684 685
-- Name: fk_msec_main$msec_conclusin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY msec_main
    ADD CONSTRAINT "fk_msec_main$msec_conclusin" FOREIGN KEY (msec_conclusion_id) REFERENCES msec_conclusin(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10705 (class 2606 OID 53032)
-- Dependencies: 8724 686 685
-- Name: fk_msec_main$msec_target; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY msec_main
    ADD CONSTRAINT "fk_msec_main$msec_target" FOREIGN KEY (msec_target) REFERENCES msec_target(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10704 (class 2606 OID 53037)
-- Dependencies: 10035 1094 685
-- Name: fk_msec_main$vk_main; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY msec_main
    ADD CONSTRAINT "fk_msec_main$vk_main" FOREIGN KEY (vk_main_id) REFERENCES vk_main(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10708 (class 2606 OID 53042)
-- Dependencies: 7629 316 687
-- Name: fk_myphonetype$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY myphonetype
    ADD CONSTRAINT "fk_myphonetype$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10710 (class 2606 OID 53047)
-- Dependencies: 8740 692 691
-- Name: fk_natural_factor$natural_factor_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY natural_factor
    ADD CONSTRAINT "fk_natural_factor$natural_factor_typ" FOREIGN KEY (natural_factor_type) REFERENCES natural_factor_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10709 (class 2606 OID 53052)
-- Dependencies: 9395 904 691
-- Name: fk_natural_factor$sanatorium; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY natural_factor
    ADD CONSTRAINT "fk_natural_factor$sanatorium" FOREIGN KEY (sanatorium) REFERENCES sanatorium(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10711 (class 2606 OID 53057)
-- Dependencies: 7577 214 694
-- Name: fk_news$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY news
    ADD CONSTRAINT "fk_news$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10724 (class 2606 OID 53062)
-- Dependencies: 8039 449 696
-- Name: fk_nomen_de_descript; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen_desc
    ADD CONSTRAINT fk_nomen_de_descript FOREIGN KEY (descid) REFERENCES descriptions(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10726 (class 2606 OID 53067)
-- Dependencies: 8684 673 698
-- Name: fk_nosology_mkb10$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nosology_mkb10
    ADD CONSTRAINT "fk_nosology_mkb10$mkb_10" FOREIGN KEY (mkb10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10725 (class 2606 OID 53072)
-- Dependencies: 8750 697 698
-- Name: fk_nosology_mkb10$nosology; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nosology_mkb10
    ADD CONSTRAINT "fk_nosology_mkb10$nosology" FOREIGN KEY (nosology) REFERENCES nosology(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10728 (class 2606 OID 53077)
-- Dependencies: 7774 359 699
-- Name: fk_nosology_mkb10_ben$benefit_medic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nosology_mkb10_benefitmedic
    ADD CONSTRAINT "fk_nosology_mkb10_ben$benefit_medic" FOREIGN KEY (benefit_medic) REFERENCES benefit_medic(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10727 (class 2606 OID 53082)
-- Dependencies: 8754 698 699
-- Name: fk_nosology_mkb10_ben$nosology_mkb10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nosology_mkb10_benefitmedic
    ADD CONSTRAINT "fk_nosology_mkb10_ben$nosology_mkb10" FOREIGN KEY (nosology_mkb10) REFERENCES nosology_mkb10(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10732 (class 2606 OID 53087)
-- Dependencies: 8684 673 704
-- Name: fk_nursing_$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nursing_baby
    ADD CONSTRAINT "fk_nursing_$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10731 (class 2606 OID 53092)
-- Dependencies: 7577 214 704
-- Name: fk_nursing_$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nursing_baby
    ADD CONSTRAINT "fk_nursing_$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10730 (class 2606 OID 53097)
-- Dependencies: 8163 488 704
-- Name: fk_nursing_$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nursing_baby
    ADD CONSTRAINT "fk_nursing_$sotr" FOREIGN KEY (homemed_emp_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10729 (class 2606 OID 53102)
-- Dependencies: 8163 488 704
-- Name: fk_nursing_2$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nursing_baby
    ADD CONSTRAINT "fk_nursing_2$sotr" FOREIGN KEY (homedoctor_emp_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10733 (class 2606 OID 53107)
-- Dependencies: 8625 652 706
-- Name: fk_oncologylist$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oncologylist
    ADD CONSTRAINT "fk_oncologylist$mdoc" FOREIGN KEY (oid_mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10735 (class 2606 OID 53112)
-- Dependencies: 8770 706 707
-- Name: fk_oncologylistdetail$oncologylist; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oncologylistdetail
    ADD CONSTRAINT "fk_oncologylistdetail$oncologylist" FOREIGN KEY (oid_onkolist) REFERENCES oncologylist(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10734 (class 2606 OID 53117)
-- Dependencies: 8774 708 707
-- Name: fk_oncologylistdetail$oncologyparametr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oncologylistdetail
    ADD CONSTRAINT "fk_oncologylistdetail$oncologyparametr" FOREIGN KEY (oid_onkopar) REFERENCES oncologyparametr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10737 (class 2606 OID 53122)
-- Dependencies: 8566 631 710
-- Name: fk_oper_plan$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oper_plan
    ADD CONSTRAINT "fk_oper_plan$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid);


--
-- TOC entry 10736 (class 2606 OID 53127)
-- Dependencies: 8625 652 710
-- Name: fk_oper_plan$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oper_plan
    ADD CONSTRAINT "fk_oper_plan$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10739 (class 2606 OID 53132)
-- Dependencies: 8779 710 712
-- Name: fk_oper_plan_sotr$oper_plan; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oper_plan_sotr
    ADD CONSTRAINT "fk_oper_plan_sotr$oper_plan" FOREIGN KEY (oper_plan) REFERENCES oper_plan(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10738 (class 2606 OID 53137)
-- Dependencies: 8163 488 712
-- Name: fk_oper_plan_sotr$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY oper_plan_sotr
    ADD CONSTRAINT "fk_oper_plan_sotr$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10742 (class 2606 OID 53142)
-- Dependencies: 8625 652 713
-- Name: fk_operation$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY operation
    ADD CONSTRAINT "fk_operation$mdoc" FOREIGN KEY (mdoc_oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10741 (class 2606 OID 53147)
-- Dependencies: 8790 715 713
-- Name: fk_operation$operation_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY operation
    ADD CONSTRAINT "fk_operation$operation_type" FOREIGN KEY (type) REFERENCES operation_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10740 (class 2606 OID 53152)
-- Dependencies: 9127 825 713
-- Name: fk_operation$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY operation
    ADD CONSTRAINT "fk_operation$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10504 (class 2606 OID 53157)
-- Dependencies: 7551 213 485
-- Name: fk_otdel$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT "fk_otdel$addressex" FOREIGN KEY (addressex) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10505 (class 2606 OID 53162)
-- Dependencies: 8566 631 485
-- Name: fk_otdel$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT "fk_otdel$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10506 (class 2606 OID 53167)
-- Dependencies: 8147 485 485
-- Name: fk_otdel$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT "fk_otdel$otdel" FOREIGN KEY (parent) REFERENCES otdel(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10507 (class 2606 OID 53172)
-- Dependencies: 8812 722 485
-- Name: fk_otdel$otdel_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT "fk_otdel$otdel_profile" FOREIGN KEY (otdel_profile) REFERENCES otdel_profile(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10508 (class 2606 OID 53177)
-- Dependencies: 8831 728 485
-- Name: fk_otdel$otdel_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel
    ADD CONSTRAINT "fk_otdel$otdel_type" FOREIGN KEY (otdel_type) REFERENCES otdel_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10744 (class 2606 OID 53182)
-- Dependencies: 7822 372 717
-- Name: fk_otdel_building$building; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_building
    ADD CONSTRAINT "fk_otdel_building$building" FOREIGN KEY (building) REFERENCES building(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10743 (class 2606 OID 53187)
-- Dependencies: 8147 485 717
-- Name: fk_otdel_building$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_building
    ADD CONSTRAINT "fk_otdel_building$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10745 (class 2606 OID 53192)
-- Dependencies: 8147 485 718
-- Name: fk_otdel_ext$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_ext
    ADD CONSTRAINT "fk_otdel_ext$otdel" FOREIGN KEY (oid) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10747 (class 2606 OID 53197)
-- Dependencies: 8812 722 719
-- Name: fk_otdel_history$otdel_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_history
    ADD CONSTRAINT "fk_otdel_history$otdel_profile" FOREIGN KEY (otdel_profile) REFERENCES otdel_profile(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10746 (class 2606 OID 53202)
-- Dependencies: 8831 728 719
-- Name: fk_otdel_history$otdel_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_history
    ADD CONSTRAINT "fk_otdel_history$otdel_type" FOREIGN KEY (otdel_type) REFERENCES otdel_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10748 (class 2606 OID 53207)
-- Dependencies: 8147 485 720
-- Name: fk_otdel_mdoc_number$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_mdoc_number
    ADD CONSTRAINT "fk_otdel_mdoc_number$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10751 (class 2606 OID 53212)
-- Dependencies: 8632 654 721
-- Name: fk_otdel_mdoctype$mdoc_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_mdoctype
    ADD CONSTRAINT "fk_otdel_mdoctype$mdoc_group" FOREIGN KEY (mdoc_group) REFERENCES mdoc_group(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10750 (class 2606 OID 53217)
-- Dependencies: 8647 659 721
-- Name: fk_otdel_mdoctype$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_mdoctype
    ADD CONSTRAINT "fk_otdel_mdoctype$mdoc_type" FOREIGN KEY (mdoctype_id) REFERENCES mdoc_type(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10749 (class 2606 OID 53222)
-- Dependencies: 8147 485 721
-- Name: fk_otdel_mdoctype$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_mdoctype
    ADD CONSTRAINT "fk_otdel_mdoctype$otdel" FOREIGN KEY (otdel_id) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10752 (class 2606 OID 53227)
-- Dependencies: 8812 722 722
-- Name: fk_otdel_profile$otdel_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_profile
    ADD CONSTRAINT "fk_otdel_profile$otdel_profile" FOREIGN KEY (parent) REFERENCES otdel_profile(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10754 (class 2606 OID 53232)
-- Dependencies: 8147 485 724
-- Name: fk_otdel_profile_care$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_profile_care
    ADD CONSTRAINT "fk_otdel_profile_care$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10753 (class 2606 OID 53237)
-- Dependencies: 9190 845 724
-- Name: fk_otdel_profile_care$profile_care; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_profile_care
    ADD CONSTRAINT "fk_otdel_profile_care$profile_care" FOREIGN KEY (profile_care) REFERENCES profile_care(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10756 (class 2606 OID 53242)
-- Dependencies: 8147 485 725
-- Name: fk_otdel_rating$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_rating
    ADD CONSTRAINT "fk_otdel_rating$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10755 (class 2606 OID 53247)
-- Dependencies: 7577 214 725
-- Name: fk_otdel_rating$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_rating
    ADD CONSTRAINT "fk_otdel_rating$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10759 (class 2606 OID 53252)
-- Dependencies: 8147 485 727
-- Name: fk_otdel_review$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_review
    ADD CONSTRAINT "fk_otdel_review$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10758 (class 2606 OID 53257)
-- Dependencies: 7577 214 727
-- Name: fk_otdel_review$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_review
    ADD CONSTRAINT "fk_otdel_review$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10760 (class 2606 OID 53262)
-- Dependencies: 8831 728 728
-- Name: fk_otdel_type$otdel_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_type
    ADD CONSTRAINT "fk_otdel_type$otdel_type" FOREIGN KEY (parent) REFERENCES otdel_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10285 (class 2606 OID 53267)
-- Dependencies: 7577 214 318
-- Name: fk_pacient$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pacient
    ADD CONSTRAINT "fk_pacient$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10762 (class 2606 OID 53272)
-- Dependencies: 8835 730 731
-- Name: fk_paidagree_docs_fie$paidagree_docs; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY paidagree_docs_fields
    ADD CONSTRAINT "fk_paidagree_docs_fie$paidagree_docs" FOREIGN KEY (paid_agreement_docs) REFERENCES paidagree_docs(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10761 (class 2606 OID 53277)
-- Dependencies: 8839 732 731
-- Name: fk_paidagree_docs_fie$paidagree_fields; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY paidagree_docs_fields
    ADD CONSTRAINT "fk_paidagree_docs_fie$paidagree_fields" FOREIGN KEY (paid_agreement_fields) REFERENCES paidagree_fields(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10765 (class 2606 OID 53282)
-- Dependencies: 8566 631 737
-- Name: fk_passport_log$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY passport_log
    ADD CONSTRAINT "fk_passport_log$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE SET NULL ON DELETE SET NULL;


--
-- TOC entry 10764 (class 2606 OID 53287)
-- Dependencies: 8147 485 737
-- Name: fk_passport_log$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY passport_log
    ADD CONSTRAINT "fk_passport_log$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE SET NULL ON DELETE SET NULL;


--
-- TOC entry 10763 (class 2606 OID 53292)
-- Dependencies: 9695 992 737
-- Name: fk_passport_log$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY passport_log
    ADD CONSTRAINT "fk_passport_log$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE SET NULL ON DELETE SET NULL;


--
-- TOC entry 10767 (class 2606 OID 53297)
-- Dependencies: 8566 631 738
-- Name: fk_patientcarduniquefield_lpu$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY patientcard_uniquefield_lpu
    ADD CONSTRAINT "fk_patientcarduniquefield_lpu$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10766 (class 2606 OID 53302)
-- Dependencies: 8856 739 738
-- Name: fk_patientcarduniquefield_lpu$patientcardsetting; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY patientcard_uniquefield_lpu
    ADD CONSTRAINT "fk_patientcarduniquefield_lpu$patientcardsetting" FOREIGN KEY (patientcardsettings_uniquefield) REFERENCES patientcardsettings_uniquefield(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10768 (class 2606 OID 53307)
-- Dependencies: 8863 741 740
-- Name: fk_pay_agreement$pay_agreement_stat; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT "fk_pay_agreement$pay_agreement_stat" FOREIGN KEY (status) REFERENCES pay_agreement_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10777 (class 2606 OID 53312)
-- Dependencies: 8866 742 743
-- Name: fk_pay_appendix_naz_app; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_appendix_naz
    ADD CONSTRAINT fk_pay_appendix_naz_app FOREIGN KEY (appendix_id) REFERENCES pay_appendix(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10776 (class 2606 OID 53317)
-- Dependencies: 9081 811 743
-- Name: fk_pay_appendix_naz_presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_appendix_naz
    ADD CONSTRAINT fk_pay_appendix_naz_presc FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10778 (class 2606 OID 53322)
-- Dependencies: 8882 748 747
-- Name: fk_pdoc$pdoctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pdoc
    ADD CONSTRAINT "fk_pdoc$pdoctype" FOREIGN KEY (pdoctype_id) REFERENCES pdoctype(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10240 (class 2606 OID 53327)
-- Dependencies: 7551 213 214
-- Name: fk_people$addressex1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$addressex1" FOREIGN KEY (addressex1) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10241 (class 2606 OID 53332)
-- Dependencies: 7551 213 214
-- Name: fk_people$addressex2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$addressex2" FOREIGN KEY (addressex2) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10242 (class 2606 OID 53337)
-- Dependencies: 7785 364 214
-- Name: fk_people$benefittype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$benefittype" FOREIGN KEY (benefittype) REFERENCES benefittype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10243 (class 2606 OID 53342)
-- Dependencies: 7888 391 214
-- Name: fk_people$category; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$category" FOREIGN KEY (category) REFERENCES category(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10244 (class 2606 OID 53347)
-- Dependencies: 7968 418 214
-- Name: fk_people$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$company" FOREIGN KEY (company) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10245 (class 2606 OID 53352)
-- Dependencies: 8131 479 214
-- Name: fk_people$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$district" FOREIGN KEY (district) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10246 (class 2606 OID 53357)
-- Dependencies: 8566 631 214
-- Name: fk_people$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10247 (class 2606 OID 53362)
-- Dependencies: 7642 318 214
-- Name: fk_people$pacient; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$pacient" FOREIGN KEY (pacient) REFERENCES pacient(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10248 (class 2606 OID 53367)
-- Dependencies: 8951 768 214
-- Name: fk_people$peopledoctype_ben; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$peopledoctype_ben" FOREIGN KEY (benefitdoctype) REFERENCES peopledoctype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10249 (class 2606 OID 53372)
-- Dependencies: 8951 768 214
-- Name: fk_people$peopledoctype_pp; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$peopledoctype_pp" FOREIGN KEY (peopledoctype) REFERENCES peopledoctype(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10250 (class 2606 OID 53377)
-- Dependencies: 8962 773 214
-- Name: fk_people$peoplepost; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$peoplepost" FOREIGN KEY (peoplepost) REFERENCES peoplepost(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10251 (class 2606 OID 53382)
-- Dependencies: 9138 829 214
-- Name: fk_people$profession; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$profession" FOREIGN KEY (profession) REFERENCES profession(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10252 (class 2606 OID 53387)
-- Dependencies: 10050 1101 214
-- Name: fk_people$vregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people
    ADD CONSTRAINT "fk_people$vregion" FOREIGN KEY (region) REFERENCES vregion(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10254 (class 2606 OID 53392)
-- Dependencies: 7551 213 215
-- Name: fk_people_address$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_address
    ADD CONSTRAINT "fk_people_address$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10253 (class 2606 OID 53397)
-- Dependencies: 7577 214 215
-- Name: fk_people_address$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_address
    ADD CONSTRAINT "fk_people_address$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10782 (class 2606 OID 53402)
-- Dependencies: 7551 213 749
-- Name: fk_people_change_hist$addressex_1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_change_history
    ADD CONSTRAINT "fk_people_change_hist$addressex_1" FOREIGN KEY (addressex1) REFERENCES addressex(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10781 (class 2606 OID 53407)
-- Dependencies: 7551 213 749
-- Name: fk_people_change_hist$addressex_2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_change_history
    ADD CONSTRAINT "fk_people_change_hist$addressex_2" FOREIGN KEY (addressex2) REFERENCES addressex(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10780 (class 2606 OID 53412)
-- Dependencies: 7577 214 749
-- Name: fk_people_change_hist$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_change_history
    ADD CONSTRAINT "fk_people_change_hist$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10779 (class 2606 OID 53417)
-- Dependencies: 8951 768 749
-- Name: fk_people_change_hist$peopledoctype_2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_change_history
    ADD CONSTRAINT "fk_people_change_hist$peopledoctype_2" FOREIGN KEY (peopledoctype) REFERENCES peopledoctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10802 (class 2606 OID 53422)
-- Dependencies: 7602 309 760
-- Name: fk_people_history$addressex1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$addressex1" FOREIGN KEY (addressex1) REFERENCES addressex_history(oid) ON DELETE RESTRICT;


--
-- TOC entry 10803 (class 2606 OID 53427)
-- Dependencies: 7602 309 760
-- Name: fk_people_history$addressex2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$addressex2" FOREIGN KEY (addressex2) REFERENCES addressex_history(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10804 (class 2606 OID 53432)
-- Dependencies: 7888 391 760
-- Name: fk_people_history$category; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$category" FOREIGN KEY (category) REFERENCES category(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10805 (class 2606 OID 53437)
-- Dependencies: 7968 418 760
-- Name: fk_people_history$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$company" FOREIGN KEY (company) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10806 (class 2606 OID 53442)
-- Dependencies: 8131 479 760
-- Name: fk_people_history$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$district" FOREIGN KEY (district) REFERENCES district(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10807 (class 2606 OID 53447)
-- Dependencies: 7642 318 760
-- Name: fk_people_history$pacient; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$pacient" FOREIGN KEY (pacient) REFERENCES pacient(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10808 (class 2606 OID 53452)
-- Dependencies: 8951 768 760
-- Name: fk_people_history$peopledoctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$peopledoctype" FOREIGN KEY (peopledoctype) REFERENCES peopledoctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10809 (class 2606 OID 53457)
-- Dependencies: 8962 773 760
-- Name: fk_people_history$peoplepost; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$peoplepost" FOREIGN KEY (peoplepost) REFERENCES peoplepost(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10810 (class 2606 OID 53462)
-- Dependencies: 9138 829 760
-- Name: fk_people_history$profession; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$profession" FOREIGN KEY (profession) REFERENCES profession(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10811 (class 2606 OID 53467)
-- Dependencies: 10050 1101 760
-- Name: fk_people_history$vregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_history
    ADD CONSTRAINT "fk_people_history$vregion" FOREIGN KEY (region) REFERENCES vregion(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10814 (class 2606 OID 53472)
-- Dependencies: 7577 214 764
-- Name: fk_people_relation$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_relation
    ADD CONSTRAINT "fk_people_relation$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10813 (class 2606 OID 53477)
-- Dependencies: 8940 765 764
-- Name: fk_people_relation$people_relation_st; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_relation
    ADD CONSTRAINT "fk_people_relation$people_relation_st" FOREIGN KEY (people_relation_status) REFERENCES people_relation_status(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10812 (class 2606 OID 53482)
-- Dependencies: 7577 214 764
-- Name: fk_people_relation$peopleparent; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_relation
    ADD CONSTRAINT "fk_people_relation$peopleparent" FOREIGN KEY (people_relation) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10816 (class 2606 OID 53487)
-- Dependencies: 7577 214 766
-- Name: fk_people_specialty$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_specialty
    ADD CONSTRAINT "fk_people_specialty$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10815 (class 2606 OID 53492)
-- Dependencies: 9630 971 766
-- Name: fk_people_specialty$specialty; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_specialty
    ADD CONSTRAINT "fk_people_specialty$specialty" FOREIGN KEY (specialty) REFERENCES specialty(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10817 (class 2606 OID 53497)
-- Dependencies: 7913 398 767
-- Name: fk_people_status$citizenship; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_status
    ADD CONSTRAINT "fk_people_status$citizenship" FOREIGN KEY (citizenship) REFERENCES citizenship(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10818 (class 2606 OID 53502)
-- Dependencies: 8615 649 767
-- Name: fk_people_status$marriage; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_status
    ADD CONSTRAINT "fk_people_status$marriage" FOREIGN KEY (marriage) REFERENCES marriage(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10819 (class 2606 OID 53507)
-- Dependencies: 8678 672 767
-- Name: fk_people_status$military; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_status
    ADD CONSTRAINT "fk_people_status$military" FOREIGN KEY (military) REFERENCES military(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10820 (class 2606 OID 53512)
-- Dependencies: 7577 214 767
-- Name: fk_people_status$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY people_status
    ADD CONSTRAINT "fk_people_status$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10822 (class 2606 OID 53517)
-- Dependencies: 8503 606 769
-- Name: fk_peoplekartaplace$kartaplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY peoplekartaplace
    ADD CONSTRAINT "fk_peoplekartaplace$kartaplace" FOREIGN KEY (kartaplace) REFERENCES kartaplace(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10821 (class 2606 OID 53522)
-- Dependencies: 7577 214 769
-- Name: fk_peoplekartaplace$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY peoplekartaplace
    ADD CONSTRAINT "fk_peoplekartaplace$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10823 (class 2606 OID 53527)
-- Dependencies: 7577 214 772
-- Name: fk_peoplephoneabsence$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY peoplephoneabsence
    ADD CONSTRAINT "fk_peoplephoneabsence$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10824 (class 2606 OID 53532)
-- Dependencies: 7629 316 773
-- Name: fk_peoplepost$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY peoplepost
    ADD CONSTRAINT "fk_peoplepost$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10825 (class 2606 OID 53537)
-- Dependencies: 9379 898 776
-- Name: fk_persistentpermissi$rolebase; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY persistentpermission
    ADD CONSTRAINT "fk_persistentpermissi$rolebase" FOREIGN KEY (role) REFERENCES rolebase(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10827 (class 2606 OID 53542)
-- Dependencies: 9695 992 777
-- Name: fk_person_setting$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY person_setting
    ADD CONSTRAINT "fk_person_setting$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10829 (class 2606 OID 53547)
-- Dependencies: 8039 449 778
-- Name: fk_phact_de_descript; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY phact_desc
    ADD CONSTRAINT fk_phact_de_descript FOREIGN KEY (descid) REFERENCES descriptions(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10828 (class 2606 OID 53552)
-- Dependencies: 8972 779 778
-- Name: fk_phact_de_pharmaac; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY phact_desc
    ADD CONSTRAINT fk_phact_de_pharmaac FOREIGN KEY (phactid) REFERENCES pharmaactions(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10830 (class 2606 OID 53557)
-- Dependencies: 7551 213 780
-- Name: fk_pharmacy$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pharmacy
    ADD CONSTRAINT "fk_pharmacy$addressex" FOREIGN KEY (address) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10831 (class 2606 OID 53562)
-- Dependencies: 8007 434 782
-- Name: fk_pinfo$country; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$country" FOREIGN KEY (country) REFERENCES country(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10832 (class 2606 OID 53567)
-- Dependencies: 8125 477 782
-- Name: fk_pinfo$disp_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$disp_group" FOREIGN KEY (dispgroup) REFERENCES dispgroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10833 (class 2606 OID 53572)
-- Dependencies: 8192 501 782
-- Name: fk_pinfo$educationtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$educationtype" FOREIGN KEY (education) REFERENCES educationtype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10834 (class 2606 OID 53577)
-- Dependencies: 8346 540 782
-- Name: fk_pinfo$favorkind; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$favorkind" FOREIGN KEY (favorkind) REFERENCES favorkind(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10835 (class 2606 OID 53582)
-- Dependencies: 8387 560 782
-- Name: fk_pinfo$hard_life; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$hard_life" FOREIGN KEY (hard_life) REFERENCES hard_life(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10836 (class 2606 OID 53587)
-- Dependencies: 8559 626 782
-- Name: fk_pinfo$liveplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$liveplace" FOREIGN KEY (liveplace) REFERENCES liveplace(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10837 (class 2606 OID 53592)
-- Dependencies: 8615 649 782
-- Name: fk_pinfo$marriage; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$marriage" FOREIGN KEY (marriage) REFERENCES marriage(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10838 (class 2606 OID 53597)
-- Dependencies: 8728 688 782
-- Name: fk_pinfo$nacionality; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$nacionality" FOREIGN KEY (nacionality) REFERENCES nacionality(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10839 (class 2606 OID 53602)
-- Dependencies: 8845 735 782
-- Name: fk_pinfo$parent_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$parent_status" FOREIGN KEY (parent_status_id) REFERENCES parent_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10840 (class 2606 OID 53607)
-- Dependencies: 7577 214 782
-- Name: fk_pinfo$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$people" FOREIGN KEY (oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10841 (class 2606 OID 53612)
-- Dependencies: 9247 859 782
-- Name: fk_pinfo$recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$recipe_lgot_type" FOREIGN KEY (recipe_lgot_type) REFERENCES recipe_lgot_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10842 (class 2606 OID 53617)
-- Dependencies: 9328 882 782
-- Name: fk_pinfo$regplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$regplace" FOREIGN KEY (regplace) REFERENCES regplace(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10843 (class 2606 OID 53622)
-- Dependencies: 9570 952 782
-- Name: fk_pinfo$socialrank; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo
    ADD CONSTRAINT "fk_pinfo$socialrank" FOREIGN KEY (socialrank) REFERENCES socialrank(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10844 (class 2606 OID 53627)
-- Dependencies: 8007 434 783
-- Name: fk_pinfo_history$country; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$country" FOREIGN KEY (country) REFERENCES country(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10845 (class 2606 OID 53632)
-- Dependencies: 8117 473 783
-- Name: fk_pinfo_history$disp_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$disp_group" FOREIGN KEY (dispgroup) REFERENCES disp_group(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10846 (class 2606 OID 53637)
-- Dependencies: 8192 501 783
-- Name: fk_pinfo_history$educationtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$educationtype" FOREIGN KEY (education) REFERENCES educationtype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10847 (class 2606 OID 53642)
-- Dependencies: 8346 540 783
-- Name: fk_pinfo_history$favorkind; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$favorkind" FOREIGN KEY (favorkind) REFERENCES favorkind(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10848 (class 2606 OID 53647)
-- Dependencies: 8387 560 783
-- Name: fk_pinfo_history$hard_life; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$hard_life" FOREIGN KEY (hard_life) REFERENCES hard_life(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10849 (class 2606 OID 53652)
-- Dependencies: 8559 626 783
-- Name: fk_pinfo_history$liveplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$liveplace" FOREIGN KEY (liveplace) REFERENCES liveplace(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10850 (class 2606 OID 53657)
-- Dependencies: 8615 649 783
-- Name: fk_pinfo_history$marriage; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$marriage" FOREIGN KEY (marriage) REFERENCES marriage(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10851 (class 2606 OID 53662)
-- Dependencies: 8728 688 783
-- Name: fk_pinfo_history$nacionality; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$nacionality" FOREIGN KEY (nacionality) REFERENCES nacionality(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10852 (class 2606 OID 53667)
-- Dependencies: 8845 735 783
-- Name: fk_pinfo_history$parent_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$parent_status" FOREIGN KEY (parent_status_id) REFERENCES parent_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10853 (class 2606 OID 53672)
-- Dependencies: 8925 760 783
-- Name: fk_pinfo_history$people_history; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$people_history" FOREIGN KEY (oid) REFERENCES people_history(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10854 (class 2606 OID 53677)
-- Dependencies: 9247 859 783
-- Name: fk_pinfo_history$recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$recipe_lgot_type" FOREIGN KEY (recipe_lgot_type) REFERENCES recipe_lgot_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10855 (class 2606 OID 53682)
-- Dependencies: 9328 882 783
-- Name: fk_pinfo_history$regplace; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$regplace" FOREIGN KEY (regplace) REFERENCES regplace(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10856 (class 2606 OID 53687)
-- Dependencies: 9570 952 783
-- Name: fk_pinfo_history$socialrank; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pinfo_history
    ADD CONSTRAINT "fk_pinfo_history$socialrank" FOREIGN KEY (socialrank) REFERENCES socialrank(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10858 (class 2606 OID 53692)
-- Dependencies: 7551 213 785
-- Name: fk_plot$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY plot
    ADD CONSTRAINT "fk_plot$addressex" FOREIGN KEY (addressex) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10857 (class 2606 OID 53697)
-- Dependencies: 8566 631 785
-- Name: fk_plot$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY plot
    ADD CONSTRAINT "fk_plot$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10859 (class 2606 OID 53702)
-- Dependencies: 7551 213 786
-- Name: fk_plot_history$addressex; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY plot_history
    ADD CONSTRAINT "fk_plot_history$addressex" FOREIGN KEY (addressex) REFERENCES addressex(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10860 (class 2606 OID 53707)
-- Dependencies: 7538 176 787
-- Name: fk_poll$tkladrspr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY poll
    ADD CONSTRAINT "fk_poll$tkladrspr" FOREIGN KEY (region) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10861 (class 2606 OID 53712)
-- Dependencies: 9009 787 788
-- Name: fk_pollanswer$poll; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pollanswer
    ADD CONSTRAINT "fk_pollanswer$poll" FOREIGN KEY (poll) REFERENCES poll(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10863 (class 2606 OID 53717)
-- Dependencies: 7577 214 789
-- Name: fk_pollanswer_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pollanswer_people
    ADD CONSTRAINT "fk_pollanswer_people$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10862 (class 2606 OID 53722)
-- Dependencies: 9012 788 789
-- Name: fk_pollanswer_people$pollanswer; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pollanswer_people
    ADD CONSTRAINT "fk_pollanswer_people$pollanswer" FOREIGN KEY (pollanswer) REFERENCES pollanswer(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10865 (class 2606 OID 53727)
-- Dependencies: 8647 659 790
-- Name: fk_portal_mdoc$mdoc_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc
    ADD CONSTRAINT "fk_portal_mdoc$mdoc_type" FOREIGN KEY (type) REFERENCES mdoc_type(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10864 (class 2606 OID 53732)
-- Dependencies: 7577 214 790
-- Name: fk_portal_mdoc$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc
    ADD CONSTRAINT "fk_portal_mdoc$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10867 (class 2606 OID 53737)
-- Dependencies: 9028 793 791
-- Name: fk_portal_mdoc_appoin$portal_mdoc_event; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_appointment
    ADD CONSTRAINT "fk_portal_mdoc_appoin$portal_mdoc_event" FOREIGN KEY (mdoc_event) REFERENCES portal_mdoc_event(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10866 (class 2606 OID 53742)
-- Dependencies: 9127 825 791
-- Name: fk_portal_mdoc_appoin$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_appointment
    ADD CONSTRAINT "fk_portal_mdoc_appoin$presctype" FOREIGN KEY (presctype_oid) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10868 (class 2606 OID 53747)
-- Dependencies: 9022 791 792
-- Name: fk_portal_mdoc_diag$portal_mdoc_appoin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_diag
    ADD CONSTRAINT "fk_portal_mdoc_diag$portal_mdoc_appoin" FOREIGN KEY (mdoc_appointment) REFERENCES portal_mdoc_appointment(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10869 (class 2606 OID 53752)
-- Dependencies: 9018 790 793
-- Name: fk_portal_mdoc_event$portal_mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_event
    ADD CONSTRAINT "fk_portal_mdoc_event$portal_mdoc" FOREIGN KEY (mdoc) REFERENCES portal_mdoc(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10870 (class 2606 OID 53757)
-- Dependencies: 9028 793 794
-- Name: fk_portal_mdoc_extrac$portal_mdoc_event; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_extract
    ADD CONSTRAINT "fk_portal_mdoc_extrac$portal_mdoc_event" FOREIGN KEY (mdoc_event) REFERENCES portal_mdoc_event(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10873 (class 2606 OID 53762)
-- Dependencies: 8651 661 795
-- Name: fk_portal_mdoc_medic$medic_frequency; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_medic
    ADD CONSTRAINT "fk_portal_mdoc_medic$medic_frequency" FOREIGN KEY (frequency) REFERENCES medic_frequency(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10872 (class 2606 OID 53767)
-- Dependencies: 9022 791 795
-- Name: fk_portal_mdoc_medic$portal_mdoc_appoin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_medic
    ADD CONSTRAINT "fk_portal_mdoc_medic$portal_mdoc_appoin" FOREIGN KEY (mdoc_appointment) REFERENCES portal_mdoc_appointment(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10871 (class 2606 OID 53772)
-- Dependencies: 9777 1022 795
-- Name: fk_portal_mdoc_medic$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_medic
    ADD CONSTRAINT "fk_portal_mdoc_medic$tradenames" FOREIGN KEY (tradename_oid) REFERENCES tradenames(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10875 (class 2606 OID 53777)
-- Dependencies: 9022 791 796
-- Name: fk_portal_mdoc_survey$portal_mdoc_appoin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_survey
    ADD CONSTRAINT "fk_portal_mdoc_survey$portal_mdoc_appoin" FOREIGN KEY (mdoc_appointment) REFERENCES portal_mdoc_appointment(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10874 (class 2606 OID 53782)
-- Dependencies: 9127 825 796
-- Name: fk_portal_mdoc_survey$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY portal_mdoc_survey
    ADD CONSTRAINT "fk_portal_mdoc_survey$presctype" FOREIGN KEY (presctype_oid) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10509 (class 2606 OID 53787)
-- Dependencies: 8150 486 486
-- Name: fk_post$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY post
    ADD CONSTRAINT "fk_post$post" FOREIGN KEY (parent) REFERENCES post(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10783 (class 2606 OID 53792)
-- Dependencies: 7586 302 751
-- Name: fk_postgraduateeducat$academicdegree; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT "fk_postgraduateeducat$academicdegree" FOREIGN KEY (academicdegree) REFERENCES academicdegree(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10784 (class 2606 OID 53797)
-- Dependencies: 8190 500 751
-- Name: fk_postgraduateeducat$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT "fk_postgraduateeducat$educationinstituti" FOREIGN KEY (educationinstitution) REFERENCES educationinstitution(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10785 (class 2606 OID 53802)
-- Dependencies: 7577 214 751
-- Name: fk_postgraduateeducat$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT "fk_postgraduateeducat$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10786 (class 2606 OID 53807)
-- Dependencies: 8890 750 751
-- Name: fk_postgraduateeducat$posteducation; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT "fk_postgraduateeducat$posteducation" FOREIGN KEY (posteducation) REFERENCES posteducation(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10787 (class 2606 OID 53812)
-- Dependencies: 8916 756 751
-- Name: fk_postgraduateeducat$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY postgraduateeducation
    ADD CONSTRAINT "fk_postgraduateeducat$sertificatespecial" FOREIGN KEY (sertificatespeciality) REFERENCES sertificatespeciality(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10876 (class 2606 OID 53817)
-- Dependencies: 7794 367 800
-- Name: fk_pregnancies$birth_place; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnancies
    ADD CONSTRAINT "fk_pregnancies$birth_place" FOREIGN KEY (birth_place) REFERENCES birth_place(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10877 (class 2606 OID 53822)
-- Dependencies: 8742 693 800
-- Name: fk_pregnancies$newborn_state; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnancies
    ADD CONSTRAINT "fk_pregnancies$newborn_state" FOREIGN KEY (newborn_state) REFERENCES newborn_state(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10878 (class 2606 OID 53827)
-- Dependencies: 7577 214 800
-- Name: fk_pregnancies$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnancies
    ADD CONSTRAINT "fk_pregnancies$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10879 (class 2606 OID 53832)
-- Dependencies: 9050 801 800
-- Name: fk_pregnancies$pregnancy_result; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnancies
    ADD CONSTRAINT "fk_pregnancies$pregnancy_result" FOREIGN KEY (pregnancy_result) REFERENCES pregnancy_result(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10880 (class 2606 OID 53837)
-- Dependencies: 8625 652 803
-- Name: fk_pregnant_card_info$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnant_card_info
    ADD CONSTRAINT "fk_pregnant_card_info$mdoc" FOREIGN KEY (oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10881 (class 2606 OID 53842)
-- Dependencies: 9046 799 803
-- Name: fk_pregnant_card_info$post_birth_running; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnant_card_info
    ADD CONSTRAINT "fk_pregnant_card_info$post_birth_running" FOREIGN KEY (post_birth_running) REFERENCES post_birth_running(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10882 (class 2606 OID 53847)
-- Dependencies: 9052 802 803
-- Name: fk_pregnant_card_info$pregnancy_running; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnant_card_info
    ADD CONSTRAINT "fk_pregnant_card_info$pregnancy_running" FOREIGN KEY (prev_pregnancy_running) REFERENCES pregnancy_running(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10883 (class 2606 OID 53852)
-- Dependencies: 8163 488 803
-- Name: fk_pregnant_card_info$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pregnant_card_info
    ADD CONSTRAINT "fk_pregnant_card_info$sotr" FOREIGN KEY (first_inspection_sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10885 (class 2606 OID 53857)
-- Dependencies: 8684 673 804
-- Name: fk_premilit$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY premilitary
    ADD CONSTRAINT "fk_premilit$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10884 (class 2606 OID 53862)
-- Dependencies: 7577 214 804
-- Name: fk_premilit$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY premilitary
    ADD CONSTRAINT "fk_premilit$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10887 (class 2606 OID 53867)
-- Dependencies: 8385 559 805
-- Name: fk_prenatal$group_ri; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prenatal
    ADD CONSTRAINT "fk_prenatal$group_ri" FOREIGN KEY (group_risk_id) REFERENCES group_risk(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10886 (class 2606 OID 53872)
-- Dependencies: 7577 214 805
-- Name: fk_prenatal$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prenatal
    ADD CONSTRAINT "fk_prenatal$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10888 (class 2606 OID 53877)
-- Dependencies: 8527 615 806
-- Name: fk_prep$latinnames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT "fk_prep$latinnames" FOREIGN KEY (latinnameid) REFERENCES latinnames(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10889 (class 2606 OID 53882)
-- Dependencies: 9779 1022 806
-- Name: fk_prep$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT "fk_prep$tradenames" FOREIGN KEY (tradenameid) REFERENCES tradenames(id);


--
-- TOC entry 10900 (class 2606 OID 53887)
-- Dependencies: 7594 306 807
-- Name: fk_prep_act_actmatte; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_actmatters
    ADD CONSTRAINT fk_prep_act_actmatte FOREIGN KEY (matterid) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10902 (class 2606 OID 53892)
-- Dependencies: 7937 409 808
-- Name: fk_prep_atc_clsatc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_atc
    ADD CONSTRAINT fk_prep_atc_clsatc FOREIGN KEY (uniqid) REFERENCES clsatc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10905 (class 2606 OID 53897)
-- Dependencies: 7943 411 809
-- Name: fk_prep_iic_clsiic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_iic
    ADD CONSTRAINT fk_prep_iic_clsiic FOREIGN KEY (uniqid) REFERENCES clsiic(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10904 (class 2606 OID 53902)
-- Dependencies: 7948 413 809
-- Name: fk_prep_iic_clspharm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_iic
    ADD CONSTRAINT fk_prep_iic_clspharm FOREIGN KEY (phgrid) REFERENCES clspharmagroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10907 (class 2606 OID 53907)
-- Dependencies: 7948 413 810
-- Name: fk_prep_pha_clspharm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_pharmagroup
    ADD CONSTRAINT fk_prep_pha_clspharm FOREIGN KEY (uniqid) REFERENCES clspharmagroup(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10908 (class 2606 OID 53912)
-- Dependencies: 8625 652 811
-- Name: fk_presc$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10909 (class 2606 OID 53917)
-- Dependencies: 9081 811 811
-- Name: fk_presc$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$presc" FOREIGN KEY (parent_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 17416 (class 0 OID 0)
-- Dependencies: 10909
-- Name: CONSTRAINT "fk_presc$presc" ON presc; Type: COMMENT; Schema: mir; Owner: postgres
--

COMMENT ON CONSTRAINT "fk_presc$presc" ON presc IS 'Внешний ключ (связь родительского назначения с дочерним)';


--
-- TOC entry 10910 (class 2606 OID 53922)
-- Dependencies: 9112 820 811
-- Name: fk_presc$presc_state; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$presc_state" FOREIGN KEY (presc_state_id) REFERENCES presc_state(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10911 (class 2606 OID 53927)
-- Dependencies: 9114 821 811
-- Name: fk_presc$presc_time; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$presc_time" FOREIGN KEY (presc_time_id) REFERENCES presc_time(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10912 (class 2606 OID 53932)
-- Dependencies: 9127 825 811
-- Name: fk_presc$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10913 (class 2606 OID 53937)
-- Dependencies: 8163 488 811
-- Name: fk_presc$runemp; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$runemp" FOREIGN KEY (runemp_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10914 (class 2606 OID 53942)
-- Dependencies: 8163 488 811
-- Name: fk_presc$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$sotr" FOREIGN KEY (creator_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10915 (class 2606 OID 53947)
-- Dependencies: 286 811
-- Name: fk_presc$tmodel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$tmodel" FOREIGN KEY (tmodel) REFERENCES medserv.tmodel(fk_id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10916 (class 2606 OID 53952)
-- Dependencies: 10004 1088 811
-- Name: fk_presc$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$visit" FOREIGN KEY (visit_id) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10917 (class 2606 OID 53957)
-- Dependencies: 10134 1132 811
-- Name: fk_presc$xray_referral; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc
    ADD CONSTRAINT "fk_presc$xray_referral" FOREIGN KEY (xray_referral_id) REFERENCES xray_referral(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10920 (class 2606 OID 53962)
-- Dependencies: 9081 811 812
-- Name: fk_presc_card$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_card
    ADD CONSTRAINT "fk_presc_card$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10923 (class 2606 OID 53967)
-- Dependencies: 8709 683 813
-- Name: fk_presc_parval$mparam; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_parval
    ADD CONSTRAINT "fk_presc_parval$mparam" FOREIGN KEY (mparam_id) REFERENCES mparam(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10922 (class 2606 OID 53972)
-- Dependencies: 9081 811 813
-- Name: fk_presc_parval$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_parval
    ADD CONSTRAINT "fk_presc_parval$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10921 (class 2606 OID 53977)
-- Dependencies: 9837 1040 813
-- Name: fk_presc_parval$type_name; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_parval
    ADD CONSTRAINT "fk_presc_parval$type_name" FOREIGN KEY (type_name) REFERENCES type_name(name) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10925 (class 2606 OID 53982)
-- Dependencies: 9022 791 814
-- Name: fk_presc_portal_link$portal_mdoc_appoin; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_portal_link
    ADD CONSTRAINT "fk_presc_portal_link$portal_mdoc_appoin" FOREIGN KEY (portal_mdoc_appointment) REFERENCES portal_mdoc_appointment(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10924 (class 2606 OID 53987)
-- Dependencies: 9081 811 814
-- Name: fk_presc_portal_link$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_portal_link
    ADD CONSTRAINT "fk_presc_portal_link$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10928 (class 2606 OID 53992)
-- Dependencies: 9081 811 816
-- Name: fk_presc_result$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_result
    ADD CONSTRAINT "fk_presc_result$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10927 (class 2606 OID 53997)
-- Dependencies: 9096 815 816
-- Name: fk_presc_result$presc_reason_cancel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_result
    ADD CONSTRAINT "fk_presc_result$presc_reason_cancel" FOREIGN KEY (presc_reason_cancel_id) REFERENCES presc_reason_cancel(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10926 (class 2606 OID 54002)
-- Dependencies: 9112 820 816
-- Name: fk_presc_result$presc_state; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_result
    ADD CONSTRAINT "fk_presc_result$presc_state" FOREIGN KEY (presc_state_id) REFERENCES presc_state(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10929 (class 2606 OID 54007)
-- Dependencies: 9081 811 817
-- Name: fk_presc_schedule$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_schedule
    ADD CONSTRAINT "fk_presc_schedule$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10931 (class 2606 OID 54017)
-- Dependencies: 9081 811 818
-- Name: fk_presc_service$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_service
    ADD CONSTRAINT "fk_presc_service$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10930 (class 2606 OID 54022)
-- Dependencies: 9485 925 818
-- Name: fk_presc_service$service_presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_service
    ADD CONSTRAINT "fk_presc_service$service_presctype" FOREIGN KEY (service_presctype) REFERENCES service_presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10933 (class 2606 OID 54027)
-- Dependencies: 9081 811 819
-- Name: fk_presc_sign_sotr$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_sign_sotr
    ADD CONSTRAINT "fk_presc_sign_sotr$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10932 (class 2606 OID 54032)
-- Dependencies: 8163 488 819
-- Name: fk_presc_sign_sotr$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_sign_sotr
    ADD CONSTRAINT "fk_presc_sign_sotr$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10934 (class 2606 OID 54037)
-- Dependencies: 9081 811 822
-- Name: fk_presc_xrayparam$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_xrayparam
    ADD CONSTRAINT "fk_presc_xrayparam$presc" FOREIGN KEY (oid) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10936 (class 2606 OID 54042)
-- Dependencies: 9081 811 823
-- Name: fk_prescparam_storage$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prescparam_storage
    ADD CONSTRAINT "fk_prescparam_storage$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10935 (class 2606 OID 54047)
-- Dependencies: 9132 826 823
-- Name: fk_prescparam_storage$presctypeparam; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prescparam_storage
    ADD CONSTRAINT "fk_prescparam_storage$presctypeparam" FOREIGN KEY (prescparam_id) REFERENCES presctypeparam(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10937 (class 2606 OID 54052)
-- Dependencies: 9132 826 824
-- Name: fk_prescparam_values$presctypeparam; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prescparam_values
    ADD CONSTRAINT "fk_prescparam_values$presctypeparam" FOREIGN KEY (prescparam_id) REFERENCES presctypeparam(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10939 (class 2606 OID 54057)
-- Dependencies: 7532 175 825
-- Name: fk_presctype$presctypefolder; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctype
    ADD CONSTRAINT "fk_presctype$presctypefolder" FOREIGN KEY (presctypefolder_id) REFERENCES presctypefolder(id) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10938 (class 2606 OID 54062)
-- Dependencies: 7532 175 825
-- Name: fk_presctype$presctypefolderparent; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctype
    ADD CONSTRAINT "fk_presctype$presctypefolderparent" FOREIGN KEY (presctypefolderid_parent) REFERENCES presctypefolder(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10941 (class 2606 OID 54068)
-- Dependencies: 9127 825 826
-- Name: fk_presctypeparam$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctypeparam
    ADD CONSTRAINT "fk_presctypeparam$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10940 (class 2606 OID 54073)
-- Dependencies: 8841 733 826
-- Name: fk_presctypeparam$presctypeparam_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctypeparam
    ADD CONSTRAINT "fk_presctypeparam$presctypeparam_typ" FOREIGN KEY (parametr_type) REFERENCES param_datatype(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10942 (class 2606 OID 54078)
-- Dependencies: 9132 826 827
-- Name: fk_presctypeparam_dic$presctypeparam; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctypeparam_dictionary
    ADD CONSTRAINT "fk_presctypeparam_dic$presctypeparam" FOREIGN KEY (parent) REFERENCES presctypeparam(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10943 (class 2606 OID 54083)
-- Dependencies: 7629 316 829
-- Name: fk_profession$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profession
    ADD CONSTRAINT "fk_profession$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10947 (class 2606 OID 54088)
-- Dependencies: 8147 485 830
-- Name: fk_profex_actions$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actions
    ADD CONSTRAINT "fk_profex_actions$otdel" FOREIGN KEY (create_otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10946 (class 2606 OID 54094)
-- Dependencies: 9146 831 830
-- Name: fk_profex_actions$profex_actions_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actions
    ADD CONSTRAINT "fk_profex_actions$profex_actions_typ" FOREIGN KEY (type) REFERENCES profex_actions_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10945 (class 2606 OID 54099)
-- Dependencies: 9156 834 830
-- Name: fk_profex_actions$profex_contract; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actions
    ADD CONSTRAINT "fk_profex_actions$profex_contract" FOREIGN KEY (profex_contract) REFERENCES profex_contract(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10944 (class 2606 OID 54104)
-- Dependencies: 9695 992 830
-- Name: fk_profex_actions$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actions
    ADD CONSTRAINT "fk_profex_actions$sysuser" FOREIGN KEY (create_sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10949 (class 2606 OID 54109)
-- Dependencies: 9127 825 832
-- Name: fk_profex_actionstype$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actionstype_presctype
    ADD CONSTRAINT "fk_profex_actionstype$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10948 (class 2606 OID 54114)
-- Dependencies: 9146 831 832
-- Name: fk_profex_actionstype$profex_actions_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_actionstype_presctype
    ADD CONSTRAINT "fk_profex_actionstype$profex_actions_typ" FOREIGN KEY (profex_actionstype) REFERENCES profex_actions_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10951 (class 2606 OID 54119)
-- Dependencies: 7968 418 833
-- Name: fk_profex_company$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_company
    ADD CONSTRAINT "fk_profex_company$company" FOREIGN KEY (company) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10950 (class 2606 OID 54124)
-- Dependencies: 8566 631 833
-- Name: fk_profex_company$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_company
    ADD CONSTRAINT "fk_profex_company$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid);


--
-- TOC entry 10954 (class 2606 OID 54129)
-- Dependencies: 8147 485 834
-- Name: fk_profex_contract$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_contract
    ADD CONSTRAINT "fk_profex_contract$otdel" FOREIGN KEY (create_otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10953 (class 2606 OID 54134)
-- Dependencies: 9152 833 834
-- Name: fk_profex_contract$profex_company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_contract
    ADD CONSTRAINT "fk_profex_contract$profex_company" FOREIGN KEY (profex_company) REFERENCES profex_company(oid) DEFERRABLE;


--
-- TOC entry 10952 (class 2606 OID 54139)
-- Dependencies: 9695 992 834
-- Name: fk_profex_contract$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_contract
    ADD CONSTRAINT "fk_profex_contract$sysuser" FOREIGN KEY (create_sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10958 (class 2606 OID 54144)
-- Dependencies: 8625 652 835
-- Name: fk_profex_list$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list
    ADD CONSTRAINT "fk_profex_list$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10957 (class 2606 OID 54149)
-- Dependencies: 9144 830 835
-- Name: fk_profex_list$profex_actions; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list
    ADD CONSTRAINT "fk_profex_list$profex_actions" FOREIGN KEY (prof_action) REFERENCES profex_actions(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10956 (class 2606 OID 54154)
-- Dependencies: 9184 842 835
-- Name: fk_profex_list$profex_result; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list
    ADD CONSTRAINT "fk_profex_list$profex_result" FOREIGN KEY (result) REFERENCES profex_result(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10955 (class 2606 OID 54159)
-- Dependencies: 9188 844 835
-- Name: fk_profex_list$profex_workconditi; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list
    ADD CONSTRAINT "fk_profex_list$profex_workconditi" FOREIGN KEY (workconditions) REFERENCES profex_workconditions(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10961 (class 2606 OID 54164)
-- Dependencies: 9081 811 836
-- Name: fk_profex_list_naz$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list_naz
    ADD CONSTRAINT "fk_profex_list_naz$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10960 (class 2606 OID 54169)
-- Dependencies: 9127 825 836
-- Name: fk_profex_list_naz$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list_naz
    ADD CONSTRAINT "fk_profex_list_naz$presctype" FOREIGN KEY (presc_type) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10959 (class 2606 OID 54174)
-- Dependencies: 9162 835 836
-- Name: fk_profex_list_naz$profex_list; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list_naz
    ADD CONSTRAINT "fk_profex_list_naz$profex_list" FOREIGN KEY (profex_list) REFERENCES profex_list(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10964 (class 2606 OID 54179)
-- Dependencies: 9172 838 838
-- Name: fk_profex_proffactor$profex_proffactor; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor
    ADD CONSTRAINT "fk_profex_proffactor$profex_proffactor" FOREIGN KEY (parent) REFERENCES profex_proffactor(oid);


--
-- TOC entry 10967 (class 2606 OID 54184)
-- Dependencies: 9127 825 840
-- Name: fk_profex_proffactor_$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor_presc
    ADD CONSTRAINT "fk_profex_proffactor_$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10969 (class 2606 OID 54189)
-- Dependencies: 9162 835 841
-- Name: fk_profex_proffactor_$profex_list; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor_profexlist
    ADD CONSTRAINT "fk_profex_proffactor_$profex_list" FOREIGN KEY (prophex_list) REFERENCES profex_list(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10968 (class 2606 OID 54194)
-- Dependencies: 9172 838 841
-- Name: fk_profex_proffactor_$proffactor; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor_profexlist
    ADD CONSTRAINT "fk_profex_proffactor_$proffactor" FOREIGN KEY (proffactor) REFERENCES profex_proffactor(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10966 (class 2606 OID 54199)
-- Dependencies: 9172 838 840
-- Name: fk_profex_proffactor_$proffactor_presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor_presc
    ADD CONSTRAINT "fk_profex_proffactor_$proffactor_presc" FOREIGN KEY (proffactor) REFERENCES profex_proffactor(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10965 (class 2606 OID 54204)
-- Dependencies: 9172 838 839
-- Name: fk_proffactor_info$profex_proffactor; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_proffactor_info
    ADD CONSTRAINT "fk_proffactor_info$profex_proffactor" FOREIGN KEY (oid) REFERENCES profex_proffactor(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10970 (class 2606 OID 54209)
-- Dependencies: 8555 624 849
-- Name: fk_progression$linetype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY progression
    ADD CONSTRAINT "fk_progression$linetype" FOREIGN KEY (linetype) REFERENCES linetype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10973 (class 2606 OID 54214)
-- Dependencies: 8555 624 850
-- Name: fk_progression_stat$linetype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY progression_stat
    ADD CONSTRAINT "fk_progression_stat$linetype" FOREIGN KEY (linetype) REFERENCES linetype(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10972 (class 2606 OID 54219)
-- Dependencies: 9318 880 850
-- Name: fk_progression_stat$registwindow; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY progression_stat
    ADD CONSTRAINT "fk_progression_stat$registwindow" FOREIGN KEY (registwindow) REFERENCES registwindow(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10971 (class 2606 OID 54224)
-- Dependencies: 9695 992 850
-- Name: fk_progression_stat$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY progression_stat
    ADD CONSTRAINT "fk_progression_stat$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10974 (class 2606 OID 54229)
-- Dependencies: 9081 811 851
-- Name: fk_protocol$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY protocol
    ADD CONSTRAINT "fk_protocol$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10664 (class 2606 OID 54234)
-- Dependencies: 9081 811 648
-- Name: fk_protocol$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY map_teeth
    ADD CONSTRAINT "fk_protocol$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10790 (class 2606 OID 54239)
-- Dependencies: 7577 214 752
-- Name: fk_qualification$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY qualification
    ADD CONSTRAINT "fk_qualification$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10789 (class 2606 OID 54244)
-- Dependencies: 8904 753 752
-- Name: fk_qualification$qualificationcateg; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY qualification
    ADD CONSTRAINT "fk_qualification$qualificationcateg" FOREIGN KEY (qualificationcategory) REFERENCES qualificationcategory(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10788 (class 2606 OID 54249)
-- Dependencies: 8916 756 752
-- Name: fk_qualification$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY qualification
    ADD CONSTRAINT "fk_qualification$sertificatespecial" FOREIGN KEY (sertificatespeciality) REFERENCES sertificatespeciality(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10975 (class 2606 OID 54254)
-- Dependencies: 8566 631 855
-- Name: fk_receptiontype$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY receptiontype
    ADD CONSTRAINT "fk_receptiontype$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10977 (class 2606 OID 54261)
-- Dependencies: 9223 855 856
-- Name: fk_receptiontype_rights$receptiontype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY receptiontype_rights
    ADD CONSTRAINT "fk_receptiontype_rights$receptiontype" FOREIGN KEY (receptiontype) REFERENCES receptiontype(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10976 (class 2606 OID 54266)
-- Dependencies: 9695 992 856
-- Name: fk_receptiontype_rights$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY receptiontype_rights
    ADD CONSTRAINT "fk_receptiontype_rights$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10978 (class 2606 OID 54271)
-- Dependencies: 7765 357 857
-- Name: fk_recipe$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$benefit_financing" FOREIGN KEY (benefit_financing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10979 (class 2606 OID 54276)
-- Dependencies: 7639 317 857
-- Name: fk_recipe$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$insurance" FOREIGN KEY (idoc_a_id) REFERENCES insurance(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10980 (class 2606 OID 54281)
-- Dependencies: 8625 652 857
-- Name: fk_recipe$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10981 (class 2606 OID 54286)
-- Dependencies: 8684 673 857
-- Name: fk_recipe$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10982 (class 2606 OID 54291)
-- Dependencies: 8875 745 857
-- Name: fk_recipe$pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$pay_type" FOREIGN KEY (pay_type_id) REFERENCES pay_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10983 (class 2606 OID 54296)
-- Dependencies: 9081 811 857
-- Name: fk_recipe$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10984 (class 2606 OID 54301)
-- Dependencies: 9247 859 857
-- Name: fk_recipe$recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$recipe_lgot_type" FOREIGN KEY (lgot_type_id) REFERENCES recipe_lgot_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10985 (class 2606 OID 54306)
-- Dependencies: 9275 863 857
-- Name: fk_recipe$recipe_prescriptio; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$recipe_prescriptio" FOREIGN KEY (recipe_prescription_type) REFERENCES recipe_prescription_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10986 (class 2606 OID 54311)
-- Dependencies: 9279 865 857
-- Name: fk_recipe$recipe_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$recipe_status" FOREIGN KEY (status_id) REFERENCES recipe_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10987 (class 2606 OID 54316)
-- Dependencies: 8163 488 857
-- Name: fk_recipe$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10988 (class 2606 OID 54321)
-- Dependencies: 10004 1088 857
-- Name: fk_recipe$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe$visit" FOREIGN KEY (visit_id) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10993 (class 2606 OID 54326)
-- Dependencies: 9247 859 858
-- Name: fk_recipe_d_rf_recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_duration
    ADD CONSTRAINT fk_recipe_d_rf_recipe_lgot_type FOREIGN KEY (type_id) REFERENCES recipe_lgot_type(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 10992 (class 2606 OID 54331)
-- Dependencies: 7765 357 858
-- Name: fk_recipe_duration$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_duration
    ADD CONSTRAINT "fk_recipe_duration$benefit_financing" FOREIGN KEY (benefit_financing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10994 (class 2606 OID 54336)
-- Dependencies: 8617 650 860
-- Name: fk_recipe_m_reference_massunit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT fk_recipe_m_reference_massunit FOREIGN KEY (doza_unit_id) REFERENCES massunit(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10995 (class 2606 OID 54341)
-- Dependencies: 8651 661 860
-- Name: fk_recipe_m_rf_frequency; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT fk_recipe_m_rf_frequency FOREIGN KEY (frequency_id) REFERENCES medic_frequency(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10996 (class 2606 OID 54346)
-- Dependencies: 8617 650 860
-- Name: fk_recipe_m_rf_massunit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT fk_recipe_m_rf_massunit FOREIGN KEY (unit_id) REFERENCES massunit(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10997 (class 2606 OID 54351)
-- Dependencies: 9241 857 860
-- Name: fk_recipe_m_rf_recipe; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT fk_recipe_m_rf_recipe FOREIGN KEY (recipe_id) REFERENCES recipe(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11003 (class 2606 OID 54356)
-- Dependencies: 8617 650 861
-- Name: fk_recipe_m_t_reference_massunit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT fk_recipe_m_t_reference_massunit FOREIGN KEY (doza_unit_id) REFERENCES massunit(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11004 (class 2606 OID 54361)
-- Dependencies: 8651 661 861
-- Name: fk_recipe_m_t_rf_frequency; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT fk_recipe_m_t_rf_frequency FOREIGN KEY (frequency_id) REFERENCES medic_frequency(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11005 (class 2606 OID 54366)
-- Dependencies: 8617 650 861
-- Name: fk_recipe_m_t_rf_massunit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT fk_recipe_m_t_rf_massunit FOREIGN KEY (unit_id) REFERENCES massunit(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11006 (class 2606 OID 54371)
-- Dependencies: 8660 665 861
-- Name: fk_recipe_m_t_rf_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT fk_recipe_m_t_rf_template FOREIGN KEY (medic_template_id) REFERENCES medic_template(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10998 (class 2606 OID 54376)
-- Dependencies: 7594 306 860
-- Name: fk_recipe_medic$actmatter; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT "fk_recipe_medic$actmatter" FOREIGN KEY (actmatter) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10999 (class 2606 OID 54381)
-- Dependencies: 7774 359 860
-- Name: fk_recipe_medic$benefit_medic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT "fk_recipe_medic$benefit_medic" FOREIGN KEY (benefit_medic) REFERENCES benefit_medic(oid) ON UPDATE RESTRICT ON DELETE SET DEFAULT;


--
-- TOC entry 11000 (class 2606 OID 54386)
-- Dependencies: 8525 615 860
-- Name: fk_recipe_medic$latinnames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT "fk_recipe_medic$latinnames" FOREIGN KEY (latinnames) REFERENCES latinnames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11001 (class 2606 OID 54391)
-- Dependencies: 9777 1022 860
-- Name: fk_recipe_medic$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT "fk_recipe_medic$tradenames" FOREIGN KEY (tradenames) REFERENCES tradenames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11007 (class 2606 OID 54396)
-- Dependencies: 7594 306 861
-- Name: fk_recipe_medic_t$actmatter; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT "fk_recipe_medic_t$actmatter" FOREIGN KEY (actmatter) REFERENCES actmatters(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11008 (class 2606 OID 54401)
-- Dependencies: 7774 359 861
-- Name: fk_recipe_medic_t$benefit_medic; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT "fk_recipe_medic_t$benefit_medic" FOREIGN KEY (benefit_medic) REFERENCES benefit_medic(oid) ON UPDATE RESTRICT ON DELETE SET DEFAULT;


--
-- TOC entry 11009 (class 2606 OID 54406)
-- Dependencies: 8525 615 861
-- Name: fk_recipe_medic_t$latinnames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT "fk_recipe_medic_t$latinnames" FOREIGN KEY (latinnames) REFERENCES latinnames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11010 (class 2606 OID 54411)
-- Dependencies: 9777 1022 861
-- Name: fk_recipe_medic_t$tradenames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT "fk_recipe_medic_t$tradenames" FOREIGN KEY (tradenames) REFERENCES tradenames(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11013 (class 2606 OID 54416)
-- Dependencies: 9247 859 862
-- Name: fk_recipe_p_rf_recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_percent
    ADD CONSTRAINT fk_recipe_p_rf_recipe_lgot_type FOREIGN KEY (type_id) REFERENCES recipe_lgot_type(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11012 (class 2606 OID 54421)
-- Dependencies: 7765 357 862
-- Name: fk_recipe_percent$benefit_financing; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_percent
    ADD CONSTRAINT "fk_recipe_percent$benefit_financing" FOREIGN KEY (benefit_financing) REFERENCES benefit_financing(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11002 (class 2606 OID 54426)
-- Dependencies: 8655 663 860
-- Name: fk_recipe_rf_input_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic
    ADD CONSTRAINT fk_recipe_rf_input_type FOREIGN KEY (input_id) REFERENCES medic_input_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10989 (class 2606 OID 54431)
-- Dependencies: 9273 862 857
-- Name: fk_recipe_rf_recipe_percent; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT fk_recipe_rf_recipe_percent FOREIGN KEY (percent_id) REFERENCES recipe_percent(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10990 (class 2606 OID 54436)
-- Dependencies: 9281 866 857
-- Name: fk_recipe_rf_recipe_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT fk_recipe_rf_recipe_type FOREIGN KEY (type_id) REFERENCES recipe_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10991 (class 2606 OID 54441)
-- Dependencies: 9245 858 857
-- Name: fk_recipe_rА_recipe_duraton; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe
    ADD CONSTRAINT "fk_recipe_rА_recipe_duraton" FOREIGN KEY (duration_id) REFERENCES recipe_duration(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11011 (class 2606 OID 54446)
-- Dependencies: 8655 663 861
-- Name: fk_recipe_t_rf_input_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY recipe_medic_template
    ADD CONSTRAINT fk_recipe_t_rf_input_type FOREIGN KEY (input_id) REFERENCES medic_input_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11015 (class 2606 OID 54451)
-- Dependencies: 8016 437 869
-- Name: fk_referral$cure_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY referrals
    ADD CONSTRAINT "fk_referral$cure_typ" FOREIGN KEY (cure_type_oid) REFERENCES cure_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11014 (class 2606 OID 54456)
-- Dependencies: 7577 214 869
-- Name: fk_referral$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY referrals
    ADD CONSTRAINT "fk_referral$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11017 (class 2606 OID 54461)
-- Dependencies: 8527 615 870
-- Name: fk_regcert$latinnames; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY regcert
    ADD CONSTRAINT "fk_regcert$latinnames" FOREIGN KEY (latinnameid) REFERENCES latinnames(id);


--
-- TOC entry 11019 (class 2606 OID 54466)
-- Dependencies: 8363 548 871
-- Name: fk_regcert__firms; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY regcert_extrafirms
    ADD CONSTRAINT fk_regcert__firms FOREIGN KEY (firmid) REFERENCES firms(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11022 (class 2606 OID 54471)
-- Dependencies: 8684 673 875
-- Name: fk_registr_ill_diagno$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_diagnoses
    ADD CONSTRAINT "fk_registr_ill_diagno$mkb_10" FOREIGN KEY (mkb_10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11021 (class 2606 OID 54476)
-- Dependencies: 9695 992 875
-- Name: fk_registr_ill_diagno$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_diagnoses
    ADD CONSTRAINT "fk_registr_ill_diagno$sysuser" FOREIGN KEY (creator) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11026 (class 2606 OID 54481)
-- Dependencies: 8625 652 876
-- Name: fk_registr_ill_pacien$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_pacients
    ADD CONSTRAINT "fk_registr_ill_pacien$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11025 (class 2606 OID 54486)
-- Dependencies: 7577 214 876
-- Name: fk_registr_ill_pacien$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_pacients
    ADD CONSTRAINT "fk_registr_ill_pacien$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11024 (class 2606 OID 54491)
-- Dependencies: 9298 875 876
-- Name: fk_registr_ill_pacien$registr_ill_diagno; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_pacients
    ADD CONSTRAINT "fk_registr_ill_pacien$registr_ill_diagno" FOREIGN KEY (registr_ill_diagnoses) REFERENCES registr_ill_diagnoses(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11023 (class 2606 OID 54496)
-- Dependencies: 9695 992 876
-- Name: fk_registr_ill_pacien$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_ill_pacients
    ADD CONSTRAINT "fk_registr_ill_pacien$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11028 (class 2606 OID 54501)
-- Dependencies: 8684 673 877
-- Name: fk_registr_nosology_diagno$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_diagnoses
    ADD CONSTRAINT "fk_registr_nosology_diagno$mkb_10" FOREIGN KEY (mkb_10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11027 (class 2606 OID 54506)
-- Dependencies: 9695 992 877
-- Name: fk_registr_nosology_diagno$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_diagnoses
    ADD CONSTRAINT "fk_registr_nosology_diagno$sysuser" FOREIGN KEY (creator) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11032 (class 2606 OID 54511)
-- Dependencies: 8625 652 878
-- Name: fk_registr_nosology_pacien$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_pacients
    ADD CONSTRAINT "fk_registr_nosology_pacien$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11031 (class 2606 OID 54516)
-- Dependencies: 7577 214 878
-- Name: fk_registr_nosology_pacien$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_pacients
    ADD CONSTRAINT "fk_registr_nosology_pacien$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11030 (class 2606 OID 54521)
-- Dependencies: 9308 877 878
-- Name: fk_registr_nosology_pacien$registr_nosology_diagno; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_pacients
    ADD CONSTRAINT "fk_registr_nosology_pacien$registr_nosology_diagno" FOREIGN KEY (registr_nosology_diagnoses) REFERENCES registr_nosology_diagnoses(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11029 (class 2606 OID 54526)
-- Dependencies: 9695 992 878
-- Name: fk_registr_nosology_pacien$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registr_nosology_pacients
    ADD CONSTRAINT "fk_registr_nosology_pacien$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11034 (class 2606 OID 54531)
-- Dependencies: 8555 624 881
-- Name: fk_registwindow_linetype$linetype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registwindow_linetype
    ADD CONSTRAINT "fk_registwindow_linetype$linetype" FOREIGN KEY (linetype) REFERENCES linetype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11033 (class 2606 OID 54536)
-- Dependencies: 9318 880 881
-- Name: fk_registwindow_linetype$registwindow; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registwindow_linetype
    ADD CONSTRAINT "fk_registwindow_linetype$registwindow" FOREIGN KEY (registrywindow) REFERENCES registwindow(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11036 (class 2606 OID 54541)
-- Dependencies: 8841 733 885
-- Name: fk_report_parameter$param_datatype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY report_parameter
    ADD CONSTRAINT "fk_report_parameter$param_datatype" FOREIGN KEY (param_datatype) REFERENCES param_datatype(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11035 (class 2606 OID 54546)
-- Dependencies: 9339 886 885
-- Name: fk_report_parameter$report_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY report_parameter
    ADD CONSTRAINT "fk_report_parameter$report_template" FOREIGN KEY (report_template) REFERENCES report_template(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11038 (class 2606 OID 54551)
-- Dependencies: 9330 884 887
-- Name: fk_report_template_gr$report_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY report_template_group
    ADD CONSTRAINT "fk_report_template_gr$report_group" FOREIGN KEY (report_group) REFERENCES report_group(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11037 (class 2606 OID 54556)
-- Dependencies: 9339 886 887
-- Name: fk_report_template_gr$report_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY report_template_group
    ADD CONSTRAINT "fk_report_template_gr$report_template" FOREIGN KEY (report_template) REFERENCES report_template(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11040 (class 2606 OID 54561)
-- Dependencies: 8566 631 888
-- Name: fk_response_people$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY response_people
    ADD CONSTRAINT "fk_response_people$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11039 (class 2606 OID 54566)
-- Dependencies: 8150 486 888
-- Name: fk_response_people$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY response_people
    ADD CONSTRAINT "fk_response_people$post" FOREIGN KEY (post) REFERENCES post(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10962 (class 2606 OID 54571)
-- Dependencies: 9162 835 837
-- Name: fk_result_comment$profex_list; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY profex_list_resultcomment
    ADD CONSTRAINT "fk_result_comment$profex_list" FOREIGN KEY (profex_lis) REFERENCES profex_list(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10793 (class 2606 OID 54576)
-- Dependencies: 8190 500 754
-- Name: fk_retrainment$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY retrainment
    ADD CONSTRAINT "fk_retrainment$educationinstituti" FOREIGN KEY (educationinstitution) REFERENCES educationinstitution(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10792 (class 2606 OID 54581)
-- Dependencies: 7577 214 754
-- Name: fk_retrainment$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY retrainment
    ADD CONSTRAINT "fk_retrainment$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10791 (class 2606 OID 54586)
-- Dependencies: 8916 756 754
-- Name: fk_retrainment$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY retrainment
    ADD CONSTRAINT "fk_retrainment$sertificatespecial" FOREIGN KEY (sertificatespeciality) REFERENCES sertificatespeciality(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11042 (class 2606 OID 54591)
-- Dependencies: 7577 214 892
-- Name: fk_risk_factors_diabetes_second_type_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY risk_factors_diabetes_second_type_people
    ADD CONSTRAINT "fk_risk_factors_diabetes_second_type_people$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11041 (class 2606 OID 54596)
-- Dependencies: 9357 891 892
-- Name: fk_risk_factors_diabetes_second_type_people$risk_factor_diab2t; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY risk_factors_diabetes_second_type_people
    ADD CONSTRAINT "fk_risk_factors_diabetes_second_type_people$risk_factor_diab2t" FOREIGN KEY (risk_factor_diabetes_second_type) REFERENCES risk_factors_diabetes_second_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11044 (class 2606 OID 54601)
-- Dependencies: 7577 214 894
-- Name: fk_risk_factors_ibs_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY risk_factors_ibs_people
    ADD CONSTRAINT "fk_risk_factors_ibs_people$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11043 (class 2606 OID 54606)
-- Dependencies: 9365 893 894
-- Name: fk_risk_factors_ibs_people$risk_factor_ibs; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY risk_factors_ibs_people
    ADD CONSTRAINT "fk_risk_factors_ibs_people$risk_factor_ibs" FOREIGN KEY (risk_factor_ibs) REFERENCES risk_factors_ibs(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11046 (class 2606 OID 54611)
-- Dependencies: 9355 890 897
-- Name: fk_role_right$right; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY role_right
    ADD CONSTRAINT "fk_role_right$right" FOREIGN KEY ("right") REFERENCES "right"(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11045 (class 2606 OID 54616)
-- Dependencies: 9375 896 897
-- Name: fk_role_right$role; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY role_right
    ADD CONSTRAINT "fk_role_right$role" FOREIGN KEY (role) REFERENCES role(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10512 (class 2606 OID 54621)
-- Dependencies: 7822 372 487
-- Name: fk_room$building; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY room
    ADD CONSTRAINT "fk_room$building" FOREIGN KEY (building) REFERENCES building(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10511 (class 2606 OID 54626)
-- Dependencies: 8147 485 487
-- Name: fk_room$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY room
    ADD CONSTRAINT "fk_room$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 10510 (class 2606 OID 54631)
-- Dependencies: 9386 901 487
-- Name: fk_room$room_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY room
    ADD CONSTRAINT "fk_room$room_type" FOREIGN KEY (room_type) REFERENCES room_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11047 (class 2606 OID 54636)
-- Dependencies: 9386 901 900
-- Name: fk_room_history$room_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY room_history
    ADD CONSTRAINT "fk_room_history$room_type" FOREIGN KEY (room_type) REFERENCES room_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11048 (class 2606 OID 54641)
-- Dependencies: 8566 631 903
-- Name: fk_rw_accidentnotification_tmpl$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY rw_accidentnotification_tmpl
    ADD CONSTRAINT "fk_rw_accidentnotification_tmpl$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11049 (class 2606 OID 54646)
-- Dependencies: 8147 485 904
-- Name: fk_sanatorium$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sanatorium
    ADD CONSTRAINT "fk_sanatorium$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11050 (class 2606 OID 54651)
-- Dependencies: 9401 906 904
-- Name: fk_sanatorium$sanatorium_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sanatorium
    ADD CONSTRAINT "fk_sanatorium$sanatorium_type" FOREIGN KEY (resort_type_oid) REFERENCES sanatorium_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11051 (class 2606 OID 54656)
-- Dependencies: 9695 992 907
-- Name: fk_schedule$blockoperator; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT "fk_schedule$blockoperator" FOREIGN KEY (blockoperator) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11052 (class 2606 OID 54666)
-- Dependencies: 8566 631 907
-- Name: fk_schedule$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT "fk_schedule$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11053 (class 2606 OID 54671)
-- Dependencies: 7577 214 907
-- Name: fk_schedule$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT "fk_schedule$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11054 (class 2606 OID 54686)
-- Dependencies: 9695 992 907
-- Name: fk_schedule$recordoperator; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT "fk_schedule$recordoperator" FOREIGN KEY (recordoperator) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11055 (class 2606 OID 54696)
-- Dependencies: 9695 992 907
-- Name: fk_schedule$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule
    ADD CONSTRAINT "fk_schedule$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11057 (class 2606 OID 54701)
-- Dependencies: 7577 214 912
-- Name: fk_schedule_log$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_log
    ADD CONSTRAINT "fk_schedule_log$people" FOREIGN KEY (patient) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 11056 (class 2606 OID 54711)
-- Dependencies: 8163 488 912
-- Name: fk_schedule_log$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_log
    ADD CONSTRAINT "fk_schedule_log$sotr" FOREIGN KEY (operator) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11058 (class 2606 OID 54716)
-- Dependencies: 7577 214 913
-- Name: fk_schedule_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_people
    ADD CONSTRAINT "fk_schedule_people$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11059 (class 2606 OID 54726)
-- Dependencies: 8163 488 914
-- Name: fk_schedule_template$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_template
    ADD CONSTRAINT "fk_schedule_template$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11062 (class 2606 OID 54731)
-- Dependencies: 7873 388 915
-- Name: fk_schedule_template_$cabinet; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_template_detail
    ADD CONSTRAINT "fk_schedule_template_$cabinet" FOREIGN KEY (cabinet) REFERENCES cabinet(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11061 (class 2606 OID 54736)
-- Dependencies: 8150 486 915
-- Name: fk_schedule_template_$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_template_detail
    ADD CONSTRAINT "fk_schedule_template_$post" FOREIGN KEY (post) REFERENCES post(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11060 (class 2606 OID 54741)
-- Dependencies: 9441 914 915
-- Name: fk_schedule_template_$schedule_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY schedule_template_detail
    ADD CONSTRAINT "fk_schedule_template_$schedule_template" FOREIGN KEY (template_oid) REFERENCES schedule_template(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11063 (class 2606 OID 54746)
-- Dependencies: 9695 992 916
-- Name: fk_scheduleautomake$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY scheduleautomake
    ADD CONSTRAINT "fk_scheduleautomake$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11067 (class 2606 OID 54751)
-- Dependencies: 9357 891 919
-- Name: fk_scr_presc_risk_diab2type$risk_diab2type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype_risk_fact_diab_second_type
    ADD CONSTRAINT "fk_scr_presc_risk_diab2type$risk_diab2type" FOREIGN KEY (risk_factor_diabet_second_type) REFERENCES risk_factors_diabetes_second_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11066 (class 2606 OID 54756)
-- Dependencies: 9455 918 919
-- Name: fk_scr_presc_risk_diab2type$scr_presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype_risk_fact_diab_second_type
    ADD CONSTRAINT "fk_scr_presc_risk_diab2type$scr_presc" FOREIGN KEY (screening_presctype) REFERENCES screening_presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11069 (class 2606 OID 54761)
-- Dependencies: 9365 893 920
-- Name: fk_scr_presc_risk_ibs$risk_ibs; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype_risk_fact_ibs
    ADD CONSTRAINT "fk_scr_presc_risk_ibs$risk_ibs" FOREIGN KEY (risk_factor_ibs) REFERENCES risk_factors_ibs(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11068 (class 2606 OID 54766)
-- Dependencies: 9455 918 920
-- Name: fk_scr_presc_risk_ibs$scr_presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype_risk_fact_ibs
    ADD CONSTRAINT "fk_scr_presc_risk_ibs$scr_presc" FOREIGN KEY (screening_presctype) REFERENCES screening_presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11065 (class 2606 OID 54771)
-- Dependencies: 9127 825 918
-- Name: fk_screening_presctype$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype
    ADD CONSTRAINT "fk_screening_presctype$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11064 (class 2606 OID 54776)
-- Dependencies: 9451 917 918
-- Name: fk_screening_presctype$screening; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY screening_presctype
    ADD CONSTRAINT "fk_screening_presctype$screening" FOREIGN KEY (screening) REFERENCES screening(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10796 (class 2606 OID 54781)
-- Dependencies: 8190 500 755
-- Name: fk_sertificateeducati$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sertificateeducation
    ADD CONSTRAINT "fk_sertificateeducati$educationinstituti" FOREIGN KEY (educationinstitution) REFERENCES educationinstitution(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10795 (class 2606 OID 54786)
-- Dependencies: 7577 214 755
-- Name: fk_sertificateeducati$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sertificateeducation
    ADD CONSTRAINT "fk_sertificateeducati$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10794 (class 2606 OID 54791)
-- Dependencies: 8916 756 755
-- Name: fk_sertificateeducati$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sertificateeducation
    ADD CONSTRAINT "fk_sertificateeducati$sertificatespecial" FOREIGN KEY (sertificatespeciality) REFERENCES sertificatespeciality(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10797 (class 2606 OID 54796)
-- Dependencies: 8916 756 756
-- Name: fk_sertificatespecial$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sertificatespeciality
    ADD CONSTRAINT "fk_sertificatespecial$sertificatespecial" FOREIGN KEY (parent) REFERENCES sertificatespeciality(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11071 (class 2606 OID 54801)
-- Dependencies: 7752 353 921
-- Name: fk_service_bed_profil$bed_profile; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_bed_profile
    ADD CONSTRAINT "fk_service_bed_profil$bed_profile" FOREIGN KEY (bed_profile) REFERENCES bed_profile(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11070 (class 2606 OID 54806)
-- Dependencies: 9498 928 921
-- Name: fk_service_bed_profil$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_bed_profile
    ADD CONSTRAINT "fk_service_bed_profil$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11073 (class 2606 OID 54811)
-- Dependencies: 8684 673 924
-- Name: fk_service_mkb10$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_mkb10
    ADD CONSTRAINT "fk_service_mkb10$mkb_10" FOREIGN KEY (mkb_10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11072 (class 2606 OID 54816)
-- Dependencies: 9498 928 924
-- Name: fk_service_mkb10$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_mkb10
    ADD CONSTRAINT "fk_service_mkb10$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11075 (class 2606 OID 54821)
-- Dependencies: 9127 825 925
-- Name: fk_service_presctype$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_presctype
    ADD CONSTRAINT "fk_service_presctype$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11074 (class 2606 OID 54826)
-- Dependencies: 9498 928 925
-- Name: fk_service_presctype$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_presctype
    ADD CONSTRAINT "fk_service_presctype$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10237 (class 2606 OID 54831)
-- Dependencies: 8484 600 177
-- Name: fk_service_price$insurprogram; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_price
    ADD CONSTRAINT "fk_service_price$insurprogram" FOREIGN KEY (insurprogram) REFERENCES insurprogram(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10236 (class 2606 OID 54836)
-- Dependencies: 9488 926 177
-- Name: fk_service_price$service_price_cate; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_price
    ADD CONSTRAINT "fk_service_price$service_price_cate" FOREIGN KEY (service_price_category) REFERENCES service_price_category(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10235 (class 2606 OID 54841)
-- Dependencies: 9498 928 177
-- Name: fk_service_price$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_price
    ADD CONSTRAINT "fk_service_price$services" FOREIGN KEY (services) REFERENCES services(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11076 (class 2606 OID 54846)
-- Dependencies: 9498 928 927
-- Name: fk_service_required$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY service_required
    ADD CONSTRAINT "fk_service_required$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11078 (class 2606 OID 54851)
-- Dependencies: 8875 745 928
-- Name: fk_services$pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY services
    ADD CONSTRAINT "fk_services$pay_type" FOREIGN KEY (pay_type) REFERENCES pay_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11077 (class 2606 OID 54856)
-- Dependencies: 9474 922 928
-- Name: fk_services$service_group; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY services
    ADD CONSTRAINT "fk_services$service_group" FOREIGN KEY (service_group) REFERENCES service_group(oid) ON UPDATE RESTRICT;


--
-- TOC entry 11079 (class 2606 OID 54861)
-- Dependencies: 8497 603 932
-- Name: fk_sicklist$invalidgroup; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$invalidgroup" FOREIGN KEY (invalidgroup_id) REFERENCES invalidgroup(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11080 (class 2606 OID 54866)
-- Dependencies: 8566 631 932
-- Name: fk_sicklist$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11081 (class 2606 OID 54871)
-- Dependencies: 8625 652 932
-- Name: fk_sicklist$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11082 (class 2606 OID 54876)
-- Dependencies: 8684 673 932
-- Name: fk_sicklist$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$mkb_10" FOREIGN KEY (mkb10_oid) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11083 (class 2606 OID 54881)
-- Dependencies: 7577 214 932
-- Name: fk_sicklist$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$people" FOREIGN KEY (people_id) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11084 (class 2606 OID 54886)
-- Dependencies: 7577 214 932
-- Name: fk_sicklist$peoplecare1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$peoplecare1" FOREIGN KEY (carepeople1) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11085 (class 2606 OID 54891)
-- Dependencies: 7577 214 932
-- Name: fk_sicklist$peoplecare2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$peoplecare2" FOREIGN KEY (carepeople2) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11086 (class 2606 OID 54896)
-- Dependencies: 9519 932 932
-- Name: fk_sicklist$sicklist; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist" FOREIGN KEY (parent_id) REFERENCES sicklist(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11087 (class 2606 OID 54901)
-- Dependencies: 9519 932 932
-- Name: fk_sicklist$sicklist_jobsec; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_jobsec" FOREIGN KEY (jobsec_id) REFERENCES sicklist(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11088 (class 2606 OID 54906)
-- Dependencies: 9535 936 932
-- Name: fk_sicklist$sicklist_link; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_link" FOREIGN KEY (link_id1) REFERENCES sicklist_link(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11089 (class 2606 OID 54911)
-- Dependencies: 9535 936 932
-- Name: fk_sicklist$sicklist_link2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_link2" FOREIGN KEY (link_id2) REFERENCES sicklist_link(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11090 (class 2606 OID 54916)
-- Dependencies: 9537 937 932
-- Name: fk_sicklist$sicklist_other; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_other" FOREIGN KEY (other_id) REFERENCES sicklist_other(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11091 (class 2606 OID 54921)
-- Dependencies: 9542 939 932
-- Name: fk_sicklist$sicklist_reason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_reason" FOREIGN KEY (reason_id) REFERENCES sicklist_reason(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11092 (class 2606 OID 54926)
-- Dependencies: 9544 940 932
-- Name: fk_sicklist$sicklist_reason_ch; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_reason_ch" FOREIGN KEY (reason_change_id) REFERENCES sicklist_reason_change(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11093 (class 2606 OID 54931)
-- Dependencies: 9546 941 932
-- Name: fk_sicklist$sicklist_reason_do; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_reason_do" FOREIGN KEY (reason_dop_id) REFERENCES sicklist_reason_dop(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11094 (class 2606 OID 54936)
-- Dependencies: 9548 942 932
-- Name: fk_sicklist$sicklist_regimen; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sicklist_regimen" FOREIGN KEY (regimen_id) REFERENCES sicklist_regimen(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11095 (class 2606 OID 54941)
-- Dependencies: 8163 488 932
-- Name: fk_sicklist$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11096 (class 2606 OID 54946)
-- Dependencies: 9553 944 932
-- Name: fk_sicklist$status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$status" FOREIGN KEY (status) REFERENCES sicklist_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11097 (class 2606 OID 54951)
-- Dependencies: 10004 1088 932
-- Name: fk_sicklist$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist
    ADD CONSTRAINT "fk_sicklist$visit" FOREIGN KEY (visit_id) REFERENCES visit(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11098 (class 2606 OID 54956)
-- Dependencies: 7968 418 933
-- Name: fk_sicklist_form$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT "fk_sicklist_form$company" FOREIGN KEY (company) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11099 (class 2606 OID 54961)
-- Dependencies: 9530 934 933
-- Name: fk_sicklist_form$sicklist_formstate; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT "fk_sicklist_form$sicklist_formstate" FOREIGN KEY (sicklist_formstate) REFERENCES sicklist_formstate(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11100 (class 2606 OID 54966)
-- Dependencies: 9532 935 933
-- Name: fk_sicklist_form$sicklist_formtitle; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT "fk_sicklist_form$sicklist_formtitle" FOREIGN KEY (sicklist_formtitle) REFERENCES sicklist_formtitle(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11101 (class 2606 OID 54971)
-- Dependencies: 8163 488 933
-- Name: fk_sicklist_form$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT "fk_sicklist_form$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11102 (class 2606 OID 54976)
-- Dependencies: 9695 992 933
-- Name: fk_sicklist_form$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_form
    ADD CONSTRAINT "fk_sicklist_form$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11105 (class 2606 OID 54981)
-- Dependencies: 9519 932 938
-- Name: fk_sicklist_period$sicklist; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_period
    ADD CONSTRAINT "fk_sicklist_period$sicklist" FOREIGN KEY (sicklist_id) REFERENCES sicklist(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11104 (class 2606 OID 54986)
-- Dependencies: 8163 488 938
-- Name: fk_sicklist_period$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_period
    ADD CONSTRAINT "fk_sicklist_period$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11103 (class 2606 OID 54991)
-- Dependencies: 8163 488 938
-- Name: fk_sicklist_period$sotr2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sicklist_period
    ADD CONSTRAINT "fk_sicklist_period$sotr2" FOREIGN KEY (sotr_vk_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10800 (class 2606 OID 54996)
-- Dependencies: 8190 500 757
-- Name: fk_skillimprovement$educationinstituti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY skillimprovement
    ADD CONSTRAINT "fk_skillimprovement$educationinstituti" FOREIGN KEY (educationinstitution) REFERENCES educationinstitution(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10799 (class 2606 OID 55001)
-- Dependencies: 7577 214 757
-- Name: fk_skillimprovement$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY skillimprovement
    ADD CONSTRAINT "fk_skillimprovement$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10798 (class 2606 OID 55006)
-- Dependencies: 8916 756 757
-- Name: fk_skillimprovement$sertificatespecial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY skillimprovement
    ADD CONSTRAINT "fk_skillimprovement$sertificatespecial" FOREIGN KEY (sertificatespeciality) REFERENCES sertificatespeciality(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11107 (class 2606 OID 55011)
-- Dependencies: 7577 214 946
-- Name: fk_skippayment$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY skippayment
    ADD CONSTRAINT "fk_skippayment$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11106 (class 2606 OID 55016)
-- Dependencies: 9562 947 946
-- Name: fk_skippayment$skippaymentreason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY skippayment
    ADD CONSTRAINT "fk_skippayment$skippaymentreason" FOREIGN KEY (skippaymentreason) REFERENCES skippaymentreason(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11108 (class 2606 OID 55021)
-- Dependencies: 9564 948 948
-- Name: fk_smid_smid_parent; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY smid
    ADD CONSTRAINT fk_smid_smid_parent FOREIGN KEY (parent_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11109 (class 2606 OID 55026)
-- Dependencies: 7577 214 949
-- Name: fk_smscenter$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY smscenter
    ADD CONSTRAINT "fk_smscenter$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10516 (class 2606 OID 55031)
-- Dependencies: 8131 479 488
-- Name: fk_sotr$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr
    ADD CONSTRAINT "fk_sotr$district" FOREIGN KEY (district) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10515 (class 2606 OID 55036)
-- Dependencies: 8147 485 488
-- Name: fk_sotr$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr
    ADD CONSTRAINT "fk_sotr$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10514 (class 2606 OID 55041)
-- Dependencies: 8150 486 488
-- Name: fk_sotr$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr
    ADD CONSTRAINT "fk_sotr$post" FOREIGN KEY (post) REFERENCES post(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 10513 (class 2606 OID 55046)
-- Dependencies: 9695 992 488
-- Name: fk_sotr$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr
    ADD CONSTRAINT "fk_sotr$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11111 (class 2606 OID 55051)
-- Dependencies: 7629 316 953
-- Name: fk_sotr_dictionary$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_dictionary
    ADD CONSTRAINT "fk_sotr_dictionary$dictionary" FOREIGN KEY (dictionary) REFERENCES dictionary(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11110 (class 2606 OID 55056)
-- Dependencies: 8163 488 953
-- Name: fk_sotr_dictionary$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_dictionary
    ADD CONSTRAINT "fk_sotr_dictionary$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11144 (class 2606 OID 55061)
-- Dependencies: 8131 479 968
-- Name: fk_sotr_district$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotrsotrs_districtdistrict
    ADD CONSTRAINT "fk_sotr_district$district" FOREIGN KEY (district) REFERENCES district(oid) ON UPDATE RESTRICT;


--
-- TOC entry 11143 (class 2606 OID 55066)
-- Dependencies: 8163 488 968
-- Name: fk_sotr_district$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotrsotrs_districtdistrict
    ADD CONSTRAINT "fk_sotr_district$sotr" FOREIGN KEY (sotrs) REFERENCES sotr(oid) ON UPDATE RESTRICT;


--
-- TOC entry 11113 (class 2606 OID 55071)
-- Dependencies: 8425 576 954
-- Name: fk_sotr_ib_section$ib_section; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_ib_section
    ADD CONSTRAINT "fk_sotr_ib_section$ib_section" FOREIGN KEY (ib_section) REFERENCES ib_sections(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11112 (class 2606 OID 55076)
-- Dependencies: 8163 488 954
-- Name: fk_sotr_ib_section$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_ib_section
    ADD CONSTRAINT "fk_sotr_ib_section$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11115 (class 2606 OID 55081)
-- Dependencies: 8566 631 955
-- Name: fk_sotr_lpu$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_lpu
    ADD CONSTRAINT "fk_sotr_lpu$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11114 (class 2606 OID 55086)
-- Dependencies: 8163 488 955
-- Name: fk_sotr_lpu$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_lpu
    ADD CONSTRAINT "fk_sotr_lpu$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11120 (class 2606 OID 55091)
-- Dependencies: 8147 485 957
-- Name: fk_sotr_otdel$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_otdel
    ADD CONSTRAINT "fk_sotr_otdel$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11119 (class 2606 OID 55096)
-- Dependencies: 8163 488 957
-- Name: fk_sotr_otdel$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_otdel
    ADD CONSTRAINT "fk_sotr_otdel$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11121 (class 2606 OID 55101)
-- Dependencies: 8163 488 958
-- Name: fk_sotr_param$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_param
    ADD CONSTRAINT "fk_sotr_param$sotr" FOREIGN KEY (oid) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11122 (class 2606 OID 55106)
-- Dependencies: 8147 485 959
-- Name: fk_sotr_presctype$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_presctype
    ADD CONSTRAINT "fk_sotr_presctype$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11123 (class 2606 OID 55111)
-- Dependencies: 9127 825 959
-- Name: fk_sotr_presctype$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_presctype
    ADD CONSTRAINT "fk_sotr_presctype$presctype" FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11124 (class 2606 OID 55116)
-- Dependencies: 9695 992 959
-- Name: fk_sotr_presctype$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_presctype
    ADD CONSTRAINT "fk_sotr_presctype$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11127 (class 2606 OID 55121)
-- Dependencies: 7577 214 960
-- Name: fk_sotr_rating$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_rating
    ADD CONSTRAINT "fk_sotr_rating$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11126 (class 2606 OID 55126)
-- Dependencies: 8163 488 960
-- Name: fk_sotr_rating$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_rating
    ADD CONSTRAINT "fk_sotr_rating$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11129 (class 2606 OID 55131)
-- Dependencies: 9223 855 961
-- Name: fk_sotr_receptiontype$receptiontype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_receptiontype
    ADD CONSTRAINT "fk_sotr_receptiontype$receptiontype" FOREIGN KEY (receptiontype) REFERENCES receptiontype(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11128 (class 2606 OID 55136)
-- Dependencies: 8163 488 961
-- Name: fk_sotr_receptiontype$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_receptiontype
    ADD CONSTRAINT "fk_sotr_receptiontype$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11131 (class 2606 OID 55141)
-- Dependencies: 9247 859 962
-- Name: fk_sotr_recipe_lgot_t$recipe_lgot_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_recipe_lgot_type
    ADD CONSTRAINT "fk_sotr_recipe_lgot_t$recipe_lgot_type" FOREIGN KEY (recipe_lgot_type) REFERENCES recipe_lgot_type(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11130 (class 2606 OID 55146)
-- Dependencies: 8163 488 962
-- Name: fk_sotr_recipe_lgot_t$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_recipe_lgot_type
    ADD CONSTRAINT "fk_sotr_recipe_lgot_t$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11133 (class 2606 OID 55151)
-- Dependencies: 7577 214 963
-- Name: fk_sotr_review$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_review
    ADD CONSTRAINT "fk_sotr_review$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11132 (class 2606 OID 55156)
-- Dependencies: 8163 488 963
-- Name: fk_sotr_review$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_review
    ADD CONSTRAINT "fk_sotr_review$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11135 (class 2606 OID 55161)
-- Dependencies: 9355 890 964
-- Name: fk_sotr_right$right; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_right
    ADD CONSTRAINT "fk_sotr_right$right" FOREIGN KEY ("right") REFERENCES "right"(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11134 (class 2606 OID 55166)
-- Dependencies: 8163 488 964
-- Name: fk_sotr_right$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_right
    ADD CONSTRAINT "fk_sotr_right$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11137 (class 2606 OID 55171)
-- Dependencies: 9355 890 965
-- Name: fk_sotr_right_all$right; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_right_all
    ADD CONSTRAINT "fk_sotr_right_all$right" FOREIGN KEY ("right") REFERENCES "right"(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11136 (class 2606 OID 55176)
-- Dependencies: 8163 488 965
-- Name: fk_sotr_right_all$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_right_all
    ADD CONSTRAINT "fk_sotr_right_all$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11139 (class 2606 OID 55181)
-- Dependencies: 9375 896 966
-- Name: fk_sotr_role$role; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_role
    ADD CONSTRAINT "fk_sotr_role$role" FOREIGN KEY (role) REFERENCES role(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11138 (class 2606 OID 55186)
-- Dependencies: 8163 488 966
-- Name: fk_sotr_role$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_role
    ADD CONSTRAINT "fk_sotr_role$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11142 (class 2606 OID 55191)
-- Dependencies: 8425 576 967
-- Name: fk_sotr_section_ib$ib_sections; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_section_ib2
    ADD CONSTRAINT "fk_sotr_section_ib$ib_sections" FOREIGN KEY (section_ib) REFERENCES ib_sections(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11141 (class 2606 OID 55196)
-- Dependencies: 8147 485 967
-- Name: fk_sotr_section_ib$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_section_ib2
    ADD CONSTRAINT "fk_sotr_section_ib$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11140 (class 2606 OID 55201)
-- Dependencies: 9695 992 967
-- Name: fk_sotr_section_ib$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_section_ib2
    ADD CONSTRAINT "fk_sotr_section_ib$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11146 (class 2606 OID 55206)
-- Dependencies: 8412 571 969
-- Name: fk_sotrworkday$holidayreason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotrworkday
    ADD CONSTRAINT "fk_sotrworkday$holidayreason" FOREIGN KEY (holidayreason) REFERENCES holidayreason(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11145 (class 2606 OID 55211)
-- Dependencies: 9695 992 969
-- Name: fk_sotrworkday$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotrworkday
    ADD CONSTRAINT "fk_sotrworkday$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10801 (class 2606 OID 55216)
-- Dependencies: 8923 758 758
-- Name: fk_specialities$specialities; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY specialities
    ADD CONSTRAINT "fk_specialities$specialities" FOREIGN KEY (parent) REFERENCES specialities(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11149 (class 2606 OID 55221)
-- Dependencies: 8403 566 970
-- Name: fk_specialization$heal_profile_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY specialization
    ADD CONSTRAINT "fk_specialization$heal_profile_type" FOREIGN KEY (heal_profile) REFERENCES heal_profile_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11148 (class 2606 OID 55226)
-- Dependencies: 8684 673 970
-- Name: fk_specialization$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY specialization
    ADD CONSTRAINT "fk_specialization$mkb_10" FOREIGN KEY (mkb10) REFERENCES mkb_10(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11147 (class 2606 OID 55231)
-- Dependencies: 9395 904 970
-- Name: fk_specialization$sanatorium; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY specialization
    ADD CONSTRAINT "fk_specialization$sanatorium" FOREIGN KEY (sanatorium) REFERENCES sanatorium(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11150 (class 2606 OID 55236)
-- Dependencies: 8625 652 973
-- Name: fk_stacionar_card_inf$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stacionar_card_info
    ADD CONSTRAINT "fk_stacionar_card_inf$mdoc" FOREIGN KEY (oid) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11152 (class 2606 OID 55241)
-- Dependencies: 8625 652 974
-- Name: fk_stacionar_operatio$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stacionar_operations
    ADD CONSTRAINT "fk_stacionar_operatio$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11151 (class 2606 OID 55246)
-- Dependencies: 8163 488 974
-- Name: fk_stacionar_operatio$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stacionar_operations
    ADD CONSTRAINT "fk_stacionar_operatio$sotr" FOREIGN KEY (operator) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11155 (class 2606 OID 55251)
-- Dependencies: 8147 485 976
-- Name: fk_stafflist$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stafflist
    ADD CONSTRAINT "fk_stafflist$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11154 (class 2606 OID 55256)
-- Dependencies: 8150 486 976
-- Name: fk_stafflist$post; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stafflist
    ADD CONSTRAINT "fk_stafflist$post" FOREIGN KEY (post) REFERENCES post(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11153 (class 2606 OID 55261)
-- Dependencies: 9648 977 976
-- Name: fk_stafflist$stafflist_header; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY stafflist
    ADD CONSTRAINT "fk_stafflist$stafflist_header" FOREIGN KEY (stafflist_header) REFERENCES stafflist_header(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11156 (class 2606 OID 55266)
-- Dependencies: 7968 418 982
-- Name: fk_statticket$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$company" FOREIGN KEY (refer_id) REFERENCES company(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11157 (class 2606 OID 55271)
-- Dependencies: 7639 317 982
-- Name: fk_statticket$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$insurance" FOREIGN KEY (idoc_id) REFERENCES insurance(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11158 (class 2606 OID 55276)
-- Dependencies: 8147 485 982
-- Name: fk_statticket$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11159 (class 2606 OID 55281)
-- Dependencies: 265 982
-- Name: fk_statticket$reason_late_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$reason_late_type" FOREIGN KEY (reason_late) REFERENCES hosp.reason_late_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11160 (class 2606 OID 55286)
-- Dependencies: 8163 488 982
-- Name: fk_statticket$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$sotr" FOREIGN KEY (empo_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11161 (class 2606 OID 55291)
-- Dependencies: 8163 488 982
-- Name: fk_statticket$sotr2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$sotr2" FOREIGN KEY (empc_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11162 (class 2606 OID 55296)
-- Dependencies: 8163 488 982
-- Name: fk_statticket$sotr3; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$sotr3" FOREIGN KEY (sign_sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11163 (class 2606 OID 55301)
-- Dependencies: 9656 981 982
-- Name: fk_statticket$standart_med_help; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$standart_med_help" FOREIGN KEY (med_help_id) REFERENCES standart_med_help(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11164 (class 2606 OID 55306)
-- Dependencies: 9766 1018 982
-- Name: fk_statticket$tick_res; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$tick_res" FOREIGN KEY (result_id) REFERENCES tick_res(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11165 (class 2606 OID 55311)
-- Dependencies: 9769 1019 982
-- Name: fk_statticket$tick_subres; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$tick_subres" FOREIGN KEY (subresult_id) REFERENCES tick_subres(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11166 (class 2606 OID 55316)
-- Dependencies: 9783 1024 982
-- Name: fk_statticket$travm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT "fk_statticket$travm" FOREIGN KEY (trauma) REFERENCES travm(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11169 (class 2606 OID 55321)
-- Dependencies: 9379 898 987
-- Name: fk_sysrole$rolebase; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysrole
    ADD CONSTRAINT "fk_sysrole$rolebase" FOREIGN KEY (oid) REFERENCES rolebase(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11171 (class 2606 OID 55326)
-- Dependencies: 9127 825 988
-- Name: fk_system_presctempla$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY system_presctemplatedetail
    ADD CONSTRAINT "fk_system_presctempla$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11170 (class 2606 OID 55331)
-- Dependencies: 9687 989 988
-- Name: fk_system_presctempla$system_protocoltem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY system_presctemplatedetail
    ADD CONSTRAINT "fk_system_presctempla$system_protocoltem" FOREIGN KEY (system_template_oid) REFERENCES system_protocoltemplate(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11172 (class 2606 OID 55336)
-- Dependencies: 7577 214 992
-- Name: fk_sysuser$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser
    ADD CONSTRAINT "fk_sysuser$people" FOREIGN KEY (oid) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11173 (class 2606 OID 55341)
-- Dependencies: 9695 992 993
-- Name: fk_sysuser_audit$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_audit
    ADD CONSTRAINT "fk_sysuser_audit$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11175 (class 2606 OID 55346)
-- Dependencies: 8566 631 996
-- Name: fk_sysuser_lpu_right$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_lpu_right2
    ADD CONSTRAINT "fk_sysuser_lpu_right$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11174 (class 2606 OID 55351)
-- Dependencies: 9695 992 996
-- Name: fk_sysuser_lpu_right$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_lpu_right2
    ADD CONSTRAINT "fk_sysuser_lpu_right$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11177 (class 2606 OID 55356)
-- Dependencies: 8147 485 997
-- Name: fk_sysuser_otdel_righ$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_otdel_right2
    ADD CONSTRAINT "fk_sysuser_otdel_righ$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11176 (class 2606 OID 55361)
-- Dependencies: 9695 992 997
-- Name: fk_sysuser_otdel_righ$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_otdel_right2
    ADD CONSTRAINT "fk_sysuser_otdel_righ$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11179 (class 2606 OID 55366)
-- Dependencies: 8181 496 998
-- Name: fk_sysuser_pharmacy$drugstore; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_pharmacy
    ADD CONSTRAINT "fk_sysuser_pharmacy$drugstore" FOREIGN KEY (drugstore) REFERENCES drugstore(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11178 (class 2606 OID 55371)
-- Dependencies: 9695 992 998
-- Name: fk_sysuser_pharmacy$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_pharmacy
    ADD CONSTRAINT "fk_sysuser_pharmacy$sysuser" FOREIGN KEY (oid) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11183 (class 2606 OID 55376)
-- Dependencies: 9695 992 1000
-- Name: fk_sysuser_region$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_region
    ADD CONSTRAINT "fk_sysuser_region$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11182 (class 2606 OID 55381)
-- Dependencies: 10050 1101 1000
-- Name: fk_sysuser_region$vregion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_region
    ADD CONSTRAINT "fk_sysuser_region$vregion" FOREIGN KEY (region) REFERENCES vregion(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11185 (class 2606 OID 55386)
-- Dependencies: 9355 890 1001
-- Name: fk_sysuser_right$right; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_right2
    ADD CONSTRAINT "fk_sysuser_right$right" FOREIGN KEY ("right") REFERENCES "right"(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11184 (class 2606 OID 55391)
-- Dependencies: 9695 992 1001
-- Name: fk_sysuser_right$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_right2
    ADD CONSTRAINT "fk_sysuser_right$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11187 (class 2606 OID 55396)
-- Dependencies: 9375 896 1002
-- Name: fk_sysuser_role$role; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_role2
    ADD CONSTRAINT "fk_sysuser_role$role" FOREIGN KEY (role) REFERENCES role(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11186 (class 2606 OID 55401)
-- Dependencies: 9695 992 1002
-- Name: fk_sysuser_role$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_role2
    ADD CONSTRAINT "fk_sysuser_role$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11181 (class 2606 OID 55406)
-- Dependencies: 9127 825 999
-- Name: fk_sysusersysusers_pr$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_presctype
    ADD CONSTRAINT "fk_sysusersysusers_pr$presctype" FOREIGN KEY (presctypes) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11180 (class 2606 OID 55411)
-- Dependencies: 9695 992 999
-- Name: fk_sysusersysusers_pr$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuser_presctype
    ADD CONSTRAINT "fk_sysusersysusers_pr$sysuser" FOREIGN KEY (sysusers) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11189 (class 2606 OID 55416)
-- Dependencies: 9681 987 1004
-- Name: fk_sysuserusers_sysro$sysrole; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuserusers_sysroleroles
    ADD CONSTRAINT "fk_sysuserusers_sysro$sysrole" FOREIGN KEY (roles) REFERENCES sysrole(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11188 (class 2606 OID 55421)
-- Dependencies: 9695 992 1004
-- Name: fk_sysuserusers_sysro$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sysuserusers_sysroleroles
    ADD CONSTRAINT "fk_sysuserusers_sysro$sysuser" FOREIGN KEY (users) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11190 (class 2606 OID 55426)
-- Dependencies: 8566 631 1005
-- Name: fk_tablo$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tablo
    ADD CONSTRAINT "fk_tablo$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11191 (class 2606 OID 55431)
-- Dependencies: 7629 316 1006
-- Name: fk_talonresult$dictionary; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY talonresult
    ADD CONSTRAINT "fk_talonresult$dictionary" FOREIGN KEY (oid) REFERENCES dictionary(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11193 (class 2606 OID 55436)
-- Dependencies: 8566 631 1009
-- Name: fk_terminal$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT "fk_terminal$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11192 (class 2606 OID 55441)
-- Dependencies: 7538 176 1009
-- Name: fk_terminal$tkladrspr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY terminal
    ADD CONSTRAINT "fk_terminal$tkladrspr" FOREIGN KEY (city) REFERENCES tkladrspr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11196 (class 2606 OID 55446)
-- Dependencies: 8131 479 1010
-- Name: fk_territorialaccesso$district; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY territorialaccessory
    ADD CONSTRAINT "fk_territorialaccesso$district" FOREIGN KEY (dist) REFERENCES district(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11195 (class 2606 OID 55451)
-- Dependencies: 8566 631 1010
-- Name: fk_territorialaccesso$lpu; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY territorialaccessory
    ADD CONSTRAINT "fk_territorialaccesso$lpu" FOREIGN KEY (lpu) REFERENCES lpu(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11194 (class 2606 OID 55456)
-- Dependencies: 7577 214 1010
-- Name: fk_territorialaccesso$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY territorialaccessory
    ADD CONSTRAINT "fk_territorialaccesso$people" FOREIGN KEY (people) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11200 (class 2606 OID 55461)
-- Dependencies: 9081 811 1015
-- Name: fk_tib$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib
    ADD CONSTRAINT "fk_tib$presc" FOREIGN KEY (fk_id) REFERENCES presc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11199 (class 2606 OID 55466)
-- Dependencies: 9564 948 1015
-- Name: fk_tib$smeditid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib
    ADD CONSTRAINT "fk_tib$smeditid" FOREIGN KEY (smedit_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11198 (class 2606 OID 55471)
-- Dependencies: 9564 948 1015
-- Name: fk_tib$smid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib
    ADD CONSTRAINT "fk_tib$smid" FOREIGN KEY (vsmid_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11197 (class 2606 OID 55476)
-- Dependencies: 8163 488 1015
-- Name: fk_tib$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib
    ADD CONSTRAINT "fk_tib$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11204 (class 2606 OID 55481)
-- Dependencies: 8625 652 1016
-- Name: fk_tib_mdoc$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_mdoc
    ADD CONSTRAINT "fk_tib_mdoc$mdoc" FOREIGN KEY (fk_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11203 (class 2606 OID 55486)
-- Dependencies: 9564 948 1016
-- Name: fk_tib_mdoc$smeditid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_mdoc
    ADD CONSTRAINT "fk_tib_mdoc$smeditid" FOREIGN KEY (smedit_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11202 (class 2606 OID 55491)
-- Dependencies: 9564 948 1016
-- Name: fk_tib_mdoc$smid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_mdoc
    ADD CONSTRAINT "fk_tib_mdoc$smid" FOREIGN KEY (vsmid_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11201 (class 2606 OID 55496)
-- Dependencies: 8163 488 1016
-- Name: fk_tib_mdoc$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_mdoc
    ADD CONSTRAINT "fk_tib_mdoc$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11208 (class 2606 OID 55501)
-- Dependencies: 7577 214 1017
-- Name: fk_tib_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_people
    ADD CONSTRAINT "fk_tib_people$people" FOREIGN KEY (fk_id) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11207 (class 2606 OID 55506)
-- Dependencies: 9564 948 1017
-- Name: fk_tib_people$smeditid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_people
    ADD CONSTRAINT "fk_tib_people$smeditid" FOREIGN KEY (smedit_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11206 (class 2606 OID 55511)
-- Dependencies: 9564 948 1017
-- Name: fk_tib_people$smid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_people
    ADD CONSTRAINT "fk_tib_people$smid" FOREIGN KEY (vsmid_id) REFERENCES smid(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11205 (class 2606 OID 55516)
-- Dependencies: 8163 488 1017
-- Name: fk_tib_people$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tib_people
    ADD CONSTRAINT "fk_tib_people$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11209 (class 2606 OID 55521)
-- Dependencies: 8665 667 1018
-- Name: fk_tick_res$medicalcondition; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tick_res
    ADD CONSTRAINT "fk_tick_res$medicalcondition" FOREIGN KEY (medicalcondition) REFERENCES medicalcondition(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11210 (class 2606 OID 55526)
-- Dependencies: 8665 667 1019
-- Name: fk_tick_subres$medicalcondition; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tick_subres
    ADD CONSTRAINT "fk_tick_subres$medicalcondition" FOREIGN KEY (medicalcondition) REFERENCES medicalcondition(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10601 (class 2606 OID 55531)
-- Dependencies: 9952 1072 586
-- Name: fk_tinfection$tvac_test; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY infection
    ADD CONSTRAINT "fk_tinfection$tvac_test" FOREIGN KEY (def_vac_test_id) REFERENCES vac_test(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11217 (class 2606 OID 55536)
-- Dependencies: 9783 1024 1024
-- Name: fk_travm$travm; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY travm
    ADD CONSTRAINT "fk_travm$travm" FOREIGN KEY (parent_id) REFERENCES travm(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11218 (class 2606 OID 55541)
-- Dependencies: 8366 549 1025
-- Name: fk_treatmen_condition$food_form; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT "fk_treatmen_condition$food_form" FOREIGN KEY (food_form) REFERENCES food_form(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11219 (class 2606 OID 55546)
-- Dependencies: 8368 550 1025
-- Name: fk_treatmen_condition$food_repetition; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT "fk_treatmen_condition$food_repetition" FOREIGN KEY (food_repetition) REFERENCES food_repetition(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11220 (class 2606 OID 55551)
-- Dependencies: 8370 551 1025
-- Name: fk_treatmen_condition$food_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT "fk_treatmen_condition$food_type" FOREIGN KEY (food_type) REFERENCES food_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11221 (class 2606 OID 55556)
-- Dependencies: 8147 485 1025
-- Name: fk_treatmen_condition$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY treatmen_conditions
    ADD CONSTRAINT "fk_treatmen_condition$otdel" FOREIGN KEY (otdel) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11222 (class 2606 OID 55561)
-- Dependencies: 8875 745 1027
-- Name: fk_trsf$insurtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf
    ADD CONSTRAINT "fk_trsf$insurtype" FOREIGN KEY (doctype) REFERENCES pay_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11227 (class 2606 OID 55566)
-- Dependencies: 7639 317 1031
-- Name: fk_trsf_saved_reestr$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT "fk_trsf_saved_reestr$insurance" FOREIGN KEY (insur) REFERENCES insurance(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11228 (class 2606 OID 55571)
-- Dependencies: 7577 214 1031
-- Name: fk_trsf_saved_reestr$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT "fk_trsf_saved_reestr$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11229 (class 2606 OID 55576)
-- Dependencies: 9081 811 1031
-- Name: fk_trsf_saved_reestr$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT "fk_trsf_saved_reestr$presc" FOREIGN KEY (presc) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11230 (class 2606 OID 55581)
-- Dependencies: 9498 928 1031
-- Name: fk_trsf_saved_reestr$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT "fk_trsf_saved_reestr$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11231 (class 2606 OID 55586)
-- Dependencies: 9796 1027 1031
-- Name: fk_trsf_saved_reestr$trsf; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_saved_reestr
    ADD CONSTRAINT "fk_trsf_saved_reestr$trsf" FOREIGN KEY (trsf) REFERENCES trsf(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11235 (class 2606 OID 55591)
-- Dependencies: 7639 317 1032
-- Name: fk_trsf_temp_reestr$insurance; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_temp_reestr
    ADD CONSTRAINT "fk_trsf_temp_reestr$insurance" FOREIGN KEY (insur) REFERENCES insurance(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11234 (class 2606 OID 55596)
-- Dependencies: 7577 214 1032
-- Name: fk_trsf_temp_reestr$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_temp_reestr
    ADD CONSTRAINT "fk_trsf_temp_reestr$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11233 (class 2606 OID 55601)
-- Dependencies: 9127 825 1032
-- Name: fk_trsf_temp_reestr$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_temp_reestr
    ADD CONSTRAINT "fk_trsf_temp_reestr$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11232 (class 2606 OID 55606)
-- Dependencies: 9498 928 1032
-- Name: fk_trsf_temp_reestr$services; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_temp_reestr
    ADD CONSTRAINT "fk_trsf_temp_reestr$services" FOREIGN KEY (service) REFERENCES services(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11236 (class 2606 OID 55611)
-- Dependencies: 8875 745 1033
-- Name: fk_trsf_template$insurtype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_template
    ADD CONSTRAINT "fk_trsf_template$insurtype" FOREIGN KEY (doctype) REFERENCES pay_type(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11238 (class 2606 OID 55616)
-- Dependencies: 9821 1033 1034
-- Name: fk_trsf_template_colu$trsf_template; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_template_columns
    ADD CONSTRAINT "fk_trsf_template_colu$trsf_template" FOREIGN KEY (template) REFERENCES trsf_template(oid);


--
-- TOC entry 11239 (class 2606 OID 55621)
-- Dependencies: 7577 214 1036
-- Name: fk_tubercul$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tuberculez
    ADD CONSTRAINT "fk_tubercul$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11242 (class 2606 OID 55626)
-- Dependencies: 9375 896 1039
-- Name: fk_tutorial_role$role; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tutorial_role
    ADD CONSTRAINT "fk_tutorial_role$role" FOREIGN KEY (role) REFERENCES role(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11241 (class 2606 OID 55631)
-- Dependencies: 9829 1037 1039
-- Name: fk_tutorial_role$tutorial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tutorial_role
    ADD CONSTRAINT "fk_tutorial_role$tutorial" FOREIGN KEY (tutorial) REFERENCES tutorial(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11261 (class 2606 OID 55636)
-- Dependencies: 9962 1075 1058
-- Name: fk_tvac_people$tvaccin_prep; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_tvac_people$tvaccin_prep" FOREIGN KEY (vaccin_prep_id) REFERENCES vaccin_prep(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11262 (class 2606 OID 55641)
-- Dependencies: 9984 1080 1058
-- Name: fk_tvac_people$tvaccin_s_name; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_tvac_people$tvaccin_s_name" FOREIGN KEY (vaccin_shemname_id) REFERENCES vaccin_shemname(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11263 (class 2606 OID 55646)
-- Dependencies: 9980 1079 1058
-- Name: fk_tvac_people$tvaccin_shem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_tvac_people$tvaccin_shem" FOREIGN KEY (vaccin_shem_id) REFERENCES vaccin_shem(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11280 (class 2606 OID 55651)
-- Dependencies: 9921 1062 1061
-- Name: fk_tvac_plan$tvac_plan_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_tvac_plan$tvac_plan_status" FOREIGN KEY (status_id) REFERENCES vac_plan_status(oid) MATCH FULL ON UPDATE RESTRICT;


--
-- TOC entry 11291 (class 2606 OID 55656)
-- Dependencies: 9952 1072 1073
-- Name: fk_tvac_test_re$tvac_test; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_test_result
    ADD CONSTRAINT "fk_tvac_test_re$tvac_test" FOREIGN KEY (vac_test_id) REFERENCES vac_test(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11293 (class 2606 OID 55661)
-- Dependencies: 9867 1053 1075
-- Name: fk_tvaccin_prep$tvac_input_typ; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep
    ADD CONSTRAINT "fk_tvaccin_prep$tvac_input_typ" FOREIGN KEY (def_input_type_id) REFERENCES vac_input_type(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11295 (class 2606 OID 55666)
-- Dependencies: 9962 1075 1076
-- Name: fk_tvaccin_prep$tvaccin_prep; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_infection
    ADD CONSTRAINT "fk_tvaccin_prep$tvaccin_prep" FOREIGN KEY (vaccin_prep_id) REFERENCES vaccin_prep(oid) MATCH FULL ON UPDATE CASCADE;


--
-- TOC entry 11292 (class 2606 OID 55671)
-- Dependencies: 9987 1081 1075
-- Name: fk_tvaccin_prep$tvaccin_unit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep
    ADD CONSTRAINT "fk_tvaccin_prep$tvaccin_unit" FOREIGN KEY (unit_id) REFERENCES vaccin_unit(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11302 (class 2606 OID 55676)
-- Dependencies: 9962 1075 1080
-- Name: fk_tvaccin_shem$tvaccin_prep; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_shemname
    ADD CONSTRAINT "fk_tvaccin_shem$tvaccin_prep" FOREIGN KEY (vaccin_prep_id) REFERENCES vaccin_prep(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11301 (class 2606 OID 55681)
-- Dependencies: 9984 1080 1079
-- Name: fk_tvaccin_shem$tvaccin_shem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_shem
    ADD CONSTRAINT "fk_tvaccin_shem$tvaccin_shem" FOREIGN KEY (shemname_id) REFERENCES vaccin_shemname(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11245 (class 2606 OID 55686)
-- Dependencies: 9127 825 1046
-- Name: fk_user_presctemplate$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY user_presctemplatedetail
    ADD CONSTRAINT "fk_user_presctemplate$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11243 (class 2606 OID 55691)
-- Dependencies: 9695 992 1045
-- Name: fk_user_presctemplate$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY user_presctemplate
    ADD CONSTRAINT "fk_user_presctemplate$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11244 (class 2606 OID 55696)
-- Dependencies: 9843 1045 1046
-- Name: fk_user_presctemplate$user_presctemplate; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY user_presctemplatedetail
    ADD CONSTRAINT "fk_user_presctemplate$user_presctemplate" FOREIGN KEY (template) REFERENCES user_presctemplate(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11246 (class 2606 OID 55701)
-- Dependencies: 9695 992 1047
-- Name: fk_user_protocoltempl$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY user_protocoltemplate
    ADD CONSTRAINT "fk_user_protocoltempl$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11247 (class 2606 OID 55706)
-- Dependencies: 8163 488 1048
-- Name: fk_user_template$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY user_template
    ADD CONSTRAINT "fk_user_template$sotr" FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11250 (class 2606 OID 55711)
-- Dependencies: 7577 214 1049
-- Name: fk_vac_cancel$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_cancel
    ADD CONSTRAINT "fk_vac_cancel$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11249 (class 2606 OID 55716)
-- Dependencies: 8163 488 1049
-- Name: fk_vac_cancel$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_cancel
    ADD CONSTRAINT "fk_vac_cancel$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11248 (class 2606 OID 55721)
-- Dependencies: 9860 1050 1049
-- Name: fk_vac_cancel$vac_cancel_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_cancel
    ADD CONSTRAINT "fk_vac_cancel$vac_cancel_type" FOREIGN KEY (type_id) REFERENCES vac_cancel_type(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11252 (class 2606 OID 55726)
-- Dependencies: 7968 418 1051
-- Name: fk_vac_company$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_company
    ADD CONSTRAINT "fk_vac_company$company" FOREIGN KEY (oid) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11251 (class 2606 OID 55731)
-- Dependencies: 9865 1052 1051
-- Name: fk_vac_company$vac_company_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_company
    ADD CONSTRAINT "fk_vac_company$vac_company_type" FOREIGN KEY (type_id) REFERENCES vac_company_type(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11255 (class 2606 OID 55736)
-- Dependencies: 8437 586 1054
-- Name: fk_vac_kratn$infection; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_kratn
    ADD CONSTRAINT "fk_vac_kratn$infection" FOREIGN KEY (infection_id) REFERENCES infection(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11254 (class 2606 OID 55741)
-- Dependencies: 9874 1055 1054
-- Name: fk_vac_kratn$vac_kratn_name; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_kratn
    ADD CONSTRAINT "fk_vac_kratn$vac_kratn_name" FOREIGN KEY (kratn_id) REFERENCES vac_kratn_name(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11253 (class 2606 OID 55746)
-- Dependencies: 9899 1058 1054
-- Name: fk_vac_kratn$vac_people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_kratn
    ADD CONSTRAINT "fk_vac_kratn$vac_people" FOREIGN KEY (vac_people_id) REFERENCES vac_people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11257 (class 2606 OID 55751)
-- Dependencies: 7968 418 1056
-- Name: fk_vac_lpu_company$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_lpu_company
    ADD CONSTRAINT "fk_vac_lpu_company$company" FOREIGN KEY (company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11256 (class 2606 OID 55756)
-- Dependencies: 7968 418 1056
-- Name: fk_vac_lpu_company$company2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_lpu_company
    ADD CONSTRAINT "fk_vac_lpu_company$company2" FOREIGN KEY (company_lpu_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11260 (class 2606 OID 55761)
-- Dependencies: 7968 418 1057
-- Name: fk_vac_map$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_map
    ADD CONSTRAINT "fk_vac_map$company" FOREIGN KEY (company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11259 (class 2606 OID 55766)
-- Dependencies: 7968 418 1057
-- Name: fk_vac_map$company2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_map
    ADD CONSTRAINT "fk_vac_map$company2" FOREIGN KEY (own_company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11258 (class 2606 OID 55771)
-- Dependencies: 7577 214 1057
-- Name: fk_vac_map$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_map
    ADD CONSTRAINT "fk_vac_map$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11274 (class 2606 OID 55776)
-- Dependencies: 9955 1073 1060
-- Name: fk_vac_peop$vac_test2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_peop$vac_test2" FOREIGN KEY (vac_test_result_id) REFERENCES vac_test_result(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11264 (class 2606 OID 55781)
-- Dependencies: 7968 418 1058
-- Name: fk_vac_people$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$company" FOREIGN KEY (vac_company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11265 (class 2606 OID 55786)
-- Dependencies: 8147 485 1058
-- Name: fk_vac_people$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$otdel" FOREIGN KEY (dept_id) REFERENCES otdel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11266 (class 2606 OID 55791)
-- Dependencies: 7577 214 1058
-- Name: fk_vac_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11267 (class 2606 OID 55796)
-- Dependencies: 8163 488 1058
-- Name: fk_vac_people$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11268 (class 2606 OID 55801)
-- Dependencies: 8163 488 1058
-- Name: fk_vac_people$sotr2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$sotr2" FOREIGN KEY (emp_naz_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11269 (class 2606 OID 55806)
-- Dependencies: 9867 1053 1058
-- Name: fk_vac_people$vac_input_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$vac_input_type" FOREIGN KEY (input_type_id) REFERENCES vac_input_type(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11270 (class 2606 OID 55811)
-- Dependencies: 9901 1059 1058
-- Name: fk_vac_people$vac_people_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$vac_people_status" FOREIGN KEY (status_id) REFERENCES vac_people_status(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11271 (class 2606 OID 55816)
-- Dependencies: 9947 1070 1058
-- Name: fk_vac_people$vac_status_series; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$vac_status_series" FOREIGN KEY (status_series_id) REFERENCES vac_status_series(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11272 (class 2606 OID 55821)
-- Dependencies: 9976 1078 1058
-- Name: fk_vac_people$vaccin_prep_store_; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$vaccin_prep_store_" FOREIGN KEY (vaccin_prep_store_log_id) REFERENCES vaccin_prep_store_log(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11273 (class 2606 OID 55826)
-- Dependencies: 9987 1081 1058
-- Name: fk_vac_people$vaccin_unit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people
    ADD CONSTRAINT "fk_vac_people$vaccin_unit" FOREIGN KEY (unit_id) REFERENCES vaccin_unit(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11275 (class 2606 OID 55831)
-- Dependencies: 7968 418 1060
-- Name: fk_vac_people_test$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_people_test$company" FOREIGN KEY (company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11276 (class 2606 OID 55836)
-- Dependencies: 7577 214 1060
-- Name: fk_vac_people_test$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_people_test$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11277 (class 2606 OID 55841)
-- Dependencies: 8163 488 1060
-- Name: fk_vac_people_test$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_people_test$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11278 (class 2606 OID 55846)
-- Dependencies: 8163 488 1060
-- Name: fk_vac_people_test$sotr2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_people_test$sotr2" FOREIGN KEY (exec_emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11279 (class 2606 OID 55851)
-- Dependencies: 9952 1072 1060
-- Name: fk_vac_people_test$vac_test; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_people_test
    ADD CONSTRAINT "fk_vac_people_test$vac_test" FOREIGN KEY (vac_test_id) REFERENCES vac_test(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11281 (class 2606 OID 55856)
-- Dependencies: 8437 586 1061
-- Name: fk_vac_plan$infection; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_vac_plan$infection" FOREIGN KEY (infection_id) REFERENCES infection(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11282 (class 2606 OID 55861)
-- Dependencies: 7577 214 1061
-- Name: fk_vac_plan$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_vac_plan$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11283 (class 2606 OID 55866)
-- Dependencies: 8163 488 1061
-- Name: fk_vac_plan$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_vac_plan$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11284 (class 2606 OID 55871)
-- Dependencies: 9858 1049 1061
-- Name: fk_vac_plan$vac_cancel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_vac_plan$vac_cancel" FOREIGN KEY (vac_cancel_id) REFERENCES vac_cancel(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11285 (class 2606 OID 55876)
-- Dependencies: 9874 1055 1061
-- Name: fk_vac_plan$vac_kratn_name; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_plan
    ADD CONSTRAINT "fk_vac_plan$vac_kratn_name" FOREIGN KEY (kratn_id) REFERENCES vac_kratn_name(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11286 (class 2606 OID 55881)
-- Dependencies: 7968 418 1069
-- Name: fk_vac_sicness$company; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT "fk_vac_sicness$company" FOREIGN KEY (company_id) REFERENCES company(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11287 (class 2606 OID 55886)
-- Dependencies: 8437 586 1069
-- Name: fk_vac_sicness$infection; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT "fk_vac_sicness$infection" FOREIGN KEY (infection_id) REFERENCES infection(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11288 (class 2606 OID 55891)
-- Dependencies: 8684 673 1069
-- Name: fk_vac_sicness$mkb_10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT "fk_vac_sicness$mkb_10" FOREIGN KEY (icd10_id) REFERENCES mkb_10(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11289 (class 2606 OID 55896)
-- Dependencies: 7577 214 1069
-- Name: fk_vac_sicness$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT "fk_vac_sicness$people" FOREIGN KEY (people_id) REFERENCES people(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11290 (class 2606 OID 55901)
-- Dependencies: 8163 488 1069
-- Name: fk_vac_sicness$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vac_sicness
    ADD CONSTRAINT "fk_vac_sicness$sotr" FOREIGN KEY (emp_id) REFERENCES sotr(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11299 (class 2606 OID 55906)
-- Dependencies: 9971 1077 1078
-- Name: fk_vaccin_p$vaccin_p2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_store_log
    ADD CONSTRAINT "fk_vaccin_p$vaccin_p2" FOREIGN KEY (vaccin_prep_store_id) REFERENCES vaccin_prep_store(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11297 (class 2606 OID 55911)
-- Dependencies: 9950 1071 1077
-- Name: fk_vaccin_prep_store$vac_store; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_store
    ADD CONSTRAINT "fk_vaccin_prep_store$vac_store" FOREIGN KEY (store_id) REFERENCES vac_store(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11296 (class 2606 OID 55916)
-- Dependencies: 9962 1075 1077
-- Name: fk_vaccin_prep_store$vaccin_prep; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_store
    ADD CONSTRAINT "fk_vaccin_prep_store$vaccin_prep" FOREIGN KEY (vaccin_prep_id) REFERENCES vaccin_prep(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11298 (class 2606 OID 55921)
-- Dependencies: 9957 1074 1078
-- Name: fk_vaccin_prep_store_$vaccin_log_operati; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_store_log
    ADD CONSTRAINT "fk_vaccin_prep_store_$vaccin_log_operati" FOREIGN KEY (type_id) REFERENCES vaccin_log_operation(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11300 (class 2606 OID 55926)
-- Dependencies: 9874 1055 1079
-- Name: fk_vaccin_shem$vac_kratn_name; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_shem
    ADD CONSTRAINT "fk_vaccin_shem$vac_kratn_name" FOREIGN KEY (kratn_id) REFERENCES vac_kratn_name(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11303 (class 2606 OID 55931)
-- Dependencies: 9989 1084 1085
-- Name: fk_video_tutorial_links$video_tutorial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY video_tutorial_links
    ADD CONSTRAINT "fk_video_tutorial_links$video_tutorial" FOREIGN KEY (video_tutorial) REFERENCES video_tutorial(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11305 (class 2606 OID 55936)
-- Dependencies: 9375 896 1086
-- Name: fk_video_tutorial_role$role; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY video_tutorial_role
    ADD CONSTRAINT "fk_video_tutorial_role$role" FOREIGN KEY (role) REFERENCES role(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11304 (class 2606 OID 55941)
-- Dependencies: 9989 1084 1086
-- Name: fk_video_tutorial_role$video_tutorial; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY video_tutorial_role
    ADD CONSTRAINT "fk_video_tutorial_role$video_tutorial" FOREIGN KEY (video_tutorial) REFERENCES video_tutorial(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11307 (class 2606 OID 55946)
-- Dependencies: 7577 214 1087
-- Name: fk_vip_people$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vip_people
    ADD CONSTRAINT "fk_vip_people$people" FOREIGN KEY (people_oid) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11306 (class 2606 OID 55951)
-- Dependencies: 8163 488 1087
-- Name: fk_vip_people$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vip_people
    ADD CONSTRAINT "fk_vip_people$sotr" FOREIGN KEY (sotr_oid) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11310 (class 2606 OID 55956)
-- Dependencies: 8873 744 1088
-- Name: fk_visit$pay_method; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY visit
    ADD CONSTRAINT "fk_visit$pay_method" FOREIGN KEY (pay_method) REFERENCES pay_method(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11312 (class 2606 OID 55961)
-- Dependencies: 9028 793 1090
-- Name: fk_visit_portal_link$portal_mdoc_event; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY visit_portal_link
    ADD CONSTRAINT "fk_visit_portal_link$portal_mdoc_event" FOREIGN KEY (portal_mdoc_event) REFERENCES portal_mdoc_event(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11311 (class 2606 OID 55966)
-- Dependencies: 10004 1088 1090
-- Name: fk_visit_portal_link$visit; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY visit_portal_link
    ADD CONSTRAINT "fk_visit_portal_link$visit" FOREIGN KEY (visit) REFERENCES visit(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11309 (class 2606 OID 55971)
-- Dependencies: 8625 652 1088
-- Name: fk_visit_rf_visit_mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY visit
    ADD CONSTRAINT fk_visit_rf_visit_mdoc FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11308 (class 2606 OID 55976)
-- Dependencies: 8875 745 1088
-- Name: fk_visit_rf_visit_pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY visit
    ADD CONSTRAINT fk_visit_rf_visit_pay_type FOREIGN KEY (pay_type_id) REFERENCES pay_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11313 (class 2606 OID 55981)
-- Dependencies: 8625 652 1094
-- Name: fk_vk_main$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11314 (class 2606 OID 55986)
-- Dependencies: 7577 214 1094
-- Name: fk_vk_main$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$people" FOREIGN KEY (people_id) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11315 (class 2606 OID 55991)
-- Dependencies: 9695 992 1094
-- Name: fk_vk_main$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$sysuser" FOREIGN KEY (creator) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11316 (class 2606 OID 55996)
-- Dependencies: 10012 1091 1094
-- Name: fk_vk_main$vk_character; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_character" FOREIGN KEY (vk_characrer) REFERENCES vk_character(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11317 (class 2606 OID 56001)
-- Dependencies: 10018 1093 1094
-- Name: fk_vk_main$vk_conclusion; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_conclusion" FOREIGN KEY (vk_conclusion) REFERENCES vk_conclusion(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11318 (class 2606 OID 56006)
-- Dependencies: 8163 488 1094
-- Name: fk_vk_main$vk_first_mem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_first_mem" FOREIGN KEY (vk_first_mem) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11319 (class 2606 OID 56011)
-- Dependencies: 8163 488 1094
-- Name: fk_vk_main$vk_pred; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_pred" FOREIGN KEY (vk_pred) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11320 (class 2606 OID 56016)
-- Dependencies: 10038 1095 1094
-- Name: fk_vk_main$vk_result; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_result" FOREIGN KEY (vk_result) REFERENCES vk_result(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11321 (class 2606 OID 56021)
-- Dependencies: 8163 488 1094
-- Name: fk_vk_main$vk_second_mem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_second_mem" FOREIGN KEY (vk_second_mem) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11322 (class 2606 OID 56026)
-- Dependencies: 10041 1096 1094
-- Name: fk_vk_main$vk_standart; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_standart" FOREIGN KEY (vk_standart) REFERENCES vk_standart(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11323 (class 2606 OID 56031)
-- Dependencies: 10044 1097 1094
-- Name: fk_vk_main$vk_target; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_target" FOREIGN KEY (vk_target) REFERENCES vk_target(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11324 (class 2606 OID 56036)
-- Dependencies: 8163 488 1094
-- Name: fk_vk_main$vk_third_mem; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_third_mem" FOREIGN KEY (vk_thirh_mem) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11325 (class 2606 OID 56041)
-- Dependencies: 10047 1098 1094
-- Name: fk_vk_main$vk_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vk_main
    ADD CONSTRAINT "fk_vk_main$vk_type" FOREIGN KEY (vk_type) REFERENCES vk_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11327 (class 2606 OID 56046)
-- Dependencies: 9621 969 1123
-- Name: fk_workday_replace$sotrworkday; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY workday_replace
    ADD CONSTRAINT "fk_workday_replace$sotrworkday" FOREIGN KEY (sotrworkday) REFERENCES sotrworkday(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11326 (class 2606 OID 56051)
-- Dependencies: 9695 992 1123
-- Name: fk_workday_replace$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY workday_replace
    ADD CONSTRAINT "fk_workday_replace$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) MATCH FULL ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11329 (class 2606 OID 56056)
-- Dependencies: 8412 571 1124
-- Name: fk_workschedule$holidayreason; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY workschedule
    ADD CONSTRAINT "fk_workschedule$holidayreason" FOREIGN KEY (holidayreason) REFERENCES holidayreason(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11328 (class 2606 OID 56061)
-- Dependencies: 9695 992 1124
-- Name: fk_workschedule$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY workschedule
    ADD CONSTRAINT "fk_workschedule$sysuser" FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11333 (class 2606 OID 56066)
-- Dependencies: 8147 485 1127
-- Name: fk_xray_description$otdel; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_description
    ADD CONSTRAINT "fk_xray_description$otdel" FOREIGN KEY (create_otdel) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11332 (class 2606 OID 56071)
-- Dependencies: 9081 811 1127
-- Name: fk_xray_description$presc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_description
    ADD CONSTRAINT "fk_xray_description$presc" FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11331 (class 2606 OID 56076)
-- Dependencies: 8163 488 1127
-- Name: fk_xray_description$sotr; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_description
    ADD CONSTRAINT "fk_xray_description$sotr" FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- TOC entry 11330 (class 2606 OID 56081)
-- Dependencies: 9695 992 1127
-- Name: fk_xray_description$sysuser; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_description
    ADD CONSTRAINT "fk_xray_description$sysuser" FOREIGN KEY (create_sysuser) REFERENCES sysuser(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11335 (class 2606 OID 56086)
-- Dependencies: 9127 825 1130
-- Name: fk_xray_param$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_param
    ADD CONSTRAINT "fk_xray_param$presctype" FOREIGN KEY (oid) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11334 (class 2606 OID 56091)
-- Dependencies: 10118 1128 1130
-- Name: fk_xray_param$xray_dicom_reducti; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_param
    ADD CONSTRAINT "fk_xray_param$xray_dicom_reducti" FOREIGN KEY (dicom_reduction_id) REFERENCES xray_dicom_reduction(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11336 (class 2606 OID 56096)
-- Dependencies: 8625 652 1132
-- Name: fk_xray_referal$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xray_referal$mdoc" FOREIGN KEY (mdoc_id) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11337 (class 2606 OID 56101)
-- Dependencies: 10125 1131 1132
-- Name: fk_xray_referal$xray_purpose; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xray_referal$xray_purpose" FOREIGN KEY (purpose_id) REFERENCES xray_purpose(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11338 (class 2606 OID 56106)
-- Dependencies: 10140 1134 1132
-- Name: fk_xray_referal$xray_urgency; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xray_referal$xray_urgency" FOREIGN KEY (urgency_id) REFERENCES xray_urgency(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11343 (class 2606 OID 56111)
-- Dependencies: 10120 1129 1133
-- Name: fk_xray_result$xray_pacs; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_result
    ADD CONSTRAINT "fk_xray_result$xray_pacs" FOREIGN KEY (pacs_id) REFERENCES xray_pacs(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11342 (class 2606 OID 56116)
-- Dependencies: 10134 1132 1133
-- Name: fk_xray_result$xray_referral; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_result
    ADD CONSTRAINT "fk_xray_result$xray_referral" FOREIGN KEY (xray_referral_id) REFERENCES xray_referral(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11339 (class 2606 OID 56121)
-- Dependencies: 8163 488 1132
-- Name: fk_xrayreferal$sotr_create; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xrayreferal$sotr_create" FOREIGN KEY (careate_sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11340 (class 2606 OID 56126)
-- Dependencies: 8163 488 1132
-- Name: fk_xrayreferal$sotr_laborant; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xrayreferal$sotr_laborant" FOREIGN KEY (laborant_sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11341 (class 2606 OID 56131)
-- Dependencies: 8163 488 1132
-- Name: fk_xrayreferal$sotr_register; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY xray_referral
    ADD CONSTRAINT "fk_xrayreferal$sotr_register" FOREIGN KEY (register_sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11344 (class 2606 OID 56136)
-- Dependencies: 7577 214 1135
-- Name: fk_zayavka$people; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT "fk_zayavka$people" FOREIGN KEY (people) REFERENCES people(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11345 (class 2606 OID 56141)
-- Dependencies: 9127 825 1135
-- Name: fk_zayavka$presctype; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT "fk_zayavka$presctype" FOREIGN KEY (presctype) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11346 (class 2606 OID 56146)
-- Dependencies: 9420 907 1135
-- Name: fk_zayavka$schedule; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT "fk_zayavka$schedule" FOREIGN KEY (schedule) REFERENCES schedule(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11347 (class 2606 OID 56151)
-- Dependencies: 10149 1136 1135
-- Name: fk_zayavka$zayavka_status; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT "fk_zayavka$zayavka_status" FOREIGN KEY (status) REFERENCES zayavka_status(oid) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11348 (class 2606 OID 56156)
-- Dependencies: 10149 1136 1135
-- Name: fk_zayavka$zayavka_status_bid; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY zayavka
    ADD CONSTRAINT "fk_zayavka$zayavka_status_bid" FOREIGN KEY (people_bid_status) REFERENCES zayavka_status(oid) ON DELETE SET NULL;


--
-- TOC entry 10580 (class 2606 OID 56161)
-- Dependencies: 8437 586 553
-- Name: form6_cols_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY form6_cols
    ADD CONSTRAINT form6_cols_fk FOREIGN KEY (infection_id) REFERENCES infection(oid);


--
-- TOC entry 10590 (class 2606 OID 56166)
-- Dependencies: 9695 992 570
-- Name: history_mdoc_location_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY history_mdoc_location
    ADD CONSTRAINT history_mdoc_location_fk FOREIGN KEY (sysuser) REFERENCES sysuser(oid);


--
-- TOC entry 10597 (class 2606 OID 56171)
-- Dependencies: 8625 652 574
-- Name: ib_attachments_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ib_attachments
    ADD CONSTRAINT ib_attachments_fk FOREIGN KEY (mdoc) REFERENCES mdoc(id);


--
-- TOC entry 10598 (class 2606 OID 56176)
-- Dependencies: 9081 811 575
-- Name: ib_mkab_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ib_mkab
    ADD CONSTRAINT ib_mkab_fk FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10599 (class 2606 OID 56181)
-- Dependencies: 7532 175 576
-- Name: ib_sections_fk$prescfolder; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY ib_sections
    ADD CONSTRAINT "ib_sections_fk$prescfolder" FOREIGN KEY (prescfolder) REFERENCES presctypefolder(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10919 (class 2606 OID 56186)
-- Dependencies: 9081 811 812
-- Name: lab_searching_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_card
    ADD CONSTRAINT lab_searching_fk FOREIGN KEY (presc_id) REFERENCES presc(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10630 (class 2606 OID 56191)
-- Dependencies: 9127 825 613
-- Name: laboratory_reports_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY laboratory_reports
    ADD CONSTRAINT laboratory_reports_fk FOREIGN KEY (presctype_id) REFERENCES presctype(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 10661 (class 2606 OID 56196)
-- Dependencies: 8601 644 646
-- Name: lpudorovor_profile_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpudorovor_profile
    ADD CONSTRAINT lpudorovor_profile_fk FOREIGN KEY (lpudogovorid) REFERENCES lpudogovor(oid);


--
-- TOC entry 10660 (class 2606 OID 56201)
-- Dependencies: 9316 879 646
-- Name: lpudorovor_profile_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY lpudorovor_profile
    ADD CONSTRAINT lpudorovor_profile_fk1 FOREIGN KEY (profilelpuid) REFERENCES registration_profile(oid);


--
-- TOC entry 10672 (class 2606 OID 56206)
-- Dependencies: 8625 652 653
-- Name: mdoc_barcode_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_barcode
    ADD CONSTRAINT mdoc_barcode_fk FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON DELETE CASCADE;


--
-- TOC entry 10678 (class 2606 OID 56211)
-- Dependencies: 8625 652 657
-- Name: mdoc_mdoc$mdoc; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_mdoc
    ADD CONSTRAINT "mdoc_mdoc$mdoc" FOREIGN KEY (mdoc) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10677 (class 2606 OID 56216)
-- Dependencies: 8625 652 657
-- Name: mdoc_mdoc$mdoc_parent; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_mdoc
    ADD CONSTRAINT "mdoc_mdoc$mdoc_parent" FOREIGN KEY (mdoc_parent) REFERENCES mdoc(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10676 (class 2606 OID 56221)
-- Dependencies: 8940 765 657
-- Name: mdoc_mdoc$people_relation_st; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY mdoc_mdoc
    ADD CONSTRAINT "mdoc_mdoc$people_relation_st" FOREIGN KEY (people_relation_status) REFERENCES people_relation_status(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10692 (class 2606 OID 56226)
-- Dependencies: 8676 671 671
-- Name: messages_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY messages
    ADD CONSTRAINT messages_fk FOREIGN KEY (link) REFERENCES messages(oid);


--
-- TOC entry 10691 (class 2606 OID 56231)
-- Dependencies: 9127 825 671
-- Name: messages_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY messages
    ADD CONSTRAINT messages_fk1 FOREIGN KEY (oid_presctype) REFERENCES presctype(oid);


--
-- TOC entry 10723 (class 2606 OID 56236)
-- Dependencies: 8746 695 696
-- Name: nomen_desc_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen_desc
    ADD CONSTRAINT nomen_desc_fk FOREIGN KEY (nomenid) REFERENCES nomen(id);


--
-- TOC entry 10712 (class 2606 OID 56241)
-- Dependencies: 9061 806 695
-- Name: nomen_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk FOREIGN KEY (prepid) REFERENCES prep(id) ON DELETE CASCADE;


--
-- TOC entry 10713 (class 2606 OID 56246)
-- Dependencies: 8363 548 695
-- Name: nomen_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk1 FOREIGN KEY (firmid) REFERENCES firms(id) ON DELETE CASCADE;


--
-- TOC entry 10714 (class 2606 OID 56251)
-- Dependencies: 8172 493 695
-- Name: nomen_fk10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk10 FOREIGN KEY (spackid) REFERENCES drugpack(id) ON DELETE CASCADE;


--
-- TOC entry 10715 (class 2606 OID 56256)
-- Dependencies: 8172 493 695
-- Name: nomen_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk2 FOREIGN KEY (ppackid) REFERENCES drugpack(id) ON DELETE CASCADE;


--
-- TOC entry 10716 (class 2606 OID 56261)
-- Dependencies: 8619 651 695
-- Name: nomen_fk3; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk3 FOREIGN KEY (ppackmassunid) REFERENCES massunits(id) ON DELETE CASCADE;


--
-- TOC entry 10717 (class 2606 OID 56266)
-- Dependencies: 8013 436 695
-- Name: nomen_fk4; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk4 FOREIGN KEY (ppackcubunid) REFERENCES cubicunits(id) ON DELETE CASCADE;


--
-- TOC entry 10718 (class 2606 OID 56271)
-- Dependencies: 8175 494 695
-- Name: nomen_fk5; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk5 FOREIGN KEY (setid) REFERENCES drugset(id) ON DELETE CASCADE;


--
-- TOC entry 10719 (class 2606 OID 56276)
-- Dependencies: 8172 493 695
-- Name: nomen_fk6; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk6 FOREIGN KEY (upackid) REFERENCES drugpack(id) ON DELETE CASCADE;


--
-- TOC entry 10720 (class 2606 OID 56281)
-- Dependencies: 8018 438 695
-- Name: nomen_fk7; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk7 FOREIGN KEY (currid) REFERENCES currency(id) ON DELETE CASCADE;


--
-- TOC entry 10721 (class 2606 OID 56286)
-- Dependencies: 8178 495 695
-- Name: nomen_fk8; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk8 FOREIGN KEY (condid) REFERENCES drugstorcond(id) ON DELETE CASCADE;


--
-- TOC entry 10722 (class 2606 OID 56291)
-- Dependencies: 8170 492 695
-- Name: nomen_fk9; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY nomen
    ADD CONSTRAINT nomen_fk9 FOREIGN KEY (lifeid) REFERENCES druglifetime(id) ON DELETE CASCADE;


--
-- TOC entry 10757 (class 2606 OID 56296)
-- Dependencies: 8147 485 726
-- Name: otdel_region_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY otdel_region
    ADD CONSTRAINT otdel_region_fk FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10769 (class 2606 OID 56301)
-- Dependencies: 7577 214 740
-- Name: pay_agreement_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT pay_agreement_fk FOREIGN KEY (people_id) REFERENCES people(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10770 (class 2606 OID 56306)
-- Dependencies: 8875 745 740
-- Name: pay_agreement_pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT pay_agreement_pay_type FOREIGN KEY (pay_type) REFERENCES pay_type(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 10771 (class 2606 OID 56311)
-- Dependencies: 8163 488 740
-- Name: pay_agreement_sotr_close; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT pay_agreement_sotr_close FOREIGN KEY (sotr_close) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10772 (class 2606 OID 56316)
-- Dependencies: 8163 488 740
-- Name: pay_agreement_sotr_create; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_agreement
    ADD CONSTRAINT pay_agreement_sotr_create FOREIGN KEY (sotr_create) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10775 (class 2606 OID 56321)
-- Dependencies: 8861 740 742
-- Name: pay_appendix_agreement; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_appendix
    ADD CONSTRAINT pay_appendix_agreement FOREIGN KEY (agreement_id) REFERENCES pay_agreement(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10774 (class 2606 OID 56326)
-- Dependencies: 8877 746 742
-- Name: pay_appendix_pay_type; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_appendix
    ADD CONSTRAINT pay_appendix_pay_type FOREIGN KEY (pay_type_id) REFERENCES pay_type_appendix(oid) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- TOC entry 10773 (class 2606 OID 56331)
-- Dependencies: 8163 488 742
-- Name: pay_appendix_sotr_create; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY pay_appendix
    ADD CONSTRAINT pay_appendix_sotr_create FOREIGN KEY (sotr_create) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10826 (class 2606 OID 56336)
-- Dependencies: 8843 734 777
-- Name: person_setting_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY person_setting
    ADD CONSTRAINT person_setting_fk FOREIGN KEY (parametr_oid) REFERENCES parametrs_name(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10899 (class 2606 OID 56341)
-- Dependencies: 9061 806 807
-- Name: prep_actmatters_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_actmatters
    ADD CONSTRAINT prep_actmatters_fk FOREIGN KEY (prepid) REFERENCES prep(id);


--
-- TOC entry 10901 (class 2606 OID 56346)
-- Dependencies: 9061 806 808
-- Name: prep_atc_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_atc
    ADD CONSTRAINT prep_atc_fk FOREIGN KEY (prepid) REFERENCES prep(id);


--
-- TOC entry 10890 (class 2606 OID 56351)
-- Dependencies: 8363 548 806
-- Name: prep_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk FOREIGN KEY (firmid) REFERENCES firms(id);


--
-- TOC entry 10891 (class 2606 OID 56356)
-- Dependencies: 7946 412 806
-- Name: prep_fk10; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk10 FOREIGN KEY (ntfrid) REFERENCES clsntfr(id);


--
-- TOC entry 10892 (class 2606 OID 56361)
-- Dependencies: 7940 410 806
-- Name: prep_fk3; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk3 FOREIGN KEY (drugformid) REFERENCES clsdrugforms(id);


--
-- TOC entry 10893 (class 2606 OID 56366)
-- Dependencies: 8619 651 806
-- Name: prep_fk4; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk4 FOREIGN KEY (dfmassid) REFERENCES massunits(id);


--
-- TOC entry 10894 (class 2606 OID 56371)
-- Dependencies: 7979 422 806
-- Name: prep_fk5; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk5 FOREIGN KEY (dfconcid) REFERENCES concenunits(id);


--
-- TOC entry 10895 (class 2606 OID 56376)
-- Dependencies: 7599 308 806
-- Name: prep_fk6; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk6 FOREIGN KEY (dfactid) REFERENCES actunits(id);


--
-- TOC entry 10896 (class 2606 OID 56381)
-- Dependencies: 9555 945 806
-- Name: prep_fk7; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk7 FOREIGN KEY (dfsizeid) REFERENCES sizeunits(id);


--
-- TOC entry 10897 (class 2606 OID 56386)
-- Dependencies: 8167 491 806
-- Name: prep_fk8; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk8 FOREIGN KEY (dfcharid) REFERENCES drugformchars(id);


--
-- TOC entry 10898 (class 2606 OID 56391)
-- Dependencies: 9289 870 806
-- Name: prep_fk9; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep
    ADD CONSTRAINT prep_fk9 FOREIGN KEY (regcertid) REFERENCES regcert(id);


--
-- TOC entry 10903 (class 2606 OID 56396)
-- Dependencies: 9061 806 809
-- Name: prep_iic_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_iic
    ADD CONSTRAINT prep_iic_fk FOREIGN KEY (prepid) REFERENCES prep(id);


--
-- TOC entry 10906 (class 2606 OID 56401)
-- Dependencies: 9061 806 810
-- Name: prep_pharmagroup_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY prep_pharmagroup
    ADD CONSTRAINT prep_pharmagroup_fk FOREIGN KEY (prepid) REFERENCES prep(id);


--
-- TOC entry 10918 (class 2606 OID 56406)
-- Dependencies: 8163 488 812
-- Name: presc_card_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presc_card
    ADD CONSTRAINT presc_card_fk FOREIGN KEY (sotr_id) REFERENCES sotr(oid) ON UPDATE RESTRICT ON DELETE SET DEFAULT;


--
-- TOC entry 10234 (class 2606 OID 56411)
-- Dependencies: 7532 175 175
-- Name: presctypefolder_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY presctypefolder
    ADD CONSTRAINT presctypefolder_fk FOREIGN KEY (parent_id) REFERENCES presctypefolder(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11018 (class 2606 OID 56416)
-- Dependencies: 9289 870 871
-- Name: regcert_extrafirms_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY regcert_extrafirms
    ADD CONSTRAINT regcert_extrafirms_fk FOREIGN KEY (certid) REFERENCES regcert(id);


--
-- TOC entry 11016 (class 2606 OID 56421)
-- Dependencies: 9779 1022 870
-- Name: regcert_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY regcert
    ADD CONSTRAINT regcert_fk FOREIGN KEY (tradenameid) REFERENCES tradenames(id);


--
-- TOC entry 11020 (class 2606 OID 56426)
-- Dependencies: 9295 874 874
-- Name: registers_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY registers
    ADD CONSTRAINT registers_fk FOREIGN KEY (oid) REFERENCES registers(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11118 (class 2606 OID 56431)
-- Dependencies: 8647 659 956
-- Name: sotr_mdoctype_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_mdoctype
    ADD CONSTRAINT sotr_mdoctype_fk FOREIGN KEY (mdoctype_id) REFERENCES mdoc_type(id) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11117 (class 2606 OID 56436)
-- Dependencies: 9695 992 956
-- Name: sotr_mdoctype_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_mdoctype
    ADD CONSTRAINT sotr_mdoctype_fk1 FOREIGN KEY (sysuser) REFERENCES sysuser(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11116 (class 2606 OID 56441)
-- Dependencies: 8147 485 956
-- Name: sotr_mdoctype_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_mdoctype
    ADD CONSTRAINT sotr_mdoctype_fk2 FOREIGN KEY (otdel) REFERENCES otdel(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11125 (class 2606 OID 56446)
-- Dependencies: 8163 488 959
-- Name: sotr_presctype_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY sotr_presctype
    ADD CONSTRAINT sotr_presctype_fk FOREIGN KEY (sotr) REFERENCES sotr(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11167 (class 2606 OID 56451)
-- Dependencies: 10004 1088 982
-- Name: statticket_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT statticket_fk FOREIGN KEY (id) REFERENCES visit(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11168 (class 2606 OID 56456)
-- Dependencies: 8684 673 982
-- Name: statticket_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY statticket
    ADD CONSTRAINT statticket_fk1 FOREIGN KEY (die_reason_mkb_10) REFERENCES mkb_10(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11224 (class 2606 OID 56461)
-- Dependencies: 9796 1027 1029
-- Name: tk_trsf_columns$trsf; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_columns
    ADD CONSTRAINT "tk_trsf_columns$trsf" FOREIGN KEY (trsf_id) REFERENCES trsf(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11213 (class 2606 OID 56466)
-- Dependencies: 9779 1022 1021
-- Name: tn_df_limp_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tn_df_limp
    ADD CONSTRAINT tn_df_limp_fk FOREIGN KEY (tradenameid) REFERENCES tradenames(id);


--
-- TOC entry 11212 (class 2606 OID 56471)
-- Dependencies: 7940 410 1021
-- Name: tn_df_limp_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tn_df_limp
    ADD CONSTRAINT tn_df_limp_fk1 FOREIGN KEY (drugformid) REFERENCES clsdrugforms(id);


--
-- TOC entry 11211 (class 2606 OID 56476)
-- Dependencies: 7934 408 1021
-- Name: tn_df_limp_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tn_df_limp
    ADD CONSTRAINT tn_df_limp_fk2 FOREIGN KEY (limp_phgr_id) REFERENCES cls_phgr_limp(id);


--
-- TOC entry 11216 (class 2606 OID 56481)
-- Dependencies: 9779 1022 1023
-- Name: tradenames_drugforms_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tradenames_drugforms
    ADD CONSTRAINT tradenames_drugforms_fk FOREIGN KEY (tradenameid) REFERENCES tradenames(id);


--
-- TOC entry 11215 (class 2606 OID 56486)
-- Dependencies: 7940 410 1023
-- Name: tradenames_drugforms_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tradenames_drugforms
    ADD CONSTRAINT tradenames_drugforms_fk1 FOREIGN KEY (drugformid) REFERENCES clsdrugforms(id);


--
-- TOC entry 11214 (class 2606 OID 56491)
-- Dependencies: 7932 407 1023
-- Name: tradenames_drugforms_fk2; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tradenames_drugforms
    ADD CONSTRAINT tradenames_drugforms_fk2 FOREIGN KEY (mz_phgr_id) REFERENCES cls_mz_phgroup(id);


--
-- TOC entry 11223 (class 2606 OID 56496)
-- Dependencies: 9798 1028 1029
-- Name: trsf_columns_fk_all_columns; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_columns
    ADD CONSTRAINT trsf_columns_fk_all_columns FOREIGN KEY (all_columns_id) REFERENCES trsf_all_columns(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11226 (class 2606 OID 56501)
-- Dependencies: 8843 734 1030
-- Name: trsf_reminde_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_reminde
    ADD CONSTRAINT trsf_reminde_fk FOREIGN KEY (name) REFERENCES parametrs_name(oid) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- TOC entry 11225 (class 2606 OID 56506)
-- Dependencies: 9796 1027 1030
-- Name: trsf_reminde_fk1; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_reminde
    ADD CONSTRAINT trsf_reminde_fk1 FOREIGN KEY (oid) REFERENCES trsf(oid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 11237 (class 2606 OID 56511)
-- Dependencies: 9798 1028 1034
-- Name: trsf_template_columns_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY trsf_template_columns
    ADD CONSTRAINT trsf_template_columns_fk FOREIGN KEY (all_columns_id) REFERENCES trsf_all_columns(oid) ON UPDATE RESTRICT ON DELETE RESTRICT;


--
-- TOC entry 11240 (class 2606 OID 56516)
-- Dependencies: 9829 1037 1038
-- Name: tutorial_links_fk; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY tutorial_links
    ADD CONSTRAINT tutorial_links_fk FOREIGN KEY (course) REFERENCES tutorial(oid);


--
-- TOC entry 11294 (class 2606 OID 56521)
-- Dependencies: 8437 586 1076
-- Name: tvaccin_pre_infection$fk_infec; Type: FK CONSTRAINT; Schema: mir; Owner: postgres
--

ALTER TABLE ONLY vaccin_prep_infection
    ADD CONSTRAINT "tvaccin_pre_infection$fk_infec" FOREIGN KEY (vaccin_infection_id) REFERENCES infection(oid) MATCH FULL ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 11699 (class 0 OID 0)
-- Dependencies: 14
-- Name: mir; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA mir FROM PUBLIC;
REVOKE ALL ON SCHEMA mir FROM postgres;
GRANT ALL ON SCHEMA mir TO postgres;


--
-- TOC entry 11700 (class 0 OID 0)
-- Dependencies: 17
-- Name: mypacs; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA mypacs FROM PUBLIC;
REVOKE ALL ON SCHEMA mypacs FROM postgres;
GRANT ALL ON SCHEMA mypacs TO postgres;
GRANT ALL ON SCHEMA mypacs TO qq;


-- Completed on 2016-04-06 14:26:38

--
-- PostgreSQL database dump complete
--

