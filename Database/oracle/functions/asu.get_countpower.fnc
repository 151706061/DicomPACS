DROP FUNCTION ASU.GET_COUNTPOWER
/

--
-- GET_COUNTPOWER  (Function) 
--
--  Dependencies: 
--   STANDARD (Package)
--   SYS_STUB_FOR_PURITY_ANALYSIS (Package)
--   TSRTIPROOM (Table)
--   TROOM (Table)
--
CREATE OR REPLACE FUNCTION ASU."GET_COUNTPOWER" -- Created by TimurLan 4 rPutsPlan
  (pFD_VALUE IN DATE,pFK_KORPID IN NUMBER,pFK_TYPEID IN NUMBER)
 RETURN NUMBER IS
 nTemp NUMBER;
 CURSOR cAll IS
/*   SELECT SUM(GET_PALATAMESTADATE(FK_ID,pFD_VALUE)) as FN_VALUE
     FROM TROOM
    WHERE FK_KORPID > 0
      AND GET_PALATAVID(FK_ID,pFD_VALUE) > 0;*/
   SELECT SUM(FN_MESTA)
     FROM TSRTIPROOM,TROOM
    WHERE TSRTIPROOM.FK_PALATAID = TROOM.FK_ID
      AND pFD_VALUE >= TSRTIPROOM.FD_DATA1
      AND (TSRTIPROOM.FD_DATA2 >= pFD_VALUE
           OR TSRTIPROOM.FD_DATA2 IS NULL)
      AND FK_VIDID > 0
      AND FK_KORPID > 0;
 CURSOR cKorp IS
/*   SELECT SUM(GET_PALATAMESTADATE(FK_ID,pFD_VALUE)) as FN_VALUE
     FROM TROOM
    WHERE FK_KORPID = pFK_KORPID
      AND GET_PALATAVID(FK_ID,pFD_VALUE) > 0;*/
   SELECT SUM(FN_MESTA)
     FROM TSRTIPROOM,TROOM
    WHERE TSRTIPROOM.FK_PALATAID = TROOM.FK_ID
      AND pFD_VALUE >= TSRTIPROOM.FD_DATA1
      AND (TSRTIPROOM.FD_DATA2 >= pFD_VALUE
           OR TSRTIPROOM.FD_DATA2 IS NULL)
      AND FK_VIDID > 0
      AND FK_KORPID = pFK_KORPID;
 CURSOR cType IS
/*   SELECT SUM(GET_PALATAMESTADATE(FK_ID,pFD_VALUE)) as FN_VALUE
     FROM TROOM
    WHERE FK_KORPID > 0
      AND GET_PALATAVID(FK_ID,pFD_VALUE) = pFK_TYPEID;*/
   SELECT SUM(FN_MESTA)
     FROM TSRTIPROOM,TROOM
    WHERE TSRTIPROOM.FK_PALATAID = TROOM.FK_ID
      AND pFD_VALUE >= TSRTIPROOM.FD_DATA1
      AND (TSRTIPROOM.FD_DATA2 >= pFD_VALUE
           OR TSRTIPROOM.FD_DATA2 IS NULL)
      AND FK_VIDID = pFK_TYPEID
      AND FK_KORPID > 0;
 CURSOR cKorpType IS
/*   SELECT SUM(GET_PALATAMESTADATE(FK_ID,pFD_VALUE)) as FN_VALUE
     FROM TROOM
    WHERE FK_KORPID = pFK_KORPID
      AND GET_PALATAVID(FK_ID,pFD_VALUE) = pFK_TYPEID;*/
   SELECT SUM(FN_MESTA)
     FROM TSRTIPROOM,TROOM
    WHERE TSRTIPROOM.FK_PALATAID = TROOM.FK_ID
      AND pFD_VALUE >= TSRTIPROOM.FD_DATA1
      AND (TSRTIPROOM.FD_DATA2 >= pFD_VALUE
           OR TSRTIPROOM.FD_DATA2 IS NULL)
      AND FK_VIDID = pFK_TYPEID
      AND FK_KORPID = pFK_KORPID;
BEGIN
  if (pFK_KORPID = 0) AND (pFK_TYPEID = 0) then
    OPEN cAll;
    FETCH cAll INTO nTemp;
    CLOSE cAll;
  elsif (pFK_KORPID > 0) AND (pFK_TYPEID = 0) then
    OPEN cKorp;
    FETCH cKorp INTO nTemp;
    CLOSE cKorp;
  elsif (pFK_KORPID = 0) AND (pFK_TYPEID > 0) then
    OPEN cType;
    FETCH cType INTO nTemp;
    CLOSE cType;
  elsif (pFK_KORPID > 0) AND (pFK_TYPEID > 0) then
    OPEN cKorpType;
    FETCH cKorpType INTO nTemp;
    CLOSE cKorpType;
  end if;
/*  if IS_LEAPYEAR(TO_NUMBER(pFC_VALUE)) = 1 then
    nTemp := nTemp * 366;
  elsif IS_LEAPYEAR(TO_NUMBER(pFC_VALUE)) = 0 then
    nTemp := nTemp * 365;
  end if;*/
  RETURN NVL(nTemp,0);
END;
/

SHOW ERRORS;


