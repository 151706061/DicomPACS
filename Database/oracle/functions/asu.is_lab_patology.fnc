DROP FUNCTION ASU.IS_LAB_PATOLOGY
/

--
-- IS_LAB_PATOLOGY  (Function) 
--
--  Dependencies: 
--   STANDARD (Package)
--   SYS_STUB_FOR_PURITY_ANALYSIS (Package)
--   TRESAN (Table)
--   TSMID (Table)
--   GET_OWNER_FROM_SMID (Function)
--   GET_PATALOGY_LEVEL (Function)
--   GET_TYPE_FROM_SMID (Function)
--
CREATE OR REPLACE FUNCTION ASU."IS_LAB_PATOLOGY" 
  ( pFK_ID IN NUMBER,pFK_NAZID IN NUMBER,pFK_SMID IN NUMBER)
  RETURN  NUMBER IS
--
-- Возращает 1 - если это патология
--
CURSOR c(pOWNER NUMBER,pNAZID NUMBER) IS SELECT FK_ID FROM TRESAN WHERE FK_SMID IN (SELECT FK_ID FROM TSMID WHERE FK_OWNER=pOwner) AND
              GET_PATALOGY_LEVEL(FK_PATID)>0 AND FK_NAZID=pNAZID;
CURSOR cSMID(pID NUMBER) IS SELECT FL_STAT FROM TSMID WHERE FK_ID=pID;
CURSOR cPat(pID NUMBER) IS SELECT FK_PATID FROM TRESAN WHERE FK_ID=pID;
i NUMBER;
BEGIN
  OPEN cSMID(pFK_SMID);
  FETCH cSMID INTO i;
  CLOSE cSMID;
  IF I=1 THEN
    OPEN cPat(pFK_ID);
    FETCH cPat INTO i;
    CLOSE cPat;
    IF GET_PATALOGY_LEVEL(I)>0 THEN
      RETURN 1;
    ELSE
      RETURN 0;
    END IF;
  ELSE
    IF GET_TYPE_FROM_SMID(GET_OWNER_FROM_SMID(pFK_SMID))='FOLDER' THEN
      OPEN cSMID(GET_OWNER_FROM_SMID(pFK_SMID));
      FETCH cSMID INTO I;
      CLOSE cSMID;
      IF I=1 THEN
        OPEN c(GET_OWNER_FROM_SMID(pFK_SMID),pFK_NAZID);
        FETCH c INTO i;
        IF c%NOTFOUND THEN
          CLOSE c;
          RETURN 0;
        ELSE
          CLOSE c;
          RETURN 1;
        END IF;
      END IF;
    END IF;
  END IF;
  RETURN 0;
END; -- Function IS_LAB_PATOLOGY
/

SHOW ERRORS;


