DROP PACKAGE ASU.PKG_NAZ
/

--
-- PKG_NAZ  (Package) 
--
--  Dependencies: 
--   STANDARD (Package)
--
CREATE OR REPLACE PACKAGE ASU."PKG_NAZ" IS
-- MODIFICATION HISTORY
-- ROMAN M. MIKITA      26.10.2000    CREATE
-- LAST CHANGE 18.11.2003 BY TIMURLAN
PROCEDURE     DO_INSERT_TNAZAN
(PSMID IN NUMBER, PDRUN IN DATE, PKABINETID IN NUMBER, PVRACHID IN NUMBER, PISPOLID IN NUMBER,
 PNAZSOSID IN NUMBER, PPACID IN NUMBER, PPLAT IN NUMBER, PTYPE IN VARCHAR2, PFK_ID IN OUT NUMBER, PFL_INS IN NUMBER);
PROCEDURE     DO_INSERT_TNAZIS
(PSMID IN NUMBER, PDRUN IN DATE, PKABINETID IN NUMBER, PVRACHID IN NUMBER, PISPOLID IN NUMBER,
 PNAZSOSID IN NUMBER, PPACID IN NUMBER, PPLAT IN NUMBER, PTYPE IN VARCHAR2, PFK_ID IN OUT NUMBER, PFL_INS IN NUMBER);
PROCEDURE     DO_INSERT_TNAZKONS
(PSMID IN NUMBER, PDRUN IN DATE, PKABINETID IN NUMBER, PVRACHID IN NUMBER, PISPOLID IN NUMBER,
 PNAZSOSID IN NUMBER, PPACID IN NUMBER, PPLAT IN NUMBER, PTYPE IN VARCHAR2, PFK_ID IN OUT NUMBER, PFL_INS IN NUMBER);
  PROCEDURE     DO_INSERT_TNAZLECH
   (PSMID IN NUMBER, PDRUN IN DATE, PKABINETID IN NUMBER, PVRACHID IN NUMBER, PISPOLID IN NUMBER,
    PNAZSOSID IN NUMBER, PPACID IN NUMBER, PPLAT IN NUMBER, PTYPE IN VARCHAR2, PFK_ID IN OUT NUMBER, PFL_INS IN NUMBER);
  FUNCTION     DO_CHECKDAYNAZ(NPACID IN NUMBER, NSMID IN NUMBER, NFK_GRAPHID IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_KABNAME (FK_KABID IN NUMBER) RETURN  VARCHAR2;
  FUNCTION     GET_NAZCANCEL RETURN  NUMBER;
  FUNCTION     GET_NAZCOUNT ( NFK_ID IN NUMBER)  RETURN  NUMBER;
  FUNCTION     GET_NAZDONE (PFK_ID IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_NAZPRICE(PFK_ID IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_NAZSOS( PFK_ID IN NUMBER) RETURN  VARCHAR2;
  FUNCTION     GET_PACSEX( PFK_ID IN NUMBER) RETURN  VARCHAR2;
  FUNCTION     GET_YESNO( BOOLVAL IN NUMBER) RETURN  VARCHAR2;
  PROCEDURE    DELPROCFORMNAZ(PFK_ID IN NUMBER);
  FUNCTION     BUILDRESHEADER RETURN VARCHAR2;
  FUNCTION     BUILDRESEND RETURN VARCHAR2;
  FUNCTION     GET_NAZRESULT(PFK_ID IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_NAZRESULTKEK(PFK_ID IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_NAZRESULTKEK_IB(PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION     GET_NAZPARAM(PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION     GET_NAZPARAM_WITHOUT_COUNT (PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION     GET_NAZPARAM_WITHOUT_ENTER(PFK_ID IN NUMBER) RETURN VARCHAR2;  
  FUNCTION     GET_SMIDHEADER(PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION     GET_PACINFO(PFK_ID IN NUMBER) RETURN VARCHAR2;
/*
FUNCTION     GET_ZAKLHEADER RETURN VARCHAR2;
*/
  FUNCTION     GET_ZAKL(PFK_ID IN NUMBER)  RETURN VARCHAR2;
  FUNCTION     GET_PODPIS(PFK_ID IN NUMBER)  RETURN VARCHAR2;
  FUNCTION     GET_NAZVRACHID(PSOTR IN NUMBER, PKAB IN NUMBER) RETURN NUMBER;
  FUNCTION     GET_NAZCOUNT_PROC( NFK_ID IN NUMBER) RETURN NUMBER;
  FUNCTION     ISITALREADYNAZ (STABNAME IN VARCHAR2, NSMID IN NUMBER, NPACID IN NUMBER, NVRACHID IN NUMBER) RETURN NUMBER;
  PROCEDURE    DOUNNAZ(STABNAME IN VARCHAR2, NSMID IN NUMBER, NPACID IN NUMBER, NVRACHID IN NUMBER);
  PROCEDURE    DONAZPROC(NSMID IN NUMBER, DDAYNAZ IN DATE, DDAYRUN IN DATE, NROOMID IN NUMBER, ISPOLID IN NUMBER,
                       NVRACHID IN NUMBER, NSOSID IN NUMBER, NPACID IN NUMBER, BPLAT NUMBER, BINS IN NUMBER, SREMARK IN VARCHAR2,
                       PID IN NUMBER);
  FUNCTION    GET_YES_NO(PCODE IN NUMBER) RETURN VARCHAR2;
  PROCEDURE DELETE_NAZ(PFK_ID IN NUMBER);
  PROCEDURE UPDATE_NAZ_STATUS(PFK_ID IN NUMBER, PSTATUS IN NUMBER);
  FUNCTION GET_PAC_MAIN_STRAHCOMPANY(PID IN NUMBER) RETURN BOOLEAN;
  FUNCTION GET_COMPANY(PID IN NUMBER) RETURN VARCHAR2;
  FUNCTION GET_PAC_COMPANY(PID IN NUMBER) RETURN NUMBER;
  FUNCTION GET_DEFCOMPANY RETURN NUMBER;
  FUNCTION GET_SETPLAT(SMID IN NUMBER, PACID IN NUMBER) RETURN NUMBER;
  FUNCTION GET_NAZPARAM1 (PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION GET_NAZ_FIRSTNAME(PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION GET_NAZ_FULLNAME(PFK_ID IN NUMBER) RETURN VARCHAR2;
  FUNCTION get_nazcount_all (nfk_id IN NUMBER) RETURN NUMBER;
END; -- PACKAGE SPECIFICATION PKG_NAZ
/

SHOW ERRORS;


