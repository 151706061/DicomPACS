DROP PACKAGE ASU.PKG_REGIST_PACFUNC
/

--
-- PKG_REGIST_PACFUNC  (Package) 
--
--  Dependencies: 
--   STANDARD (Package)
--   TPEOPLES (Table)
--
CREATE OR REPLACE PACKAGE ASU."PKG_REGIST_PACFUNC" IS
  -- Author  : TIMURLAN
  -- Created : 22.04.2002 9:29:31
  -- LastUpdated : 13.05.2004 by TimurLan
  -- LastUpdtae for Hanty: 01.06.2006 by Nefedov S.M.
  FUNCTION ADD_VALUE(pFC_TARGET  IN VARCHAR2,
                     pFC_VALUE   IN VARCHAR2,
                     pFC_KEYWORD IN VARCHAR) RETURN VARCHAR2;
  FUNCTION REPLACE_SPACES(pFC_VALUE IN VARCHAR2) RETURN VARCHAR2;
  ---------------------------------------------------------------------------------------------
  FUNCTION GET_PEPL_ID(pFK_PACID IN BINARY_INTEGER /*,pFN_VALUE IN BINARY_INTEGER DEFAULT 0*/)
    RETURN BINARY_INTEGER;

  FUNCTION GET_PAC_IB(pFK_PACID IN BINARY_INTEGER /*,pFN_VALUE IN VARCHAR2 DEFAULT 'TKARTA'*/)
    RETURN VARCHAR2;
  FUNCTION GET_PAC_IB(pFK_IBID IN BINARY_INTEGER,
                      pFK_IBY  IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_STATUS(pFK_PACID  IN BINARY_INTEGER,
                          pFC_VALUE1 IN VARCHAR2 DEFAULT 'На лечении',
                          pFC_VALUE2 IN VARCHAR2 DEFAULT 'В архиве')
    RETURN VARCHAR2;
  FUNCTION GET_PAC_REGSTATUS(pFK_VARID  IN BINARY_INTEGER,
                             pFN_VALUE  IN BINARY_INTEGER DEFAULT 0,
                             pFC_VALUE1 IN VARCHAR2 DEFAULT 'Планируется',
                             pFC_VALUE2 IN VARCHAR2 DEFAULT 'Проживает',
                             pFC_VALUE3 IN VARCHAR2 DEFAULT 'Выписан')
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FP_TEK_COC !!!

  FUNCTION GET_PAC_VRACHID(pFK_PACID IN BINARY_INTEGER /*,pFN_VALUE IN BINARY_INTEGER DEFAULT 0*/)
    RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_VRACHFIO(pFK_PACID IN BINARY_INTEGER /*,pFN_VALUE IN BINARY_INTEGER DEFAULT 0*/)
    RETURN VARCHAR2;
  FUNCTION GET_PAC_VRACHFULLFIO(pFK_PACID IN BINARY_INTEGER /*,pFN_VALUE IN BINARY_INTEGER DEFAULT 0*/)
    RETURN VARCHAR2;

  FUNCTION GET_PAC_PUTINCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_PUTOUTCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_PUTDAYS(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_PUTSROKY(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_INCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_OUTCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_OUTCOME_REAL(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;  
  FUNCTION GET_PAC_DAYS(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_DAYS_TODATE(pFK_PACID IN BINARY_INTEGER,
                               pFD_DATE  IN DATE DEFAULT SYSDATE)
    RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_SROKY(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_PLANINCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_PLANOUTCOME(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  FUNCTION GET_PAC_PLANDAYS(pFK_PACID IN BINARY_INTEGER)
    RETURN BINARY_INTEGER;

  FUNCTION GET_PAC_PALATAID(pFK_PACID IN BINARY_INTEGER)
    RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_FCPALATA(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_KORPID(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_FCKORP(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_OTDELID(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_FCOTDEL(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_PALATAVIDID(pFK_PACID IN BINARY_INTEGER)
    RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_FCPALATAVID(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;

  FUNCTION GET_PAC_FCVID(pFK_VARID IN BINARY_INTEGER,
                         pFC_VALUE IN VARCHAR2,
                         pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_KOD2
  -- pFC_VALUE must be 'FULL' or 'SHORT'
  FUNCTION GET_PAC_FCSUBVID(pFK_VARID IN BINARY_INTEGER,
                            pFC_VALUE IN VARCHAR2,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_KOD
  -- pFC_VALUE must be 'FULL' or 'SHORT'
  FUNCTION GET_PAC_FCALLVID(pFK_VARID1 IN BINARY_INTEGER,
                            pFC_VALUE  IN VARCHAR2,
                            pFK_VARID2 IN BINARY_INTEGER DEFAULT NULL,
                            pFN_VALUE  IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID1 means FK_PACID, pFK_VARID2 := NULL /*else FK_KOD2 [znak umpersanta] FK_KOD*/
  -- pFC_VALUE must be 'FULL' or 'SHORT' !!!
  FUNCTION GET_PAC_FCPUTVID(pFK_VARID IN BINARY_INTEGER,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_PUTTYPE !!!
  FUNCTION GET_PAC_FCPRIZN(pFK_VARID IN BINARY_INTEGER,
                           pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_PRIZN !!!
  FUNCTION GET_PAC_FCSOCPOL(pFK_VARID IN BINARY_INTEGER,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_COC_POLID !!!
  FUNCTION GET_PAC_FCGROUP(pFK_VARID IN BINARY_INTEGER,
                           pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_GROUPID !!!
  FUNCTION GET_PAC_FCPACVID(pFK_VARID IN BINARY_INTEGER,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_PACVID !!!
  FUNCTION GET_PAC_FCSTOL(pFK_VARID IN BINARY_INTEGER,
                          pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_STOLID !!!
  FUNCTION GET_PAC_FCFINVID(pFK_VARID IN BINARY_INTEGER,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_FINVIDID !!!
  FUNCTION GET_PAC_FCUSLVID(pFK_VARID IN BINARY_INTEGER,
                            pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_USLVIDID !!!
  FUNCTION GET_PAC_FCUSLVIDSHORT(pFK_VARID IN BINARY_INTEGER,
                                 pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else FK_USLVIDID !!!
  FUNCTION GET_PAC_FLKUR_HRAP(pFK_PACID IN BINARY_INTEGER,
                              pFC_VALUE IN VARCHAR2) RETURN BINARY_INTEGER;
  -- pFC_VALUE must be 'FP_KUR' or 'FL_HRAP' !!!
  FUNCTION GET_PAC_FCKUR_HRAP(pFK_PACID IN BINARY_INTEGER,
                              pFC_VALUE IN VARCHAR2) RETURN VARCHAR2;
  -- pFC_VALUE must be 'FP_KUR' or 'FL_HRAP' !!!
  FUNCTION GET_PAC_FCBOOLEAN(pFK_VARID IN BINARY_INTEGER,
                             pFC_VALUE IN VARCHAR2,
                             pFN_VALUE IN BINARY_INTEGER DEFAULT 0)
    RETURN VARCHAR2;
  -- if pFN_VALUE = 1 then pFK_VARID means FK_PACID else DUAL
  -- pFC_VALUE must be in ('FL_VOV','FL_IVOV','FL_ULA','FL_PMC','FL_SKK','FL_SEO','FL_PRIVIT')!!!
  ---------------------------------------------------------------------------------------------
  -- Личные данные пациента ( = PKG_REGIST_PEPLFUNC)
  ---------------------------------------------------------------------------------------------
  FUNCTION GET_PAC_FIO(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_FULLFIO(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_ADRID(pFK_PACID IN BINARY_INTEGER,
                         pFK_TYPE  IN BINARY_INTEGER DEFAULT -1,
                         pFK_PEPLID in number default -1)
    RETURN BINARY_INTEGER;    
  FUNCTION GET_PAC_ADRSHORT(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_ADRFULL(pFK_PACID IN BINARY_INTEGER,
                           pFK_TYPE  IN BINARY_INTEGER DEFAULT -1)
    RETURN VARCHAR2;
  FUNCTION GET_PAC_ADRFULL2(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_WORKPLACE(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_SEXID(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_SEX(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_SEXLITER(pFK_PACID IN BINARY_INTEGER) RETURN CHAR;
  FUNCTION GET_PAC_AGE_NOW(pFK_PACID IN BINARY_INTEGER) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_AGE_DATE(pFK_PACID IN BINARY_INTEGER, pFD_DATE IN DATE)
    RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_AGE_MONTH_ONLY(pFK_PACID IN BINARY_INTEGER,
                                  pFD_DATE  IN DATE) RETURN BINARY_INTEGER;
  FUNCTION GET_PAC_AGE_MONTH(pFK_PACID IN BINARY_INTEGER) RETURN VARCHAR2;
  FUNCTION GET_PAC_ADRFULL_NoRegion(pFK_PACID IN BINARY_INTEGER)
    RETURN VARCHAR2;
  FUNCTION GET_PAC_BITH(pFK_PACID IN BINARY_INTEGER) RETURN DATE;
  /*###############################################################################################*/
  -- Added by Spasskiy S.N.
  -- Возвращает Возраст человека на дату
  -- %param  ppeople_id - идентификатор человека
  -- %param  pdate - дата, на которую считается возраст - по умолчанию текущая
  -- %param  PDETAIL - по умолчанию = 0 - выводиться без детализации:
  --         Возраст >= 12 мес  - кол-во полных лет
  --         1 мес =< Возраст < 12 мес  - кол-во полных месяцев
  --         Возраст < 1 мес.  - кол-во полных дней
  --         PDETAIL = 1 год + мес + день
  --         PDETAIL = 2 год + мес
  -- %return Строку с указанием возраста человека
  FUNCTION GET_AGE_STR(PBIRTH  ASU.TPEOPLES.FD_ROJD%TYPE,
                       PDATE   DATE DEFAULT SYSDATE,
                       PDETAIL NUMBER DEFAULT 0) RETURN VARCHAR2;
  FUNCTION GET_PAC_AGE_STR(PPEOPLE_ID ASU.TPEOPLES.FK_ID%TYPE,
                           PDATE      DATE DEFAULT SYSDATE,
                           PDETAIL    NUMBER DEFAULT 0) RETURN VARCHAR2;
  --05.11.2009
  -- Возвращает СНИЛС пациента
  FUNCTION GET_PAC_SNILS(pFK_PACID IN BINARY_INTEGER)
    RETURN ASU.TPEOPLES.FC_SNILS%TYPE;
  /*###############################################################################################*/

END PKG_REGIST_PACFUNC;
/

SHOW ERRORS;


DROP SYNONYM BUH.PKG_REGIST_PACFUNC
/

--
-- PKG_REGIST_PACFUNC  (Synonym) 
--
--  Dependencies: 
--   PKG_REGIST_PACFUNC (Package)
--
CREATE SYNONYM BUH.PKG_REGIST_PACFUNC FOR ASU.PKG_REGIST_PACFUNC
/


GRANT EXECUTE ON ASU.PKG_REGIST_PACFUNC TO EXCHANGE
/

GRANT EXECUTE ON ASU.PKG_REGIST_PACFUNC TO EXCH43
/

GRANT EXECUTE ON ASU.PKG_REGIST_PACFUNC TO LAB
/

