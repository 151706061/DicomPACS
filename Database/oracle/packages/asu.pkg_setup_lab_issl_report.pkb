DROP PACKAGE BODY ASU.PKG_SETUP_LAB_ISSL_REPORT
/

--
-- PKG_SETUP_LAB_ISSL_REPORT  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY ASU."PKG_SETUP_LAB_ISSL_REPORT" 
IS
  PROCEDURE DO_SAVE_ROW(pFK_ID IN NUMBER,pFK_SMID IN NUMBER,pFC_NAME IN VARCHAR2,pFC_FORMULA IN VARCHAR2,pFC_TYPE IN VARCHAR2) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    UPDATE TLABISSLSETUP SET FK_SMID=pFK_SMID,FC_NAME=pFC_NAME,FC_FORMULA=pFC_FORMUlA,FC_TYPE=pFC_TYPE WHERE FK_ID=pFK_ID;
    COMMIT;
  END;
  PROCEDURE DO_DELETE_ROW(pFK_ID IN NUMBER) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    DELETE FROM TLABISSLSETUP WHERE FN_ROW=pFK_ID;
    COMMIT;
--    DO_REARRANGE_ROWS(0,0);
  END;
  PROCEDURE DO_DELETE_COL(pFK_ID IN NUMBER) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    DELETE FROM TLABISSLSETUP WHERE FN_COL=pFK_ID;
    COMMIT;
--    DO_REARRANGE_COLS(0,0);
  END;

  PROCEDURE DO_REARRANGE_ROWS(pFN_REQNUM IN NUMBER,pFL_RESERVE IN NUMBER) IS
  CURSOR c IS SELECT DISTINCT FN_ROW FROM TLABISSLSETUP ORDER BY FN_ROW;
  PRAGMA AUTONOMOUS_TRANSACTION;
  i NUMBER;
  BEGIN
    IF pFL_RESERVE=1 THEN
      UPDATE TLABISSLSETUP SET FN_ROW=FN_ROW+1 WHERE FN_ROW>=pFN_REQNUM;
    ELSE
      FOR p IN c LOOP
        i:=c%ROWCOUNT;
        UPDATE TLABISSLSETUP SET FN_ROW=i WHERE FN_ROW=p.FN_ROW;
      END LOOP;
    END IF;
    COMMIT;
  END;

  PROCEDURE DO_REARRANGE_COLS(pFN_REQNUM IN NUMBER,pFL_RESERVE IN NUMBER) IS
  CURSOR c IS SELECT DISTINCT FN_COL FROM TLABISSLSETUP ORDER BY FN_COL;
  PRAGMA AUTONOMOUS_TRANSACTION;
  i NUMBER;
  BEGIN
    IF pFL_RESERVE=1 THEN
      UPDATE TLABISSLSETUP SET FN_COL=FN_COL+1 WHERE FN_COL>=pFN_REQNUM;
    ELSE
      FOR p IN c LOOP
        i:=c%ROWCOUNT;
        UPDATE TLABISSLSETUP SET FN_COL=i WHERE FN_COL=p.FN_COL;
      END LOOP;
    END IF;
    COMMIT;
  END;

  PROCEDURE DO_SET_ROW_NUM(pFN_ROW IN NUMBER,pFN_REQNUM IN NUMBER) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    UPDATE TLABISSLSETUP SET FN_ROW=pFN_REQNUM WHERE FN_ROW=pFN_ROW;
    COMMIT;
  END;

  PROCEDURE DO_SET_COL_NUM(pFN_COL IN NUMBER,pFN_REQNUM IN NUMBER) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    UPDATE TLABISSLSETUP SET FN_COL=pFN_REQNUM WHERE FN_COL=pFN_COL;
    COMMIT;
  END;

  PROCEDURE DO_ADD_COL IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  CURSOR c IS SELECT count(distinct FN_ROW) from TLABISSLSETUP;
  i NUMBER;
  BEGIN
    OPEN c;
    FETCH c INTO I;
    CLOSE c;
    IF i=0 then
      INSERT INTO TLABISSLSETUP(FN_ROW,FN_COL) VALUES (1,1);
    ELSE
      SELECT MAX(FN_COL) INTO i FROM TLABISSLSETUP;
      IF i IS NULL THEN
        i:=1;
      ELSE
        i:=i+1;
      END IF;
      INSERT INTO TLABISSLSETUP(FN_ROW,FN_COL) SELECT DISTINCT FN_ROW,i FROM TLABISSLSETUP;
    END IF;
    COMMIT;
  END;

  PROCEDURE DO_ADD_ROW IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  CURSOR c IS SELECT count(distinct FN_COL) from TLABISSLSETUP;
  i NUMBER;
  BEGIN
    OPEN c;
    FETCH c INTO I;
    CLOSE c;
    IF i=0 then
      INSERT INTO TLABISSLSETUP(FN_ROW,FN_COL) VALUES (1,1);
    ELSE
      SELECT MAX(FN_ROW) INTO i FROM TLABISSLSETUP;
      IF i IS NULL THEN
        i:=1;
      ELSE
        i:=i+1;
      END IF;
      INSERT INTO TLABISSLSETUP(FN_ROW,FN_COL) SELECT DISTINCT i,FN_COL FROM TLABISSLSETUP;
    END IF;
    COMMIT;
  END;
END; -- Package Body PKG_SETUP_LAB_ISSL_REPORT
/

SHOW ERRORS;


