DROP PROCEDURE ASU.BUH_GET_PACINFO
/

--
-- BUH_GET_PACINFO  (Procedure) 
--
--  Dependencies: 
--   STANDARD (Package)
--   DUAL (Synonym)
--   DBMS_STANDARD (Package)
--   SYS_STUB_FOR_PURITY_ANALYSIS (Package)
--   SEQ_TKARTA (Sequence)
--   DO_ADD_PLANS (Procedure)
--   GET_FCPALATA (Function)
--   GET_IB (Function)
--   GET_PACHRAP (Function)
--   GET_PACKUR (Function)
--   GET_PACPALATAID (Function)
--   GET_PACSUBVID (Function)
--   DO_WRITE_PERESEL (Procedure)
--   TKARTA (Table)
--   TEPID (Table)
--
CREATE OR REPLACE PROCEDURE ASU."BUH_GET_PACINFO" ( pFK_ID IN OUT NUMBER,pFK_PALATAID OUT  NUMBER,
   pFC_PALATA OUT  VARCHAR2,pFC_FAM OUT  VARCHAR2,pFC_OTCH OUT  VARCHAR2,pFC_IM OUT  VARCHAR2,
   pFK_IB OUT  VARCHAR2,pFD_ROJD OUT  DATE,pFP_SEX OUT  NUMBER,  pFC_RABOTA OUT  VARCHAR2,
   pFK_TOWNID OUT  NUMBER,pFK_COUNTRYID OUT  NUMBER,pFK_REGIONID OUT  NUMBER,pFC_ADR OUT  VARCHAR2,
   pFC_PHONE OUT  VARCHAR2,pFC_E_MAIL OUT  VARCHAR2,pFC_HTTP OUT  VARCHAR2,pFC_FAX OUT  VARCHAR2,
   pFL_VOV OUT  NUMBER,pFL_IVOV OUT  NUMBER,pFL_ULA OUT  NUMBER,pFL_PMC OUT  NUMBER,pFK_KOD OUT  NUMBER,
   pFK_KOD2 OUT  NUMBER,pFC_PUT OUT  VARCHAR2,pFN_SUM OUT  NUMBER,pFK_COC_POLID OUT  NUMBER,
   pFK_GROUPID OUT  NUMBER,pFK_PUTTYPE OUT  NUMBER,pFC_PISMO OUT VARCHAR2,pFK_PRIZNID OUT NUMBER,
   pFD_PRIB OUT DATE,pFP_TRAN OUT NUMBER,pFK_REIS OUT VARCHAR2,pFC_FROM OUT VARCHAR2,pFL_ALERG OUT NUMBER,
   pFL_MET_ROP OUT NUMBER,pFL_KUR OUT NUMBER,pFL_HRAP OUT NUMBER,pFK_MASTER IN NUMBER,pFL_SPUTNIK IN NUMBER,
   pFK_FINVIDID OUT NUMBER,pFK_SANID OUT NUMBER,pFK_USLVIDID OUT NUMBER
  )
AS
--CURSOR cVrach IS SELECT FK_VRACH,DO_VRACHFIO(FK_VRACH) from (SELECT GET_PACVRACH(pFK_ID) FK_VRACH FROM DUAL);
CURSOR cExists IS SELECT /*+ first_row*/COUNT(FK_ID) FROM TKARTA WHERE FK_ID=pFK_ID;
CURSOR cCurrPalata IS SELECT FK_PALATAID,GET_FCPALATA(FK_PALATAID) FROM (SELECT GET_PACPALATAID(pFK_ID) FK_PALATAID FROM DUAL);
CURSOR cMain IS SELECT /*+ rule*/FC_FAM,FC_OTCH,FC_IM,GET_IB(FK_ID) AS FK_IB,FD_ROJD,FP_SEX,FC_RABOTA,
            FK_TOWNID,FK_COUNTRYID,FK_REGIONID,FC_ADR,FC_PHONE,FC_E_MAIL,FC_HTTP,FC_FAX,
            FL_VOV,FL_IVOV,FL_ULA,FL_PMC,FK_KOD,FK_KOD2,FC_PUT,FN_SUM,FK_COC_POLID,FK_GROUPID,FK_PUTTYPE,
            GET_PACSUBVID(FK_KOD2,FK_KOD),FK_PRIZN,FK_FINVIDID,FK_SANID,FK_USLVIDID
            FROM TKARTA WHERE FK_ID=pFK_ID ;
CURSOR cEpid IS SELECT /*+ rule*/FD_PRIB,FP_TRAN,FK_REIS,FC_FROM,FL_ALERG,FL_MET_ROP FROM TEPID WHERE FK_PACID=pFK_ID;
nTemp NUMBER;
BEGIN
--Is this patient exists?
  OPEN cExists;
  FETCH cExists INTO nTemp;
  CLOSE cExists;
  if nTemp>1 then
    raise_application_error(-2004,'Ошибка! Найдено более одного пациента с одинаковым идентификационным номером!');
  end if;
  if nTemp=0 then
    INSERT INTO TKARTA (FK_ID,FK_MASTER,FL_SPUTNIK) values (pFK_ID,pFK_MASTER,pFL_SPUTNIK);
    SELECT SEQ_TKARTA.CURRVAL INTO pFK_ID FROM DUAL;
    update tkarta set fk_ibid = 0 where fk_id= pFK_ID;
    DO_ADD_PLANS(pFK_ID,SYSDATE,SYSDATE,SYSDATE,0,0,0);
--    DO_ADD_FAKTS(pFK_ID,SYSDATE,SYSDATE,SYSDATE,0,0,0,0);
    DO_WRITE_PERESEL(-1,pFK_ID,SYSDATE,SYSDATE,-1,0);
  end if;
--Get vrach
--  OPEN cVrach;
--  FETCH cVrach INTO pFK_VRACHID,pFC_VRACH;
--  CLOSE cVrach;
--Get Palata
  OPEN cCurrPalata;
  FETCH cCurrPalata INTO pFK_PALATAID,pFC_PALATA;
  CLOSE cCurrPalata;
  if pFK_PALATAID IS NULL then
    pFK_PALATAID:=-1;
  end if;
--Get other info
  OPEN cMain;
  FETCH cMain INTO pFC_FAM,pFC_OTCH,pFC_IM,pFK_IB,pFD_ROJD,pFP_SEX,pFC_RABOTA,
            pFK_TOWNID,pFK_COUNTRYID,pFK_REGIONID,pFC_ADR,pFC_PHONE,pFC_E_MAIL,pFC_HTTP,pFC_FAX,
            pFL_VOV,pFL_IVOV,pFL_ULA,pFL_PMC,pFK_KOD,pFK_KOD2,pFC_PUT,pFN_SUM,pFK_COC_POLID,pFK_GROUPID,
            pFK_PUTTYPE,pFC_PISMO,pFK_PRIZNID,pFK_FINVIDID,pFK_SANID,pFK_USLVIDID;
  CLOSE cMain;
--Info from epidanamnezzz...
  OPEN cEpid;
  FETCH cEpid INTO pFD_PRIB,pFP_TRAN,pFK_REIS,pFC_FROM,pFL_ALERG,pFL_MET_ROP;
  CLOSE cEpid;
  pFL_KUR:=GET_PACKUR(pFK_ID);
  if pFL_KUR>1 then
    pFL_KUR:=1;
  elsif pFL_KUR IS NULL then
    pFL_KUR:=0;
  end if;
  pFL_HRAP:=GET_PACHRAP(pFK_ID);
  if pFL_HRAP IS NULL then
    pFL_HRAP:=0;
  end if;
END;
/

SHOW ERRORS;


