ALTER TABLE ASU.TADRESS
 DROP PRIMARY KEY CASCADE
/

DROP TABLE ASU.TADRESS CASCADE CONSTRAINTS
/

--
-- TADRESS  (Table) 
--
CREATE TABLE ASU.TADRESS
(
  FK_ID          NUMBER(15)                     NOT NULL,
  FK_COUNTRYID   NUMBER(15)                     DEFAULT -1,
  FK_REGIONID    NUMBER(15)                     DEFAULT -1,
  FK_TOWNID      NUMBER(15)                     DEFAULT -1,
  FK_STREETID    NUMBER(15)                     DEFAULT -1,
  FK_PACID       NUMBER(15)                     DEFAULT -1                    NOT NULL,
  FK_TYPE        NUMBER(15)                     DEFAULT -1                    NOT NULL,
  FL_AS_ANOTHER  NUMBER                         DEFAULT 0,
  FK_RAIONID     NUMBER(15)                     DEFAULT -1,
  FC_ADR         VARCHAR2(230 BYTE),
  FK_INTOWNID    NUMBER(15)                     DEFAULT -1,
  FC_HOUSE       VARCHAR2(10 BYTE),
  FC_KORPUS      VARCHAR2(4 BYTE),
  FC_KVARTIRA    VARCHAR2(4 BYTE),
  FK_KLADR       NUMBER,
  FD_DATE        DATE,
  FK_APPSOTRID   NUMBER
)
TABLESPACE USR
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          20368K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON TABLE ASU.TADRESS IS 'Таблица адресов людей by TimurLan '
/

COMMENT ON COLUMN ASU.TADRESS.FK_ID IS 'SEQUENCE=[SEQ_TADRESS]'
/

COMMENT ON COLUMN ASU.TADRESS.FK_COUNTRYID IS 'TCOUNTRY.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FK_REGIONID IS 'TREGION.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FK_TOWNID IS 'TTOWN.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FK_STREETID IS 'TSTREET.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FK_PACID IS 'TPEOPLES.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FK_TYPE IS 'TADRTYPRE.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FL_AS_ANOTHER IS 'нет данных'
/

COMMENT ON COLUMN ASU.TADRESS.FK_RAIONID IS 'TRAION.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FC_ADR IS 'почтовый адрес'
/

COMMENT ON COLUMN ASU.TADRESS.FK_INTOWNID IS 'TINTOWN.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FC_HOUSE IS 'номер дома'
/

COMMENT ON COLUMN ASU.TADRESS.FC_KORPUS IS 'номер корпуса'
/

COMMENT ON COLUMN ASU.TADRESS.FC_KVARTIRA IS 'номер квартиры'
/

COMMENT ON COLUMN ASU.TADRESS.FK_KLADR IS 'Код КЛАДР TKLADR.FK_ID'
/

COMMENT ON COLUMN ASU.TADRESS.FD_DATE IS 'Дата изменения адреса'
/

COMMENT ON COLUMN ASU.TADRESS.FK_APPSOTRID IS 'Сотрудник, изменивший адрес LOGIN.TAPPSOTR.FK_ID'
/


--
-- TADRESS_BY_ID  (Index) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE UNIQUE INDEX ASU.TADRESS_BY_ID ON ASU.TADRESS
(FK_ID)
NOLOGGING
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3328K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


--
-- TADRESS_BY_KLADRID  (Index) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE INDEX ASU.TADRESS_BY_KLADRID ON ASU.TADRESS
(FK_KLADR)
NOLOGGING
TABLESPACE USR
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


--
-- TADRESS_BY_PACID  (Index) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE INDEX ASU.TADRESS_BY_PACID ON ASU.TADRESS
(FK_PACID)
NOLOGGING
TABLESPACE INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3872K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


--
-- TADRESS_BEFORE_INSERT  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_BEFORE_INSERT" 
 BEFORE 
 INSERT
 ON ASU.TADRESS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
 nAppSotr NUMBER;
BEGIN
-- Added 20081003 by Linnikov
 SELECT TO_NUMBER(NVL(CLIENT_INFO, '0'))
   INTO nAppSotr
   FROM v$session
  WHERE AUDSID = USERENV('SESSIONID');

 SELECT SEQ_TAdress.NEXTVAL, SYSDATE, nAppSotr
   INTO :NEW.FK_ID, :NEW.FD_DATE, :NEW.FK_APPSOTRID
   FROM DUAL;
   /*SELECT SEQ_TAdress.NEXTVAL
   INTO :NEW.FK_ID
   FROM DUAL;*/
   
   NULL;
END;
/
SHOW ERRORS;


--
-- TADRESS_LOG  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_LOG" 
 AFTER
 INSERT OR DELETE OR UPDATE
 ON ASU.TADRESS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
  nTemp NUMBER;
BEGIN
  if INSERTING then
    PKG_LOG.Do_log('TADRESS', 'FK_ID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_id), :new.fk_id);
    PKG_LOG.Do_log('TADRESS', 'FK_PACID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_pacid), :new.fk_id);
  elsif DELETING then
    PKG_LOG.Do_log('TADRESS', 'FK_ID', 'DELETE', PKG_LOG.GET_VALUE(:old.fk_id), null, :old.fk_id);
    PKG_LOG.Do_log('TADRESS', 'FK_PACID', 'DELETE', PKG_LOG.GET_VALUE(:old.fk_pacid), null, :old.fk_id);
  end if;
  null;
END TADRESS_LOG;
/
SHOW ERRORS;


--
-- TADRESS_BEFORE_UPDATE  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_BEFORE_UPDATE" 
BEFORE UPDATE
ON ASU.TADRESS REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
 nAppSotr NUMBER;
BEGIN
-- Added 20081003 by Linnikov
 SELECT TO_NUMBER(NVL(CLIENT_INFO, '0'))
   INTO nAppSotr
   FROM v$session
  WHERE AUDSID = USERENV('SESSIONID');

 SELECT SYSDATE, nAppSotr
   INTO :NEW.FD_DATE, :NEW.FK_APPSOTRID
   FROM DUAL;
END;
/
SHOW ERRORS;


--
-- TADRESS_A_DEL  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_A_DEL"
 AFTER DELETE
 ON ASU.TADRESS  REFERENCING OLD AS OLD
 FOR EACH ROW
DECLARE
 vCnt     NUMBER;
BEGIN
 SELECT COALESCE(MAX(FK_ID), -1979) INTO vCnt FROM ASU.TEXP_TADRESS WHERE FK_ADRID = :OLD.FK_ID;

 IF vCnt <> -1979
 THEN
  UPDATE ASU.TEXP_TADRESS
  SET FD_LAST_UPDATE = SYSDATE, FP_DEL = 1
  WHERE FK_ADRID = :NEW.FK_ID;
 END IF;
End;
/
SHOW ERRORS;


--
-- TADRESS_A_INS  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_A_INS"
 AFTER INSERT
 ON ASU.TADRESS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
BEGIN
  --INSERT INTO ASU.TEXP_TADRESS(FK_ADRID)
  --VALUES(:NEW.FK_ID);
  null;
End;
/
SHOW ERRORS;


--
-- TADRESS_A_UPDT  (Trigger) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE OR REPLACE TRIGGER ASU."TADRESS_A_UPDT"
 AFTER UPDATE
 ON ASU.TADRESS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
 vCnt     NUMBER;
BEGIN
 SELECT COALESCE(MAX(FK_ID), -1979) INTO vCnt FROM ASU.TEXP_TADRESS WHERE FK_ADRID = :NEW.FK_ID;

 /*IF vCnt = -1979
 THEN
  INSERT INTO ASU.TEXP_TADRESS(FK_ADRID)
  VALUES(:NEW.FK_ID);
 ELSE
  UPDATE ASU.TEXP_TADRESS
  SET FD_LAST_UPDATE = SYSDATE
  WHERE FK_ADRID = :NEW.FK_ID;
 END IF;*/
End;
/
SHOW ERRORS;


DROP SYNONYM BUH.TADRESS
/

--
-- TADRESS  (Synonym) 
--
--  Dependencies: 
--   TADRESS (Table)
--
CREATE SYNONYM BUH.TADRESS FOR ASU.TADRESS
/


-- 
-- Non Foreign Key Constraints for Table TADRESS 
-- 
ALTER TABLE ASU.TADRESS ADD (
  CONSTRAINT TADRESS_BY_ID
 PRIMARY KEY
 (FK_ID)
    USING INDEX 
    TABLESPACE INDX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          3328K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ))
/

GRANT DELETE, INDEX, INSERT, REFERENCES, SELECT, UPDATE ON ASU.TADRESS TO EXCHANGE
/

GRANT DELETE, INDEX, INSERT, REFERENCES, SELECT, UPDATE ON ASU.TADRESS TO EXCH43
/

