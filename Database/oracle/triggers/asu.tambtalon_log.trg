DROP TRIGGER ASU.TAMBTALON_LOG
/

--
-- TAMBTALON_LOG  (Trigger) 
--
--  Dependencies: 
--   STANDARD (Package)
--   DBMS_STANDARD (Package)
--   TAMBTALON (Table)
--   PKG_LOG (Package)
--
CREATE OR REPLACE TRIGGER ASU."TAMBTALON_LOG" 
 AFTER
  INSERT OR DELETE OR UPDATE
 ON tambtalon
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
BEGIN
 --created by A.Nakorjakov 270308
  if INSERTING then
    PKG_LOG.Do_log('TAMBTALON', 'FK_ID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_id), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_SOTRID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_sotrid), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FD_OPENED', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fd_opened), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_AMBID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_ambid), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FN_SOS', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fn_sos), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_OPLATA', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_oplata), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_SERVPLACE', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_servplace), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_REASON', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_reason), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_DISP', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_disp), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_TRAVMA', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_travma), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_DIAGMAIN', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_diagmain), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_INSURANCEID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_insuranceid), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_UCHID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_uchid), :new.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_DISPCARDID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.fk_dispcardid), :new.fk_id);
  elsif DELETING then
      PKG_LOG.Do_log('TAMBTALON', 'FK_ID', 'DELETE', PKG_LOG.GET_VALUE(:old.fk_id), null, :old.fk_id);
  elsif UPDATING then
    PKG_LOG.Do_log('TAMBTALON', 'FK_ID', 'UPDATE', PKG_LOG.GET_VALUE(:old.fk_id), PKG_LOG.GET_VALUE(:new.fk_id), :old.fk_id);
    PKG_LOG.Do_log('TAMBTALON', 'FK_AMBID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_AMBID), PKG_LOG.GET_VALUE(:new.FK_AMBID), :old.fk_id);
    if UPDATING ('FK_SOTRID') AND PKG_LOG.GET_VALUE(:old.FK_SOTRID) <> PKG_LOG.GET_VALUE(:new.FK_SOTRID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_SOTRID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_SOTRID), PKG_LOG.GET_VALUE(:new.FK_SOTRID), :old.fk_id);
    end if;
    if UPDATING ('FK_ASISTENTID') AND PKG_LOG.GET_VALUE(:old.FK_ASISTENTID) <> PKG_LOG.GET_VALUE(:new.FK_ASISTENTID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_ASISTENTID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_ASISTENTID), PKG_LOG.GET_VALUE(:new.FK_ASISTENTID), :old.fk_id);
    end if;
    if UPDATING ('FN_DISPUCHET') AND PKG_LOG.GET_VALUE(:old.FN_DISPUCHET) <> PKG_LOG.GET_VALUE(:new.FN_DISPUCHET) then
      PKG_LOG.Do_log('TAMBTALON', 'FN_DISPUCHET', 'UPDATE', PKG_LOG.GET_VALUE(:old.FN_DISPUCHET), PKG_LOG.GET_VALUE(:new.FN_DISPUCHET), :old.fk_id);
    end if;
    if UPDATING ('FD_DOCDATE') AND PKG_LOG.GET_VALUE(:old.FD_DOCDATE) <> PKG_LOG.GET_VALUE(:new.FD_DOCDATE) then
      PKG_LOG.Do_log('TAMBTALON', 'FD_DOCDATE', 'UPDATE', PKG_LOG.GET_VALUE(:old.FD_DOCDATE), PKG_LOG.GET_VALUE(:new.FD_DOCDATE), :old.fk_id);
    end if;
    if UPDATING ('FD_OPENED') AND PKG_LOG.GET_VALUE(:old.FD_OPENED) <> PKG_LOG.GET_VALUE(:new.FD_OPENED) then
      PKG_LOG.Do_log('TAMBTALON', 'FD_OPENED', 'UPDATE', PKG_LOG.GET_VALUE(:old.FD_OPENED), PKG_LOG.GET_VALUE(:new.FD_OPENED), :old.fk_id);
    end if;
    if UPDATING ('FD_CLOSED') AND PKG_LOG.GET_VALUE(:old.FD_CLOSED) <> PKG_LOG.GET_VALUE(:new.FD_CLOSED) then
      PKG_LOG.Do_log('TAMBTALON', 'FD_CLOSED', 'UPDATE', PKG_LOG.GET_VALUE(:old.FD_CLOSED), PKG_LOG.GET_VALUE(:new.FD_CLOSED), :old.fk_id);
    end if;
    if UPDATING ('FK_POLICEOMSID') AND PKG_LOG.GET_VALUE(:old.FK_POLICEOMSID) <> PKG_LOG.GET_VALUE(:new.FK_POLICEOMSID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_POLICEOMSID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_POLICEOMSID), PKG_LOG.GET_VALUE(:new.FK_POLICEOMSID), :old.fk_id);
    end if;
    if UPDATING ('FN_SOS') AND PKG_LOG.GET_VALUE(:old.FN_SOS) <> PKG_LOG.GET_VALUE(:new.FN_SOS) then
      PKG_LOG.Do_log('TAMBTALON', 'FN_SOS', 'UPDATE', PKG_LOG.GET_VALUE(:old.FN_SOS), PKG_LOG.GET_VALUE(:new.FN_SOS), :old.fk_id);
    end if;
    if UPDATING ('FK_OPLATA') AND PKG_LOG.GET_VALUE(:old.FK_OPLATA) <> PKG_LOG.GET_VALUE(:new.FK_OPLATA) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_OPLATA', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_OPLATA), PKG_LOG.GET_VALUE(:new.FK_OPLATA), :old.fk_id);
    end if;
    if UPDATING ('FK_SERVPLACE') AND PKG_LOG.GET_VALUE(:old.FK_SERVPLACE) <> PKG_LOG.GET_VALUE(:new.FK_SERVPLACE) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_SERVPLACE', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_SERVPLACE), PKG_LOG.GET_VALUE(:new.FK_SERVPLACE), :old.fk_id);
    end if;
    if UPDATING ('FK_REASON') AND PKG_LOG.GET_VALUE(:old.FK_REASON) <> PKG_LOG.GET_VALUE(:new.FK_REASON) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_REASON', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_REASON), PKG_LOG.GET_VALUE(:new.FK_REASON), :old.fk_id);
    end if;
    if UPDATING ('FK_DISP') AND PKG_LOG.GET_VALUE(:old.FK_DISP) <> PKG_LOG.GET_VALUE(:new.FK_DISP) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_DISP', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_DISP), PKG_LOG.GET_VALUE(:new.FK_DISP), :old.fk_id);
    end if;
    if UPDATING ('FK_TRAVMA') AND PKG_LOG.GET_VALUE(:old.FK_TRAVMA) <> PKG_LOG.GET_VALUE(:new.FK_TRAVMA) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_TRAVMA', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_TRAVMA), PKG_LOG.GET_VALUE(:new.FK_TRAVMA), :old.fk_id);
    end if;
    if UPDATING ('FN_SICKLIST') AND PKG_LOG.GET_VALUE(:old.FN_SICKLIST) <> PKG_LOG.GET_VALUE(:new.FN_SICKLIST) then
      PKG_LOG.Do_log('TAMBTALON', 'FN_SICKLIST', 'UPDATE', PKG_LOG.GET_VALUE(:old.FN_SICKLIST), PKG_LOG.GET_VALUE(:new.FN_SICKLIST), :old.fk_id);
    end if;
    if UPDATING ('FK_DIAGMAIN') AND PKG_LOG.GET_VALUE(:old.FK_DIAGMAIN) <> PKG_LOG.GET_VALUE(:new.FK_DIAGMAIN) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_DIAGMAIN', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_DIAGMAIN), PKG_LOG.GET_VALUE(:new.FK_DIAGMAIN), :old.fk_id);
    end if;
    if UPDATING ('FK_DIAGSUB') AND PKG_LOG.GET_VALUE(:old.FK_DIAGSUB) <> PKG_LOG.GET_VALUE(:new.FK_DIAGSUB) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_DIAGSUB', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_DIAGSUB), PKG_LOG.GET_VALUE(:new.FK_DIAGSUB), :old.fk_id);
    end if;
    if UPDATING ('FK_INSURANCEID') AND PKG_LOG.GET_VALUE(:old.FK_INSURANCEID) <> PKG_LOG.GET_VALUE(:new.FK_INSURANCEID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_INSURANCEID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_INSURANCEID), PKG_LOG.GET_VALUE(:new.FK_INSURANCEID), :old.fk_id);
    end if;
    if UPDATING ('FK_RESULT') AND PKG_LOG.GET_VALUE(:old.FK_RESULT) <> PKG_LOG.GET_VALUE(:new.FK_RESULT) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_RESULT', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_RESULT), PKG_LOG.GET_VALUE(:new.FK_RESULT), :old.fk_id);
    end if;
    if UPDATING ('FK_SOTRCLOSED') AND PKG_LOG.GET_VALUE(:old.FK_SOTRCLOSED) <> PKG_LOG.GET_VALUE(:new.FK_SOTRCLOSED) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_SOTRCLOSED', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_SOTRCLOSED), PKG_LOG.GET_VALUE(:new.FK_SOTRCLOSED), :old.fk_id);
    end if;
    if UPDATING ('FK_MEDSESID') AND PKG_LOG.GET_VALUE(:old.FK_MEDSESID) <> PKG_LOG.GET_VALUE(:new.FK_MEDSESID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_MEDSESID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_MEDSESID), PKG_LOG.GET_VALUE(:new.FK_MEDSESID), :old.fk_id);
    end if;
    if UPDATING ('FK_UCHID') AND PKG_LOG.GET_VALUE(:old.FK_UCHID) <> PKG_LOG.GET_VALUE(:new.FK_UCHID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_UCHID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_UCHID), PKG_LOG.GET_VALUE(:new.FK_UCHID), :old.fk_id);
    end if;
    if UPDATING ('FK_OTDELID') AND PKG_LOG.GET_VALUE(:old.FK_OTDELID) <> PKG_LOG.GET_VALUE(:new.FK_OTDELID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_OTDELID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_OTDELID), PKG_LOG.GET_VALUE(:new.FK_OTDELID), :old.fk_id);
    end if;
    if UPDATING ('FK_DISPCARDID') AND PKG_LOG.GET_VALUE(:old.FK_DISPCARDID) <> PKG_LOG.GET_VALUE(:new.FK_DISPCARDID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_DISPCARDID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_DISPCARDID), PKG_LOG.GET_VALUE(:new.FK_DISPCARDID), :old.fk_id);
    end if;
    if UPDATING ('FK_DISPCARDID') AND PKG_LOG.GET_VALUE(:old.FK_DISPCARDID) <> PKG_LOG.GET_VALUE(:new.FK_DISPCARDID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_DISPCARDID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_DISPCARDID), PKG_LOG.GET_VALUE(:new.FK_DISPCARDID), :old.fk_id);
    end if;
    if UPDATING ('FK_CANCELPODSOTRID') AND PKG_LOG.GET_VALUE(:old.FK_CANCELPODSOTRID) <> PKG_LOG.GET_VALUE(:new.FK_CANCELPODSOTRID) then
      PKG_LOG.Do_log('TAMBTALON', 'FK_CANCELPODSOTRID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_CANCELPODSOTRID), PKG_LOG.GET_VALUE(:new.FK_CANCELPODSOTRID), :old.fk_id);
    end if;
    if UPDATING ('FD_PODCANCELED') AND PKG_LOG.GET_VALUE(:old.FD_PODCANCELED) <> PKG_LOG.GET_VALUE(:new.FD_PODCANCELED) then
      PKG_LOG.Do_log('TAMBTALON', 'FD_PODCANCELED', 'UPDATE', PKG_LOG.GET_VALUE(:old.FD_PODCANCELED), PKG_LOG.GET_VALUE(:new.FD_PODCANCELED), :old.fk_id);
    end if;
  end if;
END TAMBTALON_LOG;
/
SHOW ERRORS;


