DROP TRIGGER ASU.TAMBTALON_NAZ_LOG
/

--
-- TAMBTALON_NAZ_LOG  (Trigger) 
--
--  Dependencies: 
--   STANDARD (Package)
--   DBMS_STANDARD (Package)
--   TAMBTALON_NAZ (Table)
--   PKG_LOG (Package)
--
CREATE OR REPLACE TRIGGER ASU."TAMBTALON_NAZ_LOG" 
 BEFORE
  INSERT OR DELETE OR UPDATE
 ON asu.tambtalon_naz
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
BEGIN
  if INSERTING then
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_TALONID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.FK_TALONID),:new.FK_NAZID);
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_AMBID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.FK_AMBID),:new.FK_NAZID);
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_NAZID', 'INSERT', null, PKG_LOG.GET_VALUE(:new.FK_NAZID),:new.FK_NAZID);
  elsif DELETING then
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_TALONID', 'DELETE', PKG_LOG.GET_VALUE(:old.FK_TALONID), null,:old.FK_NAZID);
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_AMBID', 'DELETE', PKG_LOG.GET_VALUE(:old.FK_AMBID), null,:old.FK_NAZID);
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_NAZID', 'DELETE', PKG_LOG.GET_VALUE(:old.FK_NAZID), null,:old.FK_NAZID);
  elsif UPDATING then
    PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_NAZID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_NAZID), PKG_LOG.GET_VALUE(:new.FK_NAZID),:old.FK_NAZID);

    if UPDATING ('FK_TALONID') AND PKG_LOG.GET_VALUE(:old.FK_TALONID) <> PKG_LOG.GET_VALUE(:new.FK_TALONID) then
      PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_TALONID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_TALONID), PKG_LOG.GET_VALUE(:new.FK_TALONID),:old.FK_NAZID);
    end if;

    if UPDATING ('FK_AMBID') AND PKG_LOG.GET_VALUE(:old.FK_AMBID) <> PKG_LOG.GET_VALUE(:new.FK_AMBID) then
      PKG_LOG.Do_log('TAMBTALON_NAZ', 'FK_AMBID', 'UPDATE', PKG_LOG.GET_VALUE(:old.FK_AMBID), PKG_LOG.GET_VALUE(:new.FK_AMBID),:old.FK_NAZID);
    end if;
  end if;
  null;
END;
/
SHOW ERRORS;


