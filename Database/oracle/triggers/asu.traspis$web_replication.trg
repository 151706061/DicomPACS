DROP TRIGGER ASU.TRASPIS$WEB_REPLICATION
/

--
-- TRASPIS$WEB_REPLICATION  (Trigger) 
--
--  Dependencies: 
--   STANDARD (Package)
--   DBMS_STANDARD (Package)
--   TVRACHKAB (Table)
--   TRASPIS (Table)
--   PKG_EXCH_SAMOZAPIS (Package)
--
CREATE OR REPLACE TRIGGER ASU."TRASPIS$WEB_REPLICATION" 
 BEFORE
 INSERT OR DELETE OR UPDATE
 ON ASU.TRASPIS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
BEGIN
    IF (:NEW.FL_SHOW <> :OLD.FL_SHOW)
        OR (:NEW.FL_SHOW IS NOT NULL AND :OLD.FL_SHOW IS NULL)
        OR (:OLD.FL_SHOW IS NOT NULL AND :NEW.FL_SHOW IS NULL)
        OR (:NEW.FL_SHOW_ON_SAMOZAPIS <> :OLD.FL_SHOW_ON_SAMOZAPIS)
        OR (:NEW.FL_SHOW_ON_SAMOZAPIS IS NOT NULL AND :OLD.FL_SHOW_ON_SAMOZAPIS IS NULL)
        OR (:OLD.FL_SHOW_ON_SAMOZAPIS IS NOT NULL AND :NEW.FL_SHOW_ON_SAMOZAPIS IS NULL) THEN

      if INSERTING then
         for c in (SELECT FK_SOTRID FROM ASU.TVRACHKAB WHERE FK_ID = :NEW.fk_nazvrachid) loop
              ASU.PKG_EXCH_SAMOZAPIS.DO_LOG('TSOTR', c.fk_sotrid, 'INSERT', 'TGRAPH$WEB_REPLICATION', SYSDATE);
         end loop;
      else
         for c in (SELECT FK_SOTRID FROM ASU.TVRACHKAB WHERE FK_ID = :OLD.fk_nazvrachid) loop
            ASU.PKG_EXCH_SAMOZAPIS.DO_LOG('TSOTR', c.fk_sotrid, 'INSERT', 'TGRAPH$WEB_REPLICATION', SYSDATE);
         end loop;
      end if;

    END IF;
END;
/
SHOW ERRORS;


