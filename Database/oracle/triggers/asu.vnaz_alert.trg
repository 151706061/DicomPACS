DROP TRIGGER ASU.VNAZ_ALERT
/

--
-- VNAZ_ALERT  (Trigger) 
--
--  Dependencies: 
--   STANDARD (Package)
--   V$SESSION (Synonym)
--   DBMS_ALERT (Synonym)
--   DBMS_STANDARD (Package)
--   DBMS_ALERT_INFO (Table)
--   TNAZMON (Table)
--   PKG_LISTPAT (Package)
--   PKG_LOG (Package)
--   GET_ANALID (Function)
--   GET_SOTRNAME (Function)
--   VNAZ (Table)
--
CREATE OR REPLACE TRIGGER ASU."VNAZ_ALERT" 
  AFTER INSERT OR UPDATE-- OR DELETE 
  ON ASU.VNAZ REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
  cTimeStamp VARCHAR2(32767);
  CURSOR c1 IS
    SELECT PKG_LOG.GET_CLIENT(CLIENT_INFO) CLIENT_INFO
      FROM V$SESSION
     WHERE AUDSID=USERENV('SESSIONID');
  CURSOR c2 IS
    SELECT * FROM SYS.DBMS_ALERT_INFO WHERE NAME LIKE 'NAZMON%';
BEGIN
  IF PKG_LISTPAT.GET_PATHID(:NEW.FK_SMID) <> GET_ANALID THEN
    FOR p in c2 LOOP

      FOR d in c1 LOOP
        cTimeStamp := TRIM(TO_CHAR(SYSDATE,'dd.mm.yyyy hh24:mi:ss ') || GET_SOTRNAME(d.CLIENT_INFO));
      END LOOP;

      if DELETING then  
        INSERT INTO TNAZMON (FC_MESSAGE,FC_REÑIVER) VALUES (cTimeStamp||' VNAZ DELETE FK_ID='||TO_CHAR(:OLD.FK_ID),p.NAME);
        DBMS_ALERT.SIGNAL(p.NAME,cTimeStamp||' VNAZ DELETE FK_ID='||TO_CHAR(:OLD.FK_ID));
      elsif INSERTING then
        INSERT INTO TNAZMON (FC_MESSAGE,FC_REÑIVER) VALUES (cTimeStamp||' VNAZ INSERT FK_ID='||TO_CHAR(:NEW.FK_ID),p.NAME);
        DBMS_ALERT.SIGNAL(p.NAME,cTimeStamp||' VNAZ INSERT FK_ID='||TO_CHAR(:NEW.FK_ID));
      elsif UPDATING then
        IF UPDATING('FK_NAZSOSID') AND (:NEW.FK_NAZSOSID <> :OLD.FK_NAZSOSID) THEN
          INSERT INTO TNAZMON (FC_MESSAGE,FC_REÑIVER) VALUES (cTimeStamp||' VNAZ UPDATE FK_ID='||TO_CHAR(:OLD.FK_ID),p.NAME);
          DBMS_ALERT.SIGNAL(p.NAME,cTimeStamp||' VNAZ UPDATE FK_ID='||TO_CHAR(:OLD.FK_ID));
        END IF;
      end if;

    END LOOP;
  END IF;
END VNAZ_ALERT;
/
SHOW ERRORS;


