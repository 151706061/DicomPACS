//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6B0704DFAFAAB5CC98F42C687D10136EEE6FBE0D76B76515E9447AC0A4995129))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets6B0704DFAFAAB5CC98F42C687D10136EEE6FBE0D76B76515E9447AC0A4995129 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets6B0704DFAFAAB5CC98F42C687D10136EEE6FBE0D76B76515E9447AC0A4995129()
        {
            this.EdmEntityContainerName = "PostgresEntities";
            this.StoreEntityContainerName = "PostgresEntitiesStoreContainer";
            this.HashOverMappingClosure = "0265bf7122e35f1b3be1baf333c7799fd152b6a4b16b8b28dfabc9c71df0b5e2";
            this.HashOverAllExtentViews = "0db4f7c7304f8e46556b21e41e44104d49ab50d552c6b204c55340fb13f0a568";
            this.ViewCount = 1436;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            if ((index == 242))
            {
                return GetView242();
            }
            if ((index == 243))
            {
                return GetView243();
            }
            if ((index == 244))
            {
                return GetView244();
            }
            if ((index == 245))
            {
                return GetView245();
            }
            if ((index == 246))
            {
                return GetView246();
            }
            if ((index == 247))
            {
                return GetView247();
            }
            if ((index == 248))
            {
                return GetView248();
            }
            if ((index == 249))
            {
                return GetView249();
            }
            if ((index == 250))
            {
                return GetView250();
            }
            if ((index == 251))
            {
                return GetView251();
            }
            if ((index == 252))
            {
                return GetView252();
            }
            if ((index == 253))
            {
                return GetView253();
            }
            if ((index == 254))
            {
                return GetView254();
            }
            if ((index == 255))
            {
                return GetView255();
            }
            if ((index == 256))
            {
                return GetView256();
            }
            if ((index == 257))
            {
                return GetView257();
            }
            if ((index == 258))
            {
                return GetView258();
            }
            if ((index == 259))
            {
                return GetView259();
            }
            if ((index == 260))
            {
                return GetView260();
            }
            if ((index == 261))
            {
                return GetView261();
            }
            if ((index == 262))
            {
                return GetView262();
            }
            if ((index == 263))
            {
                return GetView263();
            }
            if ((index == 264))
            {
                return GetView264();
            }
            if ((index == 265))
            {
                return GetView265();
            }
            if ((index == 266))
            {
                return GetView266();
            }
            if ((index == 267))
            {
                return GetView267();
            }
            if ((index == 268))
            {
                return GetView268();
            }
            if ((index == 269))
            {
                return GetView269();
            }
            if ((index == 270))
            {
                return GetView270();
            }
            if ((index == 271))
            {
                return GetView271();
            }
            if ((index == 272))
            {
                return GetView272();
            }
            if ((index == 273))
            {
                return GetView273();
            }
            if ((index == 274))
            {
                return GetView274();
            }
            if ((index == 275))
            {
                return GetView275();
            }
            if ((index == 276))
            {
                return GetView276();
            }
            if ((index == 277))
            {
                return GetView277();
            }
            if ((index == 278))
            {
                return GetView278();
            }
            if ((index == 279))
            {
                return GetView279();
            }
            if ((index == 280))
            {
                return GetView280();
            }
            if ((index == 281))
            {
                return GetView281();
            }
            if ((index == 282))
            {
                return GetView282();
            }
            if ((index == 283))
            {
                return GetView283();
            }
            if ((index == 284))
            {
                return GetView284();
            }
            if ((index == 285))
            {
                return GetView285();
            }
            if ((index == 286))
            {
                return GetView286();
            }
            if ((index == 287))
            {
                return GetView287();
            }
            if ((index == 288))
            {
                return GetView288();
            }
            if ((index == 289))
            {
                return GetView289();
            }
            if ((index == 290))
            {
                return GetView290();
            }
            if ((index == 291))
            {
                return GetView291();
            }
            if ((index == 292))
            {
                return GetView292();
            }
            if ((index == 293))
            {
                return GetView293();
            }
            if ((index == 294))
            {
                return GetView294();
            }
            if ((index == 295))
            {
                return GetView295();
            }
            if ((index == 296))
            {
                return GetView296();
            }
            if ((index == 297))
            {
                return GetView297();
            }
            if ((index == 298))
            {
                return GetView298();
            }
            if ((index == 299))
            {
                return GetView299();
            }
            if ((index == 300))
            {
                return GetView300();
            }
            if ((index == 301))
            {
                return GetView301();
            }
            if ((index == 302))
            {
                return GetView302();
            }
            if ((index == 303))
            {
                return GetView303();
            }
            if ((index == 304))
            {
                return GetView304();
            }
            if ((index == 305))
            {
                return GetView305();
            }
            if ((index == 306))
            {
                return GetView306();
            }
            if ((index == 307))
            {
                return GetView307();
            }
            if ((index == 308))
            {
                return GetView308();
            }
            if ((index == 309))
            {
                return GetView309();
            }
            if ((index == 310))
            {
                return GetView310();
            }
            if ((index == 311))
            {
                return GetView311();
            }
            if ((index == 312))
            {
                return GetView312();
            }
            if ((index == 313))
            {
                return GetView313();
            }
            if ((index == 314))
            {
                return GetView314();
            }
            if ((index == 315))
            {
                return GetView315();
            }
            if ((index == 316))
            {
                return GetView316();
            }
            if ((index == 317))
            {
                return GetView317();
            }
            if ((index == 318))
            {
                return GetView318();
            }
            if ((index == 319))
            {
                return GetView319();
            }
            if ((index == 320))
            {
                return GetView320();
            }
            if ((index == 321))
            {
                return GetView321();
            }
            if ((index == 322))
            {
                return GetView322();
            }
            if ((index == 323))
            {
                return GetView323();
            }
            if ((index == 324))
            {
                return GetView324();
            }
            if ((index == 325))
            {
                return GetView325();
            }
            if ((index == 326))
            {
                return GetView326();
            }
            if ((index == 327))
            {
                return GetView327();
            }
            if ((index == 328))
            {
                return GetView328();
            }
            if ((index == 329))
            {
                return GetView329();
            }
            if ((index == 330))
            {
                return GetView330();
            }
            if ((index == 331))
            {
                return GetView331();
            }
            if ((index == 332))
            {
                return GetView332();
            }
            if ((index == 333))
            {
                return GetView333();
            }
            if ((index == 334))
            {
                return GetView334();
            }
            if ((index == 335))
            {
                return GetView335();
            }
            if ((index == 336))
            {
                return GetView336();
            }
            if ((index == 337))
            {
                return GetView337();
            }
            if ((index == 338))
            {
                return GetView338();
            }
            if ((index == 339))
            {
                return GetView339();
            }
            if ((index == 340))
            {
                return GetView340();
            }
            if ((index == 341))
            {
                return GetView341();
            }
            if ((index == 342))
            {
                return GetView342();
            }
            if ((index == 343))
            {
                return GetView343();
            }
            if ((index == 344))
            {
                return GetView344();
            }
            if ((index == 345))
            {
                return GetView345();
            }
            if ((index == 346))
            {
                return GetView346();
            }
            if ((index == 347))
            {
                return GetView347();
            }
            if ((index == 348))
            {
                return GetView348();
            }
            if ((index == 349))
            {
                return GetView349();
            }
            if ((index == 350))
            {
                return GetView350();
            }
            if ((index == 351))
            {
                return GetView351();
            }
            if ((index == 352))
            {
                return GetView352();
            }
            if ((index == 353))
            {
                return GetView353();
            }
            if ((index == 354))
            {
                return GetView354();
            }
            if ((index == 355))
            {
                return GetView355();
            }
            if ((index == 356))
            {
                return GetView356();
            }
            if ((index == 357))
            {
                return GetView357();
            }
            if ((index == 358))
            {
                return GetView358();
            }
            if ((index == 359))
            {
                return GetView359();
            }
            if ((index == 360))
            {
                return GetView360();
            }
            if ((index == 361))
            {
                return GetView361();
            }
            if ((index == 362))
            {
                return GetView362();
            }
            if ((index == 363))
            {
                return GetView363();
            }
            if ((index == 364))
            {
                return GetView364();
            }
            if ((index == 365))
            {
                return GetView365();
            }
            if ((index == 366))
            {
                return GetView366();
            }
            if ((index == 367))
            {
                return GetView367();
            }
            if ((index == 368))
            {
                return GetView368();
            }
            if ((index == 369))
            {
                return GetView369();
            }
            if ((index == 370))
            {
                return GetView370();
            }
            if ((index == 371))
            {
                return GetView371();
            }
            if ((index == 372))
            {
                return GetView372();
            }
            if ((index == 373))
            {
                return GetView373();
            }
            if ((index == 374))
            {
                return GetView374();
            }
            if ((index == 375))
            {
                return GetView375();
            }
            if ((index == 376))
            {
                return GetView376();
            }
            if ((index == 377))
            {
                return GetView377();
            }
            if ((index == 378))
            {
                return GetView378();
            }
            if ((index == 379))
            {
                return GetView379();
            }
            if ((index == 380))
            {
                return GetView380();
            }
            if ((index == 381))
            {
                return GetView381();
            }
            if ((index == 382))
            {
                return GetView382();
            }
            if ((index == 383))
            {
                return GetView383();
            }
            if ((index == 384))
            {
                return GetView384();
            }
            if ((index == 385))
            {
                return GetView385();
            }
            if ((index == 386))
            {
                return GetView386();
            }
            if ((index == 387))
            {
                return GetView387();
            }
            if ((index == 388))
            {
                return GetView388();
            }
            if ((index == 389))
            {
                return GetView389();
            }
            if ((index == 390))
            {
                return GetView390();
            }
            if ((index == 391))
            {
                return GetView391();
            }
            if ((index == 392))
            {
                return GetView392();
            }
            if ((index == 393))
            {
                return GetView393();
            }
            if ((index == 394))
            {
                return GetView394();
            }
            if ((index == 395))
            {
                return GetView395();
            }
            if ((index == 396))
            {
                return GetView396();
            }
            if ((index == 397))
            {
                return GetView397();
            }
            if ((index == 398))
            {
                return GetView398();
            }
            if ((index == 399))
            {
                return GetView399();
            }
            if ((index == 400))
            {
                return GetView400();
            }
            if ((index == 401))
            {
                return GetView401();
            }
            if ((index == 402))
            {
                return GetView402();
            }
            if ((index == 403))
            {
                return GetView403();
            }
            if ((index == 404))
            {
                return GetView404();
            }
            if ((index == 405))
            {
                return GetView405();
            }
            if ((index == 406))
            {
                return GetView406();
            }
            if ((index == 407))
            {
                return GetView407();
            }
            if ((index == 408))
            {
                return GetView408();
            }
            if ((index == 409))
            {
                return GetView409();
            }
            if ((index == 410))
            {
                return GetView410();
            }
            if ((index == 411))
            {
                return GetView411();
            }
            if ((index == 412))
            {
                return GetView412();
            }
            if ((index == 413))
            {
                return GetView413();
            }
            if ((index == 414))
            {
                return GetView414();
            }
            if ((index == 415))
            {
                return GetView415();
            }
            if ((index == 416))
            {
                return GetView416();
            }
            if ((index == 417))
            {
                return GetView417();
            }
            if ((index == 418))
            {
                return GetView418();
            }
            if ((index == 419))
            {
                return GetView419();
            }
            if ((index == 420))
            {
                return GetView420();
            }
            if ((index == 421))
            {
                return GetView421();
            }
            if ((index == 422))
            {
                return GetView422();
            }
            if ((index == 423))
            {
                return GetView423();
            }
            if ((index == 424))
            {
                return GetView424();
            }
            if ((index == 425))
            {
                return GetView425();
            }
            if ((index == 426))
            {
                return GetView426();
            }
            if ((index == 427))
            {
                return GetView427();
            }
            if ((index == 428))
            {
                return GetView428();
            }
            if ((index == 429))
            {
                return GetView429();
            }
            if ((index == 430))
            {
                return GetView430();
            }
            if ((index == 431))
            {
                return GetView431();
            }
            if ((index == 432))
            {
                return GetView432();
            }
            if ((index == 433))
            {
                return GetView433();
            }
            if ((index == 434))
            {
                return GetView434();
            }
            if ((index == 435))
            {
                return GetView435();
            }
            if ((index == 436))
            {
                return GetView436();
            }
            if ((index == 437))
            {
                return GetView437();
            }
            if ((index == 438))
            {
                return GetView438();
            }
            if ((index == 439))
            {
                return GetView439();
            }
            if ((index == 440))
            {
                return GetView440();
            }
            if ((index == 441))
            {
                return GetView441();
            }
            if ((index == 442))
            {
                return GetView442();
            }
            if ((index == 443))
            {
                return GetView443();
            }
            if ((index == 444))
            {
                return GetView444();
            }
            if ((index == 445))
            {
                return GetView445();
            }
            if ((index == 446))
            {
                return GetView446();
            }
            if ((index == 447))
            {
                return GetView447();
            }
            if ((index == 448))
            {
                return GetView448();
            }
            if ((index == 449))
            {
                return GetView449();
            }
            if ((index == 450))
            {
                return GetView450();
            }
            if ((index == 451))
            {
                return GetView451();
            }
            if ((index == 452))
            {
                return GetView452();
            }
            if ((index == 453))
            {
                return GetView453();
            }
            if ((index == 454))
            {
                return GetView454();
            }
            if ((index == 455))
            {
                return GetView455();
            }
            if ((index == 456))
            {
                return GetView456();
            }
            if ((index == 457))
            {
                return GetView457();
            }
            if ((index == 458))
            {
                return GetView458();
            }
            if ((index == 459))
            {
                return GetView459();
            }
            if ((index == 460))
            {
                return GetView460();
            }
            if ((index == 461))
            {
                return GetView461();
            }
            if ((index == 462))
            {
                return GetView462();
            }
            if ((index == 463))
            {
                return GetView463();
            }
            if ((index == 464))
            {
                return GetView464();
            }
            if ((index == 465))
            {
                return GetView465();
            }
            if ((index == 466))
            {
                return GetView466();
            }
            if ((index == 467))
            {
                return GetView467();
            }
            if ((index == 468))
            {
                return GetView468();
            }
            if ((index == 469))
            {
                return GetView469();
            }
            if ((index == 470))
            {
                return GetView470();
            }
            if ((index == 471))
            {
                return GetView471();
            }
            if ((index == 472))
            {
                return GetView472();
            }
            if ((index == 473))
            {
                return GetView473();
            }
            if ((index == 474))
            {
                return GetView474();
            }
            if ((index == 475))
            {
                return GetView475();
            }
            if ((index == 476))
            {
                return GetView476();
            }
            if ((index == 477))
            {
                return GetView477();
            }
            if ((index == 478))
            {
                return GetView478();
            }
            if ((index == 479))
            {
                return GetView479();
            }
            if ((index == 480))
            {
                return GetView480();
            }
            if ((index == 481))
            {
                return GetView481();
            }
            if ((index == 482))
            {
                return GetView482();
            }
            if ((index == 483))
            {
                return GetView483();
            }
            if ((index == 484))
            {
                return GetView484();
            }
            if ((index == 485))
            {
                return GetView485();
            }
            if ((index == 486))
            {
                return GetView486();
            }
            if ((index == 487))
            {
                return GetView487();
            }
            if ((index == 488))
            {
                return GetView488();
            }
            if ((index == 489))
            {
                return GetView489();
            }
            if ((index == 490))
            {
                return GetView490();
            }
            if ((index == 491))
            {
                return GetView491();
            }
            if ((index == 492))
            {
                return GetView492();
            }
            if ((index == 493))
            {
                return GetView493();
            }
            if ((index == 494))
            {
                return GetView494();
            }
            if ((index == 495))
            {
                return GetView495();
            }
            if ((index == 496))
            {
                return GetView496();
            }
            if ((index == 497))
            {
                return GetView497();
            }
            if ((index == 498))
            {
                return GetView498();
            }
            if ((index == 499))
            {
                return GetView499();
            }
            if ((index == 500))
            {
                return GetView500();
            }
            if ((index == 501))
            {
                return GetView501();
            }
            if ((index == 502))
            {
                return GetView502();
            }
            if ((index == 503))
            {
                return GetView503();
            }
            if ((index == 504))
            {
                return GetView504();
            }
            if ((index == 505))
            {
                return GetView505();
            }
            if ((index == 506))
            {
                return GetView506();
            }
            if ((index == 507))
            {
                return GetView507();
            }
            if ((index == 508))
            {
                return GetView508();
            }
            if ((index == 509))
            {
                return GetView509();
            }
            if ((index == 510))
            {
                return GetView510();
            }
            if ((index == 511))
            {
                return GetView511();
            }
            if ((index == 512))
            {
                return GetView512();
            }
            if ((index == 513))
            {
                return GetView513();
            }
            if ((index == 514))
            {
                return GetView514();
            }
            if ((index == 515))
            {
                return GetView515();
            }
            if ((index == 516))
            {
                return GetView516();
            }
            if ((index == 517))
            {
                return GetView517();
            }
            if ((index == 518))
            {
                return GetView518();
            }
            if ((index == 519))
            {
                return GetView519();
            }
            if ((index == 520))
            {
                return GetView520();
            }
            if ((index == 521))
            {
                return GetView521();
            }
            if ((index == 522))
            {
                return GetView522();
            }
            if ((index == 523))
            {
                return GetView523();
            }
            if ((index == 524))
            {
                return GetView524();
            }
            if ((index == 525))
            {
                return GetView525();
            }
            if ((index == 526))
            {
                return GetView526();
            }
            if ((index == 527))
            {
                return GetView527();
            }
            if ((index == 528))
            {
                return GetView528();
            }
            if ((index == 529))
            {
                return GetView529();
            }
            if ((index == 530))
            {
                return GetView530();
            }
            if ((index == 531))
            {
                return GetView531();
            }
            if ((index == 532))
            {
                return GetView532();
            }
            if ((index == 533))
            {
                return GetView533();
            }
            if ((index == 534))
            {
                return GetView534();
            }
            if ((index == 535))
            {
                return GetView535();
            }
            if ((index == 536))
            {
                return GetView536();
            }
            if ((index == 537))
            {
                return GetView537();
            }
            if ((index == 538))
            {
                return GetView538();
            }
            if ((index == 539))
            {
                return GetView539();
            }
            if ((index == 540))
            {
                return GetView540();
            }
            if ((index == 541))
            {
                return GetView541();
            }
            if ((index == 542))
            {
                return GetView542();
            }
            if ((index == 543))
            {
                return GetView543();
            }
            if ((index == 544))
            {
                return GetView544();
            }
            if ((index == 545))
            {
                return GetView545();
            }
            if ((index == 546))
            {
                return GetView546();
            }
            if ((index == 547))
            {
                return GetView547();
            }
            if ((index == 548))
            {
                return GetView548();
            }
            if ((index == 549))
            {
                return GetView549();
            }
            if ((index == 550))
            {
                return GetView550();
            }
            if ((index == 551))
            {
                return GetView551();
            }
            if ((index == 552))
            {
                return GetView552();
            }
            if ((index == 553))
            {
                return GetView553();
            }
            if ((index == 554))
            {
                return GetView554();
            }
            if ((index == 555))
            {
                return GetView555();
            }
            if ((index == 556))
            {
                return GetView556();
            }
            if ((index == 557))
            {
                return GetView557();
            }
            if ((index == 558))
            {
                return GetView558();
            }
            if ((index == 559))
            {
                return GetView559();
            }
            if ((index == 560))
            {
                return GetView560();
            }
            if ((index == 561))
            {
                return GetView561();
            }
            if ((index == 562))
            {
                return GetView562();
            }
            if ((index == 563))
            {
                return GetView563();
            }
            if ((index == 564))
            {
                return GetView564();
            }
            if ((index == 565))
            {
                return GetView565();
            }
            if ((index == 566))
            {
                return GetView566();
            }
            if ((index == 567))
            {
                return GetView567();
            }
            if ((index == 568))
            {
                return GetView568();
            }
            if ((index == 569))
            {
                return GetView569();
            }
            if ((index == 570))
            {
                return GetView570();
            }
            if ((index == 571))
            {
                return GetView571();
            }
            if ((index == 572))
            {
                return GetView572();
            }
            if ((index == 573))
            {
                return GetView573();
            }
            if ((index == 574))
            {
                return GetView574();
            }
            if ((index == 575))
            {
                return GetView575();
            }
            if ((index == 576))
            {
                return GetView576();
            }
            if ((index == 577))
            {
                return GetView577();
            }
            if ((index == 578))
            {
                return GetView578();
            }
            if ((index == 579))
            {
                return GetView579();
            }
            if ((index == 580))
            {
                return GetView580();
            }
            if ((index == 581))
            {
                return GetView581();
            }
            if ((index == 582))
            {
                return GetView582();
            }
            if ((index == 583))
            {
                return GetView583();
            }
            if ((index == 584))
            {
                return GetView584();
            }
            if ((index == 585))
            {
                return GetView585();
            }
            if ((index == 586))
            {
                return GetView586();
            }
            if ((index == 587))
            {
                return GetView587();
            }
            if ((index == 588))
            {
                return GetView588();
            }
            if ((index == 589))
            {
                return GetView589();
            }
            if ((index == 590))
            {
                return GetView590();
            }
            if ((index == 591))
            {
                return GetView591();
            }
            if ((index == 592))
            {
                return GetView592();
            }
            if ((index == 593))
            {
                return GetView593();
            }
            if ((index == 594))
            {
                return GetView594();
            }
            if ((index == 595))
            {
                return GetView595();
            }
            if ((index == 596))
            {
                return GetView596();
            }
            if ((index == 597))
            {
                return GetView597();
            }
            if ((index == 598))
            {
                return GetView598();
            }
            if ((index == 599))
            {
                return GetView599();
            }
            if ((index == 600))
            {
                return GetView600();
            }
            if ((index == 601))
            {
                return GetView601();
            }
            if ((index == 602))
            {
                return GetView602();
            }
            if ((index == 603))
            {
                return GetView603();
            }
            if ((index == 604))
            {
                return GetView604();
            }
            if ((index == 605))
            {
                return GetView605();
            }
            if ((index == 606))
            {
                return GetView606();
            }
            if ((index == 607))
            {
                return GetView607();
            }
            if ((index == 608))
            {
                return GetView608();
            }
            if ((index == 609))
            {
                return GetView609();
            }
            if ((index == 610))
            {
                return GetView610();
            }
            if ((index == 611))
            {
                return GetView611();
            }
            if ((index == 612))
            {
                return GetView612();
            }
            if ((index == 613))
            {
                return GetView613();
            }
            if ((index == 614))
            {
                return GetView614();
            }
            if ((index == 615))
            {
                return GetView615();
            }
            if ((index == 616))
            {
                return GetView616();
            }
            if ((index == 617))
            {
                return GetView617();
            }
            if ((index == 618))
            {
                return GetView618();
            }
            if ((index == 619))
            {
                return GetView619();
            }
            if ((index == 620))
            {
                return GetView620();
            }
            if ((index == 621))
            {
                return GetView621();
            }
            if ((index == 622))
            {
                return GetView622();
            }
            if ((index == 623))
            {
                return GetView623();
            }
            if ((index == 624))
            {
                return GetView624();
            }
            if ((index == 625))
            {
                return GetView625();
            }
            if ((index == 626))
            {
                return GetView626();
            }
            if ((index == 627))
            {
                return GetView627();
            }
            if ((index == 628))
            {
                return GetView628();
            }
            if ((index == 629))
            {
                return GetView629();
            }
            if ((index == 630))
            {
                return GetView630();
            }
            if ((index == 631))
            {
                return GetView631();
            }
            if ((index == 632))
            {
                return GetView632();
            }
            if ((index == 633))
            {
                return GetView633();
            }
            if ((index == 634))
            {
                return GetView634();
            }
            if ((index == 635))
            {
                return GetView635();
            }
            if ((index == 636))
            {
                return GetView636();
            }
            if ((index == 637))
            {
                return GetView637();
            }
            if ((index == 638))
            {
                return GetView638();
            }
            if ((index == 639))
            {
                return GetView639();
            }
            if ((index == 640))
            {
                return GetView640();
            }
            if ((index == 641))
            {
                return GetView641();
            }
            if ((index == 642))
            {
                return GetView642();
            }
            if ((index == 643))
            {
                return GetView643();
            }
            if ((index == 644))
            {
                return GetView644();
            }
            if ((index == 645))
            {
                return GetView645();
            }
            if ((index == 646))
            {
                return GetView646();
            }
            if ((index == 647))
            {
                return GetView647();
            }
            if ((index == 648))
            {
                return GetView648();
            }
            if ((index == 649))
            {
                return GetView649();
            }
            if ((index == 650))
            {
                return GetView650();
            }
            if ((index == 651))
            {
                return GetView651();
            }
            if ((index == 652))
            {
                return GetView652();
            }
            if ((index == 653))
            {
                return GetView653();
            }
            if ((index == 654))
            {
                return GetView654();
            }
            if ((index == 655))
            {
                return GetView655();
            }
            if ((index == 656))
            {
                return GetView656();
            }
            if ((index == 657))
            {
                return GetView657();
            }
            if ((index == 658))
            {
                return GetView658();
            }
            if ((index == 659))
            {
                return GetView659();
            }
            if ((index == 660))
            {
                return GetView660();
            }
            if ((index == 661))
            {
                return GetView661();
            }
            if ((index == 662))
            {
                return GetView662();
            }
            if ((index == 663))
            {
                return GetView663();
            }
            if ((index == 664))
            {
                return GetView664();
            }
            if ((index == 665))
            {
                return GetView665();
            }
            if ((index == 666))
            {
                return GetView666();
            }
            if ((index == 667))
            {
                return GetView667();
            }
            if ((index == 668))
            {
                return GetView668();
            }
            if ((index == 669))
            {
                return GetView669();
            }
            if ((index == 670))
            {
                return GetView670();
            }
            if ((index == 671))
            {
                return GetView671();
            }
            if ((index == 672))
            {
                return GetView672();
            }
            if ((index == 673))
            {
                return GetView673();
            }
            if ((index == 674))
            {
                return GetView674();
            }
            if ((index == 675))
            {
                return GetView675();
            }
            if ((index == 676))
            {
                return GetView676();
            }
            if ((index == 677))
            {
                return GetView677();
            }
            if ((index == 678))
            {
                return GetView678();
            }
            if ((index == 679))
            {
                return GetView679();
            }
            if ((index == 680))
            {
                return GetView680();
            }
            if ((index == 681))
            {
                return GetView681();
            }
            if ((index == 682))
            {
                return GetView682();
            }
            if ((index == 683))
            {
                return GetView683();
            }
            if ((index == 684))
            {
                return GetView684();
            }
            if ((index == 685))
            {
                return GetView685();
            }
            if ((index == 686))
            {
                return GetView686();
            }
            if ((index == 687))
            {
                return GetView687();
            }
            if ((index == 688))
            {
                return GetView688();
            }
            if ((index == 689))
            {
                return GetView689();
            }
            if ((index == 690))
            {
                return GetView690();
            }
            if ((index == 691))
            {
                return GetView691();
            }
            if ((index == 692))
            {
                return GetView692();
            }
            if ((index == 693))
            {
                return GetView693();
            }
            if ((index == 694))
            {
                return GetView694();
            }
            if ((index == 695))
            {
                return GetView695();
            }
            if ((index == 696))
            {
                return GetView696();
            }
            if ((index == 697))
            {
                return GetView697();
            }
            if ((index == 698))
            {
                return GetView698();
            }
            if ((index == 699))
            {
                return GetView699();
            }
            if ((index == 700))
            {
                return GetView700();
            }
            if ((index == 701))
            {
                return GetView701();
            }
            if ((index == 702))
            {
                return GetView702();
            }
            if ((index == 703))
            {
                return GetView703();
            }
            if ((index == 704))
            {
                return GetView704();
            }
            if ((index == 705))
            {
                return GetView705();
            }
            if ((index == 706))
            {
                return GetView706();
            }
            if ((index == 707))
            {
                return GetView707();
            }
            if ((index == 708))
            {
                return GetView708();
            }
            if ((index == 709))
            {
                return GetView709();
            }
            if ((index == 710))
            {
                return GetView710();
            }
            if ((index == 711))
            {
                return GetView711();
            }
            if ((index == 712))
            {
                return GetView712();
            }
            if ((index == 713))
            {
                return GetView713();
            }
            if ((index == 714))
            {
                return GetView714();
            }
            if ((index == 715))
            {
                return GetView715();
            }
            if ((index == 716))
            {
                return GetView716();
            }
            if ((index == 717))
            {
                return GetView717();
            }
            if ((index == 718))
            {
                return GetView718();
            }
            if ((index == 719))
            {
                return GetView719();
            }
            if ((index == 720))
            {
                return GetView720();
            }
            if ((index == 721))
            {
                return GetView721();
            }
            if ((index == 722))
            {
                return GetView722();
            }
            if ((index == 723))
            {
                return GetView723();
            }
            if ((index == 724))
            {
                return GetView724();
            }
            if ((index == 725))
            {
                return GetView725();
            }
            if ((index == 726))
            {
                return GetView726();
            }
            if ((index == 727))
            {
                return GetView727();
            }
            if ((index == 728))
            {
                return GetView728();
            }
            if ((index == 729))
            {
                return GetView729();
            }
            if ((index == 730))
            {
                return GetView730();
            }
            if ((index == 731))
            {
                return GetView731();
            }
            if ((index == 732))
            {
                return GetView732();
            }
            if ((index == 733))
            {
                return GetView733();
            }
            if ((index == 734))
            {
                return GetView734();
            }
            if ((index == 735))
            {
                return GetView735();
            }
            if ((index == 736))
            {
                return GetView736();
            }
            if ((index == 737))
            {
                return GetView737();
            }
            if ((index == 738))
            {
                return GetView738();
            }
            if ((index == 739))
            {
                return GetView739();
            }
            if ((index == 740))
            {
                return GetView740();
            }
            if ((index == 741))
            {
                return GetView741();
            }
            if ((index == 742))
            {
                return GetView742();
            }
            if ((index == 743))
            {
                return GetView743();
            }
            if ((index == 744))
            {
                return GetView744();
            }
            if ((index == 745))
            {
                return GetView745();
            }
            if ((index == 746))
            {
                return GetView746();
            }
            if ((index == 747))
            {
                return GetView747();
            }
            if ((index == 748))
            {
                return GetView748();
            }
            if ((index == 749))
            {
                return GetView749();
            }
            if ((index == 750))
            {
                return GetView750();
            }
            if ((index == 751))
            {
                return GetView751();
            }
            if ((index == 752))
            {
                return GetView752();
            }
            if ((index == 753))
            {
                return GetView753();
            }
            if ((index == 754))
            {
                return GetView754();
            }
            if ((index == 755))
            {
                return GetView755();
            }
            if ((index == 756))
            {
                return GetView756();
            }
            if ((index == 757))
            {
                return GetView757();
            }
            if ((index == 758))
            {
                return GetView758();
            }
            if ((index == 759))
            {
                return GetView759();
            }
            if ((index == 760))
            {
                return GetView760();
            }
            if ((index == 761))
            {
                return GetView761();
            }
            if ((index == 762))
            {
                return GetView762();
            }
            if ((index == 763))
            {
                return GetView763();
            }
            if ((index == 764))
            {
                return GetView764();
            }
            if ((index == 765))
            {
                return GetView765();
            }
            if ((index == 766))
            {
                return GetView766();
            }
            if ((index == 767))
            {
                return GetView767();
            }
            if ((index == 768))
            {
                return GetView768();
            }
            if ((index == 769))
            {
                return GetView769();
            }
            if ((index == 770))
            {
                return GetView770();
            }
            if ((index == 771))
            {
                return GetView771();
            }
            if ((index == 772))
            {
                return GetView772();
            }
            if ((index == 773))
            {
                return GetView773();
            }
            if ((index == 774))
            {
                return GetView774();
            }
            if ((index == 775))
            {
                return GetView775();
            }
            if ((index == 776))
            {
                return GetView776();
            }
            if ((index == 777))
            {
                return GetView777();
            }
            if ((index == 778))
            {
                return GetView778();
            }
            if ((index == 779))
            {
                return GetView779();
            }
            if ((index == 780))
            {
                return GetView780();
            }
            if ((index == 781))
            {
                return GetView781();
            }
            if ((index == 782))
            {
                return GetView782();
            }
            if ((index == 783))
            {
                return GetView783();
            }
            if ((index == 784))
            {
                return GetView784();
            }
            if ((index == 785))
            {
                return GetView785();
            }
            if ((index == 786))
            {
                return GetView786();
            }
            if ((index == 787))
            {
                return GetView787();
            }
            if ((index == 788))
            {
                return GetView788();
            }
            if ((index == 789))
            {
                return GetView789();
            }
            if ((index == 790))
            {
                return GetView790();
            }
            if ((index == 791))
            {
                return GetView791();
            }
            if ((index == 792))
            {
                return GetView792();
            }
            if ((index == 793))
            {
                return GetView793();
            }
            if ((index == 794))
            {
                return GetView794();
            }
            if ((index == 795))
            {
                return GetView795();
            }
            if ((index == 796))
            {
                return GetView796();
            }
            if ((index == 797))
            {
                return GetView797();
            }
            if ((index == 798))
            {
                return GetView798();
            }
            if ((index == 799))
            {
                return GetView799();
            }
            if ((index == 800))
            {
                return GetView800();
            }
            if ((index == 801))
            {
                return GetView801();
            }
            if ((index == 802))
            {
                return GetView802();
            }
            if ((index == 803))
            {
                return GetView803();
            }
            if ((index == 804))
            {
                return GetView804();
            }
            if ((index == 805))
            {
                return GetView805();
            }
            if ((index == 806))
            {
                return GetView806();
            }
            if ((index == 807))
            {
                return GetView807();
            }
            if ((index == 808))
            {
                return GetView808();
            }
            if ((index == 809))
            {
                return GetView809();
            }
            if ((index == 810))
            {
                return GetView810();
            }
            if ((index == 811))
            {
                return GetView811();
            }
            if ((index == 812))
            {
                return GetView812();
            }
            if ((index == 813))
            {
                return GetView813();
            }
            if ((index == 814))
            {
                return GetView814();
            }
            if ((index == 815))
            {
                return GetView815();
            }
            if ((index == 816))
            {
                return GetView816();
            }
            if ((index == 817))
            {
                return GetView817();
            }
            if ((index == 818))
            {
                return GetView818();
            }
            if ((index == 819))
            {
                return GetView819();
            }
            if ((index == 820))
            {
                return GetView820();
            }
            if ((index == 821))
            {
                return GetView821();
            }
            if ((index == 822))
            {
                return GetView822();
            }
            if ((index == 823))
            {
                return GetView823();
            }
            if ((index == 824))
            {
                return GetView824();
            }
            if ((index == 825))
            {
                return GetView825();
            }
            if ((index == 826))
            {
                return GetView826();
            }
            if ((index == 827))
            {
                return GetView827();
            }
            if ((index == 828))
            {
                return GetView828();
            }
            if ((index == 829))
            {
                return GetView829();
            }
            if ((index == 830))
            {
                return GetView830();
            }
            if ((index == 831))
            {
                return GetView831();
            }
            if ((index == 832))
            {
                return GetView832();
            }
            if ((index == 833))
            {
                return GetView833();
            }
            if ((index == 834))
            {
                return GetView834();
            }
            if ((index == 835))
            {
                return GetView835();
            }
            if ((index == 836))
            {
                return GetView836();
            }
            if ((index == 837))
            {
                return GetView837();
            }
            if ((index == 838))
            {
                return GetView838();
            }
            if ((index == 839))
            {
                return GetView839();
            }
            if ((index == 840))
            {
                return GetView840();
            }
            if ((index == 841))
            {
                return GetView841();
            }
            if ((index == 842))
            {
                return GetView842();
            }
            if ((index == 843))
            {
                return GetView843();
            }
            if ((index == 844))
            {
                return GetView844();
            }
            if ((index == 845))
            {
                return GetView845();
            }
            if ((index == 846))
            {
                return GetView846();
            }
            if ((index == 847))
            {
                return GetView847();
            }
            if ((index == 848))
            {
                return GetView848();
            }
            if ((index == 849))
            {
                return GetView849();
            }
            if ((index == 850))
            {
                return GetView850();
            }
            if ((index == 851))
            {
                return GetView851();
            }
            if ((index == 852))
            {
                return GetView852();
            }
            if ((index == 853))
            {
                return GetView853();
            }
            if ((index == 854))
            {
                return GetView854();
            }
            if ((index == 855))
            {
                return GetView855();
            }
            if ((index == 856))
            {
                return GetView856();
            }
            if ((index == 857))
            {
                return GetView857();
            }
            if ((index == 858))
            {
                return GetView858();
            }
            if ((index == 859))
            {
                return GetView859();
            }
            if ((index == 860))
            {
                return GetView860();
            }
            if ((index == 861))
            {
                return GetView861();
            }
            if ((index == 862))
            {
                return GetView862();
            }
            if ((index == 863))
            {
                return GetView863();
            }
            if ((index == 864))
            {
                return GetView864();
            }
            if ((index == 865))
            {
                return GetView865();
            }
            if ((index == 866))
            {
                return GetView866();
            }
            if ((index == 867))
            {
                return GetView867();
            }
            if ((index == 868))
            {
                return GetView868();
            }
            if ((index == 869))
            {
                return GetView869();
            }
            if ((index == 870))
            {
                return GetView870();
            }
            if ((index == 871))
            {
                return GetView871();
            }
            if ((index == 872))
            {
                return GetView872();
            }
            if ((index == 873))
            {
                return GetView873();
            }
            if ((index == 874))
            {
                return GetView874();
            }
            if ((index == 875))
            {
                return GetView875();
            }
            if ((index == 876))
            {
                return GetView876();
            }
            if ((index == 877))
            {
                return GetView877();
            }
            if ((index == 878))
            {
                return GetView878();
            }
            if ((index == 879))
            {
                return GetView879();
            }
            if ((index == 880))
            {
                return GetView880();
            }
            if ((index == 881))
            {
                return GetView881();
            }
            if ((index == 882))
            {
                return GetView882();
            }
            if ((index == 883))
            {
                return GetView883();
            }
            if ((index == 884))
            {
                return GetView884();
            }
            if ((index == 885))
            {
                return GetView885();
            }
            if ((index == 886))
            {
                return GetView886();
            }
            if ((index == 887))
            {
                return GetView887();
            }
            if ((index == 888))
            {
                return GetView888();
            }
            if ((index == 889))
            {
                return GetView889();
            }
            if ((index == 890))
            {
                return GetView890();
            }
            if ((index == 891))
            {
                return GetView891();
            }
            if ((index == 892))
            {
                return GetView892();
            }
            if ((index == 893))
            {
                return GetView893();
            }
            if ((index == 894))
            {
                return GetView894();
            }
            if ((index == 895))
            {
                return GetView895();
            }
            if ((index == 896))
            {
                return GetView896();
            }
            if ((index == 897))
            {
                return GetView897();
            }
            if ((index == 898))
            {
                return GetView898();
            }
            if ((index == 899))
            {
                return GetView899();
            }
            if ((index == 900))
            {
                return GetView900();
            }
            if ((index == 901))
            {
                return GetView901();
            }
            if ((index == 902))
            {
                return GetView902();
            }
            if ((index == 903))
            {
                return GetView903();
            }
            if ((index == 904))
            {
                return GetView904();
            }
            if ((index == 905))
            {
                return GetView905();
            }
            if ((index == 906))
            {
                return GetView906();
            }
            if ((index == 907))
            {
                return GetView907();
            }
            if ((index == 908))
            {
                return GetView908();
            }
            if ((index == 909))
            {
                return GetView909();
            }
            if ((index == 910))
            {
                return GetView910();
            }
            if ((index == 911))
            {
                return GetView911();
            }
            if ((index == 912))
            {
                return GetView912();
            }
            if ((index == 913))
            {
                return GetView913();
            }
            if ((index == 914))
            {
                return GetView914();
            }
            if ((index == 915))
            {
                return GetView915();
            }
            if ((index == 916))
            {
                return GetView916();
            }
            if ((index == 917))
            {
                return GetView917();
            }
            if ((index == 918))
            {
                return GetView918();
            }
            if ((index == 919))
            {
                return GetView919();
            }
            if ((index == 920))
            {
                return GetView920();
            }
            if ((index == 921))
            {
                return GetView921();
            }
            if ((index == 922))
            {
                return GetView922();
            }
            if ((index == 923))
            {
                return GetView923();
            }
            if ((index == 924))
            {
                return GetView924();
            }
            if ((index == 925))
            {
                return GetView925();
            }
            if ((index == 926))
            {
                return GetView926();
            }
            if ((index == 927))
            {
                return GetView927();
            }
            if ((index == 928))
            {
                return GetView928();
            }
            if ((index == 929))
            {
                return GetView929();
            }
            if ((index == 930))
            {
                return GetView930();
            }
            if ((index == 931))
            {
                return GetView931();
            }
            if ((index == 932))
            {
                return GetView932();
            }
            if ((index == 933))
            {
                return GetView933();
            }
            if ((index == 934))
            {
                return GetView934();
            }
            if ((index == 935))
            {
                return GetView935();
            }
            if ((index == 936))
            {
                return GetView936();
            }
            if ((index == 937))
            {
                return GetView937();
            }
            if ((index == 938))
            {
                return GetView938();
            }
            if ((index == 939))
            {
                return GetView939();
            }
            if ((index == 940))
            {
                return GetView940();
            }
            if ((index == 941))
            {
                return GetView941();
            }
            if ((index == 942))
            {
                return GetView942();
            }
            if ((index == 943))
            {
                return GetView943();
            }
            if ((index == 944))
            {
                return GetView944();
            }
            if ((index == 945))
            {
                return GetView945();
            }
            if ((index == 946))
            {
                return GetView946();
            }
            if ((index == 947))
            {
                return GetView947();
            }
            if ((index == 948))
            {
                return GetView948();
            }
            if ((index == 949))
            {
                return GetView949();
            }
            if ((index == 950))
            {
                return GetView950();
            }
            if ((index == 951))
            {
                return GetView951();
            }
            if ((index == 952))
            {
                return GetView952();
            }
            if ((index == 953))
            {
                return GetView953();
            }
            if ((index == 954))
            {
                return GetView954();
            }
            if ((index == 955))
            {
                return GetView955();
            }
            if ((index == 956))
            {
                return GetView956();
            }
            if ((index == 957))
            {
                return GetView957();
            }
            if ((index == 958))
            {
                return GetView958();
            }
            if ((index == 959))
            {
                return GetView959();
            }
            if ((index == 960))
            {
                return GetView960();
            }
            if ((index == 961))
            {
                return GetView961();
            }
            if ((index == 962))
            {
                return GetView962();
            }
            if ((index == 963))
            {
                return GetView963();
            }
            if ((index == 964))
            {
                return GetView964();
            }
            if ((index == 965))
            {
                return GetView965();
            }
            if ((index == 966))
            {
                return GetView966();
            }
            if ((index == 967))
            {
                return GetView967();
            }
            if ((index == 968))
            {
                return GetView968();
            }
            if ((index == 969))
            {
                return GetView969();
            }
            if ((index == 970))
            {
                return GetView970();
            }
            if ((index == 971))
            {
                return GetView971();
            }
            if ((index == 972))
            {
                return GetView972();
            }
            if ((index == 973))
            {
                return GetView973();
            }
            if ((index == 974))
            {
                return GetView974();
            }
            if ((index == 975))
            {
                return GetView975();
            }
            if ((index == 976))
            {
                return GetView976();
            }
            if ((index == 977))
            {
                return GetView977();
            }
            if ((index == 978))
            {
                return GetView978();
            }
            if ((index == 979))
            {
                return GetView979();
            }
            if ((index == 980))
            {
                return GetView980();
            }
            if ((index == 981))
            {
                return GetView981();
            }
            if ((index == 982))
            {
                return GetView982();
            }
            if ((index == 983))
            {
                return GetView983();
            }
            if ((index == 984))
            {
                return GetView984();
            }
            if ((index == 985))
            {
                return GetView985();
            }
            if ((index == 986))
            {
                return GetView986();
            }
            if ((index == 987))
            {
                return GetView987();
            }
            if ((index == 988))
            {
                return GetView988();
            }
            if ((index == 989))
            {
                return GetView989();
            }
            if ((index == 990))
            {
                return GetView990();
            }
            if ((index == 991))
            {
                return GetView991();
            }
            if ((index == 992))
            {
                return GetView992();
            }
            if ((index == 993))
            {
                return GetView993();
            }
            if ((index == 994))
            {
                return GetView994();
            }
            if ((index == 995))
            {
                return GetView995();
            }
            if ((index == 996))
            {
                return GetView996();
            }
            if ((index == 997))
            {
                return GetView997();
            }
            if ((index == 998))
            {
                return GetView998();
            }
            if ((index == 999))
            {
                return GetView999();
            }
            if ((index == 1000))
            {
                return GetView1000();
            }
            if ((index == 1001))
            {
                return GetView1001();
            }
            if ((index == 1002))
            {
                return GetView1002();
            }
            if ((index == 1003))
            {
                return GetView1003();
            }
            if ((index == 1004))
            {
                return GetView1004();
            }
            if ((index == 1005))
            {
                return GetView1005();
            }
            if ((index == 1006))
            {
                return GetView1006();
            }
            if ((index == 1007))
            {
                return GetView1007();
            }
            if ((index == 1008))
            {
                return GetView1008();
            }
            if ((index == 1009))
            {
                return GetView1009();
            }
            if ((index == 1010))
            {
                return GetView1010();
            }
            if ((index == 1011))
            {
                return GetView1011();
            }
            if ((index == 1012))
            {
                return GetView1012();
            }
            if ((index == 1013))
            {
                return GetView1013();
            }
            if ((index == 1014))
            {
                return GetView1014();
            }
            if ((index == 1015))
            {
                return GetView1015();
            }
            if ((index == 1016))
            {
                return GetView1016();
            }
            if ((index == 1017))
            {
                return GetView1017();
            }
            if ((index == 1018))
            {
                return GetView1018();
            }
            if ((index == 1019))
            {
                return GetView1019();
            }
            if ((index == 1020))
            {
                return GetView1020();
            }
            if ((index == 1021))
            {
                return GetView1021();
            }
            if ((index == 1022))
            {
                return GetView1022();
            }
            if ((index == 1023))
            {
                return GetView1023();
            }
            if ((index == 1024))
            {
                return GetView1024();
            }
            if ((index == 1025))
            {
                return GetView1025();
            }
            if ((index == 1026))
            {
                return GetView1026();
            }
            if ((index == 1027))
            {
                return GetView1027();
            }
            if ((index == 1028))
            {
                return GetView1028();
            }
            if ((index == 1029))
            {
                return GetView1029();
            }
            if ((index == 1030))
            {
                return GetView1030();
            }
            if ((index == 1031))
            {
                return GetView1031();
            }
            if ((index == 1032))
            {
                return GetView1032();
            }
            if ((index == 1033))
            {
                return GetView1033();
            }
            if ((index == 1034))
            {
                return GetView1034();
            }
            if ((index == 1035))
            {
                return GetView1035();
            }
            if ((index == 1036))
            {
                return GetView1036();
            }
            if ((index == 1037))
            {
                return GetView1037();
            }
            if ((index == 1038))
            {
                return GetView1038();
            }
            if ((index == 1039))
            {
                return GetView1039();
            }
            if ((index == 1040))
            {
                return GetView1040();
            }
            if ((index == 1041))
            {
                return GetView1041();
            }
            if ((index == 1042))
            {
                return GetView1042();
            }
            if ((index == 1043))
            {
                return GetView1043();
            }
            if ((index == 1044))
            {
                return GetView1044();
            }
            if ((index == 1045))
            {
                return GetView1045();
            }
            if ((index == 1046))
            {
                return GetView1046();
            }
            if ((index == 1047))
            {
                return GetView1047();
            }
            if ((index == 1048))
            {
                return GetView1048();
            }
            if ((index == 1049))
            {
                return GetView1049();
            }
            if ((index == 1050))
            {
                return GetView1050();
            }
            if ((index == 1051))
            {
                return GetView1051();
            }
            if ((index == 1052))
            {
                return GetView1052();
            }
            if ((index == 1053))
            {
                return GetView1053();
            }
            if ((index == 1054))
            {
                return GetView1054();
            }
            if ((index == 1055))
            {
                return GetView1055();
            }
            if ((index == 1056))
            {
                return GetView1056();
            }
            if ((index == 1057))
            {
                return GetView1057();
            }
            if ((index == 1058))
            {
                return GetView1058();
            }
            if ((index == 1059))
            {
                return GetView1059();
            }
            if ((index == 1060))
            {
                return GetView1060();
            }
            if ((index == 1061))
            {
                return GetView1061();
            }
            if ((index == 1062))
            {
                return GetView1062();
            }
            if ((index == 1063))
            {
                return GetView1063();
            }
            if ((index == 1064))
            {
                return GetView1064();
            }
            if ((index == 1065))
            {
                return GetView1065();
            }
            if ((index == 1066))
            {
                return GetView1066();
            }
            if ((index == 1067))
            {
                return GetView1067();
            }
            if ((index == 1068))
            {
                return GetView1068();
            }
            if ((index == 1069))
            {
                return GetView1069();
            }
            if ((index == 1070))
            {
                return GetView1070();
            }
            if ((index == 1071))
            {
                return GetView1071();
            }
            if ((index == 1072))
            {
                return GetView1072();
            }
            if ((index == 1073))
            {
                return GetView1073();
            }
            if ((index == 1074))
            {
                return GetView1074();
            }
            if ((index == 1075))
            {
                return GetView1075();
            }
            if ((index == 1076))
            {
                return GetView1076();
            }
            if ((index == 1077))
            {
                return GetView1077();
            }
            if ((index == 1078))
            {
                return GetView1078();
            }
            if ((index == 1079))
            {
                return GetView1079();
            }
            if ((index == 1080))
            {
                return GetView1080();
            }
            if ((index == 1081))
            {
                return GetView1081();
            }
            if ((index == 1082))
            {
                return GetView1082();
            }
            if ((index == 1083))
            {
                return GetView1083();
            }
            if ((index == 1084))
            {
                return GetView1084();
            }
            if ((index == 1085))
            {
                return GetView1085();
            }
            if ((index == 1086))
            {
                return GetView1086();
            }
            if ((index == 1087))
            {
                return GetView1087();
            }
            if ((index == 1088))
            {
                return GetView1088();
            }
            if ((index == 1089))
            {
                return GetView1089();
            }
            if ((index == 1090))
            {
                return GetView1090();
            }
            if ((index == 1091))
            {
                return GetView1091();
            }
            if ((index == 1092))
            {
                return GetView1092();
            }
            if ((index == 1093))
            {
                return GetView1093();
            }
            if ((index == 1094))
            {
                return GetView1094();
            }
            if ((index == 1095))
            {
                return GetView1095();
            }
            if ((index == 1096))
            {
                return GetView1096();
            }
            if ((index == 1097))
            {
                return GetView1097();
            }
            if ((index == 1098))
            {
                return GetView1098();
            }
            if ((index == 1099))
            {
                return GetView1099();
            }
            if ((index == 1100))
            {
                return GetView1100();
            }
            if ((index == 1101))
            {
                return GetView1101();
            }
            if ((index == 1102))
            {
                return GetView1102();
            }
            if ((index == 1103))
            {
                return GetView1103();
            }
            if ((index == 1104))
            {
                return GetView1104();
            }
            if ((index == 1105))
            {
                return GetView1105();
            }
            if ((index == 1106))
            {
                return GetView1106();
            }
            if ((index == 1107))
            {
                return GetView1107();
            }
            if ((index == 1108))
            {
                return GetView1108();
            }
            if ((index == 1109))
            {
                return GetView1109();
            }
            if ((index == 1110))
            {
                return GetView1110();
            }
            if ((index == 1111))
            {
                return GetView1111();
            }
            if ((index == 1112))
            {
                return GetView1112();
            }
            if ((index == 1113))
            {
                return GetView1113();
            }
            if ((index == 1114))
            {
                return GetView1114();
            }
            if ((index == 1115))
            {
                return GetView1115();
            }
            if ((index == 1116))
            {
                return GetView1116();
            }
            if ((index == 1117))
            {
                return GetView1117();
            }
            if ((index == 1118))
            {
                return GetView1118();
            }
            if ((index == 1119))
            {
                return GetView1119();
            }
            if ((index == 1120))
            {
                return GetView1120();
            }
            if ((index == 1121))
            {
                return GetView1121();
            }
            if ((index == 1122))
            {
                return GetView1122();
            }
            if ((index == 1123))
            {
                return GetView1123();
            }
            if ((index == 1124))
            {
                return GetView1124();
            }
            if ((index == 1125))
            {
                return GetView1125();
            }
            if ((index == 1126))
            {
                return GetView1126();
            }
            if ((index == 1127))
            {
                return GetView1127();
            }
            if ((index == 1128))
            {
                return GetView1128();
            }
            if ((index == 1129))
            {
                return GetView1129();
            }
            if ((index == 1130))
            {
                return GetView1130();
            }
            if ((index == 1131))
            {
                return GetView1131();
            }
            if ((index == 1132))
            {
                return GetView1132();
            }
            if ((index == 1133))
            {
                return GetView1133();
            }
            if ((index == 1134))
            {
                return GetView1134();
            }
            if ((index == 1135))
            {
                return GetView1135();
            }
            if ((index == 1136))
            {
                return GetView1136();
            }
            if ((index == 1137))
            {
                return GetView1137();
            }
            if ((index == 1138))
            {
                return GetView1138();
            }
            if ((index == 1139))
            {
                return GetView1139();
            }
            if ((index == 1140))
            {
                return GetView1140();
            }
            if ((index == 1141))
            {
                return GetView1141();
            }
            if ((index == 1142))
            {
                return GetView1142();
            }
            if ((index == 1143))
            {
                return GetView1143();
            }
            if ((index == 1144))
            {
                return GetView1144();
            }
            if ((index == 1145))
            {
                return GetView1145();
            }
            if ((index == 1146))
            {
                return GetView1146();
            }
            if ((index == 1147))
            {
                return GetView1147();
            }
            if ((index == 1148))
            {
                return GetView1148();
            }
            if ((index == 1149))
            {
                return GetView1149();
            }
            if ((index == 1150))
            {
                return GetView1150();
            }
            if ((index == 1151))
            {
                return GetView1151();
            }
            if ((index == 1152))
            {
                return GetView1152();
            }
            if ((index == 1153))
            {
                return GetView1153();
            }
            if ((index == 1154))
            {
                return GetView1154();
            }
            if ((index == 1155))
            {
                return GetView1155();
            }
            if ((index == 1156))
            {
                return GetView1156();
            }
            if ((index == 1157))
            {
                return GetView1157();
            }
            if ((index == 1158))
            {
                return GetView1158();
            }
            if ((index == 1159))
            {
                return GetView1159();
            }
            if ((index == 1160))
            {
                return GetView1160();
            }
            if ((index == 1161))
            {
                return GetView1161();
            }
            if ((index == 1162))
            {
                return GetView1162();
            }
            if ((index == 1163))
            {
                return GetView1163();
            }
            if ((index == 1164))
            {
                return GetView1164();
            }
            if ((index == 1165))
            {
                return GetView1165();
            }
            if ((index == 1166))
            {
                return GetView1166();
            }
            if ((index == 1167))
            {
                return GetView1167();
            }
            if ((index == 1168))
            {
                return GetView1168();
            }
            if ((index == 1169))
            {
                return GetView1169();
            }
            if ((index == 1170))
            {
                return GetView1170();
            }
            if ((index == 1171))
            {
                return GetView1171();
            }
            if ((index == 1172))
            {
                return GetView1172();
            }
            if ((index == 1173))
            {
                return GetView1173();
            }
            if ((index == 1174))
            {
                return GetView1174();
            }
            if ((index == 1175))
            {
                return GetView1175();
            }
            if ((index == 1176))
            {
                return GetView1176();
            }
            if ((index == 1177))
            {
                return GetView1177();
            }
            if ((index == 1178))
            {
                return GetView1178();
            }
            if ((index == 1179))
            {
                return GetView1179();
            }
            if ((index == 1180))
            {
                return GetView1180();
            }
            if ((index == 1181))
            {
                return GetView1181();
            }
            if ((index == 1182))
            {
                return GetView1182();
            }
            if ((index == 1183))
            {
                return GetView1183();
            }
            if ((index == 1184))
            {
                return GetView1184();
            }
            if ((index == 1185))
            {
                return GetView1185();
            }
            if ((index == 1186))
            {
                return GetView1186();
            }
            if ((index == 1187))
            {
                return GetView1187();
            }
            if ((index == 1188))
            {
                return GetView1188();
            }
            if ((index == 1189))
            {
                return GetView1189();
            }
            if ((index == 1190))
            {
                return GetView1190();
            }
            if ((index == 1191))
            {
                return GetView1191();
            }
            if ((index == 1192))
            {
                return GetView1192();
            }
            if ((index == 1193))
            {
                return GetView1193();
            }
            if ((index == 1194))
            {
                return GetView1194();
            }
            if ((index == 1195))
            {
                return GetView1195();
            }
            if ((index == 1196))
            {
                return GetView1196();
            }
            if ((index == 1197))
            {
                return GetView1197();
            }
            if ((index == 1198))
            {
                return GetView1198();
            }
            if ((index == 1199))
            {
                return GetView1199();
            }
            if ((index == 1200))
            {
                return GetView1200();
            }
            if ((index == 1201))
            {
                return GetView1201();
            }
            if ((index == 1202))
            {
                return GetView1202();
            }
            if ((index == 1203))
            {
                return GetView1203();
            }
            if ((index == 1204))
            {
                return GetView1204();
            }
            if ((index == 1205))
            {
                return GetView1205();
            }
            if ((index == 1206))
            {
                return GetView1206();
            }
            if ((index == 1207))
            {
                return GetView1207();
            }
            if ((index == 1208))
            {
                return GetView1208();
            }
            if ((index == 1209))
            {
                return GetView1209();
            }
            if ((index == 1210))
            {
                return GetView1210();
            }
            if ((index == 1211))
            {
                return GetView1211();
            }
            if ((index == 1212))
            {
                return GetView1212();
            }
            if ((index == 1213))
            {
                return GetView1213();
            }
            if ((index == 1214))
            {
                return GetView1214();
            }
            if ((index == 1215))
            {
                return GetView1215();
            }
            if ((index == 1216))
            {
                return GetView1216();
            }
            if ((index == 1217))
            {
                return GetView1217();
            }
            if ((index == 1218))
            {
                return GetView1218();
            }
            if ((index == 1219))
            {
                return GetView1219();
            }
            if ((index == 1220))
            {
                return GetView1220();
            }
            if ((index == 1221))
            {
                return GetView1221();
            }
            if ((index == 1222))
            {
                return GetView1222();
            }
            if ((index == 1223))
            {
                return GetView1223();
            }
            if ((index == 1224))
            {
                return GetView1224();
            }
            if ((index == 1225))
            {
                return GetView1225();
            }
            if ((index == 1226))
            {
                return GetView1226();
            }
            if ((index == 1227))
            {
                return GetView1227();
            }
            if ((index == 1228))
            {
                return GetView1228();
            }
            if ((index == 1229))
            {
                return GetView1229();
            }
            if ((index == 1230))
            {
                return GetView1230();
            }
            if ((index == 1231))
            {
                return GetView1231();
            }
            if ((index == 1232))
            {
                return GetView1232();
            }
            if ((index == 1233))
            {
                return GetView1233();
            }
            if ((index == 1234))
            {
                return GetView1234();
            }
            if ((index == 1235))
            {
                return GetView1235();
            }
            if ((index == 1236))
            {
                return GetView1236();
            }
            if ((index == 1237))
            {
                return GetView1237();
            }
            if ((index == 1238))
            {
                return GetView1238();
            }
            if ((index == 1239))
            {
                return GetView1239();
            }
            if ((index == 1240))
            {
                return GetView1240();
            }
            if ((index == 1241))
            {
                return GetView1241();
            }
            if ((index == 1242))
            {
                return GetView1242();
            }
            if ((index == 1243))
            {
                return GetView1243();
            }
            if ((index == 1244))
            {
                return GetView1244();
            }
            if ((index == 1245))
            {
                return GetView1245();
            }
            if ((index == 1246))
            {
                return GetView1246();
            }
            if ((index == 1247))
            {
                return GetView1247();
            }
            if ((index == 1248))
            {
                return GetView1248();
            }
            if ((index == 1249))
            {
                return GetView1249();
            }
            if ((index == 1250))
            {
                return GetView1250();
            }
            if ((index == 1251))
            {
                return GetView1251();
            }
            if ((index == 1252))
            {
                return GetView1252();
            }
            if ((index == 1253))
            {
                return GetView1253();
            }
            if ((index == 1254))
            {
                return GetView1254();
            }
            if ((index == 1255))
            {
                return GetView1255();
            }
            if ((index == 1256))
            {
                return GetView1256();
            }
            if ((index == 1257))
            {
                return GetView1257();
            }
            if ((index == 1258))
            {
                return GetView1258();
            }
            if ((index == 1259))
            {
                return GetView1259();
            }
            if ((index == 1260))
            {
                return GetView1260();
            }
            if ((index == 1261))
            {
                return GetView1261();
            }
            if ((index == 1262))
            {
                return GetView1262();
            }
            if ((index == 1263))
            {
                return GetView1263();
            }
            if ((index == 1264))
            {
                return GetView1264();
            }
            if ((index == 1265))
            {
                return GetView1265();
            }
            if ((index == 1266))
            {
                return GetView1266();
            }
            if ((index == 1267))
            {
                return GetView1267();
            }
            if ((index == 1268))
            {
                return GetView1268();
            }
            if ((index == 1269))
            {
                return GetView1269();
            }
            if ((index == 1270))
            {
                return GetView1270();
            }
            if ((index == 1271))
            {
                return GetView1271();
            }
            if ((index == 1272))
            {
                return GetView1272();
            }
            if ((index == 1273))
            {
                return GetView1273();
            }
            if ((index == 1274))
            {
                return GetView1274();
            }
            if ((index == 1275))
            {
                return GetView1275();
            }
            if ((index == 1276))
            {
                return GetView1276();
            }
            if ((index == 1277))
            {
                return GetView1277();
            }
            if ((index == 1278))
            {
                return GetView1278();
            }
            if ((index == 1279))
            {
                return GetView1279();
            }
            if ((index == 1280))
            {
                return GetView1280();
            }
            if ((index == 1281))
            {
                return GetView1281();
            }
            if ((index == 1282))
            {
                return GetView1282();
            }
            if ((index == 1283))
            {
                return GetView1283();
            }
            if ((index == 1284))
            {
                return GetView1284();
            }
            if ((index == 1285))
            {
                return GetView1285();
            }
            if ((index == 1286))
            {
                return GetView1286();
            }
            if ((index == 1287))
            {
                return GetView1287();
            }
            if ((index == 1288))
            {
                return GetView1288();
            }
            if ((index == 1289))
            {
                return GetView1289();
            }
            if ((index == 1290))
            {
                return GetView1290();
            }
            if ((index == 1291))
            {
                return GetView1291();
            }
            if ((index == 1292))
            {
                return GetView1292();
            }
            if ((index == 1293))
            {
                return GetView1293();
            }
            if ((index == 1294))
            {
                return GetView1294();
            }
            if ((index == 1295))
            {
                return GetView1295();
            }
            if ((index == 1296))
            {
                return GetView1296();
            }
            if ((index == 1297))
            {
                return GetView1297();
            }
            if ((index == 1298))
            {
                return GetView1298();
            }
            if ((index == 1299))
            {
                return GetView1299();
            }
            if ((index == 1300))
            {
                return GetView1300();
            }
            if ((index == 1301))
            {
                return GetView1301();
            }
            if ((index == 1302))
            {
                return GetView1302();
            }
            if ((index == 1303))
            {
                return GetView1303();
            }
            if ((index == 1304))
            {
                return GetView1304();
            }
            if ((index == 1305))
            {
                return GetView1305();
            }
            if ((index == 1306))
            {
                return GetView1306();
            }
            if ((index == 1307))
            {
                return GetView1307();
            }
            if ((index == 1308))
            {
                return GetView1308();
            }
            if ((index == 1309))
            {
                return GetView1309();
            }
            if ((index == 1310))
            {
                return GetView1310();
            }
            if ((index == 1311))
            {
                return GetView1311();
            }
            if ((index == 1312))
            {
                return GetView1312();
            }
            if ((index == 1313))
            {
                return GetView1313();
            }
            if ((index == 1314))
            {
                return GetView1314();
            }
            if ((index == 1315))
            {
                return GetView1315();
            }
            if ((index == 1316))
            {
                return GetView1316();
            }
            if ((index == 1317))
            {
                return GetView1317();
            }
            if ((index == 1318))
            {
                return GetView1318();
            }
            if ((index == 1319))
            {
                return GetView1319();
            }
            if ((index == 1320))
            {
                return GetView1320();
            }
            if ((index == 1321))
            {
                return GetView1321();
            }
            if ((index == 1322))
            {
                return GetView1322();
            }
            if ((index == 1323))
            {
                return GetView1323();
            }
            if ((index == 1324))
            {
                return GetView1324();
            }
            if ((index == 1325))
            {
                return GetView1325();
            }
            if ((index == 1326))
            {
                return GetView1326();
            }
            if ((index == 1327))
            {
                return GetView1327();
            }
            if ((index == 1328))
            {
                return GetView1328();
            }
            if ((index == 1329))
            {
                return GetView1329();
            }
            if ((index == 1330))
            {
                return GetView1330();
            }
            if ((index == 1331))
            {
                return GetView1331();
            }
            if ((index == 1332))
            {
                return GetView1332();
            }
            if ((index == 1333))
            {
                return GetView1333();
            }
            if ((index == 1334))
            {
                return GetView1334();
            }
            if ((index == 1335))
            {
                return GetView1335();
            }
            if ((index == 1336))
            {
                return GetView1336();
            }
            if ((index == 1337))
            {
                return GetView1337();
            }
            if ((index == 1338))
            {
                return GetView1338();
            }
            if ((index == 1339))
            {
                return GetView1339();
            }
            if ((index == 1340))
            {
                return GetView1340();
            }
            if ((index == 1341))
            {
                return GetView1341();
            }
            if ((index == 1342))
            {
                return GetView1342();
            }
            if ((index == 1343))
            {
                return GetView1343();
            }
            if ((index == 1344))
            {
                return GetView1344();
            }
            if ((index == 1345))
            {
                return GetView1345();
            }
            if ((index == 1346))
            {
                return GetView1346();
            }
            if ((index == 1347))
            {
                return GetView1347();
            }
            if ((index == 1348))
            {
                return GetView1348();
            }
            if ((index == 1349))
            {
                return GetView1349();
            }
            if ((index == 1350))
            {
                return GetView1350();
            }
            if ((index == 1351))
            {
                return GetView1351();
            }
            if ((index == 1352))
            {
                return GetView1352();
            }
            if ((index == 1353))
            {
                return GetView1353();
            }
            if ((index == 1354))
            {
                return GetView1354();
            }
            if ((index == 1355))
            {
                return GetView1355();
            }
            if ((index == 1356))
            {
                return GetView1356();
            }
            if ((index == 1357))
            {
                return GetView1357();
            }
            if ((index == 1358))
            {
                return GetView1358();
            }
            if ((index == 1359))
            {
                return GetView1359();
            }
            if ((index == 1360))
            {
                return GetView1360();
            }
            if ((index == 1361))
            {
                return GetView1361();
            }
            if ((index == 1362))
            {
                return GetView1362();
            }
            if ((index == 1363))
            {
                return GetView1363();
            }
            if ((index == 1364))
            {
                return GetView1364();
            }
            if ((index == 1365))
            {
                return GetView1365();
            }
            if ((index == 1366))
            {
                return GetView1366();
            }
            if ((index == 1367))
            {
                return GetView1367();
            }
            if ((index == 1368))
            {
                return GetView1368();
            }
            if ((index == 1369))
            {
                return GetView1369();
            }
            if ((index == 1370))
            {
                return GetView1370();
            }
            if ((index == 1371))
            {
                return GetView1371();
            }
            if ((index == 1372))
            {
                return GetView1372();
            }
            if ((index == 1373))
            {
                return GetView1373();
            }
            if ((index == 1374))
            {
                return GetView1374();
            }
            if ((index == 1375))
            {
                return GetView1375();
            }
            if ((index == 1376))
            {
                return GetView1376();
            }
            if ((index == 1377))
            {
                return GetView1377();
            }
            if ((index == 1378))
            {
                return GetView1378();
            }
            if ((index == 1379))
            {
                return GetView1379();
            }
            if ((index == 1380))
            {
                return GetView1380();
            }
            if ((index == 1381))
            {
                return GetView1381();
            }
            if ((index == 1382))
            {
                return GetView1382();
            }
            if ((index == 1383))
            {
                return GetView1383();
            }
            if ((index == 1384))
            {
                return GetView1384();
            }
            if ((index == 1385))
            {
                return GetView1385();
            }
            if ((index == 1386))
            {
                return GetView1386();
            }
            if ((index == 1387))
            {
                return GetView1387();
            }
            if ((index == 1388))
            {
                return GetView1388();
            }
            if ((index == 1389))
            {
                return GetView1389();
            }
            if ((index == 1390))
            {
                return GetView1390();
            }
            if ((index == 1391))
            {
                return GetView1391();
            }
            if ((index == 1392))
            {
                return GetView1392();
            }
            if ((index == 1393))
            {
                return GetView1393();
            }
            if ((index == 1394))
            {
                return GetView1394();
            }
            if ((index == 1395))
            {
                return GetView1395();
            }
            if ((index == 1396))
            {
                return GetView1396();
            }
            if ((index == 1397))
            {
                return GetView1397();
            }
            if ((index == 1398))
            {
                return GetView1398();
            }
            if ((index == 1399))
            {
                return GetView1399();
            }
            if ((index == 1400))
            {
                return GetView1400();
            }
            if ((index == 1401))
            {
                return GetView1401();
            }
            if ((index == 1402))
            {
                return GetView1402();
            }
            if ((index == 1403))
            {
                return GetView1403();
            }
            if ((index == 1404))
            {
                return GetView1404();
            }
            if ((index == 1405))
            {
                return GetView1405();
            }
            if ((index == 1406))
            {
                return GetView1406();
            }
            if ((index == 1407))
            {
                return GetView1407();
            }
            if ((index == 1408))
            {
                return GetView1408();
            }
            if ((index == 1409))
            {
                return GetView1409();
            }
            if ((index == 1410))
            {
                return GetView1410();
            }
            if ((index == 1411))
            {
                return GetView1411();
            }
            if ((index == 1412))
            {
                return GetView1412();
            }
            if ((index == 1413))
            {
                return GetView1413();
            }
            if ((index == 1414))
            {
                return GetView1414();
            }
            if ((index == 1415))
            {
                return GetView1415();
            }
            if ((index == 1416))
            {
                return GetView1416();
            }
            if ((index == 1417))
            {
                return GetView1417();
            }
            if ((index == 1418))
            {
                return GetView1418();
            }
            if ((index == 1419))
            {
                return GetView1419();
            }
            if ((index == 1420))
            {
                return GetView1420();
            }
            if ((index == 1421))
            {
                return GetView1421();
            }
            if ((index == 1422))
            {
                return GetView1422();
            }
            if ((index == 1423))
            {
                return GetView1423();
            }
            if ((index == 1424))
            {
                return GetView1424();
            }
            if ((index == 1425))
            {
                return GetView1425();
            }
            if ((index == 1426))
            {
                return GetView1426();
            }
            if ((index == 1427))
            {
                return GetView1427();
            }
            if ((index == 1428))
            {
                return GetView1428();
            }
            if ((index == 1429))
            {
                return GetView1429();
            }
            if ((index == 1430))
            {
                return GetView1430();
            }
            if ((index == 1431))
            {
                return GetView1431();
            }
            if ((index == 1432))
            {
                return GetView1432();
            }
            if ((index == 1433))
            {
                return GetView1433();
            }
            if ((index == 1434))
            {
                return GetView1434();
            }
            if ((index == 1435))
            {
                return GetView1435();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.persistentpermissions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.persistentpermissions", @"
    SELECT VALUE -- Constructing persistentpermissions
        [PostgresModel.Store.persistentpermission](T1.persistentpermission_oid, T1.persistentpermission_serializedpermission, T1.persistentpermission_role)
    FROM (
        SELECT 
            T.Oid AS persistentpermission_oid, 
            T.Serializedpermission AS persistentpermission_serializedpermission, 
            T.Role AS persistentpermission_role, 
            True AS _from0
        FROM PostgresEntities.Persistentpermissions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Persistentpermissions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Persistentpermissions", @"
    SELECT VALUE -- Constructing Persistentpermissions
        [PostgresModel.Persistentpermission](T1.Persistentpermission_Oid, T1.Persistentpermission_Serializedpermission, T1.Persistentpermission_Role)
    FROM (
        SELECT 
            T.oid AS Persistentpermission_Oid, 
            T.serializedpermission AS Persistentpermission_Serializedpermission, 
            T.role AS Persistentpermission_Role, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.persistentpermissions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infovalues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infovalues", @"
    SELECT VALUE -- Constructing infovalues
        [PostgresModel.Store.infovalue](T1.infovalue_infotype, T1.infovalue_infovalue, T1.infovalue_company, T1.infovalue_lpu, T1.infovalue_otdel, T1.infovalue_sotr, T1.infovalue_people, T1.infovalue_oid, T1.[infovalue.show_on_site])
    FROM (
        SELECT 
            T.Infotype AS infovalue_infotype, 
            T.Infovalue2 AS infovalue_infovalue, 
            T.Company AS infovalue_company, 
            T.Lpu AS infovalue_lpu, 
            T.Otdel AS infovalue_otdel, 
            T.Sotr AS infovalue_sotr, 
            T.People AS infovalue_people, 
            T.Oid AS infovalue_oid, 
            T.ShowOnSite AS [infovalue.show_on_site], 
            True AS _from0
        FROM PostgresEntities.Infovalues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2372);
            viewString.Append("\r\n    SELECT VALUE -- Constructing lpus\r\n        [PostgresModel.Store.lpu](T1.lp");
            viewString.Append("u_oid, T1.lpu_identifier, T1.[lpu.lpu_code], T1.[lpu.lpu_code_value], T1.[lpu.lp");
            viewString.Append("u_type], T1.lpu_ownership, T1.[lpu.organizational_form], T1.lpu_oms, T1.lpu_dlo,");
            viewString.Append(" T1.[lpu.lpu_in_town], T1.[lpu.registrator_name], T1.[lpu.registration_document]");
            viewString.Append(", T1.[lpu.registration_date], T1.[lpu.registration_number], T1.lpu_transport, T1");
            viewString.Append(".lpu_telreg, T1.lpu_telspr, T1.lpu_city, T1.[lpu.city_kladroid], T1.[lpu.is_kvot");
            viewString.Append("a], T1.[lpu.show_in_site], T1.[lpu.is_private], T1.lpu_territoryaffilation, T1.l");
            viewString.Append("pu_site, T1.[lpu.is_allow_zapis], T1.[lpu.lpu_work_dogovor], T1.[lpu.supreme_dep");
            viewString.Append("artment], T1.[lpu.lpu_profile], T1.[lpu.subordination_type], T1.[lpu.level_type]");
            viewString.Append(", T1.[lpu.gasurf_oid])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS lpu_oi");
            viewString.Append("d, \r\n            T.Identifier AS lpu_identifier, \r\n            T.LpuCode AS [lpu");
            viewString.Append(".lpu_code], \r\n            T.LpuCodeValue AS [lpu.lpu_code_value], \r\n            ");
            viewString.Append("T.LpuType AS [lpu.lpu_type], \r\n            T.Ownership AS lpu_ownership, \r\n     ");
            viewString.Append("       T.OrganizationalForm AS [lpu.organizational_form], \r\n            T.Oms AS");
            viewString.Append(" lpu_oms, \r\n            T.Dlo AS lpu_dlo, \r\n            T.LpuInTown AS [lpu.lpu_");
            viewString.Append("in_town], \r\n            T.RegistratorName AS [lpu.registrator_name], \r\n         ");
            viewString.Append("   T.RegistrationDocument AS [lpu.registration_document], \r\n            T.Regist");
            viewString.Append("rationDate AS [lpu.registration_date], \r\n            T.RegistrationNumber AS [lp");
            viewString.Append("u.registration_number], \r\n            T.Transport AS lpu_transport, \r\n          ");
            viewString.Append("  T.Telreg AS lpu_telreg, \r\n            T.Telspr AS lpu_telspr, \r\n            T.");
            viewString.Append("City AS lpu_city, \r\n            T.CityKladroid AS [lpu.city_kladroid], \r\n       ");
            viewString.Append("     T.IsKvota AS [lpu.is_kvota], \r\n            T.ShowInSite AS [lpu.show_in_sit");
            viewString.Append("e], \r\n            T.IsPrivate AS [lpu.is_private], \r\n            T.Territoryaffi");
            viewString.Append("lation AS lpu_territoryaffilation, \r\n            T.Site AS lpu_site, \r\n         ");
            viewString.Append("   T.IsAllowZapis AS [lpu.is_allow_zapis], \r\n            T.LpuWorkDogovor AS [lp");
            viewString.Append("u.lpu_work_dogovor], \r\n            T.SupremeDepartment AS [lpu.supreme_departmen");
            viewString.Append("t], \r\n            T.LpuProfile AS [lpu.lpu_profile], \r\n            T.Subordinati");
            viewString.Append("onType AS [lpu.subordination_type], \r\n            T.LevelType AS [lpu.level_type");
            viewString.Append("], \r\n            T.GasurfOid AS [lpu.gasurf_oid], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM PostgresEntities.Lpus AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpus", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2139);
            viewString.Append("\r\n    SELECT VALUE -- Constructing companies\r\n        [PostgresModel.Store.compa");
            viewString.Append("ny](T1.company_oid, T1.company_fullname, T1.company_shortname, T1.company_phone,");
            viewString.Append(" T1.company_fax, T1.company_okonh, T1.company_okpo, T1.company_inn, T1.company_o");
            viewString.Append("grn, T1.company_kpf, T1.company_address, T1.company_home, T1.company_optimisticl");
            viewString.Append("ockfield, T1.company_gcrecord, T1.company_addressfact, T1.company_raschschet, T1");
            viewString.Append(".company_bank, T1.company_kpp, T1.company_bik, T1.company_korschet, T1.company_r");
            viewString.Append("egion, T1.company_okato, T1.company_okved, T1.[company.foms_code], T1.company_ow");
            viewString.Append("nership, T1.company_chief, T1.[company.chief_contact], T1.[company.chief_dover_d");
            viewString.Append("etail], T1.company_recipient, T1.[company.recip_bank])\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.Oid AS company_oid, \r\n            T.Fullname AS company_fulln");
            viewString.Append("ame, \r\n            T.Shortname AS company_shortname, \r\n            T.Phone AS co");
            viewString.Append("mpany_phone, \r\n            T.Fax AS company_fax, \r\n            T.Okonh AS compan");
            viewString.Append("y_okonh, \r\n            T.Okpo AS company_okpo, \r\n            T.Inn AS company_in");
            viewString.Append("n, \r\n            T.Ogrn AS company_ogrn, \r\n            T.Kpf AS company_kpf, \r\n ");
            viewString.Append("           T.Address AS company_address, \r\n            T.Home AS company_home, \r");
            viewString.Append("\n            T.Optimisticlockfield AS company_optimisticlockfield, \r\n           ");
            viewString.Append(" T.Gcrecord AS company_gcrecord, \r\n            T.Addressfact AS company_addressf");
            viewString.Append("act, \r\n            T.Raschschet AS company_raschschet, \r\n            T.Bank AS c");
            viewString.Append("ompany_bank, \r\n            T.Kpp AS company_kpp, \r\n            T.Bik AS company_");
            viewString.Append("bik, \r\n            T.Korschet AS company_korschet, \r\n            T.Region AS com");
            viewString.Append("pany_region, \r\n            T.Okato AS company_okato, \r\n            T.Okved AS co");
            viewString.Append("mpany_okved, \r\n            T.FomsCode AS [company.foms_code], \r\n            T.Ow");
            viewString.Append("nership AS company_ownership, \r\n            T.Chief AS company_chief, \r\n        ");
            viewString.Append("    T.ChiefContact AS [company.chief_contact], \r\n            T.ChiefDoverDetail ");
            viewString.Append("AS [company.chief_dover_detail], \r\n            T.Recipient AS company_recipient,");
            viewString.Append(" \r\n            T.RecipBank AS [company.recip_bank], \r\n            True AS _from0");
            viewString.Append("\r\n        FROM PostgresEntities.Companies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.companies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licence_opers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licence_opers", @"
    SELECT VALUE -- Constructing licence_opers
        [PostgresModel.Store.licence_oper](T1.[licence_oper.oid], T1.[licence_oper.licence], T1.[licence_oper.licence_oper_type], T1.[licence_oper.date_oper])
    FROM (
        SELECT 
            T.Oid AS [licence_oper.oid], 
            T.Licence AS [licence_oper.licence], 
            T.LicenceOperType AS [licence_oper.licence_oper_type], 
            T.DateOper AS [licence_oper.date_oper], 
            True AS _from0
        FROM PostgresEntities.LicenceOpers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licence_oper_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licence_oper_types", @"
    SELECT VALUE -- Constructing licence_oper_types
        [PostgresModel.Store.licence_oper_type](T1.[licence_oper_type.oid], T1.[licence_oper_type.name], T1.[licence_oper_type.show], T1.[licence_oper_type.name2], T1.[licence_oper_type.status])
    FROM (
        SELECT 
            T.Oid AS [licence_oper_type.oid], 
            T.Name AS [licence_oper_type.name], 
            T.Show AS [licence_oper_type.show], 
            T.Name2 AS [licence_oper_type.name2], 
            T.Status AS [licence_oper_type.status], 
            True AS _from0
        FROM PostgresEntities.LicenceOperTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_types", @"
    SELECT VALUE -- Constructing lpu_types
        [PostgresModel.Store.lpu_type](T1.[lpu_type.oid], T1.[lpu_type.name], T1.[lpu_type.show], T1.[lpu_type.name2], T1.[lpu_type.status], T1.[lpu_type.parent], T1.[lpu_type.id])
    FROM (
        SELECT 
            T.Oid AS [lpu_type.oid], 
            T.Name AS [lpu_type.name], 
            T.Show AS [lpu_type.show], 
            T.Name2 AS [lpu_type.name2], 
            T.Status AS [lpu_type.status], 
            T.Parent AS [lpu_type.parent], 
            T.Id AS [lpu_type.id], 
            True AS _from0
        FROM PostgresEntities.LpuTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_ownerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_ownerships", @"
    SELECT VALUE -- Constructing lpu_ownerships
        [PostgresModel.Store.lpu_ownership](T1.[lpu_ownership.oid], T1.[lpu_ownership.name], T1.[lpu_ownership.show], T1.[lpu_ownership.name2], T1.[lpu_ownership.status])
    FROM (
        SELECT 
            T.Oid AS [lpu_ownership.oid], 
            T.Name AS [lpu_ownership.name], 
            T.Show AS [lpu_ownership.show], 
            T.Name2 AS [lpu_ownership.name2], 
            T.Status AS [lpu_ownership.status], 
            True AS _from0
        FROM PostgresEntities.LpuOwnerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_organizational_forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_organizational_forms", @"
    SELECT VALUE -- Constructing lpu_organizational_forms
        [PostgresModel.Store.lpu_organizational_form](T1.[lpu_organizational_form.oid], T1.[lpu_organizational_form.name], T1.[lpu_organizational_form.show], T1.[lpu_organizational_form.name2], T1.[lpu_organizational_form.status])
    FROM (
        SELECT 
            T.Oid AS [lpu_organizational_form.oid], 
            T.Name AS [lpu_organizational_form.name], 
            T.Show AS [lpu_organizational_form.show], 
            T.Name2 AS [lpu_organizational_form.name2], 
            T.Status AS [lpu_organizational_form.status], 
            True AS _from0
        FROM PostgresEntities.LpuOrganizationalForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infotypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infotypes", @"
    SELECT VALUE -- Constructing infotypes
        [PostgresModel.Store.infotype](T1.infotype_oid, T1.[infotype.infotypename_en], T1.[infotype.infotypename_ru])
    FROM (
        SELECT 
            T.Oid AS infotype_oid, 
            T.InfotypenameEn AS [infotype.infotypename_en], 
            T.InfotypenameRu AS [infotype.infotypename_ru], 
            True AS _from0
        FROM PostgresEntities.Infotypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licence_activity_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licence_activity_types", @"
    SELECT VALUE -- Constructing licence_activity_types
        [PostgresModel.Store.licence_activity_type](T1.[licence_activity_type.oid], T1.[licence_activity_type.name], T1.[licence_activity_type.show], T1.[licence_activity_type.name2], T1.[licence_activity_type.status])
    FROM (
        SELECT 
            T.Oid AS [licence_activity_type.oid], 
            T.Name AS [licence_activity_type.name], 
            T.Show AS [licence_activity_type.show], 
            T.Name2 AS [licence_activity_type.name2], 
            T.Status AS [licence_activity_type.status], 
            True AS _from0
        FROM PostgresEntities.LicenceActivityTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licences
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licences", @"
    SELECT VALUE -- Constructing licences
        [PostgresModel.Store.licence](T1.licence_oid, T1.licence_lpu, T1.licence_company, T1.[licence.licence_series], T1.[licence.licence_number], T1.[licence.licence_registration], T1.[licence.licence_activity])
    FROM (
        SELECT 
            T.Oid AS licence_oid, 
            T.Lpu AS licence_lpu, 
            T.Company AS licence_company, 
            T.LicenceSeries AS [licence.licence_series], 
            T.LicenceNumber AS [licence.licence_number], 
            T.LicenceRegistration AS [licence.licence_registration], 
            T.LicenceActivity AS [licence.licence_activity], 
            True AS _from0
        FROM PostgresEntities.Licences AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.services", @"
    SELECT VALUE -- Constructing services
        [PostgresModel.Store.services](T1.services_oid, T1.services_defaultname, T1.services_show, T1.[services.pay_type], T1.services_status, T1.services_code, T1.[services.service_group], T1.[services.is_custom_price], T1.[services.is_superbase])
    FROM (
        SELECT 
            T.Oid AS services_oid, 
            T.Defaultname AS services_defaultname, 
            T.Show AS services_show, 
            T.PayType AS [services.pay_type], 
            T.Status AS services_status, 
            T.Code AS services_code, 
            T.ServiceGroup AS [services.service_group], 
            T.IsCustomPrice AS [services.is_custom_price], 
            T.IsSuperbase AS [services.is_superbase], 
            True AS _from0
        FROM PostgresEntities.Services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tkladrsprs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tkladrsprs", @"
    SELECT VALUE -- Constructing tkladrsprs
        [PostgresModel.Store.tkladrspr](T1.tkladrspr_oid, T1.[tkladrspr.fc_prefix], T1.[tkladrspr.fk_id_oracle], T1.[tkladrspr.fk_owner_oracle], T1.[tkladrspr.fk_level], T1.tkladrspr_showelement, T1.tkladrspr_phonecode, T1.tkladrspr_parent, T1.tkladrspr_name, T1.tkladrspr_code, T1.[tkladrspr.gasurf_id], T1.tkladrspr_okato)
    FROM (
        SELECT 
            T.Oid AS tkladrspr_oid, 
            T.FcPrefix AS [tkladrspr.fc_prefix], 
            T.FkIdOracle AS [tkladrspr.fk_id_oracle], 
            T.FkOwnerOracle AS [tkladrspr.fk_owner_oracle], 
            T.FkLevel AS [tkladrspr.fk_level], 
            T.Showelement AS tkladrspr_showelement, 
            T.Phonecode AS tkladrspr_phonecode, 
            T.Parent AS tkladrspr_parent, 
            T.Name AS tkladrspr_name, 
            T.Code AS tkladrspr_code, 
            T.GasurfId AS [tkladrspr.gasurf_id], 
            T.Okato AS tkladrspr_okato, 
            True AS _from0
        FROM PostgresEntities.TkladrSprs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sysusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sysusers", "\r\n    SELECT VALUE -- Constructing sysusers\r\n        [PostgresModel.Store.sysuser" +
                    "](T1.sysuser_oid, T1.sysuser_passwordchagedate, T1.sysuser_storedpassword, T1.sy" +
                    "suser_username, T1.sysuser_changepasswordonfirstlogon, T1.sysuser_isactive, T1.s" +
                    "ysuser_codeuser, T1.sysuser_isadministrator, T1.sysuser_isfulladministrator, T1." +
                    "sysuser_isaspuser, T1.sysuser_readmessages, T1.sysuser_showinsite, T1.sysuser_fo" +
                    "to, T1.sysuser_tabelnumber, T1.[sysuser.dlo_sotr], T1.[sysuser.code_disabled], T" +
                    "1.sysuser_thumbprint)\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS sysuser" +
                    "_oid, \r\n            T.Passwordchagedate AS sysuser_passwordchagedate, \r\n        " +
                    "    T.Storedpassword AS sysuser_storedpassword, \r\n            T.Username AS sysu" +
                    "ser_username, \r\n            T.Changepasswordonfirstlogon AS sysuser_changepasswo" +
                    "rdonfirstlogon, \r\n            T.Isactive AS sysuser_isactive, \r\n            T.Co" +
                    "deuser AS sysuser_codeuser, \r\n            T.Isadministrator AS sysuser_isadminis" +
                    "trator, \r\n            T.Isfulladministrator AS sysuser_isfulladministrator, \r\n  " +
                    "          T.Isaspuser AS sysuser_isaspuser, \r\n            T.Readmessages AS sysu" +
                    "ser_readmessages, \r\n            T.Showinsite AS sysuser_showinsite, \r\n          " +
                    "  T.Foto AS sysuser_foto, \r\n            T.Tabelnumber AS sysuser_tabelnumber, \r\n" +
                    "            T.DloSotr AS [sysuser.dlo_sotr], \r\n            T.CodeDisabled AS [sy" +
                    "suser.code_disabled], \r\n            T.Thumbprint AS sysuser_thumbprint, \r\n      " +
                    "      True AS _from0\r\n        FROM PostgresEntities.Sysusers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotrs", @"
    SELECT VALUE -- Constructing sotrs
        [PostgresModel.Store.sotr](T1.sotr_oid, T1.sotr_sysuser, T1.sotr_otdel, T1.sotr_post, T1.sotr_district, T1.[sotr.date_post_begin], T1.[sotr.date_post_end], T1.sotr_id, T1.sotr_sysdate)
    FROM (
        SELECT 
            T.Oid AS sotr_oid, 
            T.Sysuser AS sotr_sysuser, 
            T.Otdel AS sotr_otdel, 
            T.Post AS sotr_post, 
            T.District AS sotr_district, 
            T.DatePostBegin AS [sotr.date_post_begin], 
            T.DatePostEnd AS [sotr.date_post_end], 
            T.Id AS sotr_id, 
            T.Sysdate AS sotr_sysdate, 
            True AS _from0
        FROM PostgresEntities.Sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3433);
            viewString.Append("\r\n    SELECT VALUE -- Constructing people\r\n        [PostgresModel.Store.people](");
            viewString.Append("T1.people_oid, T1.people_dtcreation, T1.people_id, T1.people_sex, T1.people_live");
            viewString.Append("in, T1.people_sstate, T1.people_pacient, T1.people_addressex1, T1.people_address");
            viewString.Append("ex2, T1.people_lpu, T1.people_email, T1.people_telhome, T1.people_telwork, T1.pe");
            viewString.Append("ople_telsot1, T1.people_telsot2, T1.people_district, T1.people_company, T1.peopl");
            viewString.Append("e_peopledoctype, T1.people_peopledocser, T1.people_peopledocnum, T1.people_dispu");
            viewString.Append("chet, T1.people_snils, T1.people_profession, T1.people_peoplepost, T1.people_dep");
            viewString.Append("endant, T1.people_webmail, T1.people_webphone, T1.people_region, T1.people_categ");
            viewString.Append("ory, T1.people_placework, T1.people_firstname, T1.people_lastname, T1.people_mid");
            viewString.Append("dlename, T1.people_birthday, T1.people_login, T1.people_waslogin, T1.people_pass");
            viewString.Append("word, T1.people_deathdate, T1.[people.gasurf_oid], T1.people_phonecode, T1.peopl");
            viewString.Append("e_karta, T1.people_importcode, T1.people_sysdate, T1.people_snils2, T1.people_de");
            viewString.Append("scription, T1.people_issuedate, T1.people_issuedby, T1.people_enddate, T1.people");
            viewString.Append("_comment, T1.people_peopledocdepcode)\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.Oid AS people_oid, \r\n            T.Dtcreation AS people_dtcreation, \r\n        ");
            viewString.Append("    T.Id AS people_id, \r\n            T.Sex AS people_sex, \r\n            T.Livein");
            viewString.Append(" AS people_livein, \r\n            T.Sstate AS people_sstate, \r\n            T.Paci");
            viewString.Append("ent AS people_pacient, \r\n            T.Addressex1 AS people_addressex1, \r\n      ");
            viewString.Append("      T.Addressex2 AS people_addressex2, \r\n            T.Lpu AS people_lpu, \r\n  ");
            viewString.Append("          T.Email AS people_email, \r\n            T.Telhome AS people_telhome, \r\n");
            viewString.Append("            T.Telwork AS people_telwork, \r\n            T.Telsot1 AS people_telso");
            viewString.Append("t1, \r\n            T.Telsot2 AS people_telsot2, \r\n            T.District AS peopl");
            viewString.Append("e_district, \r\n            T.Company AS people_company, \r\n            T.Peopledoc");
            viewString.Append("type AS people_peopledoctype, \r\n            T.Peopledocser AS people_peopledocse");
            viewString.Append("r, \r\n            T.Peopledocnum AS people_peopledocnum, \r\n            T.Dispuche");
            viewString.Append("t AS people_dispuchet, \r\n            T.Snils AS people_snils, \r\n            T.Pr");
            viewString.Append("ofession AS people_profession, \r\n            T.Peoplepost AS people_peoplepost, ");
            viewString.Append("\r\n            T.Dependant AS people_dependant, \r\n            T.Webmail AS people");
            viewString.Append("_webmail, \r\n            T.Webphone AS people_webphone, \r\n            T.Region AS");
            viewString.Append(" people_region, \r\n            T.Category AS people_category, \r\n            T.Pla");
            viewString.Append("cework AS people_placework, \r\n            T.Firstname AS people_firstname, \r\n   ");
            viewString.Append("         T.Lastname AS people_lastname, \r\n            T.Middlename AS people_mid");
            viewString.Append("dlename, \r\n            T.Birthday AS people_birthday, \r\n            T.Login AS p");
            viewString.Append("eople_login, \r\n            T.Waslogin AS people_waslogin, \r\n            T.Passwo");
            viewString.Append("rd AS people_password, \r\n            T.Deathdate AS people_deathdate, \r\n        ");
            viewString.Append("    T.GasurfOid AS [people.gasurf_oid], \r\n            T.Phonecode AS people_phon");
            viewString.Append("ecode, \r\n            T.Karta AS people_karta, \r\n            T.Importcode AS peop");
            viewString.Append("le_importcode, \r\n            T.Sysdate AS people_sysdate, \r\n            T.Snils2");
            viewString.Append(" AS people_snils2, \r\n            T.Description AS people_description, \r\n        ");
            viewString.Append("    T.Issuedate AS people_issuedate, \r\n            T.Issuedby AS people_issuedby");
            viewString.Append(", \r\n            T.Enddate AS people_enddate, \r\n            T.Comment AS people_c");
            viewString.Append("omment, \r\n            T.Peopledocdepcode AS people_peopledocdepcode, \r\n         ");
            viewString.Append("   True AS _from0\r\n        FROM PostgresEntities.People AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdels", @"
    SELECT VALUE -- Constructing otdels
        [PostgresModel.Store.otdel](T1.otdel_oid, T1.otdel_lpu, T1.otdel_addressex, T1.otdel_parent, T1.otdel_name, T1.[otdel.otdel_code], T1.otdel_location, T1.otdel_distance, T1.[otdel.otdel_type], T1.[otdel.otdel_profile], T1.[otdel.foms_code], T1.otdel_sysdate, T1.[otdel.show_on_site])
    FROM (
        SELECT 
            T.Oid AS otdel_oid, 
            T.Lpu AS otdel_lpu, 
            T.Addressex AS otdel_addressex, 
            T.Parent AS otdel_parent, 
            T.Name AS otdel_name, 
            T.OtdelCode AS [otdel.otdel_code], 
            T.Location AS otdel_location, 
            T.Distance AS otdel_distance, 
            T.OtdelType AS [otdel.otdel_type], 
            T.OtdelProfile AS [otdel.otdel_profile], 
            T.FomsCode AS [otdel.foms_code], 
            T.Sysdate AS otdel_sysdate, 
            T.ShowOnSite AS [otdel.show_on_site], 
            True AS _from0
        FROM PostgresEntities.Otdels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.addressexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.addressexes", @"
    SELECT VALUE -- Constructing addressexes
        [PostgresModel.Store.addressex](T1.addressex_oid, T1.addressex_tkladr, T1.[addressex.address_type], T1.addressex_house, T1.addressex_corps, T1.addressex_building, T1.addressex_flat, T1.[addressex.addr_str], T1.addressex_registrationdate, T1.addressex_sysdate)
    FROM (
        SELECT 
            T.Oid AS addressex_oid, 
            T.Tkladr AS addressex_tkladr, 
            T.AddressType AS [addressex.address_type], 
            T.House AS addressex_house, 
            T.Corps AS addressex_corps, 
            T.Building AS addressex_building, 
            T.Flat AS addressex_flat, 
            T.AddrStr AS [addressex.addr_str], 
            T.Registrationdate AS addressex_registrationdate, 
            T.Sysdate AS addressex_sysdate, 
            True AS _from0
        FROM PostgresEntities.Addressexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.information_systems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.information_systems", @"
    SELECT VALUE -- Constructing information_systems
        [PostgresModel.Store.information_system](T1.[information_system.oid], T1.[information_system.system_name], T1.[information_system.system_type], T1.[information_system.developer])
    FROM (
        SELECT 
            T.Oid AS [information_system.oid], 
            T.SystemName AS [information_system.system_name], 
            T.SystemType AS [information_system.system_type], 
            T.Developer AS [information_system.developer], 
            True AS _from0
        FROM PostgresEntities.InformationSystems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.information_system_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.information_system_types", @"
    SELECT VALUE -- Constructing information_system_types
        [PostgresModel.Store.information_system_type](T1.[information_system_type.oid], T1.[information_system_type.name], T1.[information_system_type.name2], T1.[information_system_type.status], T1.[information_system_type.show])
    FROM (
        SELECT 
            T.Oid AS [information_system_type.oid], 
            T.Name AS [information_system_type.name], 
            T.Name2 AS [information_system_type.name2], 
            T.Status AS [information_system_type.status], 
            T.Show AS [information_system_type.show], 
            True AS _from0
        FROM PostgresEntities.InformationSystemTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bank_accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bank_accounts", @"
    SELECT VALUE -- Constructing bank_accounts
        [PostgresModel.Store.bank_account](T1.[bank_account.oid], T1.[bank_account.lpu], T1.[bank_account.company], T1.[bank_account.correspondent_account], T1.[bank_account.current_account])
    FROM (
        SELECT 
            T.Oid AS [bank_account.oid], 
            T.Lpu AS [bank_account.lpu], 
            T.Company AS [bank_account.company], 
            T.CorrespondentAccount AS [bank_account.correspondent_account], 
            T.CurrentAccount AS [bank_account.current_account], 
            True AS _from0
        FROM PostgresEntities.BankAccounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.comp_comptypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.comp_comptypes", @"
    SELECT VALUE -- Constructing comp_comptypes
        [PostgresModel.Store.comp_comptype](T1.[comp_comptype.company], T1.[comp_comptype.companytype], T1.[comp_comptype.oid])
    FROM (
        SELECT 
            T.Company AS [comp_comptype.company], 
            T.Companytype AS [comp_comptype.companytype], 
            T.Oid AS [comp_comptype.oid], 
            True AS _from0
        FROM PostgresEntities.CompComptypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.companytypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.companytypes", @"
    SELECT VALUE -- Constructing companytypes
        [PostgresModel.Store.companytype](T1.companytype_oid, T1.companytype_name, T1.companytype_show, T1.companytype_name2, T1.companytype_status, T1.[companytype.is_insur_comp])
    FROM (
        SELECT 
            T.Oid AS companytype_oid, 
            T.Name AS companytype_name, 
            T.Show AS companytype_show, 
            T.Name2 AS companytype_name2, 
            T.Status AS companytype_status, 
            T.IsInsurComp AS [companytype.is_insur_comp], 
            True AS _from0
        FROM PostgresEntities.Companytypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vregions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2369);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vregions\r\n        [PostgresModel.Store.vregio");
            viewString.Append("n](T1.vregion_oid, T1.vregion_name, T1.vregion_ipgeo, T1.vregion_syn, T1.[vregio");
            viewString.Append("n.root_url], T1.[vregion.absolut_url], T1.vregion_csssufix, T1.vregion_showpoll,");
            viewString.Append(" T1.vregion_showlls, T1.vregion_sms, T1.[vregion.russian_name], T1.[vregion.cent");
            viewString.Append("er_phone], T1.vregion_twitter, T1.vregion_jnvls, T1.[vregion.project_start], T1.");
            viewString.Append("vregion_allstatistic, T1.vregion_mailserver, T1.vregion_title, T1.vregion_showjn");
            viewString.Append("vls, T1.vregion_otziv, T1.[vregion.schedule_show], T1.vregion_showadminhelp, T1.");
            viewString.Append("vregion_stateyavka, T1.vregion_terminal, T1.vregion_showregisterurl, T1.[vregion");
            viewString.Append(".show_cloud], T1.[vregion.PAC_REGIST_ALLOW], T1.[vregion.PAC_REGIST_PREMODERATE]");
            viewString.Append(", T1.[vregion.CALL_CENTER], T1.[vregion.CALL_CENTER_DESC])\r\n    FROM (\r\n        ");
            viewString.Append("SELECT \r\n            T.Oid AS vregion_oid, \r\n            T.Name AS vregion_name,");
            viewString.Append(" \r\n            T.Ipgeo AS vregion_ipgeo, \r\n            T.Syn AS vregion_syn, \r\n ");
            viewString.Append("           T.RootUrl AS [vregion.root_url], \r\n            T.AbsolutUrl AS [vregi");
            viewString.Append("on.absolut_url], \r\n            T.Csssufix AS vregion_csssufix, \r\n            T.S");
            viewString.Append("howpoll AS vregion_showpoll, \r\n            T.Showlls AS vregion_showlls, \r\n     ");
            viewString.Append("       T.Sms AS vregion_sms, \r\n            T.RussianName AS [vregion.russian_nam");
            viewString.Append("e], \r\n            T.CenterPhone AS [vregion.center_phone], \r\n            T.Twitt");
            viewString.Append("er AS vregion_twitter, \r\n            T.Jnvls AS vregion_jnvls, \r\n            T.P");
            viewString.Append("rojectStart AS [vregion.project_start], \r\n            T.Allstatistic AS vregion_");
            viewString.Append("allstatistic, \r\n            T.Mailserver AS vregion_mailserver, \r\n            T.");
            viewString.Append("Title AS vregion_title, \r\n            T.Showjnvls AS vregion_showjnvls, \r\n      ");
            viewString.Append("      T.Otziv AS vregion_otziv, \r\n            T.ScheduleShow AS [vregion.schedul");
            viewString.Append("e_show], \r\n            T.Showadminhelp AS vregion_showadminhelp, \r\n            T");
            viewString.Append(".Stateyavka AS vregion_stateyavka, \r\n            T.Terminal AS vregion_terminal,");
            viewString.Append(" \r\n            T.Showregisterurl AS vregion_showregisterurl, \r\n            T.Sho");
            viewString.Append("wCloud AS [vregion.show_cloud], \r\n            T.PACREGISTALLOW AS [vregion.PAC_R");
            viewString.Append("EGIST_ALLOW], \r\n            T.PACREGISTPREMODERATE AS [vregion.PAC_REGIST_PREMOD");
            viewString.Append("ERATE], \r\n            T.CALLCENTER AS [vregion.CALL_CENTER], \r\n            T.CAL");
            viewString.Append("LCENTERDESC AS [vregion.CALL_CENTER_DESC], \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM PostgresEntities.Vregions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vregions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.posts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.posts", @"
    SELECT VALUE -- Constructing posts
        [PostgresModel.Store.post](T1.post_oid, T1.post_name, T1.post_id, T1.post_version, T1.post_isuniqueforlpu, T1.post_parent, T1.post_name2, T1.post_show, T1.post_status, T1.[post.is_doctor], T1.[post.short_name])
    FROM (
        SELECT 
            T.Oid AS post_oid, 
            T.Name AS post_name, 
            T.Id AS post_id, 
            T.Version AS post_version, 
            T.Isuniqueforlpu AS post_isuniqueforlpu, 
            T.Parent AS post_parent, 
            T.Name2 AS post_name2, 
            T.Show AS post_show, 
            T.Status AS post_status, 
            T.IsDoctor AS [post.is_doctor], 
            T.ShortName AS [post.short_name], 
            True AS _from0
        FROM PostgresEntities.Posts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_groups", @"
    SELECT VALUE -- Constructing service_groups
        [PostgresModel.Store.service_group](T1.[service_group.name], T1.[service_group.oid], T1.[service_group.foms_code], T1.[service_group.show_insurprogram], T1.[service_group.synonym])
    FROM (
        SELECT 
            T.Name AS [service_group.name], 
            T.Oid AS [service_group.oid], 
            T.FomsCode AS [service_group.foms_code], 
            T.ShowInsurprogram AS [service_group.show_insurprogram], 
            T.Synonym AS [service_group.synonym], 
            True AS _from0
        FROM PostgresEntities.ServiceGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.food_forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.food_forms", @"
    SELECT VALUE -- Constructing food_forms
        [PostgresModel.Store.food_form](T1.[food_form.oid], T1.[food_form.name], T1.[food_form.show], T1.[food_form.name2], T1.[food_form.status])
    FROM (
        SELECT 
            T.Oid AS [food_form.oid], 
            T.Name AS [food_form.name], 
            T.Show AS [food_form.show], 
            T.Name2 AS [food_form.name2], 
            T.Status AS [food_form.status], 
            True AS _from0
        FROM PostgresEntities.FoodForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_power_supply_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_power_supply_types", @"
    SELECT VALUE -- Constructing building_power_supply_types
        [PostgresModel.Store.building_power_supply_type](T1.[building_power_supply_type.oid], T1.[building_power_supply_type.name], T1.[building_power_supply_type.show], T1.[building_power_supply_type.name2], T1.[building_power_supply_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_power_supply_type.oid], 
            T.Name AS [building_power_supply_type.name], 
            T.Show AS [building_power_supply_type.show], 
            T.Name2 AS [building_power_supply_type.name2], 
            T.Status AS [building_power_supply_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingPowerSupplyTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_floor_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_floor_types", @"
    SELECT VALUE -- Constructing building_floor_types
        [PostgresModel.Store.building_floor_type](T1.[building_floor_type.oid], T1.[building_floor_type.name], T1.[building_floor_type.show], T1.[building_floor_type.name2], T1.[building_floor_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_floor_type.oid], 
            T.Name AS [building_floor_type.name], 
            T.Show AS [building_floor_type.show], 
            T.Name2 AS [building_floor_type.name2], 
            T.Status AS [building_floor_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingFloorTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_types", @"
    SELECT VALUE -- Constructing building_types
        [PostgresModel.Store.building_type](T1.[building_type.oid], T1.[building_type.name], T1.[building_type.show], T1.[building_type.name2], T1.[building_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_type.oid], 
            T.Name AS [building_type.name], 
            T.Show AS [building_type.show], 
            T.Name2 AS [building_type.name2], 
            T.Status AS [building_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_ownerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_ownerships", @"
    SELECT VALUE -- Constructing building_ownerships
        [PostgresModel.Store.building_ownership](T1.[building_ownership.oid], T1.[building_ownership.name], T1.[building_ownership.show], T1.[building_ownership.name2], T1.[building_ownership.status])
    FROM (
        SELECT 
            T.Oid AS [building_ownership.oid], 
            T.Name AS [building_ownership.name], 
            T.Show AS [building_ownership.show], 
            T.Name2 AS [building_ownership.name2], 
            T.Status AS [building_ownership.status], 
            True AS _from0
        FROM PostgresEntities.BuildingOwnerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_sewerage_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_sewerage_types", @"
    SELECT VALUE -- Constructing building_sewerage_types
        [PostgresModel.Store.building_sewerage_type](T1.[building_sewerage_type.oid], T1.[building_sewerage_type.name], T1.[building_sewerage_type.show], T1.[building_sewerage_type.name2], T1.[building_sewerage_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_sewerage_type.oid], 
            T.Name AS [building_sewerage_type.name], 
            T.Show AS [building_sewerage_type.show], 
            T.Name2 AS [building_sewerage_type.name2], 
            T.Status AS [building_sewerage_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingSewerageTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_states
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_states", @"
    SELECT VALUE -- Constructing building_states
        [PostgresModel.Store.building_state](T1.[building_state.oid], T1.[building_state.building], T1.[building_state.date_state], T1.[building_state.alert_condition], T1.[building_state.reconstruction], T1.[building_state.repair], T1.[building_state.current_state])
    FROM (
        SELECT 
            T.Oid AS [building_state.oid], 
            T.Building AS [building_state.building], 
            T.DateState AS [building_state.date_state], 
            T.AlertCondition AS [building_state.alert_condition], 
            T.Reconstruction AS [building_state.reconstruction], 
            T.Repair AS [building_state.repair], 
            T.CurrentState AS [building_state.current_state], 
            True AS _from0
        FROM PostgresEntities.BuildingStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_prices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_prices", @"
    SELECT VALUE -- Constructing building_prices
        [PostgresModel.Store.building_price](T1.[building_price.oid], T1.[building_price.building], T1.[building_price.date_evaluation], T1.[building_price.cost_depreciation], T1.[building_price.cost_residual], T1.[building_price.cost_actual])
    FROM (
        SELECT 
            T.Oid AS [building_price.oid], 
            T.Building AS [building_price.building], 
            T.DateEvaluation AS [building_price.date_evaluation], 
            T.CostDepreciation AS [building_price.cost_depreciation], 
            T.CostResidual AS [building_price.cost_residual], 
            T.CostActual AS [building_price.cost_actual], 
            True AS _from0
        FROM PostgresEntities.BuildingPrices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_supporting_structures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_supporting_structures", @"
    SELECT VALUE -- Constructing building_supporting_structures
        [PostgresModel.Store.building_supporting_structure](T1.[building_supporting_structure.oid], T1.[building_supporting_structure.name], T1.[building_supporting_structure.show], T1.[building_supporting_structure.name2], T1.[building_supporting_structure.status])
    FROM (
        SELECT 
            T.Oid AS [building_supporting_structure.oid], 
            T.Name AS [building_supporting_structure.name], 
            T.Show AS [building_supporting_structure.show], 
            T.Name2 AS [building_supporting_structure.name2], 
            T.Status AS [building_supporting_structure.status], 
            True AS _from0
        FROM PostgresEntities.BuildingSupportingStructures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_project_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_project_types", @"
    SELECT VALUE -- Constructing building_project_types
        [PostgresModel.Store.building_project_type](T1.[building_project_type.oid], T1.[building_project_type.name], T1.[building_project_type.show], T1.[building_project_type.name2], T1.[building_project_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_project_type.oid], 
            T.Name AS [building_project_type.name], 
            T.Show AS [building_project_type.show], 
            T.Name2 AS [building_project_type.name2], 
            T.Status AS [building_project_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingProjectTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.courts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.courts", @"
    SELECT VALUE -- Constructing courts
        [PostgresModel.Store.court](T1.court_oid, T1.court_plot, T1.court_address, T1.[court.court_name], T1.[court.court_code], T1.[court.court_date], T1.court_area, T1.court_okato)
    FROM (
        SELECT 
            T.Oid AS court_oid, 
            T.Plot AS court_plot, 
            T.Address AS court_address, 
            T.CourtName AS [court.court_name], 
            T.CourtCode AS [court.court_code], 
            T.CourtDate AS [court.court_date], 
            T.Area AS court_area, 
            T.Okato AS court_okato, 
            True AS _from0
        FROM PostgresEntities.Courts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.food_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.food_types", @"
    SELECT VALUE -- Constructing food_types
        [PostgresModel.Store.food_type](T1.[food_type.oid], T1.[food_type.name], T1.[food_type.show], T1.[food_type.name2], T1.[food_type.status])
    FROM (
        SELECT 
            T.Oid AS [food_type.oid], 
            T.Name AS [food_type.name], 
            T.Show AS [food_type.show], 
            T.Name2 AS [food_type.name2], 
            T.Status AS [food_type.status], 
            True AS _from0
        FROM PostgresEntities.FoodTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.food_repetitions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.food_repetitions", @"
    SELECT VALUE -- Constructing food_repetitions
        [PostgresModel.Store.food_repetition](T1.[food_repetition.oid], T1.[food_repetition.name], T1.[food_repetition.show], T1.[food_repetition.name2], T1.[food_repetition.status])
    FROM (
        SELECT 
            T.Oid AS [food_repetition.oid], 
            T.Name AS [food_repetition.name], 
            T.Show AS [food_repetition.show], 
            T.Name2 AS [food_repetition.name2], 
            T.Status AS [food_repetition.status], 
            True AS _from0
        FROM PostgresEntities.FoodRepetitions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.treatmen_conditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.treatmen_conditions", @"
    SELECT VALUE -- Constructing treatmen_conditions
        [PostgresModel.Store.treatmen_conditions](T1.[treatmen_conditions.oid], T1.[treatmen_conditions.otdel], T1.[treatmen_conditions.food_type], T1.[treatmen_conditions.food_repetition], T1.[treatmen_conditions.food_form], T1.[treatmen_conditions.technology_name], T1.[treatmen_conditions.technology_class])
    FROM (
        SELECT 
            T.Oid AS [treatmen_conditions.oid], 
            T.Otdel AS [treatmen_conditions.otdel], 
            T.FoodType AS [treatmen_conditions.food_type], 
            T.FoodRepetition AS [treatmen_conditions.food_repetition], 
            T.FoodForm AS [treatmen_conditions.food_form], 
            T.TechnologyName AS [treatmen_conditions.technology_name], 
            T.TechnologyClass AS [treatmen_conditions.technology_class], 
            True AS _from0
        FROM PostgresEntities.TreatmenConditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_hot_water_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_hot_water_types", @"
    SELECT VALUE -- Constructing building_hot_water_types
        [PostgresModel.Store.building_hot_water_type](T1.[building_hot_water_type.oid], T1.[building_hot_water_type.name], T1.[building_hot_water_type.show], T1.[building_hot_water_type.name2], T1.[building_hot_water_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_hot_water_type.oid], 
            T.Name AS [building_hot_water_type.name], 
            T.Show AS [building_hot_water_type.show], 
            T.Name2 AS [building_hot_water_type.name2], 
            T.Status AS [building_hot_water_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingHotWaterTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.rooms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.rooms", @"
    SELECT VALUE -- Constructing rooms
        [PostgresModel.Store.room](T1.room_oid, T1.room_otdel, T1.room_building, T1.[room.room_name], T1.room_identifier, T1.[room.room_type], T1.room_rooms, T1.[room.primary_seats], T1.[room.additional_seats], T1.room_area, T1.[room.window_view])
    FROM (
        SELECT 
            T.Oid AS room_oid, 
            T.Otdel AS room_otdel, 
            T.Building AS room_building, 
            T.RoomName AS [room.room_name], 
            T.Identifier AS room_identifier, 
            T.RoomType AS [room.room_type], 
            T.Rooms AS room_rooms, 
            T.PrimarySeats AS [room.primary_seats], 
            T.AdditionalSeats AS [room.additional_seats], 
            T.Area AS room_area, 
            T.WindowView AS [room.window_view], 
            True AS _from0
        FROM PostgresEntities.Rooms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.beds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.beds", @"
    SELECT VALUE -- Constructing beds
        [PostgresModel.Store.bed](T1.bed_oid, T1.bed_room, T1.[bed.scheduled_days], T1.[bed.actual_days], T1.[bed.bed_dynamic], T1.[bed.bed_day], T1.[bed.bed_children], T1.[bed.bed_profile])
    FROM (
        SELECT 
            T.Oid AS bed_oid, 
            T.Room AS bed_room, 
            T.ScheduledDays AS [bed.scheduled_days], 
            T.ActualDays AS [bed.actual_days], 
            T.BedDynamic AS [bed.bed_dynamic], 
            T.BedDay AS [bed.bed_day], 
            T.BedChildren AS [bed.bed_children], 
            T.BedProfile AS [bed.bed_profile], 
            True AS _from0
        FROM PostgresEntities.Beds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_state_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_state_types", @"
    SELECT VALUE -- Constructing building_state_types
        [PostgresModel.Store.building_state_type](T1.[building_state_type.oid], T1.[building_state_type.name], T1.[building_state_type.show], T1.[building_state_type.name2], T1.[building_state_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_state_type.oid], 
            T.Name AS [building_state_type.name], 
            T.Show AS [building_state_type.show], 
            T.Name2 AS [building_state_type.name2], 
            T.Status AS [building_state_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingStateTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.plots
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.plots", @"
    SELECT VALUE -- Constructing plots
        [PostgresModel.Store.plot](T1.plot_oid, T1.plot_addressex, T1.plot_lpu, T1.plot_identifier, T1.plot_right, T1.plot_area, T1.plot_railway, T1.[plot.railway_distance], T1.plot_airport, T1.[plot.airport_distance], T1.plot_bus, T1.[plot.bus_distance], T1.plot_helicopter, T1.[plot.helicopter_distance], T1.[plot.main_road])
    FROM (
        SELECT 
            T.Oid AS plot_oid, 
            T.Addressex AS plot_addressex, 
            T.Lpu AS plot_lpu, 
            T.Identifier AS plot_identifier, 
            T.[Right] AS plot_right, 
            T.Area AS plot_area, 
            T.Railway AS plot_railway, 
            T.RailwayDistance AS [plot.railway_distance], 
            T.Airport AS plot_airport, 
            T.AirportDistance AS [plot.airport_distance], 
            T.Bus AS plot_bus, 
            T.BusDistance AS [plot.bus_distance], 
            T.Helicopter AS plot_helicopter, 
            T.HelicopterDistance AS [plot.helicopter_distance], 
            T.MainRoad AS [plot.main_road], 
            True AS _from0
        FROM PostgresEntities.Plots AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.comfort_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.comfort_types", @"
    SELECT VALUE -- Constructing comfort_types
        [PostgresModel.Store.comfort_type](T1.[comfort_type.oid], T1.[comfort_type.name], T1.[comfort_type.show], T1.[comfort_type.name2], T1.[comfort_type.status])
    FROM (
        SELECT 
            T.Oid AS [comfort_type.oid], 
            T.Name AS [comfort_type.name], 
            T.Show AS [comfort_type.show], 
            T.Name2 AS [comfort_type.name2], 
            T.Status AS [comfort_type.status], 
            True AS _from0
        FROM PostgresEntities.ComfortTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_communication_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_communication_types", @"
    SELECT VALUE -- Constructing building_communication_types
        [PostgresModel.Store.building_communication_type](T1.[building_communication_type.oid], T1.[building_communication_type.name], T1.[building_communication_type.show], T1.[building_communication_type.name2], T1.[building_communication_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_communication_type.oid], 
            T.Name AS [building_communication_type.name], 
            T.Show AS [building_communication_type.show], 
            T.Name2 AS [building_communication_type.name2], 
            T.Status AS [building_communication_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingCommunicationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_heating_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_heating_types", @"
    SELECT VALUE -- Constructing building_heating_types
        [PostgresModel.Store.building_heating_type](T1.[building_heating_type.oid], T1.[building_heating_type.name], T1.[building_heating_type.show], T1.[building_heating_type.name2], T1.[building_heating_type.status])
    FROM (
        SELECT 
            T.Oid AS [building_heating_type.oid], 
            T.Name AS [building_heating_type.name], 
            T.Show AS [building_heating_type.show], 
            T.Name2 AS [building_heating_type.name2], 
            T.Status AS [building_heating_type.status], 
            True AS _from0
        FROM PostgresEntities.BuildingHeatingTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_purposes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_purposes", @"
    SELECT VALUE -- Constructing building_purposes
        [PostgresModel.Store.building_purpose](T1.[building_purpose.oid], T1.[building_purpose.name], T1.[building_purpose.show], T1.[building_purpose.name2], T1.[building_purpose.status])
    FROM (
        SELECT 
            T.Oid AS [building_purpose.oid], 
            T.Name AS [building_purpose.name], 
            T.Show AS [building_purpose.show], 
            T.Name2 AS [building_purpose.name2], 
            T.Status AS [building_purpose.status], 
            True AS _from0
        FROM PostgresEntities.BuildingPurposes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infrastructures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infrastructures", @"
    SELECT VALUE -- Constructing infrastructures
        [PostgresModel.Store.infrastructure](T1.infrastructure_oid, T1.infrastructure_plot, T1.[infrastructure.infrastructure_count], T1.[infrastructure.infrastructure_type])
    FROM (
        SELECT 
            T.Oid AS infrastructure_oid, 
            T.Plot AS infrastructure_plot, 
            T.InfrastructureCount AS [infrastructure.infrastructure_count], 
            T.InfrastructureType AS [infrastructure.infrastructure_type], 
            True AS _from0
        FROM PostgresEntities.Infrastructures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.room_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.room_types", @"
    SELECT VALUE -- Constructing room_types
        [PostgresModel.Store.room_type](T1.[room_type.oid], T1.[room_type.name], T1.[room_type.show], T1.[room_type.name2], T1.[room_type.status])
    FROM (
        SELECT 
            T.Oid AS [room_type.oid], 
            T.Name AS [room_type.name], 
            T.Show AS [room_type.show], 
            T.Name2 AS [room_type.name2], 
            T.Status AS [room_type.status], 
            True AS _from0
        FROM PostgresEntities.RoomTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.buildings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5154);
            viewString.Append("\r\n    SELECT VALUE -- Constructing buildings\r\n        [PostgresModel.Store.build");
            viewString.Append("ing](T1.building_oid, T1.building_plot, T1.[building.building_name], T1.building");
            viewString.Append("_identifier, T1.[building.building_type], T1.building_address, T1.[building.buil");
            viewString.Append("ding_purpose], T1.[building.equipment_ownership], T1.building_balance, T1.buildi");
            viewString.Append("ng_beds, T1.building_visits, T1.[building.beds_actual], T1.[building.stationary_");
            viewString.Append("seats], T1.[building.outpatient_seats], T1.building_volume, T1.[building.area_to");
            viewString.Append("tal], T1.[building.area_useful], T1.[building.area_room], T1.[building.area_offi");
            viewString.Append("ces], T1.[building.fire_alarms], T1.[building.burglar_alarms], T1.[building.butt");
            viewString.Append("on_police], T1.[building.fire_warning], T1.[building.fire_water], T1.[building.f");
            viewString.Append("ire_department_alarm], T1.[building.fire_department_connection], T1.[building.fi");
            viewString.Append("re_violations], T1.[building.emergency_exits], T1.[building.personal_protection]");
            viewString.Append(", T1.building_litter, T1.[building.fire_department_distance], T1.building_securi");
            viewString.Append("ty, T1.[building.metal_doors], T1.[building.video_monitoring], T1.[building.room");
            viewString.Append("_attendants], T1.[building.fencing_area], T1.[building.suitability_disabilities]");
            viewString.Append(", T1.[building.project_type], T1.[building.project_number], T1.[building.project");
            viewString.Append("_date], T1.[building.construction_date], T1.[building.repair_date], T1.building_");
            viewString.Append("airing, T1.[building.supporting_structure], T1.[building.floor_type], T1.[buildi");
            viewString.Append("ng.floor_count], T1.building_conditioning, T1.[building.power_supply], T1.[build");
            viewString.Append("ing.water_supply], T1.[building.hot_water_type], T1.[building.heating_type], T1.");
            viewString.Append("[building.sewerage_type], T1.[building.medical_gas_supply], T1.[building.gas_sup");
            viewString.Append("ply], T1.[building.communication_type], T1.[building.passenger_lift], T1.[buildi");
            viewString.Append("ng.medical_lift], T1.[building.cost_primary])\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.Oid AS building_oid, \r\n            T.Plot AS building_plot, \r\n        ");
            viewString.Append("    T.BuildingName AS [building.building_name], \r\n            T.Identifier AS bu");
            viewString.Append("ilding_identifier, \r\n            T.BuildingType AS [building.building_type], \r\n ");
            viewString.Append("           T.Address AS building_address, \r\n            T.BuildingPurpose AS [bu");
            viewString.Append("ilding.building_purpose], \r\n            T.EquipmentOwnership AS [building.equipm");
            viewString.Append("ent_ownership], \r\n            T.Balance AS building_balance, \r\n            T.Bed");
            viewString.Append("s AS building_beds, \r\n            T.Visits AS building_visits, \r\n            T.B");
            viewString.Append("edsActual AS [building.beds_actual], \r\n            T.StationarySeats AS [buildin");
            viewString.Append("g.stationary_seats], \r\n            T.OutpatientSeats AS [building.outpatient_sea");
            viewString.Append("ts], \r\n            T.Volume AS building_volume, \r\n            T.AreaTotal AS [bu");
            viewString.Append("ilding.area_total], \r\n            T.AreaUseful AS [building.area_useful], \r\n    ");
            viewString.Append("        T.AreaRoom AS [building.area_room], \r\n            T.AreaOffices AS [buil");
            viewString.Append("ding.area_offices], \r\n            T.FireAlarms AS [building.fire_alarms], \r\n    ");
            viewString.Append("        T.BurglarAlarms AS [building.burglar_alarms], \r\n            T.ButtonPoli");
            viewString.Append("ce AS [building.button_police], \r\n            T.FireWarning AS [building.fire_wa");
            viewString.Append("rning], \r\n            T.FireWater AS [building.fire_water], \r\n            T.Fire");
            viewString.Append("DepartmentAlarm AS [building.fire_department_alarm], \r\n            T.FireDepartm");
            viewString.Append("entConnection AS [building.fire_department_connection], \r\n            T.FireViol");
            viewString.Append("ations AS [building.fire_violations], \r\n            T.EmergencyExits AS [buildin");
            viewString.Append("g.emergency_exits], \r\n            T.PersonalProtection AS [building.personal_pro");
            viewString.Append("tection], \r\n            T.Litter AS building_litter, \r\n            T.FireDepartm");
            viewString.Append("entDistance AS [building.fire_department_distance], \r\n            T.Security AS ");
            viewString.Append("building_security, \r\n            T.MetalDoors AS [building.metal_doors], \r\n     ");
            viewString.Append("       T.VideoMonitoring AS [building.video_monitoring], \r\n            T.RoomAtt");
            viewString.Append("endants AS [building.room_attendants], \r\n            T.FencingArea AS [building.");
            viewString.Append("fencing_area], \r\n            T.SuitabilityDisabilities AS [building.suitability_");
            viewString.Append("disabilities], \r\n            T.ProjectType AS [building.project_type], \r\n       ");
            viewString.Append("     T.ProjectNumber AS [building.project_number], \r\n            T.ProjectDate A");
            viewString.Append("S [building.project_date], \r\n            T.ConstructionDate AS [building.constru");
            viewString.Append("ction_date], \r\n            T.RepairDate AS [building.repair_date], \r\n           ");
            viewString.Append(" T.Airing AS building_airing, \r\n            T.SupportingStructure AS [building.s");
            viewString.Append("upporting_structure], \r\n            T.FloorType AS [building.floor_type], \r\n    ");
            viewString.Append("        T.FloorCount AS [building.floor_count], \r\n            T.Conditioning AS ");
            viewString.Append("building_conditioning, \r\n            T.PowerSupply AS [building.power_supply], \r");
            viewString.Append("\n            T.WaterSupply AS [building.water_supply], \r\n            T.HotWaterT");
            viewString.Append("ype AS [building.hot_water_type], \r\n            T.HeatingType AS [building.heati");
            viewString.Append("ng_type], \r\n            T.SewerageType AS [building.sewerage_type], \r\n          ");
            viewString.Append("  T.MedicalGasSupply AS [building.medical_gas_supply], \r\n            T.GasSupply");
            viewString.Append(" AS [building.gas_supply], \r\n            T.CommunicationType AS [building.commun");
            viewString.Append("ication_type], \r\n            T.PassengerLift AS [building.passenger_lift], \r\n   ");
            viewString.Append("         T.MedicalLift AS [building.medical_lift], \r\n            T.CostPrimary A");
            viewString.Append("S [building.cost_primary], \r\n            True AS _from0\r\n        FROM PostgresEn");
            viewString.Append("tities.Buildings AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.buildings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.level_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.level_types", @"
    SELECT VALUE -- Constructing level_types
        [PostgresModel.Store.level_type](T1.[level_type.oid], T1.[level_type.name], T1.[level_type.show], T1.[level_type.name2], T1.[level_type.status], T1.[level_type.parent], T1.[level_type.id])
    FROM (
        SELECT 
            T.Oid AS [level_type.oid], 
            T.Name AS [level_type.name], 
            T.Show AS [level_type.show], 
            T.Name2 AS [level_type.name2], 
            T.Status AS [level_type.status], 
            T.Parent AS [level_type.parent], 
            T.Id AS [level_type.id], 
            True AS _from0
        FROM PostgresEntities.LevelTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.age_group_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.age_group_types", @"
    SELECT VALUE -- Constructing age_group_types
        [PostgresModel.Store.age_group_type](T1.[age_group_type.oid], T1.[age_group_type.name], T1.[age_group_type.show], T1.[age_group_type.name2], T1.[age_group_type.status], T1.[age_group_type.age_from], T1.[age_group_type.age_to], T1.[age_group_type.age_from2], T1.[age_group_type.age_to2])
    FROM (
        SELECT 
            T.Oid AS [age_group_type.oid], 
            T.Name AS [age_group_type.name], 
            T.Show AS [age_group_type.show], 
            T.Name2 AS [age_group_type.name2], 
            T.Status AS [age_group_type.status], 
            T.AgeFrom AS [age_group_type.age_from], 
            T.AgeTo AS [age_group_type.age_to], 
            T.AgeFrom2 AS [age_group_type.age_from2], 
            T.AgeTo2 AS [age_group_type.age_to2], 
            True AS _from0
        FROM PostgresEntities.AgeGroupTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.subordination_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.subordination_types", @"
    SELECT VALUE -- Constructing subordination_types
        [PostgresModel.Store.subordination_type](T1.[subordination_type.oid], T1.[subordination_type.name], T1.[subordination_type.show], T1.[subordination_type.name2], T1.[subordination_type.status])
    FROM (
        SELECT 
            T.Oid AS [subordination_type.oid], 
            T.Name AS [subordination_type.name], 
            T.Show AS [subordination_type.show], 
            T.Name2 AS [subordination_type.name2], 
            T.Status AS [subordination_type.status], 
            True AS _from0
        FROM PostgresEntities.SubordinationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.age_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.age_groups", @"
    SELECT VALUE -- Constructing age_groups
        [PostgresModel.Store.age_group](T1.[age_group.oid], T1.[age_group.otdel], T1.[age_group.age_group_type], T1.[age_group.townspeople], T1.[age_group.country_people])
    FROM (
        SELECT 
            T.Oid AS [age_group.oid], 
            T.Otdel AS [age_group.otdel], 
            T.AgeGroupType AS [age_group.age_group_type], 
            T.Townspeople AS [age_group.townspeople], 
            T.CountryPeople AS [age_group.country_people], 
            True AS _from0
        FROM PostgresEntities.AgeGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profile_cares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profile_cares", @"
    SELECT VALUE -- Constructing profile_cares
        [PostgresModel.Store.profile_care](T1.[profile_care.oid], T1.[profile_care.name], T1.[profile_care.show], T1.[profile_care.name2], T1.[profile_care.status], T1.[profile_care.for_child], T1.[profile_care.foms_code])
    FROM (
        SELECT 
            T.Oid AS [profile_care.oid], 
            T.Name AS [profile_care.name], 
            T.Show AS [profile_care.show], 
            T.Name2 AS [profile_care.name2], 
            T.Status AS [profile_care.status], 
            T.ForChild AS [profile_care.for_child], 
            T.FomsCode AS [profile_care.foms_code], 
            True AS _from0
        FROM PostgresEntities.ProfileCares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infrastructure_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infrastructure_types", @"
    SELECT VALUE -- Constructing infrastructure_types
        [PostgresModel.Store.infrastructure_type](T1.[infrastructure_type.oid], T1.[infrastructure_type.name], T1.[infrastructure_type.show], T1.[infrastructure_type.name2], T1.[infrastructure_type.status])
    FROM (
        SELECT 
            T.Oid AS [infrastructure_type.oid], 
            T.Name AS [infrastructure_type.name], 
            T.Show AS [infrastructure_type.show], 
            T.Name2 AS [infrastructure_type.name2], 
            T.Status AS [infrastructure_type.status], 
            True AS _from0
        FROM PostgresEntities.InfrastructureTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.comforts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.comforts", @"
    SELECT VALUE -- Constructing comforts
        [PostgresModel.Store.comfort](T1.comfort_oid, T1.comfort_room, T1.[comfort.comfort_type])
    FROM (
        SELECT 
            T.Oid AS comfort_oid, 
            T.Room AS comfort_room, 
            T.ComfortType AS [comfort.comfort_type], 
            True AS _from0
        FROM PostgresEntities.Comforts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_opers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_opers", @"
    SELECT VALUE -- Constructing equipment_opers
        [PostgresModel.Store.equipment_oper](T1.[equipment_oper.oid], T1.[equipment_oper.equipment], T1.[equipment_oper.equipment_oper], T1.[equipment_oper.date_oper], T1.[equipment_oper.cabinet])
    FROM (
        SELECT 
            T.Oid AS [equipment_oper.oid], 
            T.Equipment AS [equipment_oper.equipment], 
            T.EquipmentOper1 AS [equipment_oper.equipment_oper], 
            T.DateOper AS [equipment_oper.date_oper], 
            T.Cabinet AS [equipment_oper.cabinet], 
            True AS _from0
        FROM PostgresEntities.EquipmentOpers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.districtstreets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.districtstreets", @"
    SELECT VALUE -- Constructing districtstreets
        [PostgresModel.Store.districtstreet](T1.districtstreet_oid, T1.districtstreet_district, T1.districtstreet_tkladr, T1.districtstreet_starthouse, T1.districtstreet_endhouse, T1.districtstreet_excludehouse, T1.districtstreet_includehouse)
    FROM (
        SELECT 
            T.Oid AS districtstreet_oid, 
            T.District AS districtstreet_district, 
            T.Tkladr AS districtstreet_tkladr, 
            T.Starthouse AS districtstreet_starthouse, 
            T.Endhouse AS districtstreet_endhouse, 
            T.Excludehouse AS districtstreet_excludehouse, 
            T.Includehouse AS districtstreet_includehouse, 
            True AS _from0
        FROM PostgresEntities.Districtstreets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipments", "\r\n    SELECT VALUE -- Constructing equipments\r\n        [PostgresModel.Store.equip" +
                    "ment](T1.equipment_oid, T1.equipment_otdel, T1.[equipment.equipment_type], T1.[e" +
                    "quipment.equipment_name], T1.equipment_identifier, T1.[equipment.equipment_model" +
                    "], T1.[equipment.company_maker], T1.[equipment.serial_number], T1.[equipment.dat" +
                    "e_maker], T1.equipment_lifetime, T1.equipment_delivery, T1.[equipment.equipment_" +
                    "ownership], T1.[equipment.company_supplier], T1.[equipment.date_purchase], T1.[e" +
                    "quipment.inventory_number], T1.[equipment.registration_mark], T1.equipment_dicom" +
                    ")\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS equipment_oid, \r\n          " +
                    "  T.Otdel AS equipment_otdel, \r\n            T.EquipmentType AS [equipment.equipm" +
                    "ent_type], \r\n            T.EquipmentName AS [equipment.equipment_name], \r\n      " +
                    "      T.Identifier AS equipment_identifier, \r\n            T.EquipmentModel AS [e" +
                    "quipment.equipment_model], \r\n            T.CompanyMaker AS [equipment.company_ma" +
                    "ker], \r\n            T.SerialNumber AS [equipment.serial_number], \r\n            T" +
                    ".DateMaker AS [equipment.date_maker], \r\n            T.Lifetime AS equipment_life" +
                    "time, \r\n            T.Delivery AS equipment_delivery, \r\n            T.EquipmentO" +
                    "wnership AS [equipment.equipment_ownership], \r\n            T.CompanySupplier AS " +
                    "[equipment.company_supplier], \r\n            T.DatePurchase AS [equipment.date_pu" +
                    "rchase], \r\n            T.InventoryNumber AS [equipment.inventory_number], \r\n    " +
                    "        T.RegistrationMark AS [equipment.registration_mark], \r\n            T.Dic" +
                    "om AS equipment_dicom, \r\n            True AS _from0\r\n        FROM PostgresEntiti" +
                    "es.Equipments AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_oper_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_oper_types", @"
    SELECT VALUE -- Constructing equipment_oper_types
        [PostgresModel.Store.equipment_oper_type](T1.[equipment_oper_type.oid], T1.[equipment_oper_type.name], T1.[equipment_oper_type.show], T1.[equipment_oper_type.name2], T1.[equipment_oper_type.status])
    FROM (
        SELECT 
            T.Oid AS [equipment_oper_type.oid], 
            T.Name AS [equipment_oper_type.name], 
            T.Show AS [equipment_oper_type.show], 
            T.Name2 AS [equipment_oper_type.name2], 
            T.Status AS [equipment_oper_type.status], 
            True AS _from0
        FROM PostgresEntities.EquipmentOperTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_prices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_prices", @"
    SELECT VALUE -- Constructing equipment_prices
        [PostgresModel.Store.equipment_price](T1.[equipment_price.oid], T1.[equipment_price.equipmen], T1.[equipment_price.date_evaluation], T1.[equipment_price.cost_depreciation], T1.[equipment_price.cost_residual], T1.[equipment_price.cost_actual])
    FROM (
        SELECT 
            T.Oid AS [equipment_price.oid], 
            T.Equipmen AS [equipment_price.equipmen], 
            T.DateEvaluation AS [equipment_price.date_evaluation], 
            T.CostDepreciation AS [equipment_price.cost_depreciation], 
            T.CostResidual AS [equipment_price.cost_residual], 
            T.CostActual AS [equipment_price.cost_actual], 
            True AS _from0
        FROM PostgresEntities.EquipmentPrices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_types", @"
    SELECT VALUE -- Constructing equipment_types
        [PostgresModel.Store.equipment_type](T1.[equipment_type.oid], T1.[equipment_type.name], T1.[equipment_type.show], T1.[equipment_type.name2], T1.[equipment_type.status])
    FROM (
        SELECT 
            T.Oid AS [equipment_type.oid], 
            T.Name AS [equipment_type.name], 
            T.Show AS [equipment_type.show], 
            T.Name2 AS [equipment_type.name2], 
            T.Status AS [equipment_type.status], 
            True AS _from0
        FROM PostgresEntities.EquipmentTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_states
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_states", @"
    SELECT VALUE -- Constructing equipment_states
        [PostgresModel.Store.equipment_state](T1.[equipment_state.oid], T1.[equipment_state.equipmen], T1.[equipment_state.date_state], T1.[equipment_state.repair], T1.[equipment_state.write_off])
    FROM (
        SELECT 
            T.Oid AS [equipment_state.oid], 
            T.Equipmen AS [equipment_state.equipmen], 
            T.DateState AS [equipment_state.date_state], 
            T.Repair AS [equipment_state.repair], 
            T.WriteOff AS [equipment_state.write_off], 
            True AS _from0
        FROM PostgresEntities.EquipmentStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_ownerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_ownerships", @"
    SELECT VALUE -- Constructing equipment_ownerships
        [PostgresModel.Store.equipment_ownership](T1.[equipment_ownership.oid], T1.[equipment_ownership.name], T1.[equipment_ownership.show], T1.[equipment_ownership.name2], T1.[equipment_ownership.status])
    FROM (
        SELECT 
            T.Oid AS [equipment_ownership.oid], 
            T.Name AS [equipment_ownership.name], 
            T.Show AS [equipment_ownership.show], 
            T.Name2 AS [equipment_ownership.name2], 
            T.Status AS [equipment_ownership.status], 
            True AS _from0
        FROM PostgresEntities.EquipmentOwnerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_models
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_models", @"
    SELECT VALUE -- Constructing equipment_models
        [PostgresModel.Store.equipment_model](T1.[equipment_model.oid], T1.[equipment_model.name], T1.[equipment_model.show], T1.[equipment_model.name2], T1.[equipment_model.status])
    FROM (
        SELECT 
            T.Oid AS [equipment_model.oid], 
            T.Name AS [equipment_model.name], 
            T.Show AS [equipment_model.show], 
            T.Name2 AS [equipment_model.name2], 
            T.Status AS [equipment_model.status], 
            True AS _from0
        FROM PostgresEntities.EquipmentModels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.districts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.districts", @"
    SELECT VALUE -- Constructing districts
        [PostgresModel.Store.district](T1.district_oid, T1.[district.district_name], T1.district_helptype, T1.district_priority, T1.district_autodistrict, T1.district_otdel)
    FROM (
        SELECT 
            T.Oid AS district_oid, 
            T.DistrictName AS [district.district_name], 
            T.Helptype AS district_helptype, 
            T.Priority AS district_priority, 
            T.Autodistrict AS district_autodistrict, 
            T.Otdel AS district_otdel, 
            True AS _from0
        FROM PostgresEntities.Districts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.functionings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.functionings", @"
    SELECT VALUE -- Constructing functionings
        [PostgresModel.Store.functioning](T1.functioning_oid, T1.functioning_sanatorium, T1.[functioning.functioning_name], T1.[functioning.functioning_date_begin], T1.[functioning.functioning_date_end])
    FROM (
        SELECT 
            T.Oid AS functioning_oid, 
            T.Sanatorium AS functioning_sanatorium, 
            T.FunctioningName AS [functioning.functioning_name], 
            T.FunctioningDateBegin AS [functioning.functioning_date_begin], 
            T.FunctioningDateEnd AS [functioning.functioning_date_end], 
            True AS _from0
        FROM PostgresEntities.Functionings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.heal_profile_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.heal_profile_types", @"
    SELECT VALUE -- Constructing heal_profile_types
        [PostgresModel.Store.heal_profile_type](T1.[heal_profile_type.oid], T1.[heal_profile_type.name], T1.[heal_profile_type.show], T1.[heal_profile_type.name2], T1.[heal_profile_type.status])
    FROM (
        SELECT 
            T.Oid AS [heal_profile_type.oid], 
            T.Name AS [heal_profile_type.name], 
            T.Show AS [heal_profile_type.show], 
            T.Name2 AS [heal_profile_type.name2], 
            T.Status AS [heal_profile_type.status], 
            True AS _from0
        FROM PostgresEntities.HealProfileTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.natural_factors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.natural_factors", @"
    SELECT VALUE -- Constructing natural_factors
        [PostgresModel.Store.natural_factor](T1.[natural_factor.oid], T1.[natural_factor.sanatorium], T1.[natural_factor.natural_factor_type], T1.[natural_factor.natural_factor_name], T1.[natural_factor.object_name], T1.[natural_factor.objects], T1.[natural_factor.document], T1.[natural_factor.document_number], T1.[natural_factor.document_date_delivery], T1.[natural_factor.document_date_begin], T1.[natural_factor.document_date_end])
    FROM (
        SELECT 
            T.Oid AS [natural_factor.oid], 
            T.Sanatorium AS [natural_factor.sanatorium], 
            T.NaturalFactorType AS [natural_factor.natural_factor_type], 
            T.NaturalFactorName AS [natural_factor.natural_factor_name], 
            T.ObjectName AS [natural_factor.object_name], 
            T.Objects AS [natural_factor.objects], 
            T.Document AS [natural_factor.document], 
            T.DocumentNumber AS [natural_factor.document_number], 
            T.DocumentDateDelivery AS [natural_factor.document_date_delivery], 
            T.DocumentDateBegin AS [natural_factor.document_date_begin], 
            T.DocumentDateEnd AS [natural_factor.document_date_end], 
            True AS _from0
        FROM PostgresEntities.NaturalFactors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.natural_factor_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.natural_factor_types", @"
    SELECT VALUE -- Constructing natural_factor_types
        [PostgresModel.Store.natural_factor_type](T1.[natural_factor_type.oid], T1.[natural_factor_type.name], T1.[natural_factor_type.show], T1.[natural_factor_type.name2], T1.[natural_factor_type.status])
    FROM (
        SELECT 
            T.Oid AS [natural_factor_type.oid], 
            T.Name AS [natural_factor_type.name], 
            T.Show AS [natural_factor_type.show], 
            T.Name2 AS [natural_factor_type.name2], 
            T.Status AS [natural_factor_type.status], 
            True AS _from0
        FROM PostgresEntities.NaturalFactorTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sanatoriums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sanatoriums", "\r\n    SELECT VALUE -- Constructing sanatoriums\r\n        [PostgresModel.Store.sana" +
                    "torium](T1.sanatorium_oid, T1.sanatorium_otdel, T1.sanatorium_resort, T1.[sanato" +
                    "rium.resort_status], T1.[sanatorium.resort_document], T1.[sanatorium.resort_numb" +
                    "er], T1.[sanatorium.resort_date], T1.sanatorium_mountain, T1.[sanatorium.mountai" +
                    "n_document], T1.[sanatorium.mountain_number], T1.[sanatorium.mountain_date], T1." +
                    "[sanatorium.resort_type], T1.[sanatorium.resort_type_oid], T1.[sanatorium.resort" +
                    "_type_document], T1.[sanatorium.resort_type_number], T1.[sanatorium.resort_type_" +
                    "date])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS sanatorium_oid, \r\n    " +
                    "        T.Otdel AS sanatorium_otdel, \r\n            T.Resort AS sanatorium_resort" +
                    ", \r\n            T.ResortStatus AS [sanatorium.resort_status], \r\n            T.Re" +
                    "sortDocument AS [sanatorium.resort_document], \r\n            T.ResortNumber AS [s" +
                    "anatorium.resort_number], \r\n            T.ResortDate AS [sanatorium.resort_date]" +
                    ", \r\n            T.Mountain AS sanatorium_mountain, \r\n            T.MountainDocum" +
                    "ent AS [sanatorium.mountain_document], \r\n            T.MountainNumber AS [sanato" +
                    "rium.mountain_number], \r\n            T.MountainDate AS [sanatorium.mountain_date" +
                    "], \r\n            T.ResortType AS [sanatorium.resort_type], \r\n            T.Resor" +
                    "tTypeOid AS [sanatorium.resort_type_oid], \r\n            T.ResortTypeDocument AS " +
                    "[sanatorium.resort_type_document], \r\n            T.ResortTypeNumber AS [sanatori" +
                    "um.resort_type_number], \r\n            T.ResortTypeDate AS [sanatorium.resort_typ" +
                    "e_date], \r\n            True AS _from0\r\n        FROM PostgresEntities.Sanatoriums" +
                    " AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.arrivals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.arrivals", @"
    SELECT VALUE -- Constructing arrivals
        [PostgresModel.Store.arrivals](T1.arrivals_oid, T1.arrivals_sanatorium, T1.[arrivals.arrivals_date], T1.arrivals_peoples, T1.arrivals_days)
    FROM (
        SELECT 
            T.Oid AS arrivals_oid, 
            T.Sanatorium AS arrivals_sanatorium, 
            T.ArrivalsDate AS [arrivals.arrivals_date], 
            T.Peoples AS arrivals_peoples, 
            T.Days AS arrivals_days, 
            True AS _from0
        FROM PostgresEntities.Arrivals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mkb_10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mkb_10s", @"
    SELECT VALUE -- Constructing mkb_10s
        [PostgresModel.Store.mkb_10](T1.[mkb_10.oid], T1.[mkb_10.name], T1.[mkb_10.code], T1.[mkb_10.parent], T1.[mkb_10.importcode])
    FROM (
        SELECT 
            T.Oid AS [mkb_10.oid], 
            T.Name AS [mkb_10.name], 
            T.Code AS [mkb_10.code], 
            T.Parent AS [mkb_10.parent], 
            T.Importcode AS [mkb_10.importcode], 
            True AS _from0
        FROM PostgresEntities.Mkb10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.specializations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.specializations", @"
    SELECT VALUE -- Constructing specializations
        [PostgresModel.Store.specialization](T1.specialization_oid, T1.specialization_sanatorium, T1.specialization_mkb10, T1.[specialization.heal_profile], T1.[specialization.license_number], T1.[specialization.department_care])
    FROM (
        SELECT 
            T.Oid AS specialization_oid, 
            T.Sanatorium AS specialization_sanatorium, 
            T.Mkb10 AS specialization_mkb10, 
            T.HealProfile AS [specialization.heal_profile], 
            T.LicenseNumber AS [specialization.license_number], 
            T.DepartmentCare AS [specialization.department_care], 
            True AS _from0
        FROM PostgresEntities.Specializations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_deliveries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_deliveries", @"
    SELECT VALUE -- Constructing equipment_deliveries
        [PostgresModel.Store.equipment_delivery](T1.[equipment_delivery.oid], T1.[equipment_delivery.name], T1.[equipment_delivery.show], T1.[equipment_delivery.name2], T1.[equipment_delivery.status])
    FROM (
        SELECT 
            T.Oid AS [equipment_delivery.oid], 
            T.Name AS [equipment_delivery.name], 
            T.Show AS [equipment_delivery.show], 
            T.Name2 AS [equipment_delivery.name2], 
            T.Status AS [equipment_delivery.status], 
            True AS _from0
        FROM PostgresEntities.EquipmentDeliveries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areal_kladrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areal_kladrs", @"
    SELECT VALUE -- Constructing areal_kladrs
        [PostgresModel.Store.areal_kladr](T1.[areal_kladr.inrange], T1.[areal_kladr.outrange], T1.[areal_kladr.inrooms], T1.[areal_kladr.kladr_oid], T1.[areal_kladr.oid], T1.[areal_kladr.areal_oid])
    FROM (
        SELECT 
            T.Inrange AS [areal_kladr.inrange], 
            T.Outrange AS [areal_kladr.outrange], 
            T.Inrooms AS [areal_kladr.inrooms], 
            T.KladrOid AS [areal_kladr.kladr_oid], 
            T.Oid AS [areal_kladr.oid], 
            T.ArealOid AS [areal_kladr.areal_oid], 
            True AS _from0
        FROM PostgresEntities.ArealKladrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areal_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areal_people", @"
    SELECT VALUE -- Constructing areal_people
        [PostgresModel.Store.areal_people](T1.[areal_people.in_dt], T1.[areal_people.emp_id], T1.[areal_people.check_dt], T1.[areal_people.emp_id_check], T1.[areal_people.icd10_id], T1.[areal_people.people_oid], T1.[areal_people.oid], T1.[areal_people.areal_oid])
    FROM (
        SELECT 
            T.InDt AS [areal_people.in_dt], 
            T.EmpId AS [areal_people.emp_id], 
            T.CheckDt AS [areal_people.check_dt], 
            T.EmpIdCheck AS [areal_people.emp_id_check], 
            T.Icd10Id AS [areal_people.icd10_id], 
            T.PeopleOid AS [areal_people.people_oid], 
            T.Oid AS [areal_people.oid], 
            T.ArealOid AS [areal_people.areal_oid], 
            True AS _from0
        FROM PostgresEntities.ArealPeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areal_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areal_types", @"
    SELECT VALUE -- Constructing areal_types
        [PostgresModel.Store.areal_type](T1.[areal_type.name], T1.[areal_type.oid], T1.[areal_type.alias])
    FROM (
        SELECT 
            T.Name AS [areal_type.name], 
            T.Oid AS [areal_type.oid], 
            T.Alias AS [areal_type.alias], 
            True AS _from0
        FROM PostgresEntities.ArealTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areals", @"
    SELECT VALUE -- Constructing areals
        [PostgresModel.Store.areal](T1.areal_name, T1.areal_description, T1.[areal.company_id], T1.areal_car, T1.areal_ware, T1.[areal.workspace_gp], T1.[areal.workspace_any], T1.[areal.otdel_id], T1.areal_oid, T1.[areal.arealtype_oid], T1.areal_distanceareal, T1.[areal.quantity_norm])
    FROM (
        SELECT 
            T.Name AS areal_name, 
            T.Description AS areal_description, 
            T.CompanyId AS [areal.company_id], 
            T.Car AS areal_car, 
            T.Ware AS areal_ware, 
            T.WorkspaceGp AS [areal.workspace_gp], 
            T.WorkspaceAny AS [areal.workspace_any], 
            T.OtdelId AS [areal.otdel_id], 
            T.Oid AS areal_oid, 
            T.ArealtypeOid AS [areal.arealtype_oid], 
            T.Distanceareal AS areal_distanceareal, 
            T.QuantityNorm AS [areal.quantity_norm], 
            True AS _from0
        FROM PostgresEntities.Areals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.response_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.response_people", @"
    SELECT VALUE -- Constructing response_people
        [PostgresModel.Store.response_people](T1.[response_people.oid], T1.[response_people.lastname], T1.[response_people.firstname], T1.[response_people.middlename], T1.[response_people.telephone], T1.[response_people.fax], T1.[response_people.email], T1.[response_people.datepostbegin], T1.[response_people.datepostend], T1.[response_people.lpu], T1.[response_people.post])
    FROM (
        SELECT 
            T.Oid AS [response_people.oid], 
            T.Lastname AS [response_people.lastname], 
            T.Firstname AS [response_people.firstname], 
            T.Middlename AS [response_people.middlename], 
            T.Telephone AS [response_people.telephone], 
            T.Fax AS [response_people.fax], 
            T.Email AS [response_people.email], 
            T.Datepostbegin AS [response_people.datepostbegin], 
            T.Datepostend AS [response_people.datepostend], 
            T.Lpu AS [response_people.lpu], 
            T.Post AS [response_people.post], 
            True AS _from0
        FROM PostgresEntities.ResponsePeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_information_systems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_information_systems", @"
    SELECT VALUE -- Constructing lpu_information_systems
        [PostgresModel.Store.lpu_information_system](T1.[lpu_information_system.lpu], T1.[lpu_information_system.information_system], T1.[lpu_information_system.date_installation], T1.[lpu_information_system.price], T1.[lpu_information_system.support], T1.[lpu_information_system.support_price], T1.[lpu_information_system.oid])
    FROM (
        SELECT 
            T.Lpu AS [lpu_information_system.lpu], 
            T.InformationSystem AS [lpu_information_system.information_system], 
            T.DateInstallation AS [lpu_information_system.date_installation], 
            T.Price AS [lpu_information_system.price], 
            T.Support AS [lpu_information_system.support], 
            T.SupportPrice AS [lpu_information_system.support_price], 
            T.Oid AS [lpu_information_system.oid], 
            True AS _from0
        FROM PostgresEntities.LpuInformationSystems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sanatorium_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sanatorium_types", @"
    SELECT VALUE -- Constructing sanatorium_types
        [PostgresModel.Store.sanatorium_type](T1.[sanatorium_type.oid], T1.[sanatorium_type.name], T1.[sanatorium_type.name2], T1.[sanatorium_type.show], T1.[sanatorium_type.status])
    FROM (
        SELECT 
            T.Oid AS [sanatorium_type.oid], 
            T.Name AS [sanatorium_type.name], 
            T.Name2 AS [sanatorium_type.name2], 
            T.Show AS [sanatorium_type.show], 
            T.Status AS [sanatorium_type.status], 
            True AS _from0
        FROM PostgresEntities.SanatoriumTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_profiles", @"
    SELECT VALUE -- Constructing lpu_profiles
        [PostgresModel.Store.lpu_profile](T1.[lpu_profile.oid], T1.[lpu_profile.name], T1.[lpu_profile.show], T1.[lpu_profile.name2], T1.[lpu_profile.status])
    FROM (
        SELECT 
            T.Oid AS [lpu_profile.oid], 
            T.Name AS [lpu_profile.name], 
            T.Show AS [lpu_profile.show], 
            T.Name2 AS [lpu_profile.name2], 
            T.Status AS [lpu_profile.status], 
            True AS _from0
        FROM PostgresEntities.LpuProfiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.supreme_departments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.supreme_departments", @"
    SELECT VALUE -- Constructing supreme_departments
        [PostgresModel.Store.supreme_department](T1.[supreme_department.oid], T1.[supreme_department.name], T1.[supreme_department.show], T1.[supreme_department.name2], T1.[supreme_department.status])
    FROM (
        SELECT 
            T.Oid AS [supreme_department.oid], 
            T.Name AS [supreme_department.name], 
            T.Show AS [supreme_department.show], 
            T.Name2 AS [supreme_department.name2], 
            T.Status AS [supreme_department.status], 
            True AS _from0
        FROM PostgresEntities.SupremeDepartments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.address_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.address_types", @"
    SELECT VALUE -- Constructing address_types
        [PostgresModel.Store.address_type](T1.[address_type.oid], T1.[address_type.address_type_name], T1.[address_type.show], T1.[address_type.name2], T1.[address_type.status], T1.[address_type.gasurf_id])
    FROM (
        SELECT 
            T.Oid AS [address_type.oid], 
            T.AddressTypeName AS [address_type.address_type_name], 
            T.Show AS [address_type.show], 
            T.Name2 AS [address_type.name2], 
            T.Status AS [address_type.status], 
            T.GasurfId AS [address_type.gasurf_id], 
            True AS _from0
        FROM PostgresEntities.AddressTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bed_oper_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bed_oper_types", @"
    SELECT VALUE -- Constructing bed_oper_types
        [PostgresModel.Store.bed_oper_type](T1.[bed_oper_type.oid], T1.[bed_oper_type.name], T1.[bed_oper_type.show], T1.[bed_oper_type.name2], T1.[bed_oper_type.status], T1.[bed_oper_type.is_active])
    FROM (
        SELECT 
            T.Oid AS [bed_oper_type.oid], 
            T.Name AS [bed_oper_type.name], 
            T.Show AS [bed_oper_type.show], 
            T.Name2 AS [bed_oper_type.name2], 
            T.Status AS [bed_oper_type.status], 
            T.IsActive AS [bed_oper_type.is_active], 
            True AS _from0
        FROM PostgresEntities.BedOperTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.rights", @"
    SELECT VALUE -- Constructing rights
        [PostgresModel.Store.right](T1.right_oid, T1.right_name, T1.right_rem)
    FROM (
        SELECT 
            T.Oid AS right_oid, 
            T.Name AS right_name, 
            T.Rem AS right_rem, 
            True AS _from0
        FROM PostgresEntities.Rights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.roles", @"
    SELECT VALUE -- Constructing roles
        [PostgresModel.Store.role](T1.role_oid, T1.role_name, T1.role_rem, T1.[role.create_sotr])
    FROM (
        SELECT 
            T.Oid AS role_oid, 
            T.Name AS role_name, 
            T.Rem AS role_rem, 
            T.CreateSotr AS [role.create_sotr], 
            True AS _from0
        FROM PostgresEntities.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.building_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(6490);
            viewString.Append("\r\n    SELECT VALUE -- Constructing building_histories\r\n        [PostgresModel.St");
            viewString.Append("ore.building_history](T1.[building_history.hid], T1.[building_history.h_date], T");
            viewString.Append("1.[building_history.h_date_end], T1.[building_history.plot], T1.[building_histor");
            viewString.Append("y.building_name], T1.[building_history.identifier], T1.[building_history.buildin");
            viewString.Append("g_type], T1.[building_history.address], T1.[building_history.building_purpose], ");
            viewString.Append("T1.[building_history.equipment_ownership], T1.[building_history.balance], T1.[bu");
            viewString.Append("ilding_history.cost_primary], T1.[building_history.beds], T1.[building_history.v");
            viewString.Append("isits], T1.[building_history.beds_actual], T1.[building_history.stationary_seats");
            viewString.Append("], T1.[building_history.outpatient_seats], T1.[building_history.volume], T1.[bui");
            viewString.Append("lding_history.area_total], T1.[building_history.area_useful], T1.[building_histo");
            viewString.Append("ry.area_room], T1.[building_history.area_offices], T1.[building_history.fire_ala");
            viewString.Append("rms], T1.[building_history.burglar_alarms], T1.[building_history.button_police],");
            viewString.Append(" T1.[building_history.fire_warning], T1.[building_history.fire_water], T1.[build");
            viewString.Append("ing_history.fire_department_alarm], T1.[building_history.fire_department_connect");
            viewString.Append("ion], T1.[building_history.fire_violations], T1.[building_history.emergency_exit");
            viewString.Append("s], T1.[building_history.personal_protection], T1.[building_history.litter], T1.");
            viewString.Append("[building_history.fire_department_distance], T1.[building_history.security], T1.");
            viewString.Append("[building_history.metal_doors], T1.[building_history.video_monitoring], T1.[buil");
            viewString.Append("ding_history.room_attendants], T1.[building_history.fencing_area], T1.[building_");
            viewString.Append("history.suitability_disabilities], T1.[building_history.project_type], T1.[build");
            viewString.Append("ing_history.project_number], T1.[building_history.project_date], T1.[building_hi");
            viewString.Append("story.construction_date], T1.[building_history.repair_date], T1.[building_histor");
            viewString.Append("y.supporting_structure], T1.[building_history.floor_type], T1.[building_history.");
            viewString.Append("floor_count], T1.[building_history.airing], T1.[building_history.conditioning], ");
            viewString.Append("T1.[building_history.power_supply], T1.[building_history.water_supply], T1.[buil");
            viewString.Append("ding_history.hot_water_type], T1.[building_history.heating_type], T1.[building_h");
            viewString.Append("istory.sewerage_type], T1.[building_history.medical_gas_supply], T1.[building_hi");
            viewString.Append("story.gas_supply], T1.[building_history.communication_type], T1.[building_histor");
            viewString.Append("y.passenger_lift], T1.[building_history.medical_lift], T1.[building_history.sysd");
            viewString.Append("ate], T1.[building_history.oid])\r\n    FROM (\r\n        SELECT \r\n            T.Hid");
            viewString.Append(" AS [building_history.hid], \r\n            T.HDate AS [building_history.h_date], ");
            viewString.Append("\r\n            T.HDateEnd AS [building_history.h_date_end], \r\n            T.Plot ");
            viewString.Append("AS [building_history.plot], \r\n            T.BuildingName AS [building_history.bu");
            viewString.Append("ilding_name], \r\n            T.Identifier AS [building_history.identifier], \r\n   ");
            viewString.Append("         T.BuildingType AS [building_history.building_type], \r\n            T.Add");
            viewString.Append("ress AS [building_history.address], \r\n            T.BuildingPurpose AS [building");
            viewString.Append("_history.building_purpose], \r\n            T.EquipmentOwnership AS [building_hist");
            viewString.Append("ory.equipment_ownership], \r\n            T.Balance AS [building_history.balance],");
            viewString.Append(" \r\n            T.CostPrimary AS [building_history.cost_primary], \r\n            T");
            viewString.Append(".Beds AS [building_history.beds], \r\n            T.Visits AS [building_history.vi");
            viewString.Append("sits], \r\n            T.BedsActual AS [building_history.beds_actual], \r\n         ");
            viewString.Append("   T.StationarySeats AS [building_history.stationary_seats], \r\n            T.Out");
            viewString.Append("patientSeats AS [building_history.outpatient_seats], \r\n            T.Volume AS [");
            viewString.Append("building_history.volume], \r\n            T.AreaTotal AS [building_history.area_to");
            viewString.Append("tal], \r\n            T.AreaUseful AS [building_history.area_useful], \r\n          ");
            viewString.Append("  T.AreaRoom AS [building_history.area_room], \r\n            T.AreaOffices AS [bu");
            viewString.Append("ilding_history.area_offices], \r\n            T.FireAlarms AS [building_history.fi");
            viewString.Append("re_alarms], \r\n            T.BurglarAlarms AS [building_history.burglar_alarms], ");
            viewString.Append("\r\n            T.ButtonPolice AS [building_history.button_police], \r\n            ");
            viewString.Append("T.FireWarning AS [building_history.fire_warning], \r\n            T.FireWater AS [");
            viewString.Append("building_history.fire_water], \r\n            T.FireDepartmentAlarm AS [building_h");
            viewString.Append("istory.fire_department_alarm], \r\n            T.FireDepartmentConnection AS [buil");
            viewString.Append("ding_history.fire_department_connection], \r\n            T.FireViolations AS [bui");
            viewString.Append("lding_history.fire_violations], \r\n            T.EmergencyExits AS [building_hist");
            viewString.Append("ory.emergency_exits], \r\n            T.PersonalProtection AS [building_history.pe");
            viewString.Append("rsonal_protection], \r\n            T.Litter AS [building_history.litter], \r\n     ");
            viewString.Append("       T.FireDepartmentDistance AS [building_history.fire_department_distance], ");
            viewString.Append("\r\n            T.Security AS [building_history.security], \r\n            T.MetalDo");
            viewString.Append("ors AS [building_history.metal_doors], \r\n            T.VideoMonitoring AS [build");
            viewString.Append("ing_history.video_monitoring], \r\n            T.RoomAttendants AS [building_histo");
            viewString.Append("ry.room_attendants], \r\n            T.FencingArea AS [building_history.fencing_ar");
            viewString.Append("ea], \r\n            T.SuitabilityDisabilities AS [building_history.suitability_di");
            viewString.Append("sabilities], \r\n            T.ProjectType AS [building_history.project_type], \r\n ");
            viewString.Append("           T.ProjectNumber AS [building_history.project_number], \r\n            T");
            viewString.Append(".ProjectDate AS [building_history.project_date], \r\n            T.ConstructionDat");
            viewString.Append("e AS [building_history.construction_date], \r\n            T.RepairDate AS [buildi");
            viewString.Append("ng_history.repair_date], \r\n            T.SupportingStructure AS [building_histor");
            viewString.Append("y.supporting_structure], \r\n            T.FloorType AS [building_history.floor_ty");
            viewString.Append("pe], \r\n            T.FloorCount AS [building_history.floor_count], \r\n           ");
            viewString.Append(" T.Airing AS [building_history.airing], \r\n            T.Conditioning AS [buildin");
            viewString.Append("g_history.conditioning], \r\n            T.PowerSupply AS [building_history.power_");
            viewString.Append("supply], \r\n            T.WaterSupply AS [building_history.water_supply], \r\n     ");
            viewString.Append("       T.HotWaterType AS [building_history.hot_water_type], \r\n            T.Heat");
            viewString.Append("ingType AS [building_history.heating_type], \r\n            T.SewerageType AS [bui");
            viewString.Append("lding_history.sewerage_type], \r\n            T.MedicalGasSupply AS [building_hist");
            viewString.Append("ory.medical_gas_supply], \r\n            T.GasSupply AS [building_history.gas_supp");
            viewString.Append("ly], \r\n            T.CommunicationType AS [building_history.communication_type],");
            viewString.Append(" \r\n            T.PassengerLift AS [building_history.passenger_lift], \r\n         ");
            viewString.Append("   T.MedicalLift AS [building_history.medical_lift], \r\n            T.Sysdate AS ");
            viewString.Append("[building_history.sysdate], \r\n            T.Oid AS [building_history.oid], \r\n   ");
            viewString.Append("         True AS _from0\r\n        FROM PostgresEntities.BuildingHistories AS T\r\n ");
            viewString.Append("   ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.building_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.company_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2418);
            viewString.Append("\r\n    SELECT VALUE -- Constructing company_histories\r\n        [PostgresModel.Sto");
            viewString.Append("re.company_history](T1.[company_history.hid], T1.[company_history.h_date], T1.[c");
            viewString.Append("ompany_history.h_date_end], T1.[company_history.fullname], T1.[company_history.s");
            viewString.Append("hortname], T1.[company_history.phone], T1.[company_history.fax], T1.[company_his");
            viewString.Append("tory.okonh], T1.[company_history.okpo], T1.[company_history.inn], T1.[company_hi");
            viewString.Append("story.ogrn], T1.[company_history.kpf], T1.[company_history.address], T1.[company");
            viewString.Append("_history.home], T1.[company_history.optimisticlockfield], T1.[company_history.gc");
            viewString.Append("record], T1.[company_history.addressfact], T1.[company_history.raschschet], T1.[");
            viewString.Append("company_history.bank], T1.[company_history.kpp], T1.[company_history.bik], T1.[c");
            viewString.Append("ompany_history.korschet], T1.[company_history.region], T1.[company_history.okato");
            viewString.Append("], T1.[company_history.okved], T1.[company_history.sysdate], T1.[company_history");
            viewString.Append(".oid])\r\n    FROM (\r\n        SELECT \r\n            T.Hid AS [company_history.hid],");
            viewString.Append(" \r\n            T.HDate AS [company_history.h_date], \r\n            T.HDateEnd AS ");
            viewString.Append("[company_history.h_date_end], \r\n            T.Fullname AS [company_history.fulln");
            viewString.Append("ame], \r\n            T.Shortname AS [company_history.shortname], \r\n            T.");
            viewString.Append("Phone AS [company_history.phone], \r\n            T.Fax AS [company_history.fax], ");
            viewString.Append("\r\n            T.Okonh AS [company_history.okonh], \r\n            T.Okpo AS [compa");
            viewString.Append("ny_history.okpo], \r\n            T.Inn AS [company_history.inn], \r\n            T.");
            viewString.Append("Ogrn AS [company_history.ogrn], \r\n            T.Kpf AS [company_history.kpf], \r\n");
            viewString.Append("            T.Address AS [company_history.address], \r\n            T.Home AS [com");
            viewString.Append("pany_history.home], \r\n            T.Optimisticlockfield AS [company_history.opti");
            viewString.Append("misticlockfield], \r\n            T.Gcrecord AS [company_history.gcrecord], \r\n    ");
            viewString.Append("        T.Addressfact AS [company_history.addressfact], \r\n            T.Raschsch");
            viewString.Append("et AS [company_history.raschschet], \r\n            T.Bank AS [company_history.ban");
            viewString.Append("k], \r\n            T.Kpp AS [company_history.kpp], \r\n            T.Bik AS [compan");
            viewString.Append("y_history.bik], \r\n            T.Korschet AS [company_history.korschet], \r\n      ");
            viewString.Append("      T.Region AS [company_history.region], \r\n            T.Okato AS [company_hi");
            viewString.Append("story.okato], \r\n            T.Okved AS [company_history.okved], \r\n            T.");
            viewString.Append("Sysdate AS [company_history.sysdate], \r\n            T.Oid AS [company_history.oi");
            viewString.Append("d], \r\n            True AS _from0\r\n        FROM PostgresEntities.CompanyHistories");
            viewString.Append(" AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.company_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3148);
            viewString.Append("\r\n    SELECT VALUE -- Constructing lpu_histories\r\n        [PostgresModel.Store.l");
            viewString.Append("pu_history](T1.[lpu_history.hid], T1.[lpu_history.h_date], T1.[lpu_history.h_dat");
            viewString.Append("e_end], T1.[lpu_history.oid], T1.[lpu_history.identifier], T1.[lpu_history.lpu_c");
            viewString.Append("ode], T1.[lpu_history.lpu_code_value], T1.[lpu_history.lpu_type], T1.[lpu_histor");
            viewString.Append("y.ownership], T1.[lpu_history.organizational_form], T1.[lpu_history.oms], T1.[lp");
            viewString.Append("u_history.dlo], T1.[lpu_history.lpu_in_town], T1.[lpu_history.registrator_name],");
            viewString.Append(" T1.[lpu_history.registration_document], T1.[lpu_history.registration_date], T1.");
            viewString.Append("[lpu_history.subordination_type], T1.[lpu_history.level_type], T1.[lpu_history.r");
            viewString.Append("egistration_number], T1.[lpu_history.transport], T1.[lpu_history.telreg], T1.[lp");
            viewString.Append("u_history.telspr], T1.[lpu_history.city], T1.[lpu_history.city_kladroid], T1.[lp");
            viewString.Append("u_history.is_kvota], T1.[lpu_history.show_in_site], T1.[lpu_history.is_private],");
            viewString.Append(" T1.[lpu_history.territoryaffilation], T1.[lpu_history.site], T1.[lpu_history.is");
            viewString.Append("_allow_zapis], T1.[lpu_history.lpu_work_dogovor], T1.[lpu_history.supreme_depart");
            viewString.Append("ment], T1.[lpu_history.lpu_profile], T1.[lpu_history.sysdate])\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.Hid AS [lpu_history.hid], \r\n            T.HDate AS [l");
            viewString.Append("pu_history.h_date], \r\n            T.HDateEnd AS [lpu_history.h_date_end], \r\n    ");
            viewString.Append("        T.Oid AS [lpu_history.oid], \r\n            T.Identifier AS [lpu_history.i");
            viewString.Append("dentifier], \r\n            T.LpuCode AS [lpu_history.lpu_code], \r\n            T.L");
            viewString.Append("puCodeValue AS [lpu_history.lpu_code_value], \r\n            T.LpuType AS [lpu_his");
            viewString.Append("tory.lpu_type], \r\n            T.Ownership AS [lpu_history.ownership], \r\n        ");
            viewString.Append("    T.OrganizationalForm AS [lpu_history.organizational_form], \r\n            T.O");
            viewString.Append("ms AS [lpu_history.oms], \r\n            T.Dlo AS [lpu_history.dlo], \r\n           ");
            viewString.Append(" T.LpuInTown AS [lpu_history.lpu_in_town], \r\n            T.RegistratorName AS [l");
            viewString.Append("pu_history.registrator_name], \r\n            T.RegistrationDocument AS [lpu_histo");
            viewString.Append("ry.registration_document], \r\n            T.RegistrationDate AS [lpu_history.regi");
            viewString.Append("stration_date], \r\n            T.SubordinationType AS [lpu_history.subordination_");
            viewString.Append("type], \r\n            T.LevelType AS [lpu_history.level_type], \r\n            T.Re");
            viewString.Append("gistrationNumber AS [lpu_history.registration_number], \r\n            T.Transport");
            viewString.Append(" AS [lpu_history.transport], \r\n            T.Telreg AS [lpu_history.telreg], \r\n ");
            viewString.Append("           T.Telspr AS [lpu_history.telspr], \r\n            T.City AS [lpu_histor");
            viewString.Append("y.city], \r\n            T.CityKladroid AS [lpu_history.city_kladroid], \r\n        ");
            viewString.Append("    T.IsKvota AS [lpu_history.is_kvota], \r\n            T.ShowInSite AS [lpu_hist");
            viewString.Append("ory.show_in_site], \r\n            T.IsPrivate AS [lpu_history.is_private], \r\n    ");
            viewString.Append("        T.Territoryaffilation AS [lpu_history.territoryaffilation], \r\n          ");
            viewString.Append("  T.Site AS [lpu_history.site], \r\n            T.IsAllowZapis AS [lpu_history.is_");
            viewString.Append("allow_zapis], \r\n            T.LpuWorkDogovor AS [lpu_history.lpu_work_dogovor], ");
            viewString.Append("\r\n            T.SupremeDepartment AS [lpu_history.supreme_department], \r\n       ");
            viewString.Append("     T.LpuProfile AS [lpu_history.lpu_profile], \r\n            T.Sysdate AS [lpu_");
            viewString.Append("history.sysdate], \r\n            True AS _from0\r\n        FROM PostgresEntities.Lp");
            viewString.Append("uHistories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.plot_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.plot_histories", "\r\n    SELECT VALUE -- Constructing plot_histories\r\n        [PostgresModel.Store.p" +
                    "lot_history](T1.[plot_history.hid], T1.[plot_history.h_date], T1.[plot_history.h" +
                    "_date_end], T1.[plot_history.addressex], T1.[plot_history.lpu], T1.[plot_history" +
                    ".identifier], T1.[plot_history.right], T1.[plot_history.area], T1.[plot_history." +
                    "railway], T1.[plot_history.railway_distance], T1.[plot_history.airport], T1.[plo" +
                    "t_history.airport_distance], T1.[plot_history.bus], T1.[plot_history.bus_distanc" +
                    "e], T1.[plot_history.helicopter], T1.[plot_history.helicopter_distance], T1.[plo" +
                    "t_history.main_road], T1.[plot_history.sysdate], T1.[plot_history.oid])\r\n    FRO" +
                    "M (\r\n        SELECT \r\n            T.Hid AS [plot_history.hid], \r\n            T.H" +
                    "Date AS [plot_history.h_date], \r\n            T.HDateEnd AS [plot_history.h_date_" +
                    "end], \r\n            T.Addressex AS [plot_history.addressex], \r\n            T.Lpu" +
                    " AS [plot_history.lpu], \r\n            T.Identifier AS [plot_history.identifier]," +
                    " \r\n            T.[Right] AS [plot_history.right], \r\n            T.Area AS [plot_" +
                    "history.area], \r\n            T.Railway AS [plot_history.railway], \r\n            " +
                    "T.RailwayDistance AS [plot_history.railway_distance], \r\n            T.Airport AS" +
                    " [plot_history.airport], \r\n            T.AirportDistance AS [plot_history.airpor" +
                    "t_distance], \r\n            T.Bus AS [plot_history.bus], \r\n            T.BusDista" +
                    "nce AS [plot_history.bus_distance], \r\n            T.Helicopter AS [plot_history." +
                    "helicopter], \r\n            T.HelicopterDistance AS [plot_history.helicopter_dist" +
                    "ance], \r\n            T.MainRoad AS [plot_history.main_road], \r\n            T.Sys" +
                    "date AS [plot_history.sysdate], \r\n            T.Oid AS [plot_history.oid], \r\n   " +
                    "         True AS _from0\r\n        FROM PostgresEntities.PlotHistories AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.room_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.room_histories", @"
    SELECT VALUE -- Constructing room_histories
        [PostgresModel.Store.room_history](T1.[room_history.hid], T1.[room_history.h_date], T1.[room_history.h_date_end], T1.[room_history.otdel], T1.[room_history.building], T1.[room_history.room_name], T1.[room_history.identifier], T1.[room_history.room_type], T1.[room_history.rooms], T1.[room_history.primary_seats], T1.[room_history.additional_seats], T1.[room_history.area], T1.[room_history.window_view], T1.[room_history.sysdate], T1.[room_history.oid])
    FROM (
        SELECT 
            T.Hid AS [room_history.hid], 
            T.HDate AS [room_history.h_date], 
            T.HDateEnd AS [room_history.h_date_end], 
            T.Otdel AS [room_history.otdel], 
            T.Building AS [room_history.building], 
            T.RoomName AS [room_history.room_name], 
            T.Identifier AS [room_history.identifier], 
            T.RoomType AS [room_history.room_type], 
            T.Rooms AS [room_history.rooms], 
            T.PrimarySeats AS [room_history.primary_seats], 
            T.AdditionalSeats AS [room_history.additional_seats], 
            T.Area AS [room_history.area], 
            T.WindowView AS [room_history.window_view], 
            T.Sysdate AS [room_history.sysdate], 
            T.Oid AS [room_history.oid], 
            True AS _from0
        FROM PostgresEntities.RoomHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2214);
            viewString.Append("\r\n    SELECT VALUE -- Constructing equipment_histories\r\n        [PostgresModel.S");
            viewString.Append("tore.equipment_history](T1.[equipment_history.hid], T1.[equipment_history.h_date");
            viewString.Append("], T1.[equipment_history.h_date_end], T1.[equipment_history.otdel], T1.[equipmen");
            viewString.Append("t_history.equipment_type], T1.[equipment_history.equipment_name], T1.[equipment_");
            viewString.Append("history.identifier], T1.[equipment_history.equipment_model], T1.[equipment_histo");
            viewString.Append("ry.company_maker], T1.[equipment_history.serial_number], T1.[equipment_history.d");
            viewString.Append("ate_maker], T1.[equipment_history.lifetime], T1.[equipment_history.delivery], T1");
            viewString.Append(".[equipment_history.equipment_ownership], T1.[equipment_history.company_supplier");
            viewString.Append("], T1.[equipment_history.date_purchase], T1.[equipment_history.inventory_number]");
            viewString.Append(", T1.[equipment_history.registration_mark], T1.[equipment_history.sysdate], T1.[");
            viewString.Append("equipment_history.oid])\r\n    FROM (\r\n        SELECT \r\n            T.Hid AS [equi");
            viewString.Append("pment_history.hid], \r\n            T.HDate AS [equipment_history.h_date], \r\n     ");
            viewString.Append("       T.HDateEnd AS [equipment_history.h_date_end], \r\n            T.Otdel AS [e");
            viewString.Append("quipment_history.otdel], \r\n            T.EquipmentType AS [equipment_history.equ");
            viewString.Append("ipment_type], \r\n            T.EquipmentName AS [equipment_history.equipment_name");
            viewString.Append("], \r\n            T.Identifier AS [equipment_history.identifier], \r\n            T");
            viewString.Append(".EquipmentModel AS [equipment_history.equipment_model], \r\n            T.CompanyM");
            viewString.Append("aker AS [equipment_history.company_maker], \r\n            T.SerialNumber AS [equi");
            viewString.Append("pment_history.serial_number], \r\n            T.DateMaker AS [equipment_history.da");
            viewString.Append("te_maker], \r\n            T.Lifetime AS [equipment_history.lifetime], \r\n         ");
            viewString.Append("   T.Delivery AS [equipment_history.delivery], \r\n            T.EquipmentOwnershi");
            viewString.Append("p AS [equipment_history.equipment_ownership], \r\n            T.CompanySupplier AS");
            viewString.Append(" [equipment_history.company_supplier], \r\n            T.DatePurchase AS [equipmen");
            viewString.Append("t_history.date_purchase], \r\n            T.InventoryNumber AS [equipment_history.");
            viewString.Append("inventory_number], \r\n            T.RegistrationMark AS [equipment_history.regist");
            viewString.Append("ration_mark], \r\n            T.Sysdate AS [equipment_history.sysdate], \r\n        ");
            viewString.Append("    T.Oid AS [equipment_history.oid], \r\n            True AS _from0\r\n        FROM");
            viewString.Append(" PostgresEntities.EquipmentHistories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bed_opers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bed_opers", @"
    SELECT VALUE -- Constructing bed_opers
        [PostgresModel.Store.bed_oper](T1.[bed_oper.oid], T1.[bed_oper.bed], T1.[bed_oper.bed_oper_type], T1.[bed_oper.date_oper], T1.[bed_oper.bed_info])
    FROM (
        SELECT 
            T.Oid AS [bed_oper.oid], 
            T.Bed AS [bed_oper.bed], 
            T.BedOperType AS [bed_oper.bed_oper_type], 
            T.DateOper AS [bed_oper.date_oper], 
            T.BedInfo AS [bed_oper.bed_info], 
            True AS _from0
        FROM PostgresEntities.BedOpers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dictionaries", @"
    SELECT VALUE -- Constructing dictionaries
        [PostgresModel.Store.dictionary](T1.dictionary_oid, T1.dictionary_name, T1.dictionary_synonym, T1.dictionary_fomscorrelation, T1.[dictionary.dictionary_schema])
    FROM (
        SELECT 
            T.Oid AS dictionary_oid, 
            T.Name AS dictionary_name, 
            T.Synonym AS dictionary_synonym, 
            T.Fomscorrelation AS dictionary_fomscorrelation, 
            T.DictionarySchema AS [dictionary.dictionary_schema], 
            True AS _from0
        FROM PostgresEntities.Dictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_types", @"
    SELECT VALUE -- Constructing otdel_types
        [PostgresModel.Store.otdel_type](T1.[otdel_type.oid], T1.[otdel_type.name], T1.[otdel_type.parent], T1.[otdel_type.id], T1.[otdel_type.name2], T1.[otdel_type.show], T1.[otdel_type.status], T1.[otdel_type.paid], T1.[otdel_type.additional_type])
    FROM (
        SELECT 
            T.Oid AS [otdel_type.oid], 
            T.Name AS [otdel_type.name], 
            T.Parent AS [otdel_type.parent], 
            T.Id AS [otdel_type.id], 
            T.Name2 AS [otdel_type.name2], 
            T.Show AS [otdel_type.show], 
            T.Status AS [otdel_type.status], 
            T.Paid AS [otdel_type.paid], 
            T.AdditionalType AS [otdel_type.additional_type], 
            True AS _from0
        FROM PostgresEntities.OtdelTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_profiles", @"
    SELECT VALUE -- Constructing otdel_profiles
        [PostgresModel.Store.otdel_profile](T1.[otdel_profile.oid], T1.[otdel_profile.name], T1.[otdel_profile.parent], T1.[otdel_profile.name2], T1.[otdel_profile.show], T1.[otdel_profile.status])
    FROM (
        SELECT 
            T.Oid AS [otdel_profile.oid], 
            T.Name AS [otdel_profile.name], 
            T.Parent AS [otdel_profile.parent], 
            T.Name2 AS [otdel_profile.name2], 
            T.Show AS [otdel_profile.show], 
            T.Status AS [otdel_profile.status], 
            True AS _from0
        FROM PostgresEntities.OtdelProfiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_histories", @"
    SELECT VALUE -- Constructing otdel_histories
        [PostgresModel.Store.otdel_history](T1.[otdel_history.hid], T1.[otdel_history.h_date], T1.[otdel_history.h_date_end], T1.[otdel_history.sysdate], T1.[otdel_history.oid], T1.[otdel_history.lpu], T1.[otdel_history.distance], T1.[otdel_history.addressex], T1.[otdel_history.parent], T1.[otdel_history.name], T1.[otdel_history.otdel_code], T1.[otdel_history.location], T1.[otdel_history.otdel_type], T1.[otdel_history.otdel_profile])
    FROM (
        SELECT 
            T.Hid AS [otdel_history.hid], 
            T.HDate AS [otdel_history.h_date], 
            T.HDateEnd AS [otdel_history.h_date_end], 
            T.Sysdate AS [otdel_history.sysdate], 
            T.Oid AS [otdel_history.oid], 
            T.Lpu AS [otdel_history.lpu], 
            T.Distance AS [otdel_history.distance], 
            T.Addressex AS [otdel_history.addressex], 
            T.Parent AS [otdel_history.parent], 
            T.Name AS [otdel_history.name], 
            T.OtdelCode AS [otdel_history.otdel_code], 
            T.Location AS [otdel_history.location], 
            T.OtdelType AS [otdel_history.otdel_type], 
            T.OtdelProfile AS [otdel_history.otdel_profile], 
            True AS _from0
        FROM PostgresEntities.OtdelHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stafflists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stafflists", @"
    SELECT VALUE -- Constructing stafflists
        [PostgresModel.Store.stafflist](T1.stafflist_oid, T1.stafflist_post, T1.stafflist_otdel, T1.[stafflist.stafflist_header], T1.[stafflist.staff_number], T1.stafflist_wages, T1.stafflist_premium, T1.stafflist_description)
    FROM (
        SELECT 
            T.Oid AS stafflist_oid, 
            T.Post AS stafflist_post, 
            T.Otdel AS stafflist_otdel, 
            T.StafflistHeader AS [stafflist.stafflist_header], 
            T.StaffNumber AS [stafflist.staff_number], 
            T.Wages AS stafflist_wages, 
            T.Premium AS stafflist_premium, 
            T.Description AS stafflist_description, 
            True AS _from0
        FROM PostgresEntities.Stafflists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infection_icd10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infection_icd10s", @"
    SELECT VALUE -- Constructing infection_icd10s
        [PostgresModel.Store.infection_icd10](T1.[infection_icd10.oid], T1.[infection_icd10.infection_id], T1.[infection_icd10.icd10_id])
    FROM (
        SELECT 
            T.Oid AS [infection_icd10.oid], 
            T.InfectionId AS [infection_icd10.infection_id], 
            T.Icd10Id AS [infection_icd10.icd10_id], 
            True AS _from0
        FROM PostgresEntities.InfectionIcd10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_maps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_maps", @"
    SELECT VALUE -- Constructing vac_maps
        [PostgresModel.Store.vac_map](T1.[vac_map.oid], T1.[vac_map.people_id], T1.[vac_map.company_id], T1.[vac_map.company_date], T1.[vac_map.own_company_id], T1.[vac_map.begin_date], T1.[vac_map.end_date], T1.[vac_map.class], T1.[vac_map.class_liter], T1.[vac_map.fl_del])
    FROM (
        SELECT 
            T.Oid AS [vac_map.oid], 
            T.PeopleId AS [vac_map.people_id], 
            T.CompanyId AS [vac_map.company_id], 
            T.CompanyDate AS [vac_map.company_date], 
            T.OwnCompanyId AS [vac_map.own_company_id], 
            T.BeginDate AS [vac_map.begin_date], 
            T.EndDate AS [vac_map.end_date], 
            T.Class AS [vac_map.class], 
            T.ClassLiter AS [vac_map.class_liter], 
            T.FlDel AS [vac_map.fl_del], 
            True AS _from0
        FROM PostgresEntities.VacMaps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_people_tests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_people_tests", "\r\n    SELECT VALUE -- Constructing vac_people_tests\r\n        [PostgresModel.Store" +
                    ".vac_people_test](T1.[vac_people_test.oid], T1.[vac_people_test.people_id], T1.[" +
                    "vac_people_test.test_date], T1.[vac_people_test.reaction], T1.[vac_people_test.r" +
                    "eaction_rubec], T1.[vac_people_test.vac_test_result_id], T1.[vac_people_test.vac" +
                    "_test_id], T1.[vac_people_test.emp_id], T1.[vac_people_test.emp_name], T1.[vac_p" +
                    "eople_test.company_id], T1.[vac_people_test.company_name], T1.[vac_people_test.r" +
                    "egister_date], T1.[vac_people_test.exec_emp_id], T1.[vac_people_test.exec_emp_na" +
                    "me])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [vac_people_test.oid], \r" +
                    "\n            T.PeopleId AS [vac_people_test.people_id], \r\n            T.TestDate" +
                    " AS [vac_people_test.test_date], \r\n            T.Reaction AS [vac_people_test.re" +
                    "action], \r\n            T.ReactionRubec AS [vac_people_test.reaction_rubec], \r\n  " +
                    "          T.VacTestResultId AS [vac_people_test.vac_test_result_id], \r\n         " +
                    "   T.VacTestId AS [vac_people_test.vac_test_id], \r\n            T.EmpId AS [vac_p" +
                    "eople_test.emp_id], \r\n            T.EmpName AS [vac_people_test.emp_name], \r\n   " +
                    "         T.CompanyId AS [vac_people_test.company_id], \r\n            T.CompanyNam" +
                    "e AS [vac_people_test.company_name], \r\n            T.RegisterDate AS [vac_people" +
                    "_test.register_date], \r\n            T.ExecEmpId AS [vac_people_test.exec_emp_id]" +
                    ", \r\n            T.ExecEmpName AS [vac_people_test.exec_emp_name], \r\n            " +
                    "True AS _from0\r\n        FROM PostgresEntities.VacPeopleTests AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_plans
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_plans", @"
    SELECT VALUE -- Constructing vac_plans
        [PostgresModel.Store.vac_plan](T1.[vac_plan.oid], T1.[vac_plan.people_id], T1.[vac_plan.infection_id], T1.[vac_plan.kratn_id], T1.[vac_plan.plan_date], T1.[vac_plan.status_id], T1.[vac_plan.vac_cancel_id], T1.[vac_plan.is_not_vaccin], T1.[vac_plan.is_not_exists_prev_vaccin], T1.[vac_plan.vaccin_period], T1.[vac_plan.vac_people_id], T1.[vac_plan.emp_id], T1.[vac_plan.emp_name])
    FROM (
        SELECT 
            T.Oid AS [vac_plan.oid], 
            T.PeopleId AS [vac_plan.people_id], 
            T.InfectionId AS [vac_plan.infection_id], 
            T.KratnId AS [vac_plan.kratn_id], 
            T.PlanDate AS [vac_plan.plan_date], 
            T.StatusId AS [vac_plan.status_id], 
            T.VacCancelId AS [vac_plan.vac_cancel_id], 
            T.IsNotVaccin AS [vac_plan.is_not_vaccin], 
            T.IsNotExistsPrevVaccin AS [vac_plan.is_not_exists_prev_vaccin], 
            T.VaccinPeriod AS [vac_plan.vaccin_period], 
            T.VacPeopleId AS [vac_plan.vac_people_id], 
            T.EmpId AS [vac_plan.emp_id], 
            T.EmpName AS [vac_plan.emp_name], 
            True AS _from0
        FROM PostgresEntities.VacPlans AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_input_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_input_types", @"
    SELECT VALUE -- Constructing vac_input_types
        [PostgresModel.Store.vac_input_type](T1.[vac_input_type.oid], T1.[vac_input_type.name])
    FROM (
        SELECT 
            T.Oid AS [vac_input_type.oid], 
            T.Name AS [vac_input_type.name], 
            True AS _from0
        FROM PostgresEntities.VacInputTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_kratns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_kratns", @"
    SELECT VALUE -- Constructing vac_kratns
        [PostgresModel.Store.vac_kratn](T1.[vac_kratn.oid], T1.[vac_kratn.infection_id], T1.[vac_kratn.vac_people_id], T1.[vac_kratn.kratn_id])
    FROM (
        SELECT 
            T.Oid AS [vac_kratn.oid], 
            T.InfectionId AS [vac_kratn.infection_id], 
            T.VacPeopleId AS [vac_kratn.vac_people_id], 
            T.KratnId AS [vac_kratn.kratn_id], 
            True AS _from0
        FROM PostgresEntities.VacKratns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_sicnesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_sicnesses", @"
    SELECT VALUE -- Constructing vac_sicnesses
        [PostgresModel.Store.vac_sicness](T1.[vac_sicness.oid], T1.[vac_sicness.people_id], T1.[vac_sicness.infection_id], T1.[vac_sicness.end_date], T1.[vac_sicness.comment], T1.[vac_sicness.company_id], T1.[vac_sicness.company_name], T1.[vac_sicness.emp_id], T1.[vac_sicness.emp_name], T1.[vac_sicness.icd10_id], T1.[vac_sicness.diag_id], T1.[vac_sicness.icd10_text])
    FROM (
        SELECT 
            T.Oid AS [vac_sicness.oid], 
            T.PeopleId AS [vac_sicness.people_id], 
            T.InfectionId AS [vac_sicness.infection_id], 
            T.EndDate AS [vac_sicness.end_date], 
            T.Comment AS [vac_sicness.comment], 
            T.CompanyId AS [vac_sicness.company_id], 
            T.CompanyName AS [vac_sicness.company_name], 
            T.EmpId AS [vac_sicness.emp_id], 
            T.EmpName AS [vac_sicness.emp_name], 
            T.Icd10Id AS [vac_sicness.icd10_id], 
            T.DiagId AS [vac_sicness.diag_id], 
            T.Icd10Text AS [vac_sicness.icd10_text], 
            True AS _from0
        FROM PostgresEntities.VacSicnesses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_companies", @"
    SELECT VALUE -- Constructing vac_companies
        [PostgresModel.Store.vac_company](T1.[vac_company.oid], T1.[vac_company.type_id])
    FROM (
        SELECT 
            T.Oid AS [vac_company.oid], 
            T.TypeId AS [vac_company.type_id], 
            True AS _from0
        FROM PostgresEntities.VacCompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_lpu_companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_lpu_companies", @"
    SELECT VALUE -- Constructing vac_lpu_companies
        [PostgresModel.Store.vac_lpu_company](T1.[vac_lpu_company.oid], T1.[vac_lpu_company.company_lpu_id], T1.[vac_lpu_company.company_id])
    FROM (
        SELECT 
            T.Oid AS [vac_lpu_company.oid], 
            T.CompanyLpuId AS [vac_lpu_company.company_lpu_id], 
            T.CompanyId AS [vac_lpu_company.company_id], 
            True AS _from0
        FROM PostgresEntities.VacLpuCompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2255);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vac_people\r\n        [PostgresModel.Store.vac_");
            viewString.Append("people](T1.[vac_people.oid], T1.[vac_people.people_id], T1.[vac_people.vaccin_pr");
            viewString.Append("ep_id], T1.[vac_people.vaccin_prep_name], T1.[vac_people.series], T1.[vac_people");
            viewString.Append(".num], T1.[vac_people.unit_id], T1.[vac_people.input_type_id], T1.[vac_people.cr");
            viewString.Append("eate_date], T1.[vac_people.status_id], T1.[vac_people.emp_naz_id], T1.[vac_peopl");
            viewString.Append("e.emp_naz_name], T1.[vac_people.emp_id], T1.[vac_people.emp_name], T1.[vac_peopl");
            viewString.Append("e.vac_company_id], T1.[vac_people.vac_company_name], T1.[vac_people.dept_id], T1");
            viewString.Append(".[vac_people.vaccin_shemname_id], T1.[vac_people.vaccin_shem_id], T1.[vac_people");
            viewString.Append(".reaction_type], T1.[vac_people.reaction], T1.[vac_people.reaction_rubec], T1.[v");
            viewString.Append("ac_people.status_series_id], T1.[vac_people.vaccin_prep_store_log_id])\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.Oid AS [vac_people.oid], \r\n            T.Peop");
            viewString.Append("leId AS [vac_people.people_id], \r\n            T.VaccinPrepId AS [vac_people.vacc");
            viewString.Append("in_prep_id], \r\n            T.VaccinPrepName AS [vac_people.vaccin_prep_name], \r\n");
            viewString.Append("            T.Series AS [vac_people.series], \r\n            T.Num AS [vac_people.");
            viewString.Append("num], \r\n            T.UnitId AS [vac_people.unit_id], \r\n            T.InputTypeI");
            viewString.Append("d AS [vac_people.input_type_id], \r\n            T.CreateDate AS [vac_people.creat");
            viewString.Append("e_date], \r\n            T.StatusId AS [vac_people.status_id], \r\n            T.Emp");
            viewString.Append("NazId AS [vac_people.emp_naz_id], \r\n            T.EmpNazName AS [vac_people.emp_");
            viewString.Append("naz_name], \r\n            T.EmpId AS [vac_people.emp_id], \r\n            T.EmpName");
            viewString.Append(" AS [vac_people.emp_name], \r\n            T.VacCompanyId AS [vac_people.vac_compa");
            viewString.Append("ny_id], \r\n            T.VacCompanyName AS [vac_people.vac_company_name], \r\n     ");
            viewString.Append("       T.DeptId AS [vac_people.dept_id], \r\n            T.VaccinShemnameId AS [va");
            viewString.Append("c_people.vaccin_shemname_id], \r\n            T.VaccinShemId AS [vac_people.vaccin");
            viewString.Append("_shem_id], \r\n            T.ReactionType AS [vac_people.reaction_type], \r\n       ");
            viewString.Append("     T.Reaction AS [vac_people.reaction], \r\n            T.ReactionRubec AS [vac_");
            viewString.Append("people.reaction_rubec], \r\n            T.StatusSeriesId AS [vac_people.status_ser");
            viewString.Append("ies_id], \r\n            T.VaccinPrepStoreLogId AS [vac_people.vaccin_prep_store_l");
            viewString.Append("og_id], \r\n            True AS _from0\r\n        FROM PostgresEntities.VacPeople AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_people", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_stores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_stores", @"
    SELECT VALUE -- Constructing vac_stores
        [PostgresModel.Store.vac_store](T1.[vac_store.oid], T1.[vac_store.dept_id], T1.[vac_store.comment])
    FROM (
        SELECT 
            T.Oid AS [vac_store.oid], 
            T.DeptId AS [vac_store.dept_id], 
            T.Comment AS [vac_store.comment], 
            True AS _from0
        FROM PostgresEntities.VacStores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_kratn_names
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_kratn_names", @"
    SELECT VALUE -- Constructing vac_kratn_names
        [PostgresModel.Store.vac_kratn_name](T1.[vac_kratn_name.oid], T1.[vac_kratn_name.name], T1.[vac_kratn_name.type], T1.[vac_kratn_name.num])
    FROM (
        SELECT 
            T.Oid AS [vac_kratn_name.oid], 
            T.Name AS [vac_kratn_name.name], 
            T.Type AS [vac_kratn_name.type], 
            T.Num AS [vac_kratn_name.num], 
            True AS _from0
        FROM PostgresEntities.VacKratnNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_people_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_people_status", @"
    SELECT VALUE -- Constructing vac_people_status
        [PostgresModel.Store.vac_people_status](T1.[vac_people_status.oid], T1.[vac_people_status.name])
    FROM (
        SELECT 
            T.Oid AS [vac_people_status.oid], 
            T.Name AS [vac_people_status.name], 
            True AS _from0
        FROM PostgresEntities.VacPeopleStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_status_series
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_status_series", @"
    SELECT VALUE -- Constructing vac_status_series
        [PostgresModel.Store.vac_status_series](T1.[vac_status_series.oid], T1.[vac_status_series.name])
    FROM (
        SELECT 
            T.Oid AS [vac_status_series.oid], 
            T.Name AS [vac_status_series.name], 
            True AS _from0
        FROM PostgresEntities.VacStatusSeries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_plan_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_plan_status", @"
    SELECT VALUE -- Constructing vac_plan_status
        [PostgresModel.Store.vac_plan_status](T1.[vac_plan_status.oid], T1.[vac_plan_status.name])
    FROM (
        SELECT 
            T.Oid AS [vac_plan_status.oid], 
            T.Name AS [vac_plan_status.name], 
            True AS _from0
        FROM PostgresEntities.VacPlanStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_cancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_cancels", @"
    SELECT VALUE -- Constructing vac_cancels
        [PostgresModel.Store.vac_cancel](T1.[vac_cancel.oid], T1.[vac_cancel.people_id], T1.[vac_cancel.type_id], T1.[vac_cancel.begin_date], T1.[vac_cancel.end_date], T1.[vac_cancel.emp_id], T1.[vac_cancel.emp_name], T1.[vac_cancel.comment])
    FROM (
        SELECT 
            T.Oid AS [vac_cancel.oid], 
            T.PeopleId AS [vac_cancel.people_id], 
            T.TypeId AS [vac_cancel.type_id], 
            T.BeginDate AS [vac_cancel.begin_date], 
            T.EndDate AS [vac_cancel.end_date], 
            T.EmpId AS [vac_cancel.emp_id], 
            T.EmpName AS [vac_cancel.emp_name], 
            T.Comment AS [vac_cancel.comment], 
            True AS _from0
        FROM PostgresEntities.VacCancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_prep_store_logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_prep_store_logs", @"
    SELECT VALUE -- Constructing vaccin_prep_store_logs
        [PostgresModel.Store.vaccin_prep_store_log](T1.[vaccin_prep_store_log.oid], T1.[vaccin_prep_store_log.vaccin_prep_store_id], T1.[vaccin_prep_store_log.type_id], T1.[vaccin_prep_store_log.date_on], T1.[vaccin_prep_store_log.num], T1.[vaccin_prep_store_log.emp_id], T1.[vaccin_prep_store_log.comment], T1.[vaccin_prep_store_log.old], T1.[vaccin_prep_store_log.new])
    FROM (
        SELECT 
            T.Oid AS [vaccin_prep_store_log.oid], 
            T.VaccinPrepStoreId AS [vaccin_prep_store_log.vaccin_prep_store_id], 
            T.TypeId AS [vaccin_prep_store_log.type_id], 
            T.DateOn AS [vaccin_prep_store_log.date_on], 
            T.Num AS [vaccin_prep_store_log.num], 
            T.EmpId AS [vaccin_prep_store_log.emp_id], 
            T.Comment AS [vaccin_prep_store_log.comment], 
            T.Old AS [vaccin_prep_store_log.old], 
            T.New AS [vaccin_prep_store_log.new], 
            True AS _from0
        FROM PostgresEntities.VaccinPrepStoreLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_shemnames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_shemnames", @"
    SELECT VALUE -- Constructing vaccin_shemnames
        [PostgresModel.Store.vaccin_shemname](T1.[vaccin_shemname.oid], T1.[vaccin_shemname.name], T1.[vaccin_shemname.vaccin_prep_id], T1.[vaccin_shemname.comment])
    FROM (
        SELECT 
            T.Oid AS [vaccin_shemname.oid], 
            T.Name AS [vaccin_shemname.name], 
            T.VaccinPrepId AS [vaccin_shemname.vaccin_prep_id], 
            T.Comment AS [vaccin_shemname.comment], 
            True AS _from0
        FROM PostgresEntities.VaccinShemnames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_shems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_shems", @"
    SELECT VALUE -- Constructing vaccin_shems
        [PostgresModel.Store.vaccin_shem](T1.[vaccin_shem.oid], T1.[vaccin_shem.kratn_id], T1.[vaccin_shem.minpause], T1.[vaccin_shem.minpausetext], T1.[vaccin_shem.minage], T1.[vaccin_shem.minagetext], T1.[vaccin_shem.shemname_id])
    FROM (
        SELECT 
            T.Oid AS [vaccin_shem.oid], 
            T.KratnId AS [vaccin_shem.kratn_id], 
            T.Minpause AS [vaccin_shem.minpause], 
            T.Minpausetext AS [vaccin_shem.minpausetext], 
            T.Minage AS [vaccin_shem.minage], 
            T.Minagetext AS [vaccin_shem.minagetext], 
            T.ShemnameId AS [vaccin_shem.shemname_id], 
            True AS _from0
        FROM PostgresEntities.VaccinShems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_prep_infections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_prep_infections", @"
    SELECT VALUE -- Constructing vaccin_prep_infections
        [PostgresModel.Store.vaccin_prep_infection](T1.[vaccin_prep_infection.oid], T1.[vaccin_prep_infection.vaccin_prep_id], T1.[vaccin_prep_infection.vaccin_infection_id])
    FROM (
        SELECT 
            T.Oid AS [vaccin_prep_infection.oid], 
            T.VaccinPrepId AS [vaccin_prep_infection.vaccin_prep_id], 
            T.VaccinInfectionId AS [vaccin_prep_infection.vaccin_infection_id], 
            True AS _from0
        FROM PostgresEntities.VaccinPrepInfections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_log_operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_log_operations", @"
    SELECT VALUE -- Constructing vaccin_log_operations
        [PostgresModel.Store.vaccin_log_operation](T1.[vaccin_log_operation.oid], T1.[vaccin_log_operation.name])
    FROM (
        SELECT 
            T.Oid AS [vaccin_log_operation.oid], 
            T.Name AS [vaccin_log_operation.name], 
            True AS _from0
        FROM PostgresEntities.VaccinLogOperations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_test_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_test_results", @"
    SELECT VALUE -- Constructing vac_test_results
        [PostgresModel.Store.vac_test_result](T1.[vac_test_result.oid], T1.[vac_test_result.name], T1.[vac_test_result.vac_test_id], T1.[vac_test_result.comment])
    FROM (
        SELECT 
            T.Oid AS [vac_test_result.oid], 
            T.Name AS [vac_test_result.name], 
            T.VacTestId AS [vac_test_result.vac_test_id], 
            T.Comment AS [vac_test_result.comment], 
            True AS _from0
        FROM PostgresEntities.VacTestResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_prep_stores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_prep_stores", @"
    SELECT VALUE -- Constructing vaccin_prep_stores
        [PostgresModel.Store.vaccin_prep_store](T1.[vaccin_prep_store.oid], T1.[vaccin_prep_store.store_id], T1.[vaccin_prep_store.vaccin_prep_id], T1.[vaccin_prep_store.series], T1.[vaccin_prep_store.fitness_date], T1.[vaccin_prep_store.reminder])
    FROM (
        SELECT 
            T.Oid AS [vaccin_prep_store.oid], 
            T.StoreId AS [vaccin_prep_store.store_id], 
            T.VaccinPrepId AS [vaccin_prep_store.vaccin_prep_id], 
            T.Series AS [vaccin_prep_store.series], 
            T.FitnessDate AS [vaccin_prep_store.fitness_date], 
            T.Reminder AS [vaccin_prep_store.reminder], 
            True AS _from0
        FROM PostgresEntities.VaccinPrepStores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_cancel_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_cancel_types", @"
    SELECT VALUE -- Constructing vac_cancel_types
        [PostgresModel.Store.vac_cancel_type](T1.[vac_cancel_type.oid], T1.[vac_cancel_type.permanent], T1.[vac_cancel_type.name], T1.[vac_cancel_type.def_duration], T1.[vac_cancel_type.is_med], T1.[vac_cancel_type.is_all])
    FROM (
        SELECT 
            T.Oid AS [vac_cancel_type.oid], 
            T.Permanent AS [vac_cancel_type.permanent], 
            T.Name AS [vac_cancel_type.name], 
            T.DefDuration AS [vac_cancel_type.def_duration], 
            T.IsMed AS [vac_cancel_type.is_med], 
            T.IsAll AS [vac_cancel_type.is_all], 
            True AS _from0
        FROM PostgresEntities.VacCancelTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_company_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_company_types", @"
    SELECT VALUE -- Constructing vac_company_types
        [PostgresModel.Store.vac_company_type](T1.[vac_company_type.oid], T1.[vac_company_type.name])
    FROM (
        SELECT 
            T.Oid AS [vac_company_type.oid], 
            T.Name AS [vac_company_type.name], 
            True AS _from0
        FROM PostgresEntities.VacCompanyTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.infections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.infections", @"
    SELECT VALUE -- Constructing infections
        [PostgresModel.Store.infection](T1.infection_oid, T1.infection_name, T1.infection_comment, T1.[infection.is_nation], T1.[infection.year_effect], T1.[infection.def_vac_test_id], T1.infection_del)
    FROM (
        SELECT 
            T.Oid AS infection_oid, 
            T.Name AS infection_name, 
            T.Comment AS infection_comment, 
            T.IsNation AS [infection.is_nation], 
            T.YearEffect AS [infection.year_effect], 
            T.DefVacTestId AS [infection.def_vac_test_id], 
            T.Del AS infection_del, 
            True AS _from0
        FROM PostgresEntities.Infections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_tests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_tests", @"
    SELECT VALUE -- Constructing vac_tests
        [PostgresModel.Store.vac_test](T1.[vac_test.oid], T1.[vac_test.name], T1.[vac_test.comment])
    FROM (
        SELECT 
            T.Oid AS [vac_test.oid], 
            T.Name AS [vac_test.name], 
            T.Comment AS [vac_test.comment], 
            True AS _from0
        FROM PostgresEntities.VacTests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_units
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_units", @"
    SELECT VALUE -- Constructing vaccin_units
        [PostgresModel.Store.vaccin_unit](T1.[vaccin_unit.oid], T1.[vaccin_unit.name], T1.[vaccin_unit.short_name])
    FROM (
        SELECT 
            T.Oid AS [vaccin_unit.oid], 
            T.Name AS [vaccin_unit.name], 
            T.ShortName AS [vaccin_unit.short_name], 
            True AS _from0
        FROM PostgresEntities.VaccinUnits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vaccin_preps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vaccin_preps", @"
    SELECT VALUE -- Constructing vaccin_preps
        [PostgresModel.Store.vaccin_prep](T1.[vaccin_prep.oid], T1.[vaccin_prep.name], T1.[vaccin_prep.unit_id], T1.[vaccin_prep.dose], T1.[vaccin_prep.del], T1.[vaccin_prep.def_input_type_id], T1.[vaccin_prep.comment])
    FROM (
        SELECT 
            T.Oid AS [vaccin_prep.oid], 
            T.Name AS [vaccin_prep.name], 
            T.UnitId AS [vaccin_prep.unit_id], 
            T.Dose AS [vaccin_prep.dose], 
            T.Del AS [vaccin_prep.del], 
            T.DefInputTypeId AS [vaccin_prep.def_input_type_id], 
            T.Comment AS [vaccin_prep.comment], 
            True AS _from0
        FROM PostgresEntities.VaccinPreps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdocs", @"
    SELECT VALUE -- Constructing mdocs
        [PostgresModel.Store.mdoc](T1.mdoc_id, T1.[mdoc.people_id], T1.[mdoc.mdoc_type_id], T1.mdoc_beginm, T1.mdoc_endm, T1.mdoc_num, T1.[mdoc.pdoc_id], T1.mdoc_status, T1.mdoc_year, T1.mdoc_otdel, T1.mdoc_lpu, T1.[mdoc.docobsl_id], T1.mdoc_location, T1.[mdoc.reason_archive_id])
    FROM (
        SELECT 
            T.Id AS mdoc_id, 
            T.PeopleId AS [mdoc.people_id], 
            T.MdocTypeId AS [mdoc.mdoc_type_id], 
            T.Beginm AS mdoc_beginm, 
            T.Endm AS mdoc_endm, 
            T.Num AS mdoc_num, 
            T.PdocId AS [mdoc.pdoc_id], 
            T.Status AS mdoc_status, 
            T.Year AS mdoc_year, 
            T.Otdel AS mdoc_otdel, 
            T.Lpu AS mdoc_lpu, 
            T.DocobslId AS [mdoc.docobsl_id], 
            T.Location AS mdoc_location, 
            T.ReasonArchiveId AS [mdoc.reason_archive_id], 
            True AS _from0
        FROM PostgresEntities.Mdocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.visits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.visits", @"
    SELECT VALUE -- Constructing visits
        [PostgresModel.Store.visit](T1.visit_id, T1.visit_beginv, T1.visit_endv, T1.[visit.mdoc_id], T1.[visit.addr_id], T1.[visit.visit_state], T1.[visit.sotr_id], T1.[visit.pay_type_id], T1.[visit.pay_method], T1.visit_parent)
    FROM (
        SELECT 
            T.Id AS visit_id, 
            T.Beginv AS visit_beginv, 
            T.Endv AS visit_endv, 
            T.MdocId AS [visit.mdoc_id], 
            T.AddrId AS [visit.addr_id], 
            T.VisitState AS [visit.visit_state], 
            T.SotrId AS [visit.sotr_id], 
            T.PayTypeId AS [visit.pay_type_id], 
            T.PayMethod AS [visit.pay_method], 
            T.Parent AS visit_parent, 
            True AS _from0
        FROM PostgresEntities.Visits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_links
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_links", @"
    SELECT VALUE -- Constructing sicklist_links
        [PostgresModel.Store.sicklist_link](T1.[sicklist_link.id], T1.[sicklist_link.name], T1.[sicklist_link.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_link.id], 
            T.Name AS [sicklist_link.name], 
            T.Code AS [sicklist_link.code], 
            True AS _from0
        FROM PostgresEntities.SicklistLinks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdoc_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdoc_types", @"
    SELECT VALUE -- Constructing mdoc_types
        [PostgresModel.Store.mdoc_type](T1.[mdoc_type.id], T1.[mdoc_type.name], T1.[mdoc_type.parent_id], T1.[mdoc_type.num_type_id], T1.[mdoc_type.synonim], T1.[mdoc_type.mk_sort_view], T1.[mdoc_type.mk_sort_print])
    FROM (
        SELECT 
            T.Id AS [mdoc_type.id], 
            T.Name AS [mdoc_type.name], 
            T.ParentId AS [mdoc_type.parent_id], 
            T.NumTypeId AS [mdoc_type.num_type_id], 
            T.Synonim AS [mdoc_type.synonim], 
            T.MkSortView AS [mdoc_type.mk_sort_view], 
            T.MkSortPrint AS [mdoc_type.mk_sort_print], 
            True AS _from0
        FROM PostgresEntities.MdocTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pdocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pdocs", @"
    SELECT VALUE -- Constructing pdocs
        [PostgresModel.Store.pdoc](T1.pdoc_id, T1.[pdoc.pdoctype_id], T1.pdoc_ser, T1.pdoc_num, T1.pdoc_givedate, T1.pdoc_giveplace, T1.pdoc_active)
    FROM (
        SELECT 
            T.Id AS pdoc_id, 
            T.PdoctypeId AS [pdoc.pdoctype_id], 
            T.Ser AS pdoc_ser, 
            T.Num AS pdoc_num, 
            T.Givedate AS pdoc_givedate, 
            T.Giveplace AS pdoc_giveplace, 
            T.Active AS pdoc_active, 
            True AS _from0
        FROM PostgresEntities.Pdocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pdoctypes", @"
    SELECT VALUE -- Constructing pdoctypes
        [PostgresModel.Store.pdoctype](T1.pdoctype_id, T1.pdoctype_name, T1.pdoctype_synonim)
    FROM (
        SELECT 
            T.Id AS pdoctype_id, 
            T.Name AS pdoctype_name, 
            T.Synonim AS pdoctype_synonim, 
            True AS _from0
        FROM PostgresEntities.Pdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_reasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_reasons", @"
    SELECT VALUE -- Constructing sicklist_reasons
        [PostgresModel.Store.sicklist_reason](T1.[sicklist_reason.id], T1.[sicklist_reason.name], T1.[sicklist_reason.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_reason.id], 
            T.Name AS [sicklist_reason.name], 
            T.Code AS [sicklist_reason.code], 
            True AS _from0
        FROM PostgresEntities.SicklistReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_reason_dops
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_reason_dops", @"
    SELECT VALUE -- Constructing sicklist_reason_dops
        [PostgresModel.Store.sicklist_reason_dop](T1.[sicklist_reason_dop.id], T1.[sicklist_reason_dop.name], T1.[sicklist_reason_dop.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_reason_dop.id], 
            T.Name AS [sicklist_reason_dop.name], 
            T.Code AS [sicklist_reason_dop.code], 
            True AS _from0
        FROM PostgresEntities.SicklistReasonDops AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_regimen
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_regimen", @"
    SELECT VALUE -- Constructing sicklist_regimen
        [PostgresModel.Store.sicklist_regimen](T1.[sicklist_regimen.id], T1.[sicklist_regimen.name], T1.[sicklist_regimen.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_regimen.id], 
            T.Name AS [sicklist_regimen.name], 
            T.Code AS [sicklist_regimen.code], 
            True AS _from0
        FROM PostgresEntities.SicklistRegimen AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_reason_changes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_reason_changes", @"
    SELECT VALUE -- Constructing sicklist_reason_changes
        [PostgresModel.Store.sicklist_reason_change](T1.[sicklist_reason_change.id], T1.[sicklist_reason_change.name], T1.[sicklist_reason_change.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_reason_change.id], 
            T.Name AS [sicklist_reason_change.name], 
            T.Code AS [sicklist_reason_change.code], 
            True AS _from0
        FROM PostgresEntities.SicklistReasonChanges AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_other
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_other", @"
    SELECT VALUE -- Constructing sicklist_other
        [PostgresModel.Store.sicklist_other](T1.[sicklist_other.id], T1.[sicklist_other.name], T1.[sicklist_other.code])
    FROM (
        SELECT 
            T.Id AS [sicklist_other.id], 
            T.Name AS [sicklist_other.name], 
            T.Code AS [sicklist_other.code], 
            True AS _from0
        FROM PostgresEntities.SicklistOther AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_periods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_periods", @"
    SELECT VALUE -- Constructing sicklist_periods
        [PostgresModel.Store.sicklist_period](T1.[sicklist_period.id], T1.[sicklist_period.sicklist_id], T1.[sicklist_period.datebegin], T1.[sicklist_period.dateend], T1.[sicklist_period.sotr_vk_id], T1.[sicklist_period.sotr_id])
    FROM (
        SELECT 
            T.Id AS [sicklist_period.id], 
            T.SicklistId AS [sicklist_period.sicklist_id], 
            T.Datebegin AS [sicklist_period.datebegin], 
            T.Dateend AS [sicklist_period.dateend], 
            T.SotrVkId AS [sicklist_period.sotr_vk_id], 
            T.SotrId AS [sicklist_period.sotr_id], 
            True AS _from0
        FROM PostgresEntities.SicklistPeriods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4731);
            viewString.Append("\r\n    SELECT VALUE -- Constructing sicklists\r\n        [PostgresModel.Store.sickl");
            viewString.Append("ist](T1.sicklist_id, T1.[sicklist.parent_id], T1.[sicklist.open_dt], T1.[sicklis");
            viewString.Append("t.towork_dt], T1.[sicklist.reason_id], T1.[sicklist.mse_napr_dt], T1.[sicklist.m");
            viewString.Append("se_reg_dt], T1.[sicklist.mse_osvid_dt], T1.[sicklist.stac_begin_dt], T1.[sicklis");
            viewString.Append("t.stac_end_dt], T1.sicklist_num, T1.sicklist_duplicate, T1.[sicklist.reason_chan");
            viewString.Append("ge_id], T1.sicklist_job, T1.sicklist_jobmain, T1.sicklist_jobsec, T1.sicklist_jo");
            viewString.Append("bservice, T1.sicklist_date1, T1.sicklist_date2, T1.sicklist_permitnum, T1.sickli");
            viewString.Append("st_sanatogrn, T1.sicklist_careage1, T1.sicklist_caremonth1, T1.[sicklist.link_id");
            viewString.Append("1], T1.sicklist_carefio1, T1.sicklist_careage2, T1.sicklist_caremonth2, T1.[sick");
            viewString.Append("list.link_id2], T1.sicklist_carefio2, T1.sicklist_pregment, T1.[sicklist.regimen");
            viewString.Append("_id], T1.[sicklist.regimen_dt], T1.[sicklist.invalidgroup_id], T1.sicklist_jobse");
            viewString.Append("cnum, T1.[sicklist.other_id], T1.[sicklist.other_dt], T1.[sicklist.reason_dop_id");
            viewString.Append("], T1.[sicklist.mkb10_oid], T1.sicklist_ibnum, T1.sicklist_nextlnnum, T1.[sickli");
            viewString.Append("st.visit_id], T1.[sicklist.people_id], T1.[sicklist.sotr_id], T1.sicklist_lpu, T");
            viewString.Append("1.sicklist_status, T1.sicklist_mdoc, T1.sicklist_care, T1.[sicklist.parent_num],");
            viewString.Append(" T1.[sicklist.parent_ext], T1.[sicklist.jobsec_id], T1.sicklist_carepeople1, T1.");
            viewString.Append("sicklist_carepeople2, T1.[sicklist.scklist_type_id], T1.[sicklist.parent_number]");
            viewString.Append(", T1.[sicklist.presc_id], T1.[sicklist.diag_text], T1.[sicklist.sicklist_duplica");
            viewString.Append("te_type], T1.[sicklist.duplicate_sicklist], T1.[sicklist.is_other_lpu], T1.[sick");
            viewString.Append("list.other_lpu_name], T1.[sicklist.whereissued_id])\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.Id AS sicklist_id, \r\n            T.ParentId AS [sicklist.parent_");
            viewString.Append("id], \r\n            T.OpenDt AS [sicklist.open_dt], \r\n            T.ToworkDt AS [");
            viewString.Append("sicklist.towork_dt], \r\n            T.ReasonId AS [sicklist.reason_id], \r\n       ");
            viewString.Append("     T.MseNaprDt AS [sicklist.mse_napr_dt], \r\n            T.MseRegDt AS [sicklis");
            viewString.Append("t.mse_reg_dt], \r\n            T.MseOsvidDt AS [sicklist.mse_osvid_dt], \r\n        ");
            viewString.Append("    T.StacBeginDt AS [sicklist.stac_begin_dt], \r\n            T.StacEndDt AS [sic");
            viewString.Append("klist.stac_end_dt], \r\n            T.Num AS sicklist_num, \r\n            T.Duplica");
            viewString.Append("te AS sicklist_duplicate, \r\n            T.ReasonChangeId AS [sicklist.reason_cha");
            viewString.Append("nge_id], \r\n            T.Job AS sicklist_job, \r\n            T.Jobmain AS sicklis");
            viewString.Append("t_jobmain, \r\n            T.Jobsec AS sicklist_jobsec, \r\n            T.Jobservice");
            viewString.Append(" AS sicklist_jobservice, \r\n            T.Date1 AS sicklist_date1, \r\n            ");
            viewString.Append("T.Date2 AS sicklist_date2, \r\n            T.Permitnum AS sicklist_permitnum, \r\n  ");
            viewString.Append("          T.Sanatogrn AS sicklist_sanatogrn, \r\n            T.Careage1 AS sicklis");
            viewString.Append("t_careage1, \r\n            T.Caremonth1 AS sicklist_caremonth1, \r\n            T.L");
            viewString.Append("inkId1 AS [sicklist.link_id1], \r\n            T.Carefio1 AS sicklist_carefio1, \r\n");
            viewString.Append("            T.Careage2 AS sicklist_careage2, \r\n            T.Caremonth2 AS sickl");
            viewString.Append("ist_caremonth2, \r\n            T.LinkId2 AS [sicklist.link_id2], \r\n            T.");
            viewString.Append("Carefio2 AS sicklist_carefio2, \r\n            T.Pregment AS sicklist_pregment, \r\n");
            viewString.Append("            T.RegimenId AS [sicklist.regimen_id], \r\n            T.RegimenDt AS [");
            viewString.Append("sicklist.regimen_dt], \r\n            T.InvalidgroupId AS [sicklist.invalidgroup_i");
            viewString.Append("d], \r\n            T.Jobsecnum AS sicklist_jobsecnum, \r\n            T.OtherId AS ");
            viewString.Append("[sicklist.other_id], \r\n            T.OtherDt AS [sicklist.other_dt], \r\n         ");
            viewString.Append("   T.ReasonDopId AS [sicklist.reason_dop_id], \r\n            T.Mkb10Oid AS [sickl");
            viewString.Append("ist.mkb10_oid], \r\n            T.Ibnum AS sicklist_ibnum, \r\n            T.Nextlnn");
            viewString.Append("um AS sicklist_nextlnnum, \r\n            T.VisitId AS [sicklist.visit_id], \r\n    ");
            viewString.Append("        T.PeopleId AS [sicklist.people_id], \r\n            T.SotrId AS [sicklist.");
            viewString.Append("sotr_id], \r\n            T.Lpu AS sicklist_lpu, \r\n            T.Status AS sicklis");
            viewString.Append("t_status, \r\n            T.Mdoc AS sicklist_mdoc, \r\n            T.Care AS sicklis");
            viewString.Append("t_care, \r\n            T.ParentNum AS [sicklist.parent_num], \r\n            T.Pare");
            viewString.Append("ntExt AS [sicklist.parent_ext], \r\n            T.JobsecId AS [sicklist.jobsec_id]");
            viewString.Append(", \r\n            T.Carepeople1 AS sicklist_carepeople1, \r\n            T.Carepeopl");
            viewString.Append("e2 AS sicklist_carepeople2, \r\n            T.ScklistTypeId AS [sicklist.scklist_t");
            viewString.Append("ype_id], \r\n            T.ParentNumber AS [sicklist.parent_number], \r\n           ");
            viewString.Append(" T.PrescId AS [sicklist.presc_id], \r\n            T.DiagText AS [sicklist.diag_te");
            viewString.Append("xt], \r\n            T.SicklistDuplicateType AS [sicklist.sicklist_duplicate_type]");
            viewString.Append(", \r\n            T.DuplicateSicklist AS [sicklist.duplicate_sicklist], \r\n        ");
            viewString.Append("    T.IsOtherLpu AS [sicklist.is_other_lpu], \r\n            T.OtherLpuName AS [si");
            viewString.Append("cklist.other_lpu_name], \r\n            T.WhereissuedId AS [sicklist.whereissued_i");
            viewString.Append("d], \r\n            True AS _from0\r\n        FROM PostgresEntities.Sicklists AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklists", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.passport_logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.passport_logs", @"
    SELECT VALUE -- Constructing passport_logs
        [PostgresModel.Store.passport_log](T1.[passport_log.oid], T1.[passport_log.lpu], T1.[passport_log.sysuser], T1.[passport_log.otdel], T1.[passport_log.message], T1.[passport_log.change_date])
    FROM (
        SELECT 
            T.Oid AS [passport_log.oid], 
            T.Lpu AS [passport_log.lpu], 
            T.Sysuser AS [passport_log.sysuser], 
            T.Otdel AS [passport_log.otdel], 
            T.Message AS [passport_log.message], 
            T.ChangeDate AS [passport_log.change_date], 
            True AS _from0
        FROM PostgresEntities.PassportLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.peopleposts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.peopleposts", @"
    SELECT VALUE -- Constructing peopleposts
        [PostgresModel.Store.peoplepost](T1.peoplepost_oid, T1.peoplepost_profcode)
    FROM (
        SELECT 
            T.Oid AS peoplepost_oid, 
            T.Profcode AS peoplepost_profcode, 
            True AS _from0
        FROM PostgresEntities.Peopleposts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2948);
            viewString.Append("\r\n    SELECT VALUE -- Constructing schedules\r\n        [PostgresModel.Store.sched");
            viewString.Append("ule](T1.schedule_oid, T1.schedule_cabinet, T1.schedule_insite, T1.schedule_sysus");
            viewString.Append("er, T1.schedule_presctype, T1.schedule_people, T1.schedule_state, T1.schedule_is");
            viewString.Append("napronly, T1.schedule_ticketnumber, T1.schedule_lpu, T1.schedule_isbron, T1.sche");
            viewString.Append("dule_schedulecallstate, T1.schedule_schedulecallstatecomment, T1.schedule_update");
            viewString.Append("peopledate, T1.schedule_peoplescheduleplace, T1.schedule_schedulecallstatedate, ");
            viewString.Append("T1.schedule_schedulecallstatesysuser, T1.schedule_extralinereason, T1.schedule_i");
            viewString.Append("nfo, T1.schedule_yavkadt, T1.schedule_sysuseraddpeople, T1.schedule_paid, T1.sch");
            viewString.Append("edule_starton, T1.schedule_endon, T1.schedule_otdel, T1.schedule_recorddatetime,");
            viewString.Append(" T1.schedule_recordoperator, T1.schedule_blockdatetime, T1.schedule_blockoperato");
            viewString.Append("r, T1.schedule_sotr, T1.schedule_maxvisitors, T1.schedule_financingtype, T1.[sch");
            viewString.Append("edule.napr_num], T1.schedule_sync, T1.[schedule.equipment_id], T1.[schedule.pare");
            viewString.Append("nt_id])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS schedule_oid, \r\n     ");
            viewString.Append("       T.Cabinet AS schedule_cabinet, \r\n            T.Insite AS schedule_insite,");
            viewString.Append(" \r\n            T.Sysuser AS schedule_sysuser, \r\n            T.Presctype AS sched");
            viewString.Append("ule_presctype, \r\n            T.People AS schedule_people, \r\n            T.State ");
            viewString.Append("AS schedule_state, \r\n            T.Isnapronly AS schedule_isnapronly, \r\n        ");
            viewString.Append("    T.Ticketnumber AS schedule_ticketnumber, \r\n            T.Lpu AS schedule_lpu");
            viewString.Append(", \r\n            T.Isbron AS schedule_isbron, \r\n            T.Schedulecallstate A");
            viewString.Append("S schedule_schedulecallstate, \r\n            T.Schedulecallstatecomment AS schedu");
            viewString.Append("le_schedulecallstatecomment, \r\n            T.Updatepeopledate AS schedule_update");
            viewString.Append("peopledate, \r\n            T.Peoplescheduleplace AS schedule_peoplescheduleplace,");
            viewString.Append(" \r\n            T.Schedulecallstatedate AS schedule_schedulecallstatedate, \r\n    ");
            viewString.Append("        T.Schedulecallstatesysuser AS schedule_schedulecallstatesysuser, \r\n     ");
            viewString.Append("       T.Extralinereason AS schedule_extralinereason, \r\n            T.Info AS sc");
            viewString.Append("hedule_info, \r\n            T.Yavkadt AS schedule_yavkadt, \r\n            T.Sysuse");
            viewString.Append("raddpeople AS schedule_sysuseraddpeople, \r\n            T.Paid AS schedule_paid, ");
            viewString.Append("\r\n            T.Starton AS schedule_starton, \r\n            T.Endon AS schedule_e");
            viewString.Append("ndon, \r\n            T.Otdel AS schedule_otdel, \r\n            T.Recorddatetime AS");
            viewString.Append(" schedule_recorddatetime, \r\n            T.Recordoperator AS schedule_recordopera");
            viewString.Append("tor, \r\n            T.Blockdatetime AS schedule_blockdatetime, \r\n            T.Bl");
            viewString.Append("ockoperator AS schedule_blockoperator, \r\n            T.Sotr AS schedule_sotr, \r\n");
            viewString.Append("            T.Maxvisitors AS schedule_maxvisitors, \r\n            T.Financingtype");
            viewString.Append(" AS schedule_financingtype, \r\n            T.NaprNum AS [schedule.napr_num], \r\n  ");
            viewString.Append("          T.Sync AS schedule_sync, \r\n            T.EquipmentId AS [schedule.equi");
            viewString.Append("pment_id], \r\n            T.ParentId AS [schedule.parent_id], \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM PostgresEntities.Schedules AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.schedules", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sysuser_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sysuser_presctypes", @"
    SELECT VALUE -- Constructing sysuser_presctypes
        [PostgresModel.Store.sysuser_presctype](T1.[sysuser_presctype.presctypes], T1.[sysuser_presctype.sysusers], T1.[sysuser_presctype.oid])
    FROM (
        SELECT 
            T.Presctypes AS [sysuser_presctype.presctypes], 
            T.Sysusers AS [sysuser_presctype.sysusers], 
            T.Oid AS [sysuser_presctype.oid], 
            True AS _from0
        FROM PostgresEntities.SysuserPresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presctypes", "\r\n    SELECT VALUE -- Constructing presctypes\r\n        [PostgresModel.Store.presc" +
                    "type](T1.presctype_oid, T1.presctype_codespec, T1.presctype_duration, T1.prescty" +
                    "pe_autodone, T1.presctype_del, T1.[presctype.can_allot], T1.[presctype.order_], " +
                    "T1.[presctype.mr_section_id], T1.[presctype.presctypefolder_id], T1.presctype_sy" +
                    "nonim, T1.presctype_name, T1.[presctype.presctypefolderid_parent], T1.[presctype" +
                    ".foms_code], T1.presctype_description, T1.presctype_parent, T1.presctype_color, " +
                    "T1.presctype_visible, T1.presctype_mtable, T1.presctype_biomaterial, T1.[prescty" +
                    "pe.run_type], T1.[presctype.performed_by_nurse], T1.[presctype.double_sign], T1." +
                    "[presctype.perform_in_ib])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS pr" +
                    "esctype_oid, \r\n            T.Codespec AS presctype_codespec, \r\n            T.Dur" +
                    "ation AS presctype_duration, \r\n            T.Autodone AS presctype_autodone, \r\n " +
                    "           T.Del AS presctype_del, \r\n            T.CanAllot AS [presctype.can_al" +
                    "lot], \r\n            T.[Order] AS [presctype.order_], \r\n            T.MrSectionId" +
                    " AS [presctype.mr_section_id], \r\n            T.PresctypefolderId AS [presctype.p" +
                    "resctypefolder_id], \r\n            T.Synonim AS presctype_synonim, \r\n            " +
                    "T.Name AS presctype_name, \r\n            T.PresctypefolderidParent AS [presctype." +
                    "presctypefolderid_parent], \r\n            T.FomsCode AS [presctype.foms_code], \r\n" +
                    "            T.Description AS presctype_description, \r\n            T.Parent AS pr" +
                    "esctype_parent, \r\n            T.Color AS presctype_color, \r\n            T.Visibl" +
                    "e AS presctype_visible, \r\n            T.Mtable AS presctype_mtable, \r\n          " +
                    "  T.Biomaterial AS presctype_biomaterial, \r\n            T.RunType AS [presctype." +
                    "run_type], \r\n            T.PerformedByNurse AS [presctype.performed_by_nurse], \r" +
                    "\n            T.DoubleSign AS [presctype.double_sign], \r\n            T.PerformInI" +
                    "b AS [presctype.perform_in_ib], \r\n            True AS _from0\r\n        FROM Postg" +
                    "resEntities.Presctypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invalidgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invalidgroups", @"
    SELECT VALUE -- Constructing invalidgroups
        [PostgresModel.Store.invalidgroup](T1.invalidgroup_oid, T1.invalidgroup_name, T1.[invalidgroup.foms_code], T1.invalidgroup_show, T1.invalidgroup_name2, T1.invalidgroup_status)
    FROM (
        SELECT 
            T.Oid AS invalidgroup_oid, 
            T.Name AS invalidgroup_name, 
            T.FomsCode AS [invalidgroup.foms_code], 
            T.Show AS invalidgroup_show, 
            T.Name2 AS invalidgroup_name2, 
            T.Status AS invalidgroup_status, 
            True AS _from0
        FROM PostgresEntities.Invalidgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.prescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2140);
            viewString.Append("\r\n    SELECT VALUE -- Constructing prescs\r\n        [PostgresModel.Store.presc](T");
            viewString.Append("1.presc_id, T1.[presc.presctype_id], T1.[presc.visit_id], T1.[presc.create_dt], ");
            viewString.Append("T1.[presc.prunbeg_dt], T1.[presc.runbeg_dt], T1.[presc.runend_dt], T1.[presc.mdo");
            viewString.Append("c_id], T1.[presc.presc_state_id], T1.[presc.cabinet_id], T1.[presc.runemp_id], T");
            viewString.Append("1.[presc.creator_id], T1.[presc.prunend_dt], T1.[presc.presc_time_id], T1.[presc");
            viewString.Append(".parent_id], T1.[presc.sign_dt], T1.[presc.order_num], T1.[presc.order_add], T1.");
            viewString.Append("[presc.appendix_id], T1.[presc.lab_searching], T1.[presc.xray_referral_id], T1.p");
            viewString.Append("resc_tmodel, T1.presc_reason, T1.presc_attendance, T1.presc_lpu, T1.[presc.show_");
            viewString.Append("prunbeg_dt], T1.presc_additional, T1.[presc.auto_sign])\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.Id AS presc_id, \r\n            T.PresctypeId AS [presc.presct");
            viewString.Append("ype_id], \r\n            T.VisitId AS [presc.visit_id], \r\n            T.CreateDt A");
            viewString.Append("S [presc.create_dt], \r\n            T.PrunbegDt AS [presc.prunbeg_dt], \r\n        ");
            viewString.Append("    T.RunbegDt AS [presc.runbeg_dt], \r\n            T.RunendDt AS [presc.runend_d");
            viewString.Append("t], \r\n            T.MdocId AS [presc.mdoc_id], \r\n            T.PrescStateId AS [");
            viewString.Append("presc.presc_state_id], \r\n            T.CabinetId AS [presc.cabinet_id], \r\n      ");
            viewString.Append("      T.RunempId AS [presc.runemp_id], \r\n            T.CreatorId AS [presc.creat");
            viewString.Append("or_id], \r\n            T.PrunendDt AS [presc.prunend_dt], \r\n            T.PrescTi");
            viewString.Append("meId AS [presc.presc_time_id], \r\n            T.ParentId AS [presc.parent_id], \r\n");
            viewString.Append("            T.SignDt AS [presc.sign_dt], \r\n            T.OrderNum AS [presc.orde");
            viewString.Append("r_num], \r\n            T.OrderAdd AS [presc.order_add], \r\n            T.AppendixI");
            viewString.Append("d AS [presc.appendix_id], \r\n            T.LabSearching AS [presc.lab_searching],");
            viewString.Append(" \r\n            T.XrayReferralId AS [presc.xray_referral_id], \r\n            T.Tmo");
            viewString.Append("del AS presc_tmodel, \r\n            T.Reason AS presc_reason, \r\n            T.Att");
            viewString.Append("endance AS presc_attendance, \r\n            T.Lpu AS presc_lpu, \r\n            T.S");
            viewString.Append("howPrunbegDt AS [presc.show_prunbeg_dt], \r\n            T.Additional AS presc_add");
            viewString.Append("itional, \r\n            T.AutoSign AS [presc.auto_sign], \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM PostgresEntities.Prescs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.prescs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ambtickets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2505);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ambtickets\r\n        [PostgresModel.Store.ambt");
            viewString.Append("icket](T1.ambticket_id, T1.[ambticket.empo_id], T1.[ambticket.empc_id], T1.[ambt");
            viewString.Append("icket.servplace_id], T1.[ambticket.goal_id], T1.[ambticket.travm_id], T1.[ambtic");
            viewString.Append("ket.idoc_id], T1.[ambticket.result_id], T1.[ambticket.empcancel_id], T1.[ambtick");
            viewString.Append("et.cancel_date], T1.[ambticket.status_id], T1.[ambticket.travm_date], T1.[ambtic");
            viewString.Append("ket.dispstate_id], T1.[ambticket.subresult_id], T1.ambticket_otdel, T1.ambticket");
            viewString.Append("_sysdate, T1.ambticket_course, T1.[ambticket.child_number], T1.ambticket_medical");
            viewString.Append("care, T1.[ambticket.export_foms], T1.[ambticket.medicalcare_form], T1.[ambticket");
            viewString.Append(".people_relation], T1.[ambticket.field_work], T1.[ambticket.primary_care_organiz");
            viewString.Append("ation], T1.[ambticket.disp_refusal_is_all], T1.[ambticket.export_foms_comment], ");
            viewString.Append("T1.[ambticket.visit_reason], T1.[ambticket.is_selfarrival])\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.Id AS ambticket_id, \r\n            T.EmpoId AS [ambticket");
            viewString.Append(".empo_id], \r\n            T.EmpcId AS [ambticket.empc_id], \r\n            T.Servpl");
            viewString.Append("aceId AS [ambticket.servplace_id], \r\n            T.GoalId AS [ambticket.goal_id]");
            viewString.Append(", \r\n            T.TravmId AS [ambticket.travm_id], \r\n            T.IdocId AS [am");
            viewString.Append("bticket.idoc_id], \r\n            T.ResultId AS [ambticket.result_id], \r\n         ");
            viewString.Append("   T.EmpcancelId AS [ambticket.empcancel_id], \r\n            T.CancelDate AS [amb");
            viewString.Append("ticket.cancel_date], \r\n            T.StatusId AS [ambticket.status_id], \r\n      ");
            viewString.Append("      T.TravmDate AS [ambticket.travm_date], \r\n            T.DispstateId AS [amb");
            viewString.Append("ticket.dispstate_id], \r\n            T.SubresultId AS [ambticket.subresult_id], \r");
            viewString.Append("\n            T.Otdel AS ambticket_otdel, \r\n            T.Sysdate AS ambticket_sy");
            viewString.Append("sdate, \r\n            T.Course AS ambticket_course, \r\n            T.ChildNumber A");
            viewString.Append("S [ambticket.child_number], \r\n            T.Medicalcare AS ambticket_medicalcare");
            viewString.Append(", \r\n            T.ExportFoms AS [ambticket.export_foms], \r\n            T.Medical");
            viewString.Append("careForm AS [ambticket.medicalcare_form], \r\n            T.PeopleRelation AS [amb");
            viewString.Append("ticket.people_relation], \r\n            T.FieldWork AS [ambticket.field_work], \r\n");
            viewString.Append("            T.PrimaryCareOrganization AS [ambticket.primary_care_organization], ");
            viewString.Append("\r\n            T.DispRefusalIsAll AS [ambticket.disp_refusal_is_all], \r\n         ");
            viewString.Append("   T.ExportFomsComment AS [ambticket.export_foms_comment], \r\n            T.Visit");
            viewString.Append("Reason AS [ambticket.visit_reason], \r\n            T.IsSelfarrival AS [ambticket.");
            viewString.Append("is_selfarrival], \r\n            True AS _from0\r\n        FROM PostgresEntities.Amb");
            viewString.Append("tickets AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ambtickets", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.servplaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.servplaces", @"
    SELECT VALUE -- Constructing servplaces
        [PostgresModel.Store.servplace](T1.servplace_name, T1.[servplace.foms_code], T1.servplace_oid, T1.servplace_show, T1.servplace_name2, T1.servplace_status)
    FROM (
        SELECT 
            T.Name AS servplace_name, 
            T.FomsCode AS [servplace.foms_code], 
            T.Oid AS servplace_oid, 
            T.Show AS servplace_show, 
            T.Name2 AS servplace_name2, 
            T.Status AS servplace_status, 
            True AS _from0
        FROM PostgresEntities.Servplaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tick_res
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tick_res", @"
    SELECT VALUE -- Constructing tick_res
        [PostgresModel.Store.tick_res](T1.[tick_res.name], T1.[tick_res.foms_code], T1.[tick_res.oid], T1.[tick_res.medicalcondition], T1.[tick_res.show])
    FROM (
        SELECT 
            T.Name AS [tick_res.name], 
            T.FomsCode AS [tick_res.foms_code], 
            T.Oid AS [tick_res.oid], 
            T.Medicalcondition AS [tick_res.medicalcondition], 
            T.Show AS [tick_res.show], 
            True AS _from0
        FROM PostgresEntities.TickRes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tick_subres
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tick_subres", @"
    SELECT VALUE -- Constructing tick_subres
        [PostgresModel.Store.tick_subres](T1.[tick_subres.name], T1.[tick_subres.foms_code], T1.[tick_subres.oid], T1.[tick_subres.medicalcondition], T1.[tick_subres.show])
    FROM (
        SELECT 
            T.Name AS [tick_subres.name], 
            T.FomsCode AS [tick_subres.foms_code], 
            T.Oid AS [tick_subres.oid], 
            T.Medicalcondition AS [tick_subres.medicalcondition], 
            T.Show AS [tick_subres.show], 
            True AS _from0
        FROM PostgresEntities.TickSubres AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.visit_goals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.visit_goals", @"
    SELECT VALUE -- Constructing visit_goals
        [PostgresModel.Store.visit_goal](T1.[visit_goal.name], T1.[visit_goal.tfoms], T1.[visit_goal.show], T1.[visit_goal.name2], T1.[visit_goal.status], T1.[visit_goal.oid])
    FROM (
        SELECT 
            T.Name AS [visit_goal.name], 
            T.Tfoms AS [visit_goal.tfoms], 
            T.Show AS [visit_goal.show], 
            T.Name2 AS [visit_goal.name2], 
            T.Status AS [visit_goal.status], 
            T.Oid AS [visit_goal.oid], 
            True AS _from0
        FROM PostgresEntities.VisitGoals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.countries", @"
    SELECT VALUE -- Constructing countries
        [PostgresModel.Store.country](T1.country_oid, T1.country_name, T1.[country.code_bd], T1.[country.code_mp], T1.country_show)
    FROM (
        SELECT 
            T.Oid AS country_oid, 
            T.Name AS country_name, 
            T.CodeBd AS [country.code_bd], 
            T.CodeMp AS [country.code_mp], 
            T.Show AS country_show, 
            True AS _from0
        FROM PostgresEntities.Countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pinfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3478);
            viewString.Append("\r\n    SELECT VALUE -- Constructing pinfos\r\n        [PostgresModel.Store.pinfo](T");
            viewString.Append("1.pinfo_oid, T1.[pinfo.blood_gr], T1.[pinfo.bloood_rez], T1.pinfo_marriage, T1.p");
            viewString.Append("info_nacionality, T1.pinfo_education, T1.[pinfo.living_condition], T1.pinfo_live");
            viewString.Append("place, T1.pinfo_regplace, T1.pinfo_socialrank, T1.pinfo_favorkind, T1.pinfo_disp");
            viewString.Append("group, T1.pinfo_country, T1.[pinfo.parent_status_id], T1.[pinfo.parent_surname],");
            viewString.Append(" T1.[pinfo.parent_name], T1.[pinfo.parent_patron], T1.[pinfo.burn_place], T1.[pi");
            viewString.Append("nfo.flurolast_dt], T1.[pinfo.fluroplan_dt], T1.[pinfo.ambul_dt], T1.[pinfo.staci");
            viewString.Append("onar_dt], T1.[pinfo.sanator_dt], T1.[pinfo.spec_dt], T1.[pinfo.daystac_dt], T1.p");
            viewString.Append("info_alko, T1.pinfo_narko, T1.pinfo_smok, T1.[pinfo.hard_life], T1.[pinfo.recipe");
            viewString.Append("_lgot_type], T1.pinfo_grouphealth, T1.pinfo_inn, T1.[pinfo.phone_home], T1.[pinf");
            viewString.Append("o.phone_mobile], T1.[pinfo.icd10_id], T1.pinfo_sysdate, T1.[pinfo.undefined_pac]");
            viewString.Append(", T1.pinfo_uek, T1.[pinfo.people_profession], T1.[pinfo.is_agreement_pac], T1.pi");
            viewString.Append("nfo_alien, T1.pinfo_birthtime, T1.[pinfo.personal_agreement], T1.[pinfo.personal");
            viewString.Append("_agreement_date], T1.pinfo_socialgroup, T1.[pinfo.diplomatic_status])\r\n    FROM ");
            viewString.Append("(\r\n        SELECT \r\n            T.Oid AS pinfo_oid, \r\n            T.BloodGr AS [");
            viewString.Append("pinfo.blood_gr], \r\n            T.BlooodRez AS [pinfo.bloood_rez], \r\n            ");
            viewString.Append("T.Marriage AS pinfo_marriage, \r\n            T.Nacionality AS pinfo_nacionality, ");
            viewString.Append("\r\n            T.Education AS pinfo_education, \r\n            T.LivingCondition AS");
            viewString.Append(" [pinfo.living_condition], \r\n            T.Liveplace AS pinfo_liveplace, \r\n     ");
            viewString.Append("       T.Regplace AS pinfo_regplace, \r\n            T.Socialrank AS pinfo_socialr");
            viewString.Append("ank, \r\n            T.Favorkind AS pinfo_favorkind, \r\n            T.Dispgroup AS ");
            viewString.Append("pinfo_dispgroup, \r\n            T.Country AS pinfo_country, \r\n            T.Paren");
            viewString.Append("tStatusId AS [pinfo.parent_status_id], \r\n            T.ParentSurname AS [pinfo.p");
            viewString.Append("arent_surname], \r\n            T.ParentName AS [pinfo.parent_name], \r\n           ");
            viewString.Append(" T.ParentPatron AS [pinfo.parent_patron], \r\n            T.BurnPlace AS [pinfo.bu");
            viewString.Append("rn_place], \r\n            T.FlurolastDt AS [pinfo.flurolast_dt], \r\n            T.");
            viewString.Append("FluroplanDt AS [pinfo.fluroplan_dt], \r\n            T.AmbulDt AS [pinfo.ambul_dt]");
            viewString.Append(", \r\n            T.StacionarDt AS [pinfo.stacionar_dt], \r\n            T.SanatorDt");
            viewString.Append(" AS [pinfo.sanator_dt], \r\n            T.SpecDt AS [pinfo.spec_dt], \r\n           ");
            viewString.Append(" T.DaystacDt AS [pinfo.daystac_dt], \r\n            T.Alko AS pinfo_alko, \r\n      ");
            viewString.Append("      T.Narko AS pinfo_narko, \r\n            T.Smok AS pinfo_smok, \r\n            ");
            viewString.Append("T.HardLife AS [pinfo.hard_life], \r\n            T.RecipeLgotType AS [pinfo.recipe");
            viewString.Append("_lgot_type], \r\n            T.Grouphealth AS pinfo_grouphealth, \r\n            T.I");
            viewString.Append("nn AS pinfo_inn, \r\n            T.PhoneHome AS [pinfo.phone_home], \r\n            ");
            viewString.Append("T.PhoneMobile AS [pinfo.phone_mobile], \r\n            T.Icd10Id AS [pinfo.icd10_i");
            viewString.Append("d], \r\n            T.Sysdate AS pinfo_sysdate, \r\n            T.UndefinedPac AS [p");
            viewString.Append("info.undefined_pac], \r\n            T.Uek AS pinfo_uek, \r\n            T.PeoplePro");
            viewString.Append("fession AS [pinfo.people_profession], \r\n            T.IsAgreementPac AS [pinfo.i");
            viewString.Append("s_agreement_pac], \r\n            T.Alien AS pinfo_alien, \r\n            T.Birthtim");
            viewString.Append("e AS pinfo_birthtime, \r\n            T.PersonalAgreement AS [pinfo.personal_agree");
            viewString.Append("ment], \r\n            T.PersonalAgreementDate AS [pinfo.personal_agreement_date],");
            viewString.Append(" \r\n            T.Socialgroup AS pinfo_socialgroup, \r\n            T.DiplomaticSta");
            viewString.Append("tus AS [pinfo.diplomatic_status], \r\n            True AS _from0\r\n        FROM Pos");
            viewString.Append("tgresEntities.Pinfos AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pinfos", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.nacionalities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.nacionalities", @"
    SELECT VALUE -- Constructing nacionalities
        [PostgresModel.Store.nacionality](T1.nacionality_oid, T1.nacionality_parent, T1.nacionality_name, T1.nacionality_synonim, T1.nacionality_id, T1.nacionality_parentid)
    FROM (
        SELECT 
            T.Oid AS nacionality_oid, 
            T.Parent AS nacionality_parent, 
            T.Name AS nacionality_name, 
            T.Synonim AS nacionality_synonim, 
            T.Id AS nacionality_id, 
            T.Parentid AS nacionality_parentid, 
            True AS _from0
        FROM PostgresEntities.Nacionalities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.liveplaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.liveplaces", @"
    SELECT VALUE -- Constructing liveplaces
        [PostgresModel.Store.liveplace](T1.liveplace_oid, T1.liveplace_name, T1.liveplace_show, T1.liveplace_name2, T1.liveplace_status)
    FROM (
        SELECT 
            T.Oid AS liveplace_oid, 
            T.Name AS liveplace_name, 
            T.Show AS liveplace_show, 
            T.Name2 AS liveplace_name2, 
            T.Status AS liveplace_status, 
            True AS _from0
        FROM PostgresEntities.Liveplaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.socialranks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.socialranks", @"
    SELECT VALUE -- Constructing socialranks
        [PostgresModel.Store.socialrank](T1.socialrank_oid, T1.socialrank_name, T1.socialrank_show, T1.socialrank_name2, T1.socialrank_status, T1.socialrank_code)
    FROM (
        SELECT 
            T.Oid AS socialrank_oid, 
            T.Name AS socialrank_name, 
            T.Show AS socialrank_show, 
            T.Name2 AS socialrank_name2, 
            T.Status AS socialrank_status, 
            T.Code AS socialrank_code, 
            True AS _from0
        FROM PostgresEntities.Socialranks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invalidkinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invalidkinds", @"
    SELECT VALUE -- Constructing invalidkinds
        [PostgresModel.Store.invalidkind](T1.invalidkind_oid, T1.invalidkind_name, T1.[invalidkind.foms_code])
    FROM (
        SELECT 
            T.Oid AS invalidkind_oid, 
            T.Name AS invalidkind_name, 
            T.FomsCode AS [invalidkind.foms_code], 
            True AS _from0
        FROM PostgresEntities.Invalidkinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.peopledoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.peopledoctypes", @"
    SELECT VALUE -- Constructing peopledoctypes
        [PostgresModel.Store.peopledoctype](T1.peopledoctype_oid, T1.[peopledoctype.gasurf_id], T1.[peopledoctype.foms_code], T1.peopledoctype_name, T1.peopledoctype_show, T1.peopledoctype_name2, T1.peopledoctype_status, T1.[peopledoctype.mask_series], T1.[peopledoctype.mask_number], T1.peopledoctype_synonim, T1.peopledoctype_immediate)
    FROM (
        SELECT 
            T.Oid AS peopledoctype_oid, 
            T.GasurfId AS [peopledoctype.gasurf_id], 
            T.FomsCode AS [peopledoctype.foms_code], 
            T.Name AS peopledoctype_name, 
            T.Show AS peopledoctype_show, 
            T.Name2 AS peopledoctype_name2, 
            T.Status AS peopledoctype_status, 
            T.MaskSeries AS [peopledoctype.mask_series], 
            T.MaskNumber AS [peopledoctype.mask_number], 
            T.Synonim AS peopledoctype_synonim, 
            T.Immediate AS peopledoctype_immediate, 
            True AS _from0
        FROM PostgresEntities.Peopledoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.travms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.travms", @"
    SELECT VALUE -- Constructing travms
        [PostgresModel.Store.travm](T1.travm_name, T1.travm_code, T1.[travm.parent_id], T1.travm_syn, T1.travm_oid, T1.travm_show, T1.travm_name2, T1.travm_status)
    FROM (
        SELECT 
            T.Name AS travm_name, 
            T.Code AS travm_code, 
            T.ParentId AS [travm.parent_id], 
            T.Syn AS travm_syn, 
            T.Oid AS travm_oid, 
            T.Show AS travm_show, 
            T.Name2 AS travm_name2, 
            T.Status AS travm_status, 
            True AS _from0
        FROM PostgresEntities.Travms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.favorkinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.favorkinds", @"
    SELECT VALUE -- Constructing favorkinds
        [PostgresModel.Store.favorkind](T1.favorkind_oid, T1.[favorkind.recipe_lgot_type_id], T1.favorkind_name, T1.favorkind_code)
    FROM (
        SELECT 
            T.Oid AS favorkind_oid, 
            T.RecipeLgotTypeId AS [favorkind.recipe_lgot_type_id], 
            T.Name AS favorkind_name, 
            T.Code AS favorkind_code, 
            True AS _from0
        FROM PostgresEntities.Favorkinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.premilitaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.premilitaries", @"
    SELECT VALUE -- Constructing premilitaries
        [PostgresModel.Store.premilitary](T1.premilitary_oid, T1.[premilitary.people_oid], T1.[premilitary.statement_dt], T1.[premilitary.icd10_id])
    FROM (
        SELECT 
            T.Oid AS premilitary_oid, 
            T.PeopleOid AS [premilitary.people_oid], 
            T.StatementDt AS [premilitary.statement_dt], 
            T.Icd10Id AS [premilitary.icd10_id], 
            True AS _from0
        FROM PostgresEntities.Premilitaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cure_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cure_types", @"
    SELECT VALUE -- Constructing cure_types
        [PostgresModel.Store.cure_type](T1.[cure_type.oid], T1.[cure_type.name])
    FROM (
        SELECT 
            T.Oid AS [cure_type.oid], 
            T.Name AS [cure_type.name], 
            True AS _from0
        FROM PostgresEntities.CureTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.referrals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.referrals", @"
    SELECT VALUE -- Constructing referrals
        [PostgresModel.Store.referrals](T1.referrals_oid, T1.[referrals.people_oid], T1.[referrals.issue_dt], T1.[referrals.cure_type_oid])
    FROM (
        SELECT 
            T.Oid AS referrals_oid, 
            T.PeopleOid AS [referrals.people_oid], 
            T.IssueDt AS [referrals.issue_dt], 
            T.CureTypeOid AS [referrals.cure_type_oid], 
            True AS _from0
        FROM PostgresEntities.Referrals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tuberculezs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tuberculezs", @"
    SELECT VALUE -- Constructing tuberculezs
        [PostgresModel.Store.tuberculez](T1.tuberculez_oid, T1.[tuberculez.people_oid], T1.[tuberculez.begin_dt], T1.[tuberculez.end_dt])
    FROM (
        SELECT 
            T.Oid AS tuberculez_oid, 
            T.PeopleOid AS [tuberculez.people_oid], 
            T.BeginDt AS [tuberculez.begin_dt], 
            T.EndDt AS [tuberculez.end_dt], 
            True AS _from0
        FROM PostgresEntities.Tuberculezs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.nursing_babies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.nursing_babies", @"
    SELECT VALUE -- Constructing nursing_babies
        [PostgresModel.Store.nursing_baby](T1.[nursing_baby.oid], T1.[nursing_baby.people_oid], T1.[nursing_baby.from0to3], T1.[nursing_baby.from4to6], T1.[nursing_baby.from7to9], T1.[nursing_baby.group_health], T1.[nursing_baby.icd10_id], T1.[nursing_baby.homedoctor_emp_id], T1.[nursing_baby.homemed_emp_id])
    FROM (
        SELECT 
            T.Oid AS [nursing_baby.oid], 
            T.PeopleOid AS [nursing_baby.people_oid], 
            T.From0to3 AS [nursing_baby.from0to3], 
            T.From4to6 AS [nursing_baby.from4to6], 
            T.From7to9 AS [nursing_baby.from7to9], 
            T.GroupHealth AS [nursing_baby.group_health], 
            T.Icd10Id AS [nursing_baby.icd10_id], 
            T.HomedoctorEmpId AS [nursing_baby.homedoctor_emp_id], 
            T.HomemedEmpId AS [nursing_baby.homemed_emp_id], 
            True AS _from0
        FROM PostgresEntities.NursingBabies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.prenatals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.prenatals", @"
    SELECT VALUE -- Constructing prenatals
        [PostgresModel.Store.prenatal](T1.prenatal_oid, T1.[prenatal.people_oid], T1.[prenatal.last_cycle_dt], T1.prenatal_patronage, T1.prenatal_reason, T1.[prenatal.group_risk_id])
    FROM (
        SELECT 
            T.Oid AS prenatal_oid, 
            T.PeopleOid AS [prenatal.people_oid], 
            T.LastCycleDt AS [prenatal.last_cycle_dt], 
            T.Patronage AS prenatal_patronage, 
            T.Reason AS prenatal_reason, 
            T.GroupRiskId AS [prenatal.group_risk_id], 
            True AS _from0
        FROM PostgresEntities.Prenatals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.group_risks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.group_risks", @"
    SELECT VALUE -- Constructing group_risks
        [PostgresModel.Store.group_risk](T1.[group_risk.oid], T1.[group_risk.name])
    FROM (
        SELECT 
            T.Oid AS [group_risk.oid], 
            T.Name AS [group_risk.name], 
            True AS _from0
        FROM PostgresEntities.GroupRisks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hard_lives
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hard_lives", @"
    SELECT VALUE -- Constructing hard_lives
        [PostgresModel.Store.hard_life](T1.[hard_life.oid], T1.[hard_life.name])
    FROM (
        SELECT 
            T.Oid AS [hard_life.oid], 
            T.Name AS [hard_life.name], 
            True AS _from0
        FROM PostgresEntities.HardLives AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ambtick_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ambtick_status", @"
    SELECT VALUE -- Constructing ambtick_status
        [PostgresModel.Store.ambtick_status](T1.[ambtick_status.id], T1.[ambtick_status.name])
    FROM (
        SELECT 
            T.Id AS [ambtick_status.id], 
            T.Name AS [ambtick_status.name], 
            True AS _from0
        FROM PostgresEntities.AmbtickStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_types", @"
    SELECT VALUE -- Constructing pay_types
        [PostgresModel.Store.pay_type](T1.[pay_type.name], T1.[pay_type.foms_code], T1.[pay_type.state], T1.[pay_type.oid], T1.[pay_type.priority])
    FROM (
        SELECT 
            T.Name AS [pay_type.name], 
            T.FomsCode AS [pay_type.foms_code], 
            T.State AS [pay_type.state], 
            T.Oid AS [pay_type.oid], 
            T.Priority AS [pay_type.priority], 
            True AS _from0
        FROM PostgresEntities.PayTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sysuser_regions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sysuser_regions", @"
    SELECT VALUE -- Constructing sysuser_regions
        [PostgresModel.Store.sysuser_region](T1.[sysuser_region.oid], T1.[sysuser_region.sysuser], T1.[sysuser_region.region])
    FROM (
        SELECT 
            T.Oid AS [sysuser_region.oid], 
            T.Sysuser AS [sysuser_region.sysuser], 
            T.Region AS [sysuser_region.region], 
            True AS _from0
        FROM PostgresEntities.SysuserRegions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diag_kinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diag_kinds", @"
    SELECT VALUE -- Constructing diag_kinds
        [PostgresModel.Store.diag_kind](T1.[diag_kind.id], T1.[diag_kind.name], T1.[diag_kind.foms_code], T1.[diag_kind.sort_num], T1.[diag_kind.show])
    FROM (
        SELECT 
            T.Id AS [diag_kind.id], 
            T.Name AS [diag_kind.name], 
            T.FomsCode AS [diag_kind.foms_code], 
            T.SortNum AS [diag_kind.sort_num], 
            T.Show AS [diag_kind.show], 
            True AS _from0
        FROM PostgresEntities.DiagKinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diag_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diag_types", @"
    SELECT VALUE -- Constructing diag_types
        [PostgresModel.Store.diag_type](T1.[diag_type.id], T1.[diag_type.name])
    FROM (
        SELECT 
            T.Id AS [diag_type.id], 
            T.Name AS [diag_type.name], 
            True AS _from0
        FROM PostgresEntities.DiagTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diag_detects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diag_detects", @"
    SELECT VALUE -- Constructing diag_detects
        [PostgresModel.Store.diag_detect](T1.[diag_detect.name], T1.[diag_detect.oid], T1.[diag_detect.show], T1.[diag_detect.name2], T1.[diag_detect.synonym], T1.[diag_detect.foms_code], T1.[diag_detect.status])
    FROM (
        SELECT 
            T.Name AS [diag_detect.name], 
            T.Oid AS [diag_detect.oid], 
            T.Show AS [diag_detect.show], 
            T.Name2 AS [diag_detect.name2], 
            T.Synonym AS [diag_detect.synonym], 
            T.FomsCode AS [diag_detect.foms_code], 
            T.Status AS [diag_detect.status], 
            True AS _from0
        FROM PostgresEntities.DiagDetects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diags", @"
    SELECT VALUE -- Constructing diags
        [PostgresModel.Store.diag](T1.diag_id, T1.[diag.visit_id], T1.[diag.mdoc_id], T1.diag_text, T1.[diag.kind_id], T1.[diag.type_id], T1.[diag.detect_id], T1.[diag.disp_step_id], T1.[diag.disp_stage_id], T1.[diag.create_dt], T1.diag_showib, T1.[diag.dispgroup_id], T1.diag_base, T1.[diag.sotr_id], T1.[diag.icd10_id], T1.[diag.presc_id], T1.diag_sysdate, T1.[diag.doctor_action])
    FROM (
        SELECT 
            T.Id AS diag_id, 
            T.VisitId AS [diag.visit_id], 
            T.MdocId AS [diag.mdoc_id], 
            T.Text AS diag_text, 
            T.KindId AS [diag.kind_id], 
            T.TypeId AS [diag.type_id], 
            T.DetectId AS [diag.detect_id], 
            T.DispStepId AS [diag.disp_step_id], 
            T.DispStageId AS [diag.disp_stage_id], 
            T.CreateDt AS [diag.create_dt], 
            T.Showib AS diag_showib, 
            T.DispgroupId AS [diag.dispgroup_id], 
            T.Base AS diag_base, 
            T.SotrId AS [diag.sotr_id], 
            T.Icd10Id AS [diag.icd10_id], 
            T.PrescId AS [diag.presc_id], 
            T.Sysdate AS diag_sysdate, 
            T.DoctorAction AS [diag.doctor_action], 
            True AS _from0
        FROM PostgresEntities.Diags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ambtick_diags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ambtick_diags", @"
    SELECT VALUE -- Constructing ambtick_diags
        [PostgresModel.Store.ambtick_diag](T1.[ambtick_diag.oid], T1.[ambtick_diag.ticket_oid], T1.[ambtick_diag.diag_oid], T1.[ambtick_diag.mdoc_oid])
    FROM (
        SELECT 
            T.Oid AS [ambtick_diag.oid], 
            T.TicketOid AS [ambtick_diag.ticket_oid], 
            T.DiagOid AS [ambtick_diag.diag_oid], 
            T.MdocOid AS [ambtick_diag.mdoc_oid], 
            True AS _from0
        FROM PostgresEntities.AmbtickDiags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_states
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_states", @"
    SELECT VALUE -- Constructing presc_states
        [PostgresModel.Store.presc_state](T1.[presc_state.id], T1.[presc_state.name], T1.[presc_state.synonim])
    FROM (
        SELECT 
            T.Id AS [presc_state.id], 
            T.Name AS [presc_state.name], 
            T.Synonim AS [presc_state.synonim], 
            True AS _from0
        FROM PostgresEntities.PrescStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presctypefolders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presctypefolders", @"
    SELECT VALUE -- Constructing presctypefolders
        [PostgresModel.Store.presctypefolder](T1.presctypefolder_id, T1.[presctypefolder.parent_id], T1.presctypefolder_name, T1.presctypefolder_del)
    FROM (
        SELECT 
            T.Id AS presctypefolder_id, 
            T.ParentId AS [presctypefolder.parent_id], 
            T.Name AS presctypefolder_name, 
            T.Del AS presctypefolder_del, 
            True AS _from0
        FROM PostgresEntities.Presctypefolders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_input_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_input_types", @"
    SELECT VALUE -- Constructing medic_input_types
        [PostgresModel.Store.medic_input_type](T1.[medic_input_type.oid], T1.[medic_input_type.name], T1.[medic_input_type.medic_input_group])
    FROM (
        SELECT 
            T.Oid AS [medic_input_type.oid], 
            T.Name AS [medic_input_type.name], 
            T.MedicInputGroup AS [medic_input_type.medic_input_group], 
            True AS _from0
        FROM PostgresEntities.MedicInputTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_frequencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_frequencies", @"
    SELECT VALUE -- Constructing medic_frequencies
        [PostgresModel.Store.medic_frequency](T1.[medic_frequency.oid], T1.[medic_frequency.name], T1.[medic_frequency.ncount])
    FROM (
        SELECT 
            T.Oid AS [medic_frequency.oid], 
            T.Name AS [medic_frequency.name], 
            T.Ncount AS [medic_frequency.ncount], 
            True AS _from0
        FROM PostgresEntities.MedicFrequencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_percents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_percents", @"
    SELECT VALUE -- Constructing recipe_percents
        [PostgresModel.Store.recipe_percent](T1.[recipe_percent.oid], T1.[recipe_percent.name], T1.[recipe_percent.npercent], T1.[recipe_percent.is_default], T1.[recipe_percent.type_id], T1.[recipe_percent.synonym], T1.[recipe_percent.benefit_financing])
    FROM (
        SELECT 
            T.Oid AS [recipe_percent.oid], 
            T.Name AS [recipe_percent.name], 
            T.Npercent AS [recipe_percent.npercent], 
            T.IsDefault AS [recipe_percent.is_default], 
            T.TypeId AS [recipe_percent.type_id], 
            T.Synonym AS [recipe_percent.synonym], 
            T.BenefitFinancing AS [recipe_percent.benefit_financing], 
            True AS _from0
        FROM PostgresEntities.RecipePercents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_types", @"
    SELECT VALUE -- Constructing recipe_types
        [PostgresModel.Store.recipe_type](T1.[recipe_type.oid], T1.[recipe_type.name])
    FROM (
        SELECT 
            T.Oid AS [recipe_type.oid], 
            T.Name AS [recipe_type.name], 
            True AS _from0
        FROM PostgresEntities.RecipeTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.massunits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.massunits", @"
    SELECT VALUE -- Constructing massunits
        [PostgresModel.Store.massunit](T1.massunit_oid, T1.massunit_name)
    FROM (
        SELECT 
            T.Oid AS massunit_oid, 
            T.Name AS massunit_name, 
            True AS _from0
        FROM PostgresEntities.Massunits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_lgot_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_lgot_types", @"
    SELECT VALUE -- Constructing recipe_lgot_types
        [PostgresModel.Store.recipe_lgot_type](T1.[recipe_lgot_type.oid], T1.[recipe_lgot_type.name])
    FROM (
        SELECT 
            T.Oid AS [recipe_lgot_type.oid], 
            T.Name AS [recipe_lgot_type.name], 
            True AS _from0
        FROM PostgresEntities.RecipeLgotTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_durations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_durations", @"
    SELECT VALUE -- Constructing recipe_durations
        [PostgresModel.Store.recipe_duration](T1.[recipe_duration.oid], T1.[recipe_duration.name], T1.[recipe_duration.norder], T1.[recipe_duration.is_default], T1.[recipe_duration.type_id], T1.[recipe_duration.synonym], T1.[recipe_duration.benefit_financing])
    FROM (
        SELECT 
            T.Oid AS [recipe_duration.oid], 
            T.Name AS [recipe_duration.name], 
            T.Norder AS [recipe_duration.norder], 
            T.IsDefault AS [recipe_duration.is_default], 
            T.TypeId AS [recipe_duration.type_id], 
            T.Synonym AS [recipe_duration.synonym], 
            T.BenefitFinancing AS [recipe_duration.benefit_financing], 
            True AS _from0
        FROM PostgresEntities.RecipeDurations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipes", "\r\n    SELECT VALUE -- Constructing recipes\r\n        [PostgresModel.Store.recipe](" +
                    "T1.recipe_oid, T1.[recipe.mdoc_id], T1.[recipe.visit_id], T1.[recipe.source_id]," +
                    " T1.[recipe.type_id], T1.[recipe.emp_id], T1.[recipe.icd10_id], T1.recipe_snils," +
                    " T1.[recipe.pay_type_id], T1.[recipe.idoc_a_id], T1.recipe_ser, T1.recipe_num, T" +
                    "1.recipe_date, T1.[recipe.duration_id], T1.[recipe.percent_id], T1.recipe_dtd, T" +
                    "1.recipe_signa, T1.recipe_comment, T1.[recipe.status_id], T1.[recipe.lgot_type_i" +
                    "d], T1.[recipe.favorkind_id], T1.[recipe.presc_id], T1.[recipe.benefit_financing" +
                    "], T1.[recipe.recipe_prescription_type])\r\n    FROM (\r\n        SELECT \r\n         " +
                    "   T.Oid AS recipe_oid, \r\n            T.MdocId AS [recipe.mdoc_id], \r\n          " +
                    "  T.VisitId AS [recipe.visit_id], \r\n            T.SourceId AS [recipe.source_id]" +
                    ", \r\n            T.TypeId AS [recipe.type_id], \r\n            T.EmpId AS [recipe.e" +
                    "mp_id], \r\n            T.Icd10Id AS [recipe.icd10_id], \r\n            T.Snils AS r" +
                    "ecipe_snils, \r\n            T.PayTypeId AS [recipe.pay_type_id], \r\n            T." +
                    "IdocAId AS [recipe.idoc_a_id], \r\n            T.Ser AS recipe_ser, \r\n            " +
                    "T.Num AS recipe_num, \r\n            T.Date AS recipe_date, \r\n            T.Durati" +
                    "onId AS [recipe.duration_id], \r\n            T.PercentId AS [recipe.percent_id], " +
                    "\r\n            T.Dtd AS recipe_dtd, \r\n            T.Signa AS recipe_signa, \r\n    " +
                    "        T.Comment AS recipe_comment, \r\n            T.StatusId AS [recipe.status_" +
                    "id], \r\n            T.LgotTypeId AS [recipe.lgot_type_id], \r\n            T.Favork" +
                    "indId AS [recipe.favorkind_id], \r\n            T.PrescId AS [recipe.presc_id], \r\n" +
                    "            T.BenefitFinancing AS [recipe.benefit_financing], \r\n            T.Re" +
                    "cipePrescriptionType AS [recipe.recipe_prescription_type], \r\n            True AS" +
                    " _from0\r\n        FROM PostgresEntities.Recipes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_medics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_medics", "\r\n    SELECT VALUE -- Constructing recipe_medics\r\n        [PostgresModel.Store.re" +
                    "cipe_medic](T1.[recipe_medic.oid], T1.[recipe_medic.medic_name], T1.[recipe_medi" +
                    "c.input_id], T1.[recipe_medic.recipe_id], T1.[recipe_medic.count], T1.[recipe_me" +
                    "dic.unit_id], T1.[recipe_medic.duration], T1.[recipe_medic.doza], T1.[recipe_med" +
                    "ic.doza_unit_id], T1.[recipe_medic.dtd], T1.[recipe_medic.frequency_id], T1.[rec" +
                    "ipe_medic.tradenames], T1.[recipe_medic.latinnames], T1.[recipe_medic.benefit_me" +
                    "dic], T1.[recipe_medic.actmatter], T1.[recipe_medic.date_begin], T1.[recipe_medi" +
                    "c.patient_is_owner], T1.[recipe_medic.group_appointment], T1.[recipe_medic.medic" +
                    "], T1.[recipe_medic.date_end], T1.[recipe_medic.sysdate])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.Oid AS [recipe_medic.oid], \r\n            T.MedicName AS [r" +
                    "ecipe_medic.medic_name], \r\n            T.InputId AS [recipe_medic.input_id], \r\n " +
                    "           T.RecipeId AS [recipe_medic.recipe_id], \r\n            T.Count AS [rec" +
                    "ipe_medic.count], \r\n            T.UnitId AS [recipe_medic.unit_id], \r\n          " +
                    "  T.Duration AS [recipe_medic.duration], \r\n            T.Doza AS [recipe_medic.d" +
                    "oza], \r\n            T.DozaUnitId AS [recipe_medic.doza_unit_id], \r\n            T" +
                    ".Dtd AS [recipe_medic.dtd], \r\n            T.FrequencyId AS [recipe_medic.frequen" +
                    "cy_id], \r\n            T.Tradenames AS [recipe_medic.tradenames], \r\n            T" +
                    ".Latinnames AS [recipe_medic.latinnames], \r\n            T.BenefitMedic AS [recip" +
                    "e_medic.benefit_medic], \r\n            T.Actmatter AS [recipe_medic.actmatter], \r" +
                    "\n            T.DateBegin AS [recipe_medic.date_begin], \r\n            T.PatientIs" +
                    "Owner AS [recipe_medic.patient_is_owner], \r\n            T.GroupAppointment AS [r" +
                    "ecipe_medic.group_appointment], \r\n            T.Medic AS [recipe_medic.medic], \r" +
                    "\n            T.DateEnd AS [recipe_medic.date_end], \r\n            T.Sysdate AS [r" +
                    "ecipe_medic.sysdate], \r\n            True AS _from0\r\n        FROM PostgresEntitie" +
                    "s.RecipeMedics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areal_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areal_sotrs", @"
    SELECT VALUE -- Constructing areal_sotrs
        [PostgresModel.Store.areal_sotr](T1.[areal_sotr.oid], T1.[areal_sotr.sotr_id], T1.[areal_sotr.areal_id], T1.[areal_sotr.isminesotr])
    FROM (
        SELECT 
            T.Oid AS [areal_sotr.oid], 
            T.SotrId AS [areal_sotr.sotr_id], 
            T.ArealId AS [areal_sotr.areal_id], 
            T.Isminesotr AS [areal_sotr.isminesotr], 
            True AS _from0
        FROM PostgresEntities.ArealSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_presctypes", @"
    SELECT VALUE -- Constructing service_presctypes
        [PostgresModel.Store.service_presctype](T1.[service_presctype.oid], T1.[service_presctype.presctype], T1.[service_presctype.service], T1.[service_presctype.datebegin], T1.[service_presctype.dateend])
    FROM (
        SELECT 
            T.Oid AS [service_presctype.oid], 
            T.Presctype AS [service_presctype.presctype], 
            T.Service AS [service_presctype.service], 
            T.Datebegin AS [service_presctype.datebegin], 
            T.Dateend AS [service_presctype.dateend], 
            True AS _from0
        FROM PostgresEntities.ServicePresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.insurprograms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.insurprograms", @"
    SELECT VALUE -- Constructing insurprograms
        [PostgresModel.Store.insurprogram](T1.insurprogram_oid, T1.insurprogram_name, T1.[insurprogram.foms_code])
    FROM (
        SELECT 
            T.Oid AS insurprogram_oid, 
            T.Name AS insurprogram_name, 
            T.FomsCode AS [insurprogram.foms_code], 
            True AS _from0
        FROM PostgresEntities.Insurprograms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_prices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_prices", @"
    SELECT VALUE -- Constructing service_prices
        [PostgresModel.Store.service_price](T1.[service_price.oid], T1.[service_price.services], T1.[service_price.name], T1.[service_price.insurprogram], T1.[service_price.service_price_category], T1.[service_price.price], T1.[service_price.fromdate], T1.[service_price.todate], T1.[service_price.prepay])
    FROM (
        SELECT 
            T.Oid AS [service_price.oid], 
            T.Services AS [service_price.services], 
            T.Name AS [service_price.name], 
            T.Insurprogram AS [service_price.insurprogram], 
            T.ServicePriceCategory AS [service_price.service_price_category], 
            T.Price AS [service_price.price], 
            T.Fromdate AS [service_price.fromdate], 
            T.Todate AS [service_price.todate], 
            T.Prepay AS [service_price.prepay], 
            True AS _from0
        FROM PostgresEntities.ServicePrices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.linetypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.linetypes", @"
    SELECT VALUE -- Constructing linetypes
        [PostgresModel.Store.linetype](T1.linetype_oid, T1.linetype_name, T1.linetype_processduration, T1.linetype_notarriveduration, T1.linetype_name2, T1.linetype_show, T1.linetype_status, T1.linetype_shortname, T1.linetype_OrderRec, T1.[linetype.max_work_time], T1.linetype_processduration2, T1.linetype_notarriveduration2, T1.[linetype.max_work_time2])
    FROM (
        SELECT 
            T.Oid AS linetype_oid, 
            T.Name AS linetype_name, 
            T.Processduration AS linetype_processduration, 
            T.Notarriveduration AS linetype_notarriveduration, 
            T.Name2 AS linetype_name2, 
            T.Show AS linetype_show, 
            T.Status AS linetype_status, 
            T.Shortname AS linetype_shortname, 
            T.OrderRec AS linetype_OrderRec, 
            T.MaxWorkTime AS [linetype.max_work_time], 
            T.Processduration2 AS linetype_processduration2, 
            T.Notarriveduration2 AS linetype_notarriveduration2, 
            T.MaxWorkTime2 AS [linetype.max_work_time2], 
            True AS _from0
        FROM PostgresEntities.Linetypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registwindows
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registwindows", @"
    SELECT VALUE -- Constructing registwindows
        [PostgresModel.Store.registwindow](T1.registwindow_oid, T1.registwindow_name, T1.registwindow_name2, T1.registwindow_show, T1.registwindow_status, T1.registwindow_lastonlinedatetime)
    FROM (
        SELECT 
            T.Oid AS registwindow_oid, 
            T.Name AS registwindow_name, 
            T.Name2 AS registwindow_name2, 
            T.Show AS registwindow_show, 
            T.Status AS registwindow_status, 
            T.Lastonlinedatetime AS registwindow_lastonlinedatetime, 
            True AS _from0
        FROM PostgresEntities.Registwindows AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.progression_stats
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.progression_stats", @"
    SELECT VALUE -- Constructing progression_stats
        [PostgresModel.Store.progression_stat](T1.[progression_stat.oid], T1.[progression_stat.sysuser], T1.[progression_stat.registwindow], T1.[progression_stat.linetype], T1.[progression_stat.order], T1.[progression_stat.print_dt], T1.[progression_stat.plan_dt], T1.[progression_stat.fact_dt], T1.[progression_stat.status], T1.[progression_stat.order_n], T1.[progression_stat.call_id])
    FROM (
        SELECT 
            T.Oid AS [progression_stat.oid], 
            T.Sysuser AS [progression_stat.sysuser], 
            T.Registwindow AS [progression_stat.registwindow], 
            T.Linetype AS [progression_stat.linetype], 
            T.[Order] AS [progression_stat.order], 
            T.PrintDt AS [progression_stat.print_dt], 
            T.PlanDt AS [progression_stat.plan_dt], 
            T.FactDt AS [progression_stat.fact_dt], 
            T.Status AS [progression_stat.status], 
            T.OrderN AS [progression_stat.order_n], 
            T.CallId AS [progression_stat.call_id], 
            True AS _from0
        FROM PostgresEntities.ProgressionStats AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.progressions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.progressions", @"
    SELECT VALUE -- Constructing progressions
        [PostgresModel.Store.progression](T1.progression_oid, T1.progression_linetype, T1.progression_order, T1.[progression.print_dt], T1.[progression.plan_dt], T1.[progression.order_n])
    FROM (
        SELECT 
            T.Oid AS progression_oid, 
            T.Linetype AS progression_linetype, 
            T.[Order] AS progression_order, 
            T.PrintDt AS [progression.print_dt], 
            T.PlanDt AS [progression.plan_dt], 
            T.OrderN AS [progression.order_n], 
            True AS _from0
        FROM PostgresEntities.Progressions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sysuser_audits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sysuser_audits", @"
    SELECT VALUE -- Constructing sysuser_audits
        [PostgresModel.Store.sysuser_audit](T1.[sysuser_audit.oid], T1.[sysuser_audit.sysuser], T1.[sysuser_audit.in_dt], T1.[sysuser_audit.out_dt])
    FROM (
        SELECT 
            T.Oid AS [sysuser_audit.oid], 
            T.Sysuser AS [sysuser_audit.sysuser], 
            T.InDt AS [sysuser_audit.in_dt], 
            T.OutDt AS [sysuser_audit.out_dt], 
            True AS _from0
        FROM PostgresEntities.SysuserAudits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_schedules", @"
    SELECT VALUE -- Constructing presc_schedules
        [PostgresModel.Store.presc_schedule](T1.[presc_schedule.id], T1.[presc_schedule.presc_id], T1.[presc_schedule.shedule_id])
    FROM (
        SELECT 
            T.Id AS [presc_schedule.id], 
            T.PrescId AS [presc_schedule.presc_id], 
            T.SheduleId AS [presc_schedule.shedule_id], 
            True AS _from0
        FROM PostgresEntities.PrescSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_protocoltemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_protocoltemplates", @"
    SELECT VALUE -- Constructing system_protocoltemplates
        [PostgresModel.Store.system_protocoltemplate](T1.[system_protocoltemplate.oid], T1.[system_protocoltemplate.name], T1.[system_protocoltemplate.text])
    FROM (
        SELECT 
            T.Oid AS [system_protocoltemplate.oid], 
            T.Name AS [system_protocoltemplate.name], 
            T.Text AS [system_protocoltemplate.text], 
            True AS _from0
        FROM PostgresEntities.SystemProtocoltemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.user_protocoltemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.user_protocoltemplates", @"
    SELECT VALUE -- Constructing user_protocoltemplates
        [PostgresModel.Store.user_protocoltemplate](T1.[user_protocoltemplate.oid], T1.[user_protocoltemplate.sysuser], T1.[user_protocoltemplate.name], T1.[user_protocoltemplate.text], T1.[user_protocoltemplate.presctype])
    FROM (
        SELECT 
            T.Oid AS [user_protocoltemplate.oid], 
            T.Sysuser AS [user_protocoltemplate.sysuser], 
            T.Name AS [user_protocoltemplate.name], 
            T.Text AS [user_protocoltemplate.text], 
            T.Presctype AS [user_protocoltemplate.presctype], 
            True AS _from0
        FROM PostgresEntities.UserProtocoltemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.user_presctemplatedetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.user_presctemplatedetails", @"
    SELECT VALUE -- Constructing user_presctemplatedetails
        [PostgresModel.Store.user_presctemplatedetail](T1.[user_presctemplatedetail.oid], T1.[user_presctemplatedetail.presctype], T1.[user_presctemplatedetail.template], T1.[user_presctemplatedetail.order])
    FROM (
        SELECT 
            T.Oid AS [user_presctemplatedetail.oid], 
            T.Presctype AS [user_presctemplatedetail.presctype], 
            T.Template AS [user_presctemplatedetail.template], 
            T.[Order] AS [user_presctemplatedetail.order], 
            True AS _from0
        FROM PostgresEntities.UserPresctemplatedetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.user_presctemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.user_presctemplates", @"
    SELECT VALUE -- Constructing user_presctemplates
        [PostgresModel.Store.user_presctemplate](T1.[user_presctemplate.oid], T1.[user_presctemplate.sysuser], T1.[user_presctemplate.name], T1.[user_presctemplate.order])
    FROM (
        SELECT 
            T.Oid AS [user_presctemplate.oid], 
            T.Sysuser AS [user_presctemplate.sysuser], 
            T.Name AS [user_presctemplate.name], 
            T.[Order] AS [user_presctemplate.order], 
            True AS _from0
        FROM PostgresEntities.UserPresctemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.protocols
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.protocols", @"
    SELECT VALUE -- Constructing protocols
        [PostgresModel.Store.protocol](T1.[protocol.presc_id], T1.protocol_content, T1.protocol_signdata)
    FROM (
        SELECT 
            T.PrescId AS [protocol.presc_id], 
            T.Content AS protocol_content, 
            T.Signdata AS protocol_signdata, 
            True AS _from0
        FROM PostgresEntities.Protocols AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tstandards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tstandards", @"
    SELECT VALUE -- Constructing tstandards
        [PostgresModel.Store.tstandard](T1.[tstandard.fk_id], T1.[tstandard.fc_name], T1.[tstandard.fn_order], T1.[tstandard.fd_order_data], T1.[tstandard.fc_comment], T1.[tstandard.fk_standart_group])
    FROM (
        SELECT 
            T.FkId AS [tstandard.fk_id], 
            T.FcName AS [tstandard.fc_name], 
            T.FnOrder AS [tstandard.fn_order], 
            T.FdOrderData AS [tstandard.fd_order_data], 
            T.FcComment AS [tstandard.fc_comment], 
            T.FkStandartGroup AS [tstandard.fk_standart_group], 
            True AS _from0
        FROM PostgresEntities.Tstandards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodels", @"
    SELECT VALUE -- Constructing tmodels
        [PostgresModel.Store.tmodel](T1.[tmodel.fk_id], T1.[tmodel.fk_standard], T1.[tmodel.fn_hosp_day_count], T1.[tmodel.fn_doc_visit_count], T1.[tmodel.fc_disability_len], T1.[tmodel.fc_code_mes], T1.tmodel_sex)
    FROM (
        SELECT 
            T.FkId AS [tmodel.fk_id], 
            T.FkStandard AS [tmodel.fk_standard], 
            T.FnHospDayCount AS [tmodel.fn_hosp_day_count], 
            T.FnDocVisitCount AS [tmodel.fn_doc_visit_count], 
            T.FcDisabilityLen AS [tmodel.fc_disability_len], 
            T.FcCodeMes AS [tmodel.fc_code_mes], 
            T.Sex AS tmodel_sex, 
            True AS _from0
        FROM PostgresEntities.Tmodels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmedservices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmedservices", @"
    SELECT VALUE -- Constructing tmedservices
        [PostgresModel.Store.tmedservice](T1.[tmedservice.fk_id], T1.[tmedservice.fc_letter], T1.[tmedservice.fn_type], T1.[tmedservice.fn_class], T1.[tmedservice.fn_kind], T1.[tmedservice.fn_subkind], T1.[tmedservice.fn_docworkpoint], T1.[tmedservice.fn_nurseworkpoint], T1.[tmedservice.fc_name], T1.[tmedservice.fk_standart_group])
    FROM (
        SELECT 
            T.FkId AS [tmedservice.fk_id], 
            T.FcLetter AS [tmedservice.fc_letter], 
            T.FnType AS [tmedservice.fn_type], 
            T.FnClass AS [tmedservice.fn_class], 
            T.FnKind AS [tmedservice.fn_kind], 
            T.FnSubkind AS [tmedservice.fn_subkind], 
            T.FnDocworkpoint AS [tmedservice.fn_docworkpoint], 
            T.FnNurseworkpoint AS [tmedservice.fn_nurseworkpoint], 
            T.FcName AS [tmedservice.fc_name], 
            T.FkStandartGroup AS [tmedservice.fk_standart_group], 
            True AS _from0
        FROM PostgresEntities.Tmedservices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tphases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tphases", @"
    SELECT VALUE -- Constructing tphases
        [PostgresModel.Store.tphase](T1.[tphase.fk_id], T1.[tphase.fc_name])
    FROM (
        SELECT 
            T.FkId AS [tphase.fk_id], 
            T.FcName AS [tphase.fc_name], 
            True AS _from0
        FROM PostgresEntities.Tphases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tstages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tstages", @"
    SELECT VALUE -- Constructing tstages
        [PostgresModel.Store.tstage](T1.[tstage.fk_id], T1.[tstage.fc_name])
    FROM (
        SELECT 
            T.FkId AS [tstage.fk_id], 
            T.FcName AS [tstage.fc_name], 
            True AS _from0
        FROM PostgresEntities.Tstages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.taftereffects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.taftereffects", @"
    SELECT VALUE -- Constructing taftereffects
        [PostgresModel.Store.taftereffects](T1.[taftereffects.fk_id], T1.[taftereffects.fc_name])
    FROM (
        SELECT 
            T.FkId AS [taftereffects.fk_id], 
            T.FcName AS [taftereffects.fc_name], 
            True AS _from0
        FROM PostgresEntities.Taftereffects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tages", @"
    SELECT VALUE -- Constructing tages
        [PostgresModel.Store.tage](T1.[tage.fk_id], T1.[tage.fc_name], T1.[tage.age_from], T1.[tage.age_to])
    FROM (
        SELECT 
            T.FkId AS [tage.fk_id], 
            T.FcName AS [tage.fc_name], 
            T.AgeFrom AS [tage.age_from], 
            T.AgeTo AS [tage.age_to], 
            True AS _from0
        FROM PostgresEntities.Tages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tconditions", @"
    SELECT VALUE -- Constructing tconditions
        [PostgresModel.Store.tconditions](T1.[tconditions.fk_id], T1.[tconditions.fc_name])
    FROM (
        SELECT 
            T.FkId AS [tconditions.fk_id], 
            T.FcName AS [tconditions.fc_name], 
            True AS _from0
        FROM PostgresEntities.Tconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.awards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.awards", @"
    SELECT VALUE -- Constructing awards
        [PostgresModel.Store.award](T1.award_oid, T1.award_people, T1.award_number, T1.award_name, T1.[award.date_award], T1.award_sysdate)
    FROM (
        SELECT 
            T.Oid AS award_oid, 
            T.People AS award_people, 
            T.Number AS award_number, 
            T.Name AS award_name, 
            T.DateAward AS [award.date_award], 
            T.Sysdate AS award_sysdate, 
            True AS _from0
        FROM PostgresEntities.Awards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_steps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_steps", @"
    SELECT VALUE -- Constructing disp_steps
        [PostgresModel.Store.disp_step](T1.[disp_step.id], T1.[disp_step.name])
    FROM (
        SELECT 
            T.Id AS [disp_step.id], 
            T.Name AS [disp_step.name], 
            True AS _from0
        FROM PostgresEntities.DispSteps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_stages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_stages", @"
    SELECT VALUE -- Constructing disp_stages
        [PostgresModel.Store.disp_stage](T1.[disp_stage.id], T1.[disp_stage.name], T1.[disp_stage.foms_code])
    FROM (
        SELECT 
            T.Id AS [disp_stage.id], 
            T.Name AS [disp_stage.name], 
            T.FomsCode AS [disp_stage.foms_code], 
            True AS _from0
        FROM PostgresEntities.DispStages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dispgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dispgroups", @"
    SELECT VALUE -- Constructing dispgroups
        [PostgresModel.Store.dispgroup](T1.dispgroup_id, T1.dispgroup_name)
    FROM (
        SELECT 
            T.Id AS dispgroup_id, 
            T.Name AS dispgroup_name, 
            True AS _from0
        FROM PostgresEntities.Dispgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.educationtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.educationtypes", @"
    SELECT VALUE -- Constructing educationtypes
        [PostgresModel.Store.educationtype](T1.educationtype_oid, T1.educationtype_id, T1.educationtype_name)
    FROM (
        SELECT 
            T.Oid AS educationtype_oid, 
            T.Id AS educationtype_id, 
            T.Name AS educationtype_name, 
            True AS _from0
        FROM PostgresEntities.Educationtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelservs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelservs", @"
    SELECT VALUE -- Constructing tmodelservs
        [PostgresModel.Store.tmodelserv](T1.tmodelserv_oid, T1.[tmodelserv.fk_modelperiod], T1.[tmodelserv.fk_serv], T1.[tmodelserv.fn_rate], T1.[tmodelserv.fn_factor], T1.tmodelserv_indication)
    FROM (
        SELECT 
            T.Oid AS tmodelserv_oid, 
            T.FkModelperiod AS [tmodelserv.fk_modelperiod], 
            T.FkServ AS [tmodelserv.fk_serv], 
            T.FnRate AS [tmodelserv.fn_rate], 
            T.FnFactor AS [tmodelserv.fn_factor], 
            T.Indication AS tmodelserv_indication, 
            True AS _from0
        FROM PostgresEntities.Tmodelservs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelperiods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelperiods", @"
    SELECT VALUE -- Constructing tmodelperiods
        [PostgresModel.Store.tmodelperiod](T1.[tmodelperiod.fk_id], T1.[tmodelperiod.fk_model], T1.[tmodelperiod.fk_period], T1.[tmodelperiod.fn_duration], T1.[tmodelperiod.fc_comment])
    FROM (
        SELECT 
            T.FkId AS [tmodelperiod.fk_id], 
            T.FkModel AS [tmodelperiod.fk_model], 
            T.FkPeriod AS [tmodelperiod.fk_period], 
            T.FnDuration AS [tmodelperiod.fn_duration], 
            T.FcComment AS [tmodelperiod.fc_comment], 
            True AS _from0
        FROM PostgresEntities.Tmodelperiods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.positions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.positions", @"
    SELECT VALUE -- Constructing positions
        [PostgresModel.Store.position](T1.position_oid, T1.position_id, T1.position_name)
    FROM (
        SELECT 
            T.Oid AS position_oid, 
            T.Id AS position_id, 
            T.Name AS position_name, 
            True AS _from0
        FROM PostgresEntities.Positions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recordtypeins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recordtypeins", @"
    SELECT VALUE -- Constructing recordtypeins
        [PostgresModel.Store.recordtypein](T1.recordtypein_oid, T1.recordtypein_id, T1.recordtypein_name)
    FROM (
        SELECT 
            T.Oid AS recordtypein_oid, 
            T.Id AS recordtypein_id, 
            T.Name AS recordtypein_name, 
            True AS _from0
        FROM PostgresEntities.Recordtypeins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cardemployees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cardemployees", "\r\n    SELECT VALUE -- Constructing cardemployees\r\n        [PostgresModel.Store.ca" +
                    "rdemployee](T1.[cardemployee.h_date], T1.[cardemployee.h_date_end], T1.cardemplo" +
                    "yee_oid, T1.cardemployee_people, T1.cardemployee_id, T1.cardemployee_sysuser, T1" +
                    ".cardemployee_otdel, T1.cardemployee_post, T1.[cardemployee.date_post_begin], T1" +
                    ".[cardemployee.date_post_end], T1.cardemployee_tabelnumber, T1.cardemployee_care" +
                    ", T1.cardemployee_conditions, T1.cardemployee_position, T1.cardemployee_typein, " +
                    "T1.cardemployee_orderin, T1.cardemployee_typeout, T1.cardemployee_orderout, T1.c" +
                    "ardemployee_regime, T1.cardemployee_wage, T1.cardemployee_population, T1.cardemp" +
                    "loyee_positiontype)\r\n    FROM (\r\n        SELECT \r\n            T.HDate AS [cardem" +
                    "ployee.h_date], \r\n            T.HDateEnd AS [cardemployee.h_date_end], \r\n       " +
                    "     T.Oid AS cardemployee_oid, \r\n            T.People AS cardemployee_people, \r" +
                    "\n            T.Id AS cardemployee_id, \r\n            T.Sysuser AS cardemployee_sy" +
                    "suser, \r\n            T.Otdel AS cardemployee_otdel, \r\n            T.Post AS card" +
                    "employee_post, \r\n            T.DatePostBegin AS [cardemployee.date_post_begin], " +
                    "\r\n            T.DatePostEnd AS [cardemployee.date_post_end], \r\n            T.Tab" +
                    "elnumber AS cardemployee_tabelnumber, \r\n            T.Care AS cardemployee_care," +
                    " \r\n            T.Conditions AS cardemployee_conditions, \r\n            T.Position" +
                    " AS cardemployee_position, \r\n            T.Typein AS cardemployee_typein, \r\n    " +
                    "        T.Orderin AS cardemployee_orderin, \r\n            T.Typeout AS cardemploy" +
                    "ee_typeout, \r\n            T.Orderout AS cardemployee_orderout, \r\n            T.R" +
                    "egime AS cardemployee_regime, \r\n            T.Wage AS cardemployee_wage, \r\n     " +
                    "       T.Population AS cardemployee_population, \r\n            T.Positiontype AS " +
                    "cardemployee_positiontype, \r\n            True AS _from0\r\n        FROM PostgresEn" +
                    "tities.Cardemployees AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recordtypeouts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recordtypeouts", @"
    SELECT VALUE -- Constructing recordtypeouts
        [PostgresModel.Store.recordtypeout](T1.recordtypeout_oid, T1.recordtypeout_id, T1.recordtypeout_name)
    FROM (
        SELECT 
            T.Oid AS recordtypeout_oid, 
            T.Id AS recordtypeout_id, 
            T.Name AS recordtypeout_name, 
            True AS _from0
        FROM PostgresEntities.Recordtypeouts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.positiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.positiontypes", @"
    SELECT VALUE -- Constructing positiontypes
        [PostgresModel.Store.positiontype](T1.positiontype_oid, T1.positiontype_id, T1.positiontype_name)
    FROM (
        SELECT 
            T.Oid AS positiontype_oid, 
            T.Id AS positiontype_id, 
            T.Name AS positiontype_name, 
            True AS _from0
        FROM PostgresEntities.Positiontypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medicalcares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medicalcares", @"
    SELECT VALUE -- Constructing medicalcares
        [PostgresModel.Store.medicalcare](T1.medicalcare_oid, T1.medicalcare_name, T1.medicalcare_id, T1.[medicalcare.foms_code], T1.medicalcare_show, T1.medicalcare_name2, T1.medicalcare_status, T1.medicalcare_parent)
    FROM (
        SELECT 
            T.Oid AS medicalcare_oid, 
            T.Name AS medicalcare_name, 
            T.Id AS medicalcare_id, 
            T.FomsCode AS [medicalcare.foms_code], 
            T.Show AS medicalcare_show, 
            T.Name2 AS medicalcare_name2, 
            T.Status AS medicalcare_status, 
            T.Parent AS medicalcare_parent, 
            True AS _from0
        FROM PostgresEntities.Medicalcares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.regimes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.regimes", @"
    SELECT VALUE -- Constructing regimes
        [PostgresModel.Store.regime](T1.regime_oid, T1.regime_id, T1.regime_name)
    FROM (
        SELECT 
            T.Oid AS regime_oid, 
            T.Id AS regime_id, 
            T.Name AS regime_name, 
            True AS _from0
        FROM PostgresEntities.Regimes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medicalconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medicalconditions", @"
    SELECT VALUE -- Constructing medicalconditions
        [PostgresModel.Store.medicalcondition](T1.medicalcondition_oid, T1.medicalcondition_name, T1.[medicalcondition.foms_code])
    FROM (
        SELECT 
            T.Oid AS medicalcondition_oid, 
            T.Name AS medicalcondition_name, 
            T.FomsCode AS [medicalcondition.foms_code], 
            True AS _from0
        FROM PostgresEntities.Medicalconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.academicdegrees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.academicdegrees", @"
    SELECT VALUE -- Constructing academicdegrees
        [PostgresModel.Store.academicdegree](T1.academicdegree_oid, T1.academicdegree_id, T1.academicdegree_name)
    FROM (
        SELECT 
            T.Oid AS academicdegree_oid, 
            T.Id AS academicdegree_id, 
            T.Name AS academicdegree_name, 
            True AS _from0
        FROM PostgresEntities.Academicdegrees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.educationinstitutions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.educationinstitutions", @"
    SELECT VALUE -- Constructing educationinstitutions
        [PostgresModel.Store.educationinstitution](T1.educationinstitution_oid, T1.educationinstitution_id, T1.educationinstitution_name, T1.educationinstitution_parent)
    FROM (
        SELECT 
            T.Oid AS educationinstitution_oid, 
            T.Id AS educationinstitution_id, 
            T.Name AS educationinstitution_name, 
            T.Parent AS educationinstitution_parent, 
            True AS _from0
        FROM PostgresEntities.Educationinstitutions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diplomaeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diplomaeducations", @"
    SELECT VALUE -- Constructing diplomaeducations
        [PostgresModel.Store.diplomaeducation](T1.diplomaeducation_oid, T1.diplomaeducation_people, T1.diplomaeducation_educationinstitution, T1.diplomaeducation_educationtype, T1.diplomaeducation_specialities, T1.[diplomaeducation.date_graduation], T1.diplomaeducation_diplomaserie, T1.diplomaeducation_diplomanumber, T1.diplomaeducation_sysdate)
    FROM (
        SELECT 
            T.Oid AS diplomaeducation_oid, 
            T.People AS diplomaeducation_people, 
            T.Educationinstitution AS diplomaeducation_educationinstitution, 
            T.Educationtype AS diplomaeducation_educationtype, 
            T.Specialities AS diplomaeducation_specialities, 
            T.DateGraduation AS [diplomaeducation.date_graduation], 
            T.Diplomaserie AS diplomaeducation_diplomaserie, 
            T.Diplomanumber AS diplomaeducation_diplomanumber, 
            T.Sysdate AS diplomaeducation_sysdate, 
            True AS _from0
        FROM PostgresEntities.Diplomaeducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.qualifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.qualifications", @"
    SELECT VALUE -- Constructing qualifications
        [PostgresModel.Store.qualification](T1.qualification_oid, T1.qualification_people, T1.qualification_qualificationcategory, T1.qualification_sertificatespeciality, T1.[qualification.date_qualification], T1.qualification_sysdate)
    FROM (
        SELECT 
            T.Oid AS qualification_oid, 
            T.People AS qualification_people, 
            T.Qualificationcategory AS qualification_qualificationcategory, 
            T.Sertificatespeciality AS qualification_sertificatespeciality, 
            T.DateQualification AS [qualification.date_qualification], 
            T.Sysdate AS qualification_sysdate, 
            True AS _from0
        FROM PostgresEntities.Qualifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.qualificationcategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.qualificationcategories", @"
    SELECT VALUE -- Constructing qualificationcategories
        [PostgresModel.Store.qualificationcategory](T1.qualificationcategory_oid, T1.qualificationcategory_id, T1.qualificationcategory_name)
    FROM (
        SELECT 
            T.Oid AS qualificationcategory_oid, 
            T.Id AS qualificationcategory_id, 
            T.Name AS qualificationcategory_name, 
            True AS _from0
        FROM PostgresEntities.Qualificationcategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sertificatespecialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sertificatespecialities", @"
    SELECT VALUE -- Constructing sertificatespecialities
        [PostgresModel.Store.sertificatespeciality](T1.sertificatespeciality_oid, T1.sertificatespeciality_id, T1.sertificatespeciality_name, T1.sertificatespeciality_parent)
    FROM (
        SELECT 
            T.Oid AS sertificatespeciality_oid, 
            T.Id AS sertificatespeciality_id, 
            T.Name AS sertificatespeciality_name, 
            T.Parent AS sertificatespeciality_parent, 
            True AS _from0
        FROM PostgresEntities.Sertificatespecialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.skippaymentreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.skippaymentreasons", @"
    SELECT VALUE -- Constructing skippaymentreasons
        [PostgresModel.Store.skippaymentreason](T1.skippaymentreason_oid, T1.skippaymentreason_name, T1.skippaymentreason_id)
    FROM (
        SELECT 
            T.Oid AS skippaymentreason_oid, 
            T.Name AS skippaymentreason_name, 
            T.Id AS skippaymentreason_id, 
            True AS _from0
        FROM PostgresEntities.Skippaymentreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.skippayments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.skippayments", @"
    SELECT VALUE -- Constructing skippayments
        [PostgresModel.Store.skippayment](T1.skippayment_oid, T1.skippayment_skippaymentreason, T1.[skippayment.begin_dt], T1.[skippayment.end_dt], T1.skippayment_people)
    FROM (
        SELECT 
            T.Oid AS skippayment_oid, 
            T.Skippaymentreason AS skippayment_skippaymentreason, 
            T.BeginDt AS [skippayment.begin_dt], 
            T.EndDt AS [skippayment.end_dt], 
            T.People AS skippayment_people, 
            True AS _from0
        FROM PostgresEntities.Skippayments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sertificateeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sertificateeducations", @"
    SELECT VALUE -- Constructing sertificateeducations
        [PostgresModel.Store.sertificateeducation](T1.sertificateeducation_oid, T1.sertificateeducation_people, T1.sertificateeducation_educationinstitution, T1.sertificateeducation_sertificatespeciality, T1.[sertificateeducation.date_sertificate], T1.sertificateeducation_sertificateserie, T1.sertificateeducation_sertificatenumber, T1.sertificateeducation_sysdate)
    FROM (
        SELECT 
            T.Oid AS sertificateeducation_oid, 
            T.People AS sertificateeducation_people, 
            T.Educationinstitution AS sertificateeducation_educationinstitution, 
            T.Sertificatespeciality AS sertificateeducation_sertificatespeciality, 
            T.DateSertificate AS [sertificateeducation.date_sertificate], 
            T.Sertificateserie AS sertificateeducation_sertificateserie, 
            T.Sertificatenumber AS sertificateeducation_sertificatenumber, 
            T.Sysdate AS sertificateeducation_sysdate, 
            True AS _from0
        FROM PostgresEntities.Sertificateeducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.specialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.specialities", @"
    SELECT VALUE -- Constructing specialities
        [PostgresModel.Store.specialities](T1.specialities_oid, T1.specialities_id, T1.specialities_name, T1.specialities_parent, T1.specialities_okso)
    FROM (
        SELECT 
            T.Oid AS specialities_oid, 
            T.Id AS specialities_id, 
            T.Name AS specialities_name, 
            T.Parent AS specialities_parent, 
            T.Okso AS specialities_okso, 
            True AS _from0
        FROM PostgresEntities.Specialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.skillimprovements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.skillimprovements", @"
    SELECT VALUE -- Constructing skillimprovements
        [PostgresModel.Store.skillimprovement](T1.skillimprovement_oid, T1.skillimprovement_people, T1.skillimprovement_educationinstitution, T1.skillimprovement_sertificatespeciality, T1.skillimprovement_cycle, T1.skillimprovement_hours, T1.[skillimprovement.date_skill], T1.skillimprovement_diplomaserie, T1.skillimprovement_diplomanumber, T1.skillimprovement_issuedate, T1.skillimprovement_sysdate)
    FROM (
        SELECT 
            T.Oid AS skillimprovement_oid, 
            T.People AS skillimprovement_people, 
            T.Educationinstitution AS skillimprovement_educationinstitution, 
            T.Sertificatespeciality AS skillimprovement_sertificatespeciality, 
            T.Cycle AS skillimprovement_cycle, 
            T.Hours AS skillimprovement_hours, 
            T.DateSkill AS [skillimprovement.date_skill], 
            T.Diplomaserie AS skillimprovement_diplomaserie, 
            T.Diplomanumber AS skillimprovement_diplomanumber, 
            T.Issuedate AS skillimprovement_issuedate, 
            T.Sysdate AS skillimprovement_sysdate, 
            True AS _from0
        FROM PostgresEntities.Skillimprovements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.retrainments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView244()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.retrainments", @"
    SELECT VALUE -- Constructing retrainments
        [PostgresModel.Store.retrainment](T1.retrainment_oid, T1.retrainment_people, T1.retrainment_educationinstitution, T1.retrainment_sertificatespeciality, T1.retrainment_diplomaserie, T1.retrainment_diplomanumber, T1.retrainment_hours, T1.[retrainment.date_retrainment], T1.retrainment_sysdate)
    FROM (
        SELECT 
            T.Oid AS retrainment_oid, 
            T.People AS retrainment_people, 
            T.Educationinstitution AS retrainment_educationinstitution, 
            T.Sertificatespeciality AS retrainment_sertificatespeciality, 
            T.Diplomaserie AS retrainment_diplomaserie, 
            T.Diplomanumber AS retrainment_diplomanumber, 
            T.Hours AS retrainment_hours, 
            T.DateRetrainment AS [retrainment.date_retrainment], 
            T.Sysdate AS retrainment_sysdate, 
            True AS _from0
        FROM PostgresEntities.Retrainments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.postgraduateeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView245()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.postgraduateeducations", @"
    SELECT VALUE -- Constructing postgraduateeducations
        [PostgresModel.Store.postgraduateeducation](T1.postgraduateeducation_oid, T1.postgraduateeducation_people, T1.postgraduateeducation_educationinstitution, T1.postgraduateeducation_posteducation, T1.postgraduateeducation_academicdegree, T1.postgraduateeducation_sertificatespeciality, T1.postgraduateeducation_datebegin, T1.postgraduateeducation_dateend, T1.postgraduateeducation_datedocum, T1.postgraduateeducation_diplomaserie, T1.postgraduateeducation_diplomanumber, T1.postgraduateeducation_sysdate)
    FROM (
        SELECT 
            T.Oid AS postgraduateeducation_oid, 
            T.People AS postgraduateeducation_people, 
            T.Educationinstitution AS postgraduateeducation_educationinstitution, 
            T.Posteducation AS postgraduateeducation_posteducation, 
            T.Academicdegree AS postgraduateeducation_academicdegree, 
            T.Sertificatespeciality AS postgraduateeducation_sertificatespeciality, 
            T.Datebegin AS postgraduateeducation_datebegin, 
            T.Dateend AS postgraduateeducation_dateend, 
            T.Datedocum AS postgraduateeducation_datedocum, 
            T.Diplomaserie AS postgraduateeducation_diplomaserie, 
            T.Diplomanumber AS postgraduateeducation_diplomanumber, 
            T.Sysdate AS postgraduateeducation_sysdate, 
            True AS _from0
        FROM PostgresEntities.Postgraduateeducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.posteducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView246()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.posteducations", @"
    SELECT VALUE -- Constructing posteducations
        [PostgresModel.Store.posteducation](T1.posteducation_oid, T1.posteducation_id, T1.posteducation_name)
    FROM (
        SELECT 
            T.Oid AS posteducation_oid, 
            T.Id AS posteducation_id, 
            T.Name AS posteducation_name, 
            True AS _from0
        FROM PostgresEntities.Posteducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registwindow_linetypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView247()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registwindow_linetypes", @"
    SELECT VALUE -- Constructing registwindow_linetypes
        [PostgresModel.Store.registwindow_linetype](T1.[registwindow_linetype.oid], T1.[registwindow_linetype.registrywindow], T1.[registwindow_linetype.linetype])
    FROM (
        SELECT 
            T.Oid AS [registwindow_linetype.oid], 
            T.Registrywindow AS [registwindow_linetype.registrywindow], 
            T.Linetype AS [registwindow_linetype.linetype], 
            True AS _from0
        FROM PostgresEntities.RegistwindowLinetypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stafflist_headers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView248()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stafflist_headers", @"
    SELECT VALUE -- Constructing stafflist_headers
        [PostgresModel.Store.stafflist_header](T1.[stafflist_header.oid], T1.[stafflist_header.order_number], T1.[stafflist_header.datebegin], T1.[stafflist_header.dateend], T1.[stafflist_header.order_date])
    FROM (
        SELECT 
            T.Oid AS [stafflist_header.oid], 
            T.OrderNumber AS [stafflist_header.order_number], 
            T.Datebegin AS [stafflist_header.datebegin], 
            T.Dateend AS [stafflist_header.dateend], 
            T.OrderDate AS [stafflist_header.order_date], 
            True AS _from0
        FROM PostgresEntities.StafflistHeaders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.zayavkas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView249()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.zayavkas", @"
    SELECT VALUE -- Constructing zayavkas
        [PostgresModel.Store.zayavka](T1.zayavka_oid, T1.zayavka_dtcreate, T1.zayavka_dtchange, T1.zayavka_presctype, T1.zayavka_dt, T1.zayavka_status, T1.zayavka_fam, T1.zayavka_im, T1.zayavka_otch, T1.zayavka_borndt, T1.zayavka_people, T1.zayavka_schedule, T1.zayavka_email, T1.zayavka_phone, T1.zayavka_isplat, T1.zayavka_kartanum, T1.[zayavka.people_bid_status])
    FROM (
        SELECT 
            T.Oid AS zayavka_oid, 
            T.Dtcreate AS zayavka_dtcreate, 
            T.Dtchange AS zayavka_dtchange, 
            T.Presctype AS zayavka_presctype, 
            T.Dt AS zayavka_dt, 
            T.Status AS zayavka_status, 
            T.Fam AS zayavka_fam, 
            T.Im AS zayavka_im, 
            T.Otch AS zayavka_otch, 
            T.Borndt AS zayavka_borndt, 
            T.People AS zayavka_people, 
            T.Schedule AS zayavka_schedule, 
            T.Email AS zayavka_email, 
            T.Phone AS zayavka_phone, 
            T.Isplat AS zayavka_isplat, 
            T.Kartanum AS zayavka_kartanum, 
            T.PeopleBidStatus AS [zayavka.people_bid_status], 
            True AS _from0
        FROM PostgresEntities.Zayavkas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.zayavka_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.zayavka_status", @"
    SELECT VALUE -- Constructing zayavka_status
        [PostgresModel.Store.zayavka_status](T1.[zayavka_status.oid], T1.[zayavka_status.name])
    FROM (
        SELECT 
            T.Oid AS [zayavka_status.oid], 
            T.Name AS [zayavka_status.name], 
            True AS _from0
        FROM PostgresEntities.ZayavkaStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.smscenters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.smscenters", @"
    SELECT VALUE -- Constructing smscenters
        [PostgresModel.Store.smscenter](T1.smscenter_oid, T1.smscenter_numbertel, T1.smscenter_smstext, T1.smscenter_smsst, T1.smscenter_dateincoming, T1.smscenter_datesend, T1.smscenter_people, T1.[smscenter.id_sms_center], T1.smscenter_fromphone, T1.smscenter_schedule)
    FROM (
        SELECT 
            T.Oid AS smscenter_oid, 
            T.Numbertel AS smscenter_numbertel, 
            T.Smstext AS smscenter_smstext, 
            T.Smsst AS smscenter_smsst, 
            T.Dateincoming AS smscenter_dateincoming, 
            T.Datesend AS smscenter_datesend, 
            T.People AS smscenter_people, 
            T.IdSmsCenter AS [smscenter.id_sms_center], 
            T.Fromphone AS smscenter_fromphone, 
            T.Schedule AS smscenter_schedule, 
            True AS _from0
        FROM PostgresEntities.Smscenters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.citizenships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView252()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.citizenships", @"
    SELECT VALUE -- Constructing citizenships
        [PostgresModel.Store.citizenship](T1.citizenship_oid, T1.citizenship_id, T1.citizenship_name, T1.citizenship_show, T1.citizenship_name2, T1.citizenship_status, T1.citizenship_code)
    FROM (
        SELECT 
            T.Oid AS citizenship_oid, 
            T.Id AS citizenship_id, 
            T.Name AS citizenship_name, 
            T.Show AS citizenship_show, 
            T.Name2 AS citizenship_name2, 
            T.Status AS citizenship_status, 
            T.Code AS citizenship_code, 
            True AS _from0
        FROM PostgresEntities.Citizenships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.militaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.militaries", @"
    SELECT VALUE -- Constructing militaries
        [PostgresModel.Store.military](T1.military_oid, T1.military_id, T1.military_name)
    FROM (
        SELECT 
            T.Oid AS military_oid, 
            T.Id AS military_id, 
            T.Name AS military_name, 
            True AS _from0
        FROM PostgresEntities.Militaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.marriages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.marriages", @"
    SELECT VALUE -- Constructing marriages
        [PostgresModel.Store.marriage](T1.marriage_oid, T1.marriage_id, T1.marriage_name)
    FROM (
        SELECT 
            T.Oid AS marriage_oid, 
            T.Id AS marriage_id, 
            T.Name AS marriage_name, 
            True AS _from0
        FROM PostgresEntities.Marriages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.schedule_logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.schedule_logs", @"
    SELECT VALUE -- Constructing schedule_logs
        [PostgresModel.Store.schedule_log](T1.[schedule_log.oid], T1.[schedule_log.operator], T1.[schedule_log.patient], T1.[schedule_log.operation_date_time], T1.[schedule_log.schedule], T1.[schedule_log.action], T1.[schedule_log.reason], T1.[schedule_log.schedulefrom])
    FROM (
        SELECT 
            T.Oid AS [schedule_log.oid], 
            T.Operator AS [schedule_log.operator], 
            T.Patient AS [schedule_log.patient], 
            T.OperationDateTime AS [schedule_log.operation_date_time], 
            T.Schedule AS [schedule_log.schedule], 
            T.Action AS [schedule_log.action], 
            T.Reason AS [schedule_log.reason], 
            T.Schedulefrom AS [schedule_log.schedulefrom], 
            True AS _from0
        FROM PostgresEntities.ScheduleLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpusettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpusettings", @"
    SELECT VALUE -- Constructing lpusettings
        [PostgresModel.Store.lpusettings](T1.lpusettings_oid, T1.lpusettings_lpu, T1.lpusettings_settings, T1.lpusettings_custvaluepar, T1.lpusettings_optimisticlockfield, T1.lpusettings_gcrecord)
    FROM (
        SELECT 
            T.Oid AS lpusettings_oid, 
            T.Lpu AS lpusettings_lpu, 
            T.Settings AS lpusettings_settings, 
            T.Custvaluepar AS lpusettings_custvaluepar, 
            T.Optimisticlockfield AS lpusettings_optimisticlockfield, 
            T.Gcrecord AS lpusettings_gcrecord, 
            True AS _from0
        FROM PostgresEntities.Lpusettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.systemsettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView257()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.systemsettings", @"
    SELECT VALUE -- Constructing systemsettings
        [PostgresModel.Store.systemsettings](T1.systemsettings_oid, T1.systemsettings_param, T1.systemsettings_valuepar, T1.systemsettings_description, T1.systemsettings_forall)
    FROM (
        SELECT 
            T.Oid AS systemsettings_oid, 
            T.Param AS systemsettings_param, 
            T.Valuepar AS systemsettings_valuepar, 
            T.Description AS systemsettings_description, 
            T.Forall AS systemsettings_forall, 
            True AS _from0
        FROM PostgresEntities.Systemsettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tstandart_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tstandart_groups", @"
    SELECT VALUE -- Constructing tstandart_groups
        [PostgresModel.Store.tstandart_group](T1.[tstandart_group.fk_id], T1.[tstandart_group.fc_name], T1.[tstandart_group.fl_type])
    FROM (
        SELECT 
            T.FkId AS [tstandart_group.fk_id], 
            T.FcName AS [tstandart_group.fc_name], 
            T.FlType AS [tstandart_group.fl_type], 
            True AS _from0
        FROM PostgresEntities.TstandartGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tperiods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tperiods", @"
    SELECT VALUE -- Constructing tperiods
        [PostgresModel.Store.tperiod](T1.[tperiod.fk_id], T1.[tperiod.fc_name])
    FROM (
        SELECT 
            T.FkId AS [tperiod.fk_id], 
            T.FcName AS [tperiod.fc_name], 
            True AS _from0
        FROM PostgresEntities.Tperiods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.screenings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView260()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.screenings", @"
    SELECT VALUE -- Constructing screenings
        [PostgresModel.Store.screening](T1.screening_oid, T1.screening_title, T1.screening_sex, T1.screening_mandatory)
    FROM (
        SELECT 
            T.Oid AS screening_oid, 
            T.Title AS screening_title, 
            T.Sex AS screening_sex, 
            T.Mandatory AS screening_mandatory, 
            True AS _from0
        FROM PostgresEntities.Screenings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.screening_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView261()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.screening_presctypes", @"
    SELECT VALUE -- Constructing screening_presctypes
        [PostgresModel.Store.screening_presctype](T1.[screening_presctype.oid], T1.[screening_presctype.screening], T1.[screening_presctype.presctype], T1.[screening_presctype.begin_age], T1.[screening_presctype.end_age], T1.[screening_presctype.period])
    FROM (
        SELECT 
            T.Oid AS [screening_presctype.oid], 
            T.Screening AS [screening_presctype.screening], 
            T.Presctype AS [screening_presctype.presctype], 
            T.BeginAge AS [screening_presctype.begin_age], 
            T.EndAge AS [screening_presctype.end_age], 
            T.Period AS [screening_presctype.period], 
            True AS _from0
        FROM PostgresEntities.ScreeningPresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ambul_card_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView262()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ambul_card_infos", @"
    SELECT VALUE -- Constructing ambul_card_infos
        [PostgresModel.Store.ambul_card_info](T1.[ambul_card_info.oid], T1.[ambul_card_info.disp_type])
    FROM (
        SELECT 
            T.Oid AS [ambul_card_info.oid], 
            T.DispType AS [ambul_card_info.disp_type], 
            True AS _from0
        FROM PostgresEntities.AmbulCardInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.schedule_template_details
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.schedule_template_details", "\r\n    SELECT VALUE -- Constructing schedule_template_details\r\n        [PostgresMo" +
                    "del.Store.schedule_template_detail](T1.[schedule_template_detail.oid], T1.[sched" +
                    "ule_template_detail.template_oid], T1.[schedule_template_detail.day], T1.[schedu" +
                    "le_template_detail.presctype], T1.[schedule_template_detail.state], T1.[schedule" +
                    "_template_detail.isbron], T1.[schedule_template_detail.insite], T1.[schedule_tem" +
                    "plate_detail.cabinet], T1.[schedule_template_detail.isnapronly], T1.[schedule_te" +
                    "mplate_detail.infopac], T1.[schedule_template_detail.starton], T1.[schedule_temp" +
                    "late_detail.endon], T1.[schedule_template_detail.post], T1.[schedule_template_de" +
                    "tail.maxvisitors], T1.[schedule_template_detail.financingtype])\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.Oid AS [schedule_template_detail.oid], \r\n           " +
                    " T.TemplateOid AS [schedule_template_detail.template_oid], \r\n            T.Day A" +
                    "S [schedule_template_detail.day], \r\n            T.Presctype AS [schedule_templat" +
                    "e_detail.presctype], \r\n            T.State AS [schedule_template_detail.state], " +
                    "\r\n            T.Isbron AS [schedule_template_detail.isbron], \r\n            T.Ins" +
                    "ite AS [schedule_template_detail.insite], \r\n            T.Cabinet AS [schedule_t" +
                    "emplate_detail.cabinet], \r\n            T.Isnapronly AS [schedule_template_detail" +
                    ".isnapronly], \r\n            T.Infopac AS [schedule_template_detail.infopac], \r\n " +
                    "           T.Starton AS [schedule_template_detail.starton], \r\n            T.Endo" +
                    "n AS [schedule_template_detail.endon], \r\n            T.Post AS [schedule_templat" +
                    "e_detail.post], \r\n            T.Maxvisitors AS [schedule_template_detail.maxvisi" +
                    "tors], \r\n            T.Financingtype AS [schedule_template_detail.financingtype]" +
                    ", \r\n            True AS _from0\r\n        FROM PostgresEntities.ScheduleTemplateDe" +
                    "tails AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.schedule_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.schedule_templates", @"
    SELECT VALUE -- Constructing schedule_templates
        [PostgresModel.Store.schedule_template](T1.[schedule_template.oid], T1.[schedule_template.sysuser], T1.[schedule_template.otdel], T1.[schedule_template.name], T1.[schedule_template.sotr])
    FROM (
        SELECT 
            T.Oid AS [schedule_template.oid], 
            T.Sysuser AS [schedule_template.sysuser], 
            T.Otdel AS [schedule_template.otdel], 
            T.Name AS [schedule_template.name], 
            T.Sotr AS [schedule_template.sotr], 
            True AS _from0
        FROM PostgresEntities.ScheduleTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dispstates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView265()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dispstates", @"
    SELECT VALUE -- Constructing dispstates
        [PostgresModel.Store.dispstate](T1.dispstate_name, T1.dispstate_oid, T1.dispstate_show, T1.dispstate_name2, T1.dispstate_status)
    FROM (
        SELECT 
            T.Name AS dispstate_name, 
            T.Oid AS dispstate_oid, 
            T.Show AS dispstate_show, 
            T.Name2 AS dispstate_name2, 
            T.Status AS dispstate_status, 
            True AS _from0
        FROM PostgresEntities.Dispstates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_card_diags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView266()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_card_diags", @"
    SELECT VALUE -- Constructing disp_card_diags
        [PostgresModel.Store.disp_card_diag](T1.[disp_card_diag.oid], T1.[disp_card_diag.diag_id], T1.[disp_card_diag.disp_card])
    FROM (
        SELECT 
            T.Oid AS [disp_card_diag.oid], 
            T.DiagId AS [disp_card_diag.diag_id], 
            T.DispCard AS [disp_card_diag.disp_card], 
            True AS _from0
        FROM PostgresEntities.DispCardDiags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_card_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView267()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_card_infos", @"
    SELECT VALUE -- Constructing disp_card_infos
        [PostgresModel.Store.disp_card_info](T1.[disp_card_info.oid], T1.[disp_card_info.start_date], T1.[disp_card_info.end_date], T1.[disp_card_info.diag_main], T1.[disp_card_info.disp_sotr], T1.[disp_card_info.disp_group], T1.[disp_card_info.cause_close], T1.[disp_card_info.mdoc_id])
    FROM (
        SELECT 
            T.Oid AS [disp_card_info.oid], 
            T.StartDate AS [disp_card_info.start_date], 
            T.EndDate AS [disp_card_info.end_date], 
            T.DiagMain AS [disp_card_info.diag_main], 
            T.DispSotr AS [disp_card_info.disp_sotr], 
            T.DispGroup AS [disp_card_info.disp_group], 
            T.CauseClose AS [disp_card_info.cause_close], 
            T.MdocId AS [disp_card_info.mdoc_id], 
            True AS _from0
        FROM PostgresEntities.DispCardInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_close_causes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_close_causes", @"
    SELECT VALUE -- Constructing disp_close_causes
        [PostgresModel.Store.disp_close_cause](T1.[disp_close_cause.oid], T1.[disp_close_cause.name], T1.[disp_close_cause.show], T1.[disp_close_cause.foms_code])
    FROM (
        SELECT 
            T.Oid AS [disp_close_cause.oid], 
            T.Name AS [disp_close_cause.name], 
            T.Show AS [disp_close_cause.show], 
            T.FomsCode AS [disp_close_cause.foms_code], 
            True AS _from0
        FROM PostgresEntities.DispCloseCauses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pregnant_card_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView269()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(9225);
            viewString.Append("\r\n    SELECT VALUE -- Constructing pregnant_card_infos\r\n        [PostgresModel.S");
            viewString.Append("tore.pregnant_card_info](T1.[pregnant_card_info.oid], T1.[pregnant_card_info.yav");
            viewString.Append("ka], T1.[pregnant_card_info.living_condition], T1.[pregnant_card_info.job_hazard");
            viewString.Append("], T1.[pregnant_card_info.husband], T1.[pregnant_card_info.husband_age], T1.[pre");
            viewString.Append("gnant_card_info.husband_workplace], T1.[pregnant_card_info.birth_date], T1.[preg");
            viewString.Append("nant_card_info.ddo_start], T1.[pregnant_card_info.ddo_end], T1.[pregnant_card_in");
            viewString.Append("fo.sicklist_num], T1.[pregnant_card_info.botkin], T1.[pregnant_card_info.tbc], T");
            viewString.Append("1.[pregnant_card_info.hepatitis], T1.[pregnant_card_info.allergy], T1.[pregnant_");
            viewString.Append("card_info.venereal_diseases], T1.[pregnant_card_info.birth_sert_num], T1.[pregna");
            viewString.Append("nt_card_info.birth_sert_date], T1.[pregnant_card_info.is_working], T1.[pregnant_");
            viewString.Append("card_info.sexual_life_start], T1.[pregnant_card_info.prev_pregnancy_running], T1");
            viewString.Append(".[pregnant_card_info.post_birth_running], T1.[pregnant_card_info.is_contraceptio");
            viewString.Append("n], T1.[pregnant_card_info.contraception_type], T1.[pregnant_card_info.inheritan");
            viewString.Append("ce], T1.[pregnant_card_info.cr], T1.[pregnant_card_info.cd], T1.[pregnant_card_i");
            viewString.Append("nfo.ag], T1.[pregnant_card_info.old_diseases], T1.[pregnant_card_info.old_female");
            viewString.Append("_diseases], T1.[pregnant_card_info.husband_health], T1.[pregnant_card_info.heigh");
            viewString.Append("t], T1.[pregnant_card_info.weight], T1.[pregnant_card_info.ad], T1.[pregnant_car");
            viewString.Append("d_info.ps], T1.[pregnant_card_info.walkarround_inspection], T1.[pregnant_card_in");
            viewString.Append("fo.mammary_gland], T1.[pregnant_card_info.prelum_abdominale], T1.[pregnant_card_");
            viewString.Append("info.heart], T1.[pregnant_card_info.lungs], T1.[pregnant_card_info.stomach], T1.");
            viewString.Append("[pregnant_card_info.liver], T1.[pregnant_card_info.kidney], T1.[pregnant_card_in");
            viewString.Append("fo.curr_pregnancy_running], T1.[pregnant_card_info.menses_last_date], T1.[pregna");
            viewString.Append("nt_card_info.fetus_first_move_date], T1.[pregnant_card_info.pelvis_size], T1.[pr");
            viewString.Append("egnant_card_info.is], T1.[pregnant_card_info.pm], T1.[pregnant_card_info.first_i");
            viewString.Append("nspection_date], T1.[pregnant_card_info.first_inspection_diag], T1.[pregnant_car");
            viewString.Append("d_info.first_inspection_sotr], T1.[pregnant_card_info.fundus_uteri_height], T1.[");
            viewString.Append("pregnant_card_info.fetus_position], T1.[pregnant_card_info.fetus_presentation], ");
            viewString.Append("T1.[pregnant_card_info.fetus_heartbeat], T1.[pregnant_card_info.fetus_movement],");
            viewString.Append(" T1.[pregnant_card_info.external_genetal_organ], T1.[pregnant_card_info.breastfe");
            viewString.Append("eding_info], T1.[pregnant_card_info.breastfeeding_info_date], T1.[pregnant_card_");
            viewString.Append("info.vagina], T1.[pregnant_card_info.rks], T1.[pregnant_card_info.uterine_body],");
            viewString.Append(" T1.[pregnant_card_info.appendage], T1.[pregnant_card_info.parametrium], T1.[pre");
            viewString.Append("gnant_card_info.peculiarities], T1.[pregnant_card_info.first_menses_is_immediate");
            viewString.Append("], T1.[pregnant_card_info.first_menses_duration], T1.[pregnant_card_info.first_m");
            viewString.Append("enses_interval], T1.[pregnant_card_info.first_menses_intensiveness], T1.[pregnan");
            viewString.Append("t_card_info.first_menses_is_painful], T1.[pregnant_card_info.first_menses_painfu");
            viewString.Append("l_time], T1.[pregnant_card_info.first_menses_peculiarities], T1.[pregnant_card_i");
            viewString.Append("nfo.first_menses_peculiarities_from], T1.[pregnant_card_info.employ_from], T1.[p");
            viewString.Append("regnant_card_info.first_menses_establish_period], T1.[pregnant_card_info.flg_dat");
            viewString.Append("e], T1.[pregnant_card_info.flg_num], T1.[pregnant_card_info.husband_tel], T1.[pr");
            viewString.Append("egnant_card_info.liveplace_changing_street], T1.[pregnant_card_info.liveplace_ch");
            viewString.Append("anging_house], T1.[pregnant_card_info.liveplace_changing_flat], T1.[pregnant_car");
            viewString.Append("d_info.uterine_neck])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [pregna");
            viewString.Append("nt_card_info.oid], \r\n            T.Yavka AS [pregnant_card_info.yavka], \r\n      ");
            viewString.Append("      T.LivingCondition AS [pregnant_card_info.living_condition], \r\n            ");
            viewString.Append("T.JobHazard AS [pregnant_card_info.job_hazard], \r\n            T.Husband AS [preg");
            viewString.Append("nant_card_info.husband], \r\n            T.HusbandAge AS [pregnant_card_info.husba");
            viewString.Append("nd_age], \r\n            T.HusbandWorkplace AS [pregnant_card_info.husband_workpla");
            viewString.Append("ce], \r\n            T.BirthDate AS [pregnant_card_info.birth_date], \r\n           ");
            viewString.Append(" T.DdoStart AS [pregnant_card_info.ddo_start], \r\n            T.DdoEnd AS [pregna");
            viewString.Append("nt_card_info.ddo_end], \r\n            T.SicklistNum AS [pregnant_card_info.sickli");
            viewString.Append("st_num], \r\n            T.Botkin AS [pregnant_card_info.botkin], \r\n            T.");
            viewString.Append("Tbc AS [pregnant_card_info.tbc], \r\n            T.Hepatitis AS [pregnant_card_inf");
            viewString.Append("o.hepatitis], \r\n            T.Allergy AS [pregnant_card_info.allergy], \r\n       ");
            viewString.Append("     T.VenerealDiseases AS [pregnant_card_info.venereal_diseases], \r\n           ");
            viewString.Append(" T.BirthSertNum AS [pregnant_card_info.birth_sert_num], \r\n            T.BirthSer");
            viewString.Append("tDate AS [pregnant_card_info.birth_sert_date], \r\n            T.IsWorking AS [pre");
            viewString.Append("gnant_card_info.is_working], \r\n            T.SexualLifeStart AS [pregnant_card_i");
            viewString.Append("nfo.sexual_life_start], \r\n            T.PrevPregnancyRunning AS [pregnant_card_i");
            viewString.Append("nfo.prev_pregnancy_running], \r\n            T.PostBirthRunning AS [pregnant_card_");
            viewString.Append("info.post_birth_running], \r\n            T.IsContraception AS [pregnant_card_info");
            viewString.Append(".is_contraception], \r\n            T.ContraceptionType AS [pregnant_card_info.con");
            viewString.Append("traception_type], \r\n            T.Inheritance AS [pregnant_card_info.inheritance");
            viewString.Append("], \r\n            T.Cr AS [pregnant_card_info.cr], \r\n            T.Cd AS [pregnan");
            viewString.Append("t_card_info.cd], \r\n            T.Ag AS [pregnant_card_info.ag], \r\n            T.");
            viewString.Append("OldDiseases AS [pregnant_card_info.old_diseases], \r\n            T.OldFemaleDisea");
            viewString.Append("ses AS [pregnant_card_info.old_female_diseases], \r\n            T.HusbandHealth A");
            viewString.Append("S [pregnant_card_info.husband_health], \r\n            T.Height AS [pregnant_card_");
            viewString.Append("info.height], \r\n            T.Weight AS [pregnant_card_info.weight], \r\n         ");
            viewString.Append("   T.Ad AS [pregnant_card_info.ad], \r\n            T.Ps AS [pregnant_card_info.ps");
            viewString.Append("], \r\n            T.WalkarroundInspection AS [pregnant_card_info.walkarround_insp");
            viewString.Append("ection], \r\n            T.MammaryGland AS [pregnant_card_info.mammary_gland], \r\n ");
            viewString.Append("           T.PrelumAbdominale AS [pregnant_card_info.prelum_abdominale], \r\n     ");
            viewString.Append("       T.Heart AS [pregnant_card_info.heart], \r\n            T.Lungs AS [pregnant");
            viewString.Append("_card_info.lungs], \r\n            T.Stomach AS [pregnant_card_info.stomach], \r\n  ");
            viewString.Append("          T.Liver AS [pregnant_card_info.liver], \r\n            T.Kidney AS [preg");
            viewString.Append("nant_card_info.kidney], \r\n            T.CurrPregnancyRunning AS [pregnant_card_i");
            viewString.Append("nfo.curr_pregnancy_running], \r\n            T.MensesLastDate AS [pregnant_card_in");
            viewString.Append("fo.menses_last_date], \r\n            T.FetusFirstMoveDate AS [pregnant_card_info.");
            viewString.Append("fetus_first_move_date], \r\n            T.PelvisSize AS [pregnant_card_info.pelvis");
            viewString.Append("_size], \r\n            T.[Is] AS [pregnant_card_info.is], \r\n            T.Pm AS [");
            viewString.Append("pregnant_card_info.pm], \r\n            T.FirstInspectionDate AS [pregnant_card_in");
            viewString.Append("fo.first_inspection_date], \r\n            T.FirstInspectionDiag AS [pregnant_card");
            viewString.Append("_info.first_inspection_diag], \r\n            T.FirstInspectionSotr AS [pregnant_c");
            viewString.Append("ard_info.first_inspection_sotr], \r\n            T.FundusUteriHeight AS [pregnant_");
            viewString.Append("card_info.fundus_uteri_height], \r\n            T.FetusPosition AS [pregnant_card_");
            viewString.Append("info.fetus_position], \r\n            T.FetusPresentation AS [pregnant_card_info.f");
            viewString.Append("etus_presentation], \r\n            T.FetusHeartbeat AS [pregnant_card_info.fetus_");
            viewString.Append("heartbeat], \r\n            T.FetusMovement AS [pregnant_card_info.fetus_movement]");
            viewString.Append(", \r\n            T.ExternalGenetalOrgan AS [pregnant_card_info.external_genetal_o");
            viewString.Append("rgan], \r\n            T.BreastfeedingInfo AS [pregnant_card_info.breastfeeding_in");
            viewString.Append("fo], \r\n            T.BreastfeedingInfoDate AS [pregnant_card_info.breastfeeding_");
            viewString.Append("info_date], \r\n            T.Vagina AS [pregnant_card_info.vagina], \r\n           ");
            viewString.Append(" T.Rks AS [pregnant_card_info.rks], \r\n            T.UterineBody AS [pregnant_car");
            viewString.Append("d_info.uterine_body], \r\n            T.Appendage AS [pregnant_card_info.appendage");
            viewString.Append("], \r\n            T.Parametrium AS [pregnant_card_info.parametrium], \r\n          ");
            viewString.Append("  T.Peculiarities AS [pregnant_card_info.peculiarities], \r\n            T.FirstMe");
            viewString.Append("nsesIsImmediate AS [pregnant_card_info.first_menses_is_immediate], \r\n           ");
            viewString.Append(" T.FirstMensesDuration AS [pregnant_card_info.first_menses_duration], \r\n        ");
            viewString.Append("    T.FirstMensesInterval AS [pregnant_card_info.first_menses_interval], \r\n     ");
            viewString.Append("       T.FirstMensesIntensiveness AS [pregnant_card_info.first_menses_intensiven");
            viewString.Append("ess], \r\n            T.FirstMensesIsPainful AS [pregnant_card_info.first_menses_i");
            viewString.Append("s_painful], \r\n            T.FirstMensesPainfulTime AS [pregnant_card_info.first_");
            viewString.Append("menses_painful_time], \r\n            T.FirstMensesPeculiarities AS [pregnant_card");
            viewString.Append("_info.first_menses_peculiarities], \r\n            T.FirstMensesPeculiaritiesFrom ");
            viewString.Append("AS [pregnant_card_info.first_menses_peculiarities_from], \r\n            T.EmployF");
            viewString.Append("rom AS [pregnant_card_info.employ_from], \r\n            T.FirstMensesEstablishPer");
            viewString.Append("iod AS [pregnant_card_info.first_menses_establish_period], \r\n            T.FlgDa");
            viewString.Append("te AS [pregnant_card_info.flg_date], \r\n            T.FlgNum AS [pregnant_card_in");
            viewString.Append("fo.flg_num], \r\n            T.HusbandTel AS [pregnant_card_info.husband_tel], \r\n ");
            viewString.Append("           T.LiveplaceChangingStreet AS [pregnant_card_info.liveplace_changing_s");
            viewString.Append("treet], \r\n            T.LiveplaceChangingHouse AS [pregnant_card_info.liveplace_");
            viewString.Append("changing_house], \r\n            T.LiveplaceChangingFlat AS [pregnant_card_info.li");
            viewString.Append("veplace_changing_flat], \r\n            T.UterineNeck AS [pregnant_card_info.uteri");
            viewString.Append("ne_neck], \r\n            True AS _from0\r\n        FROM PostgresEntities.PregnantCa");
            viewString.Append("rdInfos AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pregnant_card_infos", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pregnancies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView270()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pregnancies", @"
    SELECT VALUE -- Constructing pregnancies
        [PostgresModel.Store.pregnancies](T1.pregnancies_oid, T1.pregnancies_year, T1.[pregnancies.pregnancy_result], T1.[pregnancies.newborn_state], T1.[pregnancies.breastfeeding_duration], T1.[pregnancies.baby_is_alive], T1.[pregnancies.birth_place], T1.[pregnancies.birth_taken_by], T1.pregnancies_people)
    FROM (
        SELECT 
            T.Oid AS pregnancies_oid, 
            T.Year AS pregnancies_year, 
            T.PregnancyResult AS [pregnancies.pregnancy_result], 
            T.NewbornState AS [pregnancies.newborn_state], 
            T.BreastfeedingDuration AS [pregnancies.breastfeeding_duration], 
            T.BabyIsAlive AS [pregnancies.baby_is_alive], 
            T.BirthPlace AS [pregnancies.birth_place], 
            T.BirthTakenBy AS [pregnancies.birth_taken_by], 
            T.People AS pregnancies_people, 
            True AS _from0
        FROM PostgresEntities.Pregnancies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.birth_places
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView271()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.birth_places", @"
    SELECT VALUE -- Constructing birth_places
        [PostgresModel.Store.birth_place](T1.[birth_place.oid], T1.[birth_place.name], T1.[birth_place.synonym])
    FROM (
        SELECT 
            T.Oid AS [birth_place.oid], 
            T.Name AS [birth_place.name], 
            T.Synonym AS [birth_place.synonym], 
            True AS _from0
        FROM PostgresEntities.BirthPlaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.newborn_states
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.newborn_states", @"
    SELECT VALUE -- Constructing newborn_states
        [PostgresModel.Store.newborn_state](T1.[newborn_state.oid], T1.[newborn_state.name])
    FROM (
        SELECT 
            T.Oid AS [newborn_state.oid], 
            T.Name AS [newborn_state.name], 
            True AS _from0
        FROM PostgresEntities.NewbornStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pregnancy_runnings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pregnancy_runnings", @"
    SELECT VALUE -- Constructing pregnancy_runnings
        [PostgresModel.Store.pregnancy_running](T1.[pregnancy_running.oid], T1.[pregnancy_running.name])
    FROM (
        SELECT 
            T.Oid AS [pregnancy_running.oid], 
            T.Name AS [pregnancy_running.name], 
            True AS _from0
        FROM PostgresEntities.PregnancyRunnings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.post_birth_runnings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.post_birth_runnings", @"
    SELECT VALUE -- Constructing post_birth_runnings
        [PostgresModel.Store.post_birth_running](T1.[post_birth_running.oid], T1.[post_birth_running.name])
    FROM (
        SELECT 
            T.Oid AS [post_birth_running.oid], 
            T.Name AS [post_birth_running.name], 
            True AS _from0
        FROM PostgresEntities.PostBirthRunnings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pregnancy_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pregnancy_results", @"
    SELECT VALUE -- Constructing pregnancy_results
        [PostgresModel.Store.pregnancy_result](T1.[pregnancy_result.oid], T1.[pregnancy_result.name], T1.[pregnancy_result.synonym])
    FROM (
        SELECT 
            T.Oid AS [pregnancy_result.oid], 
            T.Name AS [pregnancy_result.name], 
            T.Synonym AS [pregnancy_result.synonym], 
            True AS _from0
        FROM PostgresEntities.PregnancyResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors_ibs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors_ibs", @"
    SELECT VALUE -- Constructing risk_factors_ibs
        [PostgresModel.Store.risk_factors_ibs](T1.[risk_factors_ibs.oid], T1.[risk_factors_ibs.name])
    FROM (
        SELECT 
            T.Oid AS [risk_factors_ibs.oid], 
            T.Name AS [risk_factors_ibs.name], 
            True AS _from0
        FROM PostgresEntities.RiskFactorsIbs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors_diabetes_second_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView277()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors_diabetes_second_types", @"
    SELECT VALUE -- Constructing risk_factors_diabetes_second_types
        [PostgresModel.Store.risk_factors_diabetes_second_type](T1.[risk_factors_diabetes_second_type.oid], T1.[risk_factors_diabetes_second_type.name])
    FROM (
        SELECT 
            T.Oid AS [risk_factors_diabetes_second_type.oid], 
            T.Name AS [risk_factors_diabetes_second_type.name], 
            True AS _from0
        FROM PostgresEntities.RiskFactorsDiabetesSecondTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors_diabetes_second_type_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView278()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors_diabetes_second_type_people", @"
    SELECT VALUE -- Constructing risk_factors_diabetes_second_type_people
        [PostgresModel.Store.risk_factors_diabetes_second_type_people](T1.[risk_factors_diabetes_second_type_people.oid], T1.[risk_factors_diabetes_second_type_people.risk_factor_diabetes_second_type], T1.[risk_factors_diabetes_second_type_people.people])
    FROM (
        SELECT 
            T.Oid AS [risk_factors_diabetes_second_type_people.oid], 
            T.RiskFactorDiabetesSecondType AS [risk_factors_diabetes_second_type_people.risk_factor_diabetes_second_type], 
            T.People AS [risk_factors_diabetes_second_type_people.people], 
            True AS _from0
        FROM PostgresEntities.RiskFactorsDiabetesSecondTypePeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors_ibs_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors_ibs_people", @"
    SELECT VALUE -- Constructing risk_factors_ibs_people
        [PostgresModel.Store.risk_factors_ibs_people](T1.[risk_factors_ibs_people.oid], T1.[risk_factors_ibs_people.risk_factor_ibs], T1.[risk_factors_ibs_people.people])
    FROM (
        SELECT 
            T.Oid AS [risk_factors_ibs_people.oid], 
            T.RiskFactorIbs AS [risk_factors_ibs_people.risk_factor_ibs], 
            T.People AS [risk_factors_ibs_people.people], 
            True AS _from0
        FROM PostgresEntities.RiskFactorsIbsPeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdoc_numbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdoc_numbers", @"
    SELECT VALUE -- Constructing mdoc_numbers
        [PostgresModel.Store.mdoc_number](T1.[mdoc_number.mdoc_id], T1.[mdoc_number.num], T1.[mdoc_number.year], T1.[mdoc_number.date_generate], T1.[mdoc_number.mdoc_type_id], T1.[mdoc_number.prefix])
    FROM (
        SELECT 
            T.MdocId AS [mdoc_number.mdoc_id], 
            T.Num AS [mdoc_number.num], 
            T.Year AS [mdoc_number.year], 
            T.DateGenerate AS [mdoc_number.date_generate], 
            T.MdocTypeId AS [mdoc_number.mdoc_type_id], 
            T.Prefix AS [mdoc_number.prefix], 
            True AS _from0
        FROM PostgresEntities.MdocNumbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.children_evolution_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView281()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.children_evolution_histories", @"
    SELECT VALUE -- Constructing children_evolution_histories
        [PostgresModel.Store.children_evolution_history](T1.[children_evolution_history.id], T1.[children_evolution_history.people_id], T1.[children_evolution_history.chronic_diseases], T1.[children_evolution_history.living_conditions], T1.[children_evolution_history.additional_data])
    FROM (
        SELECT 
            T.Id AS [children_evolution_history.id], 
            T.PeopleId AS [children_evolution_history.people_id], 
            T.ChronicDiseases AS [children_evolution_history.chronic_diseases], 
            T.LivingConditions AS [children_evolution_history.living_conditions], 
            T.AdditionalData AS [children_evolution_history.additional_data], 
            True AS _from0
        FROM PostgresEntities.ChildrenEvolutionHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.screening_presctype_risk_fact_ibs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView282()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.screening_presctype_risk_fact_ibs", @"
    SELECT VALUE -- Constructing screening_presctype_risk_fact_ibs
        [PostgresModel.Store.screening_presctype_risk_fact_ibs](T1.[screening_presctype_risk_fact_ibs.oid], T1.[screening_presctype_risk_fact_ibs.screening_presctype], T1.[screening_presctype_risk_fact_ibs.risk_factor_ibs])
    FROM (
        SELECT 
            T.Oid AS [screening_presctype_risk_fact_ibs.oid], 
            T.ScreeningPresctype AS [screening_presctype_risk_fact_ibs.screening_presctype], 
            T.RiskFactorIbs AS [screening_presctype_risk_fact_ibs.risk_factor_ibs], 
            True AS _from0
        FROM PostgresEntities.ScreeningPresctypeRiskFactIbs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.screening_presctype_risk_fact_diab_second_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView283()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.screening_presctype_risk_fact_diab_second_types", @"
    SELECT VALUE -- Constructing screening_presctype_risk_fact_diab_second_types
        [PostgresModel.Store.screening_presctype_risk_fact_diab_second_type](T1.[screening_presctype_risk_fact_diab_second_type.oid], T1.[screening_presctype_risk_fact_diab_second_type.screening_presctype], T1.[screening_presctype_risk_fact_diab_second_type.risk_factor_diabet_second_type])
    FROM (
        SELECT 
            T.Oid AS [screening_presctype_risk_fact_diab_second_type.oid], 
            T.ScreeningPresctype AS [screening_presctype_risk_fact_diab_second_type.screening_presctype], 
            T.RiskFactorDiabetSecondType AS [screening_presctype_risk_fact_diab_second_type.risk_factor_diabet_second_type], 
            True AS _from0
        FROM PostgresEntities.ScreeningPresctypeRiskFactDiabSecondTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView284()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_presctypes", @"
    SELECT VALUE -- Constructing sotr_presctypes
        [PostgresModel.Store.sotr_presctype](T1.[sotr_presctype.id], T1.[sotr_presctype.presctype_id], T1.[sotr_presctype.allow], T1.[sotr_presctype.spec_id], T1.[sotr_presctype.profile_id], T1.[sotr_presctype.is_default], T1.[sotr_presctype.profile_spec_id], T1.[sotr_presctype.appoint], T1.[sotr_presctype.execute], T1.[sotr_presctype.otdel], T1.[sotr_presctype.sysuser], T1.[sotr_presctype.oid], T1.[sotr_presctype.sotr], T1.[sotr_presctype.multi_sign], T1.[sotr_presctype.show_in_schedule])
    FROM (
        SELECT 
            T.Id AS [sotr_presctype.id], 
            T.PresctypeId AS [sotr_presctype.presctype_id], 
            T.Allow AS [sotr_presctype.allow], 
            T.SpecId AS [sotr_presctype.spec_id], 
            T.ProfileId AS [sotr_presctype.profile_id], 
            T.IsDefault AS [sotr_presctype.is_default], 
            T.ProfileSpecId AS [sotr_presctype.profile_spec_id], 
            T.Appoint AS [sotr_presctype.appoint], 
            T.Execute AS [sotr_presctype.execute], 
            T.Otdel AS [sotr_presctype.otdel], 
            T.Sysuser AS [sotr_presctype.sysuser], 
            T.Oid AS [sotr_presctype.oid], 
            T.Sotr AS [sotr_presctype.sotr], 
            T.MultiSign AS [sotr_presctype.multi_sign], 
            T.ShowInSchedule AS [sotr_presctype.show_in_schedule], 
            True AS _from0
        FROM PostgresEntities.SotrPresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sexes", @"
    SELECT VALUE -- Constructing sexes
        [PostgresModel.Store.sex](T1.sex_id, T1.sex_name, T1.[sex.foms_code])
    FROM (
        SELECT 
            T.Id AS sex_id, 
            T.Name AS sex_name, 
            T.FomsCode AS [sex.foms_code], 
            True AS _from0
        FROM PostgresEntities.Sexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_mdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_mdoctypes", @"
    SELECT VALUE -- Constructing sotr_mdoctypes
        [PostgresModel.Store.sotr_mdoctype](T1.[sotr_mdoctype.id], T1.[sotr_mdoctype.sysuser], T1.[sotr_mdoctype.otdel], T1.[sotr_mdoctype.spec_id], T1.[sotr_mdoctype.bind], T1.[sotr_mdoctype.mdoctype_id])
    FROM (
        SELECT 
            T.Id AS [sotr_mdoctype.id], 
            T.Sysuser AS [sotr_mdoctype.sysuser], 
            T.Otdel AS [sotr_mdoctype.otdel], 
            T.SpecId AS [sotr_mdoctype.spec_id], 
            T.Bind AS [sotr_mdoctype.bind], 
            T.MdoctypeId AS [sotr_mdoctype.mdoctype_id], 
            True AS _from0
        FROM PostgresEntities.SotrMdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dictionary_rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dictionary_rights", @"
    SELECT VALUE -- Constructing dictionary_rights
        [PostgresModel.Store.dictionary_right](T1.[dictionary_right.right], T1.[dictionary_right.dictionary], T1.[dictionary_right.action])
    FROM (
        SELECT 
            T.[Right] AS [dictionary_right.right], 
            T.Dictionary AS [dictionary_right.dictionary], 
            T.Action AS [dictionary_right.action], 
            True AS _from0
        FROM PostgresEntities.DictionaryRights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.insurances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView288()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.insurances", @"
    SELECT VALUE -- Constructing insurances
        [PostgresModel.Store.insurance](T1.insurance_oid, T1.insurance_people, T1.insurance_ser, T1.insurance_num, T1.insurance_begindate, T1.insurance_enddate, T1.insurance_company, T1.[insurance.pay_type], T1.insurance_state, T1.insurance_notenddate, T1.[insurance.insur_oms_type], T1.insurance_extendeddate, T1.insurance_canceldate, T1.[insurance.insurance_number], T1.[insurance.insurance_state], T1.insurance_sysdate)
    FROM (
        SELECT 
            T.Oid AS insurance_oid, 
            T.People AS insurance_people, 
            T.Ser AS insurance_ser, 
            T.Num AS insurance_num, 
            T.Begindate AS insurance_begindate, 
            T.Enddate AS insurance_enddate, 
            T.Company AS insurance_company, 
            T.PayType AS [insurance.pay_type], 
            T.State AS insurance_state, 
            T.Notenddate AS insurance_notenddate, 
            T.InsurOmsType AS [insurance.insur_oms_type], 
            T.Extendeddate AS insurance_extendeddate, 
            T.Canceldate AS insurance_canceldate, 
            T.InsuranceNumber AS [insurance.insurance_number], 
            T.InsuranceState AS [insurance.insurance_state], 
            T.Sysdate AS insurance_sysdate, 
            True AS _from0
        FROM PostgresEntities.Insurances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.insurcompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.insurcompanies", @"
    SELECT VALUE -- Constructing insurcompanies
        [PostgresModel.Store.insurcompany](T1.insurcompany_oid, T1.insurcompany_code)
    FROM (
        SELECT 
            T.Oid AS insurcompany_oid, 
            T.Code AS insurcompany_code, 
            True AS _from0
        FROM PostgresEntities.Insurcompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.insur_oms_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.insur_oms_types", @"
    SELECT VALUE -- Constructing insur_oms_types
        [PostgresModel.Store.insur_oms_type](T1.[insur_oms_type.oid], T1.[insur_oms_type.name], T1.[insur_oms_type.foms_code])
    FROM (
        SELECT 
            T.Oid AS [insur_oms_type.oid], 
            T.Name AS [insur_oms_type.name], 
            T.FomsCode AS [insur_oms_type.foms_code], 
            True AS _from0
        FROM PostgresEntities.InsurOmsTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_methods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_methods", @"
    SELECT VALUE -- Constructing pay_methods
        [PostgresModel.Store.pay_method](T1.[pay_method.oid], T1.[pay_method.name], T1.[pay_method.foms_code], T1.[pay_method.show], T1.[pay_method.name2], T1.[pay_method.status])
    FROM (
        SELECT 
            T.Oid AS [pay_method.oid], 
            T.Name AS [pay_method.name], 
            T.FomsCode AS [pay_method.foms_code], 
            T.Show AS [pay_method.show], 
            T.Name2 AS [pay_method.name2], 
            T.Status AS [pay_method.status], 
            True AS _from0
        FROM PostgresEntities.PayMethods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.nosologies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView292()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.nosologies", @"
    SELECT VALUE -- Constructing nosologies
        [PostgresModel.Store.nosology](T1.nosology_oid, T1.nosology_name, T1.[nosology.foms_code])
    FROM (
        SELECT 
            T.Oid AS nosology_oid, 
            T.Name AS nosology_name, 
            T.FomsCode AS [nosology.foms_code], 
            True AS _from0
        FROM PostgresEntities.Nosologies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.benefits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView293()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.benefits", @"
    SELECT VALUE -- Constructing benefits
        [PostgresModel.Store.benefit](T1.benefit_oid, T1.benefit_people, T1.[benefit.benefit_type], T1.benefit_mkb10, T1.[benefit.date_begin], T1.[benefit.date_end], T1.benefit_justification, T1.benefit_code, T1.benefit_order178, T1.benefit_order890, T1.benefit_nosology, T1.[benefit.benefit_financing])
    FROM (
        SELECT 
            T.Oid AS benefit_oid, 
            T.People AS benefit_people, 
            T.BenefitType AS [benefit.benefit_type], 
            T.Mkb10 AS benefit_mkb10, 
            T.DateBegin AS [benefit.date_begin], 
            T.DateEnd AS [benefit.date_end], 
            T.Justification AS benefit_justification, 
            T.Code AS benefit_code, 
            T.Order178 AS benefit_order178, 
            T.Order890 AS benefit_order890, 
            T.Nosology AS benefit_nosology, 
            T.BenefitFinancing AS [benefit.benefit_financing], 
            True AS _from0
        FROM PostgresEntities.Benefits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.benefit_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.benefit_types", @"
    SELECT VALUE -- Constructing benefit_types
        [PostgresModel.Store.benefit_type](T1.[benefit_type.oid], T1.[benefit_type.name], T1.[benefit_type.foms_code], T1.[benefit_type.show], T1.[benefit_type.name2], T1.[benefit_type.status])
    FROM (
        SELECT 
            T.Oid AS [benefit_type.oid], 
            T.Name AS [benefit_type.name], 
            T.FomsCode AS [benefit_type.foms_code], 
            T.Show AS [benefit_type.show], 
            T.Name2 AS [benefit_type.name2], 
            T.Status AS [benefit_type.status], 
            True AS _from0
        FROM PostgresEntities.BenefitTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invalidtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invalidtypes", @"
    SELECT VALUE -- Constructing invalidtypes
        [PostgresModel.Store.invalidtype](T1.invalidtype_oid, T1.invalidtype_name, T1.[invalidtype.foms_code], T1.invalidtype_order, T1.invalidtype_parent)
    FROM (
        SELECT 
            T.Oid AS invalidtype_oid, 
            T.Name AS invalidtype_name, 
            T.FomsCode AS [invalidtype.foms_code], 
            T.[Order] AS invalidtype_order, 
            T.Parent AS invalidtype_parent, 
            True AS _from0
        FROM PostgresEntities.Invalidtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invalids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invalids", @"
    SELECT VALUE -- Constructing invalids
        [PostgresModel.Store.invalid](T1.invalid_oid, T1.invalid_people, T1.invalid_invalidgroup, T1.invalid_invalidtype, T1.invalid_invalidkind, T1.invalid_datebegin, T1.invalid_dateend, T1.invalid_infinity, T1.[invalid.justification_number], T1.[invalid.justification_date], T1.invalid_datenext, T1.invalid_additional, T1.invalid_limitabilitytowork)
    FROM (
        SELECT 
            T.Oid AS invalid_oid, 
            T.People AS invalid_people, 
            T.Invalidgroup AS invalid_invalidgroup, 
            T.Invalidtype AS invalid_invalidtype, 
            T.Invalidkind AS invalid_invalidkind, 
            T.Datebegin AS invalid_datebegin, 
            T.Dateend AS invalid_dateend, 
            T.Infinity AS invalid_infinity, 
            T.JustificationNumber AS [invalid.justification_number], 
            T.JustificationDate AS [invalid.justification_date], 
            T.Datenext AS invalid_datenext, 
            T.Additional AS invalid_additional, 
            T.Limitabilitytowork AS invalid_limitabilitytowork, 
            True AS _from0
        FROM PostgresEntities.Invalids AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView297()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_status", @"
    SELECT VALUE -- Constructing recipe_status
        [PostgresModel.Store.recipe_status](T1.[recipe_status.oid], T1.[recipe_status.name])
    FROM (
        SELECT 
            T.Oid AS [recipe_status.oid], 
            T.Name AS [recipe_status.name], 
            True AS _from0
        FROM PostgresEntities.RecipeStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView298()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_status", @"
    SELECT VALUE -- Constructing people_status
        [PostgresModel.Store.people_status](T1.[people_status.h_date], T1.[people_status.h_date_end], T1.[people_status.oid], T1.[people_status.people], T1.[people_status.marriage], T1.[people_status.citizenship], T1.[people_status.military], T1.[people_status.isrealperson], T1.[people_status.hasauto], T1.[people_status.haschildren], T1.[people_status.inn])
    FROM (
        SELECT 
            T.HDate AS [people_status.h_date], 
            T.HDateEnd AS [people_status.h_date_end], 
            T.Oid AS [people_status.oid], 
            T.People AS [people_status.people], 
            T.Marriage AS [people_status.marriage], 
            T.Citizenship AS [people_status.citizenship], 
            T.Military AS [people_status.military], 
            T.Isrealperson AS [people_status.isrealperson], 
            T.Hasauto AS [people_status.hasauto], 
            T.Haschildren AS [people_status.haschildren], 
            T.Inn AS [people_status.inn], 
            True AS _from0
        FROM PostgresEntities.PeopleStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.benefit_financings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.benefit_financings", @"
    SELECT VALUE -- Constructing benefit_financings
        [PostgresModel.Store.benefit_financing](T1.[benefit_financing.oid], T1.[benefit_financing.name], T1.[benefit_financing.foms_code], T1.[benefit_financing.show])
    FROM (
        SELECT 
            T.Oid AS [benefit_financing.oid], 
            T.Name AS [benefit_financing.name], 
            T.FomsCode AS [benefit_financing.foms_code], 
            T.Show AS [benefit_financing.show], 
            True AS _from0
        FROM PostgresEntities.BenefitFinancings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_section_ib2s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_section_ib2s", @"
    SELECT VALUE -- Constructing sotr_section_ib2s
        [PostgresModel.Store.sotr_section_ib2](T1.[sotr_section_ib2.oid], T1.[sotr_section_ib2.sysuser], T1.[sotr_section_ib2.otdel], T1.[sotr_section_ib2.spec_id], T1.[sotr_section_ib2.section_ib])
    FROM (
        SELECT 
            T.Oid AS [sotr_section_ib2.oid], 
            T.Sysuser AS [sotr_section_ib2.sysuser], 
            T.Otdel AS [sotr_section_ib2.otdel], 
            T.SpecId AS [sotr_section_ib2.spec_id], 
            T.SectionIb AS [sotr_section_ib2.section_ib], 
            True AS _from0
        FROM PostgresEntities.SotrSectionIb2s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ib_sections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ib_sections", @"
    SELECT VALUE -- Constructing ib_sections
        [PostgresModel.Store.ib_sections](T1.[ib_sections.oid], T1.[ib_sections.name], T1.[ib_sections.syn_role], T1.[ib_sections.parent], T1.[ib_sections.prescfolder], T1.[ib_sections.item_order], T1.[ib_sections.type_item], T1.[ib_sections.controller], T1.[ib_sections.action])
    FROM (
        SELECT 
            T.Oid AS [ib_sections.oid], 
            T.Name AS [ib_sections.name], 
            T.SynRole AS [ib_sections.syn_role], 
            T.Parent AS [ib_sections.parent], 
            T.Prescfolder AS [ib_sections.prescfolder], 
            T.ItemOrder AS [ib_sections.item_order], 
            T.TypeItem AS [ib_sections.type_item], 
            T.Controller AS [ib_sections.controller], 
            T.Action AS [ib_sections.action], 
            True AS _from0
        FROM PostgresEntities.IbSections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.epicris_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView302()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.epicris_types", @"
    SELECT VALUE -- Constructing epicris_types
        [PostgresModel.Store.epicris_type](T1.[epicris_type.oid], T1.[epicris_type.name], T1.[epicris_type.ib_secitons])
    FROM (
        SELECT 
            T.Oid AS [epicris_type.oid], 
            T.Name AS [epicris_type.name], 
            T.IbSecitons AS [epicris_type.ib_secitons], 
            True AS _from0
        FROM PostgresEntities.EpicrisTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.epicris
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView303()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.epicris", @"
    SELECT VALUE -- Constructing epicris
        [PostgresModel.Store.epicris](T1.epicris_oid, T1.[epicris.mdoc_oid], T1.epicris_text, T1.epicris_type, T1.epicris_dt, T1.epicris_presctype, T1.epicris_visit, T1.epicris_sotr)
    FROM (
        SELECT 
            T.Oid AS epicris_oid, 
            T.MdocOid AS [epicris.mdoc_oid], 
            T.Text AS epicris_text, 
            T.Type AS epicris_type, 
            T.Dt AS epicris_dt, 
            T.Presctype AS epicris_presctype, 
            T.Visit AS epicris_visit, 
            T.Sotr AS epicris_sotr, 
            True AS _from0
        FROM PostgresEntities.Epicris AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.operation_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.operation_types", @"
    SELECT VALUE -- Constructing operation_types
        [PostgresModel.Store.operation_type](T1.[operation_type.oid], T1.[operation_type.name], T1.[operation_type.ib_secitons])
    FROM (
        SELECT 
            T.Oid AS [operation_type.oid], 
            T.Name AS [operation_type.name], 
            T.IbSecitons AS [operation_type.ib_secitons], 
            True AS _from0
        FROM PostgresEntities.OperationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.operations", @"
    SELECT VALUE -- Constructing operations
        [PostgresModel.Store.operation](T1.operation_oid, T1.[operation.mdoc_oid], T1.operation_text, T1.operation_type, T1.operation_dt, T1.operation_nameoperation, T1.[operation.ib_secitons], T1.operation_presctype, T1.operation_sotr)
    FROM (
        SELECT 
            T.Oid AS operation_oid, 
            T.MdocOid AS [operation.mdoc_oid], 
            T.Text AS operation_text, 
            T.Type AS operation_type, 
            T.Dt AS operation_dt, 
            T.Nameoperation AS operation_nameoperation, 
            T.IbSecitons AS [operation.ib_secitons], 
            T.Presctype AS operation_presctype, 
            T.Sotr AS operation_sotr, 
            True AS _from0
        FROM PostgresEntities.Operations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lastonlinedatetimes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView306()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lastonlinedatetimes", @"
    SELECT VALUE -- Constructing lastonlinedatetimes
        [PostgresModel.Store.lastonlinedatetime](T1.lastonlinedatetime_oid, T1.lastonlinedatetime_lastonlinedatetime)
    FROM (
        SELECT 
            T.Oid AS lastonlinedatetime_oid, 
            T.Lastonlinedatetime2 AS lastonlinedatetime_lastonlinedatetime, 
            True AS _from0
        FROM PostgresEntities.Lastonlinedatetimes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.map_teeth
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.map_teeth", @"
    SELECT VALUE -- Constructing map_teeth
        [PostgresModel.Store.map_teeth](T1.[map_teeth.oid], T1.[map_teeth.presc_id], T1.[map_teeth.content], T1.[map_teeth.sanated])
    FROM (
        SELECT 
            T.Oid AS [map_teeth.oid], 
            T.PrescId AS [map_teeth.presc_id], 
            T.Content AS [map_teeth.content], 
            T.Sanated AS [map_teeth.sanated], 
            True AS _from0
        FROM PostgresEntities.MapTeeth AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_agreements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView308()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_agreements", @"
    SELECT VALUE -- Constructing pay_agreements
        [PostgresModel.Store.pay_agreement](T1.[pay_agreement.oid], T1.[pay_agreement.people_id], T1.[pay_agreement.beg_dt], T1.[pay_agreement.end_dt], T1.[pay_agreement.status], T1.[pay_agreement.sotr_create], T1.[pay_agreement.sotr_close], T1.[pay_agreement.num], T1.[pay_agreement.pay_type], T1.[pay_agreement.comment], T1.[pay_agreement.ul_agr], T1.[pay_agreement.sign_sotr], T1.[pay_agreement.immediate])
    FROM (
        SELECT 
            T.Oid AS [pay_agreement.oid], 
            T.PeopleId AS [pay_agreement.people_id], 
            T.BegDt AS [pay_agreement.beg_dt], 
            T.EndDt AS [pay_agreement.end_dt], 
            T.Status AS [pay_agreement.status], 
            T.SotrCreate AS [pay_agreement.sotr_create], 
            T.SotrClose AS [pay_agreement.sotr_close], 
            T.Num AS [pay_agreement.num], 
            T.PayType AS [pay_agreement.pay_type], 
            T.Comment AS [pay_agreement.comment], 
            T.UlAgr AS [pay_agreement.ul_agr], 
            T.SignSotr AS [pay_agreement.sign_sotr], 
            T.Immediate AS [pay_agreement.immediate], 
            True AS _from0
        FROM PostgresEntities.PayAgreements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_type_appendixes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView309()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_type_appendixes", @"
    SELECT VALUE -- Constructing pay_type_appendixes
        [PostgresModel.Store.pay_type_appendix](T1.[pay_type_appendix.oid], T1.[pay_type_appendix.name])
    FROM (
        SELECT 
            T.Oid AS [pay_type_appendix.oid], 
            T.Name AS [pay_type_appendix.name], 
            True AS _from0
        FROM PostgresEntities.PayTypeAppendixes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_appendixes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView310()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_appendixes", @"
    SELECT VALUE -- Constructing pay_appendixes
        [PostgresModel.Store.pay_appendix](T1.[pay_appendix.oid], T1.[pay_appendix.agreement_id], T1.[pay_appendix.num], T1.[pay_appendix.open_dt], T1.[pay_appendix.close_dt], T1.[pay_appendix.status], T1.[pay_appendix.pay_type_id], T1.[pay_appendix.sotr_create], T1.[pay_appendix.pacsubscribe], T1.[pay_appendix.service_price_category], T1.[pay_appendix.comment], T1.[pay_appendix.type_id], T1.[pay_appendix.sign_sotr], T1.[pay_appendix.note])
    FROM (
        SELECT 
            T.Oid AS [pay_appendix.oid], 
            T.AgreementId AS [pay_appendix.agreement_id], 
            T.Num AS [pay_appendix.num], 
            T.OpenDt AS [pay_appendix.open_dt], 
            T.CloseDt AS [pay_appendix.close_dt], 
            T.Status AS [pay_appendix.status], 
            T.PayTypeId AS [pay_appendix.pay_type_id], 
            T.SotrCreate AS [pay_appendix.sotr_create], 
            T.Pacsubscribe AS [pay_appendix.pacsubscribe], 
            T.ServicePriceCategory AS [pay_appendix.service_price_category], 
            T.Comment AS [pay_appendix.comment], 
            T.TypeId AS [pay_appendix.type_id], 
            T.SignSotr AS [pay_appendix.sign_sotr], 
            T.Note AS [pay_appendix.note], 
            True AS _from0
        FROM PostgresEntities.PayAppendixes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_recipe_lgot_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView311()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_recipe_lgot_types", @"
    SELECT VALUE -- Constructing sotr_recipe_lgot_types
        [PostgresModel.Store.sotr_recipe_lgot_type](T1.[sotr_recipe_lgot_type.oid], T1.[sotr_recipe_lgot_type.sotr], T1.[sotr_recipe_lgot_type.recipe_lgot_type], T1.[sotr_recipe_lgot_type.datebegin], T1.[sotr_recipe_lgot_type.dateend], T1.[sotr_recipe_lgot_type.description])
    FROM (
        SELECT 
            T.Oid AS [sotr_recipe_lgot_type.oid], 
            T.Sotr AS [sotr_recipe_lgot_type.sotr], 
            T.RecipeLgotType AS [sotr_recipe_lgot_type.recipe_lgot_type], 
            T.Datebegin AS [sotr_recipe_lgot_type.datebegin], 
            T.Dateend AS [sotr_recipe_lgot_type.dateend], 
            T.Description AS [sotr_recipe_lgot_type.description], 
            True AS _from0
        FROM PostgresEntities.SotrRecipeLgotTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presctypeparam_dictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView312()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presctypeparam_dictionaries", @"
    SELECT VALUE -- Constructing presctypeparam_dictionaries
        [PostgresModel.Store.presctypeparam_dictionary](T1.[presctypeparam_dictionary.oid], T1.[presctypeparam_dictionary.name], T1.[presctypeparam_dictionary.parent], T1.[presctypeparam_dictionary.name2], T1.[presctypeparam_dictionary.show], T1.[presctypeparam_dictionary.pathology])
    FROM (
        SELECT 
            T.Oid AS [presctypeparam_dictionary.oid], 
            T.Name AS [presctypeparam_dictionary.name], 
            T.Parent AS [presctypeparam_dictionary.parent], 
            T.Name2 AS [presctypeparam_dictionary.name2], 
            T.Show AS [presctypeparam_dictionary.show], 
            T.Pathology AS [presctypeparam_dictionary.pathology], 
            True AS _from0
        FROM PostgresEntities.PresctypeparamDictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView313()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2302);
            viewString.Append("\r\n    SELECT VALUE -- Constructing medics\r\n        [PostgresModel.Store.medic](T");
            viewString.Append("1.medic_oid, T1.medic_name, T1.[medic.phar_groups], T1.[medic.account_gr], T1.me");
            viewString.Append("dic_level, T1.medic_comment, T1.medic_pku, T1.[medic.nomen_rls], T1.medic_eancod");
            viewString.Append("e, T1.medic_medictype, T1.medic_paytype, T1.medic_fpackinupack, T1.medic_fpackoi");
            viewString.Append("d, T1.medic_mass, T1.medic_massunits, T1.[medic.name_lat], T1.medic_lgota, T1.me");
            viewString.Append("dic_visible, T1.[medic.print_lat_name], T1.medic_farmgrid2, T1.medic_farmgrid3, ");
            viewString.Append("T1.[medic.international_name], T1.[medic.visible_for_not_mir], T1.medic_store, T");
            viewString.Append("1.medic_equipment, T1.medic_items, T1.[medic.group_lf], T1.[medic.quota_code_34]");
            viewString.Append(", T1.medic_jnvls, T1.medic_mibp, T1.medic_measure, T1.medic_lpu, T1.[medic.short");
            viewString.Append("_name])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS medic_oid, \r\n        ");
            viewString.Append("    T.Name AS medic_name, \r\n            T.PharGroups AS [medic.phar_groups], \r\n ");
            viewString.Append("           T.AccountGr AS [medic.account_gr], \r\n            T.Level AS medic_lev");
            viewString.Append("el, \r\n            T.Comment AS medic_comment, \r\n            T.Pku AS medic_pku, ");
            viewString.Append("\r\n            T.NomenRls AS [medic.nomen_rls], \r\n            T.Eancode AS medic_");
            viewString.Append("eancode, \r\n            T.Medictype AS medic_medictype, \r\n            T.Paytype A");
            viewString.Append("S medic_paytype, \r\n            T.Fpackinupack AS medic_fpackinupack, \r\n         ");
            viewString.Append("   T.Fpackoid AS medic_fpackoid, \r\n            T.Mass AS medic_mass, \r\n         ");
            viewString.Append("   T.Massunits AS medic_massunits, \r\n            T.NameLat AS [medic.name_lat], ");
            viewString.Append("\r\n            T.Lgota AS medic_lgota, \r\n            T.Visible AS medic_visible, ");
            viewString.Append("\r\n            T.PrintLatName AS [medic.print_lat_name], \r\n            T.Farmgrid");
            viewString.Append("2 AS medic_farmgrid2, \r\n            T.Farmgrid3 AS medic_farmgrid3, \r\n          ");
            viewString.Append("  T.InternationalName AS [medic.international_name], \r\n            T.VisibleForN");
            viewString.Append("otMir AS [medic.visible_for_not_mir], \r\n            T.Store AS medic_store, \r\n  ");
            viewString.Append("          T.Equipment AS medic_equipment, \r\n            T.Items AS medic_items, ");
            viewString.Append("\r\n            T.GroupLf AS [medic.group_lf], \r\n            T.QuotaCode34 AS [med");
            viewString.Append("ic.quota_code_34], \r\n            T.Jnvls AS medic_jnvls, \r\n            T.Mibp AS");
            viewString.Append(" medic_mibp, \r\n            T.Measure AS medic_measure, \r\n            T.Lpu AS me");
            viewString.Append("dic_lpu, \r\n            T.ShortName AS [medic.short_name], \r\n            True AS ");
            viewString.Append("_from0\r\n        FROM PostgresEntities.Medics AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medics", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.minzapas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView314()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.minzapas", @"
    SELECT VALUE -- Constructing minzapas
        [PostgresModel.Store.minzapas](T1.minzapas_oid, T1.minzapas_medic, T1.minzapas_mogroup, T1.minzapas_colvo)
    FROM (
        SELECT 
            T.Oid AS minzapas_oid, 
            T.Medic AS minzapas_medic, 
            T.Mogroup AS minzapas_mogroup, 
            T.Colvo AS minzapas_colvo, 
            True AS _from0
        FROM PostgresEntities.Minzapas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mo", @"
    SELECT VALUE -- Constructing mo
        [PostgresModel.Store.mo](T1.mo_oid, T1.mo_name, T1.mo_crm, T1.mo_parent, T1.[mo.sotr_oid], T1.mo_treb, T1.mo_motype, T1.mo_group, T1.[mo.mo_group_oid], T1.mo_store, T1.mo_del, T1.mo_lpu)
    FROM (
        SELECT 
            T.Oid AS mo_oid, 
            T.Name AS mo_name, 
            T.Crm AS mo_crm, 
            T.Parent AS mo_parent, 
            T.SotrOid AS [mo.sotr_oid], 
            T.Treb AS mo_treb, 
            T.Motype AS mo_motype, 
            T.[Group] AS mo_group, 
            T.MoGroupOid AS [mo.mo_group_oid], 
            T.Store AS mo_store, 
            T.Del AS mo_del, 
            T.Lpu AS mo_lpu, 
            True AS _from0
        FROM PostgresEntities.Mo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medicomplexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView316()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medicomplexes", @"
    SELECT VALUE -- Constructing medicomplexes
        [PostgresModel.Store.medicomplex](T1.medicomplex_medic, T1.[medicomplex.medic_item], T1.medicomplex_amount, T1.medicomplex_oid, T1.[medicomplex.order_medic], T1.medicomplex_tara)
    FROM (
        SELECT 
            T.Medic AS medicomplex_medic, 
            T.MedicItem AS [medicomplex.medic_item], 
            T.Amount AS medicomplex_amount, 
            T.Oid AS medicomplex_oid, 
            T.OrderMedic AS [medicomplex.order_medic], 
            T.Tara AS medicomplex_tara, 
            True AS _from0
        FROM PostgresEntities.Medicomplexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medicomplex222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView317()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medicomplex222s", @"
    SELECT VALUE -- Constructing medicomplex222s
        [PostgresModel.Store.medicomplex222](T1.medicomplex222_medic, T1.[medicomplex222.medic222_oid_item], T1.[medicomplex222.medic222_oid_amount])
    FROM (
        SELECT 
            T.Medic AS medicomplex222_medic, 
            T.Medic222OidItem AS [medicomplex222.medic222_oid_item], 
            T.Medic222OidAmount AS [medicomplex222.medic222_oid_amount], 
            True AS _from0
        FROM PostgresEntities.Medicomplex222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mo_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView318()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mo_groups", @"
    SELECT VALUE -- Constructing mo_groups
        [PostgresModel.Store.mo_group](T1.[mo_group.oid], T1.[mo_group.group], T1.[mo_group.del], T1.[mo_group.store], T1.[mo_group.quota_code_1], T1.[mo_group.lpu])
    FROM (
        SELECT 
            T.Oid AS [mo_group.oid], 
            T.[Group] AS [mo_group.group], 
            T.Del AS [mo_group.del], 
            T.Store AS [mo_group.store], 
            T.QuotaCode1 AS [mo_group.quota_code_1], 
            T.Lpu AS [mo_group.lpu], 
            True AS _from0
        FROM PostgresEntities.MoGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mo_in_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView319()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mo_in_groups", @"
    SELECT VALUE -- Constructing mo_in_groups
        [PostgresModel.Store.mo_in_group](T1.[mo_in_group.oid], T1.[mo_in_group.mo], T1.[mo_in_group.group_tmo], T1.[mo_in_group.del])
    FROM (
        SELECT 
            T.Oid AS [mo_in_group.oid], 
            T.Mo AS [mo_in_group.mo], 
            T.GroupTmo AS [mo_in_group.group_tmo], 
            T.Del AS [mo_in_group.del], 
            True AS _from0
        FROM PostgresEntities.MoInGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.position_docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView320()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2268);
            viewString.Append("\r\n    SELECT VALUE -- Constructing position_docs\r\n        [PostgresModel.Store.p");
            viewString.Append("osition_doc](T1.[position_doc.oid], T1.[position_doc.docs], T1.[position_doc.kar");
            viewString.Append("t], T1.[position_doc.kol], T1.[position_doc.newprice], T1.[position_doc.price], ");
            viewString.Append("T1.[position_doc.summ], T1.[position_doc.sel], T1.[position_doc.trebkol], T1.[po");
            viewString.Append("sition_doc.docs_rezerv], T1.[position_doc.date_spis], T1.[position_doc.nazmedlec");
            viewString.Append("h], T1.[position_doc.reslech], T1.[position_doc.fas], T1.[position_doc.nazmedlec");
            viewString.Append("hvoid], T1.[position_doc.treb_dpc], T1.[position_doc.nazmedoid], T1.[position_do");
            viewString.Append("c.mo_create], T1.[position_doc.create_data], T1.[position_doc.mo_edit], T1.[posi");
            viewString.Append("tion_doc.nazvrachoid], T1.[position_doc.nazmark], T1.[position_doc.return_post],");
            viewString.Append(" T1.[position_doc.kol_old], T1.[position_doc.trebkol_old], T1.[position_doc.edit");
            viewString.Append("_date])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [position_doc.oid], \r");
            viewString.Append("\n            T.Docs AS [position_doc.docs], \r\n            T.Kart AS [position_do");
            viewString.Append("c.kart], \r\n            T.Kol AS [position_doc.kol], \r\n            T.Newprice AS ");
            viewString.Append("[position_doc.newprice], \r\n            T.Price AS [position_doc.price], \r\n      ");
            viewString.Append("      T.Summ AS [position_doc.summ], \r\n            T.Sel AS [position_doc.sel], ");
            viewString.Append("\r\n            T.Trebkol AS [position_doc.trebkol], \r\n            T.DocsRezerv AS");
            viewString.Append(" [position_doc.docs_rezerv], \r\n            T.DateSpis AS [position_doc.date_spis");
            viewString.Append("], \r\n            T.Nazmedlech AS [position_doc.nazmedlech], \r\n            T.Resl");
            viewString.Append("ech AS [position_doc.reslech], \r\n            T.Fas AS [position_doc.fas], \r\n    ");
            viewString.Append("        T.Nazmedlechvoid AS [position_doc.nazmedlechvoid], \r\n            T.TrebD");
            viewString.Append("pc AS [position_doc.treb_dpc], \r\n            T.Nazmedoid AS [position_doc.nazmed");
            viewString.Append("oid], \r\n            T.MoCreate AS [position_doc.mo_create], \r\n            T.Crea");
            viewString.Append("teData AS [position_doc.create_data], \r\n            T.MoEdit AS [position_doc.mo");
            viewString.Append("_edit], \r\n            T.Nazvrachoid AS [position_doc.nazvrachoid], \r\n           ");
            viewString.Append(" T.Nazmark AS [position_doc.nazmark], \r\n            T.ReturnPost AS [position_do");
            viewString.Append("c.return_post], \r\n            T.KolOld AS [position_doc.kol_old], \r\n            ");
            viewString.Append("T.TrebkolOld AS [position_doc.trebkol_old], \r\n            T.EditDate AS [positio");
            viewString.Append("n_doc.edit_date], \r\n            True AS _from0\r\n        FROM PostgresEntities.Po");
            viewString.Append("sitionDocs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.position_docs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.phar_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView321()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.phar_groups", @"
    SELECT VALUE -- Constructing phar_groups
        [PostgresModel.Store.phar_groups](T1.[phar_groups.farmgr], T1.[phar_groups.oid], T1.[phar_groups.frmgr_rls], T1.[phar_groups.lpu])
    FROM (
        SELECT 
            T.Farmgr AS [phar_groups.farmgr], 
            T.Oid AS [phar_groups.oid], 
            T.FrmgrRls AS [phar_groups.frmgr_rls], 
            T.Lpu AS [phar_groups.lpu], 
            True AS _from0
        FROM PostgresEntities.PharGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.requests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView322()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.requests", @"
    SELECT VALUE -- Constructing requests
        [PostgresModel.Store.request](T1.request_oid, T1.[request.request_num], T1.[request.create_date], T1.request_invoice, T1.[request.mo_oid_create], T1.[request.dover_num], T1.[request.mo_get], T1.[request.mo_zayav], T1.request_supplier, T1.[request.dover_date], T1.request_comment, T1.request_store)
    FROM (
        SELECT 
            T.Oid AS request_oid, 
            T.RequestNum AS [request.request_num], 
            T.CreateDate AS [request.create_date], 
            T.Invoice AS request_invoice, 
            T.MoOidCreate AS [request.mo_oid_create], 
            T.DoverNum AS [request.dover_num], 
            T.MoGet AS [request.mo_get], 
            T.MoZayav AS [request.mo_zayav], 
            T.Supplier AS request_supplier, 
            T.DoverDate AS [request.dover_date], 
            T.Comment AS request_comment, 
            T.Store AS request_store, 
            True AS _from0
        FROM PostgresEntities.Requests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.spisanievids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView323()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.spisanievids", @"
    SELECT VALUE -- Constructing spisanievids
        [PostgresModel.Store.spisanievid](T1.spisanievid_oid, T1.spisanievid_name, T1.spisanievid_del, T1.spisanievid_doctype, T1.spisanievid_lpu)
    FROM (
        SELECT 
            T.Oid AS spisanievid_oid, 
            T.Name AS spisanievid_name, 
            T.Del AS spisanievid_del, 
            T.Doctype AS spisanievid_doctype, 
            T.Lpu AS spisanievid_lpu, 
            True AS _from0
        FROM PostgresEntities.Spisanievids AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.specialmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView324()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.specialmedics", @"
    SELECT VALUE -- Constructing specialmedics
        [PostgresModel.Store.specialmedic](T1.specialmedic_oid, T1.specialmedic_name, T1.specialmedic_lpu)
    FROM (
        SELECT 
            T.Oid AS specialmedic_oid, 
            T.Name AS specialmedic_name, 
            T.Lpu AS specialmedic_lpu, 
            True AS _from0
        FROM PostgresEntities.Specialmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView325()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.suppliers", "\r\n    SELECT VALUE -- Constructing suppliers\r\n        [PostgresModel.Store.suppli" +
                    "er](T1.supplier_oid, T1.supplier_name, T1.supplier_bossdolg, T1.supplier_bossfio" +
                    ", T1.supplier_del, T1.supplier_motype, T1.supplier_rekviziti, T1.supplier_store," +
                    " T1.[supplier.kontrakt_n], T1.[supplier.kontrakt_begin], T1.[supplier.kontrakt_e" +
                    "nd], T1.supplier_address, T1.supplier_phone, T1.[supplier.r_s], T1.[supplier.k_s" +
                    "], T1.supplier_inn, T1.supplier_bik, T1.supplier_okpo, T1.supplier_okonh, T1.sup" +
                    "plier_bank, T1.[supplier.license_n], T1.supplier_license, T1.[supplier.pm_vendor" +
                    "_oid], T1.supplier_lpu)\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS suppl" +
                    "ier_oid, \r\n            T.Name AS supplier_name, \r\n            T.Bossdolg AS supp" +
                    "lier_bossdolg, \r\n            T.Bossfio AS supplier_bossfio, \r\n            T.Del " +
                    "AS supplier_del, \r\n            T.Motype AS supplier_motype, \r\n            T.Rekv" +
                    "iziti AS supplier_rekviziti, \r\n            T.Store AS supplier_store, \r\n        " +
                    "    T.KontraktN AS [supplier.kontrakt_n], \r\n            T.KontraktBegin AS [supp" +
                    "lier.kontrakt_begin], \r\n            T.KontraktEnd AS [supplier.kontrakt_end], \r\n" +
                    "            T.Address AS supplier_address, \r\n            T.Phone AS supplier_pho" +
                    "ne, \r\n            T.RS AS [supplier.r_s], \r\n            T.KS AS [supplier.k_s], " +
                    "\r\n            T.Inn AS supplier_inn, \r\n            T.Bik AS supplier_bik, \r\n    " +
                    "        T.Okpo AS supplier_okpo, \r\n            T.Okonh AS supplier_okonh, \r\n    " +
                    "        T.Bank AS supplier_bank, \r\n            T.LicenseN AS [supplier.license_n" +
                    "], \r\n            T.License AS supplier_license, \r\n            T.PmVendorOid AS [" +
                    "supplier.pm_vendor_oid], \r\n            T.Lpu AS supplier_lpu, \r\n            True" +
                    " AS _from0\r\n        FROM PostgresEntities.Suppliers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.zayavka_dpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView326()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.zayavka_dpcs", @"
    SELECT VALUE -- Constructing zayavka_dpcs
        [PostgresModel.Store.zayavka_dpc](T1.[zayavka_dpc.oid], T1.[zayavka_dpc.medic], T1.[zayavka_dpc.request], T1.[zayavka_dpc.kol])
    FROM (
        SELECT 
            T.Oid AS [zayavka_dpc.oid], 
            T.Medic AS [zayavka_dpc.medic], 
            T.Request AS [zayavka_dpc.request], 
            T.Kol AS [zayavka_dpc.kol], 
            True AS _from0
        FROM PostgresEntities.ZayavkaDpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView327()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.docs", "\r\n    SELECT VALUE -- Constructing docs\r\n        [PostgresModel.Store.docs](T1.do" +
                    "cs_oid, T1.docs_mo, T1.docs_data, T1.docs_doc, T1.docs_vid, T1.docs_comment, T1." +
                    "[docs.mo_from], T1.[docs.mo_to], T1.docs_supplier, T1.docs_price, T1.docs_vidmov" +
                    "e, T1.docs_invoice, T1.docs_treb, T1.docs_spisanievid, T1.[docs.mo_group], T1.[d" +
                    "ocs.mo_group_to], T1.[docs.mo_group_from], T1.docs_store, T1.[docs.type_income]," +
                    " T1.docs_kontrakt, T1.[docs.schet_faktura], T1.[docs.sources_finance], T1.docs_p" +
                    "aycond, T1.[docs.edit_docs], T1.docs_phar)\r\n    FROM (\r\n        SELECT \r\n       " +
                    "     T.Oid AS docs_oid, \r\n            T.Mo AS docs_mo, \r\n            T.Data AS d" +
                    "ocs_data, \r\n            T.Doc1 AS docs_doc, \r\n            T.Vid AS docs_vid, \r\n " +
                    "           T.Comment AS docs_comment, \r\n            T.MoFrom AS [docs.mo_from], " +
                    "\r\n            T.MoTo AS [docs.mo_to], \r\n            T.Supplier AS docs_supplier," +
                    " \r\n            T.Price AS docs_price, \r\n            T.Vidmove AS docs_vidmove, \r" +
                    "\n            T.Invoice AS docs_invoice, \r\n            T.Treb AS docs_treb, \r\n   " +
                    "         T.Spisanievid AS docs_spisanievid, \r\n            T.MoGroup AS [docs.mo_" +
                    "group], \r\n            T.MoGroupTo AS [docs.mo_group_to], \r\n            T.MoGroup" +
                    "From AS [docs.mo_group_from], \r\n            T.Store AS docs_store, \r\n           " +
                    " T.TypeIncome AS [docs.type_income], \r\n            T.Kontrakt AS docs_kontrakt, " +
                    "\r\n            T.SchetFaktura AS [docs.schet_faktura], \r\n            T.SourcesFin" +
                    "ance AS [docs.sources_finance], \r\n            T.Paycond AS docs_paycond, \r\n     " +
                    "       T.EditDocs AS [docs.edit_docs], \r\n            T.Phar AS docs_phar, \r\n    " +
                    "        True AS _from0\r\n        FROM PostgresEntities.Docs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView328()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic222s", @"
    SELECT VALUE -- Constructing medic222s
        [PostgresModel.Store.medic222](T1.medic222_name, T1.[medic222.phar_groups], T1.[medic222.account_gr], T1.medic222_oid, T1.medic222_level, T1.medic222_comment, T1.medic222_pku, T1.[medic222.nomen_rls], T1.medic222_eancode, T1.medic222_medictype, T1.medic222_paytype, T1.medic222_fpackinupack, T1.medic222_fpackoid, T1.medic222_mass, T1.medic222_massunits, T1.medic222_lgota, T1.[medic222.name_lat], T1.medic222_visible, T1.medic222_measure)
    FROM (
        SELECT 
            T.Name AS medic222_name, 
            T.PharGroups AS [medic222.phar_groups], 
            T.AccountGr AS [medic222.account_gr], 
            T.Oid AS medic222_oid, 
            T.Level AS medic222_level, 
            T.Comment AS medic222_comment, 
            T.Pku AS medic222_pku, 
            T.NomenRls AS [medic222.nomen_rls], 
            T.Eancode AS medic222_eancode, 
            T.Medictype AS medic222_medictype, 
            T.Paytype AS medic222_paytype, 
            T.Fpackinupack AS medic222_fpackinupack, 
            T.Fpackoid AS medic222_fpackoid, 
            T.Mass AS medic222_mass, 
            T.Massunits AS medic222_massunits, 
            T.Lgota AS medic222_lgota, 
            T.NameLat AS [medic222.name_lat], 
            T.Visible AS medic222_visible, 
            T.Measure AS medic222_measure, 
            True AS _from0
        FROM PostgresEntities.Medic222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.accountgrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView329()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.accountgrs", @"
    SELECT VALUE -- Constructing accountgrs
        [PostgresModel.Store.accountgr](T1.accountgr_accountgr, T1.accountgr_oid, T1.accountgr_mat, T1.accountgr_store, T1.[accountgr.quota_code_2], T1.accountgr_lpu)
    FROM (
        SELECT 
            T.Accountgr1 AS accountgr_accountgr, 
            T.Oid AS accountgr_oid, 
            T.Mat AS accountgr_mat, 
            T.Store AS accountgr_store, 
            T.QuotaCode2 AS [accountgr.quota_code_2], 
            T.Lpu AS accountgr_lpu, 
            True AS _from0
        FROM PostgresEntities.Accountgrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.group_lfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView330()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.group_lfs", @"
    SELECT VALUE -- Constructing group_lfs
        [PostgresModel.Store.group_lf](T1.[group_lf.oid], T1.[group_lf.group_lf], T1.[group_lf.order_group], T1.[group_lf.synonim], T1.[group_lf.del], T1.[group_lf.lpu])
    FROM (
        SELECT 
            T.Oid AS [group_lf.oid], 
            T.GroupLf1 AS [group_lf.group_lf], 
            T.OrderGroup AS [group_lf.order_group], 
            T.Synonim AS [group_lf.synonim], 
            T.Del AS [group_lf.del], 
            T.Lpu AS [group_lf.lpu], 
            True AS _from0
        FROM PostgresEntities.GroupLfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView331()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stores", @"
    SELECT VALUE -- Constructing stores
        [PostgresModel.Store.store](T1.store_oid, T1.store_name, T1.store_synonim, T1.[store.name_rep], T1.[store.mainform_caption], T1.[store.obj_uch_name], T1.store_lpu)
    FROM (
        SELECT 
            T.Oid AS store_oid, 
            T.Name AS store_name, 
            T.Synonim AS store_synonim, 
            T.NameRep AS [store.name_rep], 
            T.MainformCaption AS [store.mainform_caption], 
            T.ObjUchName AS [store.obj_uch_name], 
            T.Lpu AS store_lpu, 
            True AS _from0
        FROM PostgresEntities.Stores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.karts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView332()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.karts", "\r\n    SELECT VALUE -- Constructing karts\r\n        [PostgresModel.Store.kart](T1.k" +
                    "art_oid, T1.kart_mo, T1.kart_del, T1.kart_medic, T1.kart_name, T1.kart_serial, T" +
                    "1.kart_goden, T1.kart_prodcert, T1.kart_certificate, T1.kart_producer, T1.[kart." +
                    "party_num], T1.kart_price, T1.kart_kol, T1.kart_mogroup, T1.kart_expensive, T1.[" +
                    "kart.type_income], T1.[kart.party_num2], T1.[kart.brak_med_uniqstr], T1.kart_bra" +
                    "k, T1.[kart.sources_finance], T1.[kart.inv_nomer], T1.[kart.quota_code], T1.kart" +
                    "_nds, T1.kart_nacenka, T1.[kart.price_mnf], T1.kart_jnvls, T1.kart_subaccount, T" +
                    "1.kart_oidphar, T1.[kart.brak_date])\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".Oid AS kart_oid, \r\n            T.Mo AS kart_mo, \r\n            T.Del AS kart_del" +
                    ", \r\n            T.Medic AS kart_medic, \r\n            T.Name AS kart_name, \r\n    " +
                    "        T.Serial AS kart_serial, \r\n            T.Goden AS kart_goden, \r\n        " +
                    "    T.Prodcert AS kart_prodcert, \r\n            T.Certificate AS kart_certificate" +
                    ", \r\n            T.Producer AS kart_producer, \r\n            T.PartyNum AS [kart.p" +
                    "arty_num], \r\n            T.Price AS kart_price, \r\n            T.Kol AS kart_kol," +
                    " \r\n            T.Mogroup AS kart_mogroup, \r\n            T.Expensive AS kart_expe" +
                    "nsive, \r\n            T.TypeIncome AS [kart.type_income], \r\n            T.PartyNu" +
                    "m2 AS [kart.party_num2], \r\n            T.BrakMedUniqstr AS [kart.brak_med_uniqst" +
                    "r], \r\n            T.Brak AS kart_brak, \r\n            T.SourcesFinance AS [kart.s" +
                    "ources_finance], \r\n            T.InvNomer AS [kart.inv_nomer], \r\n            T.Q" +
                    "uotaCode AS [kart.quota_code], \r\n            T.Nds AS kart_nds, \r\n            T." +
                    "Nacenka AS kart_nacenka, \r\n            T.PriceMnf AS [kart.price_mnf], \r\n       " +
                    "     T.Jnvls AS kart_jnvls, \r\n            T.Subaccount AS kart_subaccount, \r\n   " +
                    "         T.Oidphar AS kart_oidphar, \r\n            T.BrakDate AS [kart.brak_date]" +
                    ", \r\n            True AS _from0\r\n        FROM PostgresEntities.Karts AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sources_finances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView333()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sources_finances", @"
    SELECT VALUE -- Constructing sources_finances
        [PostgresModel.Store.sources_finance](T1.[sources_finance.oid], T1.[sources_finance.name], T1.[sources_finance.synonim], T1.[sources_finance.typedoc_oid], T1.[sources_finance.lpu])
    FROM (
        SELECT 
            T.Oid AS [sources_finance.oid], 
            T.Name AS [sources_finance.name], 
            T.Synonim AS [sources_finance.synonim], 
            T.TypedocOid AS [sources_finance.typedoc_oid], 
            T.Lpu AS [sources_finance.lpu], 
            True AS _from0
        FROM PostgresEntities.SourcesFinances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.template_dpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView334()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.template_dpcs", @"
    SELECT VALUE -- Constructing template_dpcs
        [PostgresModel.Store.template_dpc](T1.[template_dpc.oid], T1.[template_dpc.template_doc], T1.[template_dpc.medic], T1.[template_dpc.kol], T1.[template_dpc.fas_kol])
    FROM (
        SELECT 
            T.Oid AS [template_dpc.oid], 
            T.TemplateDoc AS [template_dpc.template_doc], 
            T.Medic AS [template_dpc.medic], 
            T.Kol AS [template_dpc.kol], 
            T.FasKol AS [template_dpc.fas_kol], 
            True AS _from0
        FROM PostgresEntities.TemplateDpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trebs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView335()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trebs", @"
    SELECT VALUE -- Constructing trebs
        [PostgresModel.Store.treb](T1.treb_oid, T1.treb_treb, T1.treb_date, T1.[treb.mo_owner], T1.[treb.mo_to], T1.[treb.mo_from], T1.treb_comment, T1.treb_docs, T1.[treb.mo_group], T1.[treb.mo_group_to], T1.[treb.mo_group_from], T1.treb_cito, T1.treb_store, T1.[treb.sources_finance], T1.treb_rpo)
    FROM (
        SELECT 
            T.Oid AS treb_oid, 
            T.Treb1 AS treb_treb, 
            T.Date AS treb_date, 
            T.MoOwner AS [treb.mo_owner], 
            T.MoTo AS [treb.mo_to], 
            T.MoFrom AS [treb.mo_from], 
            T.Comment AS treb_comment, 
            T.Docs AS treb_docs, 
            T.MoGroup AS [treb.mo_group], 
            T.MoGroupTo AS [treb.mo_group_to], 
            T.MoGroupFrom AS [treb.mo_group_from], 
            T.Cito AS treb_cito, 
            T.Store AS treb_store, 
            T.SourcesFinance AS [treb.sources_finance], 
            T.Rpo AS treb_rpo, 
            True AS _from0
        FROM PostgresEntities.Trebs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cabinets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView336()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cabinets", @"
    SELECT VALUE -- Constructing cabinets
        [PostgresModel.Store.cabinet](T1.cabinet_oid, T1.cabinet_otdel, T1.cabinet_building, T1.[cabinet.cabinet_name], T1.cabinet_phone, T1.cabinet_synonym)
    FROM (
        SELECT 
            T.Oid AS cabinet_oid, 
            T.Otdel AS cabinet_otdel, 
            T.Building AS cabinet_building, 
            T.CabinetName AS [cabinet.cabinet_name], 
            T.Phone AS cabinet_phone, 
            T.Synonym AS cabinet_synonym, 
            True AS _from0
        FROM PostgresEntities.Cabinets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bills
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView337()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bills", @"
    SELECT VALUE -- Constructing bills
        [PostgresModel.Store.bill](T1.bill_oid, T1.[bill.appendix_id], T1.[bill.sotr_create], T1.[bill.sotr_pay], T1.[bill.create_dt], T1.[bill.pay_dt], T1.[bill.pay_status], T1.bill_num, T1.[bill.annul_dt], T1.[bill.sotr_annul], T1.[bill.pay_sum])
    FROM (
        SELECT 
            T.Oid AS bill_oid, 
            T.AppendixId AS [bill.appendix_id], 
            T.SotrCreate AS [bill.sotr_create], 
            T.SotrPay AS [bill.sotr_pay], 
            T.CreateDt AS [bill.create_dt], 
            T.PayDt AS [bill.pay_dt], 
            T.PayStatus AS [bill.pay_status], 
            T.Num AS bill_num, 
            T.AnnulDt AS [bill.annul_dt], 
            T.SotrAnnul AS [bill.sotr_annul], 
            T.PaySum AS [bill.pay_sum], 
            True AS _from0
        FROM PostgresEntities.Bills AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bill_uslugs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView338()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bill_uslugs", @"
    SELECT VALUE -- Constructing bill_uslugs
        [PostgresModel.Store.bill_uslug](T1.[bill_uslug.oid], T1.[bill_uslug.bill_id], T1.[bill_uslug.cost], T1.[bill_uslug.presc_service], T1.[bill_uslug.transaction])
    FROM (
        SELECT 
            T.Oid AS [bill_uslug.oid], 
            T.BillId AS [bill_uslug.bill_id], 
            T.Cost AS [bill_uslug.cost], 
            T.PrescService AS [bill_uslug.presc_service], 
            T.Transaction AS [bill_uslug.transaction], 
            True AS _from0
        FROM PostgresEntities.BillUslugs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.nosology_mkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView339()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.nosology_mkb10s", @"
    SELECT VALUE -- Constructing nosology_mkb10s
        [PostgresModel.Store.nosology_mkb10](T1.[nosology_mkb10.oid], T1.[nosology_mkb10.nosology], T1.[nosology_mkb10.mkb10])
    FROM (
        SELECT 
            T.Oid AS [nosology_mkb10.oid], 
            T.Nosology AS [nosology_mkb10.nosology], 
            T.Mkb10 AS [nosology_mkb10.mkb10], 
            True AS _from0
        FROM PostgresEntities.NosologyMkb10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lab_probe_colors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView340()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lab_probe_colors", @"
    SELECT VALUE -- Constructing lab_probe_colors
        [PostgresModel.Store.lab_probe_color](T1.[lab_probe_color.oid], T1.[lab_probe_color.name], T1.[lab_probe_color.code], T1.[lab_probe_color.show])
    FROM (
        SELECT 
            T.Oid AS [lab_probe_color.oid], 
            T.Name AS [lab_probe_color.name], 
            T.Code AS [lab_probe_color.code], 
            T.Show AS [lab_probe_color.show], 
            True AS _from0
        FROM PostgresEntities.LabProbeColors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lab_run_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView341()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lab_run_types", @"
    SELECT VALUE -- Constructing lab_run_types
        [PostgresModel.Store.lab_run_type](T1.[lab_run_type.oid], T1.[lab_run_type.name], T1.[lab_run_type.show])
    FROM (
        SELECT 
            T.Oid AS [lab_run_type.oid], 
            T.Name AS [lab_run_type.name], 
            T.Show AS [lab_run_type.show], 
            True AS _from0
        FROM PostgresEntities.LabRunTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lab_work_places
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView342()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lab_work_places", @"
    SELECT VALUE -- Constructing lab_work_places
        [PostgresModel.Store.lab_work_place](T1.[lab_work_place.oid], T1.[lab_work_place.name], T1.[lab_work_place.parent], T1.[lab_work_place.order], T1.[lab_work_place.otdel], T1.[lab_work_place.del])
    FROM (
        SELECT 
            T.Oid AS [lab_work_place.oid], 
            T.Name AS [lab_work_place.name], 
            T.Parent AS [lab_work_place.parent], 
            T.[Order] AS [lab_work_place.order], 
            T.Otdel AS [lab_work_place.otdel], 
            T.Del AS [lab_work_place.del], 
            True AS _from0
        FROM PostgresEntities.LabWorkPlaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.laboratory_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView343()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.laboratory_params", @"
    SELECT VALUE -- Constructing laboratory_params
        [PostgresModel.Store.laboratory_param](T1.[laboratory_param.oid], T1.[laboratory_param.color_id], T1.[laboratory_param.run_type_id], T1.[laboratory_param.work_place_id], T1.[laboratory_param.autocomplete])
    FROM (
        SELECT 
            T.Oid AS [laboratory_param.oid], 
            T.ColorId AS [laboratory_param.color_id], 
            T.RunTypeId AS [laboratory_param.run_type_id], 
            T.WorkPlaceId AS [laboratory_param.work_place_id], 
            T.Autocomplete AS [laboratory_param.autocomplete], 
            True AS _from0
        FROM PostgresEntities.LaboratoryParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_cards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView344()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_cards", @"
    SELECT VALUE -- Constructing presc_cards
        [PostgresModel.Store.presc_card](T1.[presc_card.oid], T1.[presc_card.reg_date], T1.[presc_card.probe], T1.[presc_card.lotok], T1.[presc_card.line], T1.[presc_card.id_answer], T1.[presc_card.presc_id], T1.[presc_card.status], T1.[presc_card.sign], T1.[presc_card.conclusion], T1.[presc_card.date_entry_result], T1.[presc_card.sotr_id])
    FROM (
        SELECT 
            T.Oid AS [presc_card.oid], 
            T.RegDate AS [presc_card.reg_date], 
            T.Probe AS [presc_card.probe], 
            T.Lotok AS [presc_card.lotok], 
            T.Line AS [presc_card.line], 
            T.IdAnswer AS [presc_card.id_answer], 
            T.PrescId AS [presc_card.presc_id], 
            T.Status AS [presc_card.status], 
            T.Sign AS [presc_card.sign], 
            T.Conclusion AS [presc_card.conclusion], 
            T.DateEntryResult AS [presc_card.date_entry_result], 
            T.SotrId AS [presc_card.sotr_id], 
            True AS _from0
        FROM PostgresEntities.PrescCards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.prescparam_storages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView345()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.prescparam_storages", @"
    SELECT VALUE -- Constructing prescparam_storages
        [PostgresModel.Store.prescparam_storage](T1.[prescparam_storage.oid], T1.[prescparam_storage.presc_id], T1.[prescparam_storage.prescparam_id])
    FROM (
        SELECT 
            T.Oid AS [prescparam_storage.oid], 
            T.PrescId AS [prescparam_storage.presc_id], 
            T.PrescparamId AS [prescparam_storage.prescparam_id], 
            True AS _from0
        FROM PostgresEntities.PrescparamStorages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.prescparam_values
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView346()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.prescparam_values", @"
    SELECT VALUE -- Constructing prescparam_values
        [PostgresModel.Store.prescparam_values](T1.[prescparam_values.oid], T1.[prescparam_values.prescparam_id], T1.[prescparam_values.values_int], T1.[prescparam_values.values_text], T1.[prescparam_values.values_combobox], T1.[prescparam_values.values_sting], T1.[prescparam_values.presc_card])
    FROM (
        SELECT 
            T.Oid AS [prescparam_values.oid], 
            T.PrescparamId AS [prescparam_values.prescparam_id], 
            T.ValuesInt AS [prescparam_values.values_int], 
            T.ValuesText AS [prescparam_values.values_text], 
            T.ValuesCombobox AS [prescparam_values.values_combobox], 
            T.ValuesSting AS [prescparam_values.values_sting], 
            T.PrescCard AS [prescparam_values.presc_card], 
            True AS _from0
        FROM PostgresEntities.PrescparamValues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presctypeparams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView347()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presctypeparams", @"
    SELECT VALUE -- Constructing presctypeparams
        [PostgresModel.Store.presctypeparam](T1.presctypeparam_oid, T1.[presctypeparam.presctype_id], T1.[presctypeparam.parametr_type], T1.[presctypeparam.parametr_name], T1.presctypeparam_del, T1.[presctypeparam.additional_type], T1.presctypeparam_order, T1.presctypeparam_measure, T1.presctypeparam_visible, T1.presctypeparam_synonim)
    FROM (
        SELECT 
            T.Oid AS presctypeparam_oid, 
            T.PresctypeId AS [presctypeparam.presctype_id], 
            T.ParametrType AS [presctypeparam.parametr_type], 
            T.ParametrName AS [presctypeparam.parametr_name], 
            T.Del AS presctypeparam_del, 
            T.AdditionalType AS [presctypeparam.additional_type], 
            T.[Order] AS presctypeparam_order, 
            T.Measure AS presctypeparam_measure, 
            T.Visible AS presctypeparam_visible, 
            T.Synonim AS presctypeparam_synonim, 
            True AS _from0
        FROM PostgresEntities.Presctypeparams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.param_datatypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView348()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.param_datatypes", @"
    SELECT VALUE -- Constructing param_datatypes
        [PostgresModel.Store.param_datatype](T1.[param_datatype.oid], T1.[param_datatype.name], T1.[param_datatype.synonym])
    FROM (
        SELECT 
            T.Oid AS [param_datatype.oid], 
            T.Name AS [param_datatype.name], 
            T.Synonym AS [param_datatype.synonym], 
            True AS _from0
        FROM PostgresEntities.ParamDatatypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.measures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView349()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.measures", @"
    SELECT VALUE -- Constructing measures
        [PostgresModel.Store.measure](T1.measure_oid, T1.measure_name, T1.measure_okei, T1.measure_rlsdrugform, T1.[measure.measure_from], T1.measure_fullname, T1.measure_store, T1.measure_lpu)
    FROM (
        SELECT 
            T.Oid AS measure_oid, 
            T.Name AS measure_name, 
            T.Okei AS measure_okei, 
            T.Rlsdrugform AS measure_rlsdrugform, 
            T.MeasureFrom AS [measure.measure_from], 
            T.Fullname AS measure_fullname, 
            T.Store AS measure_store, 
            T.Lpu AS measure_lpu, 
            True AS _from0
        FROM PostgresEntities.Measures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_relation_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView350()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_relation_status", @"
    SELECT VALUE -- Constructing people_relation_status
        [PostgresModel.Store.people_relation_status](T1.[people_relation_status.oid], T1.[people_relation_status.name], T1.[people_relation_status.foms_code])
    FROM (
        SELECT 
            T.Oid AS [people_relation_status.oid], 
            T.Name AS [people_relation_status.name], 
            T.FomsCode AS [people_relation_status.foms_code], 
            True AS _from0
        FROM PostgresEntities.PeopleRelationStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_relations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView351()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_relations", @"
    SELECT VALUE -- Constructing people_relations
        [PostgresModel.Store.people_relation](T1.[people_relation.oid], T1.[people_relation.people], T1.[people_relation.people_relation], T1.[people_relation.people_relation_status])
    FROM (
        SELECT 
            T.Oid AS [people_relation.oid], 
            T.People AS [people_relation.people], 
            T.PeopleRelation1 AS [people_relation.people_relation], 
            T.PeopleRelationStatus AS [people_relation.people_relation_status], 
            True AS _from0
        FROM PostgresEntities.PeopleRelations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView352()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_templates", "\r\n    SELECT VALUE -- Constructing trsf_templates\r\n        [PostgresModel.Store.t" +
                    "rsf_template](T1.[trsf_template.oid], T1.[trsf_template.name], T1.[trsf_template" +
                    ".date_create], T1.[trsf_template.del], T1.[trsf_template.people_type], T1.[trsf_" +
                    "template.doctype], T1.[trsf_template.sk], T1.[trsf_template.title], T1.[trsf_tem" +
                    "plate.groupby], T1.[trsf_template.signature], T1.[trsf_template.insurcompany], T" +
                    "1.[trsf_template.people], T1.[trsf_template.sf_code], T1.[trsf_template.otdel], " +
                    "T1.[trsf_template.sysuser_create], T1.[trsf_template.sysuser_del], T1.[trsf_temp" +
                    "late.usl], T1.[trsf_template.oper], T1.[trsf_template.kdn])\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.Oid AS [trsf_template.oid], \r\n            T.Name AS [trs" +
                    "f_template.name], \r\n            T.DateCreate AS [trsf_template.date_create], \r\n " +
                    "           T.Del AS [trsf_template.del], \r\n            T.PeopleType AS [trsf_tem" +
                    "plate.people_type], \r\n            T.Doctype AS [trsf_template.doctype], \r\n      " +
                    "      T.Sk AS [trsf_template.sk], \r\n            T.Title AS [trsf_template.title]" +
                    ", \r\n            T.Groupby AS [trsf_template.groupby], \r\n            T.Signature " +
                    "AS [trsf_template.signature], \r\n            T.Insurcompany AS [trsf_template.ins" +
                    "urcompany], \r\n            T.People AS [trsf_template.people], \r\n            T.Sf" +
                    "Code AS [trsf_template.sf_code], \r\n            T.Otdel AS [trsf_template.otdel]," +
                    " \r\n            T.SysuserCreate AS [trsf_template.sysuser_create], \r\n            " +
                    "T.SysuserDel AS [trsf_template.sysuser_del], \r\n            T.Usl AS [trsf_templa" +
                    "te.usl], \r\n            T.Oper AS [trsf_template.oper], \r\n            T.Kdn AS [t" +
                    "rsf_template.kdn], \r\n            True AS _from0\r\n        FROM PostgresEntities.T" +
                    "rsfTemplates AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_saved_reestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView353()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_saved_reestrs", @"
    SELECT VALUE -- Constructing trsf_saved_reestrs
        [PostgresModel.Store.trsf_saved_reestr](T1.[trsf_saved_reestr.trsf], T1.[trsf_saved_reestr.people], T1.[trsf_saved_reestr.service], T1.[trsf_saved_reestr.insur], T1.[trsf_saved_reestr.count], T1.[trsf_saved_reestr.cost], T1.[trsf_saved_reestr.presc], T1.[trsf_saved_reestr.oid])
    FROM (
        SELECT 
            T.Trsf AS [trsf_saved_reestr.trsf], 
            T.People AS [trsf_saved_reestr.people], 
            T.Service AS [trsf_saved_reestr.service], 
            T.Insur AS [trsf_saved_reestr.insur], 
            T.Count AS [trsf_saved_reestr.count], 
            T.Cost AS [trsf_saved_reestr.cost], 
            T.Presc AS [trsf_saved_reestr.presc], 
            T.Oid AS [trsf_saved_reestr.oid], 
            True AS _from0
        FROM PostgresEntities.TrsfSavedReestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView354()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsfs", @"
    SELECT VALUE -- Constructing trsfs
        [PostgresModel.Store.trsf](T1.trsf_oid, T1.[trsf.date_start], T1.[trsf.date_end], T1.[trsf.people_type], T1.trsf_doctype, T1.trsf_insurcompany, T1.trsf_people, T1.trsf_title, T1.trsf_signature, T1.[trsf.date_create], T1.trsf_del, T1.[trsf.date_del], T1.[trsf.sf_code], T1.trsf_groupby, T1.[trsf.date_edit], T1.trsf_sum, T1.[trsf.rsf_num], T1.[trsf.date_rsf], T1.trsf_otdel, T1.trsf_usl, T1.trsf_oper, T1.trsf_status)
    FROM (
        SELECT 
            T.Oid AS trsf_oid, 
            T.DateStart AS [trsf.date_start], 
            T.DateEnd AS [trsf.date_end], 
            T.PeopleType AS [trsf.people_type], 
            T.Doctype AS trsf_doctype, 
            T.Insurcompany AS trsf_insurcompany, 
            T.People AS trsf_people, 
            T.Title AS trsf_title, 
            T.Signature AS trsf_signature, 
            T.DateCreate AS [trsf.date_create], 
            T.Del AS trsf_del, 
            T.DateDel AS [trsf.date_del], 
            T.SfCode AS [trsf.sf_code], 
            T.Groupby AS trsf_groupby, 
            T.DateEdit AS [trsf.date_edit], 
            T.Sum AS trsf_sum, 
            T.RsfNum AS [trsf.rsf_num], 
            T.DateRsf AS [trsf.date_rsf], 
            T.Otdel AS trsf_otdel, 
            T.Usl AS trsf_usl, 
            T.Oper AS trsf_oper, 
            T.Status AS trsf_status, 
            True AS _from0
        FROM PostgresEntities.Trsfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_temp_reestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView355()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_temp_reestrs", @"
    SELECT VALUE -- Constructing trsf_temp_reestrs
        [PostgresModel.Store.trsf_temp_reestr](T1.[trsf_temp_reestr.oid], T1.[trsf_temp_reestr.people], T1.[trsf_temp_reestr.presctype], T1.[trsf_temp_reestr.service], T1.[trsf_temp_reestr.insur], T1.[trsf_temp_reestr.count], T1.[trsf_temp_reestr.cost])
    FROM (
        SELECT 
            T.Oid AS [trsf_temp_reestr.oid], 
            T.People AS [trsf_temp_reestr.people], 
            T.Presctype AS [trsf_temp_reestr.presctype], 
            T.Service AS [trsf_temp_reestr.service], 
            T.Insur AS [trsf_temp_reestr.insur], 
            T.Count AS [trsf_temp_reestr.count], 
            T.Cost AS [trsf_temp_reestr.cost], 
            True AS _from0
        FROM PostgresEntities.TrsfTempReestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_template_columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView356()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_template_columns", @"
    SELECT VALUE -- Constructing trsf_template_columns
        [PostgresModel.Store.trsf_template_columns](T1.[trsf_template_columns.oid], T1.[trsf_template_columns.template], T1.[trsf_template_columns.order], T1.[trsf_template_columns.all_columns_id], T1.[trsf_template_columns.custom_caption])
    FROM (
        SELECT 
            T.Oid AS [trsf_template_columns.oid], 
            T.Template AS [trsf_template_columns.template], 
            T.[Order] AS [trsf_template_columns.order], 
            T.AllColumnsId AS [trsf_template_columns.all_columns_id], 
            T.CustomCaption AS [trsf_template_columns.custom_caption], 
            True AS _from0
        FROM PostgresEntities.TrsfTemplateColumns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stattickets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView357()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stattickets", "\r\n    SELECT VALUE -- Constructing stattickets\r\n        [PostgresModel.Store.stat" +
                    "ticket](T1.statticket_id, T1.[statticket.empo_id], T1.[statticket.empc_id], T1.[" +
                    "statticket.idoc_id], T1.[statticket.result_id], T1.[statticket.subresult_id], T1" +
                    ".statticket_otdel, T1.statticket_defects, T1.statticket_isalcohol, T1.[statticke" +
                    "t.die_reason], T1.[statticket.die_reason_mkb_10], T1.statticket_aids, T1.stattic" +
                    "ket_rw, T1.[statticket.expell_date], T1.statticket_sign, T1.[statticket.sign_sot" +
                    "r], T1.[statticket.export_foms_comment], T1.statticket_tmodel, T1.statticket_tra" +
                    "uma, T1.[statticket.child_number], T1.[statticket.reason_late], T1.[statticket.e" +
                    "xport_foms])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS statticket_id, \r\n" +
                    "            T.EmpoId AS [statticket.empo_id], \r\n            T.EmpcId AS [stattic" +
                    "ket.empc_id], \r\n            T.IdocId AS [statticket.idoc_id], \r\n            T.Re" +
                    "sultId AS [statticket.result_id], \r\n            T.SubresultId AS [statticket.sub" +
                    "result_id], \r\n            T.Otdel AS statticket_otdel, \r\n            T.Defects A" +
                    "S statticket_defects, \r\n            T.Isalcohol AS statticket_isalcohol, \r\n     " +
                    "       T.DieReason AS [statticket.die_reason], \r\n            T.DieReasonMkb10 AS" +
                    " [statticket.die_reason_mkb_10], \r\n            T.Aids AS statticket_aids, \r\n    " +
                    "        T.Rw AS statticket_rw, \r\n            T.ExpellDate AS [statticket.expell_" +
                    "date], \r\n            T.Sign AS statticket_sign, \r\n            T.SignSotr AS [sta" +
                    "tticket.sign_sotr], \r\n            T.ExportFomsComment AS [statticket.export_foms" +
                    "_comment], \r\n            T.Tmodel AS statticket_tmodel, \r\n            T.Trauma A" +
                    "S statticket_trauma, \r\n            T.ChildNumber AS [statticket.child_number], \r" +
                    "\n            T.ReasonLate AS [statticket.reason_late], \r\n            T.ExportFom" +
                    "s AS [statticket.export_foms], \r\n            True AS _from0\r\n        FROM Postgr" +
                    "esEntities.Stattickets AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView358()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_params", @"
    SELECT VALUE -- Constructing sotr_params
        [PostgresModel.Store.sotr_param](T1.[sotr_param.oid], T1.[sotr_param.presctype_autodefault])
    FROM (
        SELECT 
            T.Oid AS [sotr_param.oid], 
            T.PresctypeAutodefault AS [sotr_param.presctype_autodefault], 
            True AS _from0
        FROM PostgresEntities.SotrParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView359()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_columns", @"
    SELECT VALUE -- Constructing trsf_columns
        [PostgresModel.Store.trsf_columns](T1.[trsf_columns.oid], T1.[trsf_columns.trsf_id], T1.[trsf_columns.order], T1.[trsf_columns.all_columns_id], T1.[trsf_columns.custom_caption])
    FROM (
        SELECT 
            T.Oid AS [trsf_columns.oid], 
            T.TrsfId AS [trsf_columns.trsf_id], 
            T.[Order] AS [trsf_columns.order], 
            T.AllColumnsId AS [trsf_columns.all_columns_id], 
            T.CustomCaption AS [trsf_columns.custom_caption], 
            True AS _from0
        FROM PostgresEntities.TrsfColumns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.trsf_all_columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView360()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.trsf_all_columns", @"
    SELECT VALUE -- Constructing trsf_all_columns
        [PostgresModel.Store.trsf_all_columns](T1.[trsf_all_columns.oid], T1.[trsf_all_columns.fieldname], T1.[trsf_all_columns.caption], T1.[trsf_all_columns.sql], T1.[trsf_all_columns.is_primarykey], T1.[trsf_all_columns.is_hidden], T1.[trsf_all_columns.align], T1.[trsf_all_columns.width], T1.[trsf_all_columns.order])
    FROM (
        SELECT 
            T.Oid AS [trsf_all_columns.oid], 
            T.Fieldname AS [trsf_all_columns.fieldname], 
            T.Caption AS [trsf_all_columns.caption], 
            T.Sql AS [trsf_all_columns.sql], 
            T.IsPrimarykey AS [trsf_all_columns.is_primarykey], 
            T.IsHidden AS [trsf_all_columns.is_hidden], 
            T.Align AS [trsf_all_columns.align], 
            T.Width AS [trsf_all_columns.width], 
            T.[Order] AS [trsf_all_columns.order], 
            True AS _from0
        FROM PostgresEntities.TrsfAllColumns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_purposes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView361()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_purposes", @"
    SELECT VALUE -- Constructing xray_purposes
        [PostgresModel.Store.xray_purpose](T1.[xray_purpose.oid], T1.[xray_purpose.name])
    FROM (
        SELECT 
            T.Oid AS [xray_purpose.oid], 
            T.Name AS [xray_purpose.name], 
            True AS _from0
        FROM PostgresEntities.XrayPurposes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_urgencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView362()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_urgencies", @"
    SELECT VALUE -- Constructing xray_urgencies
        [PostgresModel.Store.xray_urgency](T1.[xray_urgency.oid], T1.[xray_urgency.name], T1.[xray_urgency.AdmissionType])
    FROM (
        SELECT 
            T.Oid AS [xray_urgency.oid], 
            T.Name AS [xray_urgency.name], 
            T.AdmissionType AS [xray_urgency.AdmissionType], 
            True AS _from0
        FROM PostgresEntities.XrayUrgencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_referrals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView363()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_referrals", @"
    SELECT VALUE -- Constructing xray_referrals
        [PostgresModel.Store.xray_referral](T1.[xray_referral.oid], T1.[xray_referral.mdoc_id], T1.[xray_referral.careate_sotr_id], T1.[xray_referral.register_sotr_id], T1.[xray_referral.laborant_sotr_id], T1.[xray_referral.purpose_id], T1.[xray_referral.urgency_id], T1.[xray_referral.bonus_id], T1.[xray_referral.duty], T1.[xray_referral.referal_num], T1.[xray_referral.create_dt], T1.[xray_referral.run_dt])
    FROM (
        SELECT 
            T.Oid AS [xray_referral.oid], 
            T.MdocId AS [xray_referral.mdoc_id], 
            T.CareateSotrId AS [xray_referral.careate_sotr_id], 
            T.RegisterSotrId AS [xray_referral.register_sotr_id], 
            T.LaborantSotrId AS [xray_referral.laborant_sotr_id], 
            T.PurposeId AS [xray_referral.purpose_id], 
            T.UrgencyId AS [xray_referral.urgency_id], 
            T.BonusId AS [xray_referral.bonus_id], 
            T.Duty AS [xray_referral.duty], 
            T.ReferalNum AS [xray_referral.referal_num], 
            T.CreateDt AS [xray_referral.create_dt], 
            T.RunDt AS [xray_referral.run_dt], 
            True AS _from0
        FROM PostgresEntities.XrayReferrals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diagnoz_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView364()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diagnoz_templates", @"
    SELECT VALUE -- Constructing diagnoz_templates
        [PostgresModel.Store.diagnoz_template](T1.[diagnoz_template.oid], T1.[diagnoz_template.parent], T1.[diagnoz_template.name], T1.[diagnoz_template.type], T1.[diagnoz_template.valid], T1.[diagnoz_template.mkb10_code], T1.[diagnoz_template.mkb10], T1.[diagnoz_template.sysuser])
    FROM (
        SELECT 
            T.Oid AS [diagnoz_template.oid], 
            T.Parent AS [diagnoz_template.parent], 
            T.Name AS [diagnoz_template.name], 
            T.Type AS [diagnoz_template.type], 
            T.Valid AS [diagnoz_template.valid], 
            T.Mkb10Code AS [diagnoz_template.mkb10_code], 
            T.Mkb10 AS [diagnoz_template.mkb10], 
            T.Sysuser AS [diagnoz_template.sysuser], 
            True AS _from0
        FROM PostgresEntities.DiagnozTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_presctemplatedetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView365()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_presctemplatedetails", @"
    SELECT VALUE -- Constructing system_presctemplatedetails
        [PostgresModel.Store.system_presctemplatedetail](T1.[system_presctemplatedetail.oid], T1.[system_presctemplatedetail.presctype], T1.[system_presctemplatedetail.system_template_oid], T1.[system_presctemplatedetail.default])
    FROM (
        SELECT 
            T.Oid AS [system_presctemplatedetail.oid], 
            T.Presctype AS [system_presctemplatedetail.presctype], 
            T.SystemTemplateOid AS [system_presctemplatedetail.system_template_oid], 
            T.Default AS [system_presctemplatedetail.default], 
            True AS _from0
        FROM PostgresEntities.SystemPresctemplatedetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_xrayparams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView366()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_xrayparams", @"
    SELECT VALUE -- Constructing presc_xrayparams
        [PostgresModel.Store.presc_xrayparam](T1.[presc_xrayparam.oid], T1.[presc_xrayparam.shots_count], T1.[presc_xrayparam.runtime], T1.[presc_xrayparam.dose])
    FROM (
        SELECT 
            T.Oid AS [presc_xrayparam.oid], 
            T.ShotsCount AS [presc_xrayparam.shots_count], 
            T.Runtime AS [presc_xrayparam.runtime], 
            T.Dose AS [presc_xrayparam.dose], 
            True AS _from0
        FROM PostgresEntities.PrescXrayparams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView367()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_params", @"
    SELECT VALUE -- Constructing xray_params
        [PostgresModel.Store.xray_param](T1.[xray_param.oid], T1.[xray_param.shots_count], T1.[xray_param.runtime], T1.[xray_param.dose], T1.[xray_param.dicom_reduction_id])
    FROM (
        SELECT 
            T.Oid AS [xray_param.oid], 
            T.ShotsCount AS [xray_param.shots_count], 
            T.Runtime AS [xray_param.runtime], 
            T.Dose AS [xray_param.dose], 
            T.DicomReductionId AS [xray_param.dicom_reduction_id], 
            True AS _from0
        FROM PostgresEntities.XrayParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_mdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView368()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_mdoctypes", @"
    SELECT VALUE -- Constructing otdel_mdoctypes
        [PostgresModel.Store.otdel_mdoctype](T1.[otdel_mdoctype.oid], T1.[otdel_mdoctype.mdoctype_id], T1.[otdel_mdoctype.otdel_id], T1.[otdel_mdoctype.bind], T1.[otdel_mdoctype.is_default], T1.[otdel_mdoctype.mdoc_group])
    FROM (
        SELECT 
            T.Oid AS [otdel_mdoctype.oid], 
            T.MdoctypeId AS [otdel_mdoctype.mdoctype_id], 
            T.OtdelId AS [otdel_mdoctype.otdel_id], 
            T.Bind AS [otdel_mdoctype.bind], 
            T.IsDefault AS [otdel_mdoctype.is_default], 
            T.MdocGroup AS [otdel_mdoctype.mdoc_group], 
            True AS _from0
        FROM PostgresEntities.OtdelMdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_dicom_reductions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView369()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_dicom_reductions", @"
    SELECT VALUE -- Constructing xray_dicom_reductions
        [PostgresModel.Store.xray_dicom_reduction](T1.[xray_dicom_reduction.oid], T1.[xray_dicom_reduction.name], T1.[xray_dicom_reduction.code])
    FROM (
        SELECT 
            T.Oid AS [xray_dicom_reduction.oid], 
            T.Name AS [xray_dicom_reduction.name], 
            T.Code AS [xray_dicom_reduction.code], 
            True AS _from0
        FROM PostgresEntities.XrayDicomReductions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView370()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diaries", @"
    SELECT VALUE -- Constructing diaries
        [PostgresModel.Store.diary](T1.diary_oid, T1.diary_mdoc, T1.diary_content, T1.diary_lastdate, T1.[diary.diary_type], T1.diary_presctype, T1.diary_sotr)
    FROM (
        SELECT 
            T.Oid AS diary_oid, 
            T.Mdoc AS diary_mdoc, 
            T.Content AS diary_content, 
            T.Lastdate AS diary_lastdate, 
            T.DiaryType AS [diary.diary_type], 
            T.Presctype AS diary_presctype, 
            T.Sotr AS diary_sotr, 
            True AS _from0
        FROM PostgresEntities.Diaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diary_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView371()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diary_types", @"
    SELECT VALUE -- Constructing diary_types
        [PostgresModel.Store.diary_type](T1.[diary_type.oid], T1.[diary_type.name], T1.[diary_type.ib_sections])
    FROM (
        SELECT 
            T.Oid AS [diary_type.oid], 
            T.Name AS [diary_type.name], 
            T.IbSections AS [diary_type.ib_sections], 
            True AS _from0
        FROM PostgresEntities.DiaryTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.benefit_finansing_lgot_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView372()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.benefit_finansing_lgot_types", @"
    SELECT VALUE -- Constructing benefit_finansing_lgot_types
        [PostgresModel.Store.benefit_finansing_lgot_type](T1.[benefit_finansing_lgot_type.oid], T1.[benefit_finansing_lgot_type.benefit_finansing], T1.[benefit_finansing_lgot_type.lgot_type])
    FROM (
        SELECT 
            T.Oid AS [benefit_finansing_lgot_type.oid], 
            T.BenefitFinansing AS [benefit_finansing_lgot_type.benefit_finansing], 
            T.LgotType AS [benefit_finansing_lgot_type.lgot_type], 
            True AS _from0
        FROM PostgresEntities.BenefitFinansingLgotTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.laboratory_norms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView373()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2479);
            viewString.Append("\r\n    SELECT VALUE -- Constructing laboratory_norms\r\n        [PostgresModel.Stor");
            viewString.Append("e.laboratory_norm](T1.[laboratory_norm.oid], T1.[laboratory_norm.age_year_begin]");
            viewString.Append(", T1.[laboratory_norm.age_month_begin], T1.[laboratory_norm.age_day_begin], T1.[");
            viewString.Append("laboratory_norm.age_year_end], T1.[laboratory_norm.age_month_end], T1.[laborator");
            viewString.Append("y_norm.age_day_end], T1.[laboratory_norm.min_men], T1.[laboratory_norm.max_men],");
            viewString.Append(" T1.[laboratory_norm.min_woman], T1.[laboratory_norm.max_woman], T1.[laboratory_");
            viewString.Append("norm.direct_men], T1.[laboratory_norm.direct_woman], T1.[laboratory_norm.entry_m");
            viewString.Append("en], T1.[laboratory_norm.entry_woman], T1.[laboratory_norm.entire_cycle], T1.[la");
            viewString.Append("boratory_norm.follicular_phase], T1.[laboratory_norm.midcycle], T1.[laboratory_n");
            viewString.Append("orm.luteal_phase], T1.[laboratory_norm.trimestr_1], T1.[laboratory_norm.trimestr");
            viewString.Append("_2], T1.[laboratory_norm.trimestr_3], T1.[laboratory_norm.presctypeparam], T1.[l");
            viewString.Append("aboratory_norm.range_entry])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS ");
            viewString.Append("[laboratory_norm.oid], \r\n            T.AgeYearBegin AS [laboratory_norm.age_year");
            viewString.Append("_begin], \r\n            T.AgeMonthBegin AS [laboratory_norm.age_month_begin], \r\n ");
            viewString.Append("           T.AgeDayBegin AS [laboratory_norm.age_day_begin], \r\n            T.Age");
            viewString.Append("YearEnd AS [laboratory_norm.age_year_end], \r\n            T.AgeMonthEnd AS [labor");
            viewString.Append("atory_norm.age_month_end], \r\n            T.AgeDayEnd AS [laboratory_norm.age_day");
            viewString.Append("_end], \r\n            T.MinMen AS [laboratory_norm.min_men], \r\n            T.MaxM");
            viewString.Append("en AS [laboratory_norm.max_men], \r\n            T.MinWoman AS [laboratory_norm.mi");
            viewString.Append("n_woman], \r\n            T.MaxWoman AS [laboratory_norm.max_woman], \r\n           ");
            viewString.Append(" T.DirectMen AS [laboratory_norm.direct_men], \r\n            T.DirectWoman AS [la");
            viewString.Append("boratory_norm.direct_woman], \r\n            T.EntryMen AS [laboratory_norm.entry_");
            viewString.Append("men], \r\n            T.EntryWoman AS [laboratory_norm.entry_woman], \r\n           ");
            viewString.Append(" T.EntireCycle AS [laboratory_norm.entire_cycle], \r\n            T.FollicularPhas");
            viewString.Append("e AS [laboratory_norm.follicular_phase], \r\n            T.Midcycle AS [laboratory");
            viewString.Append("_norm.midcycle], \r\n            T.LutealPhase AS [laboratory_norm.luteal_phase], ");
            viewString.Append("\r\n            T.Trimestr1 AS [laboratory_norm.trimestr_1], \r\n            T.Trime");
            viewString.Append("str2 AS [laboratory_norm.trimestr_2], \r\n            T.Trimestr3 AS [laboratory_n");
            viewString.Append("orm.trimestr_3], \r\n            T.Presctypeparam AS [laboratory_norm.presctypepar");
            viewString.Append("am], \r\n            T.RangeEntry AS [laboratory_norm.range_entry], \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM PostgresEntities.LaboratoryNorms AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.laboratory_norms", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.drugstores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView374()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.drugstores", @"
    SELECT VALUE -- Constructing drugstores
        [PostgresModel.Store.drugstore](T1.drugstore_oid, T1.[drugstore.mo_group_oid])
    FROM (
        SELECT 
            T.Oid AS drugstore_oid, 
            T.MoGroupOid AS [drugstore.mo_group_oid], 
            True AS _from0
        FROM PostgresEntities.Drugstores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sysuser_pharmacies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView375()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sysuser_pharmacies", @"
    SELECT VALUE -- Constructing sysuser_pharmacies
        [PostgresModel.Store.sysuser_pharmacy](T1.[sysuser_pharmacy.oid], T1.[sysuser_pharmacy.drugstore])
    FROM (
        SELECT 
            T.Oid AS [sysuser_pharmacy.oid], 
            T.Drugstore AS [sysuser_pharmacy.drugstore], 
            True AS _from0
        FROM PostgresEntities.SysuserPharmacies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.nosology_mkb10_benefitmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView376()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.nosology_mkb10_benefitmedics", @"
    SELECT VALUE -- Constructing nosology_mkb10_benefitmedics
        [PostgresModel.Store.nosology_mkb10_benefitmedic](T1.[nosology_mkb10_benefitmedic.oid], T1.[nosology_mkb10_benefitmedic.nosology_mkb10], T1.[nosology_mkb10_benefitmedic.benefit_medic], T1.[nosology_mkb10_benefitmedic.description], T1.[nosology_mkb10_benefitmedic.dl])
    FROM (
        SELECT 
            T.Oid AS [nosology_mkb10_benefitmedic.oid], 
            T.NosologyMkb10 AS [nosology_mkb10_benefitmedic.nosology_mkb10], 
            T.BenefitMedic AS [nosology_mkb10_benefitmedic.benefit_medic], 
            T.Description AS [nosology_mkb10_benefitmedic.description], 
            T.Dl AS [nosology_mkb10_benefitmedic.dl], 
            True AS _from0
        FROM PostgresEntities.NosologyMkb10Benefitmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tradenames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView377()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tradenames", @"
    SELECT VALUE -- Constructing tradenames
        [PostgresModel.Store.tradenames](T1.tradenames_oid, T1.tradenames_id, T1.tradenames_name, T1.tradenames_iname)
    FROM (
        SELECT 
            T.Oid AS tradenames_oid, 
            T.Id AS tradenames_id, 
            T.Name AS tradenames_name, 
            T.Iname AS tradenames_iname, 
            True AS _from0
        FROM PostgresEntities.Tradenames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_prescription_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView378()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_prescription_types", @"
    SELECT VALUE -- Constructing recipe_prescription_types
        [PostgresModel.Store.recipe_prescription_type](T1.[recipe_prescription_type.oid], T1.[recipe_prescription_type.name], T1.[recipe_prescription_type.order])
    FROM (
        SELECT 
            T.Oid AS [recipe_prescription_type.oid], 
            T.Name AS [recipe_prescription_type.name], 
            T.[Order] AS [recipe_prescription_type.order], 
            True AS _from0
        FROM PostgresEntities.RecipePrescriptionTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tablos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView379()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tablos", @"
    SELECT VALUE -- Constructing tablos
        [PostgresModel.Store.tablo](T1.tablo_oid, T1.tablo_name, T1.tablo_lpu, T1.[tablo.tablo_type], T1.tablo_linecount, T1.tablo_refreshtime, T1.tablo_note, T1.tablo_linetext, T1.tablo_lpucreate, T1.[tablo.css_type], T1.tablo_code)
    FROM (
        SELECT 
            T.Oid AS tablo_oid, 
            T.Name AS tablo_name, 
            T.Lpu AS tablo_lpu, 
            T.TabloType AS [tablo.tablo_type], 
            T.Linecount AS tablo_linecount, 
            T.Refreshtime AS tablo_refreshtime, 
            T.Note AS tablo_note, 
            T.Linetext AS tablo_linetext, 
            T.Lpucreate AS tablo_lpucreate, 
            T.CssType AS [tablo.css_type], 
            T.Code AS tablo_code, 
            True AS _from0
        FROM PostgresEntities.Tablos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.receptiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView380()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.receptiontypes", "\r\n    SELECT VALUE -- Constructing receptiontypes\r\n        [PostgresModel.Store.r" +
                    "eceptiontype](T1.receptiontype_oid, T1.receptiontype_color, T1.[receptiontype.co" +
                    "lor_style], T1.receptiontype_name, T1.[receptiontype.from_age], T1.[receptiontyp" +
                    "e.to_age], T1.receptiontype_sex, T1.[receptiontype.color_text], T1.[receptiontyp" +
                    "e.color_select], T1.[receptiontype.color_mouseover], T1.receptiontype_lpu, T1.re" +
                    "ceptiontype_class, T1.[receptiontype.is_quoting], T1.[receptiontype.financing_ty" +
                    "pe], T1.[receptiontype.mdoc_type], T1.[receptiontype.busycolor_style], T1.[recep" +
                    "tiontype.busycolor_text], T1.[receptiontype.busycolor_select], T1.[receptiontype" +
                    ".busycolor_mouseover])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS recept" +
                    "iontype_oid, \r\n            T.Color AS receptiontype_color, \r\n            T.Color" +
                    "Style AS [receptiontype.color_style], \r\n            T.Name AS receptiontype_name" +
                    ", \r\n            T.FromAge AS [receptiontype.from_age], \r\n            T.ToAge AS " +
                    "[receptiontype.to_age], \r\n            T.Sex AS receptiontype_sex, \r\n            " +
                    "T.ColorText AS [receptiontype.color_text], \r\n            T.ColorSelect AS [recep" +
                    "tiontype.color_select], \r\n            T.ColorMouseover AS [receptiontype.color_m" +
                    "ouseover], \r\n            T.Lpu AS receptiontype_lpu, \r\n            T.Class AS re" +
                    "ceptiontype_class, \r\n            T.IsQuoting AS [receptiontype.is_quoting], \r\n  " +
                    "          T.FinancingType AS [receptiontype.financing_type], \r\n            T.Mdo" +
                    "cType AS [receptiontype.mdoc_type], \r\n            T.BusycolorStyle AS [reception" +
                    "type.busycolor_style], \r\n            T.BusycolorText AS [receptiontype.busycolor" +
                    "_text], \r\n            T.BusycolorSelect AS [receptiontype.busycolor_select], \r\n " +
                    "           T.BusycolorMouseover AS [receptiontype.busycolor_mouseover], \r\n      " +
                    "      True AS _from0\r\n        FROM PostgresEntities.Receptiontypes AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_actions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView381()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_actions", @"
    SELECT VALUE -- Constructing profex_actions
        [PostgresModel.Store.profex_actions](T1.[profex_actions.oid], T1.[profex_actions.name], T1.[profex_actions.creation_date], T1.[profex_actions.status_event], T1.[profex_actions.profex_contract], T1.[profex_actions.open_date], T1.[profex_actions.close_date], T1.[profex_actions.type], T1.[profex_actions.create_sysuser], T1.[profex_actions.create_otdel])
    FROM (
        SELECT 
            T.Oid AS [profex_actions.oid], 
            T.Name AS [profex_actions.name], 
            T.CreationDate AS [profex_actions.creation_date], 
            T.StatusEvent AS [profex_actions.status_event], 
            T.ProfexContract AS [profex_actions.profex_contract], 
            T.OpenDate AS [profex_actions.open_date], 
            T.CloseDate AS [profex_actions.close_date], 
            T.Type AS [profex_actions.type], 
            T.CreateSysuser AS [profex_actions.create_sysuser], 
            T.CreateOtdel AS [profex_actions.create_otdel], 
            True AS _from0
        FROM PostgresEntities.ProfexActions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView382()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_companies", @"
    SELECT VALUE -- Constructing profex_companies
        [PostgresModel.Store.profex_company](T1.[profex_company.oid], T1.[profex_company.company], T1.[profex_company.lpu])
    FROM (
        SELECT 
            T.Oid AS [profex_company.oid], 
            T.Company AS [profex_company.company], 
            T.Lpu AS [profex_company.lpu], 
            True AS _from0
        FROM PostgresEntities.ProfexCompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_contracts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView383()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_contracts", @"
    SELECT VALUE -- Constructing profex_contracts
        [PostgresModel.Store.profex_contract](T1.[profex_contract.oid], T1.[profex_contract.opene_date], T1.[profex_contract.close_date], T1.[profex_contract.num_contract], T1.[profex_contract.creation_date], T1.[profex_contract.create_sysuser], T1.[profex_contract.create_otdel], T1.[profex_contract.profex_company])
    FROM (
        SELECT 
            T.Oid AS [profex_contract.oid], 
            T.OpeneDate AS [profex_contract.opene_date], 
            T.CloseDate AS [profex_contract.close_date], 
            T.NumContract AS [profex_contract.num_contract], 
            T.CreationDate AS [profex_contract.creation_date], 
            T.CreateSysuser AS [profex_contract.create_sysuser], 
            T.CreateOtdel AS [profex_contract.create_otdel], 
            T.ProfexCompany AS [profex_contract.profex_company], 
            True AS _from0
        FROM PostgresEntities.ProfexContracts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView384()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactors", @"
    SELECT VALUE -- Constructing profex_proffactors
        [PostgresModel.Store.profex_proffactor](T1.[profex_proffactor.oid], T1.[profex_proffactor.code], T1.[profex_proffactor.name], T1.[profex_proffactor.parent])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor.oid], 
            T.Code AS [profex_proffactor.code], 
            T.Name AS [profex_proffactor.name], 
            T.Parent AS [profex_proffactor.parent], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactor_prescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView385()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactor_prescs", @"
    SELECT VALUE -- Constructing profex_proffactor_prescs
        [PostgresModel.Store.profex_proffactor_presc](T1.[profex_proffactor_presc.oid], T1.[profex_proffactor_presc.proffactor], T1.[profex_proffactor_presc.presctype], T1.[profex_proffactor_presc.indication])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor_presc.oid], 
            T.Proffactor AS [profex_proffactor_presc.proffactor], 
            T.Presctype AS [profex_proffactor_presc.presctype], 
            T.Indication AS [profex_proffactor_presc.indication], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactorPrescs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_actions_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView386()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_actions_types", @"
    SELECT VALUE -- Constructing profex_actions_types
        [PostgresModel.Store.profex_actions_type](T1.[profex_actions_type.oid], T1.[profex_actions_type.name])
    FROM (
        SELECT 
            T.Oid AS [profex_actions_type.oid], 
            T.Name AS [profex_actions_type.name], 
            True AS _from0
        FROM PostgresEntities.ProfexActionsTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_raitings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView387()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_raitings", @"
    SELECT VALUE -- Constructing expert_raitings
        [PostgresModel.Store.expert_raiting](T1.[expert_raiting.oid], T1.[expert_raiting.mdoc_id], T1.[expert_raiting.ambticket_id], T1.[expert_raiting.sysuser], T1.[expert_raiting.sysdate], T1.[expert_raiting.expert])
    FROM (
        SELECT 
            T.Oid AS [expert_raiting.oid], 
            T.MdocId AS [expert_raiting.mdoc_id], 
            T.AmbticketId AS [expert_raiting.ambticket_id], 
            T.Sysuser AS [expert_raiting.sysuser], 
            T.Sysdate AS [expert_raiting.sysdate], 
            T.Expert AS [expert_raiting.expert], 
            True AS _from0
        FROM PostgresEntities.ExpertRaitings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_raiting_section_parts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView388()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_raiting_section_parts", @"
    SELECT VALUE -- Constructing expert_raiting_section_parts
        [PostgresModel.Store.expert_raiting_section_part](T1.[expert_raiting_section_part.oid], T1.[expert_raiting_section_part.expert_section_id], T1.[expert_raiting_section_part.part_id], T1.[expert_raiting_section_part.is_main_expert])
    FROM (
        SELECT 
            T.Oid AS [expert_raiting_section_part.oid], 
            T.ExpertSectionId AS [expert_raiting_section_part.expert_section_id], 
            T.PartId AS [expert_raiting_section_part.part_id], 
            T.IsMainExpert AS [expert_raiting_section_part.is_main_expert], 
            True AS _from0
        FROM PostgresEntities.ExpertRaitingSectionParts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_raiting_sections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView389()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_raiting_sections", @"
    SELECT VALUE -- Constructing expert_raiting_sections
        [PostgresModel.Store.expert_raiting_sections](T1.[expert_raiting_sections.oid], T1.[expert_raiting_sections.section_id], T1.[expert_raiting_sections.expert_raiting_id])
    FROM (
        SELECT 
            T.Oid AS [expert_raiting_sections.oid], 
            T.SectionId AS [expert_raiting_sections.section_id], 
            T.ExpertRaitingId AS [expert_raiting_sections.expert_raiting_id], 
            True AS _from0
        FROM PostgresEntities.ExpertRaitingSections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_part_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView390()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_part_types", @"
    SELECT VALUE -- Constructing expert_part_types
        [PostgresModel.Store.expert_part_type](T1.[expert_part_type.oid], T1.[expert_part_type.name], T1.[expert_part_type.show])
    FROM (
        SELECT 
            T.Oid AS [expert_part_type.oid], 
            T.Name AS [expert_part_type.name], 
            T.Show AS [expert_part_type.show], 
            True AS _from0
        FROM PostgresEntities.ExpertPartTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_templations_parts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView391()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_templations_parts", @"
    SELECT VALUE -- Constructing expert_templations_parts
        [PostgresModel.Store.expert_templations_parts](T1.[expert_templations_parts.oid], T1.[expert_templations_parts.expert_part_type], T1.[expert_templations_parts.descriprions], T1.[expert_templations_parts.raiting], T1.[expert_templations_parts.expert_templations_sections])
    FROM (
        SELECT 
            T.Oid AS [expert_templations_parts.oid], 
            T.ExpertPartType AS [expert_templations_parts.expert_part_type], 
            T.Descriprions AS [expert_templations_parts.descriprions], 
            T.Raiting AS [expert_templations_parts.raiting], 
            T.ExpertTemplationsSections AS [expert_templations_parts.expert_templations_sections], 
            True AS _from0
        FROM PostgresEntities.ExpertTemplationsParts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_templations_sections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView392()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_templations_sections", @"
    SELECT VALUE -- Constructing expert_templations_sections
        [PostgresModel.Store.expert_templations_sections](T1.[expert_templations_sections.oid], T1.[expert_templations_sections.section_name], T1.[expert_templations_sections.lpu], T1.[expert_templations_sections.description], T1.[expert_templations_sections.order])
    FROM (
        SELECT 
            T.Oid AS [expert_templations_sections.oid], 
            T.SectionName AS [expert_templations_sections.section_name], 
            T.Lpu AS [expert_templations_sections.lpu], 
            T.Description AS [expert_templations_sections.description], 
            T.[Order] AS [expert_templations_sections.order], 
            True AS _from0
        FROM PostgresEntities.ExpertTemplationsSections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_specialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView393()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_specialties", @"
    SELECT VALUE -- Constructing people_specialties
        [PostgresModel.Store.people_specialty](T1.[people_specialty.oid], T1.[people_specialty.people], T1.[people_specialty.specialty], T1.[people_specialty.create_datetime], T1.[people_specialty.main])
    FROM (
        SELECT 
            T.Oid AS [people_specialty.oid], 
            T.People AS [people_specialty.people], 
            T.Specialty AS [people_specialty.specialty], 
            T.CreateDatetime AS [people_specialty.create_datetime], 
            T.Main AS [people_specialty.main], 
            True AS _from0
        FROM PostgresEntities.PeopleSpecialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.specialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView394()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.specialties", @"
    SELECT VALUE -- Constructing specialties
        [PostgresModel.Store.specialty](T1.specialty_oid, T1.specialty_name, T1.specialty_code)
    FROM (
        SELECT 
            T.Oid AS specialty_oid, 
            T.Name AS specialty_name, 
            T.Code AS specialty_code, 
            True AS _from0
        FROM PostgresEntities.Specialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.expert_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView395()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.expert_results", @"
    SELECT VALUE -- Constructing expert_results
        [PostgresModel.Store.expert_result](T1.[expert_result.oid], T1.[expert_result.min_value], T1.[expert_result.max_value], T1.[expert_result.raiting], T1.[expert_result.description], T1.[expert_result.lpu])
    FROM (
        SELECT 
            T.Oid AS [expert_result.oid], 
            T.MinValue AS [expert_result.min_value], 
            T.MaxValue AS [expert_result.max_value], 
            T.Raiting AS [expert_result.raiting], 
            T.Description AS [expert_result.description], 
            T.Lpu AS [expert_result.lpu], 
            True AS _from0
        FROM PostgresEntities.ExpertResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vip_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView396()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vip_people", @"
    SELECT VALUE -- Constructing vip_people
        [PostgresModel.Store.vip_people](T1.[vip_people.oid], T1.[vip_people.people], T1.[vip_people.mdoc], T1.[vip_people.lpu])
    FROM (
        SELECT 
            T.Oid AS [vip_people.oid], 
            T.People AS [vip_people.people], 
            T.Mdoc AS [vip_people.mdoc], 
            T.Lpu AS [vip_people.lpu], 
            True AS _from0
        FROM PostgresEntities.VipPeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mkb_10_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView397()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mkb_10_templates", @"
    SELECT VALUE -- Constructing mkb_10_templates
        [PostgresModel.Store.mkb_10_template](T1.[mkb_10_template.oid], T1.[mkb_10_template.name])
    FROM (
        SELECT 
            T.Oid AS [mkb_10_template.oid], 
            T.Name AS [mkb_10_template.name], 
            True AS _from0
        FROM PostgresEntities.Mkb10Templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.msec_mains
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView398()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.msec_mains", @"
    SELECT VALUE -- Constructing msec_mains
        [PostgresModel.Store.msec_main](T1.[msec_main.oid], T1.[msec_main.vk_main_id], T1.[msec_main.number], T1.[msec_main.date_napr], T1.[msec_main.msec_target], T1.[msec_main.msec_conclusion_id], T1.[msec_main.description], T1.[msec_main.invalid_group_id], T1.[msec_main.date_end_napr], T1.[msec_main.date_conclusion])
    FROM (
        SELECT 
            T.Oid AS [msec_main.oid], 
            T.VkMainId AS [msec_main.vk_main_id], 
            T.Number AS [msec_main.number], 
            T.DateNapr AS [msec_main.date_napr], 
            T.MsecTarget AS [msec_main.msec_target], 
            T.MsecConclusionId AS [msec_main.msec_conclusion_id], 
            T.Description AS [msec_main.description], 
            T.InvalidGroupId AS [msec_main.invalid_group_id], 
            T.DateEndNapr AS [msec_main.date_end_napr], 
            T.DateConclusion AS [msec_main.date_conclusion], 
            True AS _from0
        FROM PostgresEntities.MsecMains AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.msec_targets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView399()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.msec_targets", @"
    SELECT VALUE -- Constructing msec_targets
        [PostgresModel.Store.msec_target](T1.[msec_target.oid], T1.[msec_target.name], T1.[msec_target.short_name], T1.[msec_target.show], T1.[msec_target.name2], T1.[msec_target.status])
    FROM (
        SELECT 
            T.Oid AS [msec_target.oid], 
            T.Name AS [msec_target.name], 
            T.ShortName AS [msec_target.short_name], 
            T.Show AS [msec_target.show], 
            T.Name2 AS [msec_target.name2], 
            T.Status AS [msec_target.status], 
            True AS _from0
        FROM PostgresEntities.MsecTargets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_characters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView400()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_characters", @"
    SELECT VALUE -- Constructing vk_characters
        [PostgresModel.Store.vk_character](T1.[vk_character.oid], T1.[vk_character.name], T1.[vk_character.short_name], T1.[vk_character.show], T1.[vk_character.name2], T1.[vk_character.status])
    FROM (
        SELECT 
            T.Oid AS [vk_character.oid], 
            T.Name AS [vk_character.name], 
            T.ShortName AS [vk_character.short_name], 
            T.Show AS [vk_character.show], 
            T.Name2 AS [vk_character.name2], 
            T.Status AS [vk_character.status], 
            True AS _from0
        FROM PostgresEntities.VkCharacters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_conclusions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView401()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_conclusions", @"
    SELECT VALUE -- Constructing vk_conclusions
        [PostgresModel.Store.vk_conclusion](T1.[vk_conclusion.oid], T1.[vk_conclusion.name], T1.[vk_conclusion.short_name], T1.[vk_conclusion.show], T1.[vk_conclusion.name2], T1.[vk_conclusion.status])
    FROM (
        SELECT 
            T.Oid AS [vk_conclusion.oid], 
            T.Name AS [vk_conclusion.name], 
            T.ShortName AS [vk_conclusion.short_name], 
            T.Show AS [vk_conclusion.show], 
            T.Name2 AS [vk_conclusion.name2], 
            T.Status AS [vk_conclusion.status], 
            True AS _from0
        FROM PostgresEntities.VkConclusions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.msec_conclusins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView402()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.msec_conclusins", @"
    SELECT VALUE -- Constructing msec_conclusins
        [PostgresModel.Store.msec_conclusin](T1.[msec_conclusin.oid], T1.[msec_conclusin.name], T1.[msec_conclusin.short_name], T1.[msec_conclusin.show], T1.[msec_conclusin.name2], T1.[msec_conclusin.status])
    FROM (
        SELECT 
            T.Oid AS [msec_conclusin.oid], 
            T.Name AS [msec_conclusin.name], 
            T.ShortName AS [msec_conclusin.short_name], 
            T.Show AS [msec_conclusin.show], 
            T.Name2 AS [msec_conclusin.name2], 
            T.Status AS [msec_conclusin.status], 
            True AS _from0
        FROM PostgresEntities.MsecConclusins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView403()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_results", @"
    SELECT VALUE -- Constructing vk_results
        [PostgresModel.Store.vk_result](T1.[vk_result.oid], T1.[vk_result.name], T1.[vk_result.short_name], T1.[vk_result.show], T1.[vk_result.name2], T1.[vk_result.status])
    FROM (
        SELECT 
            T.Oid AS [vk_result.oid], 
            T.Name AS [vk_result.name], 
            T.ShortName AS [vk_result.short_name], 
            T.Show AS [vk_result.show], 
            T.Name2 AS [vk_result.name2], 
            T.Status AS [vk_result.status], 
            True AS _from0
        FROM PostgresEntities.VkResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_standarts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView404()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_standarts", @"
    SELECT VALUE -- Constructing vk_standarts
        [PostgresModel.Store.vk_standart](T1.[vk_standart.oid], T1.[vk_standart.name], T1.[vk_standart.short_name], T1.[vk_standart.show], T1.[vk_standart.name2], T1.[vk_standart.status])
    FROM (
        SELECT 
            T.Oid AS [vk_standart.oid], 
            T.Name AS [vk_standart.name], 
            T.ShortName AS [vk_standart.short_name], 
            T.Show AS [vk_standart.show], 
            T.Name2 AS [vk_standart.name2], 
            T.Status AS [vk_standart.status], 
            True AS _from0
        FROM PostgresEntities.VkStandarts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_targets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView405()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_targets", @"
    SELECT VALUE -- Constructing vk_targets
        [PostgresModel.Store.vk_target](T1.[vk_target.oid], T1.[vk_target.name], T1.[vk_target.short_name], T1.[vk_target.show], T1.[vk_target.name2], T1.[vk_target.status])
    FROM (
        SELECT 
            T.Oid AS [vk_target.oid], 
            T.Name AS [vk_target.name], 
            T.ShortName AS [vk_target.short_name], 
            T.Show AS [vk_target.show], 
            T.Name2 AS [vk_target.name2], 
            T.Status AS [vk_target.status], 
            True AS _from0
        FROM PostgresEntities.VkTargets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView406()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_types", @"
    SELECT VALUE -- Constructing vk_types
        [PostgresModel.Store.vk_type](T1.[vk_type.oid], T1.[vk_type.name], T1.[vk_type.short_name], T1.[vk_type.show], T1.[vk_type.name2], T1.[vk_type.status])
    FROM (
        SELECT 
            T.Oid AS [vk_type.oid], 
            T.Name AS [vk_type.name], 
            T.ShortName AS [vk_type.short_name], 
            T.Show AS [vk_type.show], 
            T.Name2 AS [vk_type.name2], 
            T.Status AS [vk_type.status], 
            True AS _from0
        FROM PostgresEntities.VkTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_mains
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView407()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_mains", @"
    SELECT VALUE -- Constructing vk_mains
        [PostgresModel.Store.vk_main](T1.[vk_main.oid], T1.[vk_main.people_id], T1.[vk_main.vk_characrer], T1.[vk_main.vk_type], T1.[vk_main.vk_target], T1.[vk_main.vk_standart], T1.[vk_main.vk_result], T1.[vk_main.vk_conclusion], T1.[vk_main.vk_conclusion_reason], T1.[vk_main.create_date], T1.[vk_main.creator], T1.[vk_main.diagnoz], T1.[vk_main.mdoc_id], T1.[vk_main.vk_pred], T1.[vk_main.vk_first_mem], T1.[vk_main.vk_second_mem], T1.[vk_main.vk_thirh_mem])
    FROM (
        SELECT 
            T.Oid AS [vk_main.oid], 
            T.PeopleId AS [vk_main.people_id], 
            T.VkCharacrer AS [vk_main.vk_characrer], 
            T.VkType AS [vk_main.vk_type], 
            T.VkTarget AS [vk_main.vk_target], 
            T.VkStandart AS [vk_main.vk_standart], 
            T.VkResult AS [vk_main.vk_result], 
            T.VkConclusion AS [vk_main.vk_conclusion], 
            T.VkConclusionReason AS [vk_main.vk_conclusion_reason], 
            T.CreateDate AS [vk_main.create_date], 
            T.Creator AS [vk_main.creator], 
            T.Diagnoz AS [vk_main.diagnoz], 
            T.MdocId AS [vk_main.mdoc_id], 
            T.VkPred AS [vk_main.vk_pred], 
            T.VkFirstMem AS [vk_main.vk_first_mem], 
            T.VkSecondMem AS [vk_main.vk_second_mem], 
            T.VkThirhMem AS [vk_main.vk_thirh_mem], 
            True AS _from0
        FROM PostgresEntities.VkMains AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactor_profexlists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView408()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactor_profexlists", @"
    SELECT VALUE -- Constructing profex_proffactor_profexlists
        [PostgresModel.Store.profex_proffactor_profexlist](T1.[profex_proffactor_profexlist.oid], T1.[profex_proffactor_profexlist.prophex_list], T1.[profex_proffactor_profexlist.proffactor], T1.[profex_proffactor_profexlist.fackt_factor])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor_profexlist.oid], 
            T.ProphexList AS [profex_proffactor_profexlist.prophex_list], 
            T.Proffactor AS [profex_proffactor_profexlist.proffactor], 
            T.FacktFactor AS [profex_proffactor_profexlist.fackt_factor], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactorProfexlists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactor_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView409()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactor_infos", @"
    SELECT VALUE -- Constructing profex_proffactor_infos
        [PostgresModel.Store.profex_proffactor_info](T1.[profex_proffactor_info.oid], T1.[profex_proffactor_info.contraindications], T1.[profex_proffactor_info.discription])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor_info.oid], 
            T.Contraindications AS [profex_proffactor_info.contraindications], 
            T.Discription AS [profex_proffactor_info.discription], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactorInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_lists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView410()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_lists", @"
    SELECT VALUE -- Constructing profex_lists
        [PostgresModel.Store.profex_list](T1.[profex_list.oid], T1.[profex_list.prof_action], T1.[profex_list.mdoc], T1.[profex_list.status_event], T1.[profex_list.workconditions], T1.[profex_list.profpage_all], T1.[profex_list.profpage_current], T1.[profex_list.profex_department])
    FROM (
        SELECT 
            T.Oid AS [profex_list.oid], 
            T.ProfAction AS [profex_list.prof_action], 
            T.Mdoc AS [profex_list.mdoc], 
            T.StatusEvent AS [profex_list.status_event], 
            T.Workconditions AS [profex_list.workconditions], 
            T.ProfpageAll AS [profex_list.profpage_all], 
            T.ProfpageCurrent AS [profex_list.profpage_current], 
            T.ProfexDepartment AS [profex_list.profex_department], 
            True AS _from0
        FROM PostgresEntities.ProfexLists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_workconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView411()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_workconditions", @"
    SELECT VALUE -- Constructing profex_workconditions
        [PostgresModel.Store.profex_workconditions](T1.[profex_workconditions.oid], T1.[profex_workconditions.name])
    FROM (
        SELECT 
            T.Oid AS [profex_workconditions.oid], 
            T.Name AS [profex_workconditions.name], 
            True AS _from0
        FROM PostgresEntities.ProfexWorkconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_list_nazs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView412()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_list_nazs", "\r\n    SELECT VALUE -- Constructing profex_list_nazs\r\n        [PostgresModel.Store" +
                    ".profex_list_naz](T1.[profex_list_naz.oid], T1.[profex_list_naz.profex_list], T1" +
                    ".[profex_list_naz.presc], T1.[profex_list_naz.presc_type], T1.[profex_list_naz.e" +
                    "xec_sotr], T1.[profex_list_naz.naztype], T1.[profex_list_naz.result], T1.[profex" +
                    "_list_naz.group_health], T1.[profex_list_naz.conclusion], T1.[profex_list_naz.pr" +
                    "ofex_conclusion], T1.[profex_list_naz.recommends], T1.[profex_list_naz.num_proto" +
                    "col], T1.[profex_list_naz.date_protocol], T1.[profex_list_naz.conclusion_protoco" +
                    "l])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [profex_list_naz.oid], \r\n" +
                    "            T.ProfexList AS [profex_list_naz.profex_list], \r\n            T.Presc" +
                    " AS [profex_list_naz.presc], \r\n            T.PrescType AS [profex_list_naz.presc" +
                    "_type], \r\n            T.ExecSotr AS [profex_list_naz.exec_sotr], \r\n            T" +
                    ".Naztype AS [profex_list_naz.naztype], \r\n            T.Result AS [profex_list_na" +
                    "z.result], \r\n            T.GroupHealth AS [profex_list_naz.group_health], \r\n    " +
                    "        T.Conclusion AS [profex_list_naz.conclusion], \r\n            T.ProfexConc" +
                    "lusion AS [profex_list_naz.profex_conclusion], \r\n            T.Recommends AS [pr" +
                    "ofex_list_naz.recommends], \r\n            T.NumProtocol AS [profex_list_naz.num_p" +
                    "rotocol], \r\n            T.DateProtocol AS [profex_list_naz.date_protocol], \r\n   " +
                    "         T.ConclusionProtocol AS [profex_list_naz.conclusion_protocol], \r\n      " +
                    "      True AS _from0\r\n        FROM PostgresEntities.ProfexListNazs AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView413()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_results", @"
    SELECT VALUE -- Constructing profex_results
        [PostgresModel.Store.profex_result](T1.[profex_result.oid], T1.[profex_result.name])
    FROM (
        SELECT 
            T.Oid AS [profex_result.oid], 
            T.Name AS [profex_result.name], 
            True AS _from0
        FROM PostgresEntities.ProfexResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_result_comments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView414()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_result_comments", @"
    SELECT VALUE -- Constructing profex_result_comments
        [PostgresModel.Store.profex_result_comment](T1.[profex_result_comment.oid], T1.[profex_result_comment.name])
    FROM (
        SELECT 
            T.Oid AS [profex_result_comment.oid], 
            T.Name AS [profex_result_comment.name], 
            True AS _from0
        FROM PostgresEntities.ProfexResultComments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_contracts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView415()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_contracts", @"
    SELECT VALUE -- Constructing counterpart_contracts
        [PostgresModel.Store.counterpart_contract](T1.[counterpart_contract.oid], T1.[counterpart_contract.company_id], T1.[counterpart_contract.num], T1.[counterpart_contract.comment], T1.[counterpart_contract.max_summ_opl], T1.[counterpart_contract.max_opl_people], T1.[counterpart_contract.pay_time], T1.[counterpart_contract.account_lpu], T1.[counterpart_contract.parent], T1.[counterpart_contract.service_group])
    FROM (
        SELECT 
            T.Oid AS [counterpart_contract.oid], 
            T.CompanyId AS [counterpart_contract.company_id], 
            T.Num AS [counterpart_contract.num], 
            T.Comment AS [counterpart_contract.comment], 
            T.MaxSummOpl AS [counterpart_contract.max_summ_opl], 
            T.MaxOplPeople AS [counterpart_contract.max_opl_people], 
            T.PayTime AS [counterpart_contract.pay_time], 
            T.AccountLpu AS [counterpart_contract.account_lpu], 
            T.Parent AS [counterpart_contract.parent], 
            T.ServiceGroup AS [counterpart_contract.service_group], 
            True AS _from0
        FROM PostgresEntities.CounterpartContracts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_givens
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView416()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_givens", @"
    SELECT VALUE -- Constructing medic_givens
        [PostgresModel.Store.medic_given](T1.[medic_given.id], T1.[medic_given.presc_mark], T1.[medic_given.recipe], T1.[medic_given.medicgiven], T1.[medic_given.sotrfrom], T1.[medic_given.date_given], T1.[medic_given.date], T1.[medic_given.count], T1.[medic_given.position_doc])
    FROM (
        SELECT 
            T.Id AS [medic_given.id], 
            T.PrescMark AS [medic_given.presc_mark], 
            T.Recipe AS [medic_given.recipe], 
            T.Medicgiven AS [medic_given.medicgiven], 
            T.Sotrfrom AS [medic_given.sotrfrom], 
            T.DateGiven AS [medic_given.date_given], 
            T.Date AS [medic_given.date], 
            T.Count AS [medic_given.count], 
            T.PositionDoc AS [medic_given.position_doc], 
            True AS _from0
        FROM PostgresEntities.MedicGivens AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_programs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView417()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_programs", @"
    SELECT VALUE -- Constructing counterpart_programs
        [PostgresModel.Store.counterpart_program](T1.[counterpart_program.oid], T1.[counterpart_program.contract_id], T1.[counterpart_program.cost], T1.[counterpart_program.date_beg], T1.[counterpart_program.date_end], T1.[counterpart_program.duration], T1.[counterpart_program.comment], T1.[counterpart_program.name], T1.[counterpart_program.condition], T1.[counterpart_program.cost_replace], T1.[counterpart_program.date_cancel], T1.[counterpart_program.cancel_prev_letter], T1.[counterpart_program.diag_action])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program.oid], 
            T.ContractId AS [counterpart_program.contract_id], 
            T.Cost AS [counterpart_program.cost], 
            T.DateBeg AS [counterpart_program.date_beg], 
            T.DateEnd AS [counterpart_program.date_end], 
            T.Duration AS [counterpart_program.duration], 
            T.Comment AS [counterpart_program.comment], 
            T.Name AS [counterpart_program.name], 
            T.Condition AS [counterpart_program.condition], 
            T.CostReplace AS [counterpart_program.cost_replace], 
            T.DateCancel AS [counterpart_program.date_cancel], 
            T.CancelPrevLetter AS [counterpart_program.cancel_prev_letter], 
            T.DiagAction AS [counterpart_program.diag_action], 
            True AS _from0
        FROM PostgresEntities.CounterpartPrograms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_formstates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView418()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_formstates", @"
    SELECT VALUE -- Constructing sicklist_formstates
        [PostgresModel.Store.sicklist_formstate](T1.[sicklist_formstate.oid], T1.[sicklist_formstate.name])
    FROM (
        SELECT 
            T.Oid AS [sicklist_formstate.oid], 
            T.Name AS [sicklist_formstate.name], 
            True AS _from0
        FROM PostgresEntities.SicklistFormstates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_formtitles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView419()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_formtitles", @"
    SELECT VALUE -- Constructing sicklist_formtitles
        [PostgresModel.Store.sicklist_formtitle](T1.[sicklist_formtitle.oid], T1.[sicklist_formtitle.sotr], T1.[sicklist_formtitle.requestcount], T1.[sicklist_formtitle.daterequest], T1.[sicklist_formtitle.remark], T1.[sicklist_formtitle.requestdel])
    FROM (
        SELECT 
            T.Oid AS [sicklist_formtitle.oid], 
            T.Sotr AS [sicklist_formtitle.sotr], 
            T.Requestcount AS [sicklist_formtitle.requestcount], 
            T.Daterequest AS [sicklist_formtitle.daterequest], 
            T.Remark AS [sicklist_formtitle.remark], 
            T.Requestdel AS [sicklist_formtitle.requestdel], 
            True AS _from0
        FROM PostgresEntities.SicklistFormtitles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView420()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_forms", @"
    SELECT VALUE -- Constructing sicklist_forms
        [PostgresModel.Store.sicklist_form](T1.[sicklist_form.formnum], T1.[sicklist_form.series], T1.[sicklist_form.sicklist_formtitle], T1.[sicklist_form.sicklist_formstate], T1.[sicklist_form.sysuser], T1.[sicklist_form.company], T1.[sicklist_form.dateget], T1.[sicklist_form.dateout], T1.[sicklist_form.dateprint], T1.[sicklist_form.formdel], T1.[sicklist_form.sotr])
    FROM (
        SELECT 
            T.Formnum AS [sicklist_form.formnum], 
            T.Series AS [sicklist_form.series], 
            T.SicklistFormtitle AS [sicklist_form.sicklist_formtitle], 
            T.SicklistFormstate AS [sicklist_form.sicklist_formstate], 
            T.Sysuser AS [sicklist_form.sysuser], 
            T.Company AS [sicklist_form.company], 
            T.Dateget AS [sicklist_form.dateget], 
            T.Dateout AS [sicklist_form.dateout], 
            T.Dateprint AS [sicklist_form.dateprint], 
            T.Formdel AS [sicklist_form.formdel], 
            T.Sotr AS [sicklist_form.sotr], 
            True AS _from0
        FROM PostgresEntities.SicklistForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pinfo_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView421()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4038);
            viewString.Append("\r\n    SELECT VALUE -- Constructing pinfo_histories\r\n        [PostgresModel.Store");
            viewString.Append(".pinfo_history](T1.[pinfo_history.oid], T1.[pinfo_history.blood_gr], T1.[pinfo_h");
            viewString.Append("istory.bloood_rez], T1.[pinfo_history.marriage], T1.[pinfo_history.nacionality],");
            viewString.Append(" T1.[pinfo_history.education], T1.[pinfo_history.living_condition], T1.[pinfo_hi");
            viewString.Append("story.liveplace], T1.[pinfo_history.regplace], T1.[pinfo_history.socialrank], T1");
            viewString.Append(".[pinfo_history.favorkind], T1.[pinfo_history.dispgroup], T1.[pinfo_history.coun");
            viewString.Append("try], T1.[pinfo_history.parent_status_id], T1.[pinfo_history.parent_surname], T1");
            viewString.Append(".[pinfo_history.parent_name], T1.[pinfo_history.parent_patron], T1.[pinfo_histor");
            viewString.Append("y.burn_place], T1.[pinfo_history.flurolast_dt], T1.[pinfo_history.fluroplan_dt],");
            viewString.Append(" T1.[pinfo_history.ambul_dt], T1.[pinfo_history.stacionar_dt], T1.[pinfo_history");
            viewString.Append(".sanator_dt], T1.[pinfo_history.spec_dt], T1.[pinfo_history.daystac_dt], T1.[pin");
            viewString.Append("fo_history.alko], T1.[pinfo_history.narko], T1.[pinfo_history.smok], T1.[pinfo_h");
            viewString.Append("istory.hard_life], T1.[pinfo_history.recipe_lgot_type], T1.[pinfo_history.grouph");
            viewString.Append("ealth], T1.[pinfo_history.inn], T1.[pinfo_history.phone_home], T1.[pinfo_history");
            viewString.Append(".phone_mobile], T1.[pinfo_history.icd10_id], T1.[pinfo_history.undefined_pac], T");
            viewString.Append("1.[pinfo_history.uek], T1.[pinfo_history.people_profession], T1.[pinfo_history.i");
            viewString.Append("s_agreement_pac], T1.[pinfo_history.alien], T1.[pinfo_history.birthtime], T1.[pi");
            viewString.Append("nfo_history.personal_agreement], T1.[pinfo_history.personal_agreement_date])\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.Oid AS [pinfo_history.oid], \r\n         ");
            viewString.Append("   T.BloodGr AS [pinfo_history.blood_gr], \r\n            T.BlooodRez AS [pinfo_hi");
            viewString.Append("story.bloood_rez], \r\n            T.Marriage AS [pinfo_history.marriage], \r\n     ");
            viewString.Append("       T.Nacionality AS [pinfo_history.nacionality], \r\n            T.Education A");
            viewString.Append("S [pinfo_history.education], \r\n            T.LivingCondition AS [pinfo_history.l");
            viewString.Append("iving_condition], \r\n            T.Liveplace AS [pinfo_history.liveplace], \r\n    ");
            viewString.Append("        T.Regplace AS [pinfo_history.regplace], \r\n            T.Socialrank AS [p");
            viewString.Append("info_history.socialrank], \r\n            T.Favorkind AS [pinfo_history.favorkind]");
            viewString.Append(", \r\n            T.Dispgroup AS [pinfo_history.dispgroup], \r\n            T.Countr");
            viewString.Append("y AS [pinfo_history.country], \r\n            T.ParentStatusId AS [pinfo_history.p");
            viewString.Append("arent_status_id], \r\n            T.ParentSurname AS [pinfo_history.parent_surname");
            viewString.Append("], \r\n            T.ParentName AS [pinfo_history.parent_name], \r\n            T.Pa");
            viewString.Append("rentPatron AS [pinfo_history.parent_patron], \r\n            T.BurnPlace AS [pinfo");
            viewString.Append("_history.burn_place], \r\n            T.FlurolastDt AS [pinfo_history.flurolast_dt");
            viewString.Append("], \r\n            T.FluroplanDt AS [pinfo_history.fluroplan_dt], \r\n            T.");
            viewString.Append("AmbulDt AS [pinfo_history.ambul_dt], \r\n            T.StacionarDt AS [pinfo_histo");
            viewString.Append("ry.stacionar_dt], \r\n            T.SanatorDt AS [pinfo_history.sanator_dt], \r\n   ");
            viewString.Append("         T.SpecDt AS [pinfo_history.spec_dt], \r\n            T.DaystacDt AS [pinf");
            viewString.Append("o_history.daystac_dt], \r\n            T.Alko AS [pinfo_history.alko], \r\n         ");
            viewString.Append("   T.Narko AS [pinfo_history.narko], \r\n            T.Smok AS [pinfo_history.smok");
            viewString.Append("], \r\n            T.HardLife AS [pinfo_history.hard_life], \r\n            T.Recipe");
            viewString.Append("LgotType AS [pinfo_history.recipe_lgot_type], \r\n            T.Grouphealth AS [pi");
            viewString.Append("nfo_history.grouphealth], \r\n            T.Inn AS [pinfo_history.inn], \r\n        ");
            viewString.Append("    T.PhoneHome AS [pinfo_history.phone_home], \r\n            T.PhoneMobile AS [p");
            viewString.Append("info_history.phone_mobile], \r\n            T.Icd10Id AS [pinfo_history.icd10_id],");
            viewString.Append(" \r\n            T.UndefinedPac AS [pinfo_history.undefined_pac], \r\n            T.");
            viewString.Append("Uek AS [pinfo_history.uek], \r\n            T.PeopleProfession AS [pinfo_history.p");
            viewString.Append("eople_profession], \r\n            T.IsAgreementPac AS [pinfo_history.is_agreement");
            viewString.Append("_pac], \r\n            T.Alien AS [pinfo_history.alien], \r\n            T.Birthtime");
            viewString.Append(" AS [pinfo_history.birthtime], \r\n            T.PersonalAgreement AS [pinfo_histo");
            viewString.Append("ry.personal_agreement], \r\n            T.PersonalAgreementDate AS [pinfo_history.");
            viewString.Append("personal_agreement_date], \r\n            True AS _from0\r\n        FROM PostgresEnt");
            viewString.Append("ities.PinfoHistories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pinfo_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_sign_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView422()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_sign_sotrs", @"
    SELECT VALUE -- Constructing presc_sign_sotrs
        [PostgresModel.Store.presc_sign_sotr](T1.[presc_sign_sotr.presc], T1.[presc_sign_sotr.sotr], T1.[presc_sign_sotr.oid], T1.[presc_sign_sotr.sign_date])
    FROM (
        SELECT 
            T.Presc AS [presc_sign_sotr.presc], 
            T.Sotr AS [presc_sign_sotr.sotr], 
            T.Oid AS [presc_sign_sotr.oid], 
            T.SignDate AS [presc_sign_sotr.sign_date], 
            True AS _from0
        FROM PostgresEntities.PrescSignSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_vaccin_preps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView423()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_vaccin_preps", @"
    SELECT VALUE -- Constructing medic_vaccin_preps
        [PostgresModel.Store.medic_vaccin_prep](T1.[medic_vaccin_prep.oid], T1.[medic_vaccin_prep.vaccin_prep_oid], T1.[medic_vaccin_prep.medic_oid])
    FROM (
        SELECT 
            T.Oid AS [medic_vaccin_prep.oid], 
            T.VaccinPrepOid AS [medic_vaccin_prep.vaccin_prep_oid], 
            T.MedicOid AS [medic_vaccin_prep.medic_oid], 
            True AS _from0
        FROM PostgresEntities.MedicVaccinPreps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView424()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_templates", @"
    SELECT VALUE -- Constructing medic_templates
        [PostgresModel.Store.medic_template](T1.[medic_template.oid], T1.[medic_template.name], T1.[medic_template.presctype_id], T1.[medic_template.sotr])
    FROM (
        SELECT 
            T.Oid AS [medic_template.oid], 
            T.Name AS [medic_template.name], 
            T.PresctypeId AS [medic_template.presctype_id], 
            T.Sotr AS [medic_template.sotr], 
            True AS _from0
        FROM PostgresEntities.MedicTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_medic_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView425()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2384);
            viewString.Append("\r\n    SELECT VALUE -- Constructing recipe_medic_templates\r\n        [PostgresMode");
            viewString.Append("l.Store.recipe_medic_template](T1.[recipe_medic_template.oid], T1.[recipe_medic_");
            viewString.Append("template.tradenames], T1.[recipe_medic_template.medic_name], T1.[recipe_medic_te");
            viewString.Append("mplate.input_id], T1.[recipe_medic_template.medic_template_id], T1.[recipe_medic");
            viewString.Append("_template.count], T1.[recipe_medic_template.unit_id], T1.[recipe_medic_template.");
            viewString.Append("duration], T1.[recipe_medic_template.doza], T1.[recipe_medic_template.doza_unit_");
            viewString.Append("id], T1.[recipe_medic_template.dtd], T1.[recipe_medic_template.frequency_id], T1");
            viewString.Append(".[recipe_medic_template.frequency], T1.[recipe_medic_template.latinnames], T1.[r");
            viewString.Append("ecipe_medic_template.benefit_medic], T1.[recipe_medic_template.actmatter], T1.[r");
            viewString.Append("ecipe_medic_template.date_begin], T1.[recipe_medic_template.patient_is_owner], T");
            viewString.Append("1.[recipe_medic_template.medic], T1.[recipe_medic_template.group_appointment], T");
            viewString.Append("1.[recipe_medic_template.sysdate])\r\n    FROM (\r\n        SELECT \r\n            T.O");
            viewString.Append("id AS [recipe_medic_template.oid], \r\n            T.Tradenames AS [recipe_medic_t");
            viewString.Append("emplate.tradenames], \r\n            T.MedicName AS [recipe_medic_template.medic_n");
            viewString.Append("ame], \r\n            T.InputId AS [recipe_medic_template.input_id], \r\n           ");
            viewString.Append(" T.MedicTemplateId AS [recipe_medic_template.medic_template_id], \r\n            T");
            viewString.Append(".Count AS [recipe_medic_template.count], \r\n            T.UnitId AS [recipe_medic");
            viewString.Append("_template.unit_id], \r\n            T.Duration AS [recipe_medic_template.duration]");
            viewString.Append(", \r\n            T.Doza AS [recipe_medic_template.doza], \r\n            T.DozaUnit");
            viewString.Append("Id AS [recipe_medic_template.doza_unit_id], \r\n            T.Dtd AS [recipe_medic");
            viewString.Append("_template.dtd], \r\n            T.FrequencyId AS [recipe_medic_template.frequency_");
            viewString.Append("id], \r\n            T.Frequency AS [recipe_medic_template.frequency], \r\n         ");
            viewString.Append("   T.Latinnames AS [recipe_medic_template.latinnames], \r\n            T.BenefitMe");
            viewString.Append("dic AS [recipe_medic_template.benefit_medic], \r\n            T.Actmatter AS [reci");
            viewString.Append("pe_medic_template.actmatter], \r\n            T.DateBegin AS [recipe_medic_templat");
            viewString.Append("e.date_begin], \r\n            T.PatientIsOwner AS [recipe_medic_template.patient_");
            viewString.Append("is_owner], \r\n            T.Medic AS [recipe_medic_template.medic], \r\n           ");
            viewString.Append(" T.GroupAppointment AS [recipe_medic_template.group_appointment], \r\n            ");
            viewString.Append("T.Sysdate AS [recipe_medic_template.sysdate], \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM PostgresEntities.RecipeMedicTemplates AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_medic_templates", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.report_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView426()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.report_groups", @"
    SELECT VALUE -- Constructing report_groups
        [PostgresModel.Store.report_group](T1.[report_group.oid], T1.[report_group.name], T1.[report_group.parent])
    FROM (
        SELECT 
            T.Oid AS [report_group.oid], 
            T.Name AS [report_group.name], 
            T.Parent AS [report_group.parent], 
            True AS _from0
        FROM PostgresEntities.ReportGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.report_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView427()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.report_templates", @"
    SELECT VALUE -- Constructing report_templates
        [PostgresModel.Store.report_template](T1.[report_template.oid], T1.[report_template.name], T1.[report_template.filename], T1.[report_template.filebody], T1.[report_template.createdate], T1.[report_template.createuser], T1.[report_template.occupied], T1.[report_template.occupied_user], T1.[report_template.occupied_date], T1.[report_template.occupied_host], T1.[report_template.report_group], T1.[report_template.report_papersize], T1.[report_template.landscape])
    FROM (
        SELECT 
            T.Oid AS [report_template.oid], 
            T.Name AS [report_template.name], 
            T.Filename AS [report_template.filename], 
            T.Filebody AS [report_template.filebody], 
            T.Createdate AS [report_template.createdate], 
            T.Createuser AS [report_template.createuser], 
            T.Occupied AS [report_template.occupied], 
            T.OccupiedUser AS [report_template.occupied_user], 
            T.OccupiedDate AS [report_template.occupied_date], 
            T.OccupiedHost AS [report_template.occupied_host], 
            T.ReportGroup AS [report_template.report_group], 
            T.ReportPapersize AS [report_template.report_papersize], 
            T.Landscape AS [report_template.landscape], 
            True AS _from0
        FROM PostgresEntities.ReportTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.clsatcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView428()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.clsatcs", @"
    SELECT VALUE -- Constructing clsatcs
        [PostgresModel.Store.clsatc](T1.clsatc_id, T1.clsatc_parentid, T1.clsatc_name)
    FROM (
        SELECT 
            T.Id AS clsatc_id, 
            T.Parentid AS clsatc_parentid, 
            T.Name AS clsatc_name, 
            True AS _from0
        FROM PostgresEntities.Clsatcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cls_mz_phgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView429()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cls_mz_phgroups", @"
    SELECT VALUE -- Constructing cls_mz_phgroups
        [PostgresModel.Store.cls_mz_phgroup](T1.[cls_mz_phgroup.id], T1.[cls_mz_phgroup.parentid], T1.[cls_mz_phgroup.name])
    FROM (
        SELECT 
            T.Id AS [cls_mz_phgroup.id], 
            T.Parentid AS [cls_mz_phgroup.parentid], 
            T.Name AS [cls_mz_phgroup.name], 
            True AS _from0
        FROM PostgresEntities.ClsMzPhgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView430()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelmedics", @"
    SELECT VALUE -- Constructing tmodelmedics
        [PostgresModel.Store.tmodelmedic](T1.[tmodelmedic.fk_id], T1.[tmodelmedic.fk_medic], T1.[tmodelmedic.fc_rate], T1.[tmodelmedic.fk_pharmagroup], T1.[tmodelmedic.fk_atc], T1.[tmodelmedic.fc_edd], T1.[tmodelmedic.fc_eddscale], T1.[tmodelmedic.fc_cde], T1.[tmodelmedic.fk_model], T1.[tmodelmedic.fc_cdescale])
    FROM (
        SELECT 
            T.FkId AS [tmodelmedic.fk_id], 
            T.FkMedic AS [tmodelmedic.fk_medic], 
            T.FcRate AS [tmodelmedic.fc_rate], 
            T.FkPharmagroup AS [tmodelmedic.fk_pharmagroup], 
            T.FkAtc AS [tmodelmedic.fk_atc], 
            T.FcEdd AS [tmodelmedic.fc_edd], 
            T.FcEddscale AS [tmodelmedic.fc_eddscale], 
            T.FcCde AS [tmodelmedic.fc_cde], 
            T.FkModel AS [tmodelmedic.fk_model], 
            T.FcCdescale AS [tmodelmedic.fc_cdescale], 
            True AS _from0
        FROM PostgresEntities.Tmodelmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.history_mdoc_locations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView431()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.history_mdoc_locations", @"
    SELECT VALUE -- Constructing history_mdoc_locations
        [PostgresModel.Store.history_mdoc_location](T1.[history_mdoc_location.oid], T1.[history_mdoc_location.date_create], T1.[history_mdoc_location.from_loc], T1.[history_mdoc_location.to_loc], T1.[history_mdoc_location.sysuser], T1.[history_mdoc_location.mdoc], T1.[history_mdoc_location.otdel], T1.[history_mdoc_location.cabinet], T1.[history_mdoc_location.sotr], T1.[history_mdoc_location.comment])
    FROM (
        SELECT 
            T.Oid AS [history_mdoc_location.oid], 
            T.DateCreate AS [history_mdoc_location.date_create], 
            T.FromLoc AS [history_mdoc_location.from_loc], 
            T.ToLoc AS [history_mdoc_location.to_loc], 
            T.Sysuser AS [history_mdoc_location.sysuser], 
            T.Mdoc AS [history_mdoc_location.mdoc], 
            T.Otdel AS [history_mdoc_location.otdel], 
            T.Cabinet AS [history_mdoc_location.cabinet], 
            T.Sotr AS [history_mdoc_location.sotr], 
            T.Comment AS [history_mdoc_location.comment], 
            True AS _from0
        FROM PostgresEntities.HistoryMdocLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdoc_locations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView432()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdoc_locations", @"
    SELECT VALUE -- Constructing mdoc_locations
        [PostgresModel.Store.mdoc_location](T1.[mdoc_location.oid], T1.[mdoc_location.name])
    FROM (
        SELECT 
            T.Oid AS [mdoc_location.oid], 
            T.Name AS [mdoc_location.name], 
            True AS _from0
        FROM PostgresEntities.MdocLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.audits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView433()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.audits", @"
    SELECT VALUE -- Constructing audits
        [PostgresModel.Store.audit](T1.audit_oid, T1.audit_sysuser, T1.audit_auditactiontype, T1.audit_actiondatetime)
    FROM (
        SELECT 
            T.Oid AS audit_oid, 
            T.Sysuser AS audit_sysuser, 
            T.Auditactiontype AS audit_auditactiontype, 
            T.Actiondatetime AS audit_actiondatetime, 
            True AS _from0
        FROM PostgresEntities.Audits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.auditactiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView434()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.auditactiontypes", @"
    SELECT VALUE -- Constructing auditactiontypes
        [PostgresModel.Store.auditactiontypes](T1.auditactiontypes_oid, T1.auditactiontypes_synonym, T1.auditactiontypes_description)
    FROM (
        SELECT 
            T.Oid AS auditactiontypes_oid, 
            T.Synonym AS auditactiontypes_synonym, 
            T.Description AS auditactiontypes_description, 
            True AS _from0
        FROM PostgresEntities.Auditactiontypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registr_ill_diagnoses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView435()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registr_ill_diagnoses", @"
    SELECT VALUE -- Constructing registr_ill_diagnoses
        [PostgresModel.Store.registr_ill_diagnoses](T1.[registr_ill_diagnoses.oid], T1.[registr_ill_diagnoses.mkb_10], T1.[registr_ill_diagnoses.creator], T1.[registr_ill_diagnoses.create_date], T1.[registr_ill_diagnoses.group_in])
    FROM (
        SELECT 
            T.Oid AS [registr_ill_diagnoses.oid], 
            T.Mkb10 AS [registr_ill_diagnoses.mkb_10], 
            T.Creator AS [registr_ill_diagnoses.creator], 
            T.CreateDate AS [registr_ill_diagnoses.create_date], 
            T.GroupIn AS [registr_ill_diagnoses.group_in], 
            True AS _from0
        FROM PostgresEntities.RegistrIllDiagnoses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registr_ill_pacients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView436()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registr_ill_pacients", @"
    SELECT VALUE -- Constructing registr_ill_pacients
        [PostgresModel.Store.registr_ill_pacients](T1.[registr_ill_pacients.oid], T1.[registr_ill_pacients.people], T1.[registr_ill_pacients.registr_ill_diagnoses], T1.[registr_ill_pacients.mdoc_id], T1.[registr_ill_pacients.date_on], T1.[registr_ill_pacients.date_end], T1.[registr_ill_pacients.sysdate], T1.[registr_ill_pacients.sysuser])
    FROM (
        SELECT 
            T.Oid AS [registr_ill_pacients.oid], 
            T.People AS [registr_ill_pacients.people], 
            T.RegistrIllDiagnoses AS [registr_ill_pacients.registr_ill_diagnoses], 
            T.MdocId AS [registr_ill_pacients.mdoc_id], 
            T.DateOn AS [registr_ill_pacients.date_on], 
            T.DateEnd AS [registr_ill_pacients.date_end], 
            T.Sysdate AS [registr_ill_pacients.sysdate], 
            T.Sysuser AS [registr_ill_pacients.sysuser], 
            True AS _from0
        FROM PostgresEntities.RegistrIllPacients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_descriptions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView437()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_descriptions", @"
    SELECT VALUE -- Constructing xray_descriptions
        [PostgresModel.Store.xray_description](T1.[xray_description.oid], T1.[xray_description.presc_id], T1.[xray_description.text], T1.[xray_description.create_sysuser], T1.[xray_description.create_otdel], T1.[xray_description.sotr])
    FROM (
        SELECT 
            T.Oid AS [xray_description.oid], 
            T.PrescId AS [xray_description.presc_id], 
            T.Text AS [xray_description.text], 
            T.CreateSysuser AS [xray_description.create_sysuser], 
            T.CreateOtdel AS [xray_description.create_otdel], 
            T.Sotr AS [xray_description.sotr], 
            True AS _from0
        FROM PostgresEntities.XrayDescriptions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.actmatters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView438()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.actmatters", "\r\n    SELECT VALUE -- Constructing actmatters\r\n        [PostgresModel.Store.actma" +
                    "tters](T1.actmatters_id, T1.actmatters_rusname, T1.actmatters_latname, T1.actmat" +
                    "ters_stronggroupid, T1.actmatters_narcogroupid, T1.actmatters_chemicalname, T1.a" +
                    "ctmatters_characters, T1.actmatters_pharmacology, T1.actmatters_indications, T1." +
                    "actmatters_usage, T1.actmatters_contraindications, T1.actmatters_uselimitations," +
                    " T1.actmatters_sideactions, T1.actmatters_interactions, T1.actmatters_usemethoda" +
                    "nddoses, T1.actmatters_overdose, T1.actmatters_pregnancyuse, T1.actmatters_preca" +
                    "utions, T1.actmatters_specialguidelines, T1.actmatters_literature)\r\n    FROM (\r\n" +
                    "        SELECT \r\n            T.Id AS actmatters_id, \r\n            T.Rusname AS a" +
                    "ctmatters_rusname, \r\n            T.Latname AS actmatters_latname, \r\n            " +
                    "T.Stronggroupid AS actmatters_stronggroupid, \r\n            T.Narcogroupid AS act" +
                    "matters_narcogroupid, \r\n            T.Chemicalname AS actmatters_chemicalname, \r" +
                    "\n            T.Characters AS actmatters_characters, \r\n            T.Pharmacology" +
                    " AS actmatters_pharmacology, \r\n            T.Indications AS actmatters_indicatio" +
                    "ns, \r\n            T.Usage AS actmatters_usage, \r\n            T.Contraindications" +
                    " AS actmatters_contraindications, \r\n            T.Uselimitations AS actmatters_u" +
                    "selimitations, \r\n            T.Sideactions AS actmatters_sideactions, \r\n        " +
                    "    T.Interactions AS actmatters_interactions, \r\n            T.Usemethodanddoses" +
                    " AS actmatters_usemethodanddoses, \r\n            T.Overdose AS actmatters_overdos" +
                    "e, \r\n            T.Pregnancyuse AS actmatters_pregnancyuse, \r\n            T.Prec" +
                    "autions AS actmatters_precautions, \r\n            T.Specialguidelines AS actmatte" +
                    "rs_specialguidelines, \r\n            T.Literature AS actmatters_literature, \r\n   " +
                    "         True AS _from0\r\n        FROM PostgresEntities.Actmatters AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_pacs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView439()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_pacs", @"
    SELECT VALUE -- Constructing xray_pacs
        [PostgresModel.Store.xray_pacs](T1.[xray_pacs.oid], T1.[xray_pacs.name], T1.[xray_pacs.url], T1.[xray_pacs.synonym], T1.[xray_pacs.ip], T1.[xray_pacs.port], T1.[xray_pacs.enable])
    FROM (
        SELECT 
            T.Oid AS [xray_pacs.oid], 
            T.Name AS [xray_pacs.name], 
            T.Url AS [xray_pacs.url], 
            T.Synonym AS [xray_pacs.synonym], 
            T.Ip AS [xray_pacs.ip], 
            T.Port AS [xray_pacs.port], 
            T.Enable AS [xray_pacs.enable], 
            True AS _from0
        FROM PostgresEntities.XrayPacss AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView440()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_results", @"
    SELECT VALUE -- Constructing xray_results
        [PostgresModel.Store.xray_result](T1.[xray_result.oid], T1.[xray_result.xray_referral_id], T1.[xray_result.create_dt], T1.[xray_result.study_instance], T1.[xray_result.pacs_id])
    FROM (
        SELECT 
            T.Oid AS [xray_result.oid], 
            T.XrayReferralId AS [xray_result.xray_referral_id], 
            T.CreateDt AS [xray_result.create_dt], 
            T.StudyInstance AS [xray_result.study_instance], 
            T.PacsId AS [xray_result.pacs_id], 
            True AS _from0
        FROM PostgresEntities.XrayResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tutorials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView441()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tutorials", @"
    SELECT VALUE -- Constructing tutorials
        [PostgresModel.Store.tutorial](T1.tutorial_oid, T1.tutorial_name, T1.tutorial_comment, T1.[tutorial.folder_name])
    FROM (
        SELECT 
            T.Oid AS tutorial_oid, 
            T.Name AS tutorial_name, 
            T.Comment AS tutorial_comment, 
            T.FolderName AS [tutorial.folder_name], 
            True AS _from0
        FROM PostgresEntities.Tutorials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tutorial_roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView442()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tutorial_roles", @"
    SELECT VALUE -- Constructing tutorial_roles
        [PostgresModel.Store.tutorial_role](T1.[tutorial_role.oid], T1.[tutorial_role.role], T1.[tutorial_role.tutorial])
    FROM (
        SELECT 
            T.Oid AS [tutorial_role.oid], 
            T.Role AS [tutorial_role.role], 
            T.Tutorial AS [tutorial_role.tutorial], 
            True AS _from0
        FROM PostgresEntities.TutorialRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_change_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView443()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_change_histories", "\r\n    SELECT VALUE -- Constructing people_change_histories\r\n        [PostgresMode" +
                    "l.Store.people_change_history](T1.[people_change_history.oid], T1.[people_change" +
                    "_history.people], T1.[people_change_history.addressex1], T1.[people_change_histo" +
                    "ry.addressex2], T1.[people_change_history.peopledoctype], T1.[people_change_hist" +
                    "ory.peopledocser], T1.[people_change_history.peopledocnum], T1.[people_change_hi" +
                    "story.peopledocgive], T1.[people_change_history.peopledocgivedate], T1.[people_c" +
                    "hange_history.firstname], T1.[people_change_history.lastname], T1.[people_change" +
                    "_history.middlename], T1.[people_change_history.sysdate])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.Oid AS [people_change_history.oid], \r\n            T.People" +
                    " AS [people_change_history.people], \r\n            T.Addressex1 AS [people_change" +
                    "_history.addressex1], \r\n            T.Addressex2 AS [people_change_history.addre" +
                    "ssex2], \r\n            T.Peopledoctype AS [people_change_history.peopledoctype], " +
                    "\r\n            T.Peopledocser AS [people_change_history.peopledocser], \r\n        " +
                    "    T.Peopledocnum AS [people_change_history.peopledocnum], \r\n            T.Peop" +
                    "ledocgive AS [people_change_history.peopledocgive], \r\n            T.Peopledocgiv" +
                    "edate AS [people_change_history.peopledocgivedate], \r\n            T.Firstname AS" +
                    " [people_change_history.firstname], \r\n            T.Lastname AS [people_change_h" +
                    "istory.lastname], \r\n            T.Middlename AS [people_change_history.middlenam" +
                    "e], \r\n            T.Sysdate AS [people_change_history.sysdate], \r\n            Tr" +
                    "ue AS _from0\r\n        FROM PostgresEntities.PeopleChangeHistories AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.news
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView444()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.news", @"
    SELECT VALUE -- Constructing news
        [PostgresModel.Store.news](T1.news_oid, T1.news_people, T1.news_title, T1.news_body, T1.news_sysdate, T1.[news.create_date], T1.[news.start_date], T1.[news.is_active], T1.[news.rmis_active], T1.[news.selfrecord_active])
    FROM (
        SELECT 
            T.Oid AS news_oid, 
            T.People AS news_people, 
            T.Title AS news_title, 
            T.Body AS news_body, 
            T.Sysdate AS news_sysdate, 
            T.CreateDate AS [news.create_date], 
            T.StartDate AS [news.start_date], 
            T.IsActive AS [news.is_active], 
            T.RmisActive AS [news.rmis_active], 
            T.SelfrecordActive AS [news.selfrecord_active], 
            True AS _from0
        FROM PostgresEntities.News AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.video_tutorial_roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView445()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.video_tutorial_roles", @"
    SELECT VALUE -- Constructing video_tutorial_roles
        [PostgresModel.Store.video_tutorial_role](T1.[video_tutorial_role.oid], T1.[video_tutorial_role.role], T1.[video_tutorial_role.video_tutorial])
    FROM (
        SELECT 
            T.Oid AS [video_tutorial_role.oid], 
            T.Role AS [video_tutorial_role.role], 
            T.VideoTutorial AS [video_tutorial_role.video_tutorial], 
            True AS _from0
        FROM PostgresEntities.VideoTutorialRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.video_tutorials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView446()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.video_tutorials", @"
    SELECT VALUE -- Constructing video_tutorials
        [PostgresModel.Store.video_tutorial](T1.[video_tutorial.oid], T1.[video_tutorial.name], T1.[video_tutorial.comment])
    FROM (
        SELECT 
            T.Oid AS [video_tutorial.oid], 
            T.Name AS [video_tutorial.name], 
            T.Comment AS [video_tutorial.comment], 
            True AS _from0
        FROM PostgresEntities.VideoTutorials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tutorial_links
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView447()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tutorial_links", @"
    SELECT VALUE -- Constructing tutorial_links
        [PostgresModel.Store.tutorial_links](T1.[tutorial_links.oid], T1.[tutorial_links.controller], T1.[tutorial_links.course], T1.[tutorial_links.section], T1.[tutorial_links.descr], T1.[tutorial_links.action_name])
    FROM (
        SELECT 
            T.Oid AS [tutorial_links.oid], 
            T.Controller AS [tutorial_links.controller], 
            T.Course AS [tutorial_links.course], 
            T.Section AS [tutorial_links.section], 
            T.Descr AS [tutorial_links.descr], 
            T.ActionName AS [tutorial_links.action_name], 
            True AS _from0
        FROM PostgresEntities.TutorialLinks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.video_tutorial_links
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView448()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.video_tutorial_links", @"
    SELECT VALUE -- Constructing video_tutorial_links
        [PostgresModel.Store.video_tutorial_links](T1.[video_tutorial_links.oid], T1.[video_tutorial_links.controller], T1.[video_tutorial_links.video_tutorial], T1.[video_tutorial_links.comment])
    FROM (
        SELECT 
            T.Oid AS [video_tutorial_links.oid], 
            T.Controller AS [video_tutorial_links.controller], 
            T.VideoTutorial AS [video_tutorial_links.video_tutorial], 
            T.Comment AS [video_tutorial_links.comment], 
            True AS _from0
        FROM PostgresEntities.VideoTutorialLinks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_agreement_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView449()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_agreement_status", @"
    SELECT VALUE -- Constructing pay_agreement_status
        [PostgresModel.Store.pay_agreement_status](T1.[pay_agreement_status.oid], T1.[pay_agreement_status.name], T1.[pay_agreement_status.show])
    FROM (
        SELECT 
            T.Oid AS [pay_agreement_status.oid], 
            T.Name AS [pay_agreement_status.name], 
            T.Show AS [pay_agreement_status.show], 
            True AS _from0
        FROM PostgresEntities.PayAgreementStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView450()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_services", @"
    SELECT VALUE -- Constructing presc_services
        [PostgresModel.Store.presc_service](T1.[presc_service.oid], T1.[presc_service.service_presctype], T1.[presc_service.presc], T1.[presc_service.counterpart_program], T1.[presc_service.custom_price])
    FROM (
        SELECT 
            T.Oid AS [presc_service.oid], 
            T.ServicePresctype AS [presc_service.service_presctype], 
            T.Presc AS [presc_service.presc], 
            T.CounterpartProgram AS [presc_service.counterpart_program], 
            T.CustomPrice AS [presc_service.custom_price], 
            True AS _from0
        FROM PostgresEntities.PrescServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_mdoc_numbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView451()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_mdoc_numbers", @"
    SELECT VALUE -- Constructing otdel_mdoc_numbers
        [PostgresModel.Store.otdel_mdoc_number](T1.[otdel_mdoc_number.oid], T1.[otdel_mdoc_number.otdel], T1.[otdel_mdoc_number.mdoc_number_type])
    FROM (
        SELECT 
            T.Oid AS [otdel_mdoc_number.oid], 
            T.Otdel AS [otdel_mdoc_number.otdel], 
            T.MdocNumberType AS [otdel_mdoc_number.mdoc_number_type], 
            True AS _from0
        FROM PostgresEntities.OtdelMdocNumbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView452()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_results", @"
    SELECT VALUE -- Constructing presc_results
        [PostgresModel.Store.presc_result](T1.[presc_result.oid], T1.[presc_result.presc_id], T1.[presc_result.presc_state_id], T1.[presc_result.presc_reason_cancel_id], T1.[presc_result.presc_execute_date], T1.[presc_result.sotr_id])
    FROM (
        SELECT 
            T.Oid AS [presc_result.oid], 
            T.PrescId AS [presc_result.presc_id], 
            T.PrescStateId AS [presc_result.presc_state_id], 
            T.PrescReasonCancelId AS [presc_result.presc_reason_cancel_id], 
            T.PrescExecuteDate AS [presc_result.presc_execute_date], 
            T.SotrId AS [presc_result.sotr_id], 
            True AS _from0
        FROM PostgresEntities.PrescResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_reason_cancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView453()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_reason_cancels", @"
    SELECT VALUE -- Constructing presc_reason_cancels
        [PostgresModel.Store.presc_reason_cancel](T1.[presc_reason_cancel.oid], T1.[presc_reason_cancel.name], T1.[presc_reason_cancel.synonim])
    FROM (
        SELECT 
            T.Oid AS [presc_reason_cancel.oid], 
            T.Name AS [presc_reason_cancel.name], 
            T.Synonim AS [presc_reason_cancel.synonim], 
            True AS _from0
        FROM PostgresEntities.PrescReasonCancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdoc_last_numbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView454()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdoc_last_numbers", @"
    SELECT VALUE -- Constructing mdoc_last_numbers
        [PostgresModel.Store.mdoc_last_number](T1.[mdoc_last_number.oid], T1.[mdoc_last_number.otdel], T1.[mdoc_last_number.mdoc_type], T1.[mdoc_last_number.year], T1.[mdoc_last_number.num])
    FROM (
        SELECT 
            T.Oid AS [mdoc_last_number.oid], 
            T.Otdel AS [mdoc_last_number.otdel], 
            T.MdocType AS [mdoc_last_number.mdoc_type], 
            T.Year AS [mdoc_last_number.year], 
            T.Num AS [mdoc_last_number.num], 
            True AS _from0
        FROM PostgresEntities.MdocLastNumbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_price_categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView455()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_price_categories", @"
    SELECT VALUE -- Constructing service_price_categories
        [PostgresModel.Store.service_price_category](T1.[service_price_category.oid], T1.[service_price_category.name])
    FROM (
        SELECT 
            T.Oid AS [service_price_category.oid], 
            T.Name AS [service_price_category.name], 
            True AS _from0
        FROM PostgresEntities.ServicePriceCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_disp_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView456()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_disp_groups", @"
    SELECT VALUE -- Constructing hospital_disp_groups
        [PostgresModel.Store.hospital_disp_group](T1.[hospital_disp_group.oid], T1.[hospital_disp_group.name], T1.[hospital_disp_group.show], T1.[hospital_disp_group.name2], T1.[hospital_disp_group.status])
    FROM (
        SELECT 
            T.Oid AS [hospital_disp_group.oid], 
            T.Name AS [hospital_disp_group.name], 
            T.Show AS [hospital_disp_group.show], 
            T.Name2 AS [hospital_disp_group.name2], 
            T.Status AS [hospital_disp_group.status], 
            True AS _from0
        FROM PostgresEntities.HospitalDispGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_disp_subgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView457()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_disp_subgroups", @"
    SELECT VALUE -- Constructing hospital_disp_subgroups
        [PostgresModel.Store.hospital_disp_subgroup](T1.[hospital_disp_subgroup.oid], T1.[hospital_disp_subgroup.name], T1.[hospital_disp_subgroup.show], T1.[hospital_disp_subgroup.name2], T1.[hospital_disp_subgroup.status])
    FROM (
        SELECT 
            T.Oid AS [hospital_disp_subgroup.oid], 
            T.Name AS [hospital_disp_subgroup.name], 
            T.Show AS [hospital_disp_subgroup.show], 
            T.Name2 AS [hospital_disp_subgroup.name2], 
            T.Status AS [hospital_disp_subgroup.status], 
            True AS _from0
        FROM PostgresEntities.HospitalDispSubgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bed_profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView458()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bed_profiles", @"
    SELECT VALUE -- Constructing bed_profiles
        [PostgresModel.Store.bed_profile](T1.[bed_profile.oid], T1.[bed_profile.name], T1.[bed_profile.show], T1.[bed_profile.name2], T1.[bed_profile.status])
    FROM (
        SELECT 
            T.Oid AS [bed_profile.oid], 
            T.Name AS [bed_profile.name], 
            T.Show AS [bed_profile.show], 
            T.Name2 AS [bed_profile.name2], 
            T.Status AS [bed_profile.status], 
            True AS _from0
        FROM PostgresEntities.BedProfiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView459()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_status", @"
    SELECT VALUE -- Constructing sicklist_status
        [PostgresModel.Store.sicklist_status](T1.[sicklist_status.oid], T1.[sicklist_status.name], T1.[sicklist_status.show], T1.[sicklist_status.name2], T1.[sicklist_status.status], T1.[sicklist_status.foms_code])
    FROM (
        SELECT 
            T.Oid AS [sicklist_status.oid], 
            T.Name AS [sicklist_status.name], 
            T.Show AS [sicklist_status.show], 
            T.Name2 AS [sicklist_status.name2], 
            T.Status AS [sicklist_status.status], 
            T.FomsCode AS [sicklist_status.foms_code], 
            True AS _from0
        FROM PostgresEntities.SicklistStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stacionar_operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView460()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stacionar_operations", "\r\n    SELECT VALUE -- Constructing stacionar_operations\r\n        [PostgresModel.S" +
                    "tore.stacionar_operations](T1.[stacionar_operations.oid], T1.[stacionar_operatio" +
                    "ns.mdoc], T1.[stacionar_operations.begin_date], T1.[stacionar_operations.end_dat" +
                    "e], T1.[stacionar_operations.operation_time], T1.[stacionar_operations.operation" +
                    "_type], T1.[stacionar_operations.complication], T1.[stacionar_operations.anesthe" +
                    "sia], T1.[stacionar_operations.endocrinology_app], T1.[stacionar_operations.lase" +
                    "r_app], T1.[stacionar_operations.cryogen_app], T1.[stacionar_operations.operator" +
                    "], T1.[stacionar_operations.register], T1.[stacionar_operations.sysdate])\r\n    F" +
                    "ROM (\r\n        SELECT \r\n            T.Oid AS [stacionar_operations.oid], \r\n     " +
                    "       T.Mdoc AS [stacionar_operations.mdoc], \r\n            T.BeginDate AS [stac" +
                    "ionar_operations.begin_date], \r\n            T.EndDate AS [stacionar_operations.e" +
                    "nd_date], \r\n            T.OperationTime AS [stacionar_operations.operation_time]" +
                    ", \r\n            T.OperationType AS [stacionar_operations.operation_type], \r\n    " +
                    "        T.Complication AS [stacionar_operations.complication], \r\n            T.A" +
                    "nesthesia AS [stacionar_operations.anesthesia], \r\n            T.EndocrinologyApp" +
                    " AS [stacionar_operations.endocrinology_app], \r\n            T.LaserApp AS [staci" +
                    "onar_operations.laser_app], \r\n            T.CryogenApp AS [stacionar_operations." +
                    "cryogen_app], \r\n            T.Operator AS [stacionar_operations.operator], \r\n   " +
                    "         T.Register AS [stacionar_operations.register], \r\n            T.Sysdate " +
                    "AS [stacionar_operations.sysdate], \r\n            True AS _from0\r\n        FROM Po" +
                    "stgresEntities.StacionarOperations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.patientcardsettings_uniquefields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView461()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.patientcardsettings_uniquefields", @"
    SELECT VALUE -- Constructing patientcardsettings_uniquefields
        [PostgresModel.Store.patientcardsettings_uniquefield](T1.[patientcardsettings_uniquefield.oid], T1.[patientcardsettings_uniquefield.name], T1.[patientcardsettings_uniquefield.dbname], T1.[patientcardsettings_uniquefield.index])
    FROM (
        SELECT 
            T.Oid AS [patientcardsettings_uniquefield.oid], 
            T.Name AS [patientcardsettings_uniquefield.name], 
            T.Dbname AS [patientcardsettings_uniquefield.dbname], 
            T.Index AS [patientcardsettings_uniquefield.index], 
            True AS _from0
        FROM PostgresEntities.PatientcardsettingsUniquefields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registr_nosology_diagnoses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView462()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registr_nosology_diagnoses", @"
    SELECT VALUE -- Constructing registr_nosology_diagnoses
        [PostgresModel.Store.registr_nosology_diagnoses](T1.[registr_nosology_diagnoses.oid], T1.[registr_nosology_diagnoses.mkb_10], T1.[registr_nosology_diagnoses.creator], T1.[registr_nosology_diagnoses.create_date], T1.[registr_nosology_diagnoses.group_in], T1.[registr_nosology_diagnoses.code], T1.[registr_nosology_diagnoses.name], T1.[registr_nosology_diagnoses.level], T1.[registr_nosology_diagnoses.organization])
    FROM (
        SELECT 
            T.Oid AS [registr_nosology_diagnoses.oid], 
            T.Mkb10 AS [registr_nosology_diagnoses.mkb_10], 
            T.Creator AS [registr_nosology_diagnoses.creator], 
            T.CreateDate AS [registr_nosology_diagnoses.create_date], 
            T.GroupIn AS [registr_nosology_diagnoses.group_in], 
            T.Code AS [registr_nosology_diagnoses.code], 
            T.Name AS [registr_nosology_diagnoses.name], 
            T.Level AS [registr_nosology_diagnoses.level], 
            T.Organization AS [registr_nosology_diagnoses.organization], 
            True AS _from0
        FROM PostgresEntities.RegistrNosologyDiagnoses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.registr_nosology_pacients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView463()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.registr_nosology_pacients", @"
    SELECT VALUE -- Constructing registr_nosology_pacients
        [PostgresModel.Store.registr_nosology_pacients](T1.[registr_nosology_pacients.oid], T1.[registr_nosology_pacients.people], T1.[registr_nosology_pacients.registr_nosology_diagnoses], T1.[registr_nosology_pacients.mdoc_id], T1.[registr_nosology_pacients.date_on], T1.[registr_nosology_pacients.date_end], T1.[registr_nosology_pacients.sysdate], T1.[registr_nosology_pacients.sysuser])
    FROM (
        SELECT 
            T.Oid AS [registr_nosology_pacients.oid], 
            T.People AS [registr_nosology_pacients.people], 
            T.RegistrNosologyDiagnoses AS [registr_nosology_pacients.registr_nosology_diagnoses], 
            T.MdocId AS [registr_nosology_pacients.mdoc_id], 
            T.DateOn AS [registr_nosology_pacients.date_on], 
            T.DateEnd AS [registr_nosology_pacients.date_end], 
            T.Sysdate AS [registr_nosology_pacients.sysdate], 
            T.Sysuser AS [registr_nosology_pacients.sysuser], 
            True AS _from0
        FROM PostgresEntities.RegistrNosologyPacients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.rw_accidentnotification_tmpls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView464()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.rw_accidentnotification_tmpls", @"
    SELECT VALUE -- Constructing rw_accidentnotification_tmpls
        [PostgresModel.Store.rw_accidentnotification_tmpl](T1.[rw_accidentnotification_tmpl.oid], T1.[rw_accidentnotification_tmpl.name], T1.[rw_accidentnotification_tmpl.text], T1.[rw_accidentnotification_tmpl.lpu])
    FROM (
        SELECT 
            T.Oid AS [rw_accidentnotification_tmpl.oid], 
            T.Name AS [rw_accidentnotification_tmpl.name], 
            T.Text AS [rw_accidentnotification_tmpl.text], 
            T.Lpu AS [rw_accidentnotification_tmpl.lpu], 
            True AS _from0
        FROM PostgresEntities.RwAccidentnotificationTmpls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.rw_accidentnotification_conditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView465()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.rw_accidentnotification_conditions", @"
    SELECT VALUE -- Constructing rw_accidentnotification_conditions
        [PostgresModel.Store.rw_accidentnotification_condition](T1.[rw_accidentnotification_condition.oid], T1.[rw_accidentnotification_condition.name])
    FROM (
        SELECT 
            T.Oid AS [rw_accidentnotification_condition.oid], 
            T.Name AS [rw_accidentnotification_condition.name], 
            True AS _from0
        FROM PostgresEntities.RwAccidentnotificationConditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diag_presc_models
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView466()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diag_presc_models", @"
    SELECT VALUE -- Constructing diag_presc_models
        [PostgresModel.Store.diag_presc_model](T1.[diag_presc_model.oid], T1.[diag_presc_model.presc], T1.[diag_presc_model.diag], T1.[diag_presc_model.model])
    FROM (
        SELECT 
            T.Oid AS [diag_presc_model.oid], 
            T.Presc AS [diag_presc_model.presc], 
            T.Diag AS [diag_presc_model.diag], 
            T.Model AS [diag_presc_model.model], 
            True AS _from0
        FROM PostgresEntities.DiagPrescModels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.reason_sending_archives
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView467()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.reason_sending_archives", @"
    SELECT VALUE -- Constructing reason_sending_archives
        [PostgresModel.Store.reason_sending_archive](T1.[reason_sending_archive.oid], T1.[reason_sending_archive.name], T1.[reason_sending_archive.show], T1.[reason_sending_archive.name2], T1.[reason_sending_archive.status])
    FROM (
        SELECT 
            T.Oid AS [reason_sending_archive.oid], 
            T.Name AS [reason_sending_archive.name], 
            T.Show AS [reason_sending_archive.show], 
            T.Name2 AS [reason_sending_archive.name2], 
            T.Status AS [reason_sending_archive.status], 
            True AS _from0
        FROM PostgresEntities.ReasonSendingArchives AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.holidayreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView468()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.holidayreasons", @"
    SELECT VALUE -- Constructing holidayreasons
        [PostgresModel.Store.holidayreason](T1.holidayreason_id, T1.holidayreason_name)
    FROM (
        SELECT 
            T.Id AS holidayreason_id, 
            T.Name AS holidayreason_name, 
            True AS _from0
        FROM PostgresEntities.Holidayreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.room_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView469()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.room_infos", @"
    SELECT VALUE -- Constructing room_infos
        [PostgresModel.Store.room_info](T1.[room_info.room_id], T1.[room_info.sotr_id], T1.[room_info.is_virtual], T1.[room_info.is_oper])
    FROM (
        SELECT 
            T.RoomId AS [room_info.room_id], 
            T.SotrId AS [room_info.sotr_id], 
            T.IsVirtual AS [room_info.is_virtual], 
            T.IsOper AS [room_info.is_oper], 
            True AS _from0
        FROM PostgresEntities.RoomInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView470()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_profiles", @"
    SELECT VALUE -- Constructing ankets_profiles
        [PostgresModel.Store.ankets_profile](T1.[ankets_profile.oid], T1.[ankets_profile.name], T1.[ankets_profile.show], T1.[ankets_profile.icon])
    FROM (
        SELECT 
            T.Oid AS [ankets_profile.oid], 
            T.Name AS [ankets_profile.name], 
            T.Show AS [ankets_profile.show], 
            T.Icon AS [ankets_profile.icon], 
            True AS _from0
        FROM PostgresEntities.AnketsProfiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView471()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestrs", @"
    SELECT VALUE -- Constructing ankets_reestrs
        [PostgresModel.Store.ankets_reestr](T1.[ankets_reestr.oid], T1.[ankets_reestr.sysuser], T1.[ankets_reestr.sysdate], T1.[ankets_reestr.name], T1.[ankets_reestr.min_age], T1.[ankets_reestr.max_age], T1.[ankets_reestr.sex], T1.[ankets_reestr.in_site])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr.oid], 
            T.Sysuser AS [ankets_reestr.sysuser], 
            T.Sysdate AS [ankets_reestr.sysdate], 
            T.Name AS [ankets_reestr.name], 
            T.MinAge AS [ankets_reestr.min_age], 
            T.MaxAge AS [ankets_reestr.max_age], 
            T.Sex AS [ankets_reestr.sex], 
            T.InSite AS [ankets_reestr.in_site], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestr_answers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView472()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestr_answers", @"
    SELECT VALUE -- Constructing ankets_reestr_answers
        [PostgresModel.Store.ankets_reestr_answer](T1.[ankets_reestr_answer.oid], T1.[ankets_reestr_answer.sysuser], T1.[ankets_reestr_answer.sysdate], T1.[ankets_reestr_answer.anket_reestr_question_id], T1.[ankets_reestr_answer.name], T1.[ankets_reestr_answer.answer_type], T1.[ankets_reestr_answer.order], T1.[ankets_reestr_answer.balls])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr_answer.oid], 
            T.Sysuser AS [ankets_reestr_answer.sysuser], 
            T.Sysdate AS [ankets_reestr_answer.sysdate], 
            T.AnketReestrQuestionId AS [ankets_reestr_answer.anket_reestr_question_id], 
            T.Name AS [ankets_reestr_answer.name], 
            T.AnswerType AS [ankets_reestr_answer.answer_type], 
            T.[Order] AS [ankets_reestr_answer.order], 
            T.Balls AS [ankets_reestr_answer.balls], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestr_answer_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView473()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestr_answer_types", @"
    SELECT VALUE -- Constructing ankets_reestr_answer_types
        [PostgresModel.Store.ankets_reestr_answer_type](T1.[ankets_reestr_answer_type.oid], T1.[ankets_reestr_answer_type.name], T1.[ankets_reestr_answer_type.show], T1.[ankets_reestr_answer_type.show_editor_field])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr_answer_type.oid], 
            T.Name AS [ankets_reestr_answer_type.name], 
            T.Show AS [ankets_reestr_answer_type.show], 
            T.ShowEditorField AS [ankets_reestr_answer_type.show_editor_field], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrAnswerTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_questions_reestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView474()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_questions_reestrs", @"
    SELECT VALUE -- Constructing ankets_questions_reestrs
        [PostgresModel.Store.ankets_questions_reestr](T1.[ankets_questions_reestr.oid], T1.[ankets_questions_reestr.sysuser], T1.[ankets_questions_reestr.sysdate], T1.[ankets_questions_reestr.name], T1.[ankets_questions_reestr.anket_id], T1.[ankets_questions_reestr.order], T1.[ankets_questions_reestr.parent_answer], T1.[ankets_questions_reestr.answer_type])
    FROM (
        SELECT 
            T.Oid AS [ankets_questions_reestr.oid], 
            T.Sysuser AS [ankets_questions_reestr.sysuser], 
            T.Sysdate AS [ankets_questions_reestr.sysdate], 
            T.Name AS [ankets_questions_reestr.name], 
            T.AnketId AS [ankets_questions_reestr.anket_id], 
            T.[Order] AS [ankets_questions_reestr.order], 
            T.ParentAnswer AS [ankets_questions_reestr.parent_answer], 
            T.AnswerType AS [ankets_questions_reestr.answer_type], 
            True AS _from0
        FROM PostgresEntities.AnketsQuestionsReestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_mkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView475()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_mkb10s", @"
    SELECT VALUE -- Constructing service_mkb10s
        [PostgresModel.Store.service_mkb10](T1.[service_mkb10.oid], T1.[service_mkb10.service], T1.[service_mkb10.mkb_10])
    FROM (
        SELECT 
            T.Oid AS [service_mkb10.oid], 
            T.Service AS [service_mkb10.service], 
            T.Mkb10 AS [service_mkb10.mkb_10], 
            True AS _from0
        FROM PostgresEntities.ServiceMkb10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.service_bed_profiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView476()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.service_bed_profiles", @"
    SELECT VALUE -- Constructing service_bed_profiles
        [PostgresModel.Store.service_bed_profile](T1.[service_bed_profile.oid], T1.[service_bed_profile.service], T1.[service_bed_profile.bed_profile])
    FROM (
        SELECT 
            T.Oid AS [service_bed_profile.oid], 
            T.Service AS [service_bed_profile.service], 
            T.BedProfile AS [service_bed_profile.bed_profile], 
            True AS _from0
        FROM PostgresEntities.ServiceBedProfiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bed_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView477()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bed_infos", @"
    SELECT VALUE -- Constructing bed_infos
        [PostgresModel.Store.bed_info](T1.[bed_info.oid], T1.[bed_info.bed], T1.[bed_info.bed_profile], T1.[bed_info.date_begin], T1.[bed_info.date_end], T1.[bed_info.is_active])
    FROM (
        SELECT 
            T.Oid AS [bed_info.oid], 
            T.Bed AS [bed_info.bed], 
            T.BedProfile AS [bed_info.bed_profile], 
            T.DateBegin AS [bed_info.date_begin], 
            T.DateEnd AS [bed_info.date_end], 
            T.IsActive AS [bed_info.is_active], 
            True AS _from0
        FROM PostgresEntities.BedInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_move_diags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView478()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_move_diags", @"
    SELECT VALUE -- Constructing hospital_move_diags
        [PostgresModel.Store.hospital_move_diag](T1.[hospital_move_diag.oid], T1.[hospital_move_diag.hospital_move], T1.[hospital_move_diag.mkb10], T1.[hospital_move_diag.diag_kind], T1.[hospital_move_diag.diag_type], T1.[hospital_move_diag.diag_detect], T1.[hospital_move_diag.doctor_action], T1.[hospital_move_diag.crate_date])
    FROM (
        SELECT 
            T.Oid AS [hospital_move_diag.oid], 
            T.HospitalMove AS [hospital_move_diag.hospital_move], 
            T.Mkb10 AS [hospital_move_diag.mkb10], 
            T.DiagKind AS [hospital_move_diag.diag_kind], 
            T.DiagType AS [hospital_move_diag.diag_type], 
            T.DiagDetect AS [hospital_move_diag.diag_detect], 
            T.DoctorAction AS [hospital_move_diag.doctor_action], 
            T.CrateDate AS [hospital_move_diag.crate_date], 
            True AS _from0
        FROM PostgresEntities.HospitalMoveDiags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_move_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView479()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_move_infos", @"
    SELECT VALUE -- Constructing hospital_move_infos
        [PostgresModel.Store.hospital_move_info](T1.[hospital_move_info.oid], T1.[hospital_move_info.hospital_move], T1.[hospital_move_info.sotr], T1.[hospital_move_info.is_in_interim])
    FROM (
        SELECT 
            T.Oid AS [hospital_move_info.oid], 
            T.HospitalMove AS [hospital_move_info.hospital_move], 
            T.Sotr AS [hospital_move_info.sotr], 
            T.IsInInterim AS [hospital_move_info.is_in_interim], 
            True AS _from0
        FROM PostgresEntities.HospitalMoveInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_move_beds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView480()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_move_beds", @"
    SELECT VALUE -- Constructing hospital_move_beds
        [PostgresModel.Store.hospital_move_bed](T1.[hospital_move_bed.oid], T1.[hospital_move_bed.bed], T1.[hospital_move_bed.hospital_move])
    FROM (
        SELECT 
            T.Oid AS [hospital_move_bed.oid], 
            T.Bed AS [hospital_move_bed.bed], 
            T.HospitalMove AS [hospital_move_bed.hospital_move], 
            True AS _from0
        FROM PostgresEntities.HospitalMoveBeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_move_interim_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView481()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_move_interim_infos", @"
    SELECT VALUE -- Constructing hospital_move_interim_infos
        [PostgresModel.Store.hospital_move_interim_info](T1.[hospital_move_interim_info.oid], T1.[hospital_move_interim_info.hospital_move_interim], T1.[hospital_move_interim_info.sotr])
    FROM (
        SELECT 
            T.Oid AS [hospital_move_interim_info.oid], 
            T.HospitalMoveInterim AS [hospital_move_interim_info.hospital_move_interim], 
            T.Sotr AS [hospital_move_interim_info.sotr], 
            True AS _from0
        FROM PostgresEntities.HospitalMoveInterimInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_moves
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView482()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_moves", @"
    SELECT VALUE -- Constructing hospital_moves
        [PostgresModel.Store.hospital_move](T1.[hospital_move.oid], T1.[hospital_move.mdoc], T1.[hospital_move.otdel], T1.[hospital_move.bed_profile], T1.[hospital_move.data_begin], T1.[hospital_move.data_end], T1.[hospital_move.documents_service], T1.[hospital_move.doctor], T1.[hospital_move.count_place], T1.[hospital_move.planing], T1.[hospital_move.create_date])
    FROM (
        SELECT 
            T.Oid AS [hospital_move.oid], 
            T.Mdoc AS [hospital_move.mdoc], 
            T.Otdel AS [hospital_move.otdel], 
            T.BedProfile AS [hospital_move.bed_profile], 
            T.DataBegin AS [hospital_move.data_begin], 
            T.DataEnd AS [hospital_move.data_end], 
            T.DocumentsService AS [hospital_move.documents_service], 
            T.Doctor AS [hospital_move.doctor], 
            T.CountPlace AS [hospital_move.count_place], 
            T.Planing AS [hospital_move.planing], 
            T.CreateDate AS [hospital_move.create_date], 
            True AS _from0
        FROM PostgresEntities.HospitalMoves AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_durations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView483()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_durations", @"
    SELECT VALUE -- Constructing hospital_durations
        [PostgresModel.Store.hospital_duration](T1.[hospital_duration.oid], T1.[hospital_duration.mdoc], T1.[hospital_duration.date_begin], T1.[hospital_duration.date_end], T1.[hospital_duration.day_location_count], T1.[hospital_duration.duration_type], T1.[hospital_duration.duration_cancel], T1.[hospital_duration.tick_res], T1.[hospital_duration.create_date])
    FROM (
        SELECT 
            T.Oid AS [hospital_duration.oid], 
            T.Mdoc AS [hospital_duration.mdoc], 
            T.DateBegin AS [hospital_duration.date_begin], 
            T.DateEnd AS [hospital_duration.date_end], 
            T.DayLocationCount AS [hospital_duration.day_location_count], 
            T.DurationType AS [hospital_duration.duration_type], 
            T.DurationCancel AS [hospital_duration.duration_cancel], 
            T.TickRes AS [hospital_duration.tick_res], 
            T.CreateDate AS [hospital_duration.create_date], 
            True AS _from0
        FROM PostgresEntities.HospitalDurations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_move_interims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView484()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_move_interims", "\r\n    SELECT VALUE -- Constructing hospital_move_interims\r\n        [PostgresModel" +
                    ".Store.hospital_move_interim](T1.[hospital_move_interim.oid], T1.[hospital_move_" +
                    "interim.hospital_move], T1.[hospital_move_interim.mdoc], T1.[hospital_move_inter" +
                    "im.otdel], T1.[hospital_move_interim.bed_profile], T1.[hospital_move_interim.dat" +
                    "e_begin], T1.[hospital_move_interim.date_end], T1.[hospital_move_interim.documen" +
                    "t_service], T1.[hospital_move_interim.doctor], T1.[hospital_move_interim.count_p" +
                    "lace], T1.[hospital_move_interim.is_leave], T1.[hospital_move_interim.del], T1.[" +
                    "hospital_move_interim.planing], T1.[hospital_move_interim.create_date], T1.[hosp" +
                    "ital_move_interim.bed], T1.[hospital_move_interim.service], T1.[hospital_move_in" +
                    "terim.tofoms])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [hospital_move" +
                    "_interim.oid], \r\n            T.HospitalMove AS [hospital_move_interim.hospital_m" +
                    "ove], \r\n            T.Mdoc AS [hospital_move_interim.mdoc], \r\n            T.Otde" +
                    "l AS [hospital_move_interim.otdel], \r\n            T.BedProfile AS [hospital_move" +
                    "_interim.bed_profile], \r\n            T.DateBegin AS [hospital_move_interim.date_" +
                    "begin], \r\n            T.DateEnd AS [hospital_move_interim.date_end], \r\n         " +
                    "   T.DocumentService AS [hospital_move_interim.document_service], \r\n            " +
                    "T.Doctor AS [hospital_move_interim.doctor], \r\n            T.CountPlace AS [hospi" +
                    "tal_move_interim.count_place], \r\n            T.IsLeave AS [hospital_move_interim" +
                    ".is_leave], \r\n            T.Del AS [hospital_move_interim.del], \r\n            T." +
                    "Planing AS [hospital_move_interim.planing], \r\n            T.CreateDate AS [hospi" +
                    "tal_move_interim.create_date], \r\n            T.Bed AS [hospital_move_interim.bed" +
                    "], \r\n            T.Service AS [hospital_move_interim.service], \r\n            T.T" +
                    "ofoms AS [hospital_move_interim.tofoms], \r\n            True AS _from0\r\n        F" +
                    "ROM PostgresEntities.HospitalMoveInterims AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.feedbacks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView485()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.feedbacks", @"
    SELECT VALUE -- Constructing feedbacks
        [PostgresModel.Store.feedback](T1.feedback_oid, T1.feedback_people, T1.feedback_date, T1.feedback_title, T1.feedback_body)
    FROM (
        SELECT 
            T.Oid AS feedback_oid, 
            T.People AS feedback_people, 
            T.Date AS feedback_date, 
            T.Title AS feedback_title, 
            T.Body AS feedback_body, 
            True AS _from0
        FROM PostgresEntities.Feedbacks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestr_results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView486()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestr_results", @"
    SELECT VALUE -- Constructing ankets_reestr_results
        [PostgresModel.Store.ankets_reestr_results](T1.[ankets_reestr_results.oid], T1.[ankets_reestr_results.result_text], T1.[ankets_reestr_results.sysuser], T1.[ankets_reestr_results.sysdate], T1.[ankets_reestr_results.ankets_id], T1.[ankets_reestr_results.risk_group], T1.[ankets_reestr_results.result_type])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr_results.oid], 
            T.ResultText AS [ankets_reestr_results.result_text], 
            T.Sysuser AS [ankets_reestr_results.sysuser], 
            T.Sysdate AS [ankets_reestr_results.sysdate], 
            T.AnketsId AS [ankets_reestr_results.ankets_id], 
            T.RiskGroup AS [ankets_reestr_results.risk_group], 
            T.ResultType AS [ankets_reestr_results.result_type], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrResults AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.routing_sheets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView487()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.routing_sheets", @"
    SELECT VALUE -- Constructing routing_sheets
        [PostgresModel.Store.routing_sheets](T1.[routing_sheets.oid], T1.[routing_sheets.name], T1.[routing_sheets.synonim], T1.[routing_sheets.show], T1.[routing_sheets.sysdate])
    FROM (
        SELECT 
            T.Oid AS [routing_sheets.oid], 
            T.Name AS [routing_sheets.name], 
            T.Synonim AS [routing_sheets.synonim], 
            T.Show AS [routing_sheets.show], 
            T.Sysdate AS [routing_sheets.sysdate], 
            True AS _from0
        FROM PostgresEntities.RoutingSheets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.routing_sheets_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView488()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.routing_sheets_people", @"
    SELECT VALUE -- Constructing routing_sheets_people
        [PostgresModel.Store.routing_sheets_people](T1.[routing_sheets_people.people], T1.[routing_sheets_people.routing_sheet_id], T1.[routing_sheets_people.sysdate])
    FROM (
        SELECT 
            T.People AS [routing_sheets_people.people], 
            T.RoutingSheetId AS [routing_sheets_people.routing_sheet_id], 
            T.Sysdate AS [routing_sheets_people.sysdate], 
            True AS _from0
        FROM PostgresEntities.RoutingSheetsPeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestr_rules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView489()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestr_rules", @"
    SELECT VALUE -- Constructing ankets_reestr_rules
        [PostgresModel.Store.ankets_reestr_rules](T1.[ankets_reestr_rules.oid], T1.[ankets_reestr_rules.ankets_reestr_result], T1.[ankets_reestr_rules.answer_id], T1.[ankets_reestr_rules.sysdate])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr_rules.oid], 
            T.AnketsReestrResult AS [ankets_reestr_rules.ankets_reestr_result], 
            T.AnswerId AS [ankets_reestr_rules.answer_id], 
            T.Sysdate AS [ankets_reestr_rules.sysdate], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrRules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_reestr_result_balls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView490()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_reestr_result_balls", @"
    SELECT VALUE -- Constructing ankets_reestr_result_balls
        [PostgresModel.Store.ankets_reestr_result_ball](T1.[ankets_reestr_result_ball.oid], T1.[ankets_reestr_result_ball.min_val], T1.[ankets_reestr_result_ball.max_val], T1.[ankets_reestr_result_ball.include_min], T1.[ankets_reestr_result_ball.include_max])
    FROM (
        SELECT 
            T.Oid AS [ankets_reestr_result_ball.oid], 
            T.MinVal AS [ankets_reestr_result_ball.min_val], 
            T.MaxVal AS [ankets_reestr_result_ball.max_val], 
            T.IncludeMin AS [ankets_reestr_result_ball.include_min], 
            T.IncludeMax AS [ankets_reestr_result_ball.include_max], 
            True AS _from0
        FROM PostgresEntities.AnketsReestrResultBalls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_result_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView491()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_result_types", @"
    SELECT VALUE -- Constructing ankets_result_types
        [PostgresModel.Store.ankets_result_type](T1.[ankets_result_type.oid], T1.[ankets_result_type.name])
    FROM (
        SELECT 
            T.Oid AS [ankets_result_type.oid], 
            T.Name AS [ankets_result_type.name], 
            True AS _from0
        FROM PostgresEntities.AnketsResultTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mdoc_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView492()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mdoc_groups", @"
    SELECT VALUE -- Constructing mdoc_groups
        [PostgresModel.Store.mdoc_group](T1.[mdoc_group.oid], T1.[mdoc_group.name], T1.[mdoc_group.start_num], T1.[mdoc_group.date_end], T1.[mdoc_group.lpu], T1.[mdoc_group.last_change_num_date])
    FROM (
        SELECT 
            T.Oid AS [mdoc_group.oid], 
            T.Name AS [mdoc_group.name], 
            T.StartNum AS [mdoc_group.start_num], 
            T.DateEnd AS [mdoc_group.date_end], 
            T.Lpu AS [mdoc_group.lpu], 
            T.LastChangeNumDate AS [mdoc_group.last_change_num_date], 
            True AS _from0
        FROM PostgresEntities.MdocGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dictionary_nsis
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView493()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dictionary_nsis", @"
    SELECT VALUE -- Constructing dictionary_nsis
        [PostgresModel.Store.dictionary_nsi](T1.[dictionary_nsi.oid], T1.[dictionary_nsi.dictionary], T1.[dictionary_nsi.synonim], T1.[dictionary_nsi.name], T1.[dictionary_nsi.show])
    FROM (
        SELECT 
            T.Oid AS [dictionary_nsi.oid], 
            T.Dictionary AS [dictionary_nsi.dictionary], 
            T.Synonim AS [dictionary_nsi.synonim], 
            T.Name AS [dictionary_nsi.name], 
            T.Show AS [dictionary_nsi.show], 
            True AS _from0
        FROM PostgresEntities.DictionaryNsis AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.chathistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView494()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.chathistories", @"
    SELECT VALUE -- Constructing chathistories
        [PostgresModel.Store.chathistory](T1.chathistory_oid, T1.chathistory_senderid, T1.chathistory_receiverid, T1.chathistory_messagetime, T1.chathistory_messagetext, T1.chathistory_isnew)
    FROM (
        SELECT 
            T.Oid AS chathistory_oid, 
            T.Senderid AS chathistory_senderid, 
            T.Receiverid AS chathistory_receiverid, 
            T.Messagetime AS chathistory_messagetime, 
            T.Messagetext AS chathistory_messagetext, 
            T.Isnew AS chathistory_isnew, 
            True AS _from0
        FROM PostgresEntities.Chathistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.chatgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView495()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.chatgroups", @"
    SELECT VALUE -- Constructing chatgroups
        [PostgresModel.Store.chatgroup](T1.chatgroup_oid, T1.chatgroup_ownerid, T1.chatgroup_groupname)
    FROM (
        SELECT 
            T.Oid AS chatgroup_oid, 
            T.Ownerid AS chatgroup_ownerid, 
            T.Groupname AS chatgroup_groupname, 
            True AS _from0
        FROM PostgresEntities.Chatgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_group_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView496()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_group_presctypes", @"
    SELECT VALUE -- Constructing risk_group_presctypes
        [PostgresModel.Store.risk_group_presctype](T1.[risk_group_presctype.oid], T1.[risk_group_presctype.presctype_id], T1.[risk_group_presctype.risk_group_id], T1.[risk_group_presctype.is_start], T1.[risk_group_presctype.order])
    FROM (
        SELECT 
            T.Oid AS [risk_group_presctype.oid], 
            T.PresctypeId AS [risk_group_presctype.presctype_id], 
            T.RiskGroupId AS [risk_group_presctype.risk_group_id], 
            T.IsStart AS [risk_group_presctype.is_start], 
            T.[Order] AS [risk_group_presctype.order], 
            True AS _from0
        FROM PostgresEntities.RiskGroupPresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView497()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_groups", @"
    SELECT VALUE -- Constructing risk_groups
        [PostgresModel.Store.risk_group](T1.[risk_group.oid], T1.[risk_group.name], T1.[risk_group.date_create])
    FROM (
        SELECT 
            T.Oid AS [risk_group.oid], 
            T.Name AS [risk_group.name], 
            T.DateCreate AS [risk_group.date_create], 
            True AS _from0
        FROM PostgresEntities.RiskGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.hospital_queues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView498()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3106);
            viewString.Append("\r\n    SELECT VALUE -- Constructing hospital_queues\r\n        [PostgresModel.Store");
            viewString.Append(".hospital_queue](T1.[hospital_queue.oid], T1.[hospital_queue.lpu], T1.[hospital_");
            viewString.Append("queue.people], T1.[hospital_queue.begin_date], T1.[hospital_queue.end_date], T1.");
            viewString.Append("[hospital_queue.kol], T1.[hospital_queue.hospital_reason], T1.[hospital_queue.lp");
            viewString.Append("u_napr], T1.[hospital_queue.mkb_10], T1.[hospital_queue.insurance], T1.[hospital");
            viewString.Append("_queue.sotr_enqueue], T1.[hospital_queue.enqueue_date], T1.[hospital_queue.statu");
            viewString.Append("s], T1.[hospital_queue.sotr_status], T1.[hospital_queue.status_date], T1.[hospit");
            viewString.Append("al_queue.is_podpis], T1.[hospital_queue.sotr_podpis], T1.[hospital_queue.hospita");
            viewString.Append("l_disp_group], T1.[hospital_queue.hospital_disp_subgroup], T1.[hospital_queue.ho");
            viewString.Append("spital_remove], T1.[hospital_queue.removed_date], T1.[hospital_queue.sotr_remove");
            viewString.Append("d], T1.[hospital_queue.mdoc], T1.[hospital_queue.otdel], T1.[hospital_queue.room");
            viewString.Append("], T1.[hospital_queue.broninfo], T1.[hospital_queue.email], T1.[hospital_queue.h");
            viewString.Append("ospital_quota], T1.[hospital_queue.talon_vmp_num], T1.[hospital_queue.talon_vmp_");
            viewString.Append("date], T1.[hospital_queue.hospital_src_finance], T1.[hospital_queue.bed_profile]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [hospital_queue.oid], \r\n   ");
            viewString.Append("         T.Lpu AS [hospital_queue.lpu], \r\n            T.People AS [hospital_queu");
            viewString.Append("e.people], \r\n            T.BeginDate AS [hospital_queue.begin_date], \r\n         ");
            viewString.Append("   T.EndDate AS [hospital_queue.end_date], \r\n            T.Kol AS [hospital_queu");
            viewString.Append("e.kol], \r\n            T.HospitalReason AS [hospital_queue.hospital_reason], \r\n  ");
            viewString.Append("          T.LpuNapr AS [hospital_queue.lpu_napr], \r\n            T.Mkb10 AS [hosp");
            viewString.Append("ital_queue.mkb_10], \r\n            T.Insurance AS [hospital_queue.insurance], \r\n ");
            viewString.Append("           T.SotrEnqueue AS [hospital_queue.sotr_enqueue], \r\n            T.Enque");
            viewString.Append("ueDate AS [hospital_queue.enqueue_date], \r\n            T.Status AS [hospital_que");
            viewString.Append("ue.status], \r\n            T.SotrStatus AS [hospital_queue.sotr_status], \r\n      ");
            viewString.Append("      T.StatusDate AS [hospital_queue.status_date], \r\n            T.IsPodpis AS ");
            viewString.Append("[hospital_queue.is_podpis], \r\n            T.SotrPodpis AS [hospital_queue.sotr_p");
            viewString.Append("odpis], \r\n            T.HospitalDispGroup AS [hospital_queue.hospital_disp_group");
            viewString.Append("], \r\n            T.HospitalDispSubgroup AS [hospital_queue.hospital_disp_subgrou");
            viewString.Append("p], \r\n            T.HospitalRemove AS [hospital_queue.hospital_remove], \r\n      ");
            viewString.Append("      T.RemovedDate AS [hospital_queue.removed_date], \r\n            T.SotrRemove");
            viewString.Append("d AS [hospital_queue.sotr_removed], \r\n            T.Mdoc AS [hospital_queue.mdoc");
            viewString.Append("], \r\n            T.Otdel AS [hospital_queue.otdel], \r\n            T.Room AS [hos");
            viewString.Append("pital_queue.room], \r\n            T.Broninfo AS [hospital_queue.broninfo], \r\n    ");
            viewString.Append("        T.Email AS [hospital_queue.email], \r\n            T.HospitalQuota AS [hos");
            viewString.Append("pital_queue.hospital_quota], \r\n            T.TalonVmpNum AS [hospital_queue.talo");
            viewString.Append("n_vmp_num], \r\n            T.TalonVmpDate AS [hospital_queue.talon_vmp_date], \r\n ");
            viewString.Append("           T.HospitalSrcFinance AS [hospital_queue.hospital_src_finance], \r\n    ");
            viewString.Append("        T.BedProfile AS [hospital_queue.bed_profile], \r\n            True AS _fro");
            viewString.Append("m0\r\n        FROM PostgresEntities.HospitalQueues AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.hospital_queues", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.duration_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView499()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.duration_types", @"
    SELECT VALUE -- Constructing duration_types
        [PostgresModel.Store.duration_type](T1.[duration_type.oid], T1.[duration_type.name], T1.[duration_type.show], T1.[duration_type.name2], T1.[duration_type.status])
    FROM (
        SELECT 
            T.Oid AS [duration_type.oid], 
            T.Name AS [duration_type.name], 
            T.Show AS [duration_type.show], 
            T.Name2 AS [duration_type.name2], 
            T.Status AS [duration_type.status], 
            True AS _from0
        FROM PostgresEntities.DurationTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.duration_cancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView500()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.duration_cancels", @"
    SELECT VALUE -- Constructing duration_cancels
        [PostgresModel.Store.duration_cancel](T1.[duration_cancel.oid], T1.[duration_cancel.name], T1.[duration_cancel.show], T1.[duration_cancel.name2], T1.[duration_cancel.status])
    FROM (
        SELECT 
            T.Oid AS [duration_cancel.oid], 
            T.Name AS [duration_cancel.name], 
            T.Show AS [duration_cancel.show], 
            T.Name2 AS [duration_cancel.name2], 
            T.Status AS [duration_cancel.status], 
            True AS _from0
        FROM PostgresEntities.DurationCancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.documents_services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView501()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.documents_services", @"
    SELECT VALUE -- Constructing documents_services
        [PostgresModel.Store.documents_service](T1.[documents_service.oid], T1.[documents_service.lpu], T1.[documents_service.mdoc_type_id], T1.[documents_service.num_doc], T1.[documents_service.year_doc], T1.[documents_service.date_generate])
    FROM (
        SELECT 
            T.Oid AS [documents_service.oid], 
            T.Lpu AS [documents_service.lpu], 
            T.MdocTypeId AS [documents_service.mdoc_type_id], 
            T.NumDoc AS [documents_service.num_doc], 
            T.YearDoc AS [documents_service.year_doc], 
            T.DateGenerate AS [documents_service.date_generate], 
            True AS _from0
        FROM PostgresEntities.DocumentsServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temperature_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView502()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temperature_params", @"
    SELECT VALUE -- Constructing temperature_params
        [PostgresModel.Store.temperature_param](T1.[temperature_param.oid], T1.[temperature_param.param_name], T1.[temperature_param.synonim], T1.[temperature_param.type_field], T1.[temperature_param.group_name], T1.[temperature_param.num_order], T1.[temperature_param.is_del], T1.[temperature_param.min_value], T1.[temperature_param.max_value], T1.[temperature_param.norm_min_value], T1.[temperature_param.norm_max_value])
    FROM (
        SELECT 
            T.Oid AS [temperature_param.oid], 
            T.ParamName AS [temperature_param.param_name], 
            T.Synonim AS [temperature_param.synonim], 
            T.TypeField AS [temperature_param.type_field], 
            T.GroupName AS [temperature_param.group_name], 
            T.NumOrder AS [temperature_param.num_order], 
            T.IsDel AS [temperature_param.is_del], 
            T.MinValue AS [temperature_param.min_value], 
            T.MaxValue AS [temperature_param.max_value], 
            T.NormMinValue AS [temperature_param.norm_min_value], 
            T.NormMaxValue AS [temperature_param.norm_max_value], 
            True AS _from0
        FROM PostgresEntities.TemperatureParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temperatures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView503()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temperatures", @"
    SELECT VALUE -- Constructing temperatures
        [PostgresModel.Store.temperature](T1.temperature_oid, T1.[temperature.temperature_param], T1.temperature_mdoc, T1.[temperature.date_on], T1.[temperature.param_value], T1.temperature_sotr, T1.[temperature.date_changed])
    FROM (
        SELECT 
            T.Oid AS temperature_oid, 
            T.TemperatureParam AS [temperature.temperature_param], 
            T.Mdoc AS temperature_mdoc, 
            T.DateOn AS [temperature.date_on], 
            T.ParamValue AS [temperature.param_value], 
            T.Sotr AS temperature_sotr, 
            T.DateChanged AS [temperature.date_changed], 
            True AS _from0
        FROM PostgresEntities.Temperatures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView504()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_schedules", @"
    SELECT VALUE -- Constructing sotr_schedules
        [PostgresModel.Store.sotr_schedule](T1.[sotr_schedule.oid], T1.[sotr_schedule.sotr_id], T1.[sotr_schedule.start_on], T1.[sotr_schedule.end_on], T1.[sotr_schedule.start_break], T1.[sotr_schedule.end_break], T1.[sotr_schedule.holiday_reason])
    FROM (
        SELECT 
            T.Oid AS [sotr_schedule.oid], 
            T.SotrId AS [sotr_schedule.sotr_id], 
            T.StartOn AS [sotr_schedule.start_on], 
            T.EndOn AS [sotr_schedule.end_on], 
            T.StartBreak AS [sotr_schedule.start_break], 
            T.EndBreak AS [sotr_schedule.end_break], 
            T.HolidayReason AS [sotr_schedule.holiday_reason], 
            True AS _from0
        FROM PostgresEntities.SotrSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.rw_accidentnotifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView505()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.rw_accidentnotifications", @"
    SELECT VALUE -- Constructing rw_accidentnotifications
        [PostgresModel.Store.rw_accidentnotification](T1.[rw_accidentnotification.mdoc], T1.[rw_accidentnotification.condition], T1.[rw_accidentnotification.cause_text])
    FROM (
        SELECT 
            T.Mdoc AS [rw_accidentnotification.mdoc], 
            T.Condition AS [rw_accidentnotification.condition], 
            T.CauseText AS [rw_accidentnotification.cause_text], 
            True AS _from0
        FROM PostgresEntities.RwAccidentnotifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cab_break_reasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView506()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cab_break_reasons", @"
    SELECT VALUE -- Constructing cab_break_reasons
        [PostgresModel.Store.cab_break_reason](T1.[cab_break_reason.oid], T1.[cab_break_reason.name])
    FROM (
        SELECT 
            T.Oid AS [cab_break_reason.oid], 
            T.Name AS [cab_break_reason.name], 
            True AS _from0
        FROM PostgresEntities.CabBreakReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cabinet_schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView507()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cabinet_schedules", @"
    SELECT VALUE -- Constructing cabinet_schedules
        [PostgresModel.Store.cabinet_schedule](T1.[cabinet_schedule.oid], T1.[cabinet_schedule.cabinet_id], T1.[cabinet_schedule.start_on], T1.[cabinet_schedule.end_on])
    FROM (
        SELECT 
            T.Oid AS [cabinet_schedule.oid], 
            T.CabinetId AS [cabinet_schedule.cabinet_id], 
            T.StartOn AS [cabinet_schedule.start_on], 
            T.EndOn AS [cabinet_schedule.end_on], 
            True AS _from0
        FROM PostgresEntities.CabinetSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.cabinet_break_schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView508()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.cabinet_break_schedules", @"
    SELECT VALUE -- Constructing cabinet_break_schedules
        [PostgresModel.Store.cabinet_break_schedule](T1.[cabinet_break_schedule.oid], T1.[cabinet_break_schedule.cabinet_id], T1.[cabinet_break_schedule.start_break], T1.[cabinet_break_schedule.end_break], T1.[cabinet_break_schedule.break_reason_id])
    FROM (
        SELECT 
            T.Oid AS [cabinet_break_schedule.oid], 
            T.CabinetId AS [cabinet_break_schedule.cabinet_id], 
            T.StartBreak AS [cabinet_break_schedule.start_break], 
            T.EndBreak AS [cabinet_break_schedule.end_break], 
            T.BreakReasonId AS [cabinet_break_schedule.break_reason_id], 
            True AS _from0
        FROM PostgresEntities.CabinetBreakSchedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.latinnames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView509()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.latinnames", @"
    SELECT VALUE -- Constructing latinnames
        [PostgresModel.Store.latinnames](T1.latinnames_oid, T1.latinnames_id, T1.latinnames_name)
    FROM (
        SELECT 
            T.Oid AS latinnames_oid, 
            T.Id AS latinnames_id, 
            T.Name AS latinnames_name, 
            True AS _from0
        FROM PostgresEntities.Latinnames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_input_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView510()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_input_groups", @"
    SELECT VALUE -- Constructing medic_input_groups
        [PostgresModel.Store.medic_input_group](T1.[medic_input_group.oid], T1.[medic_input_group.name], T1.[medic_input_group.description])
    FROM (
        SELECT 
            T.Oid AS [medic_input_group.oid], 
            T.Name AS [medic_input_group.name], 
            T.Description AS [medic_input_group.description], 
            True AS _from0
        FROM PostgresEntities.MedicInputGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_given_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView511()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_given_templates", @"
    SELECT VALUE -- Constructing recipe_given_templates
        [PostgresModel.Store.recipe_given_template](T1.[recipe_given_template.oid], T1.[recipe_given_template.sotr], T1.[recipe_given_template.name])
    FROM (
        SELECT 
            T.Oid AS [recipe_given_template.oid], 
            T.Sotr AS [recipe_given_template.sotr], 
            T.Name AS [recipe_given_template.name], 
            True AS _from0
        FROM PostgresEntities.RecipeGivenTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_given_template_details
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView512()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_given_template_details", @"
    SELECT VALUE -- Constructing recipe_given_template_details
        [PostgresModel.Store.recipe_given_template_detail](T1.[recipe_given_template_detail.oid], T1.[recipe_given_template_detail.recipe_given_template], T1.[recipe_given_template_detail.medic], T1.[recipe_given_template_detail.count_given])
    FROM (
        SELECT 
            T.Oid AS [recipe_given_template_detail.oid], 
            T.RecipeGivenTemplate AS [recipe_given_template_detail.recipe_given_template], 
            T.Medic AS [recipe_given_template_detail.medic], 
            T.CountGiven AS [recipe_given_template_detail.count_given], 
            True AS _from0
        FROM PostgresEntities.RecipeGivenTemplateDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vraches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView513()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vraches", @"
    SELECT VALUE -- Constructing vraches
        [PostgresModel.Store.vrach](T1.vrach_oid, T1.[vrach.mdoc_id], T1.[vrach.sotr_id], T1.[vrach.ins_date])
    FROM (
        SELECT 
            T.Oid AS vrach_oid, 
            T.MdocId AS [vrach.mdoc_id], 
            T.SotrId AS [vrach.sotr_id], 
            T.InsDate AS [vrach.ins_date], 
            True AS _from0
        FROM PostgresEntities.Vraches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.equipment_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView514()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.equipment_presctypes", @"
    SELECT VALUE -- Constructing equipment_presctypes
        [PostgresModel.Store.equipment_presctype](T1.[equipment_presctype.oid], T1.[equipment_presctype.equipment], T1.[equipment_presctype.presctype])
    FROM (
        SELECT 
            T.Oid AS [equipment_presctype.oid], 
            T.Equipment AS [equipment_presctype.equipment], 
            T.Presctype AS [equipment_presctype.presctype], 
            True AS _from0
        FROM PostgresEntities.EquipmentPresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactor_specialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView515()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactor_specialties", @"
    SELECT VALUE -- Constructing profex_proffactor_specialties
        [PostgresModel.Store.profex_proffactor_specialty](T1.[profex_proffactor_specialty.oid], T1.[profex_proffactor_specialty.profex_proffactor], T1.[profex_proffactor_specialty.specialty])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor_specialty.oid], 
            T.ProfexProffactor AS [profex_proffactor_specialty.profex_proffactor], 
            T.Specialty AS [profex_proffactor_specialty.specialty], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactorSpecialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_proffactor_presc_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView516()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_proffactor_presc_params", @"
    SELECT VALUE -- Constructing profex_proffactor_presc_params
        [PostgresModel.Store.profex_proffactor_presc_param](T1.[profex_proffactor_presc_param.oid], T1.[profex_proffactor_presc_param.profex_proffactor_presc], T1.[profex_proffactor_presc_param.profex_actions_type], T1.[profex_proffactor_presc_param.sex], T1.[profex_proffactor_presc_param.age_group_type])
    FROM (
        SELECT 
            T.Oid AS [profex_proffactor_presc_param.oid], 
            T.ProfexProffactorPresc AS [profex_proffactor_presc_param.profex_proffactor_presc], 
            T.ProfexActionsType AS [profex_proffactor_presc_param.profex_actions_type], 
            T.Sex AS [profex_proffactor_presc_param.sex], 
            T.AgeGroupType AS [profex_proffactor_presc_param.age_group_type], 
            True AS _from0
        FROM PostgresEntities.ProfexProffactorPrescParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.company_ownerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView517()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.company_ownerships", @"
    SELECT VALUE -- Constructing company_ownerships
        [PostgresModel.Store.company_ownership](T1.[company_ownership.oid], T1.[company_ownership.name], T1.[company_ownership.shortname])
    FROM (
        SELECT 
            T.Oid AS [company_ownership.oid], 
            T.Name AS [company_ownership.name], 
            T.Shortname AS [company_ownership.shortname], 
            True AS _from0
        FROM PostgresEntities.CompanyOwnerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_actions_status_events
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView518()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_actions_status_events", @"
    SELECT VALUE -- Constructing profex_actions_status_events
        [PostgresModel.Store.profex_actions_status_event](T1.[profex_actions_status_event.id], T1.[profex_actions_status_event.name])
    FROM (
        SELECT 
            T.Id AS [profex_actions_status_event.id], 
            T.Name AS [profex_actions_status_event.name], 
            True AS _from0
        FROM PostgresEntities.ProfexActionsStatusEvents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_conclusions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView519()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_conclusions", @"
    SELECT VALUE -- Constructing profex_conclusions
        [PostgresModel.Store.profex_conclusion](T1.[profex_conclusion.oid], T1.[profex_conclusion.name])
    FROM (
        SELECT 
            T.Oid AS [profex_conclusion.oid], 
            T.Name AS [profex_conclusion.name], 
            True AS _from0
        FROM PostgresEntities.ProfexConclusions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_group_healths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView520()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_group_healths", @"
    SELECT VALUE -- Constructing profex_group_healths
        [PostgresModel.Store.profex_group_health](T1.[profex_group_health.oid], T1.[profex_group_health.name])
    FROM (
        SELECT 
            T.Oid AS [profex_group_health.oid], 
            T.Name AS [profex_group_health.name], 
            True AS _from0
        FROM PostgresEntities.ProfexGroupHealths AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_diseases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView521()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_diseases", @"
    SELECT VALUE -- Constructing profex_diseases
        [PostgresModel.Store.profex_disease](T1.[profex_disease.oid], T1.[profex_disease.code], T1.[profex_disease.name], T1.[profex_disease.parent], T1.[profex_disease.proffactor])
    FROM (
        SELECT 
            T.Oid AS [profex_disease.oid], 
            T.Code AS [profex_disease.code], 
            T.Name AS [profex_disease.name], 
            T.Parent AS [profex_disease.parent], 
            T.Proffactor AS [profex_disease.proffactor], 
            True AS _from0
        FROM PostgresEntities.ProfexDiseases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_notices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView522()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_notices", @"
    SELECT VALUE -- Constructing profex_notices
        [PostgresModel.Store.profex_notice](T1.[profex_notice.oid], T1.[profex_notice.profex_list], T1.[profex_notice.diag], T1.[profex_notice.notice_num], T1.[profex_notice.notice_date], T1.[profex_notice.description], T1.[profex_notice.creation_date], T1.[profex_notice.profex_notice_status])
    FROM (
        SELECT 
            T.Oid AS [profex_notice.oid], 
            T.ProfexList AS [profex_notice.profex_list], 
            T.Diag AS [profex_notice.diag], 
            T.NoticeNum AS [profex_notice.notice_num], 
            T.NoticeDate AS [profex_notice.notice_date], 
            T.Description AS [profex_notice.description], 
            T.CreationDate AS [profex_notice.creation_date], 
            T.ProfexNoticeStatus AS [profex_notice.profex_notice_status], 
            True AS _from0
        FROM PostgresEntities.ProfexNotices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_notice_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView523()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_notice_status", @"
    SELECT VALUE -- Constructing profex_notice_status
        [PostgresModel.Store.profex_notice_status](T1.[profex_notice_status.oid], T1.[profex_notice_status.name])
    FROM (
        SELECT 
            T.Oid AS [profex_notice_status.oid], 
            T.Name AS [profex_notice_status.name], 
            True AS _from0
        FROM PostgresEntities.ProfexNoticeStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_departments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView524()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_departments", @"
    SELECT VALUE -- Constructing profex_departments
        [PostgresModel.Store.profex_department](T1.[profex_department.oid], T1.[profex_department.name], T1.[profex_department.profex_company])
    FROM (
        SELECT 
            T.Oid AS [profex_department.oid], 
            T.Name AS [profex_department.name], 
            T.ProfexCompany AS [profex_department.profex_company], 
            True AS _from0
        FROM PostgresEntities.ProfexDepartments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_recommendations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView525()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_recommendations", @"
    SELECT VALUE -- Constructing profex_recommendations
        [PostgresModel.Store.profex_recommendation](T1.[profex_recommendation.oid], T1.[profex_recommendation.parent], T1.[profex_recommendation.name])
    FROM (
        SELECT 
            T.Oid AS [profex_recommendation.oid], 
            T.Parent AS [profex_recommendation.parent], 
            T.Name AS [profex_recommendation.name], 
            True AS _from0
        FROM PostgresEntities.ProfexRecommendations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_list_naz_recommendations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView526()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_list_naz_recommendations", @"
    SELECT VALUE -- Constructing profex_list_naz_recommendations
        [PostgresModel.Store.profex_list_naz_recommendation](T1.[profex_list_naz_recommendation.oid], T1.[profex_list_naz_recommendation.profex_list_naz], T1.[profex_list_naz_recommendation.profex_recommendation])
    FROM (
        SELECT 
            T.Oid AS [profex_list_naz_recommendation.oid], 
            T.ProfexListNaz AS [profex_list_naz_recommendation.profex_list_naz], 
            T.ProfexRecommendation AS [profex_list_naz_recommendation.profex_recommendation], 
            True AS _from0
        FROM PostgresEntities.ProfexListNazRecommendations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.custom_messages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView527()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.custom_messages", @"
    SELECT VALUE -- Constructing custom_messages
        [PostgresModel.Store.custom_message](T1.[custom_message.oid], T1.[custom_message.system_message_type], T1.[custom_message.people], T1.[custom_message.enabled], T1.[custom_message.notify_schedule], T1.[custom_message.message_text])
    FROM (
        SELECT 
            T.Oid AS [custom_message.oid], 
            T.SystemMessageType AS [custom_message.system_message_type], 
            T.People AS [custom_message.people], 
            T.Enabled AS [custom_message.enabled], 
            T.NotifySchedule AS [custom_message.notify_schedule], 
            T.MessageText AS [custom_message.message_text], 
            True AS _from0
        FROM PostgresEntities.CustomMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_no_notifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView528()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_no_notifications", @"
    SELECT VALUE -- Constructing people_no_notifications
        [PostgresModel.Store.people_no_notification](T1.[people_no_notification.people], T1.[people_no_notification.operator], T1.[people_no_notification.date])
    FROM (
        SELECT 
            T.People AS [people_no_notification.people], 
            T.Operator AS [people_no_notification.operator], 
            T.Date AS [people_no_notification.date], 
            True AS _from0
        FROM PostgresEntities.PeopleNoNotifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_message_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView529()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_message_types", @"
    SELECT VALUE -- Constructing system_message_types
        [PostgresModel.Store.system_message_type](T1.[system_message_type.oid], T1.[system_message_type.name], T1.[system_message_type.show])
    FROM (
        SELECT 
            T.Oid AS [system_message_type.oid], 
            T.Name AS [system_message_type.name], 
            T.Show AS [system_message_type.show], 
            True AS _from0
        FROM PostgresEntities.SystemMessageTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_messages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView530()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_messages", @"
    SELECT VALUE -- Constructing system_messages
        [PostgresModel.Store.system_message](T1.[system_message.oid], T1.[system_message.system_message_type], T1.[system_message.lpu], T1.[system_message.enabled], T1.[system_message.sending_time], T1.[system_message.sending_days_before], T1.[system_message.message_text], T1.[system_message.inform_the_doctor])
    FROM (
        SELECT 
            T.Oid AS [system_message.oid], 
            T.SystemMessageType AS [system_message.system_message_type], 
            T.Lpu AS [system_message.lpu], 
            T.Enabled AS [system_message.enabled], 
            T.SendingTime AS [system_message.sending_time], 
            T.SendingDaysBefore AS [system_message.sending_days_before], 
            T.MessageText AS [system_message.message_text], 
            T.InformTheDoctor AS [system_message.inform_the_doctor], 
            True AS _from0
        FROM PostgresEntities.SystemMessages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_message_type_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView531()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_message_type_templates", @"
    SELECT VALUE -- Constructing system_message_type_templates
        [PostgresModel.Store.system_message_type_template](T1.[system_message_type_template.oid], T1.[system_message_type_template.system_message_type], T1.[system_message_type_template.name], T1.[system_message_type_template.column_name])
    FROM (
        SELECT 
            T.Oid AS [system_message_type_template.oid], 
            T.SystemMessageType AS [system_message_type_template.system_message_type], 
            T.Name AS [system_message_type_template.name], 
            T.ColumnName AS [system_message_type_template.column_name], 
            True AS _from0
        FROM PostgresEntities.SystemMessageTypeTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_protocoltemplate_sysusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView532()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_protocoltemplate_sysusers", @"
    SELECT VALUE -- Constructing system_protocoltemplate_sysusers
        [PostgresModel.Store.system_protocoltemplate_sysuser](T1.[system_protocoltemplate_sysuser.system_protocoltemplate], T1.[system_protocoltemplate_sysuser.sysuser], T1.[system_protocoltemplate_sysuser.default])
    FROM (
        SELECT 
            T.SystemProtocoltemplate AS [system_protocoltemplate_sysuser.system_protocoltemplate], 
            T.Sysuser AS [system_protocoltemplate_sysuser.sysuser], 
            T.Default AS [system_protocoltemplate_sysuser.default], 
            True AS _from0
        FROM PostgresEntities.SystemProtocoltemplateSysusers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_ordergroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView533()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_ordergroups", @"
    SELECT VALUE -- Constructing profex_ordergroups
        [PostgresModel.Store.profex_ordergroup](T1.[profex_ordergroup.oid], T1.[profex_ordergroup.name], T1.[profex_ordergroup.order_index], T1.[profex_ordergroup.lpu])
    FROM (
        SELECT 
            T.Oid AS [profex_ordergroup.oid], 
            T.Name AS [profex_ordergroup.name], 
            T.OrderIndex AS [profex_ordergroup.order_index], 
            T.Lpu AS [profex_ordergroup.lpu], 
            True AS _from0
        FROM PostgresEntities.ProfexOrdergroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.intolerances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView534()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.intolerances", @"
    SELECT VALUE -- Constructing intolerances
        [PostgresModel.Store.intolerance](T1.intolerance_oid, T1.[intolerance.people_id], T1.[intolerance.tradenames_id], T1.intolerance_date, T1.[intolerance.prsc_id], T1.[intolerance.sotr_id], T1.[intolerance.side_effects], T1.intolerance_actmatter)
    FROM (
        SELECT 
            T.Oid AS intolerance_oid, 
            T.PeopleId AS [intolerance.people_id], 
            T.TradenamesId AS [intolerance.tradenames_id], 
            T.Date AS intolerance_date, 
            T.PrscId AS [intolerance.prsc_id], 
            T.SotrId AS [intolerance.sotr_id], 
            T.SideEffects AS [intolerance.side_effects], 
            T.Actmatter AS intolerance_actmatter, 
            True AS _from0
        FROM PostgresEntities.Intolerances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView535()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_types", @"
    SELECT VALUE -- Constructing sicklist_types
        [PostgresModel.Store.sicklist_type](T1.[sicklist_type.oid], T1.[sicklist_type.name], T1.[sicklist_type.short_name])
    FROM (
        SELECT 
            T.Oid AS [sicklist_type.oid], 
            T.Name AS [sicklist_type.name], 
            T.ShortName AS [sicklist_type.short_name], 
            True AS _from0
        FROM PostgresEntities.SicklistTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView536()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors", @"
    SELECT VALUE -- Constructing risk_factors
        [PostgresModel.Store.risk_factors](T1.[risk_factors.oid], T1.[risk_factors.name])
    FROM (
        SELECT 
            T.Oid AS [risk_factors.oid], 
            T.Name AS [risk_factors.name], 
            True AS _from0
        FROM PostgresEntities.RiskFactors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medicalcare_forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView537()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medicalcare_forms", @"
    SELECT VALUE -- Constructing medicalcare_forms
        [PostgresModel.Store.medicalcare_form](T1.[medicalcare_form.oid], T1.[medicalcare_form.name], T1.[medicalcare_form.foms_code], T1.[medicalcare_form.show], T1.[medicalcare_form.status])
    FROM (
        SELECT 
            T.Oid AS [medicalcare_form.oid], 
            T.Name AS [medicalcare_form.name], 
            T.FomsCode AS [medicalcare_form.foms_code], 
            T.Show AS [medicalcare_form.show], 
            T.Status AS [medicalcare_form.status], 
            True AS _from0
        FROM PostgresEntities.MedicalcareForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodel_medical_care_forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView538()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodel_medical_care_forms", @"
    SELECT VALUE -- Constructing tmodel_medical_care_forms
        [PostgresModel.Store.tmodel_medical_care_form](T1.[tmodel_medical_care_form.oid], T1.[tmodel_medical_care_form.tmodel], T1.[tmodel_medical_care_form.medicalcare_form])
    FROM (
        SELECT 
            T.Oid AS [tmodel_medical_care_form.oid], 
            T.Tmodel AS [tmodel_medical_care_form.tmodel], 
            T.MedicalcareForm AS [tmodel_medical_care_form.medicalcare_form], 
            True AS _from0
        FROM PostgresEntities.TmodelMedicalCareForms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_ankets_answers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView539()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_ankets_answers", @"
    SELECT VALUE -- Constructing disp_ankets_answers
        [PostgresModel.Store.disp_ankets_answer](T1.[disp_ankets_answer.oid], T1.[disp_ankets_answer.answer], T1.[disp_ankets_answer.order])
    FROM (
        SELECT 
            T.Oid AS [disp_ankets_answer.oid], 
            T.Answer AS [disp_ankets_answer.answer], 
            T.[Order] AS [disp_ankets_answer.order], 
            True AS _from0
        FROM PostgresEntities.DispAnketsAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_ankets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView540()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_ankets", @"
    SELECT VALUE -- Constructing disp_ankets
        [PostgresModel.Store.disp_ankets](T1.[disp_ankets.oid], T1.[disp_ankets.question], T1.[disp_ankets.answer])
    FROM (
        SELECT 
            T.Oid AS [disp_ankets.oid], 
            T.Question AS [disp_ankets.question], 
            T.Answer AS [disp_ankets.answer], 
            True AS _from0
        FROM PostgresEntities.DispAnkets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_ankets_quests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView541()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_ankets_quests", @"
    SELECT VALUE -- Constructing disp_ankets_quests
        [PostgresModel.Store.disp_ankets_quest](T1.[disp_ankets_quest.oid], T1.[disp_ankets_quest.question], T1.[disp_ankets_quest.order])
    FROM (
        SELECT 
            T.Oid AS [disp_ankets_quest.oid], 
            T.Question AS [disp_ankets_quest.question], 
            T.[Order] AS [disp_ankets_quest.order], 
            True AS _from0
        FROM PostgresEntities.DispAnketsQuests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.disp_ankets_patients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView542()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.disp_ankets_patients", @"
    SELECT VALUE -- Constructing disp_ankets_patients
        [PostgresModel.Store.disp_ankets_patient](T1.[disp_ankets_patient.oid], T1.[disp_ankets_patient.ambticket], T1.[disp_ankets_patient.question], T1.[disp_ankets_patient.answer])
    FROM (
        SELECT 
            T.Oid AS [disp_ankets_patient.oid], 
            T.Ambticket AS [disp_ankets_patient.ambticket], 
            T.Question AS [disp_ankets_patient.question], 
            T.Answer AS [disp_ankets_patient.answer], 
            True AS _from0
        FROM PostgresEntities.DispAnketsPatients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.socialgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView543()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.socialgroups", @"
    SELECT VALUE -- Constructing socialgroups
        [PostgresModel.Store.socialgroup](T1.socialgroup_oid, T1.socialgroup_name, T1.socialgroup_show, T1.socialgroup_name2, T1.socialgroup_status, T1.socialgroup_code)
    FROM (
        SELECT 
            T.Oid AS socialgroup_oid, 
            T.Name AS socialgroup_name, 
            T.Show AS socialgroup_show, 
            T.Name2 AS socialgroup_name2, 
            T.Status AS socialgroup_status, 
            T.Code AS socialgroup_code, 
            True AS _from0
        FROM PostgresEntities.Socialgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_sertificatespecialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView544()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_sertificatespecialities", @"
    SELECT VALUE -- Constructing sotr_sertificatespecialities
        [PostgresModel.Store.sotr_sertificatespeciality](T1.[sotr_sertificatespeciality.oid], T1.[sotr_sertificatespeciality.sotr], T1.[sotr_sertificatespeciality.sertificatespeciality])
    FROM (
        SELECT 
            T.Oid AS [sotr_sertificatespeciality.oid], 
            T.Sotr AS [sotr_sertificatespeciality.sotr], 
            T.Sertificatespeciality AS [sotr_sertificatespeciality.sertificatespeciality], 
            True AS _from0
        FROM PostgresEntities.SotrSertificatespecialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.risk_factors_visits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView545()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.risk_factors_visits", @"
    SELECT VALUE -- Constructing risk_factors_visits
        [PostgresModel.Store.risk_factors_visit](T1.[risk_factors_visit.oid], T1.[risk_factors_visit.risk_factor], T1.[risk_factors_visit.visit])
    FROM (
        SELECT 
            T.Oid AS [risk_factors_visit.oid], 
            T.RiskFactor AS [risk_factors_visit.risk_factor], 
            T.Visit AS [risk_factors_visit.visit], 
            True AS _from0
        FROM PostgresEntities.RiskFactorsVisits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_transactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView546()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_transactions", @"
    SELECT VALUE -- Constructing pay_transactions
        [PostgresModel.Store.pay_transaction](T1.[pay_transaction.oid], T1.[pay_transaction.account], T1.[pay_transaction.sum], T1.[pay_transaction.debt_sum], T1.[pay_transaction.paid_transaction], T1.[pay_transaction.trans_date], T1.[pay_transaction.sotr], T1.[pay_transaction.refuse_reason])
    FROM (
        SELECT 
            T.Oid AS [pay_transaction.oid], 
            T.Account AS [pay_transaction.account], 
            T.Sum AS [pay_transaction.sum], 
            T.DebtSum AS [pay_transaction.debt_sum], 
            T.PaidTransaction AS [pay_transaction.paid_transaction], 
            T.TransDate AS [pay_transaction.trans_date], 
            T.Sotr AS [pay_transaction.sotr], 
            T.RefuseReason AS [pay_transaction.refuse_reason], 
            True AS _from0
        FROM PostgresEntities.PayTransactions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_times
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView547()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_times", @"
    SELECT VALUE -- Constructing pay_times
        [PostgresModel.Store.pay_time](T1.[pay_time.oid], T1.[pay_time.name], T1.[pay_time.state])
    FROM (
        SELECT 
            T.Oid AS [pay_time.oid], 
            T.Name AS [pay_time.name], 
            T.State AS [pay_time.state], 
            True AS _from0
        FROM PostgresEntities.PayTimes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_program_lpus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView548()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_program_lpus", @"
    SELECT VALUE -- Constructing counterpart_program_lpus
        [PostgresModel.Store.counterpart_program_lpu](T1.[counterpart_program_lpu.oid], T1.[counterpart_program_lpu.counterpart_program], T1.[counterpart_program_lpu.lpu])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program_lpu.oid], 
            T.CounterpartProgram AS [counterpart_program_lpu.counterpart_program], 
            T.Lpu AS [counterpart_program_lpu.lpu], 
            True AS _from0
        FROM PostgresEntities.CounterpartProgramLpus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.countp_progr_service_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView549()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.countp_progr_service_presctypes", @"
    SELECT VALUE -- Constructing countp_progr_service_presctypes
        [PostgresModel.Store.countp_progr_service_presctype](T1.[countp_progr_service_presctype.oid], T1.[countp_progr_service_presctype.counterpart_program], T1.[countp_progr_service_presctype.service], T1.[countp_progr_service_presctype.need_agreement], T1.[countp_progr_service_presctype.by_condition], T1.[countp_progr_service_presctype.condition], T1.[countp_progr_service_presctype.count_all], T1.[countp_progr_service_presctype.count_day], T1.[countp_progr_service_presctype.count_month], T1.[countp_progr_service_presctype.presctype])
    FROM (
        SELECT 
            T.Oid AS [countp_progr_service_presctype.oid], 
            T.CounterpartProgram AS [countp_progr_service_presctype.counterpart_program], 
            T.Service AS [countp_progr_service_presctype.service], 
            T.NeedAgreement AS [countp_progr_service_presctype.need_agreement], 
            T.ByCondition AS [countp_progr_service_presctype.by_condition], 
            T.Condition AS [countp_progr_service_presctype.condition], 
            T.CountAll AS [countp_progr_service_presctype.count_all], 
            T.CountDay AS [countp_progr_service_presctype.count_day], 
            T.CountMonth AS [countp_progr_service_presctype.count_month], 
            T.Presctype AS [countp_progr_service_presctype.presctype], 
            True AS _from0
        FROM PostgresEntities.CountpProgrServicePresctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_program_insurances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView550()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_program_insurances", @"
    SELECT VALUE -- Constructing counterpart_program_insurances
        [PostgresModel.Store.counterpart_program_insurance](T1.[counterpart_program_insurance.oid], T1.[counterpart_program_insurance.counterpart_program], T1.[counterpart_program_insurance.insurance], T1.[counterpart_program_insurance.cost], T1.[counterpart_program_insurance.date_begin], T1.[counterpart_program_insurance.date_end])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program_insurance.oid], 
            T.CounterpartProgram AS [counterpart_program_insurance.counterpart_program], 
            T.Insurance AS [counterpart_program_insurance.insurance], 
            T.Cost AS [counterpart_program_insurance.cost], 
            T.DateBegin AS [counterpart_program_insurance.date_begin], 
            T.DateEnd AS [counterpart_program_insurance.date_end], 
            True AS _from0
        FROM PostgresEntities.CounterpartProgramInsurances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.countp_program_isnurance_discnts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView551()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.countp_program_isnurance_discnts", @"
    SELECT VALUE -- Constructing countp_program_isnurance_discnts
        [PostgresModel.Store.countp_program_isnurance_discnt](T1.[countp_program_isnurance_discnt.oid], T1.[countp_program_isnurance_discnt.counterpart_program_insurance], T1.[countp_program_isnurance_discnt.discount])
    FROM (
        SELECT 
            T.Oid AS [countp_program_isnurance_discnt.oid], 
            T.CounterpartProgramInsurance AS [countp_program_isnurance_discnt.counterpart_program_insurance], 
            T.Discount AS [countp_program_isnurance_discnt.discount], 
            True AS _from0
        FROM PostgresEntities.CountpProgramIsnuranceDiscnts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.diplomatic_status
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView552()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.diplomatic_status", @"
    SELECT VALUE -- Constructing diplomatic_status
        [PostgresModel.Store.diplomatic_status](T1.[diplomatic_status.oid], T1.[diplomatic_status.name], T1.[diplomatic_status.code])
    FROM (
        SELECT 
            T.Oid AS [diplomatic_status.oid], 
            T.Name AS [diplomatic_status.name], 
            T.Code AS [diplomatic_status.code], 
            True AS _from0
        FROM PostgresEntities.DiplomaticStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_required_presc_params
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView553()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_required_presc_params", @"
    SELECT VALUE -- Constructing profex_required_presc_params
        [PostgresModel.Store.profex_required_presc_param](T1.[profex_required_presc_param.oid], T1.[profex_required_presc_param.profex_actionstype_presctype], T1.[profex_required_presc_param.profex_actions_type], T1.[profex_required_presc_param.sex], T1.[profex_required_presc_param.age_group_type])
    FROM (
        SELECT 
            T.Oid AS [profex_required_presc_param.oid], 
            T.ProfexActionstypePresctype AS [profex_required_presc_param.profex_actionstype_presctype], 
            T.ProfexActionsType AS [profex_required_presc_param.profex_actions_type], 
            T.Sex AS [profex_required_presc_param.sex], 
            T.AgeGroupType AS [profex_required_presc_param.age_group_type], 
            True AS _from0
        FROM PostgresEntities.ProfexRequiredPrescParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.pay_appendix_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView554()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.pay_appendix_types", @"
    SELECT VALUE -- Constructing pay_appendix_types
        [PostgresModel.Store.pay_appendix_types](T1.[pay_appendix_types.oid], T1.[pay_appendix_types.name])
    FROM (
        SELECT 
            T.Oid AS [pay_appendix_types.oid], 
            T.Name AS [pay_appendix_types.name], 
            True AS _from0
        FROM PostgresEntities.PayAppendixTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.user_protocoltemplate_prescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView555()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.user_protocoltemplate_prescs", @"
    SELECT VALUE -- Constructing user_protocoltemplate_prescs
        [PostgresModel.Store.user_protocoltemplate_prescs](T1.[user_protocoltemplate_prescs.oid], T1.[user_protocoltemplate_prescs.user_protocol], T1.[user_protocoltemplate_prescs.presctype])
    FROM (
        SELECT 
            T.Oid AS [user_protocoltemplate_prescs.oid], 
            T.UserProtocol AS [user_protocoltemplate_prescs.user_protocol], 
            T.Presctype AS [user_protocoltemplate_prescs.presctype], 
            True AS _from0
        FROM PostgresEntities.UserProtocoltemplatePrescs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.report_papersizes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView556()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.report_papersizes", @"
    SELECT VALUE -- Constructing report_papersizes
        [PostgresModel.Store.report_papersize](T1.[report_papersize.oid], T1.[report_papersize.name], T1.[report_papersize.paper_width], T1.[report_papersize.paper_height])
    FROM (
        SELECT 
            T.Oid AS [report_papersize.oid], 
            T.Name AS [report_papersize.name], 
            T.PaperWidth AS [report_papersize.paper_width], 
            T.PaperHeight AS [report_papersize.paper_height], 
            True AS _from0
        FROM PostgresEntities.ReportPapersizes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.report_parameters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView557()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.report_parameters", @"
    SELECT VALUE -- Constructing report_parameters
        [PostgresModel.Store.report_parameter](T1.[report_parameter.oid], T1.[report_parameter.report_template], T1.[report_parameter.param_datatype], T1.[report_parameter.param_name])
    FROM (
        SELECT 
            T.Oid AS [report_parameter.oid], 
            T.ReportTemplate AS [report_parameter.report_template], 
            T.ParamDatatype AS [report_parameter.param_datatype], 
            T.ParamName AS [report_parameter.param_name], 
            True AS _from0
        FROM PostgresEntities.ReportParameters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vip_people_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView558()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vip_people_sotrs", @"
    SELECT VALUE -- Constructing vip_people_sotrs
        [PostgresModel.Store.vip_people_sotr](T1.[vip_people_sotr.oid], T1.[vip_people_sotr.vip_people], T1.[vip_people_sotr.sotr], T1.[vip_people_sotr.password])
    FROM (
        SELECT 
            T.Oid AS [vip_people_sotr.oid], 
            T.VipPeople AS [vip_people_sotr.vip_people], 
            T.Sotr AS [vip_people_sotr.sotr], 
            T.Password AS [vip_people_sotr.password], 
            True AS _from0
        FROM PostgresEntities.VipPeopleSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_program_diag_actions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView559()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_program_diag_actions", @"
    SELECT VALUE -- Constructing counterpart_program_diag_actions
        [PostgresModel.Store.counterpart_program_diag_action](T1.[counterpart_program_diag_action.oid], T1.[counterpart_program_diag_action.name])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program_diag_action.oid], 
            T.Name AS [counterpart_program_diag_action.name], 
            True AS _from0
        FROM PostgresEntities.CounterpartProgramDiagActions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presc_counterpart_programs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView560()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presc_counterpart_programs", @"
    SELECT VALUE -- Constructing presc_counterpart_programs
        [PostgresModel.Store.presc_counterpart_program](T1.[presc_counterpart_program.oid], T1.[presc_counterpart_program.presc], T1.[presc_counterpart_program.counterpart_program], T1.[presc_counterpart_program.countp_progr_service_presctype], T1.[presc_counterpart_program.part_cost])
    FROM (
        SELECT 
            T.Oid AS [presc_counterpart_program.oid], 
            T.Presc AS [presc_counterpart_program.presc], 
            T.CounterpartProgram AS [presc_counterpart_program.counterpart_program], 
            T.CountpProgrServicePresctype AS [presc_counterpart_program.countp_progr_service_presctype], 
            T.PartCost AS [presc_counterpart_program.part_cost], 
            True AS _from0
        FROM PostgresEntities.PrescCounterpartPrograms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.contract_sign_sotr_otdels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView561()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.contract_sign_sotr_otdels", @"
    SELECT VALUE -- Constructing contract_sign_sotr_otdels
        [PostgresModel.Store.contract_sign_sotr_otdel](T1.[contract_sign_sotr_otdel.oid], T1.[contract_sign_sotr_otdel.contract_sign_sotr], T1.[contract_sign_sotr_otdel.lpu], T1.[contract_sign_sotr_otdel.otdel])
    FROM (
        SELECT 
            T.Oid AS [contract_sign_sotr_otdel.oid], 
            T.ContractSignSotr AS [contract_sign_sotr_otdel.contract_sign_sotr], 
            T.Lpu AS [contract_sign_sotr_otdel.lpu], 
            T.Otdel AS [contract_sign_sotr_otdel.otdel], 
            True AS _from0
        FROM PostgresEntities.ContractSignSotrOtdels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.declensions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView562()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.declensions", @"
    SELECT VALUE -- Constructing declensions
        [PostgresModel.Store.declension](T1.declension_oid, T1.declension_name)
    FROM (
        SELECT 
            T.Oid AS declension_oid, 
            T.Name AS declension_name, 
            True AS _from0
        FROM PostgresEntities.Declensions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_fio_declensions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView563()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_fio_declensions", @"
    SELECT VALUE -- Constructing people_fio_declensions
        [PostgresModel.Store.people_fio_declension](T1.[people_fio_declension.oid], T1.[people_fio_declension.people], T1.[people_fio_declension.declension], T1.[people_fio_declension.firstname], T1.[people_fio_declension.middlename], T1.[people_fio_declension.lastname])
    FROM (
        SELECT 
            T.Oid AS [people_fio_declension.oid], 
            T.People AS [people_fio_declension.people], 
            T.Declension AS [people_fio_declension.declension], 
            T.Firstname AS [people_fio_declension.firstname], 
            T.Middlename AS [people_fio_declension.middlename], 
            T.Lastname AS [people_fio_declension.lastname], 
            True AS _from0
        FROM PostgresEntities.PeopleFioDeclensions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.contract_sign_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView564()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.contract_sign_sotrs", @"
    SELECT VALUE -- Constructing contract_sign_sotrs
        [PostgresModel.Store.contract_sign_sotr](T1.[contract_sign_sotr.oid], T1.[contract_sign_sotr.sotr], T1.[contract_sign_sotr.reason], T1.[contract_sign_sotr.date_begin], T1.[contract_sign_sotr.date_end])
    FROM (
        SELECT 
            T.Oid AS [contract_sign_sotr.oid], 
            T.Sotr AS [contract_sign_sotr.sotr], 
            T.Reason AS [contract_sign_sotr.reason], 
            T.DateBegin AS [contract_sign_sotr.date_begin], 
            T.DateEnd AS [contract_sign_sotr.date_end], 
            True AS _from0
        FROM PostgresEntities.ContractSignSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_contract_letters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView565()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_contract_letters", @"
    SELECT VALUE -- Constructing counterpart_contract_letters
        [PostgresModel.Store.counterpart_contract_letter](T1.[counterpart_contract_letter.oid], T1.[counterpart_contract_letter.contract], T1.[counterpart_contract_letter.in_date], T1.[counterpart_contract_letter.in_num], T1.[counterpart_contract_letter.out_num], T1.[counterpart_contract_letter.sysdate], T1.[counterpart_contract_letter.sotr], T1.[counterpart_contract_letter.out_date])
    FROM (
        SELECT 
            T.Oid AS [counterpart_contract_letter.oid], 
            T.Contract AS [counterpart_contract_letter.contract], 
            T.InDate AS [counterpart_contract_letter.in_date], 
            T.InNum AS [counterpart_contract_letter.in_num], 
            T.OutNum AS [counterpart_contract_letter.out_num], 
            T.Sysdate AS [counterpart_contract_letter.sysdate], 
            T.Sotr AS [counterpart_contract_letter.sotr], 
            T.OutDate AS [counterpart_contract_letter.out_date], 
            True AS _from0
        FROM PostgresEntities.CounterpartContractLetters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_program_ins_logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView566()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_program_ins_logs", @"
    SELECT VALUE -- Constructing counterpart_program_ins_logs
        [PostgresModel.Store.counterpart_program_ins_log](T1.[counterpart_program_ins_log.oid], T1.[counterpart_program_ins_log.counterpart_program], T1.[counterpart_program_ins_log.insurance], T1.[counterpart_program_ins_log.date_begin_change], T1.[counterpart_program_ins_log.date_end_change], T1.[counterpart_program_ins_log.counterpart_letter], T1.[counterpart_program_ins_log.sysdate], T1.[counterpart_program_ins_log.sotr])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program_ins_log.oid], 
            T.CounterpartProgram AS [counterpart_program_ins_log.counterpart_program], 
            T.Insurance AS [counterpart_program_ins_log.insurance], 
            T.DateBeginChange AS [counterpart_program_ins_log.date_begin_change], 
            T.DateEndChange AS [counterpart_program_ins_log.date_end_change], 
            T.CounterpartLetter AS [counterpart_program_ins_log.counterpart_letter], 
            T.Sysdate AS [counterpart_program_ins_log.sysdate], 
            T.Sotr AS [counterpart_program_ins_log.sotr], 
            True AS _from0
        FROM PostgresEntities.CounterpartProgramInsLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.visit_reasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView567()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.visit_reasons", @"
    SELECT VALUE -- Constructing visit_reasons
        [PostgresModel.Store.visit_reason](T1.[visit_reason.oid], T1.[visit_reason.name], T1.[visit_reason.foms_code], T1.[visit_reason.reason_type], T1.[visit_reason.show], T1.[visit_reason.name2], T1.[visit_reason.status])
    FROM (
        SELECT 
            T.Oid AS [visit_reason.oid], 
            T.Name AS [visit_reason.name], 
            T.FomsCode AS [visit_reason.foms_code], 
            T.ReasonType AS [visit_reason.reason_type], 
            T.Show AS [visit_reason.show], 
            T.Name2 AS [visit_reason.name2], 
            T.Status AS [visit_reason.status], 
            True AS _from0
        FROM PostgresEntities.VisitReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_duplicate_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView568()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_duplicate_types", @"
    SELECT VALUE -- Constructing sicklist_duplicate_types
        [PostgresModel.Store.sicklist_duplicate_type](T1.[sicklist_duplicate_type.oid], T1.[sicklist_duplicate_type.name])
    FROM (
        SELECT 
            T.Oid AS [sicklist_duplicate_type.oid], 
            T.Name AS [sicklist_duplicate_type.name], 
            True AS _from0
        FROM PostgresEntities.SicklistDuplicateTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stat_operation_infos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView569()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stat_operation_infos", @"
    SELECT VALUE -- Constructing stat_operation_infos
        [PostgresModel.Store.stat_operation_info](T1.[stat_operation_info.presc], T1.[stat_operation_info.complications], T1.[stat_operation_info.endocrinology_app], T1.[stat_operation_info.laser_app], T1.[stat_operation_info.cryogen_app], T1.[stat_operation_info.ksg])
    FROM (
        SELECT 
            T.Presc AS [stat_operation_info.presc], 
            T.Complications AS [stat_operation_info.complications], 
            T.EndocrinologyApp AS [stat_operation_info.endocrinology_app], 
            T.LaserApp AS [stat_operation_info.laser_app], 
            T.CryogenApp AS [stat_operation_info.cryogen_app], 
            T.Ksg AS [stat_operation_info.ksg], 
            True AS _from0
        FROM PostgresEntities.StatOperationInfos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_whereissueds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView570()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_whereissueds", @"
    SELECT VALUE -- Constructing sicklist_whereissueds
        [PostgresModel.Store.sicklist_whereissued](T1.[sicklist_whereissued.oid], T1.[sicklist_whereissued.name])
    FROM (
        SELECT 
            T.Oid AS [sicklist_whereissued.oid], 
            T.Name AS [sicklist_whereissued.name], 
            True AS _from0
        FROM PostgresEntities.SicklistWhereissueds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodel_medicalcares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView571()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodel_medicalcares", @"
    SELECT VALUE -- Constructing tmodel_medicalcares
        [PostgresModel.Store.tmodel_medicalcare](T1.[tmodel_medicalcare.oid], T1.[tmodel_medicalcare.tmodel], T1.[tmodel_medicalcare.medicalcare])
    FROM (
        SELECT 
            T.Oid AS [tmodel_medicalcare.oid], 
            T.Tmodel AS [tmodel_medicalcare.tmodel], 
            T.Medicalcare AS [tmodel_medicalcare.medicalcare], 
            True AS _from0
        FROM PostgresEntities.TmodelMedicalcares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_protocoltemplate_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView572()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_protocoltemplate_sotrs", @"
    SELECT VALUE -- Constructing system_protocoltemplate_sotrs
        [PostgresModel.Store.system_protocoltemplate_sotr](T1.[system_protocoltemplate_sotr.sotr], T1.[system_protocoltemplate_sotr.presctype], T1.[system_protocoltemplate_sotr.system_protocoltemplate])
    FROM (
        SELECT 
            T.Sotr AS [system_protocoltemplate_sotr.sotr], 
            T.Presctype AS [system_protocoltemplate_sotr.presctype], 
            T.SystemProtocoltemplate AS [system_protocoltemplate_sotr.system_protocoltemplate], 
            True AS _from0
        FROM PostgresEntities.SystemProtocoltemplateSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licence_services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView573()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licence_services", @"
    SELECT VALUE -- Constructing licence_services
        [PostgresModel.Store.licence_service](T1.[licence_service.services], T1.[licence_service.licence])
    FROM (
        SELECT 
            Key(T.Servics).Oid AS [licence_service.services], 
            Key(T.Licences).Oid AS [licence_service.licence], 
            True AS _from0
        FROM PostgresEntities.Servic_LicenceSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.company_addresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView574()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.company_addresses", @"
    SELECT VALUE -- Constructing company_addresses
        [PostgresModel.Store.company_address](T1.[company_address.company], T1.[company_address.address])
    FROM (
        SELECT 
            Key(T.Companies2).Oid AS [company_address.company], 
            Key(T.Addressexes).Oid AS [company_address.address], 
            True AS _from0
        FROM PostgresEntities.Company_AddressexSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_buildings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView575()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_buildings", @"
    SELECT VALUE -- Constructing otdel_buildings
        [PostgresModel.Store.otdel_building](T1.[otdel_building.otdel], T1.[otdel_building.building])
    FROM (
        SELECT 
            Key(T.Otdels).Oid AS [otdel_building.otdel], 
            Key(T.Buildings).Oid AS [otdel_building.building], 
            True AS _from0
        FROM PostgresEntities.Otdel_BuildingSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.otdel_profile_cares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView576()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.otdel_profile_cares", @"
    SELECT VALUE -- Constructing otdel_profile_cares
        [PostgresModel.Store.otdel_profile_care](T1.[otdel_profile_care.otdel], T1.[otdel_profile_care.profile_care])
    FROM (
        SELECT 
            Key(T.Otdels).Oid AS [otdel_profile_care.otdel], 
            Key(T.ProfileCares).Oid AS [otdel_profile_care.profile_care], 
            True AS _from0
        FROM PostgresEntities.Otdel_ProfileCareSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.role_rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView577()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.role_rights", @"
    SELECT VALUE -- Constructing role_rights
        [PostgresModel.Store.role_right](T1.[role_right.right], T1.[role_right.role])
    FROM (
        SELECT 
            Key(T.Rights).Oid AS [role_right.right], 
            Key(T.Roles).Oid AS [role_right.role], 
            True AS _from0
        FROM PostgresEntities.Right_RoleSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelaftereffects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView578()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelaftereffects", @"
    SELECT VALUE -- Constructing tmodelaftereffects
        [PostgresModel.Store.tmodelaftereffects](T1.[tmodelaftereffects.fk_model], T1.[tmodelaftereffects.fk_aftereffect])
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelaftereffects.fk_model], 
            Key(T.Taftereffects).FkId AS [tmodelaftereffects.fk_aftereffect], 
            True AS _from0
        FROM PostgresEntities.Taftereffect_TmodelSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView579()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelages", @"
    SELECT VALUE -- Constructing tmodelages
        [PostgresModel.Store.tmodelage](T1.[tmodelage.fk_model], T1.[tmodelage.fk_age])
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelage.fk_model], 
            Key(T.Tages).FkId AS [tmodelage.fk_age], 
            True AS _from0
        FROM PostgresEntities.Tage_TmodelSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView580()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelconditions", @"
    SELECT VALUE -- Constructing tmodelconditions
        [PostgresModel.Store.tmodelconditions](T1.[tmodelconditions.fk_model], T1.[tmodelconditions.fk_conditions])
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelconditions.fk_model], 
            Key(T.Tconditions).FkId AS [tmodelconditions.fk_conditions], 
            True AS _from0
        FROM PostgresEntities.Tcondition_TmodelSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelicd10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView581()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelicd10s", @"
    SELECT VALUE -- Constructing tmodelicd10s
        [PostgresModel.Store.tmodelicd10](T1.[tmodelicd10.fk_model], T1.tmodelicd10_icd10)
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelicd10.fk_model], 
            Key(T.Mkb10s).Oid AS tmodelicd10_icd10, 
            True AS _from0
        FROM PostgresEntities.Tmodel_Mkb10Set AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelphases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView582()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelphases", @"
    SELECT VALUE -- Constructing tmodelphases
        [PostgresModel.Store.tmodelphase](T1.[tmodelphase.fk_model], T1.[tmodelphase.fk_phase])
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelphase.fk_model], 
            Key(T.Tphases).FkId AS [tmodelphase.fk_phase], 
            True AS _from0
        FROM PostgresEntities.Tmodel_TphaseSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmodelstages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView583()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmodelstages", @"
    SELECT VALUE -- Constructing tmodelstages
        [PostgresModel.Store.tmodelstage](T1.[tmodelstage.fk_model], T1.[tmodelstage.fk_stage])
    FROM (
        SELECT 
            Key(T.Tmodels).FkId AS [tmodelstage.fk_model], 
            Key(T.Tstages).FkId AS [tmodelstage.fk_stage], 
            True AS _from0
        FROM PostgresEntities.Tmodel_TstageSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.presctype_medservs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView584()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.presctype_medservs", @"
    SELECT VALUE -- Constructing presctype_medservs
        [PostgresModel.Store.presctype_medserv](T1.[presctype_medserv.presctype], T1.[presctype_medserv.medserv])
    FROM (
        SELECT 
            Key(T.Presctypes).Oid AS [presctype_medserv.presctype], 
            Key(T.Tmedservices).FkId AS [presctype_medserv.medserv], 
            True AS _from0
        FROM PostgresEntities.Tmedservice_PresctypeSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_directions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView585()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_directions", @"
    SELECT VALUE -- Constructing lpu_directions
        [PostgresModel.Store.lpu_direction](T1.[lpu_direction.lpu_id], T1.[lpu_direction.lpu_direction_id])
    FROM (
        SELECT 
            Key(T.Lpus1).Oid AS [lpu_direction.lpu_id], 
            Key(T.Lpus).Oid AS [lpu_direction.lpu_direction_id], 
            True AS _from0
        FROM PostgresEntities.Lpu_LpuSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_specialmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView586()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_specialmedics", @"
    SELECT VALUE -- Constructing medic_specialmedics
        [PostgresModel.Store.medic_specialmedic](T1.[medic_specialmedic.medic], T1.[medic_specialmedic.specialmedic])
    FROM (
        SELECT 
            Key(T.Medics).Oid AS [medic_specialmedic.medic], 
            Key(T.Specialmedics).Oid AS [medic_specialmedic.specialmedic], 
            True AS _from0
        FROM PostgresEntities.Specialmedic_MedicSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.receptiontype_rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView587()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.receptiontype_rights", @"
    SELECT VALUE -- Constructing receptiontype_rights
        [PostgresModel.Store.receptiontype_rights](T1.[receptiontype_rights.sysuser], T1.[receptiontype_rights.receptiontype])
    FROM (
        SELECT 
            Key(T.Sysusers).Oid AS [receptiontype_rights.sysuser], 
            Key(T.Receptiontypes).Oid AS [receptiontype_rights.receptiontype], 
            True AS _from0
        FROM PostgresEntities.Receptiontype_SysuserSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_actionstype_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView588()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_actionstype_presctypes", @"
    SELECT VALUE -- Constructing profex_actionstype_presctypes
        [PostgresModel.Store.profex_actionstype_presctype](T1.[profex_actionstype_presctype.profex_actionstype], T1.[profex_actionstype_presctype.presctype])
    FROM (
        SELECT 
            Key(T.ProfexActionsTypes).Oid AS [profex_actionstype_presctype.profex_actionstype], 
            Key(T.Presctypes).Oid AS [profex_actionstype_presctype.presctype], 
            True AS _from0
        FROM PostgresEntities.Presctype_ProfexActionsTypeSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.mkb_10_template_lists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView589()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.mkb_10_template_lists", @"
    SELECT VALUE -- Constructing mkb_10_template_lists
        [PostgresModel.Store.mkb_10_template_list](T1.[mkb_10_template_list.mkb10_template], T1.[mkb_10_template_list.mkb10])
    FROM (
        SELECT 
            Key(T.Mkb10Templates).Oid AS [mkb_10_template_list.mkb10_template], 
            Key(T.Mkb10s).Oid AS [mkb_10_template_list.mkb10], 
            True AS _from0
        FROM PostgresEntities.Mkb10_Mkb10TemplateSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_list_resultcomments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView590()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_list_resultcomments", @"
    SELECT VALUE -- Constructing profex_list_resultcomments
        [PostgresModel.Store.profex_list_resultcomment](T1.[profex_list_resultcomment.profex_result_comment], T1.[profex_list_resultcomment.profex_lis])
    FROM (
        SELECT 
            Key(T.ProfexResultComments).Oid AS [profex_list_resultcomment.profex_result_comment], 
            Key(T.ProfexLists).Oid AS [profex_list_resultcomment.profex_lis], 
            True AS _from0
        FROM PostgresEntities.ProfexResultComment_ProfexListSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_insurprograms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView591()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_insurprograms", @"
    SELECT VALUE -- Constructing lpu_insurprograms
        [PostgresModel.Store.lpu_insurprogram](T1.[lpu_insurprogram.lpu], T1.[lpu_insurprogram.insurprogram])
    FROM (
        SELECT 
            Key(T.Lpus).Oid AS [lpu_insurprogram.lpu], 
            Key(T.Insurprograms).Oid AS [lpu_insurprogram.insurprogram], 
            True AS _from0
        FROM PostgresEntities.Lpu_InsurprogramSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_receptiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView592()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_receptiontypes", @"
    SELECT VALUE -- Constructing sotr_receptiontypes
        [PostgresModel.Store.sotr_receptiontype](T1.[sotr_receptiontype.sotr], T1.[sotr_receptiontype.receptiontype])
    FROM (
        SELECT 
            Key(T.Sotrs1).Oid AS [sotr_receptiontype.sotr], 
            Key(T.Receptiontypes1).Oid AS [sotr_receptiontype.receptiontype], 
            True AS _from0
        FROM PostgresEntities.Receptiontype_SotrSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ankets_profile_ankets_reestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView593()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ankets_profile_ankets_reestrs", @"
    SELECT VALUE -- Constructing ankets_profile_ankets_reestrs
        [PostgresModel.Store.ankets_profile_ankets_reestr](T1.[ankets_profile_ankets_reestr.ankets_profile], T1.[ankets_profile_ankets_reestr.ankets_reestr])
    FROM (
        SELECT 
            Key(T.AnketsProfiles).Oid AS [ankets_profile_ankets_reestr.ankets_profile], 
            Key(T.AnketsReestrs).Oid AS [ankets_profile_ankets_reestr.ankets_reestr], 
            True AS _from0
        FROM PostgresEntities.AnketsReestr_AnketsProfileSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.patientcard_uniquefield_lpus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView594()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.patientcard_uniquefield_lpus", @"
    SELECT VALUE -- Constructing patientcard_uniquefield_lpus
        [PostgresModel.Store.patientcard_uniquefield_lpu](T1.[patientcard_uniquefield_lpu.patientcardsettings_uniquefield], T1.[patientcard_uniquefield_lpu.lpu])
    FROM (
        SELECT 
            Key(T.PatientcardsettingsUniquefields).Oid AS [patientcard_uniquefield_lpu.patientcardsettings_uniquefield], 
            Key(T.Lpus).Oid AS [patientcard_uniquefield_lpu.lpu], 
            True AS _from0
        FROM PostgresEntities.PatientcardsettingsUniquefield_LpuSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView595()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_rights", @"
    SELECT VALUE -- Constructing sotr_rights
        [PostgresModel.Store.sotr_right](T1.[sotr_right.sotr], T1.[sotr_right.right])
    FROM (
        SELECT 
            Key(T.Sotrs).Oid AS [sotr_right.sotr], 
            Key(T.Rights).Oid AS [sotr_right.right], 
            True AS _from0
        FROM PostgresEntities.Right_SotrSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView596()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_roles", @"
    SELECT VALUE -- Constructing sotr_roles
        [PostgresModel.Store.sotr_role](T1.[sotr_role.sotr], T1.[sotr_role.role])
    FROM (
        SELECT 
            Key(T.Sotrs).Oid AS [sotr_role.sotr], 
            Key(T.Roles).Oid AS [sotr_role.role], 
            True AS _from0
        FROM PostgresEntities.Role_SotrSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sotr_right_all
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView597()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sotr_right_all", @"
    SELECT VALUE -- Constructing sotr_right_all
        [PostgresModel.Store.sotr_right_all](T1.[sotr_right_all.sotr], T1.[sotr_right_all.right])
    FROM (
        SELECT 
            Key(T.Sotrs1).Oid AS [sotr_right_all.sotr], 
            Key(T.Rights1).Oid AS [sotr_right_all.right], 
            True AS _from0
        FROM PostgresEntities.Right_Sotr1Set AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.modelserv_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView598()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.modelserv_presctypes", @"
    SELECT VALUE -- Constructing modelserv_presctypes
        [PostgresModel.Store.modelserv_presctype](T1.[modelserv_presctype.modelserv], T1.[modelserv_presctype.service_presctype])
    FROM (
        SELECT 
            Key(T.Tmodelservs).Oid AS [modelserv_presctype.modelserv], 
            Key(T.ServicePresctypes).Oid AS [modelserv_presctype.service_presctype], 
            True AS _from0
        FROM PostgresEntities.Tmodelserv_ServicePresctypeSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temperature_param_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView599()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temperature_param_sotrs", @"
    SELECT VALUE -- Constructing temperature_param_sotrs
        [PostgresModel.Store.temperature_param_sotr](T1.[temperature_param_sotr.sotr], T1.[temperature_param_sotr.temperature_param])
    FROM (
        SELECT 
            Key(T.Sotrs).Oid AS [temperature_param_sotr.sotr], 
            Key(T.TemperatureParams).Oid AS [temperature_param_sotr.temperature_param], 
            True AS _from0
        FROM PostgresEntities.TemperatureParam_SotrSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temperature_param_otdels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView600()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temperature_param_otdels", @"
    SELECT VALUE -- Constructing temperature_param_otdels
        [PostgresModel.Store.temperature_param_otdel](T1.[temperature_param_otdel.otdel], T1.[temperature_param_otdel.temperature_param])
    FROM (
        SELECT 
            Key(T.Otdels).Oid AS [temperature_param_otdel.otdel], 
            Key(T.TemperatureParams).Oid AS [temperature_param_otdel.temperature_param], 
            True AS _from0
        FROM PostgresEntities.TemperatureParam_OtdelSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.chatgroupusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView601()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.chatgroupusers", @"
    SELECT VALUE -- Constructing chatgroupusers
        [PostgresModel.Store.chatgroupuser](T1.chatgroupuser_chatgroupid, T1.chatgroupuser_peopleid)
    FROM (
        SELECT 
            Key(T.Chatgroups1).Oid AS chatgroupuser_chatgroupid, 
            Key(T.People).Oid AS chatgroupuser_peopleid, 
            True AS _from0
        FROM PostgresEntities.Chatgroup_PersonSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_disease_reason_mkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView602()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_disease_reason_mkb10s", @"
    SELECT VALUE -- Constructing profex_disease_reason_mkb10s
        [PostgresModel.Store.profex_disease_reason_mkb10](T1.[profex_disease_reason_mkb10.profex_disease], T1.[profex_disease_reason_mkb10.mkb10])
    FROM (
        SELECT 
            Key(T.ProfexDiseases).Oid AS [profex_disease_reason_mkb10.profex_disease], 
            Key(T.Mkb10sReason).Oid AS [profex_disease_reason_mkb10.mkb10], 
            True AS _from0
        FROM PostgresEntities.Mkb10_ProfexDiseaseSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_disease_disease_mkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView603()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_disease_disease_mkb10s", @"
    SELECT VALUE -- Constructing profex_disease_disease_mkb10s
        [PostgresModel.Store.profex_disease_disease_mkb10](T1.[profex_disease_disease_mkb10.profex_disease], T1.[profex_disease_disease_mkb10.mkb10])
    FROM (
        SELECT 
            Key(T.ProfexDiseases1).Oid AS [profex_disease_disease_mkb10.profex_disease], 
            Key(T.Mkb10sDisease).Oid AS [profex_disease_disease_mkb10.mkb10], 
            True AS _from0
        FROM PostgresEntities.Mkb10_ProfexDisease1Set AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.system_message_type_presctypefos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView604()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.system_message_type_presctypefos", @"
    SELECT VALUE -- Constructing system_message_type_presctypefos
        [PostgresModel.Store.system_message_type_presctypefo](T1.[system_message_type_presctypefo.presctypefolder], T1.[system_message_type_presctypefo.system_message_type])
    FROM (
        SELECT 
            Key(T.Presctypefolders).Id AS [system_message_type_presctypefo.presctypefolder], 
            Key(T.SystemMessageTypes).Oid AS [system_message_type_presctypefo.system_message_type], 
            True AS _from0
        FROM PostgresEntities.SystemMessageType_PresctypefolderSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_ordergroup_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView605()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_ordergroup_presctypes", @"
    SELECT VALUE -- Constructing profex_ordergroup_presctypes
        [PostgresModel.Store.profex_ordergroup_presctype](T1.[profex_ordergroup_presctype.presctype], T1.[profex_ordergroup_presctype.profex_ordergroup])
    FROM (
        SELECT 
            Key(T.Presctypes).Oid AS [profex_ordergroup_presctype.presctype], 
            Key(T.ProfexOrdergroups).Oid AS [profex_ordergroup_presctype.profex_ordergroup], 
            True AS _from0
        FROM PostgresEntities.Presctype_ProfexOrdergroupSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.report_presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView606()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.report_presctypes", @"
    SELECT VALUE -- Constructing report_presctypes
        [PostgresModel.Store.report_presctype](T1.[report_presctype.report_template], T1.[report_presctype.presctype])
    FROM (
        SELECT 
            Key(T.ReportTemplates).Oid AS [report_presctype.report_template], 
            Key(T.Presctypes).Oid AS [report_presctype.presctype], 
            True AS _from0
        FROM PostgresEntities.ReportTemplate_PresctypeSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Infovalues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView607()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Infovalues", @"
    SELECT VALUE -- Constructing Infovalues
        [PostgresModel.Infovalue](T1.Infovalue_Infotype, T1.Infovalue_Infovalue2, T1.Infovalue_Company, T1.Infovalue_Lpu, T1.Infovalue_Otdel, T1.Infovalue_Sotr, T1.Infovalue_People, T1.Infovalue_Oid, T1.Infovalue_ShowOnSite)
    FROM (
        SELECT 
            T.infotype AS Infovalue_Infotype, 
            T.infovalue AS Infovalue_Infovalue2, 
            T.company AS Infovalue_Company, 
            T.lpu AS Infovalue_Lpu, 
            T.otdel AS Infovalue_Otdel, 
            T.sotr AS Infovalue_Sotr, 
            T.people AS Infovalue_People, 
            T.oid AS Infovalue_Oid, 
            T.show_on_site AS Infovalue_ShowOnSite, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infovalues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Lpus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView608()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2275);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Lpus\r\n        [PostgresModel.Lpu](T1.Lpu_Oid,");
            viewString.Append(" T1.Lpu_Identifier, T1.Lpu_LpuCode, T1.Lpu_LpuCodeValue, T1.Lpu_LpuType, T1.Lpu_");
            viewString.Append("Ownership, T1.Lpu_OrganizationalForm, T1.Lpu_Oms, T1.Lpu_Dlo, T1.Lpu_LpuInTown, ");
            viewString.Append("T1.Lpu_RegistratorName, T1.Lpu_RegistrationDocument, T1.Lpu_RegistrationDate, T1");
            viewString.Append(".Lpu_RegistrationNumber, T1.Lpu_Transport, T1.Lpu_Telreg, T1.Lpu_Telspr, T1.Lpu_");
            viewString.Append("City, T1.Lpu_CityKladroid, T1.Lpu_IsKvota, T1.Lpu_ShowInSite, T1.Lpu_IsPrivate, ");
            viewString.Append("T1.Lpu_Territoryaffilation, T1.Lpu_Site, T1.Lpu_IsAllowZapis, T1.Lpu_LpuWorkDogo");
            viewString.Append("vor, T1.Lpu_SupremeDepartment, T1.Lpu_LpuProfile, T1.Lpu_SubordinationType, T1.L");
            viewString.Append("pu_LevelType, T1.Lpu_GasurfOid)\r\n    FROM (\r\n        SELECT \r\n            T.oid ");
            viewString.Append("AS Lpu_Oid, \r\n            T.identifier AS Lpu_Identifier, \r\n            T.lpu_co");
            viewString.Append("de AS Lpu_LpuCode, \r\n            T.lpu_code_value AS Lpu_LpuCodeValue, \r\n       ");
            viewString.Append("     T.lpu_type AS Lpu_LpuType, \r\n            T.ownership AS Lpu_Ownership, \r\n  ");
            viewString.Append("          T.organizational_form AS Lpu_OrganizationalForm, \r\n            T.oms A");
            viewString.Append("S Lpu_Oms, \r\n            T.dlo AS Lpu_Dlo, \r\n            T.lpu_in_town AS Lpu_Lp");
            viewString.Append("uInTown, \r\n            T.registrator_name AS Lpu_RegistratorName, \r\n            ");
            viewString.Append("T.registration_document AS Lpu_RegistrationDocument, \r\n            T.registratio");
            viewString.Append("n_date AS Lpu_RegistrationDate, \r\n            T.registration_number AS Lpu_Regis");
            viewString.Append("trationNumber, \r\n            T.transport AS Lpu_Transport, \r\n            T.telre");
            viewString.Append("g AS Lpu_Telreg, \r\n            T.telspr AS Lpu_Telspr, \r\n            T.city AS L");
            viewString.Append("pu_City, \r\n            T.city_kladroid AS Lpu_CityKladroid, \r\n            T.is_k");
            viewString.Append("vota AS Lpu_IsKvota, \r\n            T.show_in_site AS Lpu_ShowInSite, \r\n         ");
            viewString.Append("   T.is_private AS Lpu_IsPrivate, \r\n            T.territoryaffilation AS Lpu_Ter");
            viewString.Append("ritoryaffilation, \r\n            T.site AS Lpu_Site, \r\n            T.is_allow_zap");
            viewString.Append("is AS Lpu_IsAllowZapis, \r\n            T.lpu_work_dogovor AS Lpu_LpuWorkDogovor, ");
            viewString.Append("\r\n            T.supreme_department AS Lpu_SupremeDepartment, \r\n            T.lpu");
            viewString.Append("_profile AS Lpu_LpuProfile, \r\n            T.subordination_type AS Lpu_Subordinat");
            viewString.Append("ionType, \r\n            T.level_type AS Lpu_LevelType, \r\n            T.gasurf_oid");
            viewString.Append(" AS Lpu_GasurfOid, \r\n            True AS _from0\r\n        FROM PostgresEntitiesSt");
            viewString.Append("oreContainer.lpus AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Lpus", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView609()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2126);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Companies\r\n        [PostgresModel.Company](T1");
            viewString.Append(".Company_Oid, T1.Company_Fullname, T1.Company_Shortname, T1.Company_Phone, T1.Co");
            viewString.Append("mpany_Fax, T1.Company_Okonh, T1.Company_Okpo, T1.Company_Inn, T1.Company_Ogrn, T");
            viewString.Append("1.Company_Kpf, T1.Company_Address, T1.Company_Home, T1.Company_Optimisticlockfie");
            viewString.Append("ld, T1.Company_Gcrecord, T1.Company_Addressfact, T1.Company_Raschschet, T1.Compa");
            viewString.Append("ny_Bank, T1.Company_Kpp, T1.Company_Bik, T1.Company_Korschet, T1.Company_Region,");
            viewString.Append(" T1.Company_Okato, T1.Company_Okved, T1.Company_FomsCode, T1.Company_Ownership, ");
            viewString.Append("T1.Company_Chief, T1.Company_ChiefContact, T1.Company_ChiefDoverDetail, T1.Compa");
            viewString.Append("ny_Recipient, T1.Company_RecipBank)\r\n    FROM (\r\n        SELECT \r\n            T.");
            viewString.Append("oid AS Company_Oid, \r\n            T.fullname AS Company_Fullname, \r\n            ");
            viewString.Append("T.shortname AS Company_Shortname, \r\n            T.phone AS Company_Phone, \r\n    ");
            viewString.Append("        T.fax AS Company_Fax, \r\n            T.okonh AS Company_Okonh, \r\n        ");
            viewString.Append("    T.okpo AS Company_Okpo, \r\n            T.inn AS Company_Inn, \r\n            T.");
            viewString.Append("ogrn AS Company_Ogrn, \r\n            T.kpf AS Company_Kpf, \r\n            T.addres");
            viewString.Append("s AS Company_Address, \r\n            T.home AS Company_Home, \r\n            T.opti");
            viewString.Append("misticlockfield AS Company_Optimisticlockfield, \r\n            T.gcrecord AS Comp");
            viewString.Append("any_Gcrecord, \r\n            T.addressfact AS Company_Addressfact, \r\n            ");
            viewString.Append("T.raschschet AS Company_Raschschet, \r\n            T.bank AS Company_Bank, \r\n    ");
            viewString.Append("        T.kpp AS Company_Kpp, \r\n            T.bik AS Company_Bik, \r\n            ");
            viewString.Append("T.korschet AS Company_Korschet, \r\n            T.region AS Company_Region, \r\n    ");
            viewString.Append("        T.okato AS Company_Okato, \r\n            T.okved AS Company_Okved, \r\n    ");
            viewString.Append("        T.foms_code AS Company_FomsCode, \r\n            T.ownership AS Company_Ow");
            viewString.Append("nership, \r\n            T.chief AS Company_Chief, \r\n            T.chief_contact A");
            viewString.Append("S Company_ChiefContact, \r\n            T.chief_dover_detail AS Company_ChiefDover");
            viewString.Append("Detail, \r\n            T.recipient AS Company_Recipient, \r\n            T.recip_ba");
            viewString.Append("nk AS Company_RecipBank, \r\n            True AS _from0\r\n        FROM PostgresEnti");
            viewString.Append("tiesStoreContainer.companies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Companies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LicenceOpers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView610()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LicenceOpers", @"
    SELECT VALUE -- Constructing LicenceOpers
        [PostgresModel.LicenceOper](T1.LicenceOper_Oid, T1.LicenceOper_Licence, T1.LicenceOper_LicenceOperType, T1.LicenceOper_DateOper)
    FROM (
        SELECT 
            T.oid AS LicenceOper_Oid, 
            T.licence AS LicenceOper_Licence, 
            T.licence_oper_type AS LicenceOper_LicenceOperType, 
            T.date_oper AS LicenceOper_DateOper, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.licence_opers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LicenceOperTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView611()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LicenceOperTypes", @"
    SELECT VALUE -- Constructing LicenceOperTypes
        [PostgresModel.LicenceOperType](T1.LicenceOperType_Oid, T1.LicenceOperType_Name, T1.LicenceOperType_Show, T1.LicenceOperType_Name2, T1.LicenceOperType_Status)
    FROM (
        SELECT 
            T.oid AS LicenceOperType_Oid, 
            T.name AS LicenceOperType_Name, 
            T.show AS LicenceOperType_Show, 
            T.name2 AS LicenceOperType_Name2, 
            T.status AS LicenceOperType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.licence_oper_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView612()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuTypes", @"
    SELECT VALUE -- Constructing LpuTypes
        [PostgresModel.LpuType](T1.LpuType_Oid, T1.LpuType_Name, T1.LpuType_Show, T1.LpuType_Name2, T1.LpuType_Status, T1.LpuType_Parent, T1.LpuType_Id)
    FROM (
        SELECT 
            T.oid AS LpuType_Oid, 
            T.name AS LpuType_Name, 
            T.show AS LpuType_Show, 
            T.name2 AS LpuType_Name2, 
            T.status AS LpuType_Status, 
            T.parent AS LpuType_Parent, 
            T.id AS LpuType_Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuOwnerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView613()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuOwnerships", @"
    SELECT VALUE -- Constructing LpuOwnerships
        [PostgresModel.LpuOwnership](T1.LpuOwnership_Oid, T1.LpuOwnership_Name, T1.LpuOwnership_Show, T1.LpuOwnership_Name2, T1.LpuOwnership_Status)
    FROM (
        SELECT 
            T.oid AS LpuOwnership_Oid, 
            T.name AS LpuOwnership_Name, 
            T.show AS LpuOwnership_Show, 
            T.name2 AS LpuOwnership_Name2, 
            T.status AS LpuOwnership_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_ownerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuOrganizationalForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView614()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuOrganizationalForms", @"
    SELECT VALUE -- Constructing LpuOrganizationalForms
        [PostgresModel.LpuOrganizationalForm](T1.LpuOrganizationalForm_Oid, T1.LpuOrganizationalForm_Name, T1.LpuOrganizationalForm_Show, T1.LpuOrganizationalForm_Name2, T1.LpuOrganizationalForm_Status)
    FROM (
        SELECT 
            T.oid AS LpuOrganizationalForm_Oid, 
            T.name AS LpuOrganizationalForm_Name, 
            T.show AS LpuOrganizationalForm_Show, 
            T.name2 AS LpuOrganizationalForm_Name2, 
            T.status AS LpuOrganizationalForm_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_organizational_forms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Infotypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView615()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Infotypes", @"
    SELECT VALUE -- Constructing Infotypes
        [PostgresModel.Infotype](T1.Infotype_Oid, T1.Infotype_InfotypenameEn, T1.Infotype_InfotypenameRu)
    FROM (
        SELECT 
            T.oid AS Infotype_Oid, 
            T.infotypename_en AS Infotype_InfotypenameEn, 
            T.infotypename_ru AS Infotype_InfotypenameRu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infotypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LicenceActivityTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView616()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LicenceActivityTypes", @"
    SELECT VALUE -- Constructing LicenceActivityTypes
        [PostgresModel.LicenceActivityType](T1.LicenceActivityType_Oid, T1.LicenceActivityType_Name, T1.LicenceActivityType_Show, T1.LicenceActivityType_Name2, T1.LicenceActivityType_Status)
    FROM (
        SELECT 
            T.oid AS LicenceActivityType_Oid, 
            T.name AS LicenceActivityType_Name, 
            T.show AS LicenceActivityType_Show, 
            T.name2 AS LicenceActivityType_Name2, 
            T.status AS LicenceActivityType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.licence_activity_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Licences
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView617()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Licences", @"
    SELECT VALUE -- Constructing Licences
        [PostgresModel.Licence](T1.Licence_Oid, T1.Licence_Lpu, T1.Licence_Company, T1.Licence_LicenceSeries, T1.Licence_LicenceNumber, T1.Licence_LicenceRegistration, T1.Licence_LicenceActivity)
    FROM (
        SELECT 
            T.oid AS Licence_Oid, 
            T.lpu AS Licence_Lpu, 
            T.company AS Licence_Company, 
            T.licence_series AS Licence_LicenceSeries, 
            T.licence_number AS Licence_LicenceNumber, 
            T.licence_registration AS Licence_LicenceRegistration, 
            T.licence_activity AS Licence_LicenceActivity, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.licences AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView618()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Services", @"
    SELECT VALUE -- Constructing Services
        [PostgresModel.Service](T1.Service_Oid, T1.Service_Defaultname, T1.Service_Show, T1.Service_PayType, T1.Service_Status, T1.Service_Code, T1.Service_ServiceGroup, T1.Service_IsCustomPrice, T1.Service_IsSuperbase)
    FROM (
        SELECT 
            T.oid AS Service_Oid, 
            T.defaultname AS Service_Defaultname, 
            T.show AS Service_Show, 
            T.pay_type AS Service_PayType, 
            T.status AS Service_Status, 
            T.code AS Service_Code, 
            T.service_group AS Service_ServiceGroup, 
            T.is_custom_price AS Service_IsCustomPrice, 
            T.is_superbase AS Service_IsSuperbase, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TkladrSprs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView619()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TkladrSprs", @"
    SELECT VALUE -- Constructing TkladrSprs
        [PostgresModel.TkladrSpr](T1.TkladrSpr_Oid, T1.TkladrSpr_FcPrefix, T1.TkladrSpr_FkIdOracle, T1.TkladrSpr_FkOwnerOracle, T1.TkladrSpr_FkLevel, T1.TkladrSpr_Showelement, T1.TkladrSpr_Phonecode, T1.TkladrSpr_Parent, T1.TkladrSpr_Name, T1.TkladrSpr_Code, T1.TkladrSpr_GasurfId, T1.TkladrSpr_Okato)
    FROM (
        SELECT 
            T.oid AS TkladrSpr_Oid, 
            T.fc_prefix AS TkladrSpr_FcPrefix, 
            T.fk_id_oracle AS TkladrSpr_FkIdOracle, 
            T.fk_owner_oracle AS TkladrSpr_FkOwnerOracle, 
            T.fk_level AS TkladrSpr_FkLevel, 
            T.showelement AS TkladrSpr_Showelement, 
            T.phonecode AS TkladrSpr_Phonecode, 
            T.parent AS TkladrSpr_Parent, 
            T.name AS TkladrSpr_Name, 
            T.code AS TkladrSpr_Code, 
            T.gasurf_id AS TkladrSpr_GasurfId, 
            T.okato AS TkladrSpr_Okato, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tkladrsprs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sysusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView620()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sysusers", "\r\n    SELECT VALUE -- Constructing Sysusers\r\n        [PostgresModel.Sysuser](T1.S" +
                    "ysuser_Oid, T1.Sysuser_Passwordchagedate, T1.Sysuser_Storedpassword, T1.Sysuser_" +
                    "Username, T1.Sysuser_Changepasswordonfirstlogon, T1.Sysuser_Isactive, T1.Sysuser" +
                    "_Codeuser, T1.Sysuser_Isadministrator, T1.Sysuser_Isfulladministrator, T1.Sysuse" +
                    "r_Isaspuser, T1.Sysuser_Readmessages, T1.Sysuser_Showinsite, T1.Sysuser_Foto, T1" +
                    ".Sysuser_Tabelnumber, T1.Sysuser_DloSotr, T1.Sysuser_CodeDisabled, T1.Sysuser_Th" +
                    "umbprint)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS Sysuser_Oid, \r\n    " +
                    "        T.passwordchagedate AS Sysuser_Passwordchagedate, \r\n            T.stored" +
                    "password AS Sysuser_Storedpassword, \r\n            T.username AS Sysuser_Username" +
                    ", \r\n            T.changepasswordonfirstlogon AS Sysuser_Changepasswordonfirstlog" +
                    "on, \r\n            T.isactive AS Sysuser_Isactive, \r\n            T.codeuser AS Sy" +
                    "suser_Codeuser, \r\n            T.isadministrator AS Sysuser_Isadministrator, \r\n  " +
                    "          T.isfulladministrator AS Sysuser_Isfulladministrator, \r\n            T." +
                    "isaspuser AS Sysuser_Isaspuser, \r\n            T.readmessages AS Sysuser_Readmess" +
                    "ages, \r\n            T.showinsite AS Sysuser_Showinsite, \r\n            T.foto AS " +
                    "Sysuser_Foto, \r\n            T.tabelnumber AS Sysuser_Tabelnumber, \r\n            " +
                    "T.dlo_sotr AS Sysuser_DloSotr, \r\n            T.code_disabled AS Sysuser_CodeDisa" +
                    "bled, \r\n            T.thumbprint AS Sysuser_Thumbprint, \r\n            True AS _f" +
                    "rom0\r\n        FROM PostgresEntitiesStoreContainer.sysusers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView621()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sotrs", @"
    SELECT VALUE -- Constructing Sotrs
        [PostgresModel.Sotr](T1.Sotr_Oid, T1.Sotr_Sysuser, T1.Sotr_Otdel, T1.Sotr_Post, T1.Sotr_District, T1.Sotr_DatePostBegin, T1.Sotr_DatePostEnd, T1.Sotr_Id, T1.Sotr_Sysdate)
    FROM (
        SELECT 
            T.oid AS Sotr_Oid, 
            T.sysuser AS Sotr_Sysuser, 
            T.otdel AS Sotr_Otdel, 
            T.post AS Sotr_Post, 
            T.district AS Sotr_District, 
            T.date_post_begin AS Sotr_DatePostBegin, 
            T.date_post_end AS Sotr_DatePostEnd, 
            T.id AS Sotr_Id, 
            T.sysdate AS Sotr_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView622()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3436);
            viewString.Append("\r\n    SELECT VALUE -- Constructing People\r\n        [PostgresModel.Person](T1.Per");
            viewString.Append("son_Oid, T1.Person_Dtcreation, T1.Person_Id, T1.Person_Sex, T1.Person_Livein, T1");
            viewString.Append(".Person_Sstate, T1.Person_Pacient, T1.Person_Addressex1, T1.Person_Addressex2, T");
            viewString.Append("1.Person_Lpu, T1.Person_Email, T1.Person_Telhome, T1.Person_Telwork, T1.Person_T");
            viewString.Append("elsot1, T1.Person_Telsot2, T1.Person_District, T1.Person_Company, T1.Person_Peop");
            viewString.Append("ledoctype, T1.Person_Peopledocser, T1.Person_Peopledocnum, T1.Person_Dispuchet, ");
            viewString.Append("T1.Person_Snils, T1.Person_Profession, T1.Person_Peoplepost, T1.Person_Dependant");
            viewString.Append(", T1.Person_Webmail, T1.Person_Webphone, T1.Person_Region, T1.Person_Category, T");
            viewString.Append("1.Person_Placework, T1.Person_Firstname, T1.Person_Lastname, T1.Person_Middlenam");
            viewString.Append("e, T1.Person_Birthday, T1.Person_Login, T1.Person_Waslogin, T1.Person_Password, ");
            viewString.Append("T1.Person_Deathdate, T1.Person_GasurfOid, T1.Person_Phonecode, T1.Person_Karta, ");
            viewString.Append("T1.Person_Importcode, T1.Person_Sysdate, T1.Person_Snils2, T1.Person_Description");
            viewString.Append(", T1.Person_Issuedate, T1.Person_Issuedby, T1.Person_Enddate, T1.Person_Comment,");
            viewString.Append(" T1.Person_Peopledocdepcode)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS ");
            viewString.Append("Person_Oid, \r\n            T.dtcreation AS Person_Dtcreation, \r\n            T.id ");
            viewString.Append("AS Person_Id, \r\n            T.sex AS Person_Sex, \r\n            T.livein AS Perso");
            viewString.Append("n_Livein, \r\n            T.sstate AS Person_Sstate, \r\n            T.pacient AS Pe");
            viewString.Append("rson_Pacient, \r\n            T.addressex1 AS Person_Addressex1, \r\n            T.a");
            viewString.Append("ddressex2 AS Person_Addressex2, \r\n            T.lpu AS Person_Lpu, \r\n           ");
            viewString.Append(" T.email AS Person_Email, \r\n            T.telhome AS Person_Telhome, \r\n         ");
            viewString.Append("   T.telwork AS Person_Telwork, \r\n            T.telsot1 AS Person_Telsot1, \r\n   ");
            viewString.Append("         T.telsot2 AS Person_Telsot2, \r\n            T.district AS Person_Distric");
            viewString.Append("t, \r\n            T.company AS Person_Company, \r\n            T.peopledoctype AS P");
            viewString.Append("erson_Peopledoctype, \r\n            T.peopledocser AS Person_Peopledocser, \r\n    ");
            viewString.Append("        T.peopledocnum AS Person_Peopledocnum, \r\n            T.dispuchet AS Pers");
            viewString.Append("on_Dispuchet, \r\n            T.snils AS Person_Snils, \r\n            T.profession ");
            viewString.Append("AS Person_Profession, \r\n            T.peoplepost AS Person_Peoplepost, \r\n       ");
            viewString.Append("     T.dependant AS Person_Dependant, \r\n            T.webmail AS Person_Webmail,");
            viewString.Append(" \r\n            T.webphone AS Person_Webphone, \r\n            T.region AS Person_R");
            viewString.Append("egion, \r\n            T.category AS Person_Category, \r\n            T.placework AS");
            viewString.Append(" Person_Placework, \r\n            T.firstname AS Person_Firstname, \r\n            ");
            viewString.Append("T.lastname AS Person_Lastname, \r\n            T.middlename AS Person_Middlename, ");
            viewString.Append("\r\n            T.birthday AS Person_Birthday, \r\n            T.login AS Person_Log");
            viewString.Append("in, \r\n            T.waslogin AS Person_Waslogin, \r\n            T.password AS Per");
            viewString.Append("son_Password, \r\n            T.deathdate AS Person_Deathdate, \r\n            T.gas");
            viewString.Append("urf_oid AS Person_GasurfOid, \r\n            T.phonecode AS Person_Phonecode, \r\n  ");
            viewString.Append("          T.karta AS Person_Karta, \r\n            T.importcode AS Person_Importco");
            viewString.Append("de, \r\n            T.sysdate AS Person_Sysdate, \r\n            T.snils2 AS Person_");
            viewString.Append("Snils2, \r\n            T.description AS Person_Description, \r\n            T.issue");
            viewString.Append("date AS Person_Issuedate, \r\n            T.issuedby AS Person_Issuedby, \r\n       ");
            viewString.Append("     T.enddate AS Person_Enddate, \r\n            T.comment AS Person_Comment, \r\n ");
            viewString.Append("           T.peopledocdepcode AS Person_Peopledocdepcode, \r\n            True AS ");
            viewString.Append("_from0\r\n        FROM PostgresEntitiesStoreContainer.people AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.People", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Otdels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView623()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Otdels", @"
    SELECT VALUE -- Constructing Otdels
        [PostgresModel.Otdel](T1.Otdel_Oid, T1.Otdel_Lpu, T1.Otdel_Addressex, T1.Otdel_Parent, T1.Otdel_Name, T1.Otdel_OtdelCode, T1.Otdel_Location, T1.Otdel_Distance, T1.Otdel_OtdelType, T1.Otdel_OtdelProfile, T1.Otdel_FomsCode, T1.Otdel_Sysdate, T1.Otdel_ShowOnSite)
    FROM (
        SELECT 
            T.oid AS Otdel_Oid, 
            T.lpu AS Otdel_Lpu, 
            T.addressex AS Otdel_Addressex, 
            T.parent AS Otdel_Parent, 
            T.name AS Otdel_Name, 
            T.otdel_code AS Otdel_OtdelCode, 
            T.location AS Otdel_Location, 
            T.distance AS Otdel_Distance, 
            T.otdel_type AS Otdel_OtdelType, 
            T.otdel_profile AS Otdel_OtdelProfile, 
            T.foms_code AS Otdel_FomsCode, 
            T.sysdate AS Otdel_Sysdate, 
            T.show_on_site AS Otdel_ShowOnSite, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Addressexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView624()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Addressexes", @"
    SELECT VALUE -- Constructing Addressexes
        [PostgresModel.Addressex](T1.Addressex_Oid, T1.Addressex_Tkladr, T1.Addressex_AddressType, T1.Addressex_House, T1.Addressex_Corps, T1.Addressex_Building, T1.Addressex_Flat, T1.Addressex_AddrStr, T1.Addressex_Registrationdate, T1.Addressex_Sysdate)
    FROM (
        SELECT 
            T.oid AS Addressex_Oid, 
            T.tkladr AS Addressex_Tkladr, 
            T.address_type AS Addressex_AddressType, 
            T.house AS Addressex_House, 
            T.corps AS Addressex_Corps, 
            T.building AS Addressex_Building, 
            T.flat AS Addressex_Flat, 
            T.addr_str AS Addressex_AddrStr, 
            T.registrationdate AS Addressex_Registrationdate, 
            T.sysdate AS Addressex_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.addressexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InformationSystems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView625()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InformationSystems", @"
    SELECT VALUE -- Constructing InformationSystems
        [PostgresModel.InformationSystem](T1.InformationSystem_Oid, T1.InformationSystem_SystemName, T1.InformationSystem_SystemType, T1.InformationSystem_Developer)
    FROM (
        SELECT 
            T.oid AS InformationSystem_Oid, 
            T.system_name AS InformationSystem_SystemName, 
            T.system_type AS InformationSystem_SystemType, 
            T.developer AS InformationSystem_Developer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.information_systems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InformationSystemTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView626()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InformationSystemTypes", @"
    SELECT VALUE -- Constructing InformationSystemTypes
        [PostgresModel.InformationSystemType](T1.InformationSystemType_Oid, T1.InformationSystemType_Name, T1.InformationSystemType_Name2, T1.InformationSystemType_Status, T1.InformationSystemType_Show)
    FROM (
        SELECT 
            T.oid AS InformationSystemType_Oid, 
            T.name AS InformationSystemType_Name, 
            T.name2 AS InformationSystemType_Name2, 
            T.status AS InformationSystemType_Status, 
            T.show AS InformationSystemType_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.information_system_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BankAccounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView627()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BankAccounts", @"
    SELECT VALUE -- Constructing BankAccounts
        [PostgresModel.BankAccount](T1.BankAccount_Oid, T1.BankAccount_Lpu, T1.BankAccount_Company, T1.BankAccount_CorrespondentAccount, T1.BankAccount_CurrentAccount)
    FROM (
        SELECT 
            T.oid AS BankAccount_Oid, 
            T.lpu AS BankAccount_Lpu, 
            T.company AS BankAccount_Company, 
            T.correspondent_account AS BankAccount_CorrespondentAccount, 
            T.current_account AS BankAccount_CurrentAccount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bank_accounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CompComptypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView628()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CompComptypes", @"
    SELECT VALUE -- Constructing CompComptypes
        [PostgresModel.CompComptype](T1.CompComptype_Company, T1.CompComptype_Companytype, T1.CompComptype_Oid)
    FROM (
        SELECT 
            T.company AS CompComptype_Company, 
            T.companytype AS CompComptype_Companytype, 
            T.oid AS CompComptype_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.comp_comptypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Companytypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView629()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Companytypes", @"
    SELECT VALUE -- Constructing Companytypes
        [PostgresModel.Companytype](T1.Companytype_Oid, T1.Companytype_Name, T1.Companytype_Show, T1.Companytype_Name2, T1.Companytype_Status, T1.Companytype_IsInsurComp)
    FROM (
        SELECT 
            T.oid AS Companytype_Oid, 
            T.name AS Companytype_Name, 
            T.show AS Companytype_Show, 
            T.name2 AS Companytype_Name2, 
            T.status AS Companytype_Status, 
            T.is_insur_comp AS Companytype_IsInsurComp, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.companytypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Vregions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView630()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2319);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Vregions\r\n        [PostgresModel.Vregion](T1.");
            viewString.Append("Vregion_Oid, T1.Vregion_Name, T1.Vregion_Ipgeo, T1.Vregion_Syn, T1.Vregion_RootU");
            viewString.Append("rl, T1.Vregion_AbsolutUrl, T1.Vregion_Csssufix, T1.Vregion_Showpoll, T1.Vregion_");
            viewString.Append("Showlls, T1.Vregion_Sms, T1.Vregion_RussianName, T1.Vregion_CenterPhone, T1.Vreg");
            viewString.Append("ion_Twitter, T1.Vregion_Jnvls, T1.Vregion_ProjectStart, T1.Vregion_Allstatistic,");
            viewString.Append(" T1.Vregion_Mailserver, T1.Vregion_Title, T1.Vregion_Showjnvls, T1.Vregion_Otziv");
            viewString.Append(", T1.Vregion_ScheduleShow, T1.Vregion_Showadminhelp, T1.Vregion_Stateyavka, T1.V");
            viewString.Append("region_Terminal, T1.Vregion_Showregisterurl, T1.Vregion_ShowCloud, T1.Vregion_PA");
            viewString.Append("CREGISTALLOW, T1.Vregion_PACREGISTPREMODERATE, T1.Vregion_CALLCENTER, T1.Vregion");
            viewString.Append("_CALLCENTERDESC)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS Vregion_Oid,");
            viewString.Append(" \r\n            T.name AS Vregion_Name, \r\n            T.ipgeo AS Vregion_Ipgeo, \r");
            viewString.Append("\n            T.syn AS Vregion_Syn, \r\n            T.root_url AS Vregion_RootUrl, ");
            viewString.Append("\r\n            T.absolut_url AS Vregion_AbsolutUrl, \r\n            T.csssufix AS V");
            viewString.Append("region_Csssufix, \r\n            T.showpoll AS Vregion_Showpoll, \r\n            T.s");
            viewString.Append("howlls AS Vregion_Showlls, \r\n            T.sms AS Vregion_Sms, \r\n            T.r");
            viewString.Append("ussian_name AS Vregion_RussianName, \r\n            T.center_phone AS Vregion_Cent");
            viewString.Append("erPhone, \r\n            T.twitter AS Vregion_Twitter, \r\n            T.jnvls AS Vr");
            viewString.Append("egion_Jnvls, \r\n            T.project_start AS Vregion_ProjectStart, \r\n          ");
            viewString.Append("  T.allstatistic AS Vregion_Allstatistic, \r\n            T.mailserver AS Vregion_");
            viewString.Append("Mailserver, \r\n            T.title AS Vregion_Title, \r\n            T.showjnvls AS");
            viewString.Append(" Vregion_Showjnvls, \r\n            T.otziv AS Vregion_Otziv, \r\n            T.sche");
            viewString.Append("dule_show AS Vregion_ScheduleShow, \r\n            T.showadminhelp AS Vregion_Show");
            viewString.Append("adminhelp, \r\n            T.stateyavka AS Vregion_Stateyavka, \r\n            T.ter");
            viewString.Append("minal AS Vregion_Terminal, \r\n            T.showregisterurl AS Vregion_Showregist");
            viewString.Append("erurl, \r\n            T.show_cloud AS Vregion_ShowCloud, \r\n            T.PAC_REGI");
            viewString.Append("ST_ALLOW AS Vregion_PACREGISTALLOW, \r\n            T.PAC_REGIST_PREMODERATE AS Vr");
            viewString.Append("egion_PACREGISTPREMODERATE, \r\n            T.CALL_CENTER AS Vregion_CALLCENTER, \r");
            viewString.Append("\n            T.CALL_CENTER_DESC AS Vregion_CALLCENTERDESC, \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM PostgresEntitiesStoreContainer.vregions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Vregions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Posts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView631()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Posts", @"
    SELECT VALUE -- Constructing Posts
        [PostgresModel.Post](T1.Post_Oid, T1.Post_Name, T1.Post_Id, T1.Post_Version, T1.Post_Isuniqueforlpu, T1.Post_Parent, T1.Post_Name2, T1.Post_Show, T1.Post_Status, T1.Post_IsDoctor, T1.Post_ShortName)
    FROM (
        SELECT 
            T.oid AS Post_Oid, 
            T.name AS Post_Name, 
            T.id AS Post_Id, 
            T.version AS Post_Version, 
            T.isuniqueforlpu AS Post_Isuniqueforlpu, 
            T.parent AS Post_Parent, 
            T.name2 AS Post_Name2, 
            T.show AS Post_Show, 
            T.status AS Post_Status, 
            T.is_doctor AS Post_IsDoctor, 
            T.short_name AS Post_ShortName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.posts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServiceGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView632()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServiceGroups", @"
    SELECT VALUE -- Constructing ServiceGroups
        [PostgresModel.ServiceGroup](T1.ServiceGroup_Name, T1.ServiceGroup_Oid, T1.ServiceGroup_FomsCode, T1.ServiceGroup_ShowInsurprogram, T1.ServiceGroup_Synonym)
    FROM (
        SELECT 
            T.name AS ServiceGroup_Name, 
            T.oid AS ServiceGroup_Oid, 
            T.foms_code AS ServiceGroup_FomsCode, 
            T.show_insurprogram AS ServiceGroup_ShowInsurprogram, 
            T.synonym AS ServiceGroup_Synonym, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FoodForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView633()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FoodForms", @"
    SELECT VALUE -- Constructing FoodForms
        [PostgresModel.FoodForm](T1.FoodForm_Oid, T1.FoodForm_Name, T1.FoodForm_Show, T1.FoodForm_Name2, T1.FoodForm_Status)
    FROM (
        SELECT 
            T.oid AS FoodForm_Oid, 
            T.name AS FoodForm_Name, 
            T.show AS FoodForm_Show, 
            T.name2 AS FoodForm_Name2, 
            T.status AS FoodForm_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.food_forms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingPowerSupplyTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView634()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingPowerSupplyTypes", @"
    SELECT VALUE -- Constructing BuildingPowerSupplyTypes
        [PostgresModel.BuildingPowerSupplyType](T1.BuildingPowerSupplyType_Oid, T1.BuildingPowerSupplyType_Name, T1.BuildingPowerSupplyType_Show, T1.BuildingPowerSupplyType_Name2, T1.BuildingPowerSupplyType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingPowerSupplyType_Oid, 
            T.name AS BuildingPowerSupplyType_Name, 
            T.show AS BuildingPowerSupplyType_Show, 
            T.name2 AS BuildingPowerSupplyType_Name2, 
            T.status AS BuildingPowerSupplyType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_power_supply_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingFloorTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView635()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingFloorTypes", @"
    SELECT VALUE -- Constructing BuildingFloorTypes
        [PostgresModel.BuildingFloorType](T1.BuildingFloorType_Oid, T1.BuildingFloorType_Name, T1.BuildingFloorType_Show, T1.BuildingFloorType_Name2, T1.BuildingFloorType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingFloorType_Oid, 
            T.name AS BuildingFloorType_Name, 
            T.show AS BuildingFloorType_Show, 
            T.name2 AS BuildingFloorType_Name2, 
            T.status AS BuildingFloorType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_floor_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView636()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingTypes", @"
    SELECT VALUE -- Constructing BuildingTypes
        [PostgresModel.BuildingType](T1.BuildingType_Oid, T1.BuildingType_Name, T1.BuildingType_Show, T1.BuildingType_Name2, T1.BuildingType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingType_Oid, 
            T.name AS BuildingType_Name, 
            T.show AS BuildingType_Show, 
            T.name2 AS BuildingType_Name2, 
            T.status AS BuildingType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingOwnerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView637()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingOwnerships", @"
    SELECT VALUE -- Constructing BuildingOwnerships
        [PostgresModel.BuildingOwnership](T1.BuildingOwnership_Oid, T1.BuildingOwnership_Name, T1.BuildingOwnership_Show, T1.BuildingOwnership_Name2, T1.BuildingOwnership_Status)
    FROM (
        SELECT 
            T.oid AS BuildingOwnership_Oid, 
            T.name AS BuildingOwnership_Name, 
            T.show AS BuildingOwnership_Show, 
            T.name2 AS BuildingOwnership_Name2, 
            T.status AS BuildingOwnership_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_ownerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingSewerageTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView638()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingSewerageTypes", @"
    SELECT VALUE -- Constructing BuildingSewerageTypes
        [PostgresModel.BuildingSewerageType](T1.BuildingSewerageType_Oid, T1.BuildingSewerageType_Name, T1.BuildingSewerageType_Show, T1.BuildingSewerageType_Name2, T1.BuildingSewerageType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingSewerageType_Oid, 
            T.name AS BuildingSewerageType_Name, 
            T.show AS BuildingSewerageType_Show, 
            T.name2 AS BuildingSewerageType_Name2, 
            T.status AS BuildingSewerageType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_sewerage_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView639()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingStates", @"
    SELECT VALUE -- Constructing BuildingStates
        [PostgresModel.BuildingState](T1.BuildingState_Oid, T1.BuildingState_Building, T1.BuildingState_DateState, T1.BuildingState_AlertCondition, T1.BuildingState_Reconstruction, T1.BuildingState_Repair, T1.BuildingState_CurrentState)
    FROM (
        SELECT 
            T.oid AS BuildingState_Oid, 
            T.building AS BuildingState_Building, 
            T.date_state AS BuildingState_DateState, 
            T.alert_condition AS BuildingState_AlertCondition, 
            T.reconstruction AS BuildingState_Reconstruction, 
            T.repair AS BuildingState_Repair, 
            T.current_state AS BuildingState_CurrentState, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_states AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingPrices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView640()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingPrices", @"
    SELECT VALUE -- Constructing BuildingPrices
        [PostgresModel.BuildingPrice](T1.BuildingPrice_Oid, T1.BuildingPrice_Building, T1.BuildingPrice_DateEvaluation, T1.BuildingPrice_CostDepreciation, T1.BuildingPrice_CostResidual, T1.BuildingPrice_CostActual)
    FROM (
        SELECT 
            T.oid AS BuildingPrice_Oid, 
            T.building AS BuildingPrice_Building, 
            T.date_evaluation AS BuildingPrice_DateEvaluation, 
            T.cost_depreciation AS BuildingPrice_CostDepreciation, 
            T.cost_residual AS BuildingPrice_CostResidual, 
            T.cost_actual AS BuildingPrice_CostActual, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_prices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingSupportingStructures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView641()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingSupportingStructures", @"
    SELECT VALUE -- Constructing BuildingSupportingStructures
        [PostgresModel.BuildingSupportingStructure](T1.BuildingSupportingStructure_Oid, T1.BuildingSupportingStructure_Name, T1.BuildingSupportingStructure_Show, T1.BuildingSupportingStructure_Name2, T1.BuildingSupportingStructure_Status)
    FROM (
        SELECT 
            T.oid AS BuildingSupportingStructure_Oid, 
            T.name AS BuildingSupportingStructure_Name, 
            T.show AS BuildingSupportingStructure_Show, 
            T.name2 AS BuildingSupportingStructure_Name2, 
            T.status AS BuildingSupportingStructure_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_supporting_structures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingProjectTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView642()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingProjectTypes", @"
    SELECT VALUE -- Constructing BuildingProjectTypes
        [PostgresModel.BuildingProjectType](T1.BuildingProjectType_Oid, T1.BuildingProjectType_Name, T1.BuildingProjectType_Show, T1.BuildingProjectType_Name2, T1.BuildingProjectType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingProjectType_Oid, 
            T.name AS BuildingProjectType_Name, 
            T.show AS BuildingProjectType_Show, 
            T.name2 AS BuildingProjectType_Name2, 
            T.status AS BuildingProjectType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_project_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Courts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView643()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Courts", @"
    SELECT VALUE -- Constructing Courts
        [PostgresModel.Court](T1.Court_Oid, T1.Court_Plot, T1.Court_Address, T1.Court_CourtName, T1.Court_CourtCode, T1.Court_CourtDate, T1.Court_Area, T1.Court_Okato)
    FROM (
        SELECT 
            T.oid AS Court_Oid, 
            T.plot AS Court_Plot, 
            T.address AS Court_Address, 
            T.court_name AS Court_CourtName, 
            T.court_code AS Court_CourtCode, 
            T.court_date AS Court_CourtDate, 
            T.area AS Court_Area, 
            T.okato AS Court_Okato, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.courts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FoodTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView644()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FoodTypes", @"
    SELECT VALUE -- Constructing FoodTypes
        [PostgresModel.FoodType](T1.FoodType_Oid, T1.FoodType_Name, T1.FoodType_Show, T1.FoodType_Name2, T1.FoodType_Status)
    FROM (
        SELECT 
            T.oid AS FoodType_Oid, 
            T.name AS FoodType_Name, 
            T.show AS FoodType_Show, 
            T.name2 AS FoodType_Name2, 
            T.status AS FoodType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.food_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FoodRepetitions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView645()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FoodRepetitions", @"
    SELECT VALUE -- Constructing FoodRepetitions
        [PostgresModel.FoodRepetition](T1.FoodRepetition_Oid, T1.FoodRepetition_Name, T1.FoodRepetition_Show, T1.FoodRepetition_Name2, T1.FoodRepetition_Status)
    FROM (
        SELECT 
            T.oid AS FoodRepetition_Oid, 
            T.name AS FoodRepetition_Name, 
            T.show AS FoodRepetition_Show, 
            T.name2 AS FoodRepetition_Name2, 
            T.status AS FoodRepetition_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.food_repetitions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TreatmenConditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView646()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TreatmenConditions", @"
    SELECT VALUE -- Constructing TreatmenConditions
        [PostgresModel.TreatmenConditions](T1.TreatmenConditions_Oid, T1.TreatmenConditions_Otdel, T1.TreatmenConditions_FoodType, T1.TreatmenConditions_FoodRepetition, T1.TreatmenConditions_FoodForm, T1.TreatmenConditions_TechnologyName, T1.TreatmenConditions_TechnologyClass)
    FROM (
        SELECT 
            T.oid AS TreatmenConditions_Oid, 
            T.otdel AS TreatmenConditions_Otdel, 
            T.food_type AS TreatmenConditions_FoodType, 
            T.food_repetition AS TreatmenConditions_FoodRepetition, 
            T.food_form AS TreatmenConditions_FoodForm, 
            T.technology_name AS TreatmenConditions_TechnologyName, 
            T.technology_class AS TreatmenConditions_TechnologyClass, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.treatmen_conditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingHotWaterTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView647()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingHotWaterTypes", @"
    SELECT VALUE -- Constructing BuildingHotWaterTypes
        [PostgresModel.BuildingHotWaterType](T1.BuildingHotWaterType_Oid, T1.BuildingHotWaterType_Name, T1.BuildingHotWaterType_Show, T1.BuildingHotWaterType_Name2, T1.BuildingHotWaterType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingHotWaterType_Oid, 
            T.name AS BuildingHotWaterType_Name, 
            T.show AS BuildingHotWaterType_Show, 
            T.name2 AS BuildingHotWaterType_Name2, 
            T.status AS BuildingHotWaterType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_hot_water_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Rooms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView648()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Rooms", @"
    SELECT VALUE -- Constructing Rooms
        [PostgresModel.Room](T1.Room_Oid, T1.Room_Otdel, T1.Room_Building, T1.Room_RoomName, T1.Room_Identifier, T1.Room_RoomType, T1.Room_Rooms, T1.Room_PrimarySeats, T1.Room_AdditionalSeats, T1.Room_Area, T1.Room_WindowView)
    FROM (
        SELECT 
            T.oid AS Room_Oid, 
            T.otdel AS Room_Otdel, 
            T.building AS Room_Building, 
            T.room_name AS Room_RoomName, 
            T.identifier AS Room_Identifier, 
            T.room_type AS Room_RoomType, 
            T.rooms AS Room_Rooms, 
            T.primary_seats AS Room_PrimarySeats, 
            T.additional_seats AS Room_AdditionalSeats, 
            T.area AS Room_Area, 
            T.window_view AS Room_WindowView, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.rooms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Beds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView649()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Beds", @"
    SELECT VALUE -- Constructing Beds
        [PostgresModel.Bed](T1.Bed_Oid, T1.Bed_Room, T1.Bed_ScheduledDays, T1.Bed_ActualDays, T1.Bed_BedDynamic, T1.Bed_BedDay, T1.Bed_BedChildren, T1.Bed_BedProfile)
    FROM (
        SELECT 
            T.oid AS Bed_Oid, 
            T.room AS Bed_Room, 
            T.scheduled_days AS Bed_ScheduledDays, 
            T.actual_days AS Bed_ActualDays, 
            T.bed_dynamic AS Bed_BedDynamic, 
            T.bed_day AS Bed_BedDay, 
            T.bed_children AS Bed_BedChildren, 
            T.bed_profile AS Bed_BedProfile, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.beds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingStateTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView650()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingStateTypes", @"
    SELECT VALUE -- Constructing BuildingStateTypes
        [PostgresModel.BuildingStateType](T1.BuildingStateType_Oid, T1.BuildingStateType_Name, T1.BuildingStateType_Show, T1.BuildingStateType_Name2, T1.BuildingStateType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingStateType_Oid, 
            T.name AS BuildingStateType_Name, 
            T.show AS BuildingStateType_Show, 
            T.name2 AS BuildingStateType_Name2, 
            T.status AS BuildingStateType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_state_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Plots
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView651()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Plots", @"
    SELECT VALUE -- Constructing Plots
        [PostgresModel.Plot](T1.Plot_Oid, T1.Plot_Addressex, T1.Plot_Lpu, T1.Plot_Identifier, T1.Plot_Right, T1.Plot_Area, T1.Plot_Railway, T1.Plot_RailwayDistance, T1.Plot_Airport, T1.Plot_AirportDistance, T1.Plot_Bus, T1.Plot_BusDistance, T1.Plot_Helicopter, T1.Plot_HelicopterDistance, T1.Plot_MainRoad)
    FROM (
        SELECT 
            T.oid AS Plot_Oid, 
            T.addressex AS Plot_Addressex, 
            T.lpu AS Plot_Lpu, 
            T.identifier AS Plot_Identifier, 
            T.[right] AS Plot_Right, 
            T.area AS Plot_Area, 
            T.railway AS Plot_Railway, 
            T.railway_distance AS Plot_RailwayDistance, 
            T.airport AS Plot_Airport, 
            T.airport_distance AS Plot_AirportDistance, 
            T.bus AS Plot_Bus, 
            T.bus_distance AS Plot_BusDistance, 
            T.helicopter AS Plot_Helicopter, 
            T.helicopter_distance AS Plot_HelicopterDistance, 
            T.main_road AS Plot_MainRoad, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.plots AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ComfortTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView652()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ComfortTypes", @"
    SELECT VALUE -- Constructing ComfortTypes
        [PostgresModel.ComfortType](T1.ComfortType_Oid, T1.ComfortType_Name, T1.ComfortType_Show, T1.ComfortType_Name2, T1.ComfortType_Status)
    FROM (
        SELECT 
            T.oid AS ComfortType_Oid, 
            T.name AS ComfortType_Name, 
            T.show AS ComfortType_Show, 
            T.name2 AS ComfortType_Name2, 
            T.status AS ComfortType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.comfort_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingCommunicationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView653()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingCommunicationTypes", @"
    SELECT VALUE -- Constructing BuildingCommunicationTypes
        [PostgresModel.BuildingCommunicationType](T1.BuildingCommunicationType_Oid, T1.BuildingCommunicationType_Name, T1.BuildingCommunicationType_Show, T1.BuildingCommunicationType_Name2, T1.BuildingCommunicationType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingCommunicationType_Oid, 
            T.name AS BuildingCommunicationType_Name, 
            T.show AS BuildingCommunicationType_Show, 
            T.name2 AS BuildingCommunicationType_Name2, 
            T.status AS BuildingCommunicationType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_communication_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingHeatingTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView654()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingHeatingTypes", @"
    SELECT VALUE -- Constructing BuildingHeatingTypes
        [PostgresModel.BuildingHeatingType](T1.BuildingHeatingType_Oid, T1.BuildingHeatingType_Name, T1.BuildingHeatingType_Show, T1.BuildingHeatingType_Name2, T1.BuildingHeatingType_Status)
    FROM (
        SELECT 
            T.oid AS BuildingHeatingType_Oid, 
            T.name AS BuildingHeatingType_Name, 
            T.show AS BuildingHeatingType_Show, 
            T.name2 AS BuildingHeatingType_Name2, 
            T.status AS BuildingHeatingType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_heating_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingPurposes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView655()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingPurposes", @"
    SELECT VALUE -- Constructing BuildingPurposes
        [PostgresModel.BuildingPurpose](T1.BuildingPurpose_Oid, T1.BuildingPurpose_Name, T1.BuildingPurpose_Show, T1.BuildingPurpose_Name2, T1.BuildingPurpose_Status)
    FROM (
        SELECT 
            T.oid AS BuildingPurpose_Oid, 
            T.name AS BuildingPurpose_Name, 
            T.show AS BuildingPurpose_Show, 
            T.name2 AS BuildingPurpose_Name2, 
            T.status AS BuildingPurpose_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.building_purposes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Infrastructures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView656()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Infrastructures", @"
    SELECT VALUE -- Constructing Infrastructures
        [PostgresModel.Infrastructure](T1.Infrastructure_Oid, T1.Infrastructure_Plot, T1.Infrastructure_InfrastructureCount, T1.Infrastructure_InfrastructureType)
    FROM (
        SELECT 
            T.oid AS Infrastructure_Oid, 
            T.plot AS Infrastructure_Plot, 
            T.infrastructure_count AS Infrastructure_InfrastructureCount, 
            T.infrastructure_type AS Infrastructure_InfrastructureType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infrastructures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RoomTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView657()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RoomTypes", @"
    SELECT VALUE -- Constructing RoomTypes
        [PostgresModel.RoomType](T1.RoomType_Oid, T1.RoomType_Name, T1.RoomType_Show, T1.RoomType_Name2, T1.RoomType_Status)
    FROM (
        SELECT 
            T.oid AS RoomType_Oid, 
            T.name AS RoomType_Name, 
            T.show AS RoomType_Show, 
            T.name2 AS RoomType_Name2, 
            T.status AS RoomType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.room_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Buildings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView658()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4927);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Buildings\r\n        [PostgresModel.Building](T");
            viewString.Append("1.Building_Oid, T1.Building_Plot, T1.Building_BuildingName, T1.Building_Identifi");
            viewString.Append("er, T1.Building_BuildingType, T1.Building_Address, T1.Building_BuildingPurpose, ");
            viewString.Append("T1.Building_EquipmentOwnership, T1.Building_Balance, T1.Building_Beds, T1.Buildi");
            viewString.Append("ng_Visits, T1.Building_BedsActual, T1.Building_StationarySeats, T1.Building_Outp");
            viewString.Append("atientSeats, T1.Building_Volume, T1.Building_AreaTotal, T1.Building_AreaUseful, ");
            viewString.Append("T1.Building_AreaRoom, T1.Building_AreaOffices, T1.Building_FireAlarms, T1.Buildi");
            viewString.Append("ng_BurglarAlarms, T1.Building_ButtonPolice, T1.Building_FireWarning, T1.Building");
            viewString.Append("_FireWater, T1.Building_FireDepartmentAlarm, T1.Building_FireDepartmentConnectio");
            viewString.Append("n, T1.Building_FireViolations, T1.Building_EmergencyExits, T1.Building_PersonalP");
            viewString.Append("rotection, T1.Building_Litter, T1.Building_FireDepartmentDistance, T1.Building_S");
            viewString.Append("ecurity, T1.Building_MetalDoors, T1.Building_VideoMonitoring, T1.Building_RoomAt");
            viewString.Append("tendants, T1.Building_FencingArea, T1.Building_SuitabilityDisabilities, T1.Build");
            viewString.Append("ing_ProjectType, T1.Building_ProjectNumber, T1.Building_ProjectDate, T1.Building");
            viewString.Append("_ConstructionDate, T1.Building_RepairDate, T1.Building_Airing, T1.Building_Suppo");
            viewString.Append("rtingStructure, T1.Building_FloorType, T1.Building_FloorCount, T1.Building_Condi");
            viewString.Append("tioning, T1.Building_PowerSupply, T1.Building_WaterSupply, T1.Building_HotWaterT");
            viewString.Append("ype, T1.Building_HeatingType, T1.Building_SewerageType, T1.Building_MedicalGasSu");
            viewString.Append("pply, T1.Building_GasSupply, T1.Building_CommunicationType, T1.Building_Passenge");
            viewString.Append("rLift, T1.Building_MedicalLift, T1.Building_CostPrimary)\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.oid AS Building_Oid, \r\n            T.plot AS Building_Plot,");
            viewString.Append(" \r\n            T.building_name AS Building_BuildingName, \r\n            T.identif");
            viewString.Append("ier AS Building_Identifier, \r\n            T.building_type AS Building_BuildingTy");
            viewString.Append("pe, \r\n            T.address AS Building_Address, \r\n            T.building_purpos");
            viewString.Append("e AS Building_BuildingPurpose, \r\n            T.equipment_ownership AS Building_E");
            viewString.Append("quipmentOwnership, \r\n            T.balance AS Building_Balance, \r\n            T.");
            viewString.Append("beds AS Building_Beds, \r\n            T.visits AS Building_Visits, \r\n            ");
            viewString.Append("T.beds_actual AS Building_BedsActual, \r\n            T.stationary_seats AS Buildi");
            viewString.Append("ng_StationarySeats, \r\n            T.outpatient_seats AS Building_OutpatientSeats");
            viewString.Append(", \r\n            T.volume AS Building_Volume, \r\n            T.area_total AS Build");
            viewString.Append("ing_AreaTotal, \r\n            T.area_useful AS Building_AreaUseful, \r\n           ");
            viewString.Append(" T.area_room AS Building_AreaRoom, \r\n            T.area_offices AS Building_Area");
            viewString.Append("Offices, \r\n            T.fire_alarms AS Building_FireAlarms, \r\n            T.bur");
            viewString.Append("glar_alarms AS Building_BurglarAlarms, \r\n            T.button_police AS Building");
            viewString.Append("_ButtonPolice, \r\n            T.fire_warning AS Building_FireWarning, \r\n         ");
            viewString.Append("   T.fire_water AS Building_FireWater, \r\n            T.fire_department_alarm AS ");
            viewString.Append("Building_FireDepartmentAlarm, \r\n            T.fire_department_connection AS Buil");
            viewString.Append("ding_FireDepartmentConnection, \r\n            T.fire_violations AS Building_FireV");
            viewString.Append("iolations, \r\n            T.emergency_exits AS Building_EmergencyExits, \r\n       ");
            viewString.Append("     T.personal_protection AS Building_PersonalProtection, \r\n            T.litte");
            viewString.Append("r AS Building_Litter, \r\n            T.fire_department_distance AS Building_FireD");
            viewString.Append("epartmentDistance, \r\n            T.security AS Building_Security, \r\n            ");
            viewString.Append("T.metal_doors AS Building_MetalDoors, \r\n            T.video_monitoring AS Buildi");
            viewString.Append("ng_VideoMonitoring, \r\n            T.room_attendants AS Building_RoomAttendants, ");
            viewString.Append("\r\n            T.fencing_area AS Building_FencingArea, \r\n            T.suitabilit");
            viewString.Append("y_disabilities AS Building_SuitabilityDisabilities, \r\n            T.project_type");
            viewString.Append(" AS Building_ProjectType, \r\n            T.project_number AS Building_ProjectNumb");
            viewString.Append("er, \r\n            T.project_date AS Building_ProjectDate, \r\n            T.constr");
            viewString.Append("uction_date AS Building_ConstructionDate, \r\n            T.repair_date AS Buildin");
            viewString.Append("g_RepairDate, \r\n            T.airing AS Building_Airing, \r\n            T.support");
            viewString.Append("ing_structure AS Building_SupportingStructure, \r\n            T.floor_type AS Bui");
            viewString.Append("lding_FloorType, \r\n            T.floor_count AS Building_FloorCount, \r\n         ");
            viewString.Append("   T.conditioning AS Building_Conditioning, \r\n            T.power_supply AS Buil");
            viewString.Append("ding_PowerSupply, \r\n            T.water_supply AS Building_WaterSupply, \r\n      ");
            viewString.Append("      T.hot_water_type AS Building_HotWaterType, \r\n            T.heating_type AS");
            viewString.Append(" Building_HeatingType, \r\n            T.sewerage_type AS Building_SewerageType, \r");
            viewString.Append("\n            T.medical_gas_supply AS Building_MedicalGasSupply, \r\n            T.");
            viewString.Append("gas_supply AS Building_GasSupply, \r\n            T.communication_type AS Building");
            viewString.Append("_CommunicationType, \r\n            T.passenger_lift AS Building_PassengerLift, \r\n");
            viewString.Append("            T.medical_lift AS Building_MedicalLift, \r\n            T.cost_primary");
            viewString.Append(" AS Building_CostPrimary, \r\n            True AS _from0\r\n        FROM PostgresEnt");
            viewString.Append("itiesStoreContainer.buildings AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Buildings", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LevelTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView659()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LevelTypes", @"
    SELECT VALUE -- Constructing LevelTypes
        [PostgresModel.LevelType](T1.LevelType_Oid, T1.LevelType_Name, T1.LevelType_Show, T1.LevelType_Name2, T1.LevelType_Status, T1.LevelType_Parent, T1.LevelType_Id)
    FROM (
        SELECT 
            T.oid AS LevelType_Oid, 
            T.name AS LevelType_Name, 
            T.show AS LevelType_Show, 
            T.name2 AS LevelType_Name2, 
            T.status AS LevelType_Status, 
            T.parent AS LevelType_Parent, 
            T.id AS LevelType_Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.level_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AgeGroupTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView660()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AgeGroupTypes", @"
    SELECT VALUE -- Constructing AgeGroupTypes
        [PostgresModel.AgeGroupType](T1.AgeGroupType_Oid, T1.AgeGroupType_Name, T1.AgeGroupType_Show, T1.AgeGroupType_Name2, T1.AgeGroupType_Status, T1.AgeGroupType_AgeFrom, T1.AgeGroupType_AgeTo, T1.AgeGroupType_AgeFrom2, T1.AgeGroupType_AgeTo2)
    FROM (
        SELECT 
            T.oid AS AgeGroupType_Oid, 
            T.name AS AgeGroupType_Name, 
            T.show AS AgeGroupType_Show, 
            T.name2 AS AgeGroupType_Name2, 
            T.status AS AgeGroupType_Status, 
            T.age_from AS AgeGroupType_AgeFrom, 
            T.age_to AS AgeGroupType_AgeTo, 
            T.age_from2 AS AgeGroupType_AgeFrom2, 
            T.age_to2 AS AgeGroupType_AgeTo2, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.age_group_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SubordinationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView661()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SubordinationTypes", @"
    SELECT VALUE -- Constructing SubordinationTypes
        [PostgresModel.SubordinationType](T1.SubordinationType_Oid, T1.SubordinationType_Name, T1.SubordinationType_Show, T1.SubordinationType_Name2, T1.SubordinationType_Status)
    FROM (
        SELECT 
            T.oid AS SubordinationType_Oid, 
            T.name AS SubordinationType_Name, 
            T.show AS SubordinationType_Show, 
            T.name2 AS SubordinationType_Name2, 
            T.status AS SubordinationType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.subordination_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AgeGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView662()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AgeGroups", @"
    SELECT VALUE -- Constructing AgeGroups
        [PostgresModel.AgeGroup](T1.AgeGroup_Oid, T1.AgeGroup_Otdel, T1.AgeGroup_AgeGroupType, T1.AgeGroup_Townspeople, T1.AgeGroup_CountryPeople)
    FROM (
        SELECT 
            T.oid AS AgeGroup_Oid, 
            T.otdel AS AgeGroup_Otdel, 
            T.age_group_type AS AgeGroup_AgeGroupType, 
            T.townspeople AS AgeGroup_Townspeople, 
            T.country_people AS AgeGroup_CountryPeople, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.age_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfileCares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView663()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfileCares", @"
    SELECT VALUE -- Constructing ProfileCares
        [PostgresModel.ProfileCare](T1.ProfileCare_Oid, T1.ProfileCare_Name, T1.ProfileCare_Show, T1.ProfileCare_Name2, T1.ProfileCare_Status, T1.ProfileCare_ForChild, T1.ProfileCare_FomsCode)
    FROM (
        SELECT 
            T.oid AS ProfileCare_Oid, 
            T.name AS ProfileCare_Name, 
            T.show AS ProfileCare_Show, 
            T.name2 AS ProfileCare_Name2, 
            T.status AS ProfileCare_Status, 
            T.for_child AS ProfileCare_ForChild, 
            T.foms_code AS ProfileCare_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profile_cares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InfrastructureTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView664()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InfrastructureTypes", @"
    SELECT VALUE -- Constructing InfrastructureTypes
        [PostgresModel.InfrastructureType](T1.InfrastructureType_Oid, T1.InfrastructureType_Name, T1.InfrastructureType_Show, T1.InfrastructureType_Name2, T1.InfrastructureType_Status)
    FROM (
        SELECT 
            T.oid AS InfrastructureType_Oid, 
            T.name AS InfrastructureType_Name, 
            T.show AS InfrastructureType_Show, 
            T.name2 AS InfrastructureType_Name2, 
            T.status AS InfrastructureType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infrastructure_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Comforts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView665()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Comforts", @"
    SELECT VALUE -- Constructing Comforts
        [PostgresModel.Comfort](T1.Comfort_Oid, T1.Comfort_Room, T1.Comfort_ComfortType)
    FROM (
        SELECT 
            T.oid AS Comfort_Oid, 
            T.room AS Comfort_Room, 
            T.comfort_type AS Comfort_ComfortType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.comforts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentOpers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView666()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentOpers", @"
    SELECT VALUE -- Constructing EquipmentOpers
        [PostgresModel.EquipmentOper](T1.EquipmentOper_Oid, T1.EquipmentOper_Equipment, T1.EquipmentOper_EquipmentOper1, T1.EquipmentOper_DateOper, T1.EquipmentOper_Cabinet)
    FROM (
        SELECT 
            T.oid AS EquipmentOper_Oid, 
            T.equipment AS EquipmentOper_Equipment, 
            T.equipment_oper AS EquipmentOper_EquipmentOper1, 
            T.date_oper AS EquipmentOper_DateOper, 
            T.cabinet AS EquipmentOper_Cabinet, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_opers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Districtstreets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView667()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Districtstreets", @"
    SELECT VALUE -- Constructing Districtstreets
        [PostgresModel.Districtstreet](T1.Districtstreet_Oid, T1.Districtstreet_District, T1.Districtstreet_Tkladr, T1.Districtstreet_Starthouse, T1.Districtstreet_Endhouse, T1.Districtstreet_Excludehouse, T1.Districtstreet_Includehouse)
    FROM (
        SELECT 
            T.oid AS Districtstreet_Oid, 
            T.district AS Districtstreet_District, 
            T.tkladr AS Districtstreet_Tkladr, 
            T.starthouse AS Districtstreet_Starthouse, 
            T.endhouse AS Districtstreet_Endhouse, 
            T.excludehouse AS Districtstreet_Excludehouse, 
            T.includehouse AS Districtstreet_Includehouse, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.districtstreets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Equipments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView668()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Equipments", "\r\n    SELECT VALUE -- Constructing Equipments\r\n        [PostgresModel.Equipment](" +
                    "T1.Equipment_Oid, T1.Equipment_Otdel, T1.Equipment_EquipmentType, T1.Equipment_E" +
                    "quipmentName, T1.Equipment_Identifier, T1.Equipment_EquipmentModel, T1.Equipment" +
                    "_CompanyMaker, T1.Equipment_SerialNumber, T1.Equipment_DateMaker, T1.Equipment_L" +
                    "ifetime, T1.Equipment_Delivery, T1.Equipment_EquipmentOwnership, T1.Equipment_Co" +
                    "mpanySupplier, T1.Equipment_DatePurchase, T1.Equipment_InventoryNumber, T1.Equip" +
                    "ment_RegistrationMark, T1.Equipment_Dicom)\r\n    FROM (\r\n        SELECT \r\n       " +
                    "     T.oid AS Equipment_Oid, \r\n            T.otdel AS Equipment_Otdel, \r\n       " +
                    "     T.equipment_type AS Equipment_EquipmentType, \r\n            T.equipment_name" +
                    " AS Equipment_EquipmentName, \r\n            T.identifier AS Equipment_Identifier," +
                    " \r\n            T.equipment_model AS Equipment_EquipmentModel, \r\n            T.co" +
                    "mpany_maker AS Equipment_CompanyMaker, \r\n            T.serial_number AS Equipmen" +
                    "t_SerialNumber, \r\n            T.date_maker AS Equipment_DateMaker, \r\n           " +
                    " T.lifetime AS Equipment_Lifetime, \r\n            T.delivery AS Equipment_Deliver" +
                    "y, \r\n            T.equipment_ownership AS Equipment_EquipmentOwnership, \r\n      " +
                    "      T.company_supplier AS Equipment_CompanySupplier, \r\n            T.date_purc" +
                    "hase AS Equipment_DatePurchase, \r\n            T.inventory_number AS Equipment_In" +
                    "ventoryNumber, \r\n            T.registration_mark AS Equipment_RegistrationMark, " +
                    "\r\n            T.dicom AS Equipment_Dicom, \r\n            True AS _from0\r\n        " +
                    "FROM PostgresEntitiesStoreContainer.equipments AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentOperTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView669()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentOperTypes", @"
    SELECT VALUE -- Constructing EquipmentOperTypes
        [PostgresModel.EquipmentOperType](T1.EquipmentOperType_Oid, T1.EquipmentOperType_Name, T1.EquipmentOperType_Show, T1.EquipmentOperType_Name2, T1.EquipmentOperType_Status)
    FROM (
        SELECT 
            T.oid AS EquipmentOperType_Oid, 
            T.name AS EquipmentOperType_Name, 
            T.show AS EquipmentOperType_Show, 
            T.name2 AS EquipmentOperType_Name2, 
            T.status AS EquipmentOperType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_oper_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentPrices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView670()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentPrices", @"
    SELECT VALUE -- Constructing EquipmentPrices
        [PostgresModel.EquipmentPrice](T1.EquipmentPrice_Oid, T1.EquipmentPrice_Equipmen, T1.EquipmentPrice_DateEvaluation, T1.EquipmentPrice_CostDepreciation, T1.EquipmentPrice_CostResidual, T1.EquipmentPrice_CostActual)
    FROM (
        SELECT 
            T.oid AS EquipmentPrice_Oid, 
            T.equipmen AS EquipmentPrice_Equipmen, 
            T.date_evaluation AS EquipmentPrice_DateEvaluation, 
            T.cost_depreciation AS EquipmentPrice_CostDepreciation, 
            T.cost_residual AS EquipmentPrice_CostResidual, 
            T.cost_actual AS EquipmentPrice_CostActual, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_prices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView671()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentTypes", @"
    SELECT VALUE -- Constructing EquipmentTypes
        [PostgresModel.EquipmentType](T1.EquipmentType_Oid, T1.EquipmentType_Name, T1.EquipmentType_Show, T1.EquipmentType_Name2, T1.EquipmentType_Status)
    FROM (
        SELECT 
            T.oid AS EquipmentType_Oid, 
            T.name AS EquipmentType_Name, 
            T.show AS EquipmentType_Show, 
            T.name2 AS EquipmentType_Name2, 
            T.status AS EquipmentType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView672()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentStates", @"
    SELECT VALUE -- Constructing EquipmentStates
        [PostgresModel.EquipmentState](T1.EquipmentState_Oid, T1.EquipmentState_Equipmen, T1.EquipmentState_DateState, T1.EquipmentState_Repair, T1.EquipmentState_WriteOff)
    FROM (
        SELECT 
            T.oid AS EquipmentState_Oid, 
            T.equipmen AS EquipmentState_Equipmen, 
            T.date_state AS EquipmentState_DateState, 
            T.repair AS EquipmentState_Repair, 
            T.write_off AS EquipmentState_WriteOff, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_states AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentOwnerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView673()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentOwnerships", @"
    SELECT VALUE -- Constructing EquipmentOwnerships
        [PostgresModel.EquipmentOwnership](T1.EquipmentOwnership_Oid, T1.EquipmentOwnership_Name, T1.EquipmentOwnership_Show, T1.EquipmentOwnership_Name2, T1.EquipmentOwnership_Status)
    FROM (
        SELECT 
            T.oid AS EquipmentOwnership_Oid, 
            T.name AS EquipmentOwnership_Name, 
            T.show AS EquipmentOwnership_Show, 
            T.name2 AS EquipmentOwnership_Name2, 
            T.status AS EquipmentOwnership_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_ownerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView674()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentModels", @"
    SELECT VALUE -- Constructing EquipmentModels
        [PostgresModel.EquipmentModel](T1.EquipmentModel_Oid, T1.EquipmentModel_Name, T1.EquipmentModel_Show, T1.EquipmentModel_Name2, T1.EquipmentModel_Status)
    FROM (
        SELECT 
            T.oid AS EquipmentModel_Oid, 
            T.name AS EquipmentModel_Name, 
            T.show AS EquipmentModel_Show, 
            T.name2 AS EquipmentModel_Name2, 
            T.status AS EquipmentModel_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_models AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Districts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView675()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Districts", @"
    SELECT VALUE -- Constructing Districts
        [PostgresModel.District](T1.District_Oid, T1.District_DistrictName, T1.District_Helptype, T1.District_Priority, T1.District_Autodistrict, T1.District_Otdel)
    FROM (
        SELECT 
            T.oid AS District_Oid, 
            T.district_name AS District_DistrictName, 
            T.helptype AS District_Helptype, 
            T.priority AS District_Priority, 
            T.autodistrict AS District_Autodistrict, 
            T.otdel AS District_Otdel, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.districts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Functionings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView676()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Functionings", @"
    SELECT VALUE -- Constructing Functionings
        [PostgresModel.Functioning](T1.Functioning_Oid, T1.Functioning_Sanatorium, T1.Functioning_FunctioningName, T1.Functioning_FunctioningDateBegin, T1.Functioning_FunctioningDateEnd)
    FROM (
        SELECT 
            T.oid AS Functioning_Oid, 
            T.sanatorium AS Functioning_Sanatorium, 
            T.functioning_name AS Functioning_FunctioningName, 
            T.functioning_date_begin AS Functioning_FunctioningDateBegin, 
            T.functioning_date_end AS Functioning_FunctioningDateEnd, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.functionings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HealProfileTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView677()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HealProfileTypes", @"
    SELECT VALUE -- Constructing HealProfileTypes
        [PostgresModel.HealProfileType](T1.HealProfileType_Oid, T1.HealProfileType_Name, T1.HealProfileType_Show, T1.HealProfileType_Name2, T1.HealProfileType_Status)
    FROM (
        SELECT 
            T.oid AS HealProfileType_Oid, 
            T.name AS HealProfileType_Name, 
            T.show AS HealProfileType_Show, 
            T.name2 AS HealProfileType_Name2, 
            T.status AS HealProfileType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.heal_profile_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NaturalFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView678()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NaturalFactors", @"
    SELECT VALUE -- Constructing NaturalFactors
        [PostgresModel.NaturalFactor](T1.NaturalFactor_Oid, T1.NaturalFactor_Sanatorium, T1.NaturalFactor_NaturalFactorType, T1.NaturalFactor_NaturalFactorName, T1.NaturalFactor_ObjectName, T1.NaturalFactor_Objects, T1.NaturalFactor_Document, T1.NaturalFactor_DocumentNumber, T1.NaturalFactor_DocumentDateDelivery, T1.NaturalFactor_DocumentDateBegin, T1.NaturalFactor_DocumentDateEnd)
    FROM (
        SELECT 
            T.oid AS NaturalFactor_Oid, 
            T.sanatorium AS NaturalFactor_Sanatorium, 
            T.natural_factor_type AS NaturalFactor_NaturalFactorType, 
            T.natural_factor_name AS NaturalFactor_NaturalFactorName, 
            T.object_name AS NaturalFactor_ObjectName, 
            T.objects AS NaturalFactor_Objects, 
            T.document AS NaturalFactor_Document, 
            T.document_number AS NaturalFactor_DocumentNumber, 
            T.document_date_delivery AS NaturalFactor_DocumentDateDelivery, 
            T.document_date_begin AS NaturalFactor_DocumentDateBegin, 
            T.document_date_end AS NaturalFactor_DocumentDateEnd, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.natural_factors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NaturalFactorTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView679()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NaturalFactorTypes", @"
    SELECT VALUE -- Constructing NaturalFactorTypes
        [PostgresModel.NaturalFactorType](T1.NaturalFactorType_Oid, T1.NaturalFactorType_Name, T1.NaturalFactorType_Show, T1.NaturalFactorType_Name2, T1.NaturalFactorType_Status)
    FROM (
        SELECT 
            T.oid AS NaturalFactorType_Oid, 
            T.name AS NaturalFactorType_Name, 
            T.show AS NaturalFactorType_Show, 
            T.name2 AS NaturalFactorType_Name2, 
            T.status AS NaturalFactorType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.natural_factor_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sanatoriums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView680()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sanatoriums", "\r\n    SELECT VALUE -- Constructing Sanatoriums\r\n        [PostgresModel.Sanatorium" +
                    "](T1.Sanatorium_Oid, T1.Sanatorium_Otdel, T1.Sanatorium_Resort, T1.Sanatorium_Re" +
                    "sortStatus, T1.Sanatorium_ResortDocument, T1.Sanatorium_ResortNumber, T1.Sanator" +
                    "ium_ResortDate, T1.Sanatorium_Mountain, T1.Sanatorium_MountainDocument, T1.Sanat" +
                    "orium_MountainNumber, T1.Sanatorium_MountainDate, T1.Sanatorium_ResortType, T1.S" +
                    "anatorium_ResortTypeOid, T1.Sanatorium_ResortTypeDocument, T1.Sanatorium_ResortT" +
                    "ypeNumber, T1.Sanatorium_ResortTypeDate)\r\n    FROM (\r\n        SELECT \r\n         " +
                    "   T.oid AS Sanatorium_Oid, \r\n            T.otdel AS Sanatorium_Otdel, \r\n       " +
                    "     T.resort AS Sanatorium_Resort, \r\n            T.resort_status AS Sanatorium_" +
                    "ResortStatus, \r\n            T.resort_document AS Sanatorium_ResortDocument, \r\n  " +
                    "          T.resort_number AS Sanatorium_ResortNumber, \r\n            T.resort_dat" +
                    "e AS Sanatorium_ResortDate, \r\n            T.mountain AS Sanatorium_Mountain, \r\n " +
                    "           T.mountain_document AS Sanatorium_MountainDocument, \r\n            T.m" +
                    "ountain_number AS Sanatorium_MountainNumber, \r\n            T.mountain_date AS Sa" +
                    "natorium_MountainDate, \r\n            T.resort_type AS Sanatorium_ResortType, \r\n " +
                    "           T.resort_type_oid AS Sanatorium_ResortTypeOid, \r\n            T.resort" +
                    "_type_document AS Sanatorium_ResortTypeDocument, \r\n            T.resort_type_num" +
                    "ber AS Sanatorium_ResortTypeNumber, \r\n            T.resort_type_date AS Sanatori" +
                    "um_ResortTypeDate, \r\n            True AS _from0\r\n        FROM PostgresEntitiesSt" +
                    "oreContainer.sanatoriums AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Arrivals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView681()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Arrivals", @"
    SELECT VALUE -- Constructing Arrivals
        [PostgresModel.Arrival](T1.Arrival_Oid, T1.Arrival_Sanatorium, T1.Arrival_ArrivalsDate, T1.Arrival_Peoples, T1.Arrival_Days)
    FROM (
        SELECT 
            T.oid AS Arrival_Oid, 
            T.sanatorium AS Arrival_Sanatorium, 
            T.arrivals_date AS Arrival_ArrivalsDate, 
            T.peoples AS Arrival_Peoples, 
            T.days AS Arrival_Days, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.arrivals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView682()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mkb10s", @"
    SELECT VALUE -- Constructing Mkb10s
        [PostgresModel.Mkb10](T1.Mkb10_Oid, T1.Mkb10_Name, T1.Mkb10_Code, T1.Mkb10_Parent, T1.Mkb10_Importcode)
    FROM (
        SELECT 
            T.oid AS Mkb10_Oid, 
            T.name AS Mkb10_Name, 
            T.code AS Mkb10_Code, 
            T.parent AS Mkb10_Parent, 
            T.importcode AS Mkb10_Importcode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mkb_10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Specializations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView683()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Specializations", @"
    SELECT VALUE -- Constructing Specializations
        [PostgresModel.Specialization](T1.Specialization_Oid, T1.Specialization_Sanatorium, T1.Specialization_Mkb10, T1.Specialization_HealProfile, T1.Specialization_LicenseNumber, T1.Specialization_DepartmentCare)
    FROM (
        SELECT 
            T.oid AS Specialization_Oid, 
            T.sanatorium AS Specialization_Sanatorium, 
            T.mkb10 AS Specialization_Mkb10, 
            T.heal_profile AS Specialization_HealProfile, 
            T.license_number AS Specialization_LicenseNumber, 
            T.department_care AS Specialization_DepartmentCare, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.specializations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentDeliveries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView684()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentDeliveries", @"
    SELECT VALUE -- Constructing EquipmentDeliveries
        [PostgresModel.EquipmentDelivery](T1.EquipmentDelivery_Oid, T1.EquipmentDelivery_Name, T1.EquipmentDelivery_Show, T1.EquipmentDelivery_Name2, T1.EquipmentDelivery_Status)
    FROM (
        SELECT 
            T.oid AS EquipmentDelivery_Oid, 
            T.name AS EquipmentDelivery_Name, 
            T.show AS EquipmentDelivery_Show, 
            T.name2 AS EquipmentDelivery_Name2, 
            T.status AS EquipmentDelivery_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_deliveries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ArealKladrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView685()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ArealKladrs", @"
    SELECT VALUE -- Constructing ArealKladrs
        [PostgresModel.ArealKladr](T1.ArealKladr_Inrange, T1.ArealKladr_Outrange, T1.ArealKladr_Inrooms, T1.ArealKladr_KladrOid, T1.ArealKladr_Oid, T1.ArealKladr_ArealOid)
    FROM (
        SELECT 
            T.inrange AS ArealKladr_Inrange, 
            T.outrange AS ArealKladr_Outrange, 
            T.inrooms AS ArealKladr_Inrooms, 
            T.kladr_oid AS ArealKladr_KladrOid, 
            T.oid AS ArealKladr_Oid, 
            T.areal_oid AS ArealKladr_ArealOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areal_kladrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ArealPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView686()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ArealPeople", @"
    SELECT VALUE -- Constructing ArealPeople
        [PostgresModel.ArealPerson](T1.ArealPerson_InDt, T1.ArealPerson_EmpId, T1.ArealPerson_CheckDt, T1.ArealPerson_EmpIdCheck, T1.ArealPerson_Icd10Id, T1.ArealPerson_PeopleOid, T1.ArealPerson_Oid, T1.ArealPerson_ArealOid)
    FROM (
        SELECT 
            T.in_dt AS ArealPerson_InDt, 
            T.emp_id AS ArealPerson_EmpId, 
            T.check_dt AS ArealPerson_CheckDt, 
            T.emp_id_check AS ArealPerson_EmpIdCheck, 
            T.icd10_id AS ArealPerson_Icd10Id, 
            T.people_oid AS ArealPerson_PeopleOid, 
            T.oid AS ArealPerson_Oid, 
            T.areal_oid AS ArealPerson_ArealOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areal_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ArealTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView687()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ArealTypes", @"
    SELECT VALUE -- Constructing ArealTypes
        [PostgresModel.ArealType](T1.ArealType_Name, T1.ArealType_Oid, T1.ArealType_Alias)
    FROM (
        SELECT 
            T.name AS ArealType_Name, 
            T.oid AS ArealType_Oid, 
            T.alias AS ArealType_Alias, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areal_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Areals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView688()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Areals", @"
    SELECT VALUE -- Constructing Areals
        [PostgresModel.Areal](T1.Areal_Name, T1.Areal_Description, T1.Areal_CompanyId, T1.Areal_Car, T1.Areal_Ware, T1.Areal_WorkspaceGp, T1.Areal_WorkspaceAny, T1.Areal_OtdelId, T1.Areal_Oid, T1.Areal_ArealtypeOid, T1.Areal_Distanceareal, T1.Areal_QuantityNorm)
    FROM (
        SELECT 
            T.name AS Areal_Name, 
            T.description AS Areal_Description, 
            T.company_id AS Areal_CompanyId, 
            T.car AS Areal_Car, 
            T.ware AS Areal_Ware, 
            T.workspace_gp AS Areal_WorkspaceGp, 
            T.workspace_any AS Areal_WorkspaceAny, 
            T.otdel_id AS Areal_OtdelId, 
            T.oid AS Areal_Oid, 
            T.arealtype_oid AS Areal_ArealtypeOid, 
            T.distanceareal AS Areal_Distanceareal, 
            T.quantity_norm AS Areal_QuantityNorm, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ResponsePeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView689()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ResponsePeople", @"
    SELECT VALUE -- Constructing ResponsePeople
        [PostgresModel.ResponsePerson](T1.ResponsePerson_Oid, T1.ResponsePerson_Lastname, T1.ResponsePerson_Firstname, T1.ResponsePerson_Middlename, T1.ResponsePerson_Telephone, T1.ResponsePerson_Fax, T1.ResponsePerson_Email, T1.ResponsePerson_Datepostbegin, T1.ResponsePerson_Datepostend, T1.ResponsePerson_Lpu, T1.ResponsePerson_Post)
    FROM (
        SELECT 
            T.oid AS ResponsePerson_Oid, 
            T.lastname AS ResponsePerson_Lastname, 
            T.firstname AS ResponsePerson_Firstname, 
            T.middlename AS ResponsePerson_Middlename, 
            T.telephone AS ResponsePerson_Telephone, 
            T.fax AS ResponsePerson_Fax, 
            T.email AS ResponsePerson_Email, 
            T.datepostbegin AS ResponsePerson_Datepostbegin, 
            T.datepostend AS ResponsePerson_Datepostend, 
            T.lpu AS ResponsePerson_Lpu, 
            T.post AS ResponsePerson_Post, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.response_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuInformationSystems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView690()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuInformationSystems", @"
    SELECT VALUE -- Constructing LpuInformationSystems
        [PostgresModel.LpuInformationSystem](T1.LpuInformationSystem_Lpu, T1.LpuInformationSystem_InformationSystem, T1.LpuInformationSystem_DateInstallation, T1.LpuInformationSystem_Price, T1.LpuInformationSystem_Support, T1.LpuInformationSystem_SupportPrice, T1.LpuInformationSystem_Oid)
    FROM (
        SELECT 
            T.lpu AS LpuInformationSystem_Lpu, 
            T.information_system AS LpuInformationSystem_InformationSystem, 
            T.date_installation AS LpuInformationSystem_DateInstallation, 
            T.price AS LpuInformationSystem_Price, 
            T.support AS LpuInformationSystem_Support, 
            T.support_price AS LpuInformationSystem_SupportPrice, 
            T.oid AS LpuInformationSystem_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_information_systems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SanatoriumTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView691()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SanatoriumTypes", @"
    SELECT VALUE -- Constructing SanatoriumTypes
        [PostgresModel.SanatoriumType](T1.SanatoriumType_Oid, T1.SanatoriumType_Name, T1.SanatoriumType_Name2, T1.SanatoriumType_Show, T1.SanatoriumType_Status)
    FROM (
        SELECT 
            T.oid AS SanatoriumType_Oid, 
            T.name AS SanatoriumType_Name, 
            T.name2 AS SanatoriumType_Name2, 
            T.show AS SanatoriumType_Show, 
            T.status AS SanatoriumType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sanatorium_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuProfiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView692()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuProfiles", @"
    SELECT VALUE -- Constructing LpuProfiles
        [PostgresModel.LpuProfile](T1.LpuProfile_Oid, T1.LpuProfile_Name, T1.LpuProfile_Show, T1.LpuProfile_Name2, T1.LpuProfile_Status)
    FROM (
        SELECT 
            T.oid AS LpuProfile_Oid, 
            T.name AS LpuProfile_Name, 
            T.show AS LpuProfile_Show, 
            T.name2 AS LpuProfile_Name2, 
            T.status AS LpuProfile_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SupremeDepartments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView693()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SupremeDepartments", @"
    SELECT VALUE -- Constructing SupremeDepartments
        [PostgresModel.SupremeDepartment](T1.SupremeDepartment_Oid, T1.SupremeDepartment_Name, T1.SupremeDepartment_Show, T1.SupremeDepartment_Name2, T1.SupremeDepartment_Status)
    FROM (
        SELECT 
            T.oid AS SupremeDepartment_Oid, 
            T.name AS SupremeDepartment_Name, 
            T.show AS SupremeDepartment_Show, 
            T.name2 AS SupremeDepartment_Name2, 
            T.status AS SupremeDepartment_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.supreme_departments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AddressTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView694()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AddressTypes", @"
    SELECT VALUE -- Constructing AddressTypes
        [PostgresModel.AddressType](T1.AddressType_Oid, T1.AddressType_AddressTypeName, T1.AddressType_Show, T1.AddressType_Name2, T1.AddressType_Status, T1.AddressType_GasurfId)
    FROM (
        SELECT 
            T.oid AS AddressType_Oid, 
            T.address_type_name AS AddressType_AddressTypeName, 
            T.show AS AddressType_Show, 
            T.name2 AS AddressType_Name2, 
            T.status AS AddressType_Status, 
            T.gasurf_id AS AddressType_GasurfId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.address_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BedOperTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView695()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BedOperTypes", @"
    SELECT VALUE -- Constructing BedOperTypes
        [PostgresModel.BedOperType](T1.BedOperType_Oid, T1.BedOperType_Name, T1.BedOperType_Show, T1.BedOperType_Name2, T1.BedOperType_Status, T1.BedOperType_IsActive)
    FROM (
        SELECT 
            T.oid AS BedOperType_Oid, 
            T.name AS BedOperType_Name, 
            T.show AS BedOperType_Show, 
            T.name2 AS BedOperType_Name2, 
            T.status AS BedOperType_Status, 
            T.is_active AS BedOperType_IsActive, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bed_oper_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Rights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView696()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Rights", @"
    SELECT VALUE -- Constructing Rights
        [PostgresModel.Right](T1.Right_Oid, T1.Right_Name, T1.Right_Rem)
    FROM (
        SELECT 
            T.oid AS Right_Oid, 
            T.name AS Right_Name, 
            T.rem AS Right_Rem, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.rights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView697()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Roles", @"
    SELECT VALUE -- Constructing Roles
        [PostgresModel.Role](T1.Role_Oid, T1.Role_Name, T1.Role_Rem, T1.Role_CreateSotr)
    FROM (
        SELECT 
            T.oid AS Role_Oid, 
            T.name AS Role_Name, 
            T.rem AS Role_Rem, 
            T.create_sotr AS Role_CreateSotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BuildingHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView698()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(6071);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BuildingHistories\r\n        [PostgresModel.Bui");
            viewString.Append("ldingHistory](T1.BuildingHistory_Hid, T1.BuildingHistory_HDate, T1.BuildingHisto");
            viewString.Append("ry_HDateEnd, T1.BuildingHistory_Plot, T1.BuildingHistory_BuildingName, T1.Buildi");
            viewString.Append("ngHistory_Identifier, T1.BuildingHistory_BuildingType, T1.BuildingHistory_Addres");
            viewString.Append("s, T1.BuildingHistory_BuildingPurpose, T1.BuildingHistory_EquipmentOwnership, T1");
            viewString.Append(".BuildingHistory_Balance, T1.BuildingHistory_CostPrimary, T1.BuildingHistory_Bed");
            viewString.Append("s, T1.BuildingHistory_Visits, T1.BuildingHistory_BedsActual, T1.BuildingHistory_");
            viewString.Append("StationarySeats, T1.BuildingHistory_OutpatientSeats, T1.BuildingHistory_Volume, ");
            viewString.Append("T1.BuildingHistory_AreaTotal, T1.BuildingHistory_AreaUseful, T1.BuildingHistory_");
            viewString.Append("AreaRoom, T1.BuildingHistory_AreaOffices, T1.BuildingHistory_FireAlarms, T1.Buil");
            viewString.Append("dingHistory_BurglarAlarms, T1.BuildingHistory_ButtonPolice, T1.BuildingHistory_F");
            viewString.Append("ireWarning, T1.BuildingHistory_FireWater, T1.BuildingHistory_FireDepartmentAlarm");
            viewString.Append(", T1.BuildingHistory_FireDepartmentConnection, T1.BuildingHistory_FireViolations");
            viewString.Append(", T1.BuildingHistory_EmergencyExits, T1.BuildingHistory_PersonalProtection, T1.B");
            viewString.Append("uildingHistory_Litter, T1.BuildingHistory_FireDepartmentDistance, T1.BuildingHis");
            viewString.Append("tory_Security, T1.BuildingHistory_MetalDoors, T1.BuildingHistory_VideoMonitoring");
            viewString.Append(", T1.BuildingHistory_RoomAttendants, T1.BuildingHistory_FencingArea, T1.Building");
            viewString.Append("History_SuitabilityDisabilities, T1.BuildingHistory_ProjectType, T1.BuildingHist");
            viewString.Append("ory_ProjectNumber, T1.BuildingHistory_ProjectDate, T1.BuildingHistory_Constructi");
            viewString.Append("onDate, T1.BuildingHistory_RepairDate, T1.BuildingHistory_SupportingStructure, T");
            viewString.Append("1.BuildingHistory_FloorType, T1.BuildingHistory_FloorCount, T1.BuildingHistory_A");
            viewString.Append("iring, T1.BuildingHistory_Conditioning, T1.BuildingHistory_PowerSupply, T1.Build");
            viewString.Append("ingHistory_WaterSupply, T1.BuildingHistory_HotWaterType, T1.BuildingHistory_Heat");
            viewString.Append("ingType, T1.BuildingHistory_SewerageType, T1.BuildingHistory_MedicalGasSupply, T");
            viewString.Append("1.BuildingHistory_GasSupply, T1.BuildingHistory_CommunicationType, T1.BuildingHi");
            viewString.Append("story_PassengerLift, T1.BuildingHistory_MedicalLift, T1.BuildingHistory_Sysdate,");
            viewString.Append(" T1.BuildingHistory_Oid)\r\n    FROM (\r\n        SELECT \r\n            T.hid AS Buil");
            viewString.Append("dingHistory_Hid, \r\n            T.h_date AS BuildingHistory_HDate, \r\n            ");
            viewString.Append("T.h_date_end AS BuildingHistory_HDateEnd, \r\n            T.plot AS BuildingHistor");
            viewString.Append("y_Plot, \r\n            T.building_name AS BuildingHistory_BuildingName, \r\n       ");
            viewString.Append("     T.identifier AS BuildingHistory_Identifier, \r\n            T.building_type A");
            viewString.Append("S BuildingHistory_BuildingType, \r\n            T.address AS BuildingHistory_Addre");
            viewString.Append("ss, \r\n            T.building_purpose AS BuildingHistory_BuildingPurpose, \r\n     ");
            viewString.Append("       T.equipment_ownership AS BuildingHistory_EquipmentOwnership, \r\n          ");
            viewString.Append("  T.balance AS BuildingHistory_Balance, \r\n            T.cost_primary AS Building");
            viewString.Append("History_CostPrimary, \r\n            T.beds AS BuildingHistory_Beds, \r\n           ");
            viewString.Append(" T.visits AS BuildingHistory_Visits, \r\n            T.beds_actual AS BuildingHist");
            viewString.Append("ory_BedsActual, \r\n            T.stationary_seats AS BuildingHistory_StationarySe");
            viewString.Append("ats, \r\n            T.outpatient_seats AS BuildingHistory_OutpatientSeats, \r\n    ");
            viewString.Append("        T.volume AS BuildingHistory_Volume, \r\n            T.area_total AS Buildi");
            viewString.Append("ngHistory_AreaTotal, \r\n            T.area_useful AS BuildingHistory_AreaUseful, ");
            viewString.Append("\r\n            T.area_room AS BuildingHistory_AreaRoom, \r\n            T.area_offi");
            viewString.Append("ces AS BuildingHistory_AreaOffices, \r\n            T.fire_alarms AS BuildingHisto");
            viewString.Append("ry_FireAlarms, \r\n            T.burglar_alarms AS BuildingHistory_BurglarAlarms, ");
            viewString.Append("\r\n            T.button_police AS BuildingHistory_ButtonPolice, \r\n            T.f");
            viewString.Append("ire_warning AS BuildingHistory_FireWarning, \r\n            T.fire_water AS Buildi");
            viewString.Append("ngHistory_FireWater, \r\n            T.fire_department_alarm AS BuildingHistory_Fi");
            viewString.Append("reDepartmentAlarm, \r\n            T.fire_department_connection AS BuildingHistory");
            viewString.Append("_FireDepartmentConnection, \r\n            T.fire_violations AS BuildingHistory_Fi");
            viewString.Append("reViolations, \r\n            T.emergency_exits AS BuildingHistory_EmergencyExits,");
            viewString.Append(" \r\n            T.personal_protection AS BuildingHistory_PersonalProtection, \r\n  ");
            viewString.Append("          T.litter AS BuildingHistory_Litter, \r\n            T.fire_department_di");
            viewString.Append("stance AS BuildingHistory_FireDepartmentDistance, \r\n            T.security AS Bu");
            viewString.Append("ildingHistory_Security, \r\n            T.metal_doors AS BuildingHistory_MetalDoor");
            viewString.Append("s, \r\n            T.video_monitoring AS BuildingHistory_VideoMonitoring, \r\n      ");
            viewString.Append("      T.room_attendants AS BuildingHistory_RoomAttendants, \r\n            T.fenci");
            viewString.Append("ng_area AS BuildingHistory_FencingArea, \r\n            T.suitability_disabilities");
            viewString.Append(" AS BuildingHistory_SuitabilityDisabilities, \r\n            T.project_type AS Bui");
            viewString.Append("ldingHistory_ProjectType, \r\n            T.project_number AS BuildingHistory_Proj");
            viewString.Append("ectNumber, \r\n            T.project_date AS BuildingHistory_ProjectDate, \r\n      ");
            viewString.Append("      T.construction_date AS BuildingHistory_ConstructionDate, \r\n            T.r");
            viewString.Append("epair_date AS BuildingHistory_RepairDate, \r\n            T.supporting_structure A");
            viewString.Append("S BuildingHistory_SupportingStructure, \r\n            T.floor_type AS BuildingHis");
            viewString.Append("tory_FloorType, \r\n            T.floor_count AS BuildingHistory_FloorCount, \r\n   ");
            viewString.Append("         T.airing AS BuildingHistory_Airing, \r\n            T.conditioning AS Bui");
            viewString.Append("ldingHistory_Conditioning, \r\n            T.power_supply AS BuildingHistory_Power");
            viewString.Append("Supply, \r\n            T.water_supply AS BuildingHistory_WaterSupply, \r\n         ");
            viewString.Append("   T.hot_water_type AS BuildingHistory_HotWaterType, \r\n            T.heating_typ");
            viewString.Append("e AS BuildingHistory_HeatingType, \r\n            T.sewerage_type AS BuildingHisto");
            viewString.Append("ry_SewerageType, \r\n            T.medical_gas_supply AS BuildingHistory_MedicalGa");
            viewString.Append("sSupply, \r\n            T.gas_supply AS BuildingHistory_GasSupply, \r\n            ");
            viewString.Append("T.communication_type AS BuildingHistory_CommunicationType, \r\n            T.passe");
            viewString.Append("nger_lift AS BuildingHistory_PassengerLift, \r\n            T.medical_lift AS Buil");
            viewString.Append("dingHistory_MedicalLift, \r\n            T.sysdate AS BuildingHistory_Sysdate, \r\n ");
            viewString.Append("           T.oid AS BuildingHistory_Oid, \r\n            True AS _from0\r\n        F");
            viewString.Append("ROM PostgresEntitiesStoreContainer.building_histories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BuildingHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CompanyHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView699()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2260);
            viewString.Append("\r\n    SELECT VALUE -- Constructing CompanyHistories\r\n        [PostgresModel.Comp");
            viewString.Append("anyHistory](T1.CompanyHistory_Hid, T1.CompanyHistory_HDate, T1.CompanyHistory_HD");
            viewString.Append("ateEnd, T1.CompanyHistory_Fullname, T1.CompanyHistory_Shortname, T1.CompanyHisto");
            viewString.Append("ry_Phone, T1.CompanyHistory_Fax, T1.CompanyHistory_Okonh, T1.CompanyHistory_Okpo");
            viewString.Append(", T1.CompanyHistory_Inn, T1.CompanyHistory_Ogrn, T1.CompanyHistory_Kpf, T1.Compa");
            viewString.Append("nyHistory_Address, T1.CompanyHistory_Home, T1.CompanyHistory_Optimisticlockfield");
            viewString.Append(", T1.CompanyHistory_Gcrecord, T1.CompanyHistory_Addressfact, T1.CompanyHistory_R");
            viewString.Append("aschschet, T1.CompanyHistory_Bank, T1.CompanyHistory_Kpp, T1.CompanyHistory_Bik,");
            viewString.Append(" T1.CompanyHistory_Korschet, T1.CompanyHistory_Region, T1.CompanyHistory_Okato, ");
            viewString.Append("T1.CompanyHistory_Okved, T1.CompanyHistory_Sysdate, T1.CompanyHistory_Oid)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.hid AS CompanyHistory_Hid, \r\n            ");
            viewString.Append("T.h_date AS CompanyHistory_HDate, \r\n            T.h_date_end AS CompanyHistory_H");
            viewString.Append("DateEnd, \r\n            T.fullname AS CompanyHistory_Fullname, \r\n            T.sh");
            viewString.Append("ortname AS CompanyHistory_Shortname, \r\n            T.phone AS CompanyHistory_Pho");
            viewString.Append("ne, \r\n            T.fax AS CompanyHistory_Fax, \r\n            T.okonh AS CompanyH");
            viewString.Append("istory_Okonh, \r\n            T.okpo AS CompanyHistory_Okpo, \r\n            T.inn A");
            viewString.Append("S CompanyHistory_Inn, \r\n            T.ogrn AS CompanyHistory_Ogrn, \r\n           ");
            viewString.Append(" T.kpf AS CompanyHistory_Kpf, \r\n            T.address AS CompanyHistory_Address,");
            viewString.Append(" \r\n            T.home AS CompanyHistory_Home, \r\n            T.optimisticlockfiel");
            viewString.Append("d AS CompanyHistory_Optimisticlockfield, \r\n            T.gcrecord AS CompanyHist");
            viewString.Append("ory_Gcrecord, \r\n            T.addressfact AS CompanyHistory_Addressfact, \r\n     ");
            viewString.Append("       T.raschschet AS CompanyHistory_Raschschet, \r\n            T.bank AS Compan");
            viewString.Append("yHistory_Bank, \r\n            T.kpp AS CompanyHistory_Kpp, \r\n            T.bik AS");
            viewString.Append(" CompanyHistory_Bik, \r\n            T.korschet AS CompanyHistory_Korschet, \r\n    ");
            viewString.Append("        T.region AS CompanyHistory_Region, \r\n            T.okato AS CompanyHisto");
            viewString.Append("ry_Okato, \r\n            T.okved AS CompanyHistory_Okved, \r\n            T.sysdate");
            viewString.Append(" AS CompanyHistory_Sysdate, \r\n            T.oid AS CompanyHistory_Oid, \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.company_histori");
            viewString.Append("es AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CompanyHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView700()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2924);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LpuHistories\r\n        [PostgresModel.LpuHisto");
            viewString.Append("ry](T1.LpuHistory_Hid, T1.LpuHistory_HDate, T1.LpuHistory_HDateEnd, T1.LpuHistor");
            viewString.Append("y_Oid, T1.LpuHistory_Identifier, T1.LpuHistory_LpuCode, T1.LpuHistory_LpuCodeVal");
            viewString.Append("ue, T1.LpuHistory_LpuType, T1.LpuHistory_Ownership, T1.LpuHistory_Organizational");
            viewString.Append("Form, T1.LpuHistory_Oms, T1.LpuHistory_Dlo, T1.LpuHistory_LpuInTown, T1.LpuHisto");
            viewString.Append("ry_RegistratorName, T1.LpuHistory_RegistrationDocument, T1.LpuHistory_Registrati");
            viewString.Append("onDate, T1.LpuHistory_SubordinationType, T1.LpuHistory_LevelType, T1.LpuHistory_");
            viewString.Append("RegistrationNumber, T1.LpuHistory_Transport, T1.LpuHistory_Telreg, T1.LpuHistory");
            viewString.Append("_Telspr, T1.LpuHistory_City, T1.LpuHistory_CityKladroid, T1.LpuHistory_IsKvota, ");
            viewString.Append("T1.LpuHistory_ShowInSite, T1.LpuHistory_IsPrivate, T1.LpuHistory_Territoryaffila");
            viewString.Append("tion, T1.LpuHistory_Site, T1.LpuHistory_IsAllowZapis, T1.LpuHistory_LpuWorkDogov");
            viewString.Append("or, T1.LpuHistory_SupremeDepartment, T1.LpuHistory_LpuProfile, T1.LpuHistory_Sys");
            viewString.Append("date)\r\n    FROM (\r\n        SELECT \r\n            T.hid AS LpuHistory_Hid, \r\n     ");
            viewString.Append("       T.h_date AS LpuHistory_HDate, \r\n            T.h_date_end AS LpuHistory_HD");
            viewString.Append("ateEnd, \r\n            T.oid AS LpuHistory_Oid, \r\n            T.identifier AS Lpu");
            viewString.Append("History_Identifier, \r\n            T.lpu_code AS LpuHistory_LpuCode, \r\n          ");
            viewString.Append("  T.lpu_code_value AS LpuHistory_LpuCodeValue, \r\n            T.lpu_type AS LpuHi");
            viewString.Append("story_LpuType, \r\n            T.ownership AS LpuHistory_Ownership, \r\n            ");
            viewString.Append("T.organizational_form AS LpuHistory_OrganizationalForm, \r\n            T.oms AS L");
            viewString.Append("puHistory_Oms, \r\n            T.dlo AS LpuHistory_Dlo, \r\n            T.lpu_in_tow");
            viewString.Append("n AS LpuHistory_LpuInTown, \r\n            T.registrator_name AS LpuHistory_Regist");
            viewString.Append("ratorName, \r\n            T.registration_document AS LpuHistory_RegistrationDocum");
            viewString.Append("ent, \r\n            T.registration_date AS LpuHistory_RegistrationDate, \r\n       ");
            viewString.Append("     T.subordination_type AS LpuHistory_SubordinationType, \r\n            T.level");
            viewString.Append("_type AS LpuHistory_LevelType, \r\n            T.registration_number AS LpuHistory");
            viewString.Append("_RegistrationNumber, \r\n            T.transport AS LpuHistory_Transport, \r\n      ");
            viewString.Append("      T.telreg AS LpuHistory_Telreg, \r\n            T.telspr AS LpuHistory_Telspr");
            viewString.Append(", \r\n            T.city AS LpuHistory_City, \r\n            T.city_kladroid AS LpuH");
            viewString.Append("istory_CityKladroid, \r\n            T.is_kvota AS LpuHistory_IsKvota, \r\n         ");
            viewString.Append("   T.show_in_site AS LpuHistory_ShowInSite, \r\n            T.is_private AS LpuHis");
            viewString.Append("tory_IsPrivate, \r\n            T.territoryaffilation AS LpuHistory_Territoryaffil");
            viewString.Append("ation, \r\n            T.site AS LpuHistory_Site, \r\n            T.is_allow_zapis A");
            viewString.Append("S LpuHistory_IsAllowZapis, \r\n            T.lpu_work_dogovor AS LpuHistory_LpuWor");
            viewString.Append("kDogovor, \r\n            T.supreme_department AS LpuHistory_SupremeDepartment, \r\n");
            viewString.Append("            T.lpu_profile AS LpuHistory_LpuProfile, \r\n            T.sysdate AS L");
            viewString.Append("puHistory_Sysdate, \r\n            True AS _from0\r\n        FROM PostgresEntitiesSt");
            viewString.Append("oreContainer.lpu_histories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PlotHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView701()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PlotHistories", "\r\n    SELECT VALUE -- Constructing PlotHistories\r\n        [PostgresModel.PlotHist" +
                    "ory](T1.PlotHistory_Hid, T1.PlotHistory_HDate, T1.PlotHistory_HDateEnd, T1.PlotH" +
                    "istory_Addressex, T1.PlotHistory_Lpu, T1.PlotHistory_Identifier, T1.PlotHistory_" +
                    "Right, T1.PlotHistory_Area, T1.PlotHistory_Railway, T1.PlotHistory_RailwayDistan" +
                    "ce, T1.PlotHistory_Airport, T1.PlotHistory_AirportDistance, T1.PlotHistory_Bus, " +
                    "T1.PlotHistory_BusDistance, T1.PlotHistory_Helicopter, T1.PlotHistory_Helicopter" +
                    "Distance, T1.PlotHistory_MainRoad, T1.PlotHistory_Sysdate, T1.PlotHistory_Oid)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.hid AS PlotHistory_Hid, \r\n           " +
                    " T.h_date AS PlotHistory_HDate, \r\n            T.h_date_end AS PlotHistory_HDateE" +
                    "nd, \r\n            T.addressex AS PlotHistory_Addressex, \r\n            T.lpu AS P" +
                    "lotHistory_Lpu, \r\n            T.identifier AS PlotHistory_Identifier, \r\n        " +
                    "    T.[right] AS PlotHistory_Right, \r\n            T.area AS PlotHistory_Area, \r\n" +
                    "            T.railway AS PlotHistory_Railway, \r\n            T.railway_distance A" +
                    "S PlotHistory_RailwayDistance, \r\n            T.airport AS PlotHistory_Airport, \r" +
                    "\n            T.airport_distance AS PlotHistory_AirportDistance, \r\n            T." +
                    "bus AS PlotHistory_Bus, \r\n            T.bus_distance AS PlotHistory_BusDistance," +
                    " \r\n            T.helicopter AS PlotHistory_Helicopter, \r\n            T.helicopte" +
                    "r_distance AS PlotHistory_HelicopterDistance, \r\n            T.main_road AS PlotH" +
                    "istory_MainRoad, \r\n            T.sysdate AS PlotHistory_Sysdate, \r\n            T" +
                    ".oid AS PlotHistory_Oid, \r\n            True AS _from0\r\n        FROM PostgresEnti" +
                    "tiesStoreContainer.plot_histories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RoomHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView702()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RoomHistories", @"
    SELECT VALUE -- Constructing RoomHistories
        [PostgresModel.RoomHistory](T1.RoomHistory_Hid, T1.RoomHistory_HDate, T1.RoomHistory_HDateEnd, T1.RoomHistory_Otdel, T1.RoomHistory_Building, T1.RoomHistory_RoomName, T1.RoomHistory_Identifier, T1.RoomHistory_RoomType, T1.RoomHistory_Rooms, T1.RoomHistory_PrimarySeats, T1.RoomHistory_AdditionalSeats, T1.RoomHistory_Area, T1.RoomHistory_WindowView, T1.RoomHistory_Sysdate, T1.RoomHistory_Oid)
    FROM (
        SELECT 
            T.hid AS RoomHistory_Hid, 
            T.h_date AS RoomHistory_HDate, 
            T.h_date_end AS RoomHistory_HDateEnd, 
            T.otdel AS RoomHistory_Otdel, 
            T.building AS RoomHistory_Building, 
            T.room_name AS RoomHistory_RoomName, 
            T.identifier AS RoomHistory_Identifier, 
            T.room_type AS RoomHistory_RoomType, 
            T.rooms AS RoomHistory_Rooms, 
            T.primary_seats AS RoomHistory_PrimarySeats, 
            T.additional_seats AS RoomHistory_AdditionalSeats, 
            T.area AS RoomHistory_Area, 
            T.window_view AS RoomHistory_WindowView, 
            T.sysdate AS RoomHistory_Sysdate, 
            T.oid AS RoomHistory_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.room_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView703()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2087);
            viewString.Append("\r\n    SELECT VALUE -- Constructing EquipmentHistories\r\n        [PostgresModel.Eq");
            viewString.Append("uipmentHistory](T1.EquipmentHistory_Hid, T1.EquipmentHistory_HDate, T1.Equipment");
            viewString.Append("History_HDateEnd, T1.EquipmentHistory_Otdel, T1.EquipmentHistory_EquipmentType, ");
            viewString.Append("T1.EquipmentHistory_EquipmentName, T1.EquipmentHistory_Identifier, T1.EquipmentH");
            viewString.Append("istory_EquipmentModel, T1.EquipmentHistory_CompanyMaker, T1.EquipmentHistory_Ser");
            viewString.Append("ialNumber, T1.EquipmentHistory_DateMaker, T1.EquipmentHistory_Lifetime, T1.Equip");
            viewString.Append("mentHistory_Delivery, T1.EquipmentHistory_EquipmentOwnership, T1.EquipmentHistor");
            viewString.Append("y_CompanySupplier, T1.EquipmentHistory_DatePurchase, T1.EquipmentHistory_Invento");
            viewString.Append("ryNumber, T1.EquipmentHistory_RegistrationMark, T1.EquipmentHistory_Sysdate, T1.");
            viewString.Append("EquipmentHistory_Oid)\r\n    FROM (\r\n        SELECT \r\n            T.hid AS Equipme");
            viewString.Append("ntHistory_Hid, \r\n            T.h_date AS EquipmentHistory_HDate, \r\n            T");
            viewString.Append(".h_date_end AS EquipmentHistory_HDateEnd, \r\n            T.otdel AS EquipmentHist");
            viewString.Append("ory_Otdel, \r\n            T.equipment_type AS EquipmentHistory_EquipmentType, \r\n ");
            viewString.Append("           T.equipment_name AS EquipmentHistory_EquipmentName, \r\n            T.i");
            viewString.Append("dentifier AS EquipmentHistory_Identifier, \r\n            T.equipment_model AS Equ");
            viewString.Append("ipmentHistory_EquipmentModel, \r\n            T.company_maker AS EquipmentHistory_");
            viewString.Append("CompanyMaker, \r\n            T.serial_number AS EquipmentHistory_SerialNumber, \r\n");
            viewString.Append("            T.date_maker AS EquipmentHistory_DateMaker, \r\n            T.lifetime");
            viewString.Append(" AS EquipmentHistory_Lifetime, \r\n            T.delivery AS EquipmentHistory_Deli");
            viewString.Append("very, \r\n            T.equipment_ownership AS EquipmentHistory_EquipmentOwnership");
            viewString.Append(", \r\n            T.company_supplier AS EquipmentHistory_CompanySupplier, \r\n      ");
            viewString.Append("      T.date_purchase AS EquipmentHistory_DatePurchase, \r\n            T.inventor");
            viewString.Append("y_number AS EquipmentHistory_InventoryNumber, \r\n            T.registration_mark ");
            viewString.Append("AS EquipmentHistory_RegistrationMark, \r\n            T.sysdate AS EquipmentHistor");
            viewString.Append("y_Sysdate, \r\n            T.oid AS EquipmentHistory_Oid, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM PostgresEntitiesStoreContainer.equipment_histories AS T\r\n    ");
            viewString.Append(") AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BedOpers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView704()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BedOpers", @"
    SELECT VALUE -- Constructing BedOpers
        [PostgresModel.BedOper](T1.BedOper_Oid, T1.BedOper_Bed, T1.BedOper_BedOperType, T1.BedOper_DateOper, T1.BedOper_BedInfo)
    FROM (
        SELECT 
            T.oid AS BedOper_Oid, 
            T.bed AS BedOper_Bed, 
            T.bed_oper_type AS BedOper_BedOperType, 
            T.date_oper AS BedOper_DateOper, 
            T.bed_info AS BedOper_BedInfo, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bed_opers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Dictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView705()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Dictionaries", @"
    SELECT VALUE -- Constructing Dictionaries
        [PostgresModel.Dictionary](T1.Dictionary_Oid, T1.Dictionary_Name, T1.Dictionary_Synonym, T1.Dictionary_Fomscorrelation, T1.Dictionary_DictionarySchema)
    FROM (
        SELECT 
            T.oid AS Dictionary_Oid, 
            T.name AS Dictionary_Name, 
            T.synonym AS Dictionary_Synonym, 
            T.fomscorrelation AS Dictionary_Fomscorrelation, 
            T.dictionary_schema AS Dictionary_DictionarySchema, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OtdelTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView706()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OtdelTypes", @"
    SELECT VALUE -- Constructing OtdelTypes
        [PostgresModel.OtdelType](T1.OtdelType_Oid, T1.OtdelType_Name, T1.OtdelType_Parent, T1.OtdelType_Id, T1.OtdelType_Name2, T1.OtdelType_Show, T1.OtdelType_Status, T1.OtdelType_Paid, T1.OtdelType_AdditionalType)
    FROM (
        SELECT 
            T.oid AS OtdelType_Oid, 
            T.name AS OtdelType_Name, 
            T.parent AS OtdelType_Parent, 
            T.id AS OtdelType_Id, 
            T.name2 AS OtdelType_Name2, 
            T.show AS OtdelType_Show, 
            T.status AS OtdelType_Status, 
            T.paid AS OtdelType_Paid, 
            T.additional_type AS OtdelType_AdditionalType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdel_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OtdelProfiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView707()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OtdelProfiles", @"
    SELECT VALUE -- Constructing OtdelProfiles
        [PostgresModel.OtdelProfile](T1.OtdelProfile_Oid, T1.OtdelProfile_Name, T1.OtdelProfile_Parent, T1.OtdelProfile_Name2, T1.OtdelProfile_Show, T1.OtdelProfile_Status)
    FROM (
        SELECT 
            T.oid AS OtdelProfile_Oid, 
            T.name AS OtdelProfile_Name, 
            T.parent AS OtdelProfile_Parent, 
            T.name2 AS OtdelProfile_Name2, 
            T.show AS OtdelProfile_Show, 
            T.status AS OtdelProfile_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdel_profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OtdelHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView708()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OtdelHistories", @"
    SELECT VALUE -- Constructing OtdelHistories
        [PostgresModel.OtdelHistory](T1.OtdelHistory_Hid, T1.OtdelHistory_HDate, T1.OtdelHistory_HDateEnd, T1.OtdelHistory_Sysdate, T1.OtdelHistory_Oid, T1.OtdelHistory_Lpu, T1.OtdelHistory_Distance, T1.OtdelHistory_Addressex, T1.OtdelHistory_Parent, T1.OtdelHistory_Name, T1.OtdelHistory_OtdelCode, T1.OtdelHistory_Location, T1.OtdelHistory_OtdelType, T1.OtdelHistory_OtdelProfile)
    FROM (
        SELECT 
            T.hid AS OtdelHistory_Hid, 
            T.h_date AS OtdelHistory_HDate, 
            T.h_date_end AS OtdelHistory_HDateEnd, 
            T.sysdate AS OtdelHistory_Sysdate, 
            T.oid AS OtdelHistory_Oid, 
            T.lpu AS OtdelHistory_Lpu, 
            T.distance AS OtdelHistory_Distance, 
            T.addressex AS OtdelHistory_Addressex, 
            T.parent AS OtdelHistory_Parent, 
            T.name AS OtdelHistory_Name, 
            T.otdel_code AS OtdelHistory_OtdelCode, 
            T.location AS OtdelHistory_Location, 
            T.otdel_type AS OtdelHistory_OtdelType, 
            T.otdel_profile AS OtdelHistory_OtdelProfile, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdel_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Stafflists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView709()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Stafflists", @"
    SELECT VALUE -- Constructing Stafflists
        [PostgresModel.Stafflist](T1.Stafflist_Oid, T1.Stafflist_Post, T1.Stafflist_Otdel, T1.Stafflist_StafflistHeader, T1.Stafflist_StaffNumber, T1.Stafflist_Wages, T1.Stafflist_Premium, T1.Stafflist_Description)
    FROM (
        SELECT 
            T.oid AS Stafflist_Oid, 
            T.post AS Stafflist_Post, 
            T.otdel AS Stafflist_Otdel, 
            T.stafflist_header AS Stafflist_StafflistHeader, 
            T.staff_number AS Stafflist_StaffNumber, 
            T.wages AS Stafflist_Wages, 
            T.premium AS Stafflist_Premium, 
            T.description AS Stafflist_Description, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.stafflists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InfectionIcd10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView710()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InfectionIcd10s", @"
    SELECT VALUE -- Constructing InfectionIcd10s
        [PostgresModel.InfectionIcd10](T1.InfectionIcd10_Oid, T1.InfectionIcd10_InfectionId, T1.InfectionIcd10_Icd10Id)
    FROM (
        SELECT 
            T.oid AS InfectionIcd10_Oid, 
            T.infection_id AS InfectionIcd10_InfectionId, 
            T.icd10_id AS InfectionIcd10_Icd10Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infection_icd10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacMaps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView711()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacMaps", @"
    SELECT VALUE -- Constructing VacMaps
        [PostgresModel.VacMap](T1.VacMap_Oid, T1.VacMap_PeopleId, T1.VacMap_CompanyId, T1.VacMap_CompanyDate, T1.VacMap_OwnCompanyId, T1.VacMap_BeginDate, T1.VacMap_EndDate, T1.VacMap_Class, T1.VacMap_ClassLiter, T1.VacMap_FlDel)
    FROM (
        SELECT 
            T.oid AS VacMap_Oid, 
            T.people_id AS VacMap_PeopleId, 
            T.company_id AS VacMap_CompanyId, 
            T.company_date AS VacMap_CompanyDate, 
            T.own_company_id AS VacMap_OwnCompanyId, 
            T.begin_date AS VacMap_BeginDate, 
            T.end_date AS VacMap_EndDate, 
            T.class AS VacMap_Class, 
            T.class_liter AS VacMap_ClassLiter, 
            T.fl_del AS VacMap_FlDel, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_maps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacPeopleTests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView712()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacPeopleTests", @"
    SELECT VALUE -- Constructing VacPeopleTests
        [PostgresModel.VacPeopleTest](T1.VacPeopleTest_Oid, T1.VacPeopleTest_PeopleId, T1.VacPeopleTest_TestDate, T1.VacPeopleTest_Reaction, T1.VacPeopleTest_ReactionRubec, T1.VacPeopleTest_VacTestResultId, T1.VacPeopleTest_VacTestId, T1.VacPeopleTest_EmpId, T1.VacPeopleTest_EmpName, T1.VacPeopleTest_CompanyId, T1.VacPeopleTest_CompanyName, T1.VacPeopleTest_RegisterDate, T1.VacPeopleTest_ExecEmpId, T1.VacPeopleTest_ExecEmpName)
    FROM (
        SELECT 
            T.oid AS VacPeopleTest_Oid, 
            T.people_id AS VacPeopleTest_PeopleId, 
            T.test_date AS VacPeopleTest_TestDate, 
            T.reaction AS VacPeopleTest_Reaction, 
            T.reaction_rubec AS VacPeopleTest_ReactionRubec, 
            T.vac_test_result_id AS VacPeopleTest_VacTestResultId, 
            T.vac_test_id AS VacPeopleTest_VacTestId, 
            T.emp_id AS VacPeopleTest_EmpId, 
            T.emp_name AS VacPeopleTest_EmpName, 
            T.company_id AS VacPeopleTest_CompanyId, 
            T.company_name AS VacPeopleTest_CompanyName, 
            T.register_date AS VacPeopleTest_RegisterDate, 
            T.exec_emp_id AS VacPeopleTest_ExecEmpId, 
            T.exec_emp_name AS VacPeopleTest_ExecEmpName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_people_tests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacPlans
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView713()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacPlans", @"
    SELECT VALUE -- Constructing VacPlans
        [PostgresModel.VacPlan](T1.VacPlan_Oid, T1.VacPlan_PeopleId, T1.VacPlan_InfectionId, T1.VacPlan_KratnId, T1.VacPlan_PlanDate, T1.VacPlan_StatusId, T1.VacPlan_VacCancelId, T1.VacPlan_IsNotVaccin, T1.VacPlan_IsNotExistsPrevVaccin, T1.VacPlan_VaccinPeriod, T1.VacPlan_VacPeopleId, T1.VacPlan_EmpId, T1.VacPlan_EmpName)
    FROM (
        SELECT 
            T.oid AS VacPlan_Oid, 
            T.people_id AS VacPlan_PeopleId, 
            T.infection_id AS VacPlan_InfectionId, 
            T.kratn_id AS VacPlan_KratnId, 
            T.plan_date AS VacPlan_PlanDate, 
            T.status_id AS VacPlan_StatusId, 
            T.vac_cancel_id AS VacPlan_VacCancelId, 
            T.is_not_vaccin AS VacPlan_IsNotVaccin, 
            T.is_not_exists_prev_vaccin AS VacPlan_IsNotExistsPrevVaccin, 
            T.vaccin_period AS VacPlan_VaccinPeriod, 
            T.vac_people_id AS VacPlan_VacPeopleId, 
            T.emp_id AS VacPlan_EmpId, 
            T.emp_name AS VacPlan_EmpName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_plans AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacInputTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView714()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacInputTypes", @"
    SELECT VALUE -- Constructing VacInputTypes
        [PostgresModel.VacInputType](T1.VacInputType_Oid, T1.VacInputType_Name)
    FROM (
        SELECT 
            T.oid AS VacInputType_Oid, 
            T.name AS VacInputType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_input_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacKratns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView715()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacKratns", @"
    SELECT VALUE -- Constructing VacKratns
        [PostgresModel.VacKratn](T1.VacKratn_Oid, T1.VacKratn_InfectionId, T1.VacKratn_VacPeopleId, T1.VacKratn_KratnId)
    FROM (
        SELECT 
            T.oid AS VacKratn_Oid, 
            T.infection_id AS VacKratn_InfectionId, 
            T.vac_people_id AS VacKratn_VacPeopleId, 
            T.kratn_id AS VacKratn_KratnId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_kratns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacSicnesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView716()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacSicnesses", @"
    SELECT VALUE -- Constructing VacSicnesses
        [PostgresModel.VacSicness](T1.VacSicness_Oid, T1.VacSicness_PeopleId, T1.VacSicness_InfectionId, T1.VacSicness_EndDate, T1.VacSicness_Comment, T1.VacSicness_CompanyId, T1.VacSicness_CompanyName, T1.VacSicness_EmpId, T1.VacSicness_EmpName, T1.VacSicness_Icd10Id, T1.VacSicness_DiagId, T1.VacSicness_Icd10Text)
    FROM (
        SELECT 
            T.oid AS VacSicness_Oid, 
            T.people_id AS VacSicness_PeopleId, 
            T.infection_id AS VacSicness_InfectionId, 
            T.end_date AS VacSicness_EndDate, 
            T.comment AS VacSicness_Comment, 
            T.company_id AS VacSicness_CompanyId, 
            T.company_name AS VacSicness_CompanyName, 
            T.emp_id AS VacSicness_EmpId, 
            T.emp_name AS VacSicness_EmpName, 
            T.icd10_id AS VacSicness_Icd10Id, 
            T.diag_id AS VacSicness_DiagId, 
            T.icd10_text AS VacSicness_Icd10Text, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_sicnesses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacCompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView717()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacCompanies", @"
    SELECT VALUE -- Constructing VacCompanies
        [PostgresModel.VacCompany](T1.VacCompany_Oid, T1.VacCompany_TypeId)
    FROM (
        SELECT 
            T.oid AS VacCompany_Oid, 
            T.type_id AS VacCompany_TypeId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_companies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacLpuCompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView718()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacLpuCompanies", @"
    SELECT VALUE -- Constructing VacLpuCompanies
        [PostgresModel.VacLpuCompany](T1.VacLpuCompany_Oid, T1.VacLpuCompany_CompanyLpuId, T1.VacLpuCompany_CompanyId)
    FROM (
        SELECT 
            T.oid AS VacLpuCompany_Oid, 
            T.company_lpu_id AS VacLpuCompany_CompanyLpuId, 
            T.company_id AS VacLpuCompany_CompanyId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_lpu_companies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView719()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2085);
            viewString.Append("\r\n    SELECT VALUE -- Constructing VacPeople\r\n        [PostgresModel.VacPerson](");
            viewString.Append("T1.VacPerson_Oid, T1.VacPerson_PeopleId, T1.VacPerson_VaccinPrepId, T1.VacPerson");
            viewString.Append("_VaccinPrepName, T1.VacPerson_Series, T1.VacPerson_Num, T1.VacPerson_UnitId, T1.");
            viewString.Append("VacPerson_InputTypeId, T1.VacPerson_CreateDate, T1.VacPerson_StatusId, T1.VacPer");
            viewString.Append("son_EmpNazId, T1.VacPerson_EmpNazName, T1.VacPerson_EmpId, T1.VacPerson_EmpName,");
            viewString.Append(" T1.VacPerson_VacCompanyId, T1.VacPerson_VacCompanyName, T1.VacPerson_DeptId, T1");
            viewString.Append(".VacPerson_VaccinShemnameId, T1.VacPerson_VaccinShemId, T1.VacPerson_ReactionTyp");
            viewString.Append("e, T1.VacPerson_Reaction, T1.VacPerson_ReactionRubec, T1.VacPerson_StatusSeriesI");
            viewString.Append("d, T1.VacPerson_VaccinPrepStoreLogId)\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.oid AS VacPerson_Oid, \r\n            T.people_id AS VacPerson_PeopleId, \r\n     ");
            viewString.Append("       T.vaccin_prep_id AS VacPerson_VaccinPrepId, \r\n            T.vaccin_prep_n");
            viewString.Append("ame AS VacPerson_VaccinPrepName, \r\n            T.series AS VacPerson_Series, \r\n ");
            viewString.Append("           T.num AS VacPerson_Num, \r\n            T.unit_id AS VacPerson_UnitId, ");
            viewString.Append("\r\n            T.input_type_id AS VacPerson_InputTypeId, \r\n            T.create_d");
            viewString.Append("ate AS VacPerson_CreateDate, \r\n            T.status_id AS VacPerson_StatusId, \r\n");
            viewString.Append("            T.emp_naz_id AS VacPerson_EmpNazId, \r\n            T.emp_naz_name AS ");
            viewString.Append("VacPerson_EmpNazName, \r\n            T.emp_id AS VacPerson_EmpId, \r\n            T");
            viewString.Append(".emp_name AS VacPerson_EmpName, \r\n            T.vac_company_id AS VacPerson_VacC");
            viewString.Append("ompanyId, \r\n            T.vac_company_name AS VacPerson_VacCompanyName, \r\n      ");
            viewString.Append("      T.dept_id AS VacPerson_DeptId, \r\n            T.vaccin_shemname_id AS VacPe");
            viewString.Append("rson_VaccinShemnameId, \r\n            T.vaccin_shem_id AS VacPerson_VaccinShemId,");
            viewString.Append(" \r\n            T.reaction_type AS VacPerson_ReactionType, \r\n            T.reacti");
            viewString.Append("on AS VacPerson_Reaction, \r\n            T.reaction_rubec AS VacPerson_ReactionRu");
            viewString.Append("bec, \r\n            T.status_series_id AS VacPerson_StatusSeriesId, \r\n           ");
            viewString.Append(" T.vaccin_prep_store_log_id AS VacPerson_VaccinPrepStoreLogId, \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM PostgresEntitiesStoreContainer.vac_people AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacPeople", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacStores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView720()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacStores", @"
    SELECT VALUE -- Constructing VacStores
        [PostgresModel.VacStore](T1.VacStore_Oid, T1.VacStore_DeptId, T1.VacStore_Comment)
    FROM (
        SELECT 
            T.oid AS VacStore_Oid, 
            T.dept_id AS VacStore_DeptId, 
            T.comment AS VacStore_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_stores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacKratnNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView721()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacKratnNames", @"
    SELECT VALUE -- Constructing VacKratnNames
        [PostgresModel.VacKratnName](T1.VacKratnName_Oid, T1.VacKratnName_Name, T1.VacKratnName_Type, T1.VacKratnName_Num)
    FROM (
        SELECT 
            T.oid AS VacKratnName_Oid, 
            T.name AS VacKratnName_Name, 
            T.type AS VacKratnName_Type, 
            T.num AS VacKratnName_Num, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_kratn_names AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacPeopleStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView722()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacPeopleStatus", @"
    SELECT VALUE -- Constructing VacPeopleStatus
        [PostgresModel.VacPeopleStatus](T1.VacPeopleStatus_Oid, T1.VacPeopleStatus_Name)
    FROM (
        SELECT 
            T.oid AS VacPeopleStatus_Oid, 
            T.name AS VacPeopleStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_people_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacStatusSeries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView723()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacStatusSeries", @"
    SELECT VALUE -- Constructing VacStatusSeries
        [PostgresModel.VacStatusSery](T1.VacStatusSery_Oid, T1.VacStatusSery_Name)
    FROM (
        SELECT 
            T.oid AS VacStatusSery_Oid, 
            T.name AS VacStatusSery_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_status_series AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacPlanStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView724()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacPlanStatus", @"
    SELECT VALUE -- Constructing VacPlanStatus
        [PostgresModel.VacPlanStatus](T1.VacPlanStatus_Oid, T1.VacPlanStatus_Name)
    FROM (
        SELECT 
            T.oid AS VacPlanStatus_Oid, 
            T.name AS VacPlanStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_plan_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacCancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView725()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacCancels", @"
    SELECT VALUE -- Constructing VacCancels
        [PostgresModel.VacCancel](T1.VacCancel_Oid, T1.VacCancel_PeopleId, T1.VacCancel_TypeId, T1.VacCancel_BeginDate, T1.VacCancel_EndDate, T1.VacCancel_EmpId, T1.VacCancel_EmpName, T1.VacCancel_Comment)
    FROM (
        SELECT 
            T.oid AS VacCancel_Oid, 
            T.people_id AS VacCancel_PeopleId, 
            T.type_id AS VacCancel_TypeId, 
            T.begin_date AS VacCancel_BeginDate, 
            T.end_date AS VacCancel_EndDate, 
            T.emp_id AS VacCancel_EmpId, 
            T.emp_name AS VacCancel_EmpName, 
            T.comment AS VacCancel_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_cancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinPrepStoreLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView726()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinPrepStoreLogs", @"
    SELECT VALUE -- Constructing VaccinPrepStoreLogs
        [PostgresModel.VaccinPrepStoreLog](T1.VaccinPrepStoreLog_Oid, T1.VaccinPrepStoreLog_VaccinPrepStoreId, T1.VaccinPrepStoreLog_TypeId, T1.VaccinPrepStoreLog_DateOn, T1.VaccinPrepStoreLog_Num, T1.VaccinPrepStoreLog_EmpId, T1.VaccinPrepStoreLog_Comment, T1.VaccinPrepStoreLog_Old, T1.VaccinPrepStoreLog_New)
    FROM (
        SELECT 
            T.oid AS VaccinPrepStoreLog_Oid, 
            T.vaccin_prep_store_id AS VaccinPrepStoreLog_VaccinPrepStoreId, 
            T.type_id AS VaccinPrepStoreLog_TypeId, 
            T.date_on AS VaccinPrepStoreLog_DateOn, 
            T.num AS VaccinPrepStoreLog_Num, 
            T.emp_id AS VaccinPrepStoreLog_EmpId, 
            T.comment AS VaccinPrepStoreLog_Comment, 
            T.old AS VaccinPrepStoreLog_Old, 
            T.new AS VaccinPrepStoreLog_New, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_prep_store_logs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinShemnames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView727()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinShemnames", @"
    SELECT VALUE -- Constructing VaccinShemnames
        [PostgresModel.VaccinShemname](T1.VaccinShemname_Oid, T1.VaccinShemname_Name, T1.VaccinShemname_VaccinPrepId, T1.VaccinShemname_Comment)
    FROM (
        SELECT 
            T.oid AS VaccinShemname_Oid, 
            T.name AS VaccinShemname_Name, 
            T.vaccin_prep_id AS VaccinShemname_VaccinPrepId, 
            T.comment AS VaccinShemname_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_shemnames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinShems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView728()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinShems", @"
    SELECT VALUE -- Constructing VaccinShems
        [PostgresModel.VaccinShem](T1.VaccinShem_Oid, T1.VaccinShem_KratnId, T1.VaccinShem_Minpause, T1.VaccinShem_Minpausetext, T1.VaccinShem_Minage, T1.VaccinShem_Minagetext, T1.VaccinShem_ShemnameId)
    FROM (
        SELECT 
            T.oid AS VaccinShem_Oid, 
            T.kratn_id AS VaccinShem_KratnId, 
            T.minpause AS VaccinShem_Minpause, 
            T.minpausetext AS VaccinShem_Minpausetext, 
            T.minage AS VaccinShem_Minage, 
            T.minagetext AS VaccinShem_Minagetext, 
            T.shemname_id AS VaccinShem_ShemnameId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_shems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinPrepInfections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView729()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinPrepInfections", @"
    SELECT VALUE -- Constructing VaccinPrepInfections
        [PostgresModel.VaccinPrepInfection](T1.VaccinPrepInfection_Oid, T1.VaccinPrepInfection_VaccinPrepId, T1.VaccinPrepInfection_VaccinInfectionId)
    FROM (
        SELECT 
            T.oid AS VaccinPrepInfection_Oid, 
            T.vaccin_prep_id AS VaccinPrepInfection_VaccinPrepId, 
            T.vaccin_infection_id AS VaccinPrepInfection_VaccinInfectionId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_prep_infections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinLogOperations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView730()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinLogOperations", @"
    SELECT VALUE -- Constructing VaccinLogOperations
        [PostgresModel.VaccinLogOperation](T1.VaccinLogOperation_Oid, T1.VaccinLogOperation_Name)
    FROM (
        SELECT 
            T.oid AS VaccinLogOperation_Oid, 
            T.name AS VaccinLogOperation_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_log_operations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacTestResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView731()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacTestResults", @"
    SELECT VALUE -- Constructing VacTestResults
        [PostgresModel.VacTestResult](T1.VacTestResult_Oid, T1.VacTestResult_Name, T1.VacTestResult_VacTestId, T1.VacTestResult_Comment)
    FROM (
        SELECT 
            T.oid AS VacTestResult_Oid, 
            T.name AS VacTestResult_Name, 
            T.vac_test_id AS VacTestResult_VacTestId, 
            T.comment AS VacTestResult_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_test_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinPrepStores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView732()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinPrepStores", @"
    SELECT VALUE -- Constructing VaccinPrepStores
        [PostgresModel.VaccinPrepStore](T1.VaccinPrepStore_Oid, T1.VaccinPrepStore_StoreId, T1.VaccinPrepStore_VaccinPrepId, T1.VaccinPrepStore_Series, T1.VaccinPrepStore_FitnessDate, T1.VaccinPrepStore_Reminder)
    FROM (
        SELECT 
            T.oid AS VaccinPrepStore_Oid, 
            T.store_id AS VaccinPrepStore_StoreId, 
            T.vaccin_prep_id AS VaccinPrepStore_VaccinPrepId, 
            T.series AS VaccinPrepStore_Series, 
            T.fitness_date AS VaccinPrepStore_FitnessDate, 
            T.reminder AS VaccinPrepStore_Reminder, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_prep_stores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacCancelTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView733()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacCancelTypes", @"
    SELECT VALUE -- Constructing VacCancelTypes
        [PostgresModel.VacCancelType](T1.VacCancelType_Oid, T1.VacCancelType_Permanent, T1.VacCancelType_Name, T1.VacCancelType_DefDuration, T1.VacCancelType_IsMed, T1.VacCancelType_IsAll)
    FROM (
        SELECT 
            T.oid AS VacCancelType_Oid, 
            T.permanent AS VacCancelType_Permanent, 
            T.name AS VacCancelType_Name, 
            T.def_duration AS VacCancelType_DefDuration, 
            T.is_med AS VacCancelType_IsMed, 
            T.is_all AS VacCancelType_IsAll, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_cancel_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacCompanyTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView734()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacCompanyTypes", @"
    SELECT VALUE -- Constructing VacCompanyTypes
        [PostgresModel.VacCompanyType](T1.VacCompanyType_Oid, T1.VacCompanyType_Name)
    FROM (
        SELECT 
            T.oid AS VacCompanyType_Oid, 
            T.name AS VacCompanyType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_company_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Infections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView735()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Infections", @"
    SELECT VALUE -- Constructing Infections
        [PostgresModel.Infection](T1.Infection_Oid, T1.Infection_Name, T1.Infection_Comment, T1.Infection_IsNation, T1.Infection_YearEffect, T1.Infection_DefVacTestId, T1.Infection_Del)
    FROM (
        SELECT 
            T.oid AS Infection_Oid, 
            T.name AS Infection_Name, 
            T.comment AS Infection_Comment, 
            T.is_nation AS Infection_IsNation, 
            T.year_effect AS Infection_YearEffect, 
            T.def_vac_test_id AS Infection_DefVacTestId, 
            T.del AS Infection_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.infections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacTests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView736()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacTests", @"
    SELECT VALUE -- Constructing VacTests
        [PostgresModel.VacTest](T1.VacTest_Oid, T1.VacTest_Name, T1.VacTest_Comment)
    FROM (
        SELECT 
            T.oid AS VacTest_Oid, 
            T.name AS VacTest_Name, 
            T.comment AS VacTest_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_tests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinUnits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView737()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinUnits", @"
    SELECT VALUE -- Constructing VaccinUnits
        [PostgresModel.VaccinUnit](T1.VaccinUnit_Oid, T1.VaccinUnit_Name, T1.VaccinUnit_ShortName)
    FROM (
        SELECT 
            T.oid AS VaccinUnit_Oid, 
            T.name AS VaccinUnit_Name, 
            T.short_name AS VaccinUnit_ShortName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_units AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VaccinPreps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView738()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VaccinPreps", @"
    SELECT VALUE -- Constructing VaccinPreps
        [PostgresModel.VaccinPrep](T1.VaccinPrep_Oid, T1.VaccinPrep_Name, T1.VaccinPrep_UnitId, T1.VaccinPrep_Dose, T1.VaccinPrep_Del, T1.VaccinPrep_DefInputTypeId, T1.VaccinPrep_Comment)
    FROM (
        SELECT 
            T.oid AS VaccinPrep_Oid, 
            T.name AS VaccinPrep_Name, 
            T.unit_id AS VaccinPrep_UnitId, 
            T.dose AS VaccinPrep_Dose, 
            T.del AS VaccinPrep_Del, 
            T.def_input_type_id AS VaccinPrep_DefInputTypeId, 
            T.comment AS VaccinPrep_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vaccin_preps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mdocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView739()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mdocs", @"
    SELECT VALUE -- Constructing Mdocs
        [PostgresModel.Mdoc](T1.Mdoc_Id, T1.Mdoc_PeopleId, T1.Mdoc_MdocTypeId, T1.Mdoc_Beginm, T1.Mdoc_Endm, T1.Mdoc_Num, T1.Mdoc_PdocId, T1.Mdoc_Status, T1.Mdoc_Year, T1.Mdoc_Otdel, T1.Mdoc_Lpu, T1.Mdoc_DocobslId, T1.Mdoc_Location, T1.Mdoc_ReasonArchiveId)
    FROM (
        SELECT 
            T.id AS Mdoc_Id, 
            T.people_id AS Mdoc_PeopleId, 
            T.mdoc_type_id AS Mdoc_MdocTypeId, 
            T.beginm AS Mdoc_Beginm, 
            T.endm AS Mdoc_Endm, 
            T.num AS Mdoc_Num, 
            T.pdoc_id AS Mdoc_PdocId, 
            T.status AS Mdoc_Status, 
            T.year AS Mdoc_Year, 
            T.otdel AS Mdoc_Otdel, 
            T.lpu AS Mdoc_Lpu, 
            T.docobsl_id AS Mdoc_DocobslId, 
            T.location AS Mdoc_Location, 
            T.reason_archive_id AS Mdoc_ReasonArchiveId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Visits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView740()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Visits", @"
    SELECT VALUE -- Constructing Visits
        [PostgresModel.Visit](T1.Visit_Id, T1.Visit_Beginv, T1.Visit_Endv, T1.Visit_MdocId, T1.Visit_AddrId, T1.Visit_VisitState, T1.Visit_SotrId, T1.Visit_PayTypeId, T1.Visit_PayMethod, T1.Visit_Parent)
    FROM (
        SELECT 
            T.id AS Visit_Id, 
            T.beginv AS Visit_Beginv, 
            T.endv AS Visit_Endv, 
            T.mdoc_id AS Visit_MdocId, 
            T.addr_id AS Visit_AddrId, 
            T.visit_state AS Visit_VisitState, 
            T.sotr_id AS Visit_SotrId, 
            T.pay_type_id AS Visit_PayTypeId, 
            T.pay_method AS Visit_PayMethod, 
            T.parent AS Visit_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.visits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistLinks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView741()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistLinks", @"
    SELECT VALUE -- Constructing SicklistLinks
        [PostgresModel.SicklistLink](T1.SicklistLink_Id, T1.SicklistLink_Name, T1.SicklistLink_Code)
    FROM (
        SELECT 
            T.id AS SicklistLink_Id, 
            T.name AS SicklistLink_Name, 
            T.code AS SicklistLink_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_links AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MdocTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView742()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MdocTypes", @"
    SELECT VALUE -- Constructing MdocTypes
        [PostgresModel.MdocType](T1.MdocType_Id, T1.MdocType_Name, T1.MdocType_ParentId, T1.MdocType_NumTypeId, T1.MdocType_Synonim, T1.MdocType_MkSortView, T1.MdocType_MkSortPrint)
    FROM (
        SELECT 
            T.id AS MdocType_Id, 
            T.name AS MdocType_Name, 
            T.parent_id AS MdocType_ParentId, 
            T.num_type_id AS MdocType_NumTypeId, 
            T.synonim AS MdocType_Synonim, 
            T.mk_sort_view AS MdocType_MkSortView, 
            T.mk_sort_print AS MdocType_MkSortPrint, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdoc_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Pdocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView743()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Pdocs", @"
    SELECT VALUE -- Constructing Pdocs
        [PostgresModel.Pdoc](T1.Pdoc_Id, T1.Pdoc_PdoctypeId, T1.Pdoc_Ser, T1.Pdoc_Num, T1.Pdoc_Givedate, T1.Pdoc_Giveplace, T1.Pdoc_Active)
    FROM (
        SELECT 
            T.id AS Pdoc_Id, 
            T.pdoctype_id AS Pdoc_PdoctypeId, 
            T.ser AS Pdoc_Ser, 
            T.num AS Pdoc_Num, 
            T.givedate AS Pdoc_Givedate, 
            T.giveplace AS Pdoc_Giveplace, 
            T.active AS Pdoc_Active, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pdocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Pdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView744()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Pdoctypes", @"
    SELECT VALUE -- Constructing Pdoctypes
        [PostgresModel.Pdoctype](T1.Pdoctype_Id, T1.Pdoctype_Name, T1.Pdoctype_Synonim)
    FROM (
        SELECT 
            T.id AS Pdoctype_Id, 
            T.name AS Pdoctype_Name, 
            T.synonim AS Pdoctype_Synonim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView745()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistReasons", @"
    SELECT VALUE -- Constructing SicklistReasons
        [PostgresModel.SicklistReason](T1.SicklistReason_Id, T1.SicklistReason_Name, T1.SicklistReason_Code)
    FROM (
        SELECT 
            T.id AS SicklistReason_Id, 
            T.name AS SicklistReason_Name, 
            T.code AS SicklistReason_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_reasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistReasonDops
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView746()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistReasonDops", @"
    SELECT VALUE -- Constructing SicklistReasonDops
        [PostgresModel.SicklistReasonDop](T1.SicklistReasonDop_Id, T1.SicklistReasonDop_Name, T1.SicklistReasonDop_Code)
    FROM (
        SELECT 
            T.id AS SicklistReasonDop_Id, 
            T.name AS SicklistReasonDop_Name, 
            T.code AS SicklistReasonDop_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_reason_dops AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistRegimen
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView747()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistRegimen", @"
    SELECT VALUE -- Constructing SicklistRegimen
        [PostgresModel.SicklistRegiman](T1.SicklistRegiman_Id, T1.SicklistRegiman_Name, T1.SicklistRegiman_Code)
    FROM (
        SELECT 
            T.id AS SicklistRegiman_Id, 
            T.name AS SicklistRegiman_Name, 
            T.code AS SicklistRegiman_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_regimen AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistReasonChanges
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView748()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistReasonChanges", @"
    SELECT VALUE -- Constructing SicklistReasonChanges
        [PostgresModel.SicklistReasonChange](T1.SicklistReasonChange_Id, T1.SicklistReasonChange_Name, T1.SicklistReasonChange_Code)
    FROM (
        SELECT 
            T.id AS SicklistReasonChange_Id, 
            T.name AS SicklistReasonChange_Name, 
            T.code AS SicklistReasonChange_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_reason_changes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistOther
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView749()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistOther", @"
    SELECT VALUE -- Constructing SicklistOther
        [PostgresModel.SicklistOther](T1.SicklistOther_Id, T1.SicklistOther_Name, T1.SicklistOther_Code)
    FROM (
        SELECT 
            T.id AS SicklistOther_Id, 
            T.name AS SicklistOther_Name, 
            T.code AS SicklistOther_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_other AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistPeriods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView750()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistPeriods", @"
    SELECT VALUE -- Constructing SicklistPeriods
        [PostgresModel.SicklistPeriod](T1.SicklistPeriod_Id, T1.SicklistPeriod_SicklistId, T1.SicklistPeriod_Datebegin, T1.SicklistPeriod_Dateend, T1.SicklistPeriod_SotrVkId, T1.SicklistPeriod_SotrId)
    FROM (
        SELECT 
            T.id AS SicklistPeriod_Id, 
            T.sicklist_id AS SicklistPeriod_SicklistId, 
            T.datebegin AS SicklistPeriod_Datebegin, 
            T.dateend AS SicklistPeriod_Dateend, 
            T.sotr_vk_id AS SicklistPeriod_SotrVkId, 
            T.sotr_id AS SicklistPeriod_SotrId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_periods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sicklists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView751()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4558);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Sicklists\r\n        [PostgresModel.Sicklist](T");
            viewString.Append("1.Sicklist_Id, T1.Sicklist_ParentId, T1.Sicklist_OpenDt, T1.Sicklist_ToworkDt, T");
            viewString.Append("1.Sicklist_ReasonId, T1.Sicklist_MseNaprDt, T1.Sicklist_MseRegDt, T1.Sicklist_Ms");
            viewString.Append("eOsvidDt, T1.Sicklist_StacBeginDt, T1.Sicklist_StacEndDt, T1.Sicklist_Num, T1.Si");
            viewString.Append("cklist_Duplicate, T1.Sicklist_ReasonChangeId, T1.Sicklist_Job, T1.Sicklist_Jobma");
            viewString.Append("in, T1.Sicklist_Jobsec, T1.Sicklist_Jobservice, T1.Sicklist_Date1, T1.Sicklist_D");
            viewString.Append("ate2, T1.Sicklist_Permitnum, T1.Sicklist_Sanatogrn, T1.Sicklist_Careage1, T1.Sic");
            viewString.Append("klist_Caremonth1, T1.Sicklist_LinkId1, T1.Sicklist_Carefio1, T1.Sicklist_Careage");
            viewString.Append("2, T1.Sicklist_Caremonth2, T1.Sicklist_LinkId2, T1.Sicklist_Carefio2, T1.Sicklis");
            viewString.Append("t_Pregment, T1.Sicklist_RegimenId, T1.Sicklist_RegimenDt, T1.Sicklist_Invalidgro");
            viewString.Append("upId, T1.Sicklist_Jobsecnum, T1.Sicklist_OtherId, T1.Sicklist_OtherDt, T1.Sickli");
            viewString.Append("st_ReasonDopId, T1.Sicklist_Mkb10Oid, T1.Sicklist_Ibnum, T1.Sicklist_Nextlnnum, ");
            viewString.Append("T1.Sicklist_VisitId, T1.Sicklist_PeopleId, T1.Sicklist_SotrId, T1.Sicklist_Lpu, ");
            viewString.Append("T1.Sicklist_Status, T1.Sicklist_Mdoc, T1.Sicklist_Care, T1.Sicklist_ParentNum, T");
            viewString.Append("1.Sicklist_ParentExt, T1.Sicklist_JobsecId, T1.Sicklist_Carepeople1, T1.Sicklist");
            viewString.Append("_Carepeople2, T1.Sicklist_ScklistTypeId, T1.Sicklist_ParentNumber, T1.Sicklist_P");
            viewString.Append("rescId, T1.Sicklist_DiagText, T1.Sicklist_SicklistDuplicateType, T1.Sicklist_Dup");
            viewString.Append("licateSicklist, T1.Sicklist_IsOtherLpu, T1.Sicklist_OtherLpuName, T1.Sicklist_Wh");
            viewString.Append("ereissuedId)\r\n    FROM (\r\n        SELECT \r\n            T.id AS Sicklist_Id, \r\n  ");
            viewString.Append("          T.parent_id AS Sicklist_ParentId, \r\n            T.open_dt AS Sicklist_");
            viewString.Append("OpenDt, \r\n            T.towork_dt AS Sicklist_ToworkDt, \r\n            T.reason_i");
            viewString.Append("d AS Sicklist_ReasonId, \r\n            T.mse_napr_dt AS Sicklist_MseNaprDt, \r\n   ");
            viewString.Append("         T.mse_reg_dt AS Sicklist_MseRegDt, \r\n            T.mse_osvid_dt AS Sick");
            viewString.Append("list_MseOsvidDt, \r\n            T.stac_begin_dt AS Sicklist_StacBeginDt, \r\n      ");
            viewString.Append("      T.stac_end_dt AS Sicklist_StacEndDt, \r\n            T.num AS Sicklist_Num, ");
            viewString.Append("\r\n            T.duplicate AS Sicklist_Duplicate, \r\n            T.reason_change_i");
            viewString.Append("d AS Sicklist_ReasonChangeId, \r\n            T.job AS Sicklist_Job, \r\n           ");
            viewString.Append(" T.jobmain AS Sicklist_Jobmain, \r\n            T.jobsec AS Sicklist_Jobsec, \r\n   ");
            viewString.Append("         T.jobservice AS Sicklist_Jobservice, \r\n            T.date1 AS Sicklist_");
            viewString.Append("Date1, \r\n            T.date2 AS Sicklist_Date2, \r\n            T.permitnum AS Sic");
            viewString.Append("klist_Permitnum, \r\n            T.sanatogrn AS Sicklist_Sanatogrn, \r\n            ");
            viewString.Append("T.careage1 AS Sicklist_Careage1, \r\n            T.caremonth1 AS Sicklist_Caremont");
            viewString.Append("h1, \r\n            T.link_id1 AS Sicklist_LinkId1, \r\n            T.carefio1 AS Si");
            viewString.Append("cklist_Carefio1, \r\n            T.careage2 AS Sicklist_Careage2, \r\n            T.");
            viewString.Append("caremonth2 AS Sicklist_Caremonth2, \r\n            T.link_id2 AS Sicklist_LinkId2,");
            viewString.Append(" \r\n            T.carefio2 AS Sicklist_Carefio2, \r\n            T.pregment AS Sick");
            viewString.Append("list_Pregment, \r\n            T.regimen_id AS Sicklist_RegimenId, \r\n            T");
            viewString.Append(".regimen_dt AS Sicklist_RegimenDt, \r\n            T.invalidgroup_id AS Sicklist_I");
            viewString.Append("nvalidgroupId, \r\n            T.jobsecnum AS Sicklist_Jobsecnum, \r\n            T.");
            viewString.Append("other_id AS Sicklist_OtherId, \r\n            T.other_dt AS Sicklist_OtherDt, \r\n  ");
            viewString.Append("          T.reason_dop_id AS Sicklist_ReasonDopId, \r\n            T.mkb10_oid AS ");
            viewString.Append("Sicklist_Mkb10Oid, \r\n            T.ibnum AS Sicklist_Ibnum, \r\n            T.next");
            viewString.Append("lnnum AS Sicklist_Nextlnnum, \r\n            T.visit_id AS Sicklist_VisitId, \r\n   ");
            viewString.Append("         T.people_id AS Sicklist_PeopleId, \r\n            T.sotr_id AS Sicklist_S");
            viewString.Append("otrId, \r\n            T.lpu AS Sicklist_Lpu, \r\n            T.status AS Sicklist_S");
            viewString.Append("tatus, \r\n            T.mdoc AS Sicklist_Mdoc, \r\n            T.care AS Sicklist_C");
            viewString.Append("are, \r\n            T.parent_num AS Sicklist_ParentNum, \r\n            T.parent_ex");
            viewString.Append("t AS Sicklist_ParentExt, \r\n            T.jobsec_id AS Sicklist_JobsecId, \r\n     ");
            viewString.Append("       T.carepeople1 AS Sicklist_Carepeople1, \r\n            T.carepeople2 AS Sic");
            viewString.Append("klist_Carepeople2, \r\n            T.scklist_type_id AS Sicklist_ScklistTypeId, \r\n");
            viewString.Append("            T.parent_number AS Sicklist_ParentNumber, \r\n            T.presc_id A");
            viewString.Append("S Sicklist_PrescId, \r\n            T.diag_text AS Sicklist_DiagText, \r\n          ");
            viewString.Append("  T.sicklist_duplicate_type AS Sicklist_SicklistDuplicateType, \r\n            T.d");
            viewString.Append("uplicate_sicklist AS Sicklist_DuplicateSicklist, \r\n            T.is_other_lpu AS");
            viewString.Append(" Sicklist_IsOtherLpu, \r\n            T.other_lpu_name AS Sicklist_OtherLpuName, \r");
            viewString.Append("\n            T.whereissued_id AS Sicklist_WhereissuedId, \r\n            True AS _");
            viewString.Append("from0\r\n        FROM PostgresEntitiesStoreContainer.sicklists AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sicklists", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PassportLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView752()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PassportLogs", @"
    SELECT VALUE -- Constructing PassportLogs
        [PostgresModel.PassportLog](T1.PassportLog_Oid, T1.PassportLog_Lpu, T1.PassportLog_Sysuser, T1.PassportLog_Otdel, T1.PassportLog_Message, T1.PassportLog_ChangeDate)
    FROM (
        SELECT 
            T.oid AS PassportLog_Oid, 
            T.lpu AS PassportLog_Lpu, 
            T.sysuser AS PassportLog_Sysuser, 
            T.otdel AS PassportLog_Otdel, 
            T.message AS PassportLog_Message, 
            T.change_date AS PassportLog_ChangeDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.passport_logs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Peopleposts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView753()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Peopleposts", @"
    SELECT VALUE -- Constructing Peopleposts
        [PostgresModel.Peoplepost](T1.Peoplepost_Oid, T1.Peoplepost_Profcode)
    FROM (
        SELECT 
            T.oid AS Peoplepost_Oid, 
            T.profcode AS Peoplepost_Profcode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.peopleposts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Schedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView754()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2941);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Schedules\r\n        [PostgresModel.Schedule](T");
            viewString.Append("1.Schedule_Oid, T1.Schedule_Cabinet, T1.Schedule_Insite, T1.Schedule_Sysuser, T1");
            viewString.Append(".Schedule_Presctype, T1.Schedule_People, T1.Schedule_State, T1.Schedule_Isnapron");
            viewString.Append("ly, T1.Schedule_Ticketnumber, T1.Schedule_Lpu, T1.Schedule_Isbron, T1.Schedule_S");
            viewString.Append("chedulecallstate, T1.Schedule_Schedulecallstatecomment, T1.Schedule_Updatepeople");
            viewString.Append("date, T1.Schedule_Peoplescheduleplace, T1.Schedule_Schedulecallstatedate, T1.Sch");
            viewString.Append("edule_Schedulecallstatesysuser, T1.Schedule_Extralinereason, T1.Schedule_Info, T");
            viewString.Append("1.Schedule_Yavkadt, T1.Schedule_Sysuseraddpeople, T1.Schedule_Paid, T1.Schedule_");
            viewString.Append("Starton, T1.Schedule_Endon, T1.Schedule_Otdel, T1.Schedule_Recorddatetime, T1.Sc");
            viewString.Append("hedule_Recordoperator, T1.Schedule_Blockdatetime, T1.Schedule_Blockoperator, T1.");
            viewString.Append("Schedule_Sotr, T1.Schedule_Maxvisitors, T1.Schedule_Financingtype, T1.Schedule_N");
            viewString.Append("aprNum, T1.Schedule_Sync, T1.Schedule_EquipmentId, T1.Schedule_ParentId)\r\n    FR");
            viewString.Append("OM (\r\n        SELECT \r\n            T.oid AS Schedule_Oid, \r\n            T.cabine");
            viewString.Append("t AS Schedule_Cabinet, \r\n            T.insite AS Schedule_Insite, \r\n            ");
            viewString.Append("T.sysuser AS Schedule_Sysuser, \r\n            T.presctype AS Schedule_Presctype, ");
            viewString.Append("\r\n            T.people AS Schedule_People, \r\n            T.state AS Schedule_Sta");
            viewString.Append("te, \r\n            T.isnapronly AS Schedule_Isnapronly, \r\n            T.ticketnum");
            viewString.Append("ber AS Schedule_Ticketnumber, \r\n            T.lpu AS Schedule_Lpu, \r\n           ");
            viewString.Append(" T.isbron AS Schedule_Isbron, \r\n            T.schedulecallstate AS Schedule_Sche");
            viewString.Append("dulecallstate, \r\n            T.schedulecallstatecomment AS Schedule_Schedulecall");
            viewString.Append("statecomment, \r\n            T.updatepeopledate AS Schedule_Updatepeopledate, \r\n ");
            viewString.Append("           T.peoplescheduleplace AS Schedule_Peoplescheduleplace, \r\n            ");
            viewString.Append("T.schedulecallstatedate AS Schedule_Schedulecallstatedate, \r\n            T.sched");
            viewString.Append("ulecallstatesysuser AS Schedule_Schedulecallstatesysuser, \r\n            T.extral");
            viewString.Append("inereason AS Schedule_Extralinereason, \r\n            T.info AS Schedule_Info, \r\n");
            viewString.Append("            T.yavkadt AS Schedule_Yavkadt, \r\n            T.sysuseraddpeople AS S");
            viewString.Append("chedule_Sysuseraddpeople, \r\n            T.paid AS Schedule_Paid, \r\n            T");
            viewString.Append(".starton AS Schedule_Starton, \r\n            T.endon AS Schedule_Endon, \r\n       ");
            viewString.Append("     T.otdel AS Schedule_Otdel, \r\n            T.recorddatetime AS Schedule_Recor");
            viewString.Append("ddatetime, \r\n            T.recordoperator AS Schedule_Recordoperator, \r\n        ");
            viewString.Append("    T.blockdatetime AS Schedule_Blockdatetime, \r\n            T.blockoperator AS ");
            viewString.Append("Schedule_Blockoperator, \r\n            T.sotr AS Schedule_Sotr, \r\n            T.m");
            viewString.Append("axvisitors AS Schedule_Maxvisitors, \r\n            T.financingtype AS Schedule_Fi");
            viewString.Append("nancingtype, \r\n            T.napr_num AS Schedule_NaprNum, \r\n            T.sync ");
            viewString.Append("AS Schedule_Sync, \r\n            T.equipment_id AS Schedule_EquipmentId, \r\n      ");
            viewString.Append("      T.parent_id AS Schedule_ParentId, \r\n            True AS _from0\r\n        FR");
            viewString.Append("OM PostgresEntitiesStoreContainer.schedules AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Schedules", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SysuserPresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView755()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SysuserPresctypes", @"
    SELECT VALUE -- Constructing SysuserPresctypes
        [PostgresModel.SysuserPresctype](T1.SysuserPresctype_Presctypes, T1.SysuserPresctype_Sysusers, T1.SysuserPresctype_Oid)
    FROM (
        SELECT 
            T.presctypes AS SysuserPresctype_Presctypes, 
            T.sysusers AS SysuserPresctype_Sysusers, 
            T.oid AS SysuserPresctype_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sysuser_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Presctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView756()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Presctypes", "\r\n    SELECT VALUE -- Constructing Presctypes\r\n        [PostgresModel.Presctype](" +
                    "T1.Presctype_Oid, T1.Presctype_Codespec, T1.Presctype_Duration, T1.Presctype_Aut" +
                    "odone, T1.Presctype_Del, T1.Presctype_CanAllot, T1.Presctype_Order, T1.Presctype" +
                    "_MrSectionId, T1.Presctype_PresctypefolderId, T1.Presctype_Synonim, T1.Presctype" +
                    "_Name, T1.Presctype_PresctypefolderidParent, T1.Presctype_FomsCode, T1.Presctype" +
                    "_Description, T1.Presctype_Parent, T1.Presctype_Color, T1.Presctype_Visible, T1." +
                    "Presctype_Mtable, T1.Presctype_Biomaterial, T1.Presctype_RunType, T1.Presctype_P" +
                    "erformedByNurse, T1.Presctype_DoubleSign, T1.Presctype_PerformInIb)\r\n    FROM (\r" +
                    "\n        SELECT \r\n            T.oid AS Presctype_Oid, \r\n            T.codespec A" +
                    "S Presctype_Codespec, \r\n            T.duration AS Presctype_Duration, \r\n        " +
                    "    T.autodone AS Presctype_Autodone, \r\n            T.del AS Presctype_Del, \r\n  " +
                    "          T.can_allot AS Presctype_CanAllot, \r\n            T.order_ AS Presctype" +
                    "_Order, \r\n            T.mr_section_id AS Presctype_MrSectionId, \r\n            T." +
                    "presctypefolder_id AS Presctype_PresctypefolderId, \r\n            T.synonim AS Pr" +
                    "esctype_Synonim, \r\n            T.name AS Presctype_Name, \r\n            T.prescty" +
                    "pefolderid_parent AS Presctype_PresctypefolderidParent, \r\n            T.foms_cod" +
                    "e AS Presctype_FomsCode, \r\n            T.description AS Presctype_Description, \r" +
                    "\n            T.parent AS Presctype_Parent, \r\n            T.color AS Presctype_Co" +
                    "lor, \r\n            T.visible AS Presctype_Visible, \r\n            T.mtable AS Pre" +
                    "sctype_Mtable, \r\n            T.biomaterial AS Presctype_Biomaterial, \r\n         " +
                    "   T.run_type AS Presctype_RunType, \r\n            T.performed_by_nurse AS Presct" +
                    "ype_PerformedByNurse, \r\n            T.double_sign AS Presctype_DoubleSign, \r\n   " +
                    "         T.perform_in_ib AS Presctype_PerformInIb, \r\n            True AS _from0\r" +
                    "\n        FROM PostgresEntitiesStoreContainer.presctypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invalidgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView757()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invalidgroups", @"
    SELECT VALUE -- Constructing Invalidgroups
        [PostgresModel.Invalidgroup](T1.Invalidgroup_Oid, T1.Invalidgroup_Name, T1.Invalidgroup_FomsCode, T1.Invalidgroup_Show, T1.Invalidgroup_Name2, T1.Invalidgroup_Status)
    FROM (
        SELECT 
            T.oid AS Invalidgroup_Oid, 
            T.name AS Invalidgroup_Name, 
            T.foms_code AS Invalidgroup_FomsCode, 
            T.show AS Invalidgroup_Show, 
            T.name2 AS Invalidgroup_Name2, 
            T.status AS Invalidgroup_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invalidgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Prescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView758()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Prescs", "\r\n    SELECT VALUE -- Constructing Prescs\r\n        [PostgresModel.Presc](T1.Presc" +
                    "_Id, T1.Presc_PresctypeId, T1.Presc_VisitId, T1.Presc_CreateDt, T1.Presc_Prunbeg" +
                    "Dt, T1.Presc_RunbegDt, T1.Presc_RunendDt, T1.Presc_MdocId, T1.Presc_PrescStateId" +
                    ", T1.Presc_CabinetId, T1.Presc_RunempId, T1.Presc_CreatorId, T1.Presc_PrunendDt," +
                    " T1.Presc_PrescTimeId, T1.Presc_ParentId, T1.Presc_SignDt, T1.Presc_OrderNum, T1" +
                    ".Presc_OrderAdd, T1.Presc_AppendixId, T1.Presc_LabSearching, T1.Presc_XrayReferr" +
                    "alId, T1.Presc_Tmodel, T1.Presc_Reason, T1.Presc_Attendance, T1.Presc_Lpu, T1.Pr" +
                    "esc_ShowPrunbegDt, T1.Presc_Additional, T1.Presc_AutoSign)\r\n    FROM (\r\n        " +
                    "SELECT \r\n            T.id AS Presc_Id, \r\n            T.presctype_id AS Presc_Pre" +
                    "sctypeId, \r\n            T.visit_id AS Presc_VisitId, \r\n            T.create_dt A" +
                    "S Presc_CreateDt, \r\n            T.prunbeg_dt AS Presc_PrunbegDt, \r\n            T" +
                    ".runbeg_dt AS Presc_RunbegDt, \r\n            T.runend_dt AS Presc_RunendDt, \r\n   " +
                    "         T.mdoc_id AS Presc_MdocId, \r\n            T.presc_state_id AS Presc_Pres" +
                    "cStateId, \r\n            T.cabinet_id AS Presc_CabinetId, \r\n            T.runemp_" +
                    "id AS Presc_RunempId, \r\n            T.creator_id AS Presc_CreatorId, \r\n         " +
                    "   T.prunend_dt AS Presc_PrunendDt, \r\n            T.presc_time_id AS Presc_Presc" +
                    "TimeId, \r\n            T.parent_id AS Presc_ParentId, \r\n            T.sign_dt AS " +
                    "Presc_SignDt, \r\n            T.order_num AS Presc_OrderNum, \r\n            T.order" +
                    "_add AS Presc_OrderAdd, \r\n            T.appendix_id AS Presc_AppendixId, \r\n     " +
                    "       T.lab_searching AS Presc_LabSearching, \r\n            T.xray_referral_id A" +
                    "S Presc_XrayReferralId, \r\n            T.tmodel AS Presc_Tmodel, \r\n            T." +
                    "reason AS Presc_Reason, \r\n            T.attendance AS Presc_Attendance, \r\n      " +
                    "      T.lpu AS Presc_Lpu, \r\n            T.show_prunbeg_dt AS Presc_ShowPrunbegDt" +
                    ", \r\n            T.additional AS Presc_Additional, \r\n            T.auto_sign AS P" +
                    "resc_AutoSign, \r\n            True AS _from0\r\n        FROM PostgresEntitiesStoreC" +
                    "ontainer.prescs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Ambtickets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView759()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2394);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Ambtickets\r\n        [PostgresModel.Ambticket]");
            viewString.Append("(T1.Ambticket_Id, T1.Ambticket_EmpoId, T1.Ambticket_EmpcId, T1.Ambticket_Servpla");
            viewString.Append("ceId, T1.Ambticket_GoalId, T1.Ambticket_TravmId, T1.Ambticket_IdocId, T1.Ambtick");
            viewString.Append("et_ResultId, T1.Ambticket_EmpcancelId, T1.Ambticket_CancelDate, T1.Ambticket_Sta");
            viewString.Append("tusId, T1.Ambticket_TravmDate, T1.Ambticket_DispstateId, T1.Ambticket_SubresultI");
            viewString.Append("d, T1.Ambticket_Otdel, T1.Ambticket_Sysdate, T1.Ambticket_Course, T1.Ambticket_C");
            viewString.Append("hildNumber, T1.Ambticket_Medicalcare, T1.Ambticket_ExportFoms, T1.Ambticket_Medi");
            viewString.Append("calcareForm, T1.Ambticket_PeopleRelation, T1.Ambticket_FieldWork, T1.Ambticket_P");
            viewString.Append("rimaryCareOrganization, T1.Ambticket_DispRefusalIsAll, T1.Ambticket_ExportFomsCo");
            viewString.Append("mment, T1.Ambticket_VisitReason, T1.Ambticket_IsSelfarrival)\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.id AS Ambticket_Id, \r\n            T.empo_id AS Ambticke");
            viewString.Append("t_EmpoId, \r\n            T.empc_id AS Ambticket_EmpcId, \r\n            T.servplace");
            viewString.Append("_id AS Ambticket_ServplaceId, \r\n            T.goal_id AS Ambticket_GoalId, \r\n   ");
            viewString.Append("         T.travm_id AS Ambticket_TravmId, \r\n            T.idoc_id AS Ambticket_I");
            viewString.Append("docId, \r\n            T.result_id AS Ambticket_ResultId, \r\n            T.empcance");
            viewString.Append("l_id AS Ambticket_EmpcancelId, \r\n            T.cancel_date AS Ambticket_CancelDa");
            viewString.Append("te, \r\n            T.status_id AS Ambticket_StatusId, \r\n            T.travm_date ");
            viewString.Append("AS Ambticket_TravmDate, \r\n            T.dispstate_id AS Ambticket_DispstateId, \r");
            viewString.Append("\n            T.subresult_id AS Ambticket_SubresultId, \r\n            T.otdel AS A");
            viewString.Append("mbticket_Otdel, \r\n            T.sysdate AS Ambticket_Sysdate, \r\n            T.co");
            viewString.Append("urse AS Ambticket_Course, \r\n            T.child_number AS Ambticket_ChildNumber,");
            viewString.Append(" \r\n            T.medicalcare AS Ambticket_Medicalcare, \r\n            T.export_fo");
            viewString.Append("ms AS Ambticket_ExportFoms, \r\n            T.medicalcare_form AS Ambticket_Medica");
            viewString.Append("lcareForm, \r\n            T.people_relation AS Ambticket_PeopleRelation, \r\n      ");
            viewString.Append("      T.field_work AS Ambticket_FieldWork, \r\n            T.primary_care_organiza");
            viewString.Append("tion AS Ambticket_PrimaryCareOrganization, \r\n            T.disp_refusal_is_all A");
            viewString.Append("S Ambticket_DispRefusalIsAll, \r\n            T.export_foms_comment AS Ambticket_E");
            viewString.Append("xportFomsComment, \r\n            T.visit_reason AS Ambticket_VisitReason, \r\n     ");
            viewString.Append("       T.is_selfarrival AS Ambticket_IsSelfarrival, \r\n            True AS _from0");
            viewString.Append("\r\n        FROM PostgresEntitiesStoreContainer.ambtickets AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Ambtickets", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Servplaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView760()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Servplaces", @"
    SELECT VALUE -- Constructing Servplaces
        [PostgresModel.Servplace](T1.Servplace_Name, T1.Servplace_FomsCode, T1.Servplace_Oid, T1.Servplace_Show, T1.Servplace_Name2, T1.Servplace_Status)
    FROM (
        SELECT 
            T.name AS Servplace_Name, 
            T.foms_code AS Servplace_FomsCode, 
            T.oid AS Servplace_Oid, 
            T.show AS Servplace_Show, 
            T.name2 AS Servplace_Name2, 
            T.status AS Servplace_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.servplaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TickRes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView761()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TickRes", @"
    SELECT VALUE -- Constructing TickRes
        [PostgresModel.TickRes](T1.TickRes_Name, T1.TickRes_FomsCode, T1.TickRes_Oid, T1.TickRes_Medicalcondition, T1.TickRes_Show)
    FROM (
        SELECT 
            T.name AS TickRes_Name, 
            T.foms_code AS TickRes_FomsCode, 
            T.oid AS TickRes_Oid, 
            T.medicalcondition AS TickRes_Medicalcondition, 
            T.show AS TickRes_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tick_res AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TickSubres
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView762()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TickSubres", @"
    SELECT VALUE -- Constructing TickSubres
        [PostgresModel.TickSubres](T1.TickSubres_Name, T1.TickSubres_FomsCode, T1.TickSubres_Oid, T1.TickSubres_Medicalcondition, T1.TickSubres_Show)
    FROM (
        SELECT 
            T.name AS TickSubres_Name, 
            T.foms_code AS TickSubres_FomsCode, 
            T.oid AS TickSubres_Oid, 
            T.medicalcondition AS TickSubres_Medicalcondition, 
            T.show AS TickSubres_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tick_subres AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VisitGoals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView763()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VisitGoals", @"
    SELECT VALUE -- Constructing VisitGoals
        [PostgresModel.VisitGoal](T1.VisitGoal_Name, T1.VisitGoal_Tfoms, T1.VisitGoal_Show, T1.VisitGoal_Name2, T1.VisitGoal_Status, T1.VisitGoal_Oid)
    FROM (
        SELECT 
            T.name AS VisitGoal_Name, 
            T.tfoms AS VisitGoal_Tfoms, 
            T.show AS VisitGoal_Show, 
            T.name2 AS VisitGoal_Name2, 
            T.status AS VisitGoal_Status, 
            T.oid AS VisitGoal_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.visit_goals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView764()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Countries", @"
    SELECT VALUE -- Constructing Countries
        [PostgresModel.Country](T1.Country_Oid, T1.Country_Name, T1.Country_CodeBd, T1.Country_CodeMp, T1.Country_Show)
    FROM (
        SELECT 
            T.oid AS Country_Oid, 
            T.name AS Country_Name, 
            T.code_bd AS Country_CodeBd, 
            T.code_mp AS Country_CodeMp, 
            T.show AS Country_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Pinfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView765()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3352);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Pinfos\r\n        [PostgresModel.Pinfo](T1.Pinf");
            viewString.Append("o_Oid, T1.Pinfo_BloodGr, T1.Pinfo_BlooodRez, T1.Pinfo_Marriage, T1.Pinfo_Naciona");
            viewString.Append("lity, T1.Pinfo_Education, T1.Pinfo_LivingCondition, T1.Pinfo_Liveplace, T1.Pinfo");
            viewString.Append("_Regplace, T1.Pinfo_Socialrank, T1.Pinfo_Favorkind, T1.Pinfo_Dispgroup, T1.Pinfo");
            viewString.Append("_Country, T1.Pinfo_ParentStatusId, T1.Pinfo_ParentSurname, T1.Pinfo_ParentName, ");
            viewString.Append("T1.Pinfo_ParentPatron, T1.Pinfo_BurnPlace, T1.Pinfo_FlurolastDt, T1.Pinfo_Flurop");
            viewString.Append("lanDt, T1.Pinfo_AmbulDt, T1.Pinfo_StacionarDt, T1.Pinfo_SanatorDt, T1.Pinfo_Spec");
            viewString.Append("Dt, T1.Pinfo_DaystacDt, T1.Pinfo_Alko, T1.Pinfo_Narko, T1.Pinfo_Smok, T1.Pinfo_H");
            viewString.Append("ardLife, T1.Pinfo_RecipeLgotType, T1.Pinfo_Grouphealth, T1.Pinfo_Inn, T1.Pinfo_P");
            viewString.Append("honeHome, T1.Pinfo_PhoneMobile, T1.Pinfo_Icd10Id, T1.Pinfo_Sysdate, T1.Pinfo_Und");
            viewString.Append("efinedPac, T1.Pinfo_Uek, T1.Pinfo_PeopleProfession, T1.Pinfo_IsAgreementPac, T1.");
            viewString.Append("Pinfo_Alien, T1.Pinfo_Birthtime, T1.Pinfo_PersonalAgreement, T1.Pinfo_PersonalAg");
            viewString.Append("reementDate, T1.Pinfo_Socialgroup, T1.Pinfo_DiplomaticStatus)\r\n    FROM (\r\n     ");
            viewString.Append("   SELECT \r\n            T.oid AS Pinfo_Oid, \r\n            T.blood_gr AS Pinfo_Bl");
            viewString.Append("oodGr, \r\n            T.bloood_rez AS Pinfo_BlooodRez, \r\n            T.marriage A");
            viewString.Append("S Pinfo_Marriage, \r\n            T.nacionality AS Pinfo_Nacionality, \r\n          ");
            viewString.Append("  T.education AS Pinfo_Education, \r\n            T.living_condition AS Pinfo_Livi");
            viewString.Append("ngCondition, \r\n            T.liveplace AS Pinfo_Liveplace, \r\n            T.regpl");
            viewString.Append("ace AS Pinfo_Regplace, \r\n            T.socialrank AS Pinfo_Socialrank, \r\n       ");
            viewString.Append("     T.favorkind AS Pinfo_Favorkind, \r\n            T.dispgroup AS Pinfo_Dispgrou");
            viewString.Append("p, \r\n            T.country AS Pinfo_Country, \r\n            T.parent_status_id AS");
            viewString.Append(" Pinfo_ParentStatusId, \r\n            T.parent_surname AS Pinfo_ParentSurname, \r\n");
            viewString.Append("            T.parent_name AS Pinfo_ParentName, \r\n            T.parent_patron AS ");
            viewString.Append("Pinfo_ParentPatron, \r\n            T.burn_place AS Pinfo_BurnPlace, \r\n           ");
            viewString.Append(" T.flurolast_dt AS Pinfo_FlurolastDt, \r\n            T.fluroplan_dt AS Pinfo_Flur");
            viewString.Append("oplanDt, \r\n            T.ambul_dt AS Pinfo_AmbulDt, \r\n            T.stacionar_dt");
            viewString.Append(" AS Pinfo_StacionarDt, \r\n            T.sanator_dt AS Pinfo_SanatorDt, \r\n        ");
            viewString.Append("    T.spec_dt AS Pinfo_SpecDt, \r\n            T.daystac_dt AS Pinfo_DaystacDt, \r\n");
            viewString.Append("            T.alko AS Pinfo_Alko, \r\n            T.narko AS Pinfo_Narko, \r\n      ");
            viewString.Append("      T.smok AS Pinfo_Smok, \r\n            T.hard_life AS Pinfo_HardLife, \r\n     ");
            viewString.Append("       T.recipe_lgot_type AS Pinfo_RecipeLgotType, \r\n            T.grouphealth A");
            viewString.Append("S Pinfo_Grouphealth, \r\n            T.inn AS Pinfo_Inn, \r\n            T.phone_hom");
            viewString.Append("e AS Pinfo_PhoneHome, \r\n            T.phone_mobile AS Pinfo_PhoneMobile, \r\n     ");
            viewString.Append("       T.icd10_id AS Pinfo_Icd10Id, \r\n            T.sysdate AS Pinfo_Sysdate, \r\n");
            viewString.Append("            T.undefined_pac AS Pinfo_UndefinedPac, \r\n            T.uek AS Pinfo_");
            viewString.Append("Uek, \r\n            T.people_profession AS Pinfo_PeopleProfession, \r\n            ");
            viewString.Append("T.is_agreement_pac AS Pinfo_IsAgreementPac, \r\n            T.alien AS Pinfo_Alien");
            viewString.Append(", \r\n            T.birthtime AS Pinfo_Birthtime, \r\n            T.personal_agreeme");
            viewString.Append("nt AS Pinfo_PersonalAgreement, \r\n            T.personal_agreement_date AS Pinfo_");
            viewString.Append("PersonalAgreementDate, \r\n            T.socialgroup AS Pinfo_Socialgroup, \r\n     ");
            viewString.Append("       T.diplomatic_status AS Pinfo_DiplomaticStatus, \r\n            True AS _fro");
            viewString.Append("m0\r\n        FROM PostgresEntitiesStoreContainer.pinfos AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Pinfos", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Nacionalities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView766()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Nacionalities", @"
    SELECT VALUE -- Constructing Nacionalities
        [PostgresModel.Nacionality](T1.Nacionality_Oid, T1.Nacionality_Parent, T1.Nacionality_Name, T1.Nacionality_Synonim, T1.Nacionality_Id, T1.Nacionality_Parentid)
    FROM (
        SELECT 
            T.oid AS Nacionality_Oid, 
            T.parent AS Nacionality_Parent, 
            T.name AS Nacionality_Name, 
            T.synonim AS Nacionality_Synonim, 
            T.id AS Nacionality_Id, 
            T.parentid AS Nacionality_Parentid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.nacionalities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Liveplaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView767()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Liveplaces", @"
    SELECT VALUE -- Constructing Liveplaces
        [PostgresModel.Liveplace](T1.Liveplace_Oid, T1.Liveplace_Name, T1.Liveplace_Show, T1.Liveplace_Name2, T1.Liveplace_Status)
    FROM (
        SELECT 
            T.oid AS Liveplace_Oid, 
            T.name AS Liveplace_Name, 
            T.show AS Liveplace_Show, 
            T.name2 AS Liveplace_Name2, 
            T.status AS Liveplace_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.liveplaces AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Socialranks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView768()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Socialranks", @"
    SELECT VALUE -- Constructing Socialranks
        [PostgresModel.Socialrank](T1.Socialrank_Oid, T1.Socialrank_Name, T1.Socialrank_Show, T1.Socialrank_Name2, T1.Socialrank_Status, T1.Socialrank_Code)
    FROM (
        SELECT 
            T.oid AS Socialrank_Oid, 
            T.name AS Socialrank_Name, 
            T.show AS Socialrank_Show, 
            T.name2 AS Socialrank_Name2, 
            T.status AS Socialrank_Status, 
            T.code AS Socialrank_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.socialranks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invalidkinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView769()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invalidkinds", @"
    SELECT VALUE -- Constructing Invalidkinds
        [PostgresModel.Invalidkind](T1.Invalidkind_Oid, T1.Invalidkind_Name, T1.Invalidkind_FomsCode)
    FROM (
        SELECT 
            T.oid AS Invalidkind_Oid, 
            T.name AS Invalidkind_Name, 
            T.foms_code AS Invalidkind_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invalidkinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Peopledoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView770()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Peopledoctypes", @"
    SELECT VALUE -- Constructing Peopledoctypes
        [PostgresModel.Peopledoctype](T1.Peopledoctype_Oid, T1.Peopledoctype_GasurfId, T1.Peopledoctype_FomsCode, T1.Peopledoctype_Name, T1.Peopledoctype_Show, T1.Peopledoctype_Name2, T1.Peopledoctype_Status, T1.Peopledoctype_MaskSeries, T1.Peopledoctype_MaskNumber, T1.Peopledoctype_Synonim, T1.Peopledoctype_Immediate)
    FROM (
        SELECT 
            T.oid AS Peopledoctype_Oid, 
            T.gasurf_id AS Peopledoctype_GasurfId, 
            T.foms_code AS Peopledoctype_FomsCode, 
            T.name AS Peopledoctype_Name, 
            T.show AS Peopledoctype_Show, 
            T.name2 AS Peopledoctype_Name2, 
            T.status AS Peopledoctype_Status, 
            T.mask_series AS Peopledoctype_MaskSeries, 
            T.mask_number AS Peopledoctype_MaskNumber, 
            T.synonim AS Peopledoctype_Synonim, 
            T.immediate AS Peopledoctype_Immediate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.peopledoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Travms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView771()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Travms", @"
    SELECT VALUE -- Constructing Travms
        [PostgresModel.Travm](T1.Travm_Name, T1.Travm_Code, T1.Travm_ParentId, T1.Travm_Syn, T1.Travm_Oid, T1.Travm_Show, T1.Travm_Name2, T1.Travm_Status)
    FROM (
        SELECT 
            T.name AS Travm_Name, 
            T.code AS Travm_Code, 
            T.parent_id AS Travm_ParentId, 
            T.syn AS Travm_Syn, 
            T.oid AS Travm_Oid, 
            T.show AS Travm_Show, 
            T.name2 AS Travm_Name2, 
            T.status AS Travm_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.travms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Favorkinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView772()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Favorkinds", @"
    SELECT VALUE -- Constructing Favorkinds
        [PostgresModel.Favorkind](T1.Favorkind_Oid, T1.Favorkind_RecipeLgotTypeId, T1.Favorkind_Name, T1.Favorkind_Code)
    FROM (
        SELECT 
            T.oid AS Favorkind_Oid, 
            T.recipe_lgot_type_id AS Favorkind_RecipeLgotTypeId, 
            T.name AS Favorkind_Name, 
            T.code AS Favorkind_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.favorkinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Premilitaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView773()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Premilitaries", @"
    SELECT VALUE -- Constructing Premilitaries
        [PostgresModel.Premilitary](T1.Premilitary_Oid, T1.Premilitary_PeopleOid, T1.Premilitary_StatementDt, T1.Premilitary_Icd10Id)
    FROM (
        SELECT 
            T.oid AS Premilitary_Oid, 
            T.people_oid AS Premilitary_PeopleOid, 
            T.statement_dt AS Premilitary_StatementDt, 
            T.icd10_id AS Premilitary_Icd10Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.premilitaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CureTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView774()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CureTypes", @"
    SELECT VALUE -- Constructing CureTypes
        [PostgresModel.CureType](T1.CureType_Oid, T1.CureType_Name)
    FROM (
        SELECT 
            T.oid AS CureType_Oid, 
            T.name AS CureType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cure_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Referrals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView775()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Referrals", @"
    SELECT VALUE -- Constructing Referrals
        [PostgresModel.Referral](T1.Referral_Oid, T1.Referral_PeopleOid, T1.Referral_IssueDt, T1.Referral_CureTypeOid)
    FROM (
        SELECT 
            T.oid AS Referral_Oid, 
            T.people_oid AS Referral_PeopleOid, 
            T.issue_dt AS Referral_IssueDt, 
            T.cure_type_oid AS Referral_CureTypeOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.referrals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tuberculezs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView776()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tuberculezs", @"
    SELECT VALUE -- Constructing Tuberculezs
        [PostgresModel.Tuberculez](T1.Tuberculez_Oid, T1.Tuberculez_PeopleOid, T1.Tuberculez_BeginDt, T1.Tuberculez_EndDt)
    FROM (
        SELECT 
            T.oid AS Tuberculez_Oid, 
            T.people_oid AS Tuberculez_PeopleOid, 
            T.begin_dt AS Tuberculez_BeginDt, 
            T.end_dt AS Tuberculez_EndDt, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tuberculezs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NursingBabies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView777()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NursingBabies", @"
    SELECT VALUE -- Constructing NursingBabies
        [PostgresModel.NursingBaby](T1.NursingBaby_Oid, T1.NursingBaby_PeopleOid, T1.NursingBaby_From0to3, T1.NursingBaby_From4to6, T1.NursingBaby_From7to9, T1.NursingBaby_GroupHealth, T1.NursingBaby_Icd10Id, T1.NursingBaby_HomedoctorEmpId, T1.NursingBaby_HomemedEmpId)
    FROM (
        SELECT 
            T.oid AS NursingBaby_Oid, 
            T.people_oid AS NursingBaby_PeopleOid, 
            T.from0to3 AS NursingBaby_From0to3, 
            T.from4to6 AS NursingBaby_From4to6, 
            T.from7to9 AS NursingBaby_From7to9, 
            T.group_health AS NursingBaby_GroupHealth, 
            T.icd10_id AS NursingBaby_Icd10Id, 
            T.homedoctor_emp_id AS NursingBaby_HomedoctorEmpId, 
            T.homemed_emp_id AS NursingBaby_HomemedEmpId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.nursing_babies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Prenatals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView778()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Prenatals", @"
    SELECT VALUE -- Constructing Prenatals
        [PostgresModel.Prenatal](T1.Prenatal_Oid, T1.Prenatal_PeopleOid, T1.Prenatal_LastCycleDt, T1.Prenatal_Patronage, T1.Prenatal_Reason, T1.Prenatal_GroupRiskId)
    FROM (
        SELECT 
            T.oid AS Prenatal_Oid, 
            T.people_oid AS Prenatal_PeopleOid, 
            T.last_cycle_dt AS Prenatal_LastCycleDt, 
            T.patronage AS Prenatal_Patronage, 
            T.reason AS Prenatal_Reason, 
            T.group_risk_id AS Prenatal_GroupRiskId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.prenatals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.GroupRisks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView779()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.GroupRisks", @"
    SELECT VALUE -- Constructing GroupRisks
        [PostgresModel.GroupRisk](T1.GroupRisk_Oid, T1.GroupRisk_Name)
    FROM (
        SELECT 
            T.oid AS GroupRisk_Oid, 
            T.name AS GroupRisk_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.group_risks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HardLives
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView780()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HardLives", @"
    SELECT VALUE -- Constructing HardLives
        [PostgresModel.HardLife](T1.HardLife_Oid, T1.HardLife_Name)
    FROM (
        SELECT 
            T.oid AS HardLife_Oid, 
            T.name AS HardLife_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hard_lives AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AmbtickStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView781()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AmbtickStatus", @"
    SELECT VALUE -- Constructing AmbtickStatus
        [PostgresModel.AmbtickStatus](T1.AmbtickStatus_Id, T1.AmbtickStatus_Name)
    FROM (
        SELECT 
            T.id AS AmbtickStatus_Id, 
            T.name AS AmbtickStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ambtick_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView782()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayTypes", @"
    SELECT VALUE -- Constructing PayTypes
        [PostgresModel.PayType](T1.PayType_Name, T1.PayType_FomsCode, T1.PayType_State, T1.PayType_Oid, T1.PayType_Priority)
    FROM (
        SELECT 
            T.name AS PayType_Name, 
            T.foms_code AS PayType_FomsCode, 
            T.state AS PayType_State, 
            T.oid AS PayType_Oid, 
            T.priority AS PayType_Priority, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SysuserRegions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView783()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SysuserRegions", @"
    SELECT VALUE -- Constructing SysuserRegions
        [PostgresModel.SysuserRegion](T1.SysuserRegion_Oid, T1.SysuserRegion_Sysuser, T1.SysuserRegion_Region)
    FROM (
        SELECT 
            T.oid AS SysuserRegion_Oid, 
            T.sysuser AS SysuserRegion_Sysuser, 
            T.region AS SysuserRegion_Region, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sysuser_regions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiagKinds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView784()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiagKinds", @"
    SELECT VALUE -- Constructing DiagKinds
        [PostgresModel.DiagKind](T1.DiagKind_Id, T1.DiagKind_Name, T1.DiagKind_FomsCode, T1.DiagKind_SortNum, T1.DiagKind_Show)
    FROM (
        SELECT 
            T.id AS DiagKind_Id, 
            T.name AS DiagKind_Name, 
            T.foms_code AS DiagKind_FomsCode, 
            T.sort_num AS DiagKind_SortNum, 
            T.show AS DiagKind_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diag_kinds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiagTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView785()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiagTypes", @"
    SELECT VALUE -- Constructing DiagTypes
        [PostgresModel.DiagType](T1.DiagType_Id, T1.DiagType_Name)
    FROM (
        SELECT 
            T.id AS DiagType_Id, 
            T.name AS DiagType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diag_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiagDetects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView786()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiagDetects", @"
    SELECT VALUE -- Constructing DiagDetects
        [PostgresModel.DiagDetect](T1.DiagDetect_Name, T1.DiagDetect_Oid, T1.DiagDetect_Show, T1.DiagDetect_Name2, T1.DiagDetect_Synonym, T1.DiagDetect_FomsCode, T1.DiagDetect_Status)
    FROM (
        SELECT 
            T.name AS DiagDetect_Name, 
            T.oid AS DiagDetect_Oid, 
            T.show AS DiagDetect_Show, 
            T.name2 AS DiagDetect_Name2, 
            T.synonym AS DiagDetect_Synonym, 
            T.foms_code AS DiagDetect_FomsCode, 
            T.status AS DiagDetect_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diag_detects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Diags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView787()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Diags", @"
    SELECT VALUE -- Constructing Diags
        [PostgresModel.Diag](T1.Diag_Id, T1.Diag_VisitId, T1.Diag_MdocId, T1.Diag_Text, T1.Diag_KindId, T1.Diag_TypeId, T1.Diag_DetectId, T1.Diag_DispStepId, T1.Diag_DispStageId, T1.Diag_CreateDt, T1.Diag_Showib, T1.Diag_DispgroupId, T1.Diag_Base, T1.Diag_SotrId, T1.Diag_Icd10Id, T1.Diag_PrescId, T1.Diag_Sysdate, T1.Diag_DoctorAction)
    FROM (
        SELECT 
            T.id AS Diag_Id, 
            T.visit_id AS Diag_VisitId, 
            T.mdoc_id AS Diag_MdocId, 
            T.text AS Diag_Text, 
            T.kind_id AS Diag_KindId, 
            T.type_id AS Diag_TypeId, 
            T.detect_id AS Diag_DetectId, 
            T.disp_step_id AS Diag_DispStepId, 
            T.disp_stage_id AS Diag_DispStageId, 
            T.create_dt AS Diag_CreateDt, 
            T.showib AS Diag_Showib, 
            T.dispgroup_id AS Diag_DispgroupId, 
            T.base AS Diag_Base, 
            T.sotr_id AS Diag_SotrId, 
            T.icd10_id AS Diag_Icd10Id, 
            T.presc_id AS Diag_PrescId, 
            T.sysdate AS Diag_Sysdate, 
            T.doctor_action AS Diag_DoctorAction, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AmbtickDiags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView788()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AmbtickDiags", @"
    SELECT VALUE -- Constructing AmbtickDiags
        [PostgresModel.AmbtickDiag](T1.AmbtickDiag_Oid, T1.AmbtickDiag_TicketOid, T1.AmbtickDiag_DiagOid, T1.AmbtickDiag_MdocOid)
    FROM (
        SELECT 
            T.oid AS AmbtickDiag_Oid, 
            T.ticket_oid AS AmbtickDiag_TicketOid, 
            T.diag_oid AS AmbtickDiag_DiagOid, 
            T.mdoc_oid AS AmbtickDiag_MdocOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ambtick_diags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView789()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescStates", @"
    SELECT VALUE -- Constructing PrescStates
        [PostgresModel.PrescState](T1.PrescState_Id, T1.PrescState_Name, T1.PrescState_Synonim)
    FROM (
        SELECT 
            T.id AS PrescState_Id, 
            T.name AS PrescState_Name, 
            T.synonim AS PrescState_Synonim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_states AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Presctypefolders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView790()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Presctypefolders", @"
    SELECT VALUE -- Constructing Presctypefolders
        [PostgresModel.Presctypefolder](T1.Presctypefolder_Id, T1.Presctypefolder_ParentId, T1.Presctypefolder_Name, T1.Presctypefolder_Del)
    FROM (
        SELECT 
            T.id AS Presctypefolder_Id, 
            T.parent_id AS Presctypefolder_ParentId, 
            T.name AS Presctypefolder_Name, 
            T.del AS Presctypefolder_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presctypefolders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicInputTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView791()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicInputTypes", @"
    SELECT VALUE -- Constructing MedicInputTypes
        [PostgresModel.MedicInputType](T1.MedicInputType_Oid, T1.MedicInputType_Name, T1.MedicInputType_MedicInputGroup)
    FROM (
        SELECT 
            T.oid AS MedicInputType_Oid, 
            T.name AS MedicInputType_Name, 
            T.medic_input_group AS MedicInputType_MedicInputGroup, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_input_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicFrequencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView792()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicFrequencies", @"
    SELECT VALUE -- Constructing MedicFrequencies
        [PostgresModel.MedicFrequency](T1.MedicFrequency_Oid, T1.MedicFrequency_Name, T1.MedicFrequency_Ncount)
    FROM (
        SELECT 
            T.oid AS MedicFrequency_Oid, 
            T.name AS MedicFrequency_Name, 
            T.ncount AS MedicFrequency_Ncount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_frequencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipePercents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView793()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipePercents", @"
    SELECT VALUE -- Constructing RecipePercents
        [PostgresModel.RecipePercent](T1.RecipePercent_Oid, T1.RecipePercent_Name, T1.RecipePercent_Npercent, T1.RecipePercent_IsDefault, T1.RecipePercent_TypeId, T1.RecipePercent_Synonym, T1.RecipePercent_BenefitFinancing)
    FROM (
        SELECT 
            T.oid AS RecipePercent_Oid, 
            T.name AS RecipePercent_Name, 
            T.npercent AS RecipePercent_Npercent, 
            T.is_default AS RecipePercent_IsDefault, 
            T.type_id AS RecipePercent_TypeId, 
            T.synonym AS RecipePercent_Synonym, 
            T.benefit_financing AS RecipePercent_BenefitFinancing, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_percents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView794()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeTypes", @"
    SELECT VALUE -- Constructing RecipeTypes
        [PostgresModel.RecipeType](T1.RecipeType_Oid, T1.RecipeType_Name)
    FROM (
        SELECT 
            T.oid AS RecipeType_Oid, 
            T.name AS RecipeType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Massunits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView795()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Massunits", @"
    SELECT VALUE -- Constructing Massunits
        [PostgresModel.Massunit](T1.Massunit_Oid, T1.Massunit_Name)
    FROM (
        SELECT 
            T.oid AS Massunit_Oid, 
            T.name AS Massunit_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.massunits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeLgotTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView796()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeLgotTypes", @"
    SELECT VALUE -- Constructing RecipeLgotTypes
        [PostgresModel.RecipeLgotType](T1.RecipeLgotType_Oid, T1.RecipeLgotType_Name)
    FROM (
        SELECT 
            T.oid AS RecipeLgotType_Oid, 
            T.name AS RecipeLgotType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_lgot_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeDurations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView797()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeDurations", @"
    SELECT VALUE -- Constructing RecipeDurations
        [PostgresModel.RecipeDuration](T1.RecipeDuration_Oid, T1.RecipeDuration_Name, T1.RecipeDuration_Norder, T1.RecipeDuration_IsDefault, T1.RecipeDuration_TypeId, T1.RecipeDuration_Synonym, T1.RecipeDuration_BenefitFinancing)
    FROM (
        SELECT 
            T.oid AS RecipeDuration_Oid, 
            T.name AS RecipeDuration_Name, 
            T.norder AS RecipeDuration_Norder, 
            T.is_default AS RecipeDuration_IsDefault, 
            T.type_id AS RecipeDuration_TypeId, 
            T.synonym AS RecipeDuration_Synonym, 
            T.benefit_financing AS RecipeDuration_BenefitFinancing, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_durations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Recipes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView798()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Recipes", "\r\n    SELECT VALUE -- Constructing Recipes\r\n        [PostgresModel.Recipe](T1.Rec" +
                    "ipe_Oid, T1.Recipe_MdocId, T1.Recipe_VisitId, T1.Recipe_SourceId, T1.Recipe_Type" +
                    "Id, T1.Recipe_EmpId, T1.Recipe_Icd10Id, T1.Recipe_Snils, T1.Recipe_PayTypeId, T1" +
                    ".Recipe_IdocAId, T1.Recipe_Ser, T1.Recipe_Num, T1.Recipe_Date, T1.Recipe_Duratio" +
                    "nId, T1.Recipe_PercentId, T1.Recipe_Dtd, T1.Recipe_Signa, T1.Recipe_Comment, T1." +
                    "Recipe_StatusId, T1.Recipe_LgotTypeId, T1.Recipe_FavorkindId, T1.Recipe_PrescId," +
                    " T1.Recipe_BenefitFinancing, T1.Recipe_RecipePrescriptionType)\r\n    FROM (\r\n    " +
                    "    SELECT \r\n            T.oid AS Recipe_Oid, \r\n            T.mdoc_id AS Recipe_" +
                    "MdocId, \r\n            T.visit_id AS Recipe_VisitId, \r\n            T.source_id AS" +
                    " Recipe_SourceId, \r\n            T.type_id AS Recipe_TypeId, \r\n            T.emp_" +
                    "id AS Recipe_EmpId, \r\n            T.icd10_id AS Recipe_Icd10Id, \r\n            T." +
                    "snils AS Recipe_Snils, \r\n            T.pay_type_id AS Recipe_PayTypeId, \r\n      " +
                    "      T.idoc_a_id AS Recipe_IdocAId, \r\n            T.ser AS Recipe_Ser, \r\n      " +
                    "      T.num AS Recipe_Num, \r\n            T.date AS Recipe_Date, \r\n            T." +
                    "duration_id AS Recipe_DurationId, \r\n            T.percent_id AS Recipe_PercentId" +
                    ", \r\n            T.dtd AS Recipe_Dtd, \r\n            T.signa AS Recipe_Signa, \r\n  " +
                    "          T.comment AS Recipe_Comment, \r\n            T.status_id AS Recipe_Statu" +
                    "sId, \r\n            T.lgot_type_id AS Recipe_LgotTypeId, \r\n            T.favorkin" +
                    "d_id AS Recipe_FavorkindId, \r\n            T.presc_id AS Recipe_PrescId, \r\n      " +
                    "      T.benefit_financing AS Recipe_BenefitFinancing, \r\n            T.recipe_pre" +
                    "scription_type AS Recipe_RecipePrescriptionType, \r\n            True AS _from0\r\n " +
                    "       FROM PostgresEntitiesStoreContainer.recipes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeMedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView799()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeMedics", "\r\n    SELECT VALUE -- Constructing RecipeMedics\r\n        [PostgresModel.RecipeMed" +
                    "ic](T1.RecipeMedic_Oid, T1.RecipeMedic_MedicName, T1.RecipeMedic_InputId, T1.Rec" +
                    "ipeMedic_RecipeId, T1.RecipeMedic_Count, T1.RecipeMedic_UnitId, T1.RecipeMedic_D" +
                    "uration, T1.RecipeMedic_Doza, T1.RecipeMedic_DozaUnitId, T1.RecipeMedic_Dtd, T1." +
                    "RecipeMedic_FrequencyId, T1.RecipeMedic_Tradenames, T1.RecipeMedic_Latinnames, T" +
                    "1.RecipeMedic_BenefitMedic, T1.RecipeMedic_Actmatter, T1.RecipeMedic_DateBegin, " +
                    "T1.RecipeMedic_PatientIsOwner, T1.RecipeMedic_GroupAppointment, T1.RecipeMedic_M" +
                    "edic, T1.RecipeMedic_DateEnd, T1.RecipeMedic_Sysdate)\r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.oid AS RecipeMedic_Oid, \r\n            T.medic_name AS RecipeMe" +
                    "dic_MedicName, \r\n            T.input_id AS RecipeMedic_InputId, \r\n            T." +
                    "recipe_id AS RecipeMedic_RecipeId, \r\n            T.count AS RecipeMedic_Count, \r" +
                    "\n            T.unit_id AS RecipeMedic_UnitId, \r\n            T.duration AS Recipe" +
                    "Medic_Duration, \r\n            T.doza AS RecipeMedic_Doza, \r\n            T.doza_u" +
                    "nit_id AS RecipeMedic_DozaUnitId, \r\n            T.dtd AS RecipeMedic_Dtd, \r\n    " +
                    "        T.frequency_id AS RecipeMedic_FrequencyId, \r\n            T.tradenames AS" +
                    " RecipeMedic_Tradenames, \r\n            T.latinnames AS RecipeMedic_Latinnames, \r" +
                    "\n            T.benefit_medic AS RecipeMedic_BenefitMedic, \r\n            T.actmat" +
                    "ter AS RecipeMedic_Actmatter, \r\n            T.date_begin AS RecipeMedic_DateBegi" +
                    "n, \r\n            T.patient_is_owner AS RecipeMedic_PatientIsOwner, \r\n           " +
                    " T.group_appointment AS RecipeMedic_GroupAppointment, \r\n            T.medic AS R" +
                    "ecipeMedic_Medic, \r\n            T.date_end AS RecipeMedic_DateEnd, \r\n           " +
                    " T.sysdate AS RecipeMedic_Sysdate, \r\n            True AS _from0\r\n        FROM Po" +
                    "stgresEntitiesStoreContainer.recipe_medics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ArealSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView800()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ArealSotrs", @"
    SELECT VALUE -- Constructing ArealSotrs
        [PostgresModel.ArealSotr](T1.ArealSotr_Oid, T1.ArealSotr_SotrId, T1.ArealSotr_ArealId, T1.ArealSotr_Isminesotr)
    FROM (
        SELECT 
            T.oid AS ArealSotr_Oid, 
            T.sotr_id AS ArealSotr_SotrId, 
            T.areal_id AS ArealSotr_ArealId, 
            T.isminesotr AS ArealSotr_Isminesotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areal_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServicePresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView801()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServicePresctypes", @"
    SELECT VALUE -- Constructing ServicePresctypes
        [PostgresModel.ServicePresctype](T1.ServicePresctype_Oid, T1.ServicePresctype_Presctype, T1.ServicePresctype_Service, T1.ServicePresctype_Datebegin, T1.ServicePresctype_Dateend)
    FROM (
        SELECT 
            T.oid AS ServicePresctype_Oid, 
            T.presctype AS ServicePresctype_Presctype, 
            T.service AS ServicePresctype_Service, 
            T.datebegin AS ServicePresctype_Datebegin, 
            T.dateend AS ServicePresctype_Dateend, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Insurprograms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView802()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Insurprograms", @"
    SELECT VALUE -- Constructing Insurprograms
        [PostgresModel.Insurprogram](T1.Insurprogram_Oid, T1.Insurprogram_Name, T1.Insurprogram_FomsCode)
    FROM (
        SELECT 
            T.oid AS Insurprogram_Oid, 
            T.name AS Insurprogram_Name, 
            T.foms_code AS Insurprogram_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.insurprograms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServicePrices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView803()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServicePrices", @"
    SELECT VALUE -- Constructing ServicePrices
        [PostgresModel.ServicePrice](T1.ServicePrice_Oid, T1.ServicePrice_Services, T1.ServicePrice_Name, T1.ServicePrice_Insurprogram, T1.ServicePrice_ServicePriceCategory, T1.ServicePrice_Price, T1.ServicePrice_Fromdate, T1.ServicePrice_Todate, T1.ServicePrice_Prepay)
    FROM (
        SELECT 
            T.oid AS ServicePrice_Oid, 
            T.services AS ServicePrice_Services, 
            T.name AS ServicePrice_Name, 
            T.insurprogram AS ServicePrice_Insurprogram, 
            T.service_price_category AS ServicePrice_ServicePriceCategory, 
            T.price AS ServicePrice_Price, 
            T.fromdate AS ServicePrice_Fromdate, 
            T.todate AS ServicePrice_Todate, 
            T.prepay AS ServicePrice_Prepay, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_prices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Linetypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView804()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Linetypes", @"
    SELECT VALUE -- Constructing Linetypes
        [PostgresModel.Linetype](T1.Linetype_Oid, T1.Linetype_Name, T1.Linetype_Processduration, T1.Linetype_Notarriveduration, T1.Linetype_Name2, T1.Linetype_Show, T1.Linetype_Status, T1.Linetype_Shortname, T1.Linetype_OrderRec, T1.Linetype_MaxWorkTime, T1.Linetype_Processduration2, T1.Linetype_Notarriveduration2, T1.Linetype_MaxWorkTime2)
    FROM (
        SELECT 
            T.oid AS Linetype_Oid, 
            T.name AS Linetype_Name, 
            T.processduration AS Linetype_Processduration, 
            T.notarriveduration AS Linetype_Notarriveduration, 
            T.name2 AS Linetype_Name2, 
            T.show AS Linetype_Show, 
            T.status AS Linetype_Status, 
            T.shortname AS Linetype_Shortname, 
            T.OrderRec AS Linetype_OrderRec, 
            T.max_work_time AS Linetype_MaxWorkTime, 
            T.processduration2 AS Linetype_Processduration2, 
            T.notarriveduration2 AS Linetype_Notarriveduration2, 
            T.max_work_time2 AS Linetype_MaxWorkTime2, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.linetypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Registwindows
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView805()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Registwindows", @"
    SELECT VALUE -- Constructing Registwindows
        [PostgresModel.Registwindow](T1.Registwindow_Oid, T1.Registwindow_Name, T1.Registwindow_Name2, T1.Registwindow_Show, T1.Registwindow_Status, T1.Registwindow_Lastonlinedatetime)
    FROM (
        SELECT 
            T.oid AS Registwindow_Oid, 
            T.name AS Registwindow_Name, 
            T.name2 AS Registwindow_Name2, 
            T.show AS Registwindow_Show, 
            T.status AS Registwindow_Status, 
            T.lastonlinedatetime AS Registwindow_Lastonlinedatetime, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registwindows AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProgressionStats
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView806()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProgressionStats", @"
    SELECT VALUE -- Constructing ProgressionStats
        [PostgresModel.ProgressionStat](T1.ProgressionStat_Oid, T1.ProgressionStat_Sysuser, T1.ProgressionStat_Registwindow, T1.ProgressionStat_Linetype, T1.ProgressionStat_Order, T1.ProgressionStat_PrintDt, T1.ProgressionStat_PlanDt, T1.ProgressionStat_FactDt, T1.ProgressionStat_Status, T1.ProgressionStat_OrderN, T1.ProgressionStat_CallId)
    FROM (
        SELECT 
            T.oid AS ProgressionStat_Oid, 
            T.sysuser AS ProgressionStat_Sysuser, 
            T.registwindow AS ProgressionStat_Registwindow, 
            T.linetype AS ProgressionStat_Linetype, 
            T.[order] AS ProgressionStat_Order, 
            T.print_dt AS ProgressionStat_PrintDt, 
            T.plan_dt AS ProgressionStat_PlanDt, 
            T.fact_dt AS ProgressionStat_FactDt, 
            T.status AS ProgressionStat_Status, 
            T.order_n AS ProgressionStat_OrderN, 
            T.call_id AS ProgressionStat_CallId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.progression_stats AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Progressions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView807()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Progressions", @"
    SELECT VALUE -- Constructing Progressions
        [PostgresModel.Progression](T1.Progression_Oid, T1.Progression_Linetype, T1.Progression_Order, T1.Progression_PrintDt, T1.Progression_PlanDt, T1.Progression_OrderN)
    FROM (
        SELECT 
            T.oid AS Progression_Oid, 
            T.linetype AS Progression_Linetype, 
            T.[order] AS Progression_Order, 
            T.print_dt AS Progression_PrintDt, 
            T.plan_dt AS Progression_PlanDt, 
            T.order_n AS Progression_OrderN, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.progressions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SysuserAudits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView808()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SysuserAudits", @"
    SELECT VALUE -- Constructing SysuserAudits
        [PostgresModel.SysuserAudit](T1.SysuserAudit_Oid, T1.SysuserAudit_Sysuser, T1.SysuserAudit_InDt, T1.SysuserAudit_OutDt)
    FROM (
        SELECT 
            T.oid AS SysuserAudit_Oid, 
            T.sysuser AS SysuserAudit_Sysuser, 
            T.in_dt AS SysuserAudit_InDt, 
            T.out_dt AS SysuserAudit_OutDt, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sysuser_audits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView809()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescSchedules", @"
    SELECT VALUE -- Constructing PrescSchedules
        [PostgresModel.PrescSchedule](T1.PrescSchedule_Id, T1.PrescSchedule_PrescId, T1.PrescSchedule_SheduleId)
    FROM (
        SELECT 
            T.id AS PrescSchedule_Id, 
            T.presc_id AS PrescSchedule_PrescId, 
            T.shedule_id AS PrescSchedule_SheduleId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_schedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemProtocoltemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView810()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemProtocoltemplates", @"
    SELECT VALUE -- Constructing SystemProtocoltemplates
        [PostgresModel.SystemProtocoltemplate](T1.SystemProtocoltemplate_Oid, T1.SystemProtocoltemplate_Name, T1.SystemProtocoltemplate_Text)
    FROM (
        SELECT 
            T.oid AS SystemProtocoltemplate_Oid, 
            T.name AS SystemProtocoltemplate_Name, 
            T.text AS SystemProtocoltemplate_Text, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_protocoltemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.UserProtocoltemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView811()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.UserProtocoltemplates", @"
    SELECT VALUE -- Constructing UserProtocoltemplates
        [PostgresModel.UserProtocoltemplate](T1.UserProtocoltemplate_Oid, T1.UserProtocoltemplate_Sysuser, T1.UserProtocoltemplate_Name, T1.UserProtocoltemplate_Text, T1.UserProtocoltemplate_Presctype)
    FROM (
        SELECT 
            T.oid AS UserProtocoltemplate_Oid, 
            T.sysuser AS UserProtocoltemplate_Sysuser, 
            T.name AS UserProtocoltemplate_Name, 
            T.text AS UserProtocoltemplate_Text, 
            T.presctype AS UserProtocoltemplate_Presctype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.user_protocoltemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.UserPresctemplatedetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView812()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.UserPresctemplatedetails", @"
    SELECT VALUE -- Constructing UserPresctemplatedetails
        [PostgresModel.UserPresctemplatedetail](T1.UserPresctemplatedetail_Oid, T1.UserPresctemplatedetail_Presctype, T1.UserPresctemplatedetail_Template, T1.UserPresctemplatedetail_Order)
    FROM (
        SELECT 
            T.oid AS UserPresctemplatedetail_Oid, 
            T.presctype AS UserPresctemplatedetail_Presctype, 
            T.template AS UserPresctemplatedetail_Template, 
            T.[order] AS UserPresctemplatedetail_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.user_presctemplatedetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.UserPresctemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView813()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.UserPresctemplates", @"
    SELECT VALUE -- Constructing UserPresctemplates
        [PostgresModel.UserPresctemplate](T1.UserPresctemplate_Oid, T1.UserPresctemplate_Sysuser, T1.UserPresctemplate_Name, T1.UserPresctemplate_Order)
    FROM (
        SELECT 
            T.oid AS UserPresctemplate_Oid, 
            T.sysuser AS UserPresctemplate_Sysuser, 
            T.name AS UserPresctemplate_Name, 
            T.[order] AS UserPresctemplate_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.user_presctemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Protocols
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView814()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Protocols", @"
    SELECT VALUE -- Constructing Protocols
        [PostgresModel.Protocol](T1.Protocol_PrescId, T1.Protocol_Content, T1.Protocol_Signdata)
    FROM (
        SELECT 
            T.presc_id AS Protocol_PrescId, 
            T.content AS Protocol_Content, 
            T.signdata AS Protocol_Signdata, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.protocols AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tstandards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView815()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tstandards", @"
    SELECT VALUE -- Constructing Tstandards
        [PostgresModel.Tstandard](T1.Tstandard_FkId, T1.Tstandard_FcName, T1.Tstandard_FnOrder, T1.Tstandard_FdOrderData, T1.Tstandard_FcComment, T1.Tstandard_FkStandartGroup)
    FROM (
        SELECT 
            T.fk_id AS Tstandard_FkId, 
            T.fc_name AS Tstandard_FcName, 
            T.fn_order AS Tstandard_FnOrder, 
            T.fd_order_data AS Tstandard_FdOrderData, 
            T.fc_comment AS Tstandard_FcComment, 
            T.fk_standart_group AS Tstandard_FkStandartGroup, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tstandards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView816()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodels", @"
    SELECT VALUE -- Constructing Tmodels
        [PostgresModel.Tmodel](T1.Tmodel_FkId, T1.Tmodel_FkStandard, T1.Tmodel_FnHospDayCount, T1.Tmodel_FnDocVisitCount, T1.Tmodel_FcDisabilityLen, T1.Tmodel_FcCodeMes, T1.Tmodel_Sex)
    FROM (
        SELECT 
            T.fk_id AS Tmodel_FkId, 
            T.fk_standard AS Tmodel_FkStandard, 
            T.fn_hosp_day_count AS Tmodel_FnHospDayCount, 
            T.fn_doc_visit_count AS Tmodel_FnDocVisitCount, 
            T.fc_disability_len AS Tmodel_FcDisabilityLen, 
            T.fc_code_mes AS Tmodel_FcCodeMes, 
            T.sex AS Tmodel_Sex, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmedservices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView817()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmedservices", @"
    SELECT VALUE -- Constructing Tmedservices
        [PostgresModel.Tmedservice](T1.Tmedservice_FkId, T1.Tmedservice_FcLetter, T1.Tmedservice_FnType, T1.Tmedservice_FnClass, T1.Tmedservice_FnKind, T1.Tmedservice_FnSubkind, T1.Tmedservice_FnDocworkpoint, T1.Tmedservice_FnNurseworkpoint, T1.Tmedservice_FcName, T1.Tmedservice_FkStandartGroup)
    FROM (
        SELECT 
            T.fk_id AS Tmedservice_FkId, 
            T.fc_letter AS Tmedservice_FcLetter, 
            T.fn_type AS Tmedservice_FnType, 
            T.fn_class AS Tmedservice_FnClass, 
            T.fn_kind AS Tmedservice_FnKind, 
            T.fn_subkind AS Tmedservice_FnSubkind, 
            T.fn_docworkpoint AS Tmedservice_FnDocworkpoint, 
            T.fn_nurseworkpoint AS Tmedservice_FnNurseworkpoint, 
            T.fc_name AS Tmedservice_FcName, 
            T.fk_standart_group AS Tmedservice_FkStandartGroup, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmedservices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tphases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView818()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tphases", @"
    SELECT VALUE -- Constructing Tphases
        [PostgresModel.Tphase](T1.Tphase_FkId, T1.Tphase_FcName)
    FROM (
        SELECT 
            T.fk_id AS Tphase_FkId, 
            T.fc_name AS Tphase_FcName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tphases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tstages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView819()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tstages", @"
    SELECT VALUE -- Constructing Tstages
        [PostgresModel.Tstage](T1.Tstage_FkId, T1.Tstage_FcName)
    FROM (
        SELECT 
            T.fk_id AS Tstage_FkId, 
            T.fc_name AS Tstage_FcName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tstages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Taftereffects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView820()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Taftereffects", @"
    SELECT VALUE -- Constructing Taftereffects
        [PostgresModel.Taftereffect](T1.Taftereffect_FkId, T1.Taftereffect_FcName)
    FROM (
        SELECT 
            T.fk_id AS Taftereffect_FkId, 
            T.fc_name AS Taftereffect_FcName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.taftereffects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView821()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tages", @"
    SELECT VALUE -- Constructing Tages
        [PostgresModel.Tage](T1.Tage_FkId, T1.Tage_FcName, T1.Tage_AgeFrom, T1.Tage_AgeTo)
    FROM (
        SELECT 
            T.fk_id AS Tage_FkId, 
            T.fc_name AS Tage_FcName, 
            T.age_from AS Tage_AgeFrom, 
            T.age_to AS Tage_AgeTo, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView822()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tconditions", @"
    SELECT VALUE -- Constructing Tconditions
        [PostgresModel.Tcondition](T1.Tcondition_FkId, T1.Tcondition_FcName)
    FROM (
        SELECT 
            T.fk_id AS Tcondition_FkId, 
            T.fc_name AS Tcondition_FcName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Awards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView823()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Awards", @"
    SELECT VALUE -- Constructing Awards
        [PostgresModel.Award](T1.Award_Oid, T1.Award_People, T1.Award_Number, T1.Award_Name, T1.Award_DateAward, T1.Award_Sysdate)
    FROM (
        SELECT 
            T.oid AS Award_Oid, 
            T.people AS Award_People, 
            T.number AS Award_Number, 
            T.name AS Award_Name, 
            T.date_award AS Award_DateAward, 
            T.sysdate AS Award_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.awards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispSteps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView824()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispSteps", @"
    SELECT VALUE -- Constructing DispSteps
        [PostgresModel.DispStep](T1.DispStep_Id, T1.DispStep_Name)
    FROM (
        SELECT 
            T.id AS DispStep_Id, 
            T.name AS DispStep_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_steps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispStages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView825()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispStages", @"
    SELECT VALUE -- Constructing DispStages
        [PostgresModel.DispStage](T1.DispStage_Id, T1.DispStage_Name, T1.DispStage_FomsCode)
    FROM (
        SELECT 
            T.id AS DispStage_Id, 
            T.name AS DispStage_Name, 
            T.foms_code AS DispStage_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_stages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Dispgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView826()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Dispgroups", @"
    SELECT VALUE -- Constructing Dispgroups
        [PostgresModel.Dispgroup](T1.Dispgroup_Id, T1.Dispgroup_Name)
    FROM (
        SELECT 
            T.id AS Dispgroup_Id, 
            T.name AS Dispgroup_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dispgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Educationtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView827()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Educationtypes", @"
    SELECT VALUE -- Constructing Educationtypes
        [PostgresModel.Educationtype](T1.Educationtype_Oid, T1.Educationtype_Id, T1.Educationtype_Name)
    FROM (
        SELECT 
            T.oid AS Educationtype_Oid, 
            T.id AS Educationtype_Id, 
            T.name AS Educationtype_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.educationtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodelservs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView828()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodelservs", @"
    SELECT VALUE -- Constructing Tmodelservs
        [PostgresModel.Tmodelserv](T1.Tmodelserv_Oid, T1.Tmodelserv_FkModelperiod, T1.Tmodelserv_FkServ, T1.Tmodelserv_FnRate, T1.Tmodelserv_FnFactor, T1.Tmodelserv_Indication)
    FROM (
        SELECT 
            T.oid AS Tmodelserv_Oid, 
            T.fk_modelperiod AS Tmodelserv_FkModelperiod, 
            T.fk_serv AS Tmodelserv_FkServ, 
            T.fn_rate AS Tmodelserv_FnRate, 
            T.fn_factor AS Tmodelserv_FnFactor, 
            T.indication AS Tmodelserv_Indication, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodelservs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodelperiods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView829()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodelperiods", @"
    SELECT VALUE -- Constructing Tmodelperiods
        [PostgresModel.Tmodelperiod](T1.Tmodelperiod_FkId, T1.Tmodelperiod_FkModel, T1.Tmodelperiod_FkPeriod, T1.Tmodelperiod_FnDuration, T1.Tmodelperiod_FcComment)
    FROM (
        SELECT 
            T.fk_id AS Tmodelperiod_FkId, 
            T.fk_model AS Tmodelperiod_FkModel, 
            T.fk_period AS Tmodelperiod_FkPeriod, 
            T.fn_duration AS Tmodelperiod_FnDuration, 
            T.fc_comment AS Tmodelperiod_FcComment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodelperiods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Positions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView830()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Positions", @"
    SELECT VALUE -- Constructing Positions
        [PostgresModel.Position](T1.Position_Oid, T1.Position_Id, T1.Position_Name)
    FROM (
        SELECT 
            T.oid AS Position_Oid, 
            T.id AS Position_Id, 
            T.name AS Position_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.positions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Recordtypeins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView831()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Recordtypeins", @"
    SELECT VALUE -- Constructing Recordtypeins
        [PostgresModel.Recordtypein](T1.Recordtypein_Oid, T1.Recordtypein_Id, T1.Recordtypein_Name)
    FROM (
        SELECT 
            T.oid AS Recordtypein_Oid, 
            T.id AS Recordtypein_Id, 
            T.name AS Recordtypein_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recordtypeins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Cardemployees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView832()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Cardemployees", "\r\n    SELECT VALUE -- Constructing Cardemployees\r\n        [PostgresModel.Cardempl" +
                    "oyee](T1.Cardemployee_HDate, T1.Cardemployee_HDateEnd, T1.Cardemployee_Oid, T1.C" +
                    "ardemployee_People, T1.Cardemployee_Id, T1.Cardemployee_Sysuser, T1.Cardemployee" +
                    "_Otdel, T1.Cardemployee_Post, T1.Cardemployee_DatePostBegin, T1.Cardemployee_Dat" +
                    "ePostEnd, T1.Cardemployee_Tabelnumber, T1.Cardemployee_Care, T1.Cardemployee_Con" +
                    "ditions, T1.Cardemployee_Position, T1.Cardemployee_Typein, T1.Cardemployee_Order" +
                    "in, T1.Cardemployee_Typeout, T1.Cardemployee_Orderout, T1.Cardemployee_Regime, T" +
                    "1.Cardemployee_Wage, T1.Cardemployee_Population, T1.Cardemployee_Positiontype)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.h_date AS Cardemployee_HDate, \r\n     " +
                    "       T.h_date_end AS Cardemployee_HDateEnd, \r\n            T.oid AS Cardemploye" +
                    "e_Oid, \r\n            T.people AS Cardemployee_People, \r\n            T.id AS Card" +
                    "employee_Id, \r\n            T.sysuser AS Cardemployee_Sysuser, \r\n            T.ot" +
                    "del AS Cardemployee_Otdel, \r\n            T.post AS Cardemployee_Post, \r\n        " +
                    "    T.date_post_begin AS Cardemployee_DatePostBegin, \r\n            T.date_post_e" +
                    "nd AS Cardemployee_DatePostEnd, \r\n            T.tabelnumber AS Cardemployee_Tabe" +
                    "lnumber, \r\n            T.care AS Cardemployee_Care, \r\n            T.conditions A" +
                    "S Cardemployee_Conditions, \r\n            T.position AS Cardemployee_Position, \r\n" +
                    "            T.typein AS Cardemployee_Typein, \r\n            T.orderin AS Cardempl" +
                    "oyee_Orderin, \r\n            T.typeout AS Cardemployee_Typeout, \r\n            T.o" +
                    "rderout AS Cardemployee_Orderout, \r\n            T.regime AS Cardemployee_Regime," +
                    " \r\n            T.wage AS Cardemployee_Wage, \r\n            T.population AS Cardem" +
                    "ployee_Population, \r\n            T.positiontype AS Cardemployee_Positiontype, \r\n" +
                    "            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.cardempl" +
                    "oyees AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Recordtypeouts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView833()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Recordtypeouts", @"
    SELECT VALUE -- Constructing Recordtypeouts
        [PostgresModel.Recordtypeout](T1.Recordtypeout_Oid, T1.Recordtypeout_Id, T1.Recordtypeout_Name)
    FROM (
        SELECT 
            T.oid AS Recordtypeout_Oid, 
            T.id AS Recordtypeout_Id, 
            T.name AS Recordtypeout_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recordtypeouts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Positiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView834()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Positiontypes", @"
    SELECT VALUE -- Constructing Positiontypes
        [PostgresModel.Positiontype](T1.Positiontype_Oid, T1.Positiontype_Id, T1.Positiontype_Name)
    FROM (
        SELECT 
            T.oid AS Positiontype_Oid, 
            T.id AS Positiontype_Id, 
            T.name AS Positiontype_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.positiontypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medicalcares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView835()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medicalcares", @"
    SELECT VALUE -- Constructing Medicalcares
        [PostgresModel.Medicalcare](T1.Medicalcare_Oid, T1.Medicalcare_Name, T1.Medicalcare_Id, T1.Medicalcare_FomsCode, T1.Medicalcare_Show, T1.Medicalcare_Name2, T1.Medicalcare_Status, T1.Medicalcare_Parent)
    FROM (
        SELECT 
            T.oid AS Medicalcare_Oid, 
            T.name AS Medicalcare_Name, 
            T.id AS Medicalcare_Id, 
            T.foms_code AS Medicalcare_FomsCode, 
            T.show AS Medicalcare_Show, 
            T.name2 AS Medicalcare_Name2, 
            T.status AS Medicalcare_Status, 
            T.parent AS Medicalcare_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medicalcares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Regimes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView836()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Regimes", @"
    SELECT VALUE -- Constructing Regimes
        [PostgresModel.Regime](T1.Regime_Oid, T1.Regime_Id, T1.Regime_Name)
    FROM (
        SELECT 
            T.oid AS Regime_Oid, 
            T.id AS Regime_Id, 
            T.name AS Regime_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.regimes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medicalconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView837()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medicalconditions", @"
    SELECT VALUE -- Constructing Medicalconditions
        [PostgresModel.Medicalcondition](T1.Medicalcondition_Oid, T1.Medicalcondition_Name, T1.Medicalcondition_FomsCode)
    FROM (
        SELECT 
            T.oid AS Medicalcondition_Oid, 
            T.name AS Medicalcondition_Name, 
            T.foms_code AS Medicalcondition_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medicalconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Academicdegrees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView838()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Academicdegrees", @"
    SELECT VALUE -- Constructing Academicdegrees
        [PostgresModel.Academicdegree](T1.Academicdegree_Oid, T1.Academicdegree_Id, T1.Academicdegree_Name)
    FROM (
        SELECT 
            T.oid AS Academicdegree_Oid, 
            T.id AS Academicdegree_Id, 
            T.name AS Academicdegree_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.academicdegrees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Educationinstitutions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView839()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Educationinstitutions", @"
    SELECT VALUE -- Constructing Educationinstitutions
        [PostgresModel.Educationinstitution](T1.Educationinstitution_Oid, T1.Educationinstitution_Id, T1.Educationinstitution_Name, T1.Educationinstitution_Parent)
    FROM (
        SELECT 
            T.oid AS Educationinstitution_Oid, 
            T.id AS Educationinstitution_Id, 
            T.name AS Educationinstitution_Name, 
            T.parent AS Educationinstitution_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.educationinstitutions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Diplomaeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView840()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Diplomaeducations", @"
    SELECT VALUE -- Constructing Diplomaeducations
        [PostgresModel.Diplomaeducation](T1.Diplomaeducation_Oid, T1.Diplomaeducation_People, T1.Diplomaeducation_Educationinstitution, T1.Diplomaeducation_Educationtype, T1.Diplomaeducation_Specialities, T1.Diplomaeducation_DateGraduation, T1.Diplomaeducation_Diplomaserie, T1.Diplomaeducation_Diplomanumber, T1.Diplomaeducation_Sysdate)
    FROM (
        SELECT 
            T.oid AS Diplomaeducation_Oid, 
            T.people AS Diplomaeducation_People, 
            T.educationinstitution AS Diplomaeducation_Educationinstitution, 
            T.educationtype AS Diplomaeducation_Educationtype, 
            T.specialities AS Diplomaeducation_Specialities, 
            T.date_graduation AS Diplomaeducation_DateGraduation, 
            T.diplomaserie AS Diplomaeducation_Diplomaserie, 
            T.diplomanumber AS Diplomaeducation_Diplomanumber, 
            T.sysdate AS Diplomaeducation_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diplomaeducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Qualifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView841()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Qualifications", @"
    SELECT VALUE -- Constructing Qualifications
        [PostgresModel.Qualification](T1.Qualification_Oid, T1.Qualification_People, T1.Qualification_Qualificationcategory, T1.Qualification_Sertificatespeciality, T1.Qualification_DateQualification, T1.Qualification_Sysdate)
    FROM (
        SELECT 
            T.oid AS Qualification_Oid, 
            T.people AS Qualification_People, 
            T.qualificationcategory AS Qualification_Qualificationcategory, 
            T.sertificatespeciality AS Qualification_Sertificatespeciality, 
            T.date_qualification AS Qualification_DateQualification, 
            T.sysdate AS Qualification_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.qualifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Qualificationcategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView842()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Qualificationcategories", @"
    SELECT VALUE -- Constructing Qualificationcategories
        [PostgresModel.Qualificationcategory](T1.Qualificationcategory_Oid, T1.Qualificationcategory_Id, T1.Qualificationcategory_Name)
    FROM (
        SELECT 
            T.oid AS Qualificationcategory_Oid, 
            T.id AS Qualificationcategory_Id, 
            T.name AS Qualificationcategory_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.qualificationcategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sertificatespecialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView843()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sertificatespecialities", @"
    SELECT VALUE -- Constructing Sertificatespecialities
        [PostgresModel.Sertificatespeciality](T1.Sertificatespeciality_Oid, T1.Sertificatespeciality_Id, T1.Sertificatespeciality_Name, T1.Sertificatespeciality_Parent)
    FROM (
        SELECT 
            T.oid AS Sertificatespeciality_Oid, 
            T.id AS Sertificatespeciality_Id, 
            T.name AS Sertificatespeciality_Name, 
            T.parent AS Sertificatespeciality_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sertificatespecialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Skippaymentreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView844()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Skippaymentreasons", @"
    SELECT VALUE -- Constructing Skippaymentreasons
        [PostgresModel.Skippaymentreason](T1.Skippaymentreason_Oid, T1.Skippaymentreason_Name, T1.Skippaymentreason_Id)
    FROM (
        SELECT 
            T.oid AS Skippaymentreason_Oid, 
            T.name AS Skippaymentreason_Name, 
            T.id AS Skippaymentreason_Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.skippaymentreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Skippayments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView845()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Skippayments", @"
    SELECT VALUE -- Constructing Skippayments
        [PostgresModel.Skippayment](T1.Skippayment_Oid, T1.Skippayment_Skippaymentreason, T1.Skippayment_BeginDt, T1.Skippayment_EndDt, T1.Skippayment_People)
    FROM (
        SELECT 
            T.oid AS Skippayment_Oid, 
            T.skippaymentreason AS Skippayment_Skippaymentreason, 
            T.begin_dt AS Skippayment_BeginDt, 
            T.end_dt AS Skippayment_EndDt, 
            T.people AS Skippayment_People, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.skippayments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sertificateeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView846()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sertificateeducations", @"
    SELECT VALUE -- Constructing Sertificateeducations
        [PostgresModel.Sertificateeducation](T1.Sertificateeducation_Oid, T1.Sertificateeducation_People, T1.Sertificateeducation_Educationinstitution, T1.Sertificateeducation_Sertificatespeciality, T1.Sertificateeducation_DateSertificate, T1.Sertificateeducation_Sertificateserie, T1.Sertificateeducation_Sertificatenumber, T1.Sertificateeducation_Sysdate)
    FROM (
        SELECT 
            T.oid AS Sertificateeducation_Oid, 
            T.people AS Sertificateeducation_People, 
            T.educationinstitution AS Sertificateeducation_Educationinstitution, 
            T.sertificatespeciality AS Sertificateeducation_Sertificatespeciality, 
            T.date_sertificate AS Sertificateeducation_DateSertificate, 
            T.sertificateserie AS Sertificateeducation_Sertificateserie, 
            T.sertificatenumber AS Sertificateeducation_Sertificatenumber, 
            T.sysdate AS Sertificateeducation_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sertificateeducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Specialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView847()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Specialities", @"
    SELECT VALUE -- Constructing Specialities
        [PostgresModel.Speciality](T1.Speciality_Oid, T1.Speciality_Id, T1.Speciality_Name, T1.Speciality_Parent, T1.Speciality_Okso)
    FROM (
        SELECT 
            T.oid AS Speciality_Oid, 
            T.id AS Speciality_Id, 
            T.name AS Speciality_Name, 
            T.parent AS Speciality_Parent, 
            T.okso AS Speciality_Okso, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.specialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Skillimprovements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView848()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Skillimprovements", @"
    SELECT VALUE -- Constructing Skillimprovements
        [PostgresModel.Skillimprovement](T1.Skillimprovement_Oid, T1.Skillimprovement_People, T1.Skillimprovement_Educationinstitution, T1.Skillimprovement_Sertificatespeciality, T1.Skillimprovement_Cycle, T1.Skillimprovement_Hours, T1.Skillimprovement_DateSkill, T1.Skillimprovement_Diplomaserie, T1.Skillimprovement_Diplomanumber, T1.Skillimprovement_Issuedate, T1.Skillimprovement_Sysdate)
    FROM (
        SELECT 
            T.oid AS Skillimprovement_Oid, 
            T.people AS Skillimprovement_People, 
            T.educationinstitution AS Skillimprovement_Educationinstitution, 
            T.sertificatespeciality AS Skillimprovement_Sertificatespeciality, 
            T.cycle AS Skillimprovement_Cycle, 
            T.hours AS Skillimprovement_Hours, 
            T.date_skill AS Skillimprovement_DateSkill, 
            T.diplomaserie AS Skillimprovement_Diplomaserie, 
            T.diplomanumber AS Skillimprovement_Diplomanumber, 
            T.issuedate AS Skillimprovement_Issuedate, 
            T.sysdate AS Skillimprovement_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.skillimprovements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Retrainments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView849()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Retrainments", @"
    SELECT VALUE -- Constructing Retrainments
        [PostgresModel.Retrainment](T1.Retrainment_Oid, T1.Retrainment_People, T1.Retrainment_Educationinstitution, T1.Retrainment_Sertificatespeciality, T1.Retrainment_Diplomaserie, T1.Retrainment_Diplomanumber, T1.Retrainment_Hours, T1.Retrainment_DateRetrainment, T1.Retrainment_Sysdate)
    FROM (
        SELECT 
            T.oid AS Retrainment_Oid, 
            T.people AS Retrainment_People, 
            T.educationinstitution AS Retrainment_Educationinstitution, 
            T.sertificatespeciality AS Retrainment_Sertificatespeciality, 
            T.diplomaserie AS Retrainment_Diplomaserie, 
            T.diplomanumber AS Retrainment_Diplomanumber, 
            T.hours AS Retrainment_Hours, 
            T.date_retrainment AS Retrainment_DateRetrainment, 
            T.sysdate AS Retrainment_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.retrainments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Postgraduateeducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView850()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Postgraduateeducations", "\r\n    SELECT VALUE -- Constructing Postgraduateeducations\r\n        [PostgresModel" +
                    ".Postgraduateeducation](T1.Postgraduateeducation_Oid, T1.Postgraduateeducation_P" +
                    "eople, T1.Postgraduateeducation_Educationinstitution, T1.Postgraduateeducation_P" +
                    "osteducation, T1.Postgraduateeducation_Academicdegree, T1.Postgraduateeducation_" +
                    "Sertificatespeciality, T1.Postgraduateeducation_Datebegin, T1.Postgraduateeducat" +
                    "ion_Dateend, T1.Postgraduateeducation_Datedocum, T1.Postgraduateeducation_Diplom" +
                    "aserie, T1.Postgraduateeducation_Diplomanumber, T1.Postgraduateeducation_Sysdate" +
                    ")\r\n    FROM (\r\n        SELECT \r\n            T.oid AS Postgraduateeducation_Oid, " +
                    "\r\n            T.people AS Postgraduateeducation_People, \r\n            T.educatio" +
                    "ninstitution AS Postgraduateeducation_Educationinstitution, \r\n            T.post" +
                    "education AS Postgraduateeducation_Posteducation, \r\n            T.academicdegree" +
                    " AS Postgraduateeducation_Academicdegree, \r\n            T.sertificatespeciality " +
                    "AS Postgraduateeducation_Sertificatespeciality, \r\n            T.datebegin AS Pos" +
                    "tgraduateeducation_Datebegin, \r\n            T.dateend AS Postgraduateeducation_D" +
                    "ateend, \r\n            T.datedocum AS Postgraduateeducation_Datedocum, \r\n        " +
                    "    T.diplomaserie AS Postgraduateeducation_Diplomaserie, \r\n            T.diplom" +
                    "anumber AS Postgraduateeducation_Diplomanumber, \r\n            T.sysdate AS Postg" +
                    "raduateeducation_Sysdate, \r\n            True AS _from0\r\n        FROM PostgresEnt" +
                    "itiesStoreContainer.postgraduateeducations AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Posteducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView851()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Posteducations", @"
    SELECT VALUE -- Constructing Posteducations
        [PostgresModel.Posteducation](T1.Posteducation_Oid, T1.Posteducation_Id, T1.Posteducation_Name)
    FROM (
        SELECT 
            T.oid AS Posteducation_Oid, 
            T.id AS Posteducation_Id, 
            T.name AS Posteducation_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.posteducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RegistwindowLinetypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView852()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RegistwindowLinetypes", @"
    SELECT VALUE -- Constructing RegistwindowLinetypes
        [PostgresModel.RegistwindowLinetype](T1.RegistwindowLinetype_Oid, T1.RegistwindowLinetype_Registrywindow, T1.RegistwindowLinetype_Linetype)
    FROM (
        SELECT 
            T.oid AS RegistwindowLinetype_Oid, 
            T.registrywindow AS RegistwindowLinetype_Registrywindow, 
            T.linetype AS RegistwindowLinetype_Linetype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registwindow_linetypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.StafflistHeaders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView853()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.StafflistHeaders", @"
    SELECT VALUE -- Constructing StafflistHeaders
        [PostgresModel.StafflistHeader](T1.StafflistHeader_Oid, T1.StafflistHeader_OrderNumber, T1.StafflistHeader_Datebegin, T1.StafflistHeader_Dateend, T1.StafflistHeader_OrderDate)
    FROM (
        SELECT 
            T.oid AS StafflistHeader_Oid, 
            T.order_number AS StafflistHeader_OrderNumber, 
            T.datebegin AS StafflistHeader_Datebegin, 
            T.dateend AS StafflistHeader_Dateend, 
            T.order_date AS StafflistHeader_OrderDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.stafflist_headers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Zayavkas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView854()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Zayavkas", @"
    SELECT VALUE -- Constructing Zayavkas
        [PostgresModel.Zayavka](T1.Zayavka_Oid, T1.Zayavka_Dtcreate, T1.Zayavka_Dtchange, T1.Zayavka_Presctype, T1.Zayavka_Dt, T1.Zayavka_Status, T1.Zayavka_Fam, T1.Zayavka_Im, T1.Zayavka_Otch, T1.Zayavka_Borndt, T1.Zayavka_People, T1.Zayavka_Schedule, T1.Zayavka_Email, T1.Zayavka_Phone, T1.Zayavka_Isplat, T1.Zayavka_Kartanum, T1.Zayavka_PeopleBidStatus)
    FROM (
        SELECT 
            T.oid AS Zayavka_Oid, 
            T.dtcreate AS Zayavka_Dtcreate, 
            T.dtchange AS Zayavka_Dtchange, 
            T.presctype AS Zayavka_Presctype, 
            T.dt AS Zayavka_Dt, 
            T.status AS Zayavka_Status, 
            T.fam AS Zayavka_Fam, 
            T.im AS Zayavka_Im, 
            T.otch AS Zayavka_Otch, 
            T.borndt AS Zayavka_Borndt, 
            T.people AS Zayavka_People, 
            T.schedule AS Zayavka_Schedule, 
            T.email AS Zayavka_Email, 
            T.phone AS Zayavka_Phone, 
            T.isplat AS Zayavka_Isplat, 
            T.kartanum AS Zayavka_Kartanum, 
            T.people_bid_status AS Zayavka_PeopleBidStatus, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.zayavkas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ZayavkaStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView855()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ZayavkaStatus", @"
    SELECT VALUE -- Constructing ZayavkaStatus
        [PostgresModel.ZayavkaStatus](T1.ZayavkaStatus_Oid, T1.ZayavkaStatus_Name)
    FROM (
        SELECT 
            T.oid AS ZayavkaStatus_Oid, 
            T.name AS ZayavkaStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.zayavka_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Smscenters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView856()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Smscenters", @"
    SELECT VALUE -- Constructing Smscenters
        [PostgresModel.Smscenter](T1.Smscenter_Oid, T1.Smscenter_Numbertel, T1.Smscenter_Smstext, T1.Smscenter_Smsst, T1.Smscenter_Dateincoming, T1.Smscenter_Datesend, T1.Smscenter_People, T1.Smscenter_IdSmsCenter, T1.Smscenter_Fromphone, T1.Smscenter_Schedule)
    FROM (
        SELECT 
            T.oid AS Smscenter_Oid, 
            T.numbertel AS Smscenter_Numbertel, 
            T.smstext AS Smscenter_Smstext, 
            T.smsst AS Smscenter_Smsst, 
            T.dateincoming AS Smscenter_Dateincoming, 
            T.datesend AS Smscenter_Datesend, 
            T.people AS Smscenter_People, 
            T.id_sms_center AS Smscenter_IdSmsCenter, 
            T.fromphone AS Smscenter_Fromphone, 
            T.schedule AS Smscenter_Schedule, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.smscenters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Citizenships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView857()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Citizenships", @"
    SELECT VALUE -- Constructing Citizenships
        [PostgresModel.Citizenship](T1.Citizenship_Oid, T1.Citizenship_Id, T1.Citizenship_Name, T1.Citizenship_Show, T1.Citizenship_Name2, T1.Citizenship_Status, T1.Citizenship_Code)
    FROM (
        SELECT 
            T.oid AS Citizenship_Oid, 
            T.id AS Citizenship_Id, 
            T.name AS Citizenship_Name, 
            T.show AS Citizenship_Show, 
            T.name2 AS Citizenship_Name2, 
            T.status AS Citizenship_Status, 
            T.code AS Citizenship_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.citizenships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Militaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView858()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Militaries", @"
    SELECT VALUE -- Constructing Militaries
        [PostgresModel.Military](T1.Military_Oid, T1.Military_Id, T1.Military_Name)
    FROM (
        SELECT 
            T.oid AS Military_Oid, 
            T.id AS Military_Id, 
            T.name AS Military_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.militaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Marriages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView859()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Marriages", @"
    SELECT VALUE -- Constructing Marriages
        [PostgresModel.Marriage](T1.Marriage_Oid, T1.Marriage_Id, T1.Marriage_Name)
    FROM (
        SELECT 
            T.oid AS Marriage_Oid, 
            T.id AS Marriage_Id, 
            T.name AS Marriage_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.marriages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScheduleLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView860()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScheduleLogs", @"
    SELECT VALUE -- Constructing ScheduleLogs
        [PostgresModel.ScheduleLog](T1.ScheduleLog_Oid, T1.ScheduleLog_Operator, T1.ScheduleLog_Patient, T1.ScheduleLog_OperationDateTime, T1.ScheduleLog_Schedule, T1.ScheduleLog_Action, T1.ScheduleLog_Reason, T1.ScheduleLog_Schedulefrom)
    FROM (
        SELECT 
            T.oid AS ScheduleLog_Oid, 
            T.operator AS ScheduleLog_Operator, 
            T.patient AS ScheduleLog_Patient, 
            T.operation_date_time AS ScheduleLog_OperationDateTime, 
            T.schedule AS ScheduleLog_Schedule, 
            T.action AS ScheduleLog_Action, 
            T.reason AS ScheduleLog_Reason, 
            T.schedulefrom AS ScheduleLog_Schedulefrom, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.schedule_logs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Lpusettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView861()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Lpusettings", @"
    SELECT VALUE -- Constructing Lpusettings
        [PostgresModel.Lpusetting](T1.Lpusetting_Oid, T1.Lpusetting_Lpu, T1.Lpusetting_Settings, T1.Lpusetting_Custvaluepar, T1.Lpusetting_Optimisticlockfield, T1.Lpusetting_Gcrecord)
    FROM (
        SELECT 
            T.oid AS Lpusetting_Oid, 
            T.lpu AS Lpusetting_Lpu, 
            T.settings AS Lpusetting_Settings, 
            T.custvaluepar AS Lpusetting_Custvaluepar, 
            T.optimisticlockfield AS Lpusetting_Optimisticlockfield, 
            T.gcrecord AS Lpusetting_Gcrecord, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpusettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Systemsettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView862()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Systemsettings", @"
    SELECT VALUE -- Constructing Systemsettings
        [PostgresModel.Systemsetting](T1.Systemsetting_Oid, T1.Systemsetting_Param, T1.Systemsetting_Valuepar, T1.Systemsetting_Description, T1.Systemsetting_Forall)
    FROM (
        SELECT 
            T.oid AS Systemsetting_Oid, 
            T.param AS Systemsetting_Param, 
            T.valuepar AS Systemsetting_Valuepar, 
            T.description AS Systemsetting_Description, 
            T.forall AS Systemsetting_Forall, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.systemsettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TstandartGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView863()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TstandartGroups", @"
    SELECT VALUE -- Constructing TstandartGroups
        [PostgresModel.TstandartGroup](T1.TstandartGroup_FkId, T1.TstandartGroup_FcName, T1.TstandartGroup_FlType)
    FROM (
        SELECT 
            T.fk_id AS TstandartGroup_FkId, 
            T.fc_name AS TstandartGroup_FcName, 
            T.fl_type AS TstandartGroup_FlType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tstandart_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tperiods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView864()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tperiods", @"
    SELECT VALUE -- Constructing Tperiods
        [PostgresModel.Tperiod](T1.Tperiod_FkId, T1.Tperiod_FcName)
    FROM (
        SELECT 
            T.fk_id AS Tperiod_FkId, 
            T.fc_name AS Tperiod_FcName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tperiods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Screenings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView865()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Screenings", @"
    SELECT VALUE -- Constructing Screenings
        [PostgresModel.Screening](T1.Screening_Oid, T1.Screening_Title, T1.Screening_Sex, T1.Screening_Mandatory)
    FROM (
        SELECT 
            T.oid AS Screening_Oid, 
            T.title AS Screening_Title, 
            T.sex AS Screening_Sex, 
            T.mandatory AS Screening_Mandatory, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.screenings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScreeningPresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView866()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScreeningPresctypes", @"
    SELECT VALUE -- Constructing ScreeningPresctypes
        [PostgresModel.ScreeningPresctype](T1.ScreeningPresctype_Oid, T1.ScreeningPresctype_Screening, T1.ScreeningPresctype_Presctype, T1.ScreeningPresctype_BeginAge, T1.ScreeningPresctype_EndAge, T1.ScreeningPresctype_Period)
    FROM (
        SELECT 
            T.oid AS ScreeningPresctype_Oid, 
            T.screening AS ScreeningPresctype_Screening, 
            T.presctype AS ScreeningPresctype_Presctype, 
            T.begin_age AS ScreeningPresctype_BeginAge, 
            T.end_age AS ScreeningPresctype_EndAge, 
            T.period AS ScreeningPresctype_Period, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.screening_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AmbulCardInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView867()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AmbulCardInfos", @"
    SELECT VALUE -- Constructing AmbulCardInfos
        [PostgresModel.AmbulCardInfo](T1.AmbulCardInfo_Oid, T1.AmbulCardInfo_DispType)
    FROM (
        SELECT 
            T.oid AS AmbulCardInfo_Oid, 
            T.disp_type AS AmbulCardInfo_DispType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ambul_card_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScheduleTemplateDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView868()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScheduleTemplateDetails", "\r\n    SELECT VALUE -- Constructing ScheduleTemplateDetails\r\n        [PostgresMode" +
                    "l.ScheduleTemplateDetail](T1.ScheduleTemplateDetail_Oid, T1.ScheduleTemplateDeta" +
                    "il_TemplateOid, T1.ScheduleTemplateDetail_Day, T1.ScheduleTemplateDetail_Prescty" +
                    "pe, T1.ScheduleTemplateDetail_State, T1.ScheduleTemplateDetail_Isbron, T1.Schedu" +
                    "leTemplateDetail_Insite, T1.ScheduleTemplateDetail_Cabinet, T1.ScheduleTemplateD" +
                    "etail_Isnapronly, T1.ScheduleTemplateDetail_Infopac, T1.ScheduleTemplateDetail_S" +
                    "tarton, T1.ScheduleTemplateDetail_Endon, T1.ScheduleTemplateDetail_Post, T1.Sche" +
                    "duleTemplateDetail_Maxvisitors, T1.ScheduleTemplateDetail_Financingtype)\r\n    FR" +
                    "OM (\r\n        SELECT \r\n            T.oid AS ScheduleTemplateDetail_Oid, \r\n      " +
                    "      T.template_oid AS ScheduleTemplateDetail_TemplateOid, \r\n            T.day " +
                    "AS ScheduleTemplateDetail_Day, \r\n            T.presctype AS ScheduleTemplateDeta" +
                    "il_Presctype, \r\n            T.state AS ScheduleTemplateDetail_State, \r\n         " +
                    "   T.isbron AS ScheduleTemplateDetail_Isbron, \r\n            T.insite AS Schedule" +
                    "TemplateDetail_Insite, \r\n            T.cabinet AS ScheduleTemplateDetail_Cabinet" +
                    ", \r\n            T.isnapronly AS ScheduleTemplateDetail_Isnapronly, \r\n           " +
                    " T.infopac AS ScheduleTemplateDetail_Infopac, \r\n            T.starton AS Schedul" +
                    "eTemplateDetail_Starton, \r\n            T.endon AS ScheduleTemplateDetail_Endon, " +
                    "\r\n            T.post AS ScheduleTemplateDetail_Post, \r\n            T.maxvisitors" +
                    " AS ScheduleTemplateDetail_Maxvisitors, \r\n            T.financingtype AS Schedul" +
                    "eTemplateDetail_Financingtype, \r\n            True AS _from0\r\n        FROM Postgr" +
                    "esEntitiesStoreContainer.schedule_template_details AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScheduleTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView869()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScheduleTemplates", @"
    SELECT VALUE -- Constructing ScheduleTemplates
        [PostgresModel.ScheduleTemplate](T1.ScheduleTemplate_Oid, T1.ScheduleTemplate_Sysuser, T1.ScheduleTemplate_Otdel, T1.ScheduleTemplate_Name, T1.ScheduleTemplate_Sotr)
    FROM (
        SELECT 
            T.oid AS ScheduleTemplate_Oid, 
            T.sysuser AS ScheduleTemplate_Sysuser, 
            T.otdel AS ScheduleTemplate_Otdel, 
            T.name AS ScheduleTemplate_Name, 
            T.sotr AS ScheduleTemplate_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.schedule_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Dispstates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView870()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Dispstates", @"
    SELECT VALUE -- Constructing Dispstates
        [PostgresModel.Dispstate](T1.Dispstate_Name, T1.Dispstate_Oid, T1.Dispstate_Show, T1.Dispstate_Name2, T1.Dispstate_Status)
    FROM (
        SELECT 
            T.name AS Dispstate_Name, 
            T.oid AS Dispstate_Oid, 
            T.show AS Dispstate_Show, 
            T.name2 AS Dispstate_Name2, 
            T.status AS Dispstate_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dispstates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispCardDiags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView871()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispCardDiags", @"
    SELECT VALUE -- Constructing DispCardDiags
        [PostgresModel.DispCardDiag](T1.DispCardDiag_Oid, T1.DispCardDiag_DiagId, T1.DispCardDiag_DispCard)
    FROM (
        SELECT 
            T.oid AS DispCardDiag_Oid, 
            T.diag_id AS DispCardDiag_DiagId, 
            T.disp_card AS DispCardDiag_DispCard, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_card_diags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispCardInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView872()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispCardInfos", @"
    SELECT VALUE -- Constructing DispCardInfos
        [PostgresModel.DispCardInfo](T1.DispCardInfo_Oid, T1.DispCardInfo_StartDate, T1.DispCardInfo_EndDate, T1.DispCardInfo_DiagMain, T1.DispCardInfo_DispSotr, T1.DispCardInfo_DispGroup, T1.DispCardInfo_CauseClose, T1.DispCardInfo_MdocId)
    FROM (
        SELECT 
            T.oid AS DispCardInfo_Oid, 
            T.start_date AS DispCardInfo_StartDate, 
            T.end_date AS DispCardInfo_EndDate, 
            T.diag_main AS DispCardInfo_DiagMain, 
            T.disp_sotr AS DispCardInfo_DispSotr, 
            T.disp_group AS DispCardInfo_DispGroup, 
            T.cause_close AS DispCardInfo_CauseClose, 
            T.mdoc_id AS DispCardInfo_MdocId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_card_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispCloseCauses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView873()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispCloseCauses", @"
    SELECT VALUE -- Constructing DispCloseCauses
        [PostgresModel.DispCloseCause](T1.DispCloseCause_Oid, T1.DispCloseCause_Name, T1.DispCloseCause_Show, T1.DispCloseCause_FomsCode)
    FROM (
        SELECT 
            T.oid AS DispCloseCause_Oid, 
            T.name AS DispCloseCause_Name, 
            T.show AS DispCloseCause_Show, 
            T.foms_code AS DispCloseCause_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_close_causes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PregnantCardInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView874()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(8478);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PregnantCardInfos\r\n        [PostgresModel.Pre");
            viewString.Append("gnantCardInfo](T1.PregnantCardInfo_Oid, T1.PregnantCardInfo_Yavka, T1.PregnantCa");
            viewString.Append("rdInfo_LivingCondition, T1.PregnantCardInfo_JobHazard, T1.PregnantCardInfo_Husba");
            viewString.Append("nd, T1.PregnantCardInfo_HusbandAge, T1.PregnantCardInfo_HusbandWorkplace, T1.Pre");
            viewString.Append("gnantCardInfo_BirthDate, T1.PregnantCardInfo_DdoStart, T1.PregnantCardInfo_DdoEn");
            viewString.Append("d, T1.PregnantCardInfo_SicklistNum, T1.PregnantCardInfo_Botkin, T1.PregnantCardI");
            viewString.Append("nfo_Tbc, T1.PregnantCardInfo_Hepatitis, T1.PregnantCardInfo_Allergy, T1.Pregnant");
            viewString.Append("CardInfo_VenerealDiseases, T1.PregnantCardInfo_BirthSertNum, T1.PregnantCardInfo");
            viewString.Append("_BirthSertDate, T1.PregnantCardInfo_IsWorking, T1.PregnantCardInfo_SexualLifeSta");
            viewString.Append("rt, T1.PregnantCardInfo_PrevPregnancyRunning, T1.PregnantCardInfo_PostBirthRunni");
            viewString.Append("ng, T1.PregnantCardInfo_IsContraception, T1.PregnantCardInfo_ContraceptionType, ");
            viewString.Append("T1.PregnantCardInfo_Inheritance, T1.PregnantCardInfo_Cr, T1.PregnantCardInfo_Cd,");
            viewString.Append(" T1.PregnantCardInfo_Ag, T1.PregnantCardInfo_OldDiseases, T1.PregnantCardInfo_Ol");
            viewString.Append("dFemaleDiseases, T1.PregnantCardInfo_HusbandHealth, T1.PregnantCardInfo_Height, ");
            viewString.Append("T1.PregnantCardInfo_Weight, T1.PregnantCardInfo_Ad, T1.PregnantCardInfo_Ps, T1.P");
            viewString.Append("regnantCardInfo_WalkarroundInspection, T1.PregnantCardInfo_MammaryGland, T1.Preg");
            viewString.Append("nantCardInfo_PrelumAbdominale, T1.PregnantCardInfo_Heart, T1.PregnantCardInfo_Lu");
            viewString.Append("ngs, T1.PregnantCardInfo_Stomach, T1.PregnantCardInfo_Liver, T1.PregnantCardInfo");
            viewString.Append("_Kidney, T1.PregnantCardInfo_CurrPregnancyRunning, T1.PregnantCardInfo_MensesLas");
            viewString.Append("tDate, T1.PregnantCardInfo_FetusFirstMoveDate, T1.PregnantCardInfo_PelvisSize, T");
            viewString.Append("1.PregnantCardInfo_Is, T1.PregnantCardInfo_Pm, T1.PregnantCardInfo_FirstInspecti");
            viewString.Append("onDate, T1.PregnantCardInfo_FirstInspectionDiag, T1.PregnantCardInfo_FirstInspec");
            viewString.Append("tionSotr, T1.PregnantCardInfo_FundusUteriHeight, T1.PregnantCardInfo_FetusPositi");
            viewString.Append("on, T1.PregnantCardInfo_FetusPresentation, T1.PregnantCardInfo_FetusHeartbeat, T");
            viewString.Append("1.PregnantCardInfo_FetusMovement, T1.PregnantCardInfo_ExternalGenetalOrgan, T1.P");
            viewString.Append("regnantCardInfo_BreastfeedingInfo, T1.PregnantCardInfo_BreastfeedingInfoDate, T1");
            viewString.Append(".PregnantCardInfo_Vagina, T1.PregnantCardInfo_Rks, T1.PregnantCardInfo_UterineBo");
            viewString.Append("dy, T1.PregnantCardInfo_Appendage, T1.PregnantCardInfo_Parametrium, T1.PregnantC");
            viewString.Append("ardInfo_Peculiarities, T1.PregnantCardInfo_FirstMensesIsImmediate, T1.PregnantCa");
            viewString.Append("rdInfo_FirstMensesDuration, T1.PregnantCardInfo_FirstMensesInterval, T1.Pregnant");
            viewString.Append("CardInfo_FirstMensesIntensiveness, T1.PregnantCardInfo_FirstMensesIsPainful, T1.");
            viewString.Append("PregnantCardInfo_FirstMensesPainfulTime, T1.PregnantCardInfo_FirstMensesPeculiar");
            viewString.Append("ities, T1.PregnantCardInfo_FirstMensesPeculiaritiesFrom, T1.PregnantCardInfo_Emp");
            viewString.Append("loyFrom, T1.PregnantCardInfo_FirstMensesEstablishPeriod, T1.PregnantCardInfo_Flg");
            viewString.Append("Date, T1.PregnantCardInfo_FlgNum, T1.PregnantCardInfo_HusbandTel, T1.PregnantCar");
            viewString.Append("dInfo_LiveplaceChangingStreet, T1.PregnantCardInfo_LiveplaceChangingHouse, T1.Pr");
            viewString.Append("egnantCardInfo_LiveplaceChangingFlat, T1.PregnantCardInfo_UterineNeck)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.oid AS PregnantCardInfo_Oid, \r\n            T.");
            viewString.Append("yavka AS PregnantCardInfo_Yavka, \r\n            T.living_condition AS PregnantCar");
            viewString.Append("dInfo_LivingCondition, \r\n            T.job_hazard AS PregnantCardInfo_JobHazard,");
            viewString.Append(" \r\n            T.husband AS PregnantCardInfo_Husband, \r\n            T.husband_ag");
            viewString.Append("e AS PregnantCardInfo_HusbandAge, \r\n            T.husband_workplace AS PregnantC");
            viewString.Append("ardInfo_HusbandWorkplace, \r\n            T.birth_date AS PregnantCardInfo_BirthDa");
            viewString.Append("te, \r\n            T.ddo_start AS PregnantCardInfo_DdoStart, \r\n            T.ddo_");
            viewString.Append("end AS PregnantCardInfo_DdoEnd, \r\n            T.sicklist_num AS PregnantCardInfo");
            viewString.Append("_SicklistNum, \r\n            T.botkin AS PregnantCardInfo_Botkin, \r\n            T");
            viewString.Append(".tbc AS PregnantCardInfo_Tbc, \r\n            T.hepatitis AS PregnantCardInfo_Hepa");
            viewString.Append("titis, \r\n            T.allergy AS PregnantCardInfo_Allergy, \r\n            T.vene");
            viewString.Append("real_diseases AS PregnantCardInfo_VenerealDiseases, \r\n            T.birth_sert_n");
            viewString.Append("um AS PregnantCardInfo_BirthSertNum, \r\n            T.birth_sert_date AS Pregnant");
            viewString.Append("CardInfo_BirthSertDate, \r\n            T.is_working AS PregnantCardInfo_IsWorking");
            viewString.Append(", \r\n            T.sexual_life_start AS PregnantCardInfo_SexualLifeStart, \r\n     ");
            viewString.Append("       T.prev_pregnancy_running AS PregnantCardInfo_PrevPregnancyRunning, \r\n    ");
            viewString.Append("        T.post_birth_running AS PregnantCardInfo_PostBirthRunning, \r\n           ");
            viewString.Append(" T.is_contraception AS PregnantCardInfo_IsContraception, \r\n            T.contrac");
            viewString.Append("eption_type AS PregnantCardInfo_ContraceptionType, \r\n            T.inheritance A");
            viewString.Append("S PregnantCardInfo_Inheritance, \r\n            T.cr AS PregnantCardInfo_Cr, \r\n   ");
            viewString.Append("         T.cd AS PregnantCardInfo_Cd, \r\n            T.ag AS PregnantCardInfo_Ag,");
            viewString.Append(" \r\n            T.old_diseases AS PregnantCardInfo_OldDiseases, \r\n            T.o");
            viewString.Append("ld_female_diseases AS PregnantCardInfo_OldFemaleDiseases, \r\n            T.husban");
            viewString.Append("d_health AS PregnantCardInfo_HusbandHealth, \r\n            T.height AS PregnantCa");
            viewString.Append("rdInfo_Height, \r\n            T.weight AS PregnantCardInfo_Weight, \r\n            ");
            viewString.Append("T.ad AS PregnantCardInfo_Ad, \r\n            T.ps AS PregnantCardInfo_Ps, \r\n      ");
            viewString.Append("      T.walkarround_inspection AS PregnantCardInfo_WalkarroundInspection, \r\n    ");
            viewString.Append("        T.mammary_gland AS PregnantCardInfo_MammaryGland, \r\n            T.prelum");
            viewString.Append("_abdominale AS PregnantCardInfo_PrelumAbdominale, \r\n            T.heart AS Pregn");
            viewString.Append("antCardInfo_Heart, \r\n            T.lungs AS PregnantCardInfo_Lungs, \r\n          ");
            viewString.Append("  T.stomach AS PregnantCardInfo_Stomach, \r\n            T.liver AS PregnantCardIn");
            viewString.Append("fo_Liver, \r\n            T.kidney AS PregnantCardInfo_Kidney, \r\n            T.cur");
            viewString.Append("r_pregnancy_running AS PregnantCardInfo_CurrPregnancyRunning, \r\n            T.me");
            viewString.Append("nses_last_date AS PregnantCardInfo_MensesLastDate, \r\n            T.fetus_first_m");
            viewString.Append("ove_date AS PregnantCardInfo_FetusFirstMoveDate, \r\n            T.pelvis_size AS ");
            viewString.Append("PregnantCardInfo_PelvisSize, \r\n            T.[is] AS PregnantCardInfo_Is, \r\n    ");
            viewString.Append("        T.pm AS PregnantCardInfo_Pm, \r\n            T.first_inspection_date AS Pr");
            viewString.Append("egnantCardInfo_FirstInspectionDate, \r\n            T.first_inspection_diag AS Pre");
            viewString.Append("gnantCardInfo_FirstInspectionDiag, \r\n            T.first_inspection_sotr AS Preg");
            viewString.Append("nantCardInfo_FirstInspectionSotr, \r\n            T.fundus_uteri_height AS Pregnan");
            viewString.Append("tCardInfo_FundusUteriHeight, \r\n            T.fetus_position AS PregnantCardInfo_");
            viewString.Append("FetusPosition, \r\n            T.fetus_presentation AS PregnantCardInfo_FetusPrese");
            viewString.Append("ntation, \r\n            T.fetus_heartbeat AS PregnantCardInfo_FetusHeartbeat, \r\n ");
            viewString.Append("           T.fetus_movement AS PregnantCardInfo_FetusMovement, \r\n            T.e");
            viewString.Append("xternal_genetal_organ AS PregnantCardInfo_ExternalGenetalOrgan, \r\n            T.");
            viewString.Append("breastfeeding_info AS PregnantCardInfo_BreastfeedingInfo, \r\n            T.breast");
            viewString.Append("feeding_info_date AS PregnantCardInfo_BreastfeedingInfoDate, \r\n            T.vag");
            viewString.Append("ina AS PregnantCardInfo_Vagina, \r\n            T.rks AS PregnantCardInfo_Rks, \r\n ");
            viewString.Append("           T.uterine_body AS PregnantCardInfo_UterineBody, \r\n            T.appen");
            viewString.Append("dage AS PregnantCardInfo_Appendage, \r\n            T.parametrium AS PregnantCardI");
            viewString.Append("nfo_Parametrium, \r\n            T.peculiarities AS PregnantCardInfo_Peculiarities");
            viewString.Append(", \r\n            T.first_menses_is_immediate AS PregnantCardInfo_FirstMensesIsImm");
            viewString.Append("ediate, \r\n            T.first_menses_duration AS PregnantCardInfo_FirstMensesDur");
            viewString.Append("ation, \r\n            T.first_menses_interval AS PregnantCardInfo_FirstMensesInte");
            viewString.Append("rval, \r\n            T.first_menses_intensiveness AS PregnantCardInfo_FirstMenses");
            viewString.Append("Intensiveness, \r\n            T.first_menses_is_painful AS PregnantCardInfo_First");
            viewString.Append("MensesIsPainful, \r\n            T.first_menses_painful_time AS PregnantCardInfo_F");
            viewString.Append("irstMensesPainfulTime, \r\n            T.first_menses_peculiarities AS PregnantCar");
            viewString.Append("dInfo_FirstMensesPeculiarities, \r\n            T.first_menses_peculiarities_from ");
            viewString.Append("AS PregnantCardInfo_FirstMensesPeculiaritiesFrom, \r\n            T.employ_from AS");
            viewString.Append(" PregnantCardInfo_EmployFrom, \r\n            T.first_menses_establish_period AS P");
            viewString.Append("regnantCardInfo_FirstMensesEstablishPeriod, \r\n            T.flg_date AS Pregnant");
            viewString.Append("CardInfo_FlgDate, \r\n            T.flg_num AS PregnantCardInfo_FlgNum, \r\n        ");
            viewString.Append("    T.husband_tel AS PregnantCardInfo_HusbandTel, \r\n            T.liveplace_chan");
            viewString.Append("ging_street AS PregnantCardInfo_LiveplaceChangingStreet, \r\n            T.livepla");
            viewString.Append("ce_changing_house AS PregnantCardInfo_LiveplaceChangingHouse, \r\n            T.li");
            viewString.Append("veplace_changing_flat AS PregnantCardInfo_LiveplaceChangingFlat, \r\n            T");
            viewString.Append(".uterine_neck AS PregnantCardInfo_UterineNeck, \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM PostgresEntitiesStoreContainer.pregnant_card_infos AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PregnantCardInfos", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Pregnancies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView875()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Pregnancies", @"
    SELECT VALUE -- Constructing Pregnancies
        [PostgresModel.Pregnancy](T1.Pregnancy_Oid, T1.Pregnancy_Year, T1.Pregnancy_PregnancyResult, T1.Pregnancy_NewbornState, T1.Pregnancy_BreastfeedingDuration, T1.Pregnancy_BabyIsAlive, T1.Pregnancy_BirthPlace, T1.Pregnancy_BirthTakenBy, T1.Pregnancy_People)
    FROM (
        SELECT 
            T.oid AS Pregnancy_Oid, 
            T.year AS Pregnancy_Year, 
            T.pregnancy_result AS Pregnancy_PregnancyResult, 
            T.newborn_state AS Pregnancy_NewbornState, 
            T.breastfeeding_duration AS Pregnancy_BreastfeedingDuration, 
            T.baby_is_alive AS Pregnancy_BabyIsAlive, 
            T.birth_place AS Pregnancy_BirthPlace, 
            T.birth_taken_by AS Pregnancy_BirthTakenBy, 
            T.people AS Pregnancy_People, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pregnancies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BirthPlaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView876()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BirthPlaces", @"
    SELECT VALUE -- Constructing BirthPlaces
        [PostgresModel.BirthPlace](T1.BirthPlace_Oid, T1.BirthPlace_Name, T1.BirthPlace_Synonym)
    FROM (
        SELECT 
            T.oid AS BirthPlace_Oid, 
            T.name AS BirthPlace_Name, 
            T.synonym AS BirthPlace_Synonym, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.birth_places AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NewbornStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView877()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NewbornStates", @"
    SELECT VALUE -- Constructing NewbornStates
        [PostgresModel.NewbornState](T1.NewbornState_Oid, T1.NewbornState_Name)
    FROM (
        SELECT 
            T.oid AS NewbornState_Oid, 
            T.name AS NewbornState_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.newborn_states AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PregnancyRunnings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView878()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PregnancyRunnings", @"
    SELECT VALUE -- Constructing PregnancyRunnings
        [PostgresModel.PregnancyRunning](T1.PregnancyRunning_Oid, T1.PregnancyRunning_Name)
    FROM (
        SELECT 
            T.oid AS PregnancyRunning_Oid, 
            T.name AS PregnancyRunning_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pregnancy_runnings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PostBirthRunnings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView879()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PostBirthRunnings", @"
    SELECT VALUE -- Constructing PostBirthRunnings
        [PostgresModel.PostBirthRunning](T1.PostBirthRunning_Oid, T1.PostBirthRunning_Name)
    FROM (
        SELECT 
            T.oid AS PostBirthRunning_Oid, 
            T.name AS PostBirthRunning_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.post_birth_runnings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PregnancyResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView880()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PregnancyResults", @"
    SELECT VALUE -- Constructing PregnancyResults
        [PostgresModel.PregnancyResult](T1.PregnancyResult_Oid, T1.PregnancyResult_Name, T1.PregnancyResult_Synonym)
    FROM (
        SELECT 
            T.oid AS PregnancyResult_Oid, 
            T.name AS PregnancyResult_Name, 
            T.synonym AS PregnancyResult_Synonym, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pregnancy_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactorsIbs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView881()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactorsIbs", @"
    SELECT VALUE -- Constructing RiskFactorsIbs
        [PostgresModel.RiskFactorsIb](T1.RiskFactorsIb_Oid, T1.RiskFactorsIb_Name)
    FROM (
        SELECT 
            T.oid AS RiskFactorsIb_Oid, 
            T.name AS RiskFactorsIb_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors_ibs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactorsDiabetesSecondTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView882()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactorsDiabetesSecondTypes", @"
    SELECT VALUE -- Constructing RiskFactorsDiabetesSecondTypes
        [PostgresModel.RiskFactorsDiabetesSecondType](T1.RiskFactorsDiabetesSecondType_Oid, T1.RiskFactorsDiabetesSecondType_Name)
    FROM (
        SELECT 
            T.oid AS RiskFactorsDiabetesSecondType_Oid, 
            T.name AS RiskFactorsDiabetesSecondType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors_diabetes_second_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactorsDiabetesSecondTypePeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView883()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactorsDiabetesSecondTypePeople", @"
    SELECT VALUE -- Constructing RiskFactorsDiabetesSecondTypePeople
        [PostgresModel.RiskFactorsDiabetesSecondTypePerson](T1.RiskFactorsDiabetesSecondTypePerson_Oid, T1.RiskFactorsDiabetesSecondTypePerson_RiskFactorDiabetesSecondType, T1.RiskFactorsDiabetesSecondTypePerson_People)
    FROM (
        SELECT 
            T.oid AS RiskFactorsDiabetesSecondTypePerson_Oid, 
            T.risk_factor_diabetes_second_type AS RiskFactorsDiabetesSecondTypePerson_RiskFactorDiabetesSecondType, 
            T.people AS RiskFactorsDiabetesSecondTypePerson_People, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors_diabetes_second_type_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactorsIbsPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView884()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactorsIbsPeople", @"
    SELECT VALUE -- Constructing RiskFactorsIbsPeople
        [PostgresModel.RiskFactorsIbsPerson](T1.RiskFactorsIbsPerson_Oid, T1.RiskFactorsIbsPerson_RiskFactorIbs, T1.RiskFactorsIbsPerson_People)
    FROM (
        SELECT 
            T.oid AS RiskFactorsIbsPerson_Oid, 
            T.risk_factor_ibs AS RiskFactorsIbsPerson_RiskFactorIbs, 
            T.people AS RiskFactorsIbsPerson_People, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors_ibs_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MdocNumbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView885()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MdocNumbers", @"
    SELECT VALUE -- Constructing MdocNumbers
        [PostgresModel.MdocNumber](T1.MdocNumber_MdocId, T1.MdocNumber_Num, T1.MdocNumber_Year, T1.MdocNumber_DateGenerate, T1.MdocNumber_MdocTypeId, T1.MdocNumber_Prefix)
    FROM (
        SELECT 
            T.mdoc_id AS MdocNumber_MdocId, 
            T.num AS MdocNumber_Num, 
            T.year AS MdocNumber_Year, 
            T.date_generate AS MdocNumber_DateGenerate, 
            T.mdoc_type_id AS MdocNumber_MdocTypeId, 
            T.prefix AS MdocNumber_Prefix, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdoc_numbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ChildrenEvolutionHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView886()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ChildrenEvolutionHistories", @"
    SELECT VALUE -- Constructing ChildrenEvolutionHistories
        [PostgresModel.ChildrenEvolutionHistory](T1.ChildrenEvolutionHistory_Id, T1.ChildrenEvolutionHistory_PeopleId, T1.ChildrenEvolutionHistory_ChronicDiseases, T1.ChildrenEvolutionHistory_LivingConditions, T1.ChildrenEvolutionHistory_AdditionalData)
    FROM (
        SELECT 
            T.id AS ChildrenEvolutionHistory_Id, 
            T.people_id AS ChildrenEvolutionHistory_PeopleId, 
            T.chronic_diseases AS ChildrenEvolutionHistory_ChronicDiseases, 
            T.living_conditions AS ChildrenEvolutionHistory_LivingConditions, 
            T.additional_data AS ChildrenEvolutionHistory_AdditionalData, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.children_evolution_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScreeningPresctypeRiskFactIbs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView887()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScreeningPresctypeRiskFactIbs", @"
    SELECT VALUE -- Constructing ScreeningPresctypeRiskFactIbs
        [PostgresModel.ScreeningPresctypeRiskFactIb](T1.ScreeningPresctypeRiskFactIb_Oid, T1.ScreeningPresctypeRiskFactIb_ScreeningPresctype, T1.ScreeningPresctypeRiskFactIb_RiskFactorIbs)
    FROM (
        SELECT 
            T.oid AS ScreeningPresctypeRiskFactIb_Oid, 
            T.screening_presctype AS ScreeningPresctypeRiskFactIb_ScreeningPresctype, 
            T.risk_factor_ibs AS ScreeningPresctypeRiskFactIb_RiskFactorIbs, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.screening_presctype_risk_fact_ibs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScreeningPresctypeRiskFactDiabSecondTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView888()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScreeningPresctypeRiskFactDiabSecondTypes", @"
    SELECT VALUE -- Constructing ScreeningPresctypeRiskFactDiabSecondTypes
        [PostgresModel.ScreeningPresctypeRiskFactDiabSecondType](T1.ScreeningPresctypeRiskFactDiabSecondType_Oid, T1.ScreeningPresctypeRiskFactDiabSecondType_ScreeningPresctype, T1.ScreeningPresctypeRiskFactDiabSecondType_RiskFactorDiabetSecondType)
    FROM (
        SELECT 
            T.oid AS ScreeningPresctypeRiskFactDiabSecondType_Oid, 
            T.screening_presctype AS ScreeningPresctypeRiskFactDiabSecondType_ScreeningPresctype, 
            T.risk_factor_diabet_second_type AS ScreeningPresctypeRiskFactDiabSecondType_RiskFactorDiabetSecondType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.screening_presctype_risk_fact_diab_second_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrPresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView889()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrPresctypes", @"
    SELECT VALUE -- Constructing SotrPresctypes
        [PostgresModel.SotrPresctype](T1.SotrPresctype_Id, T1.SotrPresctype_PresctypeId, T1.SotrPresctype_Allow, T1.SotrPresctype_SpecId, T1.SotrPresctype_ProfileId, T1.SotrPresctype_IsDefault, T1.SotrPresctype_ProfileSpecId, T1.SotrPresctype_Appoint, T1.SotrPresctype_Execute, T1.SotrPresctype_Otdel, T1.SotrPresctype_Sysuser, T1.SotrPresctype_Oid, T1.SotrPresctype_Sotr, T1.SotrPresctype_MultiSign, T1.SotrPresctype_ShowInSchedule)
    FROM (
        SELECT 
            T.id AS SotrPresctype_Id, 
            T.presctype_id AS SotrPresctype_PresctypeId, 
            T.allow AS SotrPresctype_Allow, 
            T.spec_id AS SotrPresctype_SpecId, 
            T.profile_id AS SotrPresctype_ProfileId, 
            T.is_default AS SotrPresctype_IsDefault, 
            T.profile_spec_id AS SotrPresctype_ProfileSpecId, 
            T.appoint AS SotrPresctype_Appoint, 
            T.execute AS SotrPresctype_Execute, 
            T.otdel AS SotrPresctype_Otdel, 
            T.sysuser AS SotrPresctype_Sysuser, 
            T.oid AS SotrPresctype_Oid, 
            T.sotr AS SotrPresctype_Sotr, 
            T.multi_sign AS SotrPresctype_MultiSign, 
            T.show_in_schedule AS SotrPresctype_ShowInSchedule, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Sexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView890()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Sexes", @"
    SELECT VALUE -- Constructing Sexes
        [PostgresModel.Sex](T1.Sex_Id, T1.Sex_Name, T1.Sex_FomsCode)
    FROM (
        SELECT 
            T.id AS Sex_Id, 
            T.name AS Sex_Name, 
            T.foms_code AS Sex_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrMdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView891()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrMdoctypes", @"
    SELECT VALUE -- Constructing SotrMdoctypes
        [PostgresModel.SotrMdoctype](T1.SotrMdoctype_Id, T1.SotrMdoctype_Sysuser, T1.SotrMdoctype_Otdel, T1.SotrMdoctype_SpecId, T1.SotrMdoctype_Bind, T1.SotrMdoctype_MdoctypeId)
    FROM (
        SELECT 
            T.id AS SotrMdoctype_Id, 
            T.sysuser AS SotrMdoctype_Sysuser, 
            T.otdel AS SotrMdoctype_Otdel, 
            T.spec_id AS SotrMdoctype_SpecId, 
            T.bind AS SotrMdoctype_Bind, 
            T.mdoctype_id AS SotrMdoctype_MdoctypeId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_mdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DictionaryRights
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView892()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DictionaryRights", @"
    SELECT VALUE -- Constructing DictionaryRights
        [PostgresModel.DictionaryRight](T1.DictionaryRight_Right, T1.DictionaryRight_Dictionary, T1.DictionaryRight_Action)
    FROM (
        SELECT 
            T.[right] AS DictionaryRight_Right, 
            T.dictionary AS DictionaryRight_Dictionary, 
            T.action AS DictionaryRight_Action, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dictionary_rights AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Insurances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView893()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Insurances", @"
    SELECT VALUE -- Constructing Insurances
        [PostgresModel.Insurance](T1.Insurance_Oid, T1.Insurance_People, T1.Insurance_Ser, T1.Insurance_Num, T1.Insurance_Begindate, T1.Insurance_Enddate, T1.Insurance_Company, T1.Insurance_PayType, T1.Insurance_State, T1.Insurance_Notenddate, T1.Insurance_InsurOmsType, T1.Insurance_Extendeddate, T1.Insurance_Canceldate, T1.Insurance_InsuranceNumber, T1.Insurance_InsuranceState, T1.Insurance_Sysdate)
    FROM (
        SELECT 
            T.oid AS Insurance_Oid, 
            T.people AS Insurance_People, 
            T.ser AS Insurance_Ser, 
            T.num AS Insurance_Num, 
            T.begindate AS Insurance_Begindate, 
            T.enddate AS Insurance_Enddate, 
            T.company AS Insurance_Company, 
            T.pay_type AS Insurance_PayType, 
            T.state AS Insurance_State, 
            T.notenddate AS Insurance_Notenddate, 
            T.insur_oms_type AS Insurance_InsurOmsType, 
            T.extendeddate AS Insurance_Extendeddate, 
            T.canceldate AS Insurance_Canceldate, 
            T.insurance_number AS Insurance_InsuranceNumber, 
            T.insurance_state AS Insurance_InsuranceState, 
            T.sysdate AS Insurance_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.insurances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Insurcompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView894()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Insurcompanies", @"
    SELECT VALUE -- Constructing Insurcompanies
        [PostgresModel.Insurcompany](T1.Insurcompany_Oid, T1.Insurcompany_Code)
    FROM (
        SELECT 
            T.oid AS Insurcompany_Oid, 
            T.code AS Insurcompany_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.insurcompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InsurOmsTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView895()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InsurOmsTypes", @"
    SELECT VALUE -- Constructing InsurOmsTypes
        [PostgresModel.InsurOmsType](T1.InsurOmsType_Oid, T1.InsurOmsType_Name, T1.InsurOmsType_FomsCode)
    FROM (
        SELECT 
            T.oid AS InsurOmsType_Oid, 
            T.name AS InsurOmsType_Name, 
            T.foms_code AS InsurOmsType_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.insur_oms_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayMethods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView896()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayMethods", @"
    SELECT VALUE -- Constructing PayMethods
        [PostgresModel.PayMethod](T1.PayMethod_Oid, T1.PayMethod_Name, T1.PayMethod_FomsCode, T1.PayMethod_Show, T1.PayMethod_Name2, T1.PayMethod_Status)
    FROM (
        SELECT 
            T.oid AS PayMethod_Oid, 
            T.name AS PayMethod_Name, 
            T.foms_code AS PayMethod_FomsCode, 
            T.show AS PayMethod_Show, 
            T.name2 AS PayMethod_Name2, 
            T.status AS PayMethod_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_methods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Nosologies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView897()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Nosologies", @"
    SELECT VALUE -- Constructing Nosologies
        [PostgresModel.Nosology](T1.Nosology_Oid, T1.Nosology_Name, T1.Nosology_FomsCode)
    FROM (
        SELECT 
            T.oid AS Nosology_Oid, 
            T.name AS Nosology_Name, 
            T.foms_code AS Nosology_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.nosologies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Benefits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView898()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Benefits", @"
    SELECT VALUE -- Constructing Benefits
        [PostgresModel.Benefit](T1.Benefit_Oid, T1.Benefit_People, T1.Benefit_BenefitType, T1.Benefit_Mkb10, T1.Benefit_DateBegin, T1.Benefit_DateEnd, T1.Benefit_Justification, T1.Benefit_Code, T1.Benefit_Order178, T1.Benefit_Order890, T1.Benefit_Nosology, T1.Benefit_BenefitFinancing)
    FROM (
        SELECT 
            T.oid AS Benefit_Oid, 
            T.people AS Benefit_People, 
            T.benefit_type AS Benefit_BenefitType, 
            T.mkb10 AS Benefit_Mkb10, 
            T.date_begin AS Benefit_DateBegin, 
            T.date_end AS Benefit_DateEnd, 
            T.justification AS Benefit_Justification, 
            T.code AS Benefit_Code, 
            T.order178 AS Benefit_Order178, 
            T.order890 AS Benefit_Order890, 
            T.nosology AS Benefit_Nosology, 
            T.benefit_financing AS Benefit_BenefitFinancing, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.benefits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BenefitTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView899()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BenefitTypes", @"
    SELECT VALUE -- Constructing BenefitTypes
        [PostgresModel.BenefitType](T1.BenefitType_Oid, T1.BenefitType_Name, T1.BenefitType_FomsCode, T1.BenefitType_Show, T1.BenefitType_Name2, T1.BenefitType_Status)
    FROM (
        SELECT 
            T.oid AS BenefitType_Oid, 
            T.name AS BenefitType_Name, 
            T.foms_code AS BenefitType_FomsCode, 
            T.show AS BenefitType_Show, 
            T.name2 AS BenefitType_Name2, 
            T.status AS BenefitType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.benefit_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invalidtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView900()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invalidtypes", @"
    SELECT VALUE -- Constructing Invalidtypes
        [PostgresModel.Invalidtype](T1.Invalidtype_Oid, T1.Invalidtype_Name, T1.Invalidtype_FomsCode, T1.Invalidtype_Order, T1.Invalidtype_Parent)
    FROM (
        SELECT 
            T.oid AS Invalidtype_Oid, 
            T.name AS Invalidtype_Name, 
            T.foms_code AS Invalidtype_FomsCode, 
            T.[order] AS Invalidtype_Order, 
            T.parent AS Invalidtype_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invalidtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invalids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView901()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invalids", @"
    SELECT VALUE -- Constructing Invalids
        [PostgresModel.Invalid](T1.Invalid_Oid, T1.Invalid_People, T1.Invalid_Invalidgroup, T1.Invalid_Invalidtype, T1.Invalid_Invalidkind, T1.Invalid_Datebegin, T1.Invalid_Dateend, T1.Invalid_Infinity, T1.Invalid_JustificationNumber, T1.Invalid_JustificationDate, T1.Invalid_Datenext, T1.Invalid_Additional, T1.Invalid_Limitabilitytowork)
    FROM (
        SELECT 
            T.oid AS Invalid_Oid, 
            T.people AS Invalid_People, 
            T.invalidgroup AS Invalid_Invalidgroup, 
            T.invalidtype AS Invalid_Invalidtype, 
            T.invalidkind AS Invalid_Invalidkind, 
            T.datebegin AS Invalid_Datebegin, 
            T.dateend AS Invalid_Dateend, 
            T.infinity AS Invalid_Infinity, 
            T.justification_number AS Invalid_JustificationNumber, 
            T.justification_date AS Invalid_JustificationDate, 
            T.datenext AS Invalid_Datenext, 
            T.additional AS Invalid_Additional, 
            T.limitabilitytowork AS Invalid_Limitabilitytowork, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invalids AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView902()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeStatus", @"
    SELECT VALUE -- Constructing RecipeStatus
        [PostgresModel.RecipeStatus](T1.RecipeStatus_Oid, T1.RecipeStatus_Name)
    FROM (
        SELECT 
            T.oid AS RecipeStatus_Oid, 
            T.name AS RecipeStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView903()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleStatus", @"
    SELECT VALUE -- Constructing PeopleStatus
        [PostgresModel.PeopleStatus](T1.PeopleStatus_HDate, T1.PeopleStatus_HDateEnd, T1.PeopleStatus_Oid, T1.PeopleStatus_People, T1.PeopleStatus_Marriage, T1.PeopleStatus_Citizenship, T1.PeopleStatus_Military, T1.PeopleStatus_Isrealperson, T1.PeopleStatus_Hasauto, T1.PeopleStatus_Haschildren, T1.PeopleStatus_Inn)
    FROM (
        SELECT 
            T.h_date AS PeopleStatus_HDate, 
            T.h_date_end AS PeopleStatus_HDateEnd, 
            T.oid AS PeopleStatus_Oid, 
            T.people AS PeopleStatus_People, 
            T.marriage AS PeopleStatus_Marriage, 
            T.citizenship AS PeopleStatus_Citizenship, 
            T.military AS PeopleStatus_Military, 
            T.isrealperson AS PeopleStatus_Isrealperson, 
            T.hasauto AS PeopleStatus_Hasauto, 
            T.haschildren AS PeopleStatus_Haschildren, 
            T.inn AS PeopleStatus_Inn, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BenefitFinancings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView904()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BenefitFinancings", @"
    SELECT VALUE -- Constructing BenefitFinancings
        [PostgresModel.BenefitFinancing](T1.BenefitFinancing_Oid, T1.BenefitFinancing_Name, T1.BenefitFinancing_FomsCode, T1.BenefitFinancing_Show)
    FROM (
        SELECT 
            T.oid AS BenefitFinancing_Oid, 
            T.name AS BenefitFinancing_Name, 
            T.foms_code AS BenefitFinancing_FomsCode, 
            T.show AS BenefitFinancing_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.benefit_financings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrSectionIb2s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView905()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrSectionIb2s", @"
    SELECT VALUE -- Constructing SotrSectionIb2s
        [PostgresModel.SotrSectionIb2](T1.SotrSectionIb2_Oid, T1.SotrSectionIb2_Sysuser, T1.SotrSectionIb2_Otdel, T1.SotrSectionIb2_SpecId, T1.SotrSectionIb2_SectionIb)
    FROM (
        SELECT 
            T.oid AS SotrSectionIb2_Oid, 
            T.sysuser AS SotrSectionIb2_Sysuser, 
            T.otdel AS SotrSectionIb2_Otdel, 
            T.spec_id AS SotrSectionIb2_SpecId, 
            T.section_ib AS SotrSectionIb2_SectionIb, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_section_ib2s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.IbSections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView906()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.IbSections", @"
    SELECT VALUE -- Constructing IbSections
        [PostgresModel.IbSection](T1.IbSection_Oid, T1.IbSection_Name, T1.IbSection_SynRole, T1.IbSection_Parent, T1.IbSection_Prescfolder, T1.IbSection_ItemOrder, T1.IbSection_TypeItem, T1.IbSection_Controller, T1.IbSection_Action)
    FROM (
        SELECT 
            T.oid AS IbSection_Oid, 
            T.name AS IbSection_Name, 
            T.syn_role AS IbSection_SynRole, 
            T.parent AS IbSection_Parent, 
            T.prescfolder AS IbSection_Prescfolder, 
            T.item_order AS IbSection_ItemOrder, 
            T.type_item AS IbSection_TypeItem, 
            T.controller AS IbSection_Controller, 
            T.action AS IbSection_Action, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ib_sections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EpicrisTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView907()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EpicrisTypes", @"
    SELECT VALUE -- Constructing EpicrisTypes
        [PostgresModel.EpicrisType](T1.EpicrisType_Oid, T1.EpicrisType_Name, T1.EpicrisType_IbSecitons)
    FROM (
        SELECT 
            T.oid AS EpicrisType_Oid, 
            T.name AS EpicrisType_Name, 
            T.ib_secitons AS EpicrisType_IbSecitons, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.epicris_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Epicris
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView908()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Epicris", @"
    SELECT VALUE -- Constructing Epicris
        [PostgresModel.Epicri](T1.Epicri_Oid, T1.Epicri_MdocOid, T1.Epicri_Text, T1.Epicri_Type, T1.Epicri_Dt, T1.Epicri_Presctype, T1.Epicri_Visit, T1.Epicri_Sotr)
    FROM (
        SELECT 
            T.oid AS Epicri_Oid, 
            T.mdoc_oid AS Epicri_MdocOid, 
            T.text AS Epicri_Text, 
            T.type AS Epicri_Type, 
            T.dt AS Epicri_Dt, 
            T.presctype AS Epicri_Presctype, 
            T.visit AS Epicri_Visit, 
            T.sotr AS Epicri_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.epicris AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OperationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView909()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OperationTypes", @"
    SELECT VALUE -- Constructing OperationTypes
        [PostgresModel.OperationType](T1.OperationType_Oid, T1.OperationType_Name, T1.OperationType_IbSecitons)
    FROM (
        SELECT 
            T.oid AS OperationType_Oid, 
            T.name AS OperationType_Name, 
            T.ib_secitons AS OperationType_IbSecitons, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.operation_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView910()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Operations", @"
    SELECT VALUE -- Constructing Operations
        [PostgresModel.Operation](T1.Operation_Oid, T1.Operation_MdocOid, T1.Operation_Text, T1.Operation_Type, T1.Operation_Dt, T1.Operation_Nameoperation, T1.Operation_IbSecitons, T1.Operation_Presctype, T1.Operation_Sotr)
    FROM (
        SELECT 
            T.oid AS Operation_Oid, 
            T.mdoc_oid AS Operation_MdocOid, 
            T.text AS Operation_Text, 
            T.type AS Operation_Type, 
            T.dt AS Operation_Dt, 
            T.nameoperation AS Operation_Nameoperation, 
            T.ib_secitons AS Operation_IbSecitons, 
            T.presctype AS Operation_Presctype, 
            T.sotr AS Operation_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.operations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Lastonlinedatetimes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView911()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Lastonlinedatetimes", @"
    SELECT VALUE -- Constructing Lastonlinedatetimes
        [PostgresModel.Lastonlinedatetime](T1.Lastonlinedatetime_Oid, T1.Lastonlinedatetime_Lastonlinedatetime2)
    FROM (
        SELECT 
            T.oid AS Lastonlinedatetime_Oid, 
            T.lastonlinedatetime AS Lastonlinedatetime_Lastonlinedatetime2, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lastonlinedatetimes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MapTeeth
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView912()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MapTeeth", @"
    SELECT VALUE -- Constructing MapTeeth
        [PostgresModel.MapTooth](T1.MapTooth_Oid, T1.MapTooth_PrescId, T1.MapTooth_Content, T1.MapTooth_Sanated)
    FROM (
        SELECT 
            T.oid AS MapTooth_Oid, 
            T.presc_id AS MapTooth_PrescId, 
            T.content AS MapTooth_Content, 
            T.sanated AS MapTooth_Sanated, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.map_teeth AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayAgreements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView913()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayAgreements", @"
    SELECT VALUE -- Constructing PayAgreements
        [PostgresModel.PayAgreement](T1.PayAgreement_Oid, T1.PayAgreement_PeopleId, T1.PayAgreement_BegDt, T1.PayAgreement_EndDt, T1.PayAgreement_Status, T1.PayAgreement_SotrCreate, T1.PayAgreement_SotrClose, T1.PayAgreement_Num, T1.PayAgreement_PayType, T1.PayAgreement_Comment, T1.PayAgreement_UlAgr, T1.PayAgreement_SignSotr, T1.PayAgreement_Immediate)
    FROM (
        SELECT 
            T.oid AS PayAgreement_Oid, 
            T.people_id AS PayAgreement_PeopleId, 
            T.beg_dt AS PayAgreement_BegDt, 
            T.end_dt AS PayAgreement_EndDt, 
            T.status AS PayAgreement_Status, 
            T.sotr_create AS PayAgreement_SotrCreate, 
            T.sotr_close AS PayAgreement_SotrClose, 
            T.num AS PayAgreement_Num, 
            T.pay_type AS PayAgreement_PayType, 
            T.comment AS PayAgreement_Comment, 
            T.ul_agr AS PayAgreement_UlAgr, 
            T.sign_sotr AS PayAgreement_SignSotr, 
            T.immediate AS PayAgreement_Immediate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_agreements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayTypeAppendixes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView914()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayTypeAppendixes", @"
    SELECT VALUE -- Constructing PayTypeAppendixes
        [PostgresModel.PayTypeAppendix](T1.PayTypeAppendix_Oid, T1.PayTypeAppendix_Name)
    FROM (
        SELECT 
            T.oid AS PayTypeAppendix_Oid, 
            T.name AS PayTypeAppendix_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_type_appendixes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayAppendixes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView915()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayAppendixes", @"
    SELECT VALUE -- Constructing PayAppendixes
        [PostgresModel.PayAppendix](T1.PayAppendix_Oid, T1.PayAppendix_AgreementId, T1.PayAppendix_Num, T1.PayAppendix_OpenDt, T1.PayAppendix_CloseDt, T1.PayAppendix_Status, T1.PayAppendix_PayTypeId, T1.PayAppendix_SotrCreate, T1.PayAppendix_Pacsubscribe, T1.PayAppendix_ServicePriceCategory, T1.PayAppendix_Comment, T1.PayAppendix_TypeId, T1.PayAppendix_SignSotr, T1.PayAppendix_Note)
    FROM (
        SELECT 
            T.oid AS PayAppendix_Oid, 
            T.agreement_id AS PayAppendix_AgreementId, 
            T.num AS PayAppendix_Num, 
            T.open_dt AS PayAppendix_OpenDt, 
            T.close_dt AS PayAppendix_CloseDt, 
            T.status AS PayAppendix_Status, 
            T.pay_type_id AS PayAppendix_PayTypeId, 
            T.sotr_create AS PayAppendix_SotrCreate, 
            T.pacsubscribe AS PayAppendix_Pacsubscribe, 
            T.service_price_category AS PayAppendix_ServicePriceCategory, 
            T.comment AS PayAppendix_Comment, 
            T.type_id AS PayAppendix_TypeId, 
            T.sign_sotr AS PayAppendix_SignSotr, 
            T.note AS PayAppendix_Note, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_appendixes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrRecipeLgotTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView916()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrRecipeLgotTypes", @"
    SELECT VALUE -- Constructing SotrRecipeLgotTypes
        [PostgresModel.SotrRecipeLgotType](T1.SotrRecipeLgotType_Oid, T1.SotrRecipeLgotType_Sotr, T1.SotrRecipeLgotType_RecipeLgotType, T1.SotrRecipeLgotType_Datebegin, T1.SotrRecipeLgotType_Dateend, T1.SotrRecipeLgotType_Description)
    FROM (
        SELECT 
            T.oid AS SotrRecipeLgotType_Oid, 
            T.sotr AS SotrRecipeLgotType_Sotr, 
            T.recipe_lgot_type AS SotrRecipeLgotType_RecipeLgotType, 
            T.datebegin AS SotrRecipeLgotType_Datebegin, 
            T.dateend AS SotrRecipeLgotType_Dateend, 
            T.description AS SotrRecipeLgotType_Description, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_recipe_lgot_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PresctypeparamDictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView917()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PresctypeparamDictionaries", @"
    SELECT VALUE -- Constructing PresctypeparamDictionaries
        [PostgresModel.PresctypeparamDictionary](T1.PresctypeparamDictionary_Oid, T1.PresctypeparamDictionary_Name, T1.PresctypeparamDictionary_Parent, T1.PresctypeparamDictionary_Name2, T1.PresctypeparamDictionary_Show, T1.PresctypeparamDictionary_Pathology)
    FROM (
        SELECT 
            T.oid AS PresctypeparamDictionary_Oid, 
            T.name AS PresctypeparamDictionary_Name, 
            T.parent AS PresctypeparamDictionary_Parent, 
            T.name2 AS PresctypeparamDictionary_Name2, 
            T.show AS PresctypeparamDictionary_Show, 
            T.pathology AS PresctypeparamDictionary_Pathology, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presctypeparam_dictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView918()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2256);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Medics\r\n        [PostgresModel.Medic](T1.Medi");
            viewString.Append("c_Oid, T1.Medic_Name, T1.Medic_PharGroups, T1.Medic_AccountGr, T1.Medic_Level, T");
            viewString.Append("1.Medic_Comment, T1.Medic_Pku, T1.Medic_NomenRls, T1.Medic_Eancode, T1.Medic_Med");
            viewString.Append("ictype, T1.Medic_Paytype, T1.Medic_Fpackinupack, T1.Medic_Fpackoid, T1.Medic_Mas");
            viewString.Append("s, T1.Medic_Massunits, T1.Medic_NameLat, T1.Medic_Lgota, T1.Medic_Visible, T1.Me");
            viewString.Append("dic_PrintLatName, T1.Medic_Farmgrid2, T1.Medic_Farmgrid3, T1.Medic_International");
            viewString.Append("Name, T1.Medic_VisibleForNotMir, T1.Medic_Store, T1.Medic_Equipment, T1.Medic_It");
            viewString.Append("ems, T1.Medic_GroupLf, T1.Medic_QuotaCode34, T1.Medic_Jnvls, T1.Medic_Mibp, T1.M");
            viewString.Append("edic_Measure, T1.Medic_Lpu, T1.Medic_ShortName)\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.oid AS Medic_Oid, \r\n            T.name AS Medic_Name, \r\n            ");
            viewString.Append("T.phar_groups AS Medic_PharGroups, \r\n            T.account_gr AS Medic_AccountGr");
            viewString.Append(", \r\n            T.level AS Medic_Level, \r\n            T.comment AS Medic_Comment");
            viewString.Append(", \r\n            T.pku AS Medic_Pku, \r\n            T.nomen_rls AS Medic_NomenRls,");
            viewString.Append(" \r\n            T.eancode AS Medic_Eancode, \r\n            T.medictype AS Medic_Me");
            viewString.Append("dictype, \r\n            T.paytype AS Medic_Paytype, \r\n            T.fpackinupack ");
            viewString.Append("AS Medic_Fpackinupack, \r\n            T.fpackoid AS Medic_Fpackoid, \r\n           ");
            viewString.Append(" T.mass AS Medic_Mass, \r\n            T.massunits AS Medic_Massunits, \r\n         ");
            viewString.Append("   T.name_lat AS Medic_NameLat, \r\n            T.lgota AS Medic_Lgota, \r\n        ");
            viewString.Append("    T.visible AS Medic_Visible, \r\n            T.print_lat_name AS Medic_PrintLat");
            viewString.Append("Name, \r\n            T.farmgrid2 AS Medic_Farmgrid2, \r\n            T.farmgrid3 AS");
            viewString.Append(" Medic_Farmgrid3, \r\n            T.international_name AS Medic_InternationalName,");
            viewString.Append(" \r\n            T.visible_for_not_mir AS Medic_VisibleForNotMir, \r\n            T.");
            viewString.Append("store AS Medic_Store, \r\n            T.equipment AS Medic_Equipment, \r\n          ");
            viewString.Append("  T.items AS Medic_Items, \r\n            T.group_lf AS Medic_GroupLf, \r\n         ");
            viewString.Append("   T.quota_code_34 AS Medic_QuotaCode34, \r\n            T.jnvls AS Medic_Jnvls, \r");
            viewString.Append("\n            T.mibp AS Medic_Mibp, \r\n            T.measure AS Medic_Measure, \r\n ");
            viewString.Append("           T.lpu AS Medic_Lpu, \r\n            T.short_name AS Medic_ShortName, \r\n");
            viewString.Append("            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.medics A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medics", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Minzapas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView919()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Minzapas", @"
    SELECT VALUE -- Constructing Minzapas
        [PostgresModel.Minzapa](T1.Minzapa_Oid, T1.Minzapa_Medic, T1.Minzapa_Mogroup, T1.Minzapa_Colvo)
    FROM (
        SELECT 
            T.oid AS Minzapa_Oid, 
            T.medic AS Minzapa_Medic, 
            T.mogroup AS Minzapa_Mogroup, 
            T.colvo AS Minzapa_Colvo, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.minzapas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView920()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mo", @"
    SELECT VALUE -- Constructing Mo
        [PostgresModel.Mo](T1.Mo_Oid, T1.Mo_Name, T1.Mo_Crm, T1.Mo_Parent, T1.Mo_SotrOid, T1.Mo_Treb, T1.Mo_Motype, T1.Mo_Group, T1.Mo_MoGroupOid, T1.Mo_Store, T1.Mo_Del, T1.Mo_Lpu)
    FROM (
        SELECT 
            T.oid AS Mo_Oid, 
            T.name AS Mo_Name, 
            T.crm AS Mo_Crm, 
            T.parent AS Mo_Parent, 
            T.sotr_oid AS Mo_SotrOid, 
            T.treb AS Mo_Treb, 
            T.motype AS Mo_Motype, 
            T.[group] AS Mo_Group, 
            T.mo_group_oid AS Mo_MoGroupOid, 
            T.store AS Mo_Store, 
            T.del AS Mo_Del, 
            T.lpu AS Mo_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medicomplexes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView921()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medicomplexes", @"
    SELECT VALUE -- Constructing Medicomplexes
        [PostgresModel.Medicomplex](T1.Medicomplex_Medic, T1.Medicomplex_MedicItem, T1.Medicomplex_Amount, T1.Medicomplex_Oid, T1.Medicomplex_OrderMedic, T1.Medicomplex_Tara)
    FROM (
        SELECT 
            T.medic AS Medicomplex_Medic, 
            T.medic_item AS Medicomplex_MedicItem, 
            T.amount AS Medicomplex_Amount, 
            T.oid AS Medicomplex_Oid, 
            T.order_medic AS Medicomplex_OrderMedic, 
            T.tara AS Medicomplex_Tara, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medicomplexes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medicomplex222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView922()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medicomplex222s", @"
    SELECT VALUE -- Constructing Medicomplex222s
        [PostgresModel.Medicomplex222](T1.Medicomplex222_Medic, T1.Medicomplex222_Medic222OidItem, T1.Medicomplex222_Medic222OidAmount)
    FROM (
        SELECT 
            T.medic AS Medicomplex222_Medic, 
            T.medic222_oid_item AS Medicomplex222_Medic222OidItem, 
            T.medic222_oid_amount AS Medicomplex222_Medic222OidAmount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medicomplex222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MoGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView923()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MoGroups", @"
    SELECT VALUE -- Constructing MoGroups
        [PostgresModel.MoGroup](T1.MoGroup_Oid, T1.MoGroup_Group, T1.MoGroup_Del, T1.MoGroup_Store, T1.MoGroup_QuotaCode1, T1.MoGroup_Lpu)
    FROM (
        SELECT 
            T.oid AS MoGroup_Oid, 
            T.[group] AS MoGroup_Group, 
            T.del AS MoGroup_Del, 
            T.store AS MoGroup_Store, 
            T.quota_code_1 AS MoGroup_QuotaCode1, 
            T.lpu AS MoGroup_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mo_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MoInGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView924()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MoInGroups", @"
    SELECT VALUE -- Constructing MoInGroups
        [PostgresModel.MoInGroup](T1.MoInGroup_Oid, T1.MoInGroup_Mo, T1.MoInGroup_GroupTmo, T1.MoInGroup_Del)
    FROM (
        SELECT 
            T.oid AS MoInGroup_Oid, 
            T.mo AS MoInGroup_Mo, 
            T.group_tmo AS MoInGroup_GroupTmo, 
            T.del AS MoInGroup_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mo_in_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PositionDocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView925()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2109);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PositionDocs\r\n        [PostgresModel.Position");
            viewString.Append("Doc](T1.PositionDoc_Oid, T1.PositionDoc_Docs, T1.PositionDoc_Kart, T1.PositionDo");
            viewString.Append("c_Kol, T1.PositionDoc_Newprice, T1.PositionDoc_Price, T1.PositionDoc_Summ, T1.Po");
            viewString.Append("sitionDoc_Sel, T1.PositionDoc_Trebkol, T1.PositionDoc_DocsRezerv, T1.PositionDoc");
            viewString.Append("_DateSpis, T1.PositionDoc_Nazmedlech, T1.PositionDoc_Reslech, T1.PositionDoc_Fas");
            viewString.Append(", T1.PositionDoc_Nazmedlechvoid, T1.PositionDoc_TrebDpc, T1.PositionDoc_Nazmedoi");
            viewString.Append("d, T1.PositionDoc_MoCreate, T1.PositionDoc_CreateData, T1.PositionDoc_MoEdit, T1");
            viewString.Append(".PositionDoc_Nazvrachoid, T1.PositionDoc_Nazmark, T1.PositionDoc_ReturnPost, T1.");
            viewString.Append("PositionDoc_KolOld, T1.PositionDoc_TrebkolOld, T1.PositionDoc_EditDate)\r\n    FRO");
            viewString.Append("M (\r\n        SELECT \r\n            T.oid AS PositionDoc_Oid, \r\n            T.docs");
            viewString.Append(" AS PositionDoc_Docs, \r\n            T.kart AS PositionDoc_Kart, \r\n            T.");
            viewString.Append("kol AS PositionDoc_Kol, \r\n            T.newprice AS PositionDoc_Newprice, \r\n    ");
            viewString.Append("        T.price AS PositionDoc_Price, \r\n            T.summ AS PositionDoc_Summ, ");
            viewString.Append("\r\n            T.sel AS PositionDoc_Sel, \r\n            T.trebkol AS PositionDoc_T");
            viewString.Append("rebkol, \r\n            T.docs_rezerv AS PositionDoc_DocsRezerv, \r\n            T.d");
            viewString.Append("ate_spis AS PositionDoc_DateSpis, \r\n            T.nazmedlech AS PositionDoc_Nazm");
            viewString.Append("edlech, \r\n            T.reslech AS PositionDoc_Reslech, \r\n            T.fas AS P");
            viewString.Append("ositionDoc_Fas, \r\n            T.nazmedlechvoid AS PositionDoc_Nazmedlechvoid, \r\n");
            viewString.Append("            T.treb_dpc AS PositionDoc_TrebDpc, \r\n            T.nazmedoid AS Posi");
            viewString.Append("tionDoc_Nazmedoid, \r\n            T.mo_create AS PositionDoc_MoCreate, \r\n        ");
            viewString.Append("    T.create_data AS PositionDoc_CreateData, \r\n            T.mo_edit AS Position");
            viewString.Append("Doc_MoEdit, \r\n            T.nazvrachoid AS PositionDoc_Nazvrachoid, \r\n          ");
            viewString.Append("  T.nazmark AS PositionDoc_Nazmark, \r\n            T.return_post AS PositionDoc_R");
            viewString.Append("eturnPost, \r\n            T.kol_old AS PositionDoc_KolOld, \r\n            T.trebko");
            viewString.Append("l_old AS PositionDoc_TrebkolOld, \r\n            T.edit_date AS PositionDoc_EditDa");
            viewString.Append("te, \r\n            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.po");
            viewString.Append("sition_docs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PositionDocs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PharGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView926()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PharGroups", @"
    SELECT VALUE -- Constructing PharGroups
        [PostgresModel.PharGroup](T1.PharGroup_Farmgr, T1.PharGroup_Oid, T1.PharGroup_FrmgrRls, T1.PharGroup_Lpu)
    FROM (
        SELECT 
            T.farmgr AS PharGroup_Farmgr, 
            T.oid AS PharGroup_Oid, 
            T.frmgr_rls AS PharGroup_FrmgrRls, 
            T.lpu AS PharGroup_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.phar_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Requests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView927()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Requests", @"
    SELECT VALUE -- Constructing Requests
        [PostgresModel.Request](T1.Request_Oid, T1.Request_RequestNum, T1.Request_CreateDate, T1.Request_Invoice, T1.Request_MoOidCreate, T1.Request_DoverNum, T1.Request_MoGet, T1.Request_MoZayav, T1.Request_Supplier, T1.Request_DoverDate, T1.Request_Comment, T1.Request_Store)
    FROM (
        SELECT 
            T.oid AS Request_Oid, 
            T.request_num AS Request_RequestNum, 
            T.create_date AS Request_CreateDate, 
            T.invoice AS Request_Invoice, 
            T.mo_oid_create AS Request_MoOidCreate, 
            T.dover_num AS Request_DoverNum, 
            T.mo_get AS Request_MoGet, 
            T.mo_zayav AS Request_MoZayav, 
            T.supplier AS Request_Supplier, 
            T.dover_date AS Request_DoverDate, 
            T.comment AS Request_Comment, 
            T.store AS Request_Store, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.requests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Spisanievids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView928()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Spisanievids", @"
    SELECT VALUE -- Constructing Spisanievids
        [PostgresModel.Spisanievid](T1.Spisanievid_Oid, T1.Spisanievid_Name, T1.Spisanievid_Del, T1.Spisanievid_Doctype, T1.Spisanievid_Lpu)
    FROM (
        SELECT 
            T.oid AS Spisanievid_Oid, 
            T.name AS Spisanievid_Name, 
            T.del AS Spisanievid_Del, 
            T.doctype AS Spisanievid_Doctype, 
            T.lpu AS Spisanievid_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.spisanievids AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Specialmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView929()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Specialmedics", @"
    SELECT VALUE -- Constructing Specialmedics
        [PostgresModel.Specialmedic](T1.Specialmedic_Oid, T1.Specialmedic_Name, T1.Specialmedic_Lpu)
    FROM (
        SELECT 
            T.oid AS Specialmedic_Oid, 
            T.name AS Specialmedic_Name, 
            T.lpu AS Specialmedic_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.specialmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView930()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Suppliers", "\r\n    SELECT VALUE -- Constructing Suppliers\r\n        [PostgresModel.Supplier](T1" +
                    ".Supplier_Oid, T1.Supplier_Name, T1.Supplier_Bossdolg, T1.Supplier_Bossfio, T1.S" +
                    "upplier_Del, T1.Supplier_Motype, T1.Supplier_Rekviziti, T1.Supplier_Store, T1.Su" +
                    "pplier_KontraktN, T1.Supplier_KontraktBegin, T1.Supplier_KontraktEnd, T1.Supplie" +
                    "r_Address, T1.Supplier_Phone, T1.Supplier_RS, T1.Supplier_KS, T1.Supplier_Inn, T" +
                    "1.Supplier_Bik, T1.Supplier_Okpo, T1.Supplier_Okonh, T1.Supplier_Bank, T1.Suppli" +
                    "er_LicenseN, T1.Supplier_License, T1.Supplier_PmVendorOid, T1.Supplier_Lpu)\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.oid AS Supplier_Oid, \r\n            T.nam" +
                    "e AS Supplier_Name, \r\n            T.bossdolg AS Supplier_Bossdolg, \r\n           " +
                    " T.bossfio AS Supplier_Bossfio, \r\n            T.del AS Supplier_Del, \r\n         " +
                    "   T.motype AS Supplier_Motype, \r\n            T.rekviziti AS Supplier_Rekviziti," +
                    " \r\n            T.store AS Supplier_Store, \r\n            T.kontrakt_n AS Supplier" +
                    "_KontraktN, \r\n            T.kontrakt_begin AS Supplier_KontraktBegin, \r\n        " +
                    "    T.kontrakt_end AS Supplier_KontraktEnd, \r\n            T.address AS Supplier_" +
                    "Address, \r\n            T.phone AS Supplier_Phone, \r\n            T.r_s AS Supplie" +
                    "r_RS, \r\n            T.k_s AS Supplier_KS, \r\n            T.inn AS Supplier_Inn, \r" +
                    "\n            T.bik AS Supplier_Bik, \r\n            T.okpo AS Supplier_Okpo, \r\n   " +
                    "         T.okonh AS Supplier_Okonh, \r\n            T.bank AS Supplier_Bank, \r\n   " +
                    "         T.license_n AS Supplier_LicenseN, \r\n            T.license AS Supplier_L" +
                    "icense, \r\n            T.pm_vendor_oid AS Supplier_PmVendorOid, \r\n            T.l" +
                    "pu AS Supplier_Lpu, \r\n            True AS _from0\r\n        FROM PostgresEntitiesS" +
                    "toreContainer.suppliers AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ZayavkaDpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView931()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ZayavkaDpcs", @"
    SELECT VALUE -- Constructing ZayavkaDpcs
        [PostgresModel.ZayavkaDpc](T1.ZayavkaDpc_Oid, T1.ZayavkaDpc_Medic, T1.ZayavkaDpc_Request, T1.ZayavkaDpc_Kol)
    FROM (
        SELECT 
            T.oid AS ZayavkaDpc_Oid, 
            T.medic AS ZayavkaDpc_Medic, 
            T.request AS ZayavkaDpc_Request, 
            T.kol AS ZayavkaDpc_Kol, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.zayavka_dpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView932()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Docs", "\r\n    SELECT VALUE -- Constructing Docs\r\n        [PostgresModel.Doc](T1.Doc_Oid, " +
                    "T1.Doc_Mo, T1.Doc_Data, T1.Doc_Doc1, T1.Doc_Vid, T1.Doc_Comment, T1.Doc_MoFrom, " +
                    "T1.Doc_MoTo, T1.Doc_Supplier, T1.Doc_Price, T1.Doc_Vidmove, T1.Doc_Invoice, T1.D" +
                    "oc_Treb, T1.Doc_Spisanievid, T1.Doc_MoGroup, T1.Doc_MoGroupTo, T1.Doc_MoGroupFro" +
                    "m, T1.Doc_Store, T1.Doc_TypeIncome, T1.Doc_Kontrakt, T1.Doc_SchetFaktura, T1.Doc" +
                    "_SourcesFinance, T1.Doc_Paycond, T1.Doc_EditDocs, T1.Doc_Phar)\r\n    FROM (\r\n    " +
                    "    SELECT \r\n            T.oid AS Doc_Oid, \r\n            T.mo AS Doc_Mo, \r\n     " +
                    "       T.data AS Doc_Data, \r\n            T.doc AS Doc_Doc1, \r\n            T.vid " +
                    "AS Doc_Vid, \r\n            T.comment AS Doc_Comment, \r\n            T.mo_from AS D" +
                    "oc_MoFrom, \r\n            T.mo_to AS Doc_MoTo, \r\n            T.supplier AS Doc_Su" +
                    "pplier, \r\n            T.price AS Doc_Price, \r\n            T.vidmove AS Doc_Vidmo" +
                    "ve, \r\n            T.invoice AS Doc_Invoice, \r\n            T.treb AS Doc_Treb, \r\n" +
                    "            T.spisanievid AS Doc_Spisanievid, \r\n            T.mo_group AS Doc_Mo" +
                    "Group, \r\n            T.mo_group_to AS Doc_MoGroupTo, \r\n            T.mo_group_fr" +
                    "om AS Doc_MoGroupFrom, \r\n            T.store AS Doc_Store, \r\n            T.type_" +
                    "income AS Doc_TypeIncome, \r\n            T.kontrakt AS Doc_Kontrakt, \r\n          " +
                    "  T.schet_faktura AS Doc_SchetFaktura, \r\n            T.sources_finance AS Doc_So" +
                    "urcesFinance, \r\n            T.paycond AS Doc_Paycond, \r\n            T.edit_docs " +
                    "AS Doc_EditDocs, \r\n            T.phar AS Doc_Phar, \r\n            True AS _from0\r" +
                    "\n        FROM PostgresEntitiesStoreContainer.docs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medic222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView933()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medic222s", @"
    SELECT VALUE -- Constructing Medic222s
        [PostgresModel.Medic222](T1.Medic222_Name, T1.Medic222_PharGroups, T1.Medic222_AccountGr, T1.Medic222_Oid, T1.Medic222_Level, T1.Medic222_Comment, T1.Medic222_Pku, T1.Medic222_NomenRls, T1.Medic222_Eancode, T1.Medic222_Medictype, T1.Medic222_Paytype, T1.Medic222_Fpackinupack, T1.Medic222_Fpackoid, T1.Medic222_Mass, T1.Medic222_Massunits, T1.Medic222_Lgota, T1.Medic222_NameLat, T1.Medic222_Visible, T1.Medic222_Measure)
    FROM (
        SELECT 
            T.name AS Medic222_Name, 
            T.phar_groups AS Medic222_PharGroups, 
            T.account_gr AS Medic222_AccountGr, 
            T.oid AS Medic222_Oid, 
            T.level AS Medic222_Level, 
            T.comment AS Medic222_Comment, 
            T.pku AS Medic222_Pku, 
            T.nomen_rls AS Medic222_NomenRls, 
            T.eancode AS Medic222_Eancode, 
            T.medictype AS Medic222_Medictype, 
            T.paytype AS Medic222_Paytype, 
            T.fpackinupack AS Medic222_Fpackinupack, 
            T.fpackoid AS Medic222_Fpackoid, 
            T.mass AS Medic222_Mass, 
            T.massunits AS Medic222_Massunits, 
            T.lgota AS Medic222_Lgota, 
            T.name_lat AS Medic222_NameLat, 
            T.visible AS Medic222_Visible, 
            T.measure AS Medic222_Measure, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Accountgrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView934()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Accountgrs", @"
    SELECT VALUE -- Constructing Accountgrs
        [PostgresModel.Accountgr](T1.Accountgr_Accountgr1, T1.Accountgr_Oid, T1.Accountgr_Mat, T1.Accountgr_Store, T1.Accountgr_QuotaCode2, T1.Accountgr_Lpu)
    FROM (
        SELECT 
            T.accountgr AS Accountgr_Accountgr1, 
            T.oid AS Accountgr_Oid, 
            T.mat AS Accountgr_Mat, 
            T.store AS Accountgr_Store, 
            T.quota_code_2 AS Accountgr_QuotaCode2, 
            T.lpu AS Accountgr_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.accountgrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.GroupLfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView935()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.GroupLfs", @"
    SELECT VALUE -- Constructing GroupLfs
        [PostgresModel.GroupLf](T1.GroupLf_Oid, T1.GroupLf_GroupLf1, T1.GroupLf_OrderGroup, T1.GroupLf_Synonim, T1.GroupLf_Del, T1.GroupLf_Lpu)
    FROM (
        SELECT 
            T.oid AS GroupLf_Oid, 
            T.group_lf AS GroupLf_GroupLf1, 
            T.order_group AS GroupLf_OrderGroup, 
            T.synonim AS GroupLf_Synonim, 
            T.del AS GroupLf_Del, 
            T.lpu AS GroupLf_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.group_lfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Stores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView936()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Stores", @"
    SELECT VALUE -- Constructing Stores
        [PostgresModel.Store](T1.Store_Oid, T1.Store_Name, T1.Store_Synonim, T1.Store_NameRep, T1.Store_MainformCaption, T1.Store_ObjUchName, T1.Store_Lpu)
    FROM (
        SELECT 
            T.oid AS Store_Oid, 
            T.name AS Store_Name, 
            T.synonim AS Store_Synonim, 
            T.name_rep AS Store_NameRep, 
            T.mainform_caption AS Store_MainformCaption, 
            T.obj_uch_name AS Store_ObjUchName, 
            T.lpu AS Store_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.stores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Karts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView937()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Karts", "\r\n    SELECT VALUE -- Constructing Karts\r\n        [PostgresModel.Kart](T1.Kart_Oi" +
                    "d, T1.Kart_Mo, T1.Kart_Del, T1.Kart_Medic, T1.Kart_Name, T1.Kart_Serial, T1.Kart" +
                    "_Goden, T1.Kart_Prodcert, T1.Kart_Certificate, T1.Kart_Producer, T1.Kart_PartyNu" +
                    "m, T1.Kart_Price, T1.Kart_Kol, T1.Kart_Mogroup, T1.Kart_Expensive, T1.Kart_TypeI" +
                    "ncome, T1.Kart_PartyNum2, T1.Kart_BrakMedUniqstr, T1.Kart_Brak, T1.Kart_SourcesF" +
                    "inance, T1.Kart_InvNomer, T1.Kart_QuotaCode, T1.Kart_Nds, T1.Kart_Nacenka, T1.Ka" +
                    "rt_PriceMnf, T1.Kart_Jnvls, T1.Kart_Subaccount, T1.Kart_Oidphar, T1.Kart_BrakDat" +
                    "e)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS Kart_Oid, \r\n            T." +
                    "mo AS Kart_Mo, \r\n            T.del AS Kart_Del, \r\n            T.medic AS Kart_Me" +
                    "dic, \r\n            T.name AS Kart_Name, \r\n            T.serial AS Kart_Serial, \r" +
                    "\n            T.goden AS Kart_Goden, \r\n            T.prodcert AS Kart_Prodcert, \r" +
                    "\n            T.certificate AS Kart_Certificate, \r\n            T.producer AS Kart" +
                    "_Producer, \r\n            T.party_num AS Kart_PartyNum, \r\n            T.price AS " +
                    "Kart_Price, \r\n            T.kol AS Kart_Kol, \r\n            T.mogroup AS Kart_Mog" +
                    "roup, \r\n            T.expensive AS Kart_Expensive, \r\n            T.type_income A" +
                    "S Kart_TypeIncome, \r\n            T.party_num2 AS Kart_PartyNum2, \r\n            T" +
                    ".brak_med_uniqstr AS Kart_BrakMedUniqstr, \r\n            T.brak AS Kart_Brak, \r\n " +
                    "           T.sources_finance AS Kart_SourcesFinance, \r\n            T.inv_nomer A" +
                    "S Kart_InvNomer, \r\n            T.quota_code AS Kart_QuotaCode, \r\n            T.n" +
                    "ds AS Kart_Nds, \r\n            T.nacenka AS Kart_Nacenka, \r\n            T.price_m" +
                    "nf AS Kart_PriceMnf, \r\n            T.jnvls AS Kart_Jnvls, \r\n            T.subacc" +
                    "ount AS Kart_Subaccount, \r\n            T.oidphar AS Kart_Oidphar, \r\n            " +
                    "T.brak_date AS Kart_BrakDate, \r\n            True AS _from0\r\n        FROM Postgre" +
                    "sEntitiesStoreContainer.karts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SourcesFinances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView938()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SourcesFinances", @"
    SELECT VALUE -- Constructing SourcesFinances
        [PostgresModel.SourcesFinance](T1.SourcesFinance_Oid, T1.SourcesFinance_Name, T1.SourcesFinance_Synonim, T1.SourcesFinance_TypedocOid, T1.SourcesFinance_Lpu)
    FROM (
        SELECT 
            T.oid AS SourcesFinance_Oid, 
            T.name AS SourcesFinance_Name, 
            T.synonim AS SourcesFinance_Synonim, 
            T.typedoc_oid AS SourcesFinance_TypedocOid, 
            T.lpu AS SourcesFinance_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sources_finances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemplateDpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView939()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemplateDpcs", @"
    SELECT VALUE -- Constructing TemplateDpcs
        [PostgresModel.TemplateDpc](T1.TemplateDpc_Oid, T1.TemplateDpc_TemplateDoc, T1.TemplateDpc_Medic, T1.TemplateDpc_Kol, T1.TemplateDpc_FasKol)
    FROM (
        SELECT 
            T.oid AS TemplateDpc_Oid, 
            T.template_doc AS TemplateDpc_TemplateDoc, 
            T.medic AS TemplateDpc_Medic, 
            T.kol AS TemplateDpc_Kol, 
            T.fas_kol AS TemplateDpc_FasKol, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.template_dpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Trebs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView940()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Trebs", @"
    SELECT VALUE -- Constructing Trebs
        [PostgresModel.Treb](T1.Treb_Oid, T1.Treb_Treb1, T1.Treb_Date, T1.Treb_MoOwner, T1.Treb_MoTo, T1.Treb_MoFrom, T1.Treb_Comment, T1.Treb_Docs, T1.Treb_MoGroup, T1.Treb_MoGroupTo, T1.Treb_MoGroupFrom, T1.Treb_Cito, T1.Treb_Store, T1.Treb_SourcesFinance, T1.Treb_Rpo)
    FROM (
        SELECT 
            T.oid AS Treb_Oid, 
            T.treb AS Treb_Treb1, 
            T.date AS Treb_Date, 
            T.mo_owner AS Treb_MoOwner, 
            T.mo_to AS Treb_MoTo, 
            T.mo_from AS Treb_MoFrom, 
            T.comment AS Treb_Comment, 
            T.docs AS Treb_Docs, 
            T.mo_group AS Treb_MoGroup, 
            T.mo_group_to AS Treb_MoGroupTo, 
            T.mo_group_from AS Treb_MoGroupFrom, 
            T.cito AS Treb_Cito, 
            T.store AS Treb_Store, 
            T.sources_finance AS Treb_SourcesFinance, 
            T.rpo AS Treb_Rpo, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trebs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Cabinets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView941()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Cabinets", @"
    SELECT VALUE -- Constructing Cabinets
        [PostgresModel.Cabinet](T1.Cabinet_Oid, T1.Cabinet_Otdel, T1.Cabinet_Building, T1.Cabinet_CabinetName, T1.Cabinet_Phone, T1.Cabinet_Synonym)
    FROM (
        SELECT 
            T.oid AS Cabinet_Oid, 
            T.otdel AS Cabinet_Otdel, 
            T.building AS Cabinet_Building, 
            T.cabinet_name AS Cabinet_CabinetName, 
            T.phone AS Cabinet_Phone, 
            T.synonym AS Cabinet_Synonym, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cabinets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Bills
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView942()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Bills", @"
    SELECT VALUE -- Constructing Bills
        [PostgresModel.Bill](T1.Bill_Oid, T1.Bill_AppendixId, T1.Bill_SotrCreate, T1.Bill_SotrPay, T1.Bill_CreateDt, T1.Bill_PayDt, T1.Bill_PayStatus, T1.Bill_Num, T1.Bill_AnnulDt, T1.Bill_SotrAnnul, T1.Bill_PaySum)
    FROM (
        SELECT 
            T.oid AS Bill_Oid, 
            T.appendix_id AS Bill_AppendixId, 
            T.sotr_create AS Bill_SotrCreate, 
            T.sotr_pay AS Bill_SotrPay, 
            T.create_dt AS Bill_CreateDt, 
            T.pay_dt AS Bill_PayDt, 
            T.pay_status AS Bill_PayStatus, 
            T.num AS Bill_Num, 
            T.annul_dt AS Bill_AnnulDt, 
            T.sotr_annul AS Bill_SotrAnnul, 
            T.pay_sum AS Bill_PaySum, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bills AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BillUslugs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView943()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BillUslugs", @"
    SELECT VALUE -- Constructing BillUslugs
        [PostgresModel.BillUslug](T1.BillUslug_Oid, T1.BillUslug_BillId, T1.BillUslug_Cost, T1.BillUslug_PrescService, T1.BillUslug_Transaction)
    FROM (
        SELECT 
            T.oid AS BillUslug_Oid, 
            T.bill_id AS BillUslug_BillId, 
            T.cost AS BillUslug_Cost, 
            T.presc_service AS BillUslug_PrescService, 
            T.transaction AS BillUslug_Transaction, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bill_uslugs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NosologyMkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView944()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NosologyMkb10s", @"
    SELECT VALUE -- Constructing NosologyMkb10s
        [PostgresModel.NosologyMkb10](T1.NosologyMkb10_Oid, T1.NosologyMkb10_Nosology, T1.NosologyMkb10_Mkb10)
    FROM (
        SELECT 
            T.oid AS NosologyMkb10_Oid, 
            T.nosology AS NosologyMkb10_Nosology, 
            T.mkb10 AS NosologyMkb10_Mkb10, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.nosology_mkb10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LabProbeColors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView945()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LabProbeColors", @"
    SELECT VALUE -- Constructing LabProbeColors
        [PostgresModel.LabProbeColor](T1.LabProbeColor_Oid, T1.LabProbeColor_Name, T1.LabProbeColor_Code, T1.LabProbeColor_Show)
    FROM (
        SELECT 
            T.oid AS LabProbeColor_Oid, 
            T.name AS LabProbeColor_Name, 
            T.code AS LabProbeColor_Code, 
            T.show AS LabProbeColor_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lab_probe_colors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LabRunTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView946()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LabRunTypes", @"
    SELECT VALUE -- Constructing LabRunTypes
        [PostgresModel.LabRunType](T1.LabRunType_Oid, T1.LabRunType_Name, T1.LabRunType_Show)
    FROM (
        SELECT 
            T.oid AS LabRunType_Oid, 
            T.name AS LabRunType_Name, 
            T.show AS LabRunType_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lab_run_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LabWorkPlaces
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView947()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LabWorkPlaces", @"
    SELECT VALUE -- Constructing LabWorkPlaces
        [PostgresModel.LabWorkPlace](T1.LabWorkPlace_Oid, T1.LabWorkPlace_Name, T1.LabWorkPlace_Parent, T1.LabWorkPlace_Order, T1.LabWorkPlace_Otdel, T1.LabWorkPlace_Del)
    FROM (
        SELECT 
            T.oid AS LabWorkPlace_Oid, 
            T.name AS LabWorkPlace_Name, 
            T.parent AS LabWorkPlace_Parent, 
            T.[order] AS LabWorkPlace_Order, 
            T.otdel AS LabWorkPlace_Otdel, 
            T.del AS LabWorkPlace_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lab_work_places AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LaboratoryParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView948()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LaboratoryParams", @"
    SELECT VALUE -- Constructing LaboratoryParams
        [PostgresModel.LaboratoryParam](T1.LaboratoryParam_Oid, T1.LaboratoryParam_ColorId, T1.LaboratoryParam_RunTypeId, T1.LaboratoryParam_WorkPlaceId, T1.LaboratoryParam_Autocomplete)
    FROM (
        SELECT 
            T.oid AS LaboratoryParam_Oid, 
            T.color_id AS LaboratoryParam_ColorId, 
            T.run_type_id AS LaboratoryParam_RunTypeId, 
            T.work_place_id AS LaboratoryParam_WorkPlaceId, 
            T.autocomplete AS LaboratoryParam_Autocomplete, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.laboratory_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescCards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView949()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescCards", @"
    SELECT VALUE -- Constructing PrescCards
        [PostgresModel.PrescCard](T1.PrescCard_Oid, T1.PrescCard_RegDate, T1.PrescCard_Probe, T1.PrescCard_Lotok, T1.PrescCard_Line, T1.PrescCard_IdAnswer, T1.PrescCard_PrescId, T1.PrescCard_Status, T1.PrescCard_Sign, T1.PrescCard_Conclusion, T1.PrescCard_DateEntryResult, T1.PrescCard_SotrId)
    FROM (
        SELECT 
            T.oid AS PrescCard_Oid, 
            T.reg_date AS PrescCard_RegDate, 
            T.probe AS PrescCard_Probe, 
            T.lotok AS PrescCard_Lotok, 
            T.line AS PrescCard_Line, 
            T.id_answer AS PrescCard_IdAnswer, 
            T.presc_id AS PrescCard_PrescId, 
            T.status AS PrescCard_Status, 
            T.sign AS PrescCard_Sign, 
            T.conclusion AS PrescCard_Conclusion, 
            T.date_entry_result AS PrescCard_DateEntryResult, 
            T.sotr_id AS PrescCard_SotrId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_cards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescparamStorages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView950()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescparamStorages", @"
    SELECT VALUE -- Constructing PrescparamStorages
        [PostgresModel.PrescparamStorage](T1.PrescparamStorage_Oid, T1.PrescparamStorage_PrescId, T1.PrescparamStorage_PrescparamId)
    FROM (
        SELECT 
            T.oid AS PrescparamStorage_Oid, 
            T.presc_id AS PrescparamStorage_PrescId, 
            T.prescparam_id AS PrescparamStorage_PrescparamId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.prescparam_storages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescparamValues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView951()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescparamValues", @"
    SELECT VALUE -- Constructing PrescparamValues
        [PostgresModel.PrescparamValue](T1.PrescparamValue_Oid, T1.PrescparamValue_PrescparamId, T1.PrescparamValue_ValuesInt, T1.PrescparamValue_ValuesText, T1.PrescparamValue_ValuesCombobox, T1.PrescparamValue_ValuesSting, T1.PrescparamValue_PrescCard)
    FROM (
        SELECT 
            T.oid AS PrescparamValue_Oid, 
            T.prescparam_id AS PrescparamValue_PrescparamId, 
            T.values_int AS PrescparamValue_ValuesInt, 
            T.values_text AS PrescparamValue_ValuesText, 
            T.values_combobox AS PrescparamValue_ValuesCombobox, 
            T.values_sting AS PrescparamValue_ValuesSting, 
            T.presc_card AS PrescparamValue_PrescCard, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.prescparam_values AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Presctypeparams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView952()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Presctypeparams", @"
    SELECT VALUE -- Constructing Presctypeparams
        [PostgresModel.Presctypeparam](T1.Presctypeparam_Oid, T1.Presctypeparam_PresctypeId, T1.Presctypeparam_ParametrType, T1.Presctypeparam_ParametrName, T1.Presctypeparam_Del, T1.Presctypeparam_AdditionalType, T1.Presctypeparam_Order, T1.Presctypeparam_Measure, T1.Presctypeparam_Visible, T1.Presctypeparam_Synonim)
    FROM (
        SELECT 
            T.oid AS Presctypeparam_Oid, 
            T.presctype_id AS Presctypeparam_PresctypeId, 
            T.parametr_type AS Presctypeparam_ParametrType, 
            T.parametr_name AS Presctypeparam_ParametrName, 
            T.del AS Presctypeparam_Del, 
            T.additional_type AS Presctypeparam_AdditionalType, 
            T.[order] AS Presctypeparam_Order, 
            T.measure AS Presctypeparam_Measure, 
            T.visible AS Presctypeparam_Visible, 
            T.synonim AS Presctypeparam_Synonim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presctypeparams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ParamDatatypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView953()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ParamDatatypes", @"
    SELECT VALUE -- Constructing ParamDatatypes
        [PostgresModel.ParamDatatype](T1.ParamDatatype_Oid, T1.ParamDatatype_Name, T1.ParamDatatype_Synonym)
    FROM (
        SELECT 
            T.oid AS ParamDatatype_Oid, 
            T.name AS ParamDatatype_Name, 
            T.synonym AS ParamDatatype_Synonym, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.param_datatypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Measures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView954()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Measures", @"
    SELECT VALUE -- Constructing Measures
        [PostgresModel.Measure](T1.Measure_Oid, T1.Measure_Name, T1.Measure_Okei, T1.Measure_Rlsdrugform, T1.Measure_MeasureFrom, T1.Measure_Fullname, T1.Measure_Store, T1.Measure_Lpu)
    FROM (
        SELECT 
            T.oid AS Measure_Oid, 
            T.name AS Measure_Name, 
            T.okei AS Measure_Okei, 
            T.rlsdrugform AS Measure_Rlsdrugform, 
            T.measure_from AS Measure_MeasureFrom, 
            T.fullname AS Measure_Fullname, 
            T.store AS Measure_Store, 
            T.lpu AS Measure_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.measures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleRelationStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView955()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleRelationStatus", @"
    SELECT VALUE -- Constructing PeopleRelationStatus
        [PostgresModel.PeopleRelationStatus](T1.PeopleRelationStatus_Oid, T1.PeopleRelationStatus_Name, T1.PeopleRelationStatus_FomsCode)
    FROM (
        SELECT 
            T.oid AS PeopleRelationStatus_Oid, 
            T.name AS PeopleRelationStatus_Name, 
            T.foms_code AS PeopleRelationStatus_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_relation_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleRelations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView956()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleRelations", @"
    SELECT VALUE -- Constructing PeopleRelations
        [PostgresModel.PeopleRelation](T1.PeopleRelation_Oid, T1.PeopleRelation_People, T1.PeopleRelation_PeopleRelation1, T1.PeopleRelation_PeopleRelationStatus)
    FROM (
        SELECT 
            T.oid AS PeopleRelation_Oid, 
            T.people AS PeopleRelation_People, 
            T.people_relation AS PeopleRelation_PeopleRelation1, 
            T.people_relation_status AS PeopleRelation_PeopleRelationStatus, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_relations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView957()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfTemplates", "\r\n    SELECT VALUE -- Constructing TrsfTemplates\r\n        [PostgresModel.TrsfTemp" +
                    "late](T1.TrsfTemplate_Oid, T1.TrsfTemplate_Name, T1.TrsfTemplate_DateCreate, T1." +
                    "TrsfTemplate_Del, T1.TrsfTemplate_PeopleType, T1.TrsfTemplate_Doctype, T1.TrsfTe" +
                    "mplate_Sk, T1.TrsfTemplate_Title, T1.TrsfTemplate_Groupby, T1.TrsfTemplate_Signa" +
                    "ture, T1.TrsfTemplate_Insurcompany, T1.TrsfTemplate_People, T1.TrsfTemplate_SfCo" +
                    "de, T1.TrsfTemplate_Otdel, T1.TrsfTemplate_SysuserCreate, T1.TrsfTemplate_Sysuse" +
                    "rDel, T1.TrsfTemplate_Usl, T1.TrsfTemplate_Oper, T1.TrsfTemplate_Kdn)\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.oid AS TrsfTemplate_Oid, \r\n            T.name " +
                    "AS TrsfTemplate_Name, \r\n            T.date_create AS TrsfTemplate_DateCreate, \r\n" +
                    "            T.del AS TrsfTemplate_Del, \r\n            T.people_type AS TrsfTempla" +
                    "te_PeopleType, \r\n            T.doctype AS TrsfTemplate_Doctype, \r\n            T." +
                    "sk AS TrsfTemplate_Sk, \r\n            T.title AS TrsfTemplate_Title, \r\n          " +
                    "  T.groupby AS TrsfTemplate_Groupby, \r\n            T.signature AS TrsfTemplate_S" +
                    "ignature, \r\n            T.insurcompany AS TrsfTemplate_Insurcompany, \r\n         " +
                    "   T.people AS TrsfTemplate_People, \r\n            T.sf_code AS TrsfTemplate_SfCo" +
                    "de, \r\n            T.otdel AS TrsfTemplate_Otdel, \r\n            T.sysuser_create " +
                    "AS TrsfTemplate_SysuserCreate, \r\n            T.sysuser_del AS TrsfTemplate_Sysus" +
                    "erDel, \r\n            T.usl AS TrsfTemplate_Usl, \r\n            T.oper AS TrsfTemp" +
                    "late_Oper, \r\n            T.kdn AS TrsfTemplate_Kdn, \r\n            True AS _from0" +
                    "\r\n        FROM PostgresEntitiesStoreContainer.trsf_templates AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfSavedReestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView958()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfSavedReestrs", @"
    SELECT VALUE -- Constructing TrsfSavedReestrs
        [PostgresModel.TrsfSavedReestr](T1.TrsfSavedReestr_Trsf, T1.TrsfSavedReestr_People, T1.TrsfSavedReestr_Service, T1.TrsfSavedReestr_Insur, T1.TrsfSavedReestr_Count, T1.TrsfSavedReestr_Cost, T1.TrsfSavedReestr_Presc, T1.TrsfSavedReestr_Oid)
    FROM (
        SELECT 
            T.trsf AS TrsfSavedReestr_Trsf, 
            T.people AS TrsfSavedReestr_People, 
            T.service AS TrsfSavedReestr_Service, 
            T.insur AS TrsfSavedReestr_Insur, 
            T.count AS TrsfSavedReestr_Count, 
            T.cost AS TrsfSavedReestr_Cost, 
            T.presc AS TrsfSavedReestr_Presc, 
            T.oid AS TrsfSavedReestr_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsf_saved_reestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Trsfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView959()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Trsfs", @"
    SELECT VALUE -- Constructing Trsfs
        [PostgresModel.Trsf](T1.Trsf_Oid, T1.Trsf_DateStart, T1.Trsf_DateEnd, T1.Trsf_PeopleType, T1.Trsf_Doctype, T1.Trsf_Insurcompany, T1.Trsf_People, T1.Trsf_Title, T1.Trsf_Signature, T1.Trsf_DateCreate, T1.Trsf_Del, T1.Trsf_DateDel, T1.Trsf_SfCode, T1.Trsf_Groupby, T1.Trsf_DateEdit, T1.Trsf_Sum, T1.Trsf_RsfNum, T1.Trsf_DateRsf, T1.Trsf_Otdel, T1.Trsf_Usl, T1.Trsf_Oper, T1.Trsf_Status)
    FROM (
        SELECT 
            T.oid AS Trsf_Oid, 
            T.date_start AS Trsf_DateStart, 
            T.date_end AS Trsf_DateEnd, 
            T.people_type AS Trsf_PeopleType, 
            T.doctype AS Trsf_Doctype, 
            T.insurcompany AS Trsf_Insurcompany, 
            T.people AS Trsf_People, 
            T.title AS Trsf_Title, 
            T.signature AS Trsf_Signature, 
            T.date_create AS Trsf_DateCreate, 
            T.del AS Trsf_Del, 
            T.date_del AS Trsf_DateDel, 
            T.sf_code AS Trsf_SfCode, 
            T.groupby AS Trsf_Groupby, 
            T.date_edit AS Trsf_DateEdit, 
            T.sum AS Trsf_Sum, 
            T.rsf_num AS Trsf_RsfNum, 
            T.date_rsf AS Trsf_DateRsf, 
            T.otdel AS Trsf_Otdel, 
            T.usl AS Trsf_Usl, 
            T.oper AS Trsf_Oper, 
            T.status AS Trsf_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfTempReestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView960()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfTempReestrs", @"
    SELECT VALUE -- Constructing TrsfTempReestrs
        [PostgresModel.TrsfTempReestr](T1.TrsfTempReestr_Oid, T1.TrsfTempReestr_People, T1.TrsfTempReestr_Presctype, T1.TrsfTempReestr_Service, T1.TrsfTempReestr_Insur, T1.TrsfTempReestr_Count, T1.TrsfTempReestr_Cost)
    FROM (
        SELECT 
            T.oid AS TrsfTempReestr_Oid, 
            T.people AS TrsfTempReestr_People, 
            T.presctype AS TrsfTempReestr_Presctype, 
            T.service AS TrsfTempReestr_Service, 
            T.insur AS TrsfTempReestr_Insur, 
            T.count AS TrsfTempReestr_Count, 
            T.cost AS TrsfTempReestr_Cost, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsf_temp_reestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfTemplateColumns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView961()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfTemplateColumns", @"
    SELECT VALUE -- Constructing TrsfTemplateColumns
        [PostgresModel.TrsfTemplateColumn](T1.TrsfTemplateColumn_Oid, T1.TrsfTemplateColumn_Template, T1.TrsfTemplateColumn_Order, T1.TrsfTemplateColumn_AllColumnsId, T1.TrsfTemplateColumn_CustomCaption)
    FROM (
        SELECT 
            T.oid AS TrsfTemplateColumn_Oid, 
            T.template AS TrsfTemplateColumn_Template, 
            T.[order] AS TrsfTemplateColumn_Order, 
            T.all_columns_id AS TrsfTemplateColumn_AllColumnsId, 
            T.custom_caption AS TrsfTemplateColumn_CustomCaption, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsf_template_columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Stattickets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView962()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Stattickets", "\r\n    SELECT VALUE -- Constructing Stattickets\r\n        [PostgresModel.Statticket" +
                    "](T1.Statticket_Id, T1.Statticket_EmpoId, T1.Statticket_EmpcId, T1.Statticket_Id" +
                    "ocId, T1.Statticket_ResultId, T1.Statticket_SubresultId, T1.Statticket_Otdel, T1" +
                    ".Statticket_Defects, T1.Statticket_Isalcohol, T1.Statticket_DieReason, T1.Statti" +
                    "cket_DieReasonMkb10, T1.Statticket_Aids, T1.Statticket_Rw, T1.Statticket_ExpellD" +
                    "ate, T1.Statticket_Sign, T1.Statticket_SignSotr, T1.Statticket_ExportFomsComment" +
                    ", T1.Statticket_Tmodel, T1.Statticket_Trauma, T1.Statticket_ChildNumber, T1.Stat" +
                    "ticket_ReasonLate, T1.Statticket_ExportFoms)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.id AS Statticket_Id, \r\n            T.empo_id AS Statticket_EmpoId, \r\n  " +
                    "          T.empc_id AS Statticket_EmpcId, \r\n            T.idoc_id AS Statticket_" +
                    "IdocId, \r\n            T.result_id AS Statticket_ResultId, \r\n            T.subres" +
                    "ult_id AS Statticket_SubresultId, \r\n            T.otdel AS Statticket_Otdel, \r\n " +
                    "           T.defects AS Statticket_Defects, \r\n            T.isalcohol AS Stattic" +
                    "ket_Isalcohol, \r\n            T.die_reason AS Statticket_DieReason, \r\n           " +
                    " T.die_reason_mkb_10 AS Statticket_DieReasonMkb10, \r\n            T.aids AS Statt" +
                    "icket_Aids, \r\n            T.rw AS Statticket_Rw, \r\n            T.expell_date AS " +
                    "Statticket_ExpellDate, \r\n            T.sign AS Statticket_Sign, \r\n            T." +
                    "sign_sotr AS Statticket_SignSotr, \r\n            T.export_foms_comment AS Stattic" +
                    "ket_ExportFomsComment, \r\n            T.tmodel AS Statticket_Tmodel, \r\n          " +
                    "  T.trauma AS Statticket_Trauma, \r\n            T.child_number AS Statticket_Chil" +
                    "dNumber, \r\n            T.reason_late AS Statticket_ReasonLate, \r\n            T.e" +
                    "xport_foms AS Statticket_ExportFoms, \r\n            True AS _from0\r\n        FROM " +
                    "PostgresEntitiesStoreContainer.stattickets AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView963()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrParams", @"
    SELECT VALUE -- Constructing SotrParams
        [PostgresModel.SotrParam](T1.SotrParam_Oid, T1.SotrParam_PresctypeAutodefault)
    FROM (
        SELECT 
            T.oid AS SotrParam_Oid, 
            T.presctype_autodefault AS SotrParam_PresctypeAutodefault, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfColumns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView964()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfColumns", @"
    SELECT VALUE -- Constructing TrsfColumns
        [PostgresModel.TrsfColumn](T1.TrsfColumn_Oid, T1.TrsfColumn_TrsfId, T1.TrsfColumn_Order, T1.TrsfColumn_AllColumnsId, T1.TrsfColumn_CustomCaption)
    FROM (
        SELECT 
            T.oid AS TrsfColumn_Oid, 
            T.trsf_id AS TrsfColumn_TrsfId, 
            T.[order] AS TrsfColumn_Order, 
            T.all_columns_id AS TrsfColumn_AllColumnsId, 
            T.custom_caption AS TrsfColumn_CustomCaption, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsf_columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrsfAllColumns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView965()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrsfAllColumns", @"
    SELECT VALUE -- Constructing TrsfAllColumns
        [PostgresModel.TrsfAllColumn](T1.TrsfAllColumn_Oid, T1.TrsfAllColumn_Fieldname, T1.TrsfAllColumn_Caption, T1.TrsfAllColumn_Sql, T1.TrsfAllColumn_IsPrimarykey, T1.TrsfAllColumn_IsHidden, T1.TrsfAllColumn_Align, T1.TrsfAllColumn_Width, T1.TrsfAllColumn_Order)
    FROM (
        SELECT 
            T.oid AS TrsfAllColumn_Oid, 
            T.fieldname AS TrsfAllColumn_Fieldname, 
            T.caption AS TrsfAllColumn_Caption, 
            T.sql AS TrsfAllColumn_Sql, 
            T.is_primarykey AS TrsfAllColumn_IsPrimarykey, 
            T.is_hidden AS TrsfAllColumn_IsHidden, 
            T.align AS TrsfAllColumn_Align, 
            T.width AS TrsfAllColumn_Width, 
            T.[order] AS TrsfAllColumn_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.trsf_all_columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayPurposes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView966()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayPurposes", @"
    SELECT VALUE -- Constructing XrayPurposes
        [PostgresModel.XrayPurpose](T1.XrayPurpose_Oid, T1.XrayPurpose_Name)
    FROM (
        SELECT 
            T.oid AS XrayPurpose_Oid, 
            T.name AS XrayPurpose_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_purposes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayUrgencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView967()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayUrgencies", @"
    SELECT VALUE -- Constructing XrayUrgencies
        [PostgresModel.XrayUrgency](T1.XrayUrgency_Oid, T1.XrayUrgency_Name, T1.XrayUrgency_AdmissionType)
    FROM (
        SELECT 
            T.oid AS XrayUrgency_Oid, 
            T.name AS XrayUrgency_Name, 
            T.AdmissionType AS XrayUrgency_AdmissionType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_urgencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayReferrals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView968()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayReferrals", @"
    SELECT VALUE -- Constructing XrayReferrals
        [PostgresModel.XrayReferral](T1.XrayReferral_Oid, T1.XrayReferral_MdocId, T1.XrayReferral_CareateSotrId, T1.XrayReferral_RegisterSotrId, T1.XrayReferral_LaborantSotrId, T1.XrayReferral_PurposeId, T1.XrayReferral_UrgencyId, T1.XrayReferral_BonusId, T1.XrayReferral_Duty, T1.XrayReferral_ReferalNum, T1.XrayReferral_CreateDt, T1.XrayReferral_RunDt)
    FROM (
        SELECT 
            T.oid AS XrayReferral_Oid, 
            T.mdoc_id AS XrayReferral_MdocId, 
            T.careate_sotr_id AS XrayReferral_CareateSotrId, 
            T.register_sotr_id AS XrayReferral_RegisterSotrId, 
            T.laborant_sotr_id AS XrayReferral_LaborantSotrId, 
            T.purpose_id AS XrayReferral_PurposeId, 
            T.urgency_id AS XrayReferral_UrgencyId, 
            T.bonus_id AS XrayReferral_BonusId, 
            T.duty AS XrayReferral_Duty, 
            T.referal_num AS XrayReferral_ReferalNum, 
            T.create_dt AS XrayReferral_CreateDt, 
            T.run_dt AS XrayReferral_RunDt, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_referrals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiagnozTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView969()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiagnozTemplates", @"
    SELECT VALUE -- Constructing DiagnozTemplates
        [PostgresModel.DiagnozTemplate](T1.DiagnozTemplate_Oid, T1.DiagnozTemplate_Parent, T1.DiagnozTemplate_Name, T1.DiagnozTemplate_Type, T1.DiagnozTemplate_Valid, T1.DiagnozTemplate_Mkb10Code, T1.DiagnozTemplate_Mkb10, T1.DiagnozTemplate_Sysuser)
    FROM (
        SELECT 
            T.oid AS DiagnozTemplate_Oid, 
            T.parent AS DiagnozTemplate_Parent, 
            T.name AS DiagnozTemplate_Name, 
            T.type AS DiagnozTemplate_Type, 
            T.valid AS DiagnozTemplate_Valid, 
            T.mkb10_code AS DiagnozTemplate_Mkb10Code, 
            T.mkb10 AS DiagnozTemplate_Mkb10, 
            T.sysuser AS DiagnozTemplate_Sysuser, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diagnoz_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemPresctemplatedetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView970()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemPresctemplatedetails", @"
    SELECT VALUE -- Constructing SystemPresctemplatedetails
        [PostgresModel.SystemPresctemplatedetail](T1.SystemPresctemplatedetail_Oid, T1.SystemPresctemplatedetail_Presctype, T1.SystemPresctemplatedetail_SystemTemplateOid, T1.SystemPresctemplatedetail_Default)
    FROM (
        SELECT 
            T.oid AS SystemPresctemplatedetail_Oid, 
            T.presctype AS SystemPresctemplatedetail_Presctype, 
            T.system_template_oid AS SystemPresctemplatedetail_SystemTemplateOid, 
            T.default AS SystemPresctemplatedetail_Default, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_presctemplatedetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescXrayparams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView971()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescXrayparams", @"
    SELECT VALUE -- Constructing PrescXrayparams
        [PostgresModel.PrescXrayparam](T1.PrescXrayparam_Oid, T1.PrescXrayparam_ShotsCount, T1.PrescXrayparam_Runtime, T1.PrescXrayparam_Dose)
    FROM (
        SELECT 
            T.oid AS PrescXrayparam_Oid, 
            T.shots_count AS PrescXrayparam_ShotsCount, 
            T.runtime AS PrescXrayparam_Runtime, 
            T.dose AS PrescXrayparam_Dose, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_xrayparams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView972()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayParams", @"
    SELECT VALUE -- Constructing XrayParams
        [PostgresModel.XrayParam](T1.XrayParam_Oid, T1.XrayParam_ShotsCount, T1.XrayParam_Runtime, T1.XrayParam_Dose, T1.XrayParam_DicomReductionId)
    FROM (
        SELECT 
            T.oid AS XrayParam_Oid, 
            T.shots_count AS XrayParam_ShotsCount, 
            T.runtime AS XrayParam_Runtime, 
            T.dose AS XrayParam_Dose, 
            T.dicom_reduction_id AS XrayParam_DicomReductionId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OtdelMdoctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView973()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OtdelMdoctypes", @"
    SELECT VALUE -- Constructing OtdelMdoctypes
        [PostgresModel.OtdelMdoctype](T1.OtdelMdoctype_Oid, T1.OtdelMdoctype_MdoctypeId, T1.OtdelMdoctype_OtdelId, T1.OtdelMdoctype_Bind, T1.OtdelMdoctype_IsDefault, T1.OtdelMdoctype_MdocGroup)
    FROM (
        SELECT 
            T.oid AS OtdelMdoctype_Oid, 
            T.mdoctype_id AS OtdelMdoctype_MdoctypeId, 
            T.otdel_id AS OtdelMdoctype_OtdelId, 
            T.bind AS OtdelMdoctype_Bind, 
            T.is_default AS OtdelMdoctype_IsDefault, 
            T.mdoc_group AS OtdelMdoctype_MdocGroup, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdel_mdoctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayDicomReductions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView974()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayDicomReductions", @"
    SELECT VALUE -- Constructing XrayDicomReductions
        [PostgresModel.XrayDicomReduction](T1.XrayDicomReduction_Oid, T1.XrayDicomReduction_Name, T1.XrayDicomReduction_Code)
    FROM (
        SELECT 
            T.oid AS XrayDicomReduction_Oid, 
            T.name AS XrayDicomReduction_Name, 
            T.code AS XrayDicomReduction_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_dicom_reductions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Diaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView975()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Diaries", @"
    SELECT VALUE -- Constructing Diaries
        [PostgresModel.Diary](T1.Diary_Oid, T1.Diary_Mdoc, T1.Diary_Content, T1.Diary_Lastdate, T1.Diary_DiaryType, T1.Diary_Presctype, T1.Diary_Sotr)
    FROM (
        SELECT 
            T.oid AS Diary_Oid, 
            T.mdoc AS Diary_Mdoc, 
            T.content AS Diary_Content, 
            T.lastdate AS Diary_Lastdate, 
            T.diary_type AS Diary_DiaryType, 
            T.presctype AS Diary_Presctype, 
            T.sotr AS Diary_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiaryTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView976()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiaryTypes", @"
    SELECT VALUE -- Constructing DiaryTypes
        [PostgresModel.DiaryType](T1.DiaryType_Oid, T1.DiaryType_Name, T1.DiaryType_IbSections)
    FROM (
        SELECT 
            T.oid AS DiaryType_Oid, 
            T.name AS DiaryType_Name, 
            T.ib_sections AS DiaryType_IbSections, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diary_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BenefitFinansingLgotTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView977()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BenefitFinansingLgotTypes", @"
    SELECT VALUE -- Constructing BenefitFinansingLgotTypes
        [PostgresModel.BenefitFinansingLgotType](T1.BenefitFinansingLgotType_Oid, T1.BenefitFinansingLgotType_BenefitFinansing, T1.BenefitFinansingLgotType_LgotType)
    FROM (
        SELECT 
            T.oid AS BenefitFinansingLgotType_Oid, 
            T.benefit_finansing AS BenefitFinansingLgotType_BenefitFinansing, 
            T.lgot_type AS BenefitFinansingLgotType_LgotType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.benefit_finansing_lgot_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LaboratoryNorms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView978()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2315);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LaboratoryNorms\r\n        [PostgresModel.Labor");
            viewString.Append("atoryNorm](T1.LaboratoryNorm_Oid, T1.LaboratoryNorm_AgeYearBegin, T1.LaboratoryN");
            viewString.Append("orm_AgeMonthBegin, T1.LaboratoryNorm_AgeDayBegin, T1.LaboratoryNorm_AgeYearEnd, ");
            viewString.Append("T1.LaboratoryNorm_AgeMonthEnd, T1.LaboratoryNorm_AgeDayEnd, T1.LaboratoryNorm_Mi");
            viewString.Append("nMen, T1.LaboratoryNorm_MaxMen, T1.LaboratoryNorm_MinWoman, T1.LaboratoryNorm_Ma");
            viewString.Append("xWoman, T1.LaboratoryNorm_DirectMen, T1.LaboratoryNorm_DirectWoman, T1.Laborator");
            viewString.Append("yNorm_EntryMen, T1.LaboratoryNorm_EntryWoman, T1.LaboratoryNorm_EntireCycle, T1.");
            viewString.Append("LaboratoryNorm_FollicularPhase, T1.LaboratoryNorm_Midcycle, T1.LaboratoryNorm_Lu");
            viewString.Append("tealPhase, T1.LaboratoryNorm_Trimestr1, T1.LaboratoryNorm_Trimestr2, T1.Laborato");
            viewString.Append("ryNorm_Trimestr3, T1.LaboratoryNorm_Presctypeparam, T1.LaboratoryNorm_RangeEntry");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.oid AS LaboratoryNorm_Oid, \r\n     ");
            viewString.Append("       T.age_year_begin AS LaboratoryNorm_AgeYearBegin, \r\n            T.age_mont");
            viewString.Append("h_begin AS LaboratoryNorm_AgeMonthBegin, \r\n            T.age_day_begin AS Labora");
            viewString.Append("toryNorm_AgeDayBegin, \r\n            T.age_year_end AS LaboratoryNorm_AgeYearEnd,");
            viewString.Append(" \r\n            T.age_month_end AS LaboratoryNorm_AgeMonthEnd, \r\n            T.ag");
            viewString.Append("e_day_end AS LaboratoryNorm_AgeDayEnd, \r\n            T.min_men AS LaboratoryNorm");
            viewString.Append("_MinMen, \r\n            T.max_men AS LaboratoryNorm_MaxMen, \r\n            T.min_w");
            viewString.Append("oman AS LaboratoryNorm_MinWoman, \r\n            T.max_woman AS LaboratoryNorm_Max");
            viewString.Append("Woman, \r\n            T.direct_men AS LaboratoryNorm_DirectMen, \r\n            T.d");
            viewString.Append("irect_woman AS LaboratoryNorm_DirectWoman, \r\n            T.entry_men AS Laborato");
            viewString.Append("ryNorm_EntryMen, \r\n            T.entry_woman AS LaboratoryNorm_EntryWoman, \r\n   ");
            viewString.Append("         T.entire_cycle AS LaboratoryNorm_EntireCycle, \r\n            T.follicula");
            viewString.Append("r_phase AS LaboratoryNorm_FollicularPhase, \r\n            T.midcycle AS Laborator");
            viewString.Append("yNorm_Midcycle, \r\n            T.luteal_phase AS LaboratoryNorm_LutealPhase, \r\n  ");
            viewString.Append("          T.trimestr_1 AS LaboratoryNorm_Trimestr1, \r\n            T.trimestr_2 A");
            viewString.Append("S LaboratoryNorm_Trimestr2, \r\n            T.trimestr_3 AS LaboratoryNorm_Trimest");
            viewString.Append("r3, \r\n            T.presctypeparam AS LaboratoryNorm_Presctypeparam, \r\n         ");
            viewString.Append("   T.range_entry AS LaboratoryNorm_RangeEntry, \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM PostgresEntitiesStoreContainer.laboratory_norms AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LaboratoryNorms", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Drugstores
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView979()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Drugstores", @"
    SELECT VALUE -- Constructing Drugstores
        [PostgresModel.Drugstore](T1.Drugstore_Oid, T1.Drugstore_MoGroupOid)
    FROM (
        SELECT 
            T.oid AS Drugstore_Oid, 
            T.mo_group_oid AS Drugstore_MoGroupOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.drugstores AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SysuserPharmacies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView980()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SysuserPharmacies", @"
    SELECT VALUE -- Constructing SysuserPharmacies
        [PostgresModel.SysuserPharmacy](T1.SysuserPharmacy_Oid, T1.SysuserPharmacy_Drugstore)
    FROM (
        SELECT 
            T.oid AS SysuserPharmacy_Oid, 
            T.drugstore AS SysuserPharmacy_Drugstore, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sysuser_pharmacies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NosologyMkb10Benefitmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView981()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NosologyMkb10Benefitmedics", @"
    SELECT VALUE -- Constructing NosologyMkb10Benefitmedics
        [PostgresModel.NosologyMkb10Benefitmedic](T1.NosologyMkb10Benefitmedic_Oid, T1.NosologyMkb10Benefitmedic_NosologyMkb10, T1.NosologyMkb10Benefitmedic_BenefitMedic, T1.NosologyMkb10Benefitmedic_Description, T1.NosologyMkb10Benefitmedic_Dl)
    FROM (
        SELECT 
            T.oid AS NosologyMkb10Benefitmedic_Oid, 
            T.nosology_mkb10 AS NosologyMkb10Benefitmedic_NosologyMkb10, 
            T.benefit_medic AS NosologyMkb10Benefitmedic_BenefitMedic, 
            T.description AS NosologyMkb10Benefitmedic_Description, 
            T.dl AS NosologyMkb10Benefitmedic_Dl, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.nosology_mkb10_benefitmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tradenames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView982()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tradenames", @"
    SELECT VALUE -- Constructing Tradenames
        [PostgresModel.Tradename](T1.Tradename_Oid, T1.Tradename_Id, T1.Tradename_Name, T1.Tradename_Iname)
    FROM (
        SELECT 
            T.oid AS Tradename_Oid, 
            T.id AS Tradename_Id, 
            T.name AS Tradename_Name, 
            T.iname AS Tradename_Iname, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tradenames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipePrescriptionTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView983()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipePrescriptionTypes", @"
    SELECT VALUE -- Constructing RecipePrescriptionTypes
        [PostgresModel.RecipePrescriptionType](T1.RecipePrescriptionType_Oid, T1.RecipePrescriptionType_Name, T1.RecipePrescriptionType_Order)
    FROM (
        SELECT 
            T.oid AS RecipePrescriptionType_Oid, 
            T.name AS RecipePrescriptionType_Name, 
            T.[order] AS RecipePrescriptionType_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_prescription_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tablos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView984()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tablos", @"
    SELECT VALUE -- Constructing Tablos
        [PostgresModel.Tablo](T1.Tablo_Oid, T1.Tablo_Name, T1.Tablo_Lpu, T1.Tablo_TabloType, T1.Tablo_Linecount, T1.Tablo_Refreshtime, T1.Tablo_Note, T1.Tablo_Linetext, T1.Tablo_Lpucreate, T1.Tablo_CssType, T1.Tablo_Code)
    FROM (
        SELECT 
            T.oid AS Tablo_Oid, 
            T.name AS Tablo_Name, 
            T.lpu AS Tablo_Lpu, 
            T.tablo_type AS Tablo_TabloType, 
            T.linecount AS Tablo_Linecount, 
            T.refreshtime AS Tablo_Refreshtime, 
            T.note AS Tablo_Note, 
            T.linetext AS Tablo_Linetext, 
            T.lpucreate AS Tablo_Lpucreate, 
            T.css_type AS Tablo_CssType, 
            T.code AS Tablo_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tablos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Receptiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView985()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Receptiontypes", "\r\n    SELECT VALUE -- Constructing Receptiontypes\r\n        [PostgresModel.Recepti" +
                    "ontype](T1.Receptiontype_Oid, T1.Receptiontype_Color, T1.Receptiontype_ColorStyl" +
                    "e, T1.Receptiontype_Name, T1.Receptiontype_FromAge, T1.Receptiontype_ToAge, T1.R" +
                    "eceptiontype_Sex, T1.Receptiontype_ColorText, T1.Receptiontype_ColorSelect, T1.R" +
                    "eceptiontype_ColorMouseover, T1.Receptiontype_Lpu, T1.Receptiontype_Class, T1.Re" +
                    "ceptiontype_IsQuoting, T1.Receptiontype_FinancingType, T1.Receptiontype_MdocType" +
                    ", T1.Receptiontype_BusycolorStyle, T1.Receptiontype_BusycolorText, T1.Receptiont" +
                    "ype_BusycolorSelect, T1.Receptiontype_BusycolorMouseover)\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.oid AS Receptiontype_Oid, \r\n            T.color AS Recepti" +
                    "ontype_Color, \r\n            T.color_style AS Receptiontype_ColorStyle, \r\n       " +
                    "     T.name AS Receptiontype_Name, \r\n            T.from_age AS Receptiontype_Fro" +
                    "mAge, \r\n            T.to_age AS Receptiontype_ToAge, \r\n            T.sex AS Rece" +
                    "ptiontype_Sex, \r\n            T.color_text AS Receptiontype_ColorText, \r\n        " +
                    "    T.color_select AS Receptiontype_ColorSelect, \r\n            T.color_mouseover" +
                    " AS Receptiontype_ColorMouseover, \r\n            T.lpu AS Receptiontype_Lpu, \r\n  " +
                    "          T.class AS Receptiontype_Class, \r\n            T.is_quoting AS Receptio" +
                    "ntype_IsQuoting, \r\n            T.financing_type AS Receptiontype_FinancingType, " +
                    "\r\n            T.mdoc_type AS Receptiontype_MdocType, \r\n            T.busycolor_s" +
                    "tyle AS Receptiontype_BusycolorStyle, \r\n            T.busycolor_text AS Receptio" +
                    "ntype_BusycolorText, \r\n            T.busycolor_select AS Receptiontype_Busycolor" +
                    "Select, \r\n            T.busycolor_mouseover AS Receptiontype_BusycolorMouseover," +
                    " \r\n            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.recep" +
                    "tiontypes AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexActions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView986()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexActions", @"
    SELECT VALUE -- Constructing ProfexActions
        [PostgresModel.ProfexAction](T1.ProfexAction_Oid, T1.ProfexAction_Name, T1.ProfexAction_CreationDate, T1.ProfexAction_StatusEvent, T1.ProfexAction_ProfexContract, T1.ProfexAction_OpenDate, T1.ProfexAction_CloseDate, T1.ProfexAction_Type, T1.ProfexAction_CreateSysuser, T1.ProfexAction_CreateOtdel)
    FROM (
        SELECT 
            T.oid AS ProfexAction_Oid, 
            T.name AS ProfexAction_Name, 
            T.creation_date AS ProfexAction_CreationDate, 
            T.status_event AS ProfexAction_StatusEvent, 
            T.profex_contract AS ProfexAction_ProfexContract, 
            T.open_date AS ProfexAction_OpenDate, 
            T.close_date AS ProfexAction_CloseDate, 
            T.type AS ProfexAction_Type, 
            T.create_sysuser AS ProfexAction_CreateSysuser, 
            T.create_otdel AS ProfexAction_CreateOtdel, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_actions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexCompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView987()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexCompanies", @"
    SELECT VALUE -- Constructing ProfexCompanies
        [PostgresModel.ProfexCompany](T1.ProfexCompany_Oid, T1.ProfexCompany_Company, T1.ProfexCompany_Lpu)
    FROM (
        SELECT 
            T.oid AS ProfexCompany_Oid, 
            T.company AS ProfexCompany_Company, 
            T.lpu AS ProfexCompany_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_companies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexContracts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView988()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexContracts", @"
    SELECT VALUE -- Constructing ProfexContracts
        [PostgresModel.ProfexContract](T1.ProfexContract_Oid, T1.ProfexContract_OpeneDate, T1.ProfexContract_CloseDate, T1.ProfexContract_NumContract, T1.ProfexContract_CreationDate, T1.ProfexContract_CreateSysuser, T1.ProfexContract_CreateOtdel, T1.ProfexContract_ProfexCompany)
    FROM (
        SELECT 
            T.oid AS ProfexContract_Oid, 
            T.opene_date AS ProfexContract_OpeneDate, 
            T.close_date AS ProfexContract_CloseDate, 
            T.num_contract AS ProfexContract_NumContract, 
            T.creation_date AS ProfexContract_CreationDate, 
            T.create_sysuser AS ProfexContract_CreateSysuser, 
            T.create_otdel AS ProfexContract_CreateOtdel, 
            T.profex_company AS ProfexContract_ProfexCompany, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_contracts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView989()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactors", @"
    SELECT VALUE -- Constructing ProfexProffactors
        [PostgresModel.ProfexProffactor](T1.ProfexProffactor_Oid, T1.ProfexProffactor_Code, T1.ProfexProffactor_Name, T1.ProfexProffactor_Parent)
    FROM (
        SELECT 
            T.oid AS ProfexProffactor_Oid, 
            T.code AS ProfexProffactor_Code, 
            T.name AS ProfexProffactor_Name, 
            T.parent AS ProfexProffactor_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactorPrescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView990()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactorPrescs", @"
    SELECT VALUE -- Constructing ProfexProffactorPrescs
        [PostgresModel.ProfexProffactorPresc](T1.ProfexProffactorPresc_Oid, T1.ProfexProffactorPresc_Proffactor, T1.ProfexProffactorPresc_Presctype, T1.ProfexProffactorPresc_Indication)
    FROM (
        SELECT 
            T.oid AS ProfexProffactorPresc_Oid, 
            T.proffactor AS ProfexProffactorPresc_Proffactor, 
            T.presctype AS ProfexProffactorPresc_Presctype, 
            T.indication AS ProfexProffactorPresc_Indication, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactor_prescs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexActionsTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView991()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexActionsTypes", @"
    SELECT VALUE -- Constructing ProfexActionsTypes
        [PostgresModel.ProfexActionsType](T1.ProfexActionsType_Oid, T1.ProfexActionsType_Name)
    FROM (
        SELECT 
            T.oid AS ProfexActionsType_Oid, 
            T.name AS ProfexActionsType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_actions_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertRaitings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView992()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertRaitings", @"
    SELECT VALUE -- Constructing ExpertRaitings
        [PostgresModel.ExpertRaiting](T1.ExpertRaiting_Oid, T1.ExpertRaiting_MdocId, T1.ExpertRaiting_AmbticketId, T1.ExpertRaiting_Sysuser, T1.ExpertRaiting_Sysdate, T1.ExpertRaiting_Expert)
    FROM (
        SELECT 
            T.oid AS ExpertRaiting_Oid, 
            T.mdoc_id AS ExpertRaiting_MdocId, 
            T.ambticket_id AS ExpertRaiting_AmbticketId, 
            T.sysuser AS ExpertRaiting_Sysuser, 
            T.sysdate AS ExpertRaiting_Sysdate, 
            T.expert AS ExpertRaiting_Expert, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_raitings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertRaitingSectionParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView993()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertRaitingSectionParts", @"
    SELECT VALUE -- Constructing ExpertRaitingSectionParts
        [PostgresModel.ExpertRaitingSectionPart](T1.ExpertRaitingSectionPart_Oid, T1.ExpertRaitingSectionPart_ExpertSectionId, T1.ExpertRaitingSectionPart_PartId, T1.ExpertRaitingSectionPart_IsMainExpert)
    FROM (
        SELECT 
            T.oid AS ExpertRaitingSectionPart_Oid, 
            T.expert_section_id AS ExpertRaitingSectionPart_ExpertSectionId, 
            T.part_id AS ExpertRaitingSectionPart_PartId, 
            T.is_main_expert AS ExpertRaitingSectionPart_IsMainExpert, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_raiting_section_parts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertRaitingSections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView994()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertRaitingSections", @"
    SELECT VALUE -- Constructing ExpertRaitingSections
        [PostgresModel.ExpertRaitingSection](T1.ExpertRaitingSection_Oid, T1.ExpertRaitingSection_SectionId, T1.ExpertRaitingSection_ExpertRaitingId)
    FROM (
        SELECT 
            T.oid AS ExpertRaitingSection_Oid, 
            T.section_id AS ExpertRaitingSection_SectionId, 
            T.expert_raiting_id AS ExpertRaitingSection_ExpertRaitingId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_raiting_sections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertPartTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView995()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertPartTypes", @"
    SELECT VALUE -- Constructing ExpertPartTypes
        [PostgresModel.ExpertPartType](T1.ExpertPartType_Oid, T1.ExpertPartType_Name, T1.ExpertPartType_Show)
    FROM (
        SELECT 
            T.oid AS ExpertPartType_Oid, 
            T.name AS ExpertPartType_Name, 
            T.show AS ExpertPartType_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_part_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertTemplationsParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView996()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertTemplationsParts", @"
    SELECT VALUE -- Constructing ExpertTemplationsParts
        [PostgresModel.ExpertTemplationsPart](T1.ExpertTemplationsPart_Oid, T1.ExpertTemplationsPart_ExpertPartType, T1.ExpertTemplationsPart_Descriprions, T1.ExpertTemplationsPart_Raiting, T1.ExpertTemplationsPart_ExpertTemplationsSections)
    FROM (
        SELECT 
            T.oid AS ExpertTemplationsPart_Oid, 
            T.expert_part_type AS ExpertTemplationsPart_ExpertPartType, 
            T.descriprions AS ExpertTemplationsPart_Descriprions, 
            T.raiting AS ExpertTemplationsPart_Raiting, 
            T.expert_templations_sections AS ExpertTemplationsPart_ExpertTemplationsSections, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_templations_parts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertTemplationsSections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView997()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertTemplationsSections", @"
    SELECT VALUE -- Constructing ExpertTemplationsSections
        [PostgresModel.ExpertTemplationsSection](T1.ExpertTemplationsSection_Oid, T1.ExpertTemplationsSection_SectionName, T1.ExpertTemplationsSection_Lpu, T1.ExpertTemplationsSection_Description, T1.ExpertTemplationsSection_Order)
    FROM (
        SELECT 
            T.oid AS ExpertTemplationsSection_Oid, 
            T.section_name AS ExpertTemplationsSection_SectionName, 
            T.lpu AS ExpertTemplationsSection_Lpu, 
            T.description AS ExpertTemplationsSection_Description, 
            T.[order] AS ExpertTemplationsSection_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_templations_sections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleSpecialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView998()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleSpecialties", @"
    SELECT VALUE -- Constructing PeopleSpecialties
        [PostgresModel.PeopleSpecialty](T1.PeopleSpecialty_Oid, T1.PeopleSpecialty_People, T1.PeopleSpecialty_Specialty, T1.PeopleSpecialty_CreateDatetime, T1.PeopleSpecialty_Main)
    FROM (
        SELECT 
            T.oid AS PeopleSpecialty_Oid, 
            T.people AS PeopleSpecialty_People, 
            T.specialty AS PeopleSpecialty_Specialty, 
            T.create_datetime AS PeopleSpecialty_CreateDatetime, 
            T.main AS PeopleSpecialty_Main, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_specialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Specialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView999()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Specialties", @"
    SELECT VALUE -- Constructing Specialties
        [PostgresModel.Specialty](T1.Specialty_Oid, T1.Specialty_Name, T1.Specialty_Code)
    FROM (
        SELECT 
            T.oid AS Specialty_Oid, 
            T.name AS Specialty_Name, 
            T.code AS Specialty_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.specialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExpertResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1000()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExpertResults", @"
    SELECT VALUE -- Constructing ExpertResults
        [PostgresModel.ExpertResult](T1.ExpertResult_Oid, T1.ExpertResult_MinValue, T1.ExpertResult_MaxValue, T1.ExpertResult_Raiting, T1.ExpertResult_Description, T1.ExpertResult_Lpu)
    FROM (
        SELECT 
            T.oid AS ExpertResult_Oid, 
            T.min_value AS ExpertResult_MinValue, 
            T.max_value AS ExpertResult_MaxValue, 
            T.raiting AS ExpertResult_Raiting, 
            T.description AS ExpertResult_Description, 
            T.lpu AS ExpertResult_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.expert_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VipPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1001()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VipPeople", @"
    SELECT VALUE -- Constructing VipPeople
        [PostgresModel.VipPerson](T1.VipPerson_Oid, T1.VipPerson_People, T1.VipPerson_Mdoc, T1.VipPerson_Lpu)
    FROM (
        SELECT 
            T.oid AS VipPerson_Oid, 
            T.people AS VipPerson_People, 
            T.mdoc AS VipPerson_Mdoc, 
            T.lpu AS VipPerson_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vip_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mkb10Templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1002()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mkb10Templates", @"
    SELECT VALUE -- Constructing Mkb10Templates
        [PostgresModel.Mkb10Template](T1.Mkb10Template_Oid, T1.Mkb10Template_Name)
    FROM (
        SELECT 
            T.oid AS Mkb10Template_Oid, 
            T.name AS Mkb10Template_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mkb_10_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MsecMains
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1003()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MsecMains", @"
    SELECT VALUE -- Constructing MsecMains
        [PostgresModel.MsecMain](T1.MsecMain_Oid, T1.MsecMain_VkMainId, T1.MsecMain_Number, T1.MsecMain_DateNapr, T1.MsecMain_MsecTarget, T1.MsecMain_MsecConclusionId, T1.MsecMain_Description, T1.MsecMain_InvalidGroupId, T1.MsecMain_DateEndNapr, T1.MsecMain_DateConclusion)
    FROM (
        SELECT 
            T.oid AS MsecMain_Oid, 
            T.vk_main_id AS MsecMain_VkMainId, 
            T.number AS MsecMain_Number, 
            T.date_napr AS MsecMain_DateNapr, 
            T.msec_target AS MsecMain_MsecTarget, 
            T.msec_conclusion_id AS MsecMain_MsecConclusionId, 
            T.description AS MsecMain_Description, 
            T.invalid_group_id AS MsecMain_InvalidGroupId, 
            T.date_end_napr AS MsecMain_DateEndNapr, 
            T.date_conclusion AS MsecMain_DateConclusion, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.msec_mains AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MsecTargets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1004()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MsecTargets", @"
    SELECT VALUE -- Constructing MsecTargets
        [PostgresModel.MsecTarget](T1.MsecTarget_Oid, T1.MsecTarget_Name, T1.MsecTarget_ShortName, T1.MsecTarget_Show, T1.MsecTarget_Name2, T1.MsecTarget_Status)
    FROM (
        SELECT 
            T.oid AS MsecTarget_Oid, 
            T.name AS MsecTarget_Name, 
            T.short_name AS MsecTarget_ShortName, 
            T.show AS MsecTarget_Show, 
            T.name2 AS MsecTarget_Name2, 
            T.status AS MsecTarget_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.msec_targets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkCharacters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1005()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkCharacters", @"
    SELECT VALUE -- Constructing VkCharacters
        [PostgresModel.VkCharacter](T1.VkCharacter_Oid, T1.VkCharacter_Name, T1.VkCharacter_ShortName, T1.VkCharacter_Show, T1.VkCharacter_Name2, T1.VkCharacter_Status)
    FROM (
        SELECT 
            T.oid AS VkCharacter_Oid, 
            T.name AS VkCharacter_Name, 
            T.short_name AS VkCharacter_ShortName, 
            T.show AS VkCharacter_Show, 
            T.name2 AS VkCharacter_Name2, 
            T.status AS VkCharacter_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_characters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkConclusions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1006()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkConclusions", @"
    SELECT VALUE -- Constructing VkConclusions
        [PostgresModel.VkConclusion](T1.VkConclusion_Oid, T1.VkConclusion_Name, T1.VkConclusion_ShortName, T1.VkConclusion_Show, T1.VkConclusion_Name2, T1.VkConclusion_Status)
    FROM (
        SELECT 
            T.oid AS VkConclusion_Oid, 
            T.name AS VkConclusion_Name, 
            T.short_name AS VkConclusion_ShortName, 
            T.show AS VkConclusion_Show, 
            T.name2 AS VkConclusion_Name2, 
            T.status AS VkConclusion_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_conclusions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MsecConclusins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1007()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MsecConclusins", @"
    SELECT VALUE -- Constructing MsecConclusins
        [PostgresModel.MsecConclusin](T1.MsecConclusin_Oid, T1.MsecConclusin_Name, T1.MsecConclusin_ShortName, T1.MsecConclusin_Show, T1.MsecConclusin_Name2, T1.MsecConclusin_Status)
    FROM (
        SELECT 
            T.oid AS MsecConclusin_Oid, 
            T.name AS MsecConclusin_Name, 
            T.short_name AS MsecConclusin_ShortName, 
            T.show AS MsecConclusin_Show, 
            T.name2 AS MsecConclusin_Name2, 
            T.status AS MsecConclusin_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.msec_conclusins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1008()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkResults", @"
    SELECT VALUE -- Constructing VkResults
        [PostgresModel.VkResult](T1.VkResult_Oid, T1.VkResult_Name, T1.VkResult_ShortName, T1.VkResult_Show, T1.VkResult_Name2, T1.VkResult_Status)
    FROM (
        SELECT 
            T.oid AS VkResult_Oid, 
            T.name AS VkResult_Name, 
            T.short_name AS VkResult_ShortName, 
            T.show AS VkResult_Show, 
            T.name2 AS VkResult_Name2, 
            T.status AS VkResult_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkStandarts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1009()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkStandarts", @"
    SELECT VALUE -- Constructing VkStandarts
        [PostgresModel.VkStandart](T1.VkStandart_Oid, T1.VkStandart_Name, T1.VkStandart_ShortName, T1.VkStandart_Show, T1.VkStandart_Name2, T1.VkStandart_Status)
    FROM (
        SELECT 
            T.oid AS VkStandart_Oid, 
            T.name AS VkStandart_Name, 
            T.short_name AS VkStandart_ShortName, 
            T.show AS VkStandart_Show, 
            T.name2 AS VkStandart_Name2, 
            T.status AS VkStandart_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_standarts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkTargets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1010()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkTargets", @"
    SELECT VALUE -- Constructing VkTargets
        [PostgresModel.VkTarget](T1.VkTarget_Oid, T1.VkTarget_Name, T1.VkTarget_ShortName, T1.VkTarget_Show, T1.VkTarget_Name2, T1.VkTarget_Status)
    FROM (
        SELECT 
            T.oid AS VkTarget_Oid, 
            T.name AS VkTarget_Name, 
            T.short_name AS VkTarget_ShortName, 
            T.show AS VkTarget_Show, 
            T.name2 AS VkTarget_Name2, 
            T.status AS VkTarget_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_targets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1011()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkTypes", @"
    SELECT VALUE -- Constructing VkTypes
        [PostgresModel.VkType](T1.VkType_Oid, T1.VkType_Name, T1.VkType_ShortName, T1.VkType_Show, T1.VkType_Name2, T1.VkType_Status)
    FROM (
        SELECT 
            T.oid AS VkType_Oid, 
            T.name AS VkType_Name, 
            T.short_name AS VkType_ShortName, 
            T.show AS VkType_Show, 
            T.name2 AS VkType_Name2, 
            T.status AS VkType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkMains
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1012()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkMains", @"
    SELECT VALUE -- Constructing VkMains
        [PostgresModel.VkMain](T1.VkMain_Oid, T1.VkMain_PeopleId, T1.VkMain_VkCharacrer, T1.VkMain_VkType, T1.VkMain_VkTarget, T1.VkMain_VkStandart, T1.VkMain_VkResult, T1.VkMain_VkConclusion, T1.VkMain_VkConclusionReason, T1.VkMain_CreateDate, T1.VkMain_Creator, T1.VkMain_Diagnoz, T1.VkMain_MdocId, T1.VkMain_VkPred, T1.VkMain_VkFirstMem, T1.VkMain_VkSecondMem, T1.VkMain_VkThirhMem)
    FROM (
        SELECT 
            T.oid AS VkMain_Oid, 
            T.people_id AS VkMain_PeopleId, 
            T.vk_characrer AS VkMain_VkCharacrer, 
            T.vk_type AS VkMain_VkType, 
            T.vk_target AS VkMain_VkTarget, 
            T.vk_standart AS VkMain_VkStandart, 
            T.vk_result AS VkMain_VkResult, 
            T.vk_conclusion AS VkMain_VkConclusion, 
            T.vk_conclusion_reason AS VkMain_VkConclusionReason, 
            T.create_date AS VkMain_CreateDate, 
            T.creator AS VkMain_Creator, 
            T.diagnoz AS VkMain_Diagnoz, 
            T.mdoc_id AS VkMain_MdocId, 
            T.vk_pred AS VkMain_VkPred, 
            T.vk_first_mem AS VkMain_VkFirstMem, 
            T.vk_second_mem AS VkMain_VkSecondMem, 
            T.vk_thirh_mem AS VkMain_VkThirhMem, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_mains AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactorProfexlists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1013()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactorProfexlists", @"
    SELECT VALUE -- Constructing ProfexProffactorProfexlists
        [PostgresModel.ProfexProffactorProfexlist](T1.ProfexProffactorProfexlist_Oid, T1.ProfexProffactorProfexlist_ProphexList, T1.ProfexProffactorProfexlist_Proffactor, T1.ProfexProffactorProfexlist_FacktFactor)
    FROM (
        SELECT 
            T.oid AS ProfexProffactorProfexlist_Oid, 
            T.prophex_list AS ProfexProffactorProfexlist_ProphexList, 
            T.proffactor AS ProfexProffactorProfexlist_Proffactor, 
            T.fackt_factor AS ProfexProffactorProfexlist_FacktFactor, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactor_profexlists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactorInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1014()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactorInfos", @"
    SELECT VALUE -- Constructing ProfexProffactorInfos
        [PostgresModel.ProfexProffactorInfo](T1.ProfexProffactorInfo_Oid, T1.ProfexProffactorInfo_Contraindications, T1.ProfexProffactorInfo_Discription)
    FROM (
        SELECT 
            T.oid AS ProfexProffactorInfo_Oid, 
            T.contraindications AS ProfexProffactorInfo_Contraindications, 
            T.discription AS ProfexProffactorInfo_Discription, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactor_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexLists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1015()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexLists", @"
    SELECT VALUE -- Constructing ProfexLists
        [PostgresModel.ProfexList](T1.ProfexList_Oid, T1.ProfexList_ProfAction, T1.ProfexList_Mdoc, T1.ProfexList_StatusEvent, T1.ProfexList_Workconditions, T1.ProfexList_ProfpageAll, T1.ProfexList_ProfpageCurrent, T1.ProfexList_ProfexDepartment)
    FROM (
        SELECT 
            T.oid AS ProfexList_Oid, 
            T.prof_action AS ProfexList_ProfAction, 
            T.mdoc AS ProfexList_Mdoc, 
            T.status_event AS ProfexList_StatusEvent, 
            T.workconditions AS ProfexList_Workconditions, 
            T.profpage_all AS ProfexList_ProfpageAll, 
            T.profpage_current AS ProfexList_ProfpageCurrent, 
            T.profex_department AS ProfexList_ProfexDepartment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_lists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexWorkconditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1016()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexWorkconditions", @"
    SELECT VALUE -- Constructing ProfexWorkconditions
        [PostgresModel.ProfexWorkcondition](T1.ProfexWorkcondition_Oid, T1.ProfexWorkcondition_Name)
    FROM (
        SELECT 
            T.oid AS ProfexWorkcondition_Oid, 
            T.name AS ProfexWorkcondition_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_workconditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexListNazs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1017()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexListNazs", @"
    SELECT VALUE -- Constructing ProfexListNazs
        [PostgresModel.ProfexListNaz](T1.ProfexListNaz_Oid, T1.ProfexListNaz_ProfexList, T1.ProfexListNaz_Presc, T1.ProfexListNaz_PrescType, T1.ProfexListNaz_ExecSotr, T1.ProfexListNaz_Naztype, T1.ProfexListNaz_Result, T1.ProfexListNaz_GroupHealth, T1.ProfexListNaz_Conclusion, T1.ProfexListNaz_ProfexConclusion, T1.ProfexListNaz_Recommends, T1.ProfexListNaz_NumProtocol, T1.ProfexListNaz_DateProtocol, T1.ProfexListNaz_ConclusionProtocol)
    FROM (
        SELECT 
            T.oid AS ProfexListNaz_Oid, 
            T.profex_list AS ProfexListNaz_ProfexList, 
            T.presc AS ProfexListNaz_Presc, 
            T.presc_type AS ProfexListNaz_PrescType, 
            T.exec_sotr AS ProfexListNaz_ExecSotr, 
            T.naztype AS ProfexListNaz_Naztype, 
            T.result AS ProfexListNaz_Result, 
            T.group_health AS ProfexListNaz_GroupHealth, 
            T.conclusion AS ProfexListNaz_Conclusion, 
            T.profex_conclusion AS ProfexListNaz_ProfexConclusion, 
            T.recommends AS ProfexListNaz_Recommends, 
            T.num_protocol AS ProfexListNaz_NumProtocol, 
            T.date_protocol AS ProfexListNaz_DateProtocol, 
            T.conclusion_protocol AS ProfexListNaz_ConclusionProtocol, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_list_nazs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1018()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexResults", @"
    SELECT VALUE -- Constructing ProfexResults
        [PostgresModel.ProfexResult](T1.ProfexResult_Oid, T1.ProfexResult_Name)
    FROM (
        SELECT 
            T.oid AS ProfexResult_Oid, 
            T.name AS ProfexResult_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexResultComments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1019()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexResultComments", @"
    SELECT VALUE -- Constructing ProfexResultComments
        [PostgresModel.ProfexResultComment](T1.ProfexResultComment_Oid, T1.ProfexResultComment_Name)
    FROM (
        SELECT 
            T.oid AS ProfexResultComment_Oid, 
            T.name AS ProfexResultComment_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_result_comments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartContracts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1020()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartContracts", @"
    SELECT VALUE -- Constructing CounterpartContracts
        [PostgresModel.CounterpartContract](T1.CounterpartContract_Oid, T1.CounterpartContract_CompanyId, T1.CounterpartContract_Num, T1.CounterpartContract_Comment, T1.CounterpartContract_MaxSummOpl, T1.CounterpartContract_MaxOplPeople, T1.CounterpartContract_PayTime, T1.CounterpartContract_AccountLpu, T1.CounterpartContract_Parent, T1.CounterpartContract_ServiceGroup)
    FROM (
        SELECT 
            T.oid AS CounterpartContract_Oid, 
            T.company_id AS CounterpartContract_CompanyId, 
            T.num AS CounterpartContract_Num, 
            T.comment AS CounterpartContract_Comment, 
            T.max_summ_opl AS CounterpartContract_MaxSummOpl, 
            T.max_opl_people AS CounterpartContract_MaxOplPeople, 
            T.pay_time AS CounterpartContract_PayTime, 
            T.account_lpu AS CounterpartContract_AccountLpu, 
            T.parent AS CounterpartContract_Parent, 
            T.service_group AS CounterpartContract_ServiceGroup, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_contracts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicGivens
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1021()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicGivens", @"
    SELECT VALUE -- Constructing MedicGivens
        [PostgresModel.MedicGiven](T1.MedicGiven_Id, T1.MedicGiven_PrescMark, T1.MedicGiven_Recipe, T1.MedicGiven_Medicgiven, T1.MedicGiven_Sotrfrom, T1.MedicGiven_DateGiven, T1.MedicGiven_Date, T1.MedicGiven_Count, T1.MedicGiven_PositionDoc)
    FROM (
        SELECT 
            T.id AS MedicGiven_Id, 
            T.presc_mark AS MedicGiven_PrescMark, 
            T.recipe AS MedicGiven_Recipe, 
            T.medicgiven AS MedicGiven_Medicgiven, 
            T.sotrfrom AS MedicGiven_Sotrfrom, 
            T.date_given AS MedicGiven_DateGiven, 
            T.date AS MedicGiven_Date, 
            T.count AS MedicGiven_Count, 
            T.position_doc AS MedicGiven_PositionDoc, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_givens AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartPrograms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1022()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartPrograms", @"
    SELECT VALUE -- Constructing CounterpartPrograms
        [PostgresModel.CounterpartProgram](T1.CounterpartProgram_Oid, T1.CounterpartProgram_ContractId, T1.CounterpartProgram_Cost, T1.CounterpartProgram_DateBeg, T1.CounterpartProgram_DateEnd, T1.CounterpartProgram_Duration, T1.CounterpartProgram_Comment, T1.CounterpartProgram_Name, T1.CounterpartProgram_Condition, T1.CounterpartProgram_CostReplace, T1.CounterpartProgram_DateCancel, T1.CounterpartProgram_CancelPrevLetter, T1.CounterpartProgram_DiagAction)
    FROM (
        SELECT 
            T.oid AS CounterpartProgram_Oid, 
            T.contract_id AS CounterpartProgram_ContractId, 
            T.cost AS CounterpartProgram_Cost, 
            T.date_beg AS CounterpartProgram_DateBeg, 
            T.date_end AS CounterpartProgram_DateEnd, 
            T.duration AS CounterpartProgram_Duration, 
            T.comment AS CounterpartProgram_Comment, 
            T.name AS CounterpartProgram_Name, 
            T.condition AS CounterpartProgram_Condition, 
            T.cost_replace AS CounterpartProgram_CostReplace, 
            T.date_cancel AS CounterpartProgram_DateCancel, 
            T.cancel_prev_letter AS CounterpartProgram_CancelPrevLetter, 
            T.diag_action AS CounterpartProgram_DiagAction, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_programs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistFormstates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1023()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistFormstates", @"
    SELECT VALUE -- Constructing SicklistFormstates
        [PostgresModel.SicklistFormstate](T1.SicklistFormstate_Oid, T1.SicklistFormstate_Name)
    FROM (
        SELECT 
            T.oid AS SicklistFormstate_Oid, 
            T.name AS SicklistFormstate_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_formstates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistFormtitles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1024()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistFormtitles", @"
    SELECT VALUE -- Constructing SicklistFormtitles
        [PostgresModel.SicklistFormtitle](T1.SicklistFormtitle_Oid, T1.SicklistFormtitle_Sotr, T1.SicklistFormtitle_Requestcount, T1.SicklistFormtitle_Daterequest, T1.SicklistFormtitle_Remark, T1.SicklistFormtitle_Requestdel)
    FROM (
        SELECT 
            T.oid AS SicklistFormtitle_Oid, 
            T.sotr AS SicklistFormtitle_Sotr, 
            T.requestcount AS SicklistFormtitle_Requestcount, 
            T.daterequest AS SicklistFormtitle_Daterequest, 
            T.remark AS SicklistFormtitle_Remark, 
            T.requestdel AS SicklistFormtitle_Requestdel, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_formtitles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1025()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistForms", @"
    SELECT VALUE -- Constructing SicklistForms
        [PostgresModel.SicklistForm](T1.SicklistForm_Formnum, T1.SicklistForm_Series, T1.SicklistForm_SicklistFormtitle, T1.SicklistForm_SicklistFormstate, T1.SicklistForm_Sysuser, T1.SicklistForm_Company, T1.SicklistForm_Dateget, T1.SicklistForm_Dateout, T1.SicklistForm_Dateprint, T1.SicklistForm_Formdel, T1.SicklistForm_Sotr)
    FROM (
        SELECT 
            T.formnum AS SicklistForm_Formnum, 
            T.series AS SicklistForm_Series, 
            T.sicklist_formtitle AS SicklistForm_SicklistFormtitle, 
            T.sicklist_formstate AS SicklistForm_SicklistFormstate, 
            T.sysuser AS SicklistForm_Sysuser, 
            T.company AS SicklistForm_Company, 
            T.dateget AS SicklistForm_Dateget, 
            T.dateout AS SicklistForm_Dateout, 
            T.dateprint AS SicklistForm_Dateprint, 
            T.formdel AS SicklistForm_Formdel, 
            T.sotr AS SicklistForm_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_forms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PinfoHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1026()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3758);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PinfoHistories\r\n        [PostgresModel.PinfoH");
            viewString.Append("istory](T1.PinfoHistory_Oid, T1.PinfoHistory_BloodGr, T1.PinfoHistory_BlooodRez,");
            viewString.Append(" T1.PinfoHistory_Marriage, T1.PinfoHistory_Nacionality, T1.PinfoHistory_Educatio");
            viewString.Append("n, T1.PinfoHistory_LivingCondition, T1.PinfoHistory_Liveplace, T1.PinfoHistory_R");
            viewString.Append("egplace, T1.PinfoHistory_Socialrank, T1.PinfoHistory_Favorkind, T1.PinfoHistory_");
            viewString.Append("Dispgroup, T1.PinfoHistory_Country, T1.PinfoHistory_ParentStatusId, T1.PinfoHist");
            viewString.Append("ory_ParentSurname, T1.PinfoHistory_ParentName, T1.PinfoHistory_ParentPatron, T1.");
            viewString.Append("PinfoHistory_BurnPlace, T1.PinfoHistory_FlurolastDt, T1.PinfoHistory_FluroplanDt");
            viewString.Append(", T1.PinfoHistory_AmbulDt, T1.PinfoHistory_StacionarDt, T1.PinfoHistory_SanatorD");
            viewString.Append("t, T1.PinfoHistory_SpecDt, T1.PinfoHistory_DaystacDt, T1.PinfoHistory_Alko, T1.P");
            viewString.Append("infoHistory_Narko, T1.PinfoHistory_Smok, T1.PinfoHistory_HardLife, T1.PinfoHisto");
            viewString.Append("ry_RecipeLgotType, T1.PinfoHistory_Grouphealth, T1.PinfoHistory_Inn, T1.PinfoHis");
            viewString.Append("tory_PhoneHome, T1.PinfoHistory_PhoneMobile, T1.PinfoHistory_Icd10Id, T1.PinfoHi");
            viewString.Append("story_UndefinedPac, T1.PinfoHistory_Uek, T1.PinfoHistory_PeopleProfession, T1.Pi");
            viewString.Append("nfoHistory_IsAgreementPac, T1.PinfoHistory_Alien, T1.PinfoHistory_Birthtime, T1.");
            viewString.Append("PinfoHistory_PersonalAgreement, T1.PinfoHistory_PersonalAgreementDate)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.oid AS PinfoHistory_Oid, \r\n            T.bloo");
            viewString.Append("d_gr AS PinfoHistory_BloodGr, \r\n            T.bloood_rez AS PinfoHistory_BlooodR");
            viewString.Append("ez, \r\n            T.marriage AS PinfoHistory_Marriage, \r\n            T.nacionali");
            viewString.Append("ty AS PinfoHistory_Nacionality, \r\n            T.education AS PinfoHistory_Educat");
            viewString.Append("ion, \r\n            T.living_condition AS PinfoHistory_LivingCondition, \r\n       ");
            viewString.Append("     T.liveplace AS PinfoHistory_Liveplace, \r\n            T.regplace AS PinfoHis");
            viewString.Append("tory_Regplace, \r\n            T.socialrank AS PinfoHistory_Socialrank, \r\n        ");
            viewString.Append("    T.favorkind AS PinfoHistory_Favorkind, \r\n            T.dispgroup AS PinfoHis");
            viewString.Append("tory_Dispgroup, \r\n            T.country AS PinfoHistory_Country, \r\n            T");
            viewString.Append(".parent_status_id AS PinfoHistory_ParentStatusId, \r\n            T.parent_surname");
            viewString.Append(" AS PinfoHistory_ParentSurname, \r\n            T.parent_name AS PinfoHistory_Pare");
            viewString.Append("ntName, \r\n            T.parent_patron AS PinfoHistory_ParentPatron, \r\n          ");
            viewString.Append("  T.burn_place AS PinfoHistory_BurnPlace, \r\n            T.flurolast_dt AS PinfoH");
            viewString.Append("istory_FlurolastDt, \r\n            T.fluroplan_dt AS PinfoHistory_FluroplanDt, \r\n");
            viewString.Append("            T.ambul_dt AS PinfoHistory_AmbulDt, \r\n            T.stacionar_dt AS ");
            viewString.Append("PinfoHistory_StacionarDt, \r\n            T.sanator_dt AS PinfoHistory_SanatorDt, ");
            viewString.Append("\r\n            T.spec_dt AS PinfoHistory_SpecDt, \r\n            T.daystac_dt AS Pi");
            viewString.Append("nfoHistory_DaystacDt, \r\n            T.alko AS PinfoHistory_Alko, \r\n            T");
            viewString.Append(".narko AS PinfoHistory_Narko, \r\n            T.smok AS PinfoHistory_Smok, \r\n     ");
            viewString.Append("       T.hard_life AS PinfoHistory_HardLife, \r\n            T.recipe_lgot_type AS");
            viewString.Append(" PinfoHistory_RecipeLgotType, \r\n            T.grouphealth AS PinfoHistory_Grouph");
            viewString.Append("ealth, \r\n            T.inn AS PinfoHistory_Inn, \r\n            T.phone_home AS Pi");
            viewString.Append("nfoHistory_PhoneHome, \r\n            T.phone_mobile AS PinfoHistory_PhoneMobile, ");
            viewString.Append("\r\n            T.icd10_id AS PinfoHistory_Icd10Id, \r\n            T.undefined_pac ");
            viewString.Append("AS PinfoHistory_UndefinedPac, \r\n            T.uek AS PinfoHistory_Uek, \r\n       ");
            viewString.Append("     T.people_profession AS PinfoHistory_PeopleProfession, \r\n            T.is_ag");
            viewString.Append("reement_pac AS PinfoHistory_IsAgreementPac, \r\n            T.alien AS PinfoHistor");
            viewString.Append("y_Alien, \r\n            T.birthtime AS PinfoHistory_Birthtime, \r\n            T.pe");
            viewString.Append("rsonal_agreement AS PinfoHistory_PersonalAgreement, \r\n            T.personal_agr");
            viewString.Append("eement_date AS PinfoHistory_PersonalAgreementDate, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM PostgresEntitiesStoreContainer.pinfo_histories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PinfoHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescSignSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1027()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescSignSotrs", @"
    SELECT VALUE -- Constructing PrescSignSotrs
        [PostgresModel.PrescSignSotr](T1.PrescSignSotr_Presc, T1.PrescSignSotr_Sotr, T1.PrescSignSotr_Oid, T1.PrescSignSotr_SignDate)
    FROM (
        SELECT 
            T.presc AS PrescSignSotr_Presc, 
            T.sotr AS PrescSignSotr_Sotr, 
            T.oid AS PrescSignSotr_Oid, 
            T.sign_date AS PrescSignSotr_SignDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_sign_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicVaccinPreps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1028()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicVaccinPreps", @"
    SELECT VALUE -- Constructing MedicVaccinPreps
        [PostgresModel.MedicVaccinPrep](T1.MedicVaccinPrep_Oid, T1.MedicVaccinPrep_VaccinPrepOid, T1.MedicVaccinPrep_MedicOid)
    FROM (
        SELECT 
            T.oid AS MedicVaccinPrep_Oid, 
            T.vaccin_prep_oid AS MedicVaccinPrep_VaccinPrepOid, 
            T.medic_oid AS MedicVaccinPrep_MedicOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_vaccin_preps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1029()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicTemplates", @"
    SELECT VALUE -- Constructing MedicTemplates
        [PostgresModel.MedicTemplate](T1.MedicTemplate_Oid, T1.MedicTemplate_Name, T1.MedicTemplate_PresctypeId, T1.MedicTemplate_Sotr)
    FROM (
        SELECT 
            T.oid AS MedicTemplate_Oid, 
            T.name AS MedicTemplate_Name, 
            T.presctype_id AS MedicTemplate_PresctypeId, 
            T.sotr AS MedicTemplate_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeMedicTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1030()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2209);
            viewString.Append("\r\n    SELECT VALUE -- Constructing RecipeMedicTemplates\r\n        [PostgresModel.");
            viewString.Append("RecipeMedicTemplate](T1.RecipeMedicTemplate_Oid, T1.RecipeMedicTemplate_Tradenam");
            viewString.Append("es, T1.RecipeMedicTemplate_MedicName, T1.RecipeMedicTemplate_InputId, T1.RecipeM");
            viewString.Append("edicTemplate_MedicTemplateId, T1.RecipeMedicTemplate_Count, T1.RecipeMedicTempla");
            viewString.Append("te_UnitId, T1.RecipeMedicTemplate_Duration, T1.RecipeMedicTemplate_Doza, T1.Reci");
            viewString.Append("peMedicTemplate_DozaUnitId, T1.RecipeMedicTemplate_Dtd, T1.RecipeMedicTemplate_F");
            viewString.Append("requencyId, T1.RecipeMedicTemplate_Frequency, T1.RecipeMedicTemplate_Latinnames,");
            viewString.Append(" T1.RecipeMedicTemplate_BenefitMedic, T1.RecipeMedicTemplate_Actmatter, T1.Recip");
            viewString.Append("eMedicTemplate_DateBegin, T1.RecipeMedicTemplate_PatientIsOwner, T1.RecipeMedicT");
            viewString.Append("emplate_Medic, T1.RecipeMedicTemplate_GroupAppointment, T1.RecipeMedicTemplate_S");
            viewString.Append("ysdate)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS RecipeMedicTemplate_O");
            viewString.Append("id, \r\n            T.tradenames AS RecipeMedicTemplate_Tradenames, \r\n            ");
            viewString.Append("T.medic_name AS RecipeMedicTemplate_MedicName, \r\n            T.input_id AS Recip");
            viewString.Append("eMedicTemplate_InputId, \r\n            T.medic_template_id AS RecipeMedicTemplate");
            viewString.Append("_MedicTemplateId, \r\n            T.count AS RecipeMedicTemplate_Count, \r\n        ");
            viewString.Append("    T.unit_id AS RecipeMedicTemplate_UnitId, \r\n            T.duration AS RecipeM");
            viewString.Append("edicTemplate_Duration, \r\n            T.doza AS RecipeMedicTemplate_Doza, \r\n     ");
            viewString.Append("       T.doza_unit_id AS RecipeMedicTemplate_DozaUnitId, \r\n            T.dtd AS ");
            viewString.Append("RecipeMedicTemplate_Dtd, \r\n            T.frequency_id AS RecipeMedicTemplate_Fre");
            viewString.Append("quencyId, \r\n            T.frequency AS RecipeMedicTemplate_Frequency, \r\n        ");
            viewString.Append("    T.latinnames AS RecipeMedicTemplate_Latinnames, \r\n            T.benefit_medi");
            viewString.Append("c AS RecipeMedicTemplate_BenefitMedic, \r\n            T.actmatter AS RecipeMedicT");
            viewString.Append("emplate_Actmatter, \r\n            T.date_begin AS RecipeMedicTemplate_DateBegin, ");
            viewString.Append("\r\n            T.patient_is_owner AS RecipeMedicTemplate_PatientIsOwner, \r\n      ");
            viewString.Append("      T.medic AS RecipeMedicTemplate_Medic, \r\n            T.group_appointment AS");
            viewString.Append(" RecipeMedicTemplate_GroupAppointment, \r\n            T.sysdate AS RecipeMedicTem");
            viewString.Append("plate_Sysdate, \r\n            True AS _from0\r\n        FROM PostgresEntitiesStoreC");
            viewString.Append("ontainer.recipe_medic_templates AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeMedicTemplates", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReportGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1031()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReportGroups", @"
    SELECT VALUE -- Constructing ReportGroups
        [PostgresModel.ReportGroup](T1.ReportGroup_Oid, T1.ReportGroup_Name, T1.ReportGroup_Parent)
    FROM (
        SELECT 
            T.oid AS ReportGroup_Oid, 
            T.name AS ReportGroup_Name, 
            T.parent AS ReportGroup_Parent, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.report_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReportTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1032()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReportTemplates", @"
    SELECT VALUE -- Constructing ReportTemplates
        [PostgresModel.ReportTemplate](T1.ReportTemplate_Oid, T1.ReportTemplate_Name, T1.ReportTemplate_Filename, T1.ReportTemplate_Filebody, T1.ReportTemplate_Createdate, T1.ReportTemplate_Createuser, T1.ReportTemplate_Occupied, T1.ReportTemplate_OccupiedUser, T1.ReportTemplate_OccupiedDate, T1.ReportTemplate_OccupiedHost, T1.ReportTemplate_ReportGroup, T1.ReportTemplate_ReportPapersize, T1.ReportTemplate_Landscape)
    FROM (
        SELECT 
            T.oid AS ReportTemplate_Oid, 
            T.name AS ReportTemplate_Name, 
            T.filename AS ReportTemplate_Filename, 
            T.filebody AS ReportTemplate_Filebody, 
            T.createdate AS ReportTemplate_Createdate, 
            T.createuser AS ReportTemplate_Createuser, 
            T.occupied AS ReportTemplate_Occupied, 
            T.occupied_user AS ReportTemplate_OccupiedUser, 
            T.occupied_date AS ReportTemplate_OccupiedDate, 
            T.occupied_host AS ReportTemplate_OccupiedHost, 
            T.report_group AS ReportTemplate_ReportGroup, 
            T.report_papersize AS ReportTemplate_ReportPapersize, 
            T.landscape AS ReportTemplate_Landscape, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.report_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Clsatcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1033()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Clsatcs", @"
    SELECT VALUE -- Constructing Clsatcs
        [PostgresModel.Clsatc](T1.Clsatc_Id, T1.Clsatc_Parentid, T1.Clsatc_Name)
    FROM (
        SELECT 
            T.id AS Clsatc_Id, 
            T.parentid AS Clsatc_Parentid, 
            T.name AS Clsatc_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.clsatcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ClsMzPhgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1034()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ClsMzPhgroups", @"
    SELECT VALUE -- Constructing ClsMzPhgroups
        [PostgresModel.ClsMzPhgroup](T1.ClsMzPhgroup_Id, T1.ClsMzPhgroup_Parentid, T1.ClsMzPhgroup_Name)
    FROM (
        SELECT 
            T.id AS ClsMzPhgroup_Id, 
            T.parentid AS ClsMzPhgroup_Parentid, 
            T.name AS ClsMzPhgroup_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cls_mz_phgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodelmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1035()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodelmedics", @"
    SELECT VALUE -- Constructing Tmodelmedics
        [PostgresModel.Tmodelmedic](T1.Tmodelmedic_FkId, T1.Tmodelmedic_FkMedic, T1.Tmodelmedic_FcRate, T1.Tmodelmedic_FkPharmagroup, T1.Tmodelmedic_FkAtc, T1.Tmodelmedic_FcEdd, T1.Tmodelmedic_FcEddscale, T1.Tmodelmedic_FcCde, T1.Tmodelmedic_FkModel, T1.Tmodelmedic_FcCdescale)
    FROM (
        SELECT 
            T.fk_id AS Tmodelmedic_FkId, 
            T.fk_medic AS Tmodelmedic_FkMedic, 
            T.fc_rate AS Tmodelmedic_FcRate, 
            T.fk_pharmagroup AS Tmodelmedic_FkPharmagroup, 
            T.fk_atc AS Tmodelmedic_FkAtc, 
            T.fc_edd AS Tmodelmedic_FcEdd, 
            T.fc_eddscale AS Tmodelmedic_FcEddscale, 
            T.fc_cde AS Tmodelmedic_FcCde, 
            T.fk_model AS Tmodelmedic_FkModel, 
            T.fc_cdescale AS Tmodelmedic_FcCdescale, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodelmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HistoryMdocLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1036()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HistoryMdocLocations", @"
    SELECT VALUE -- Constructing HistoryMdocLocations
        [PostgresModel.HistoryMdocLocation](T1.HistoryMdocLocation_Oid, T1.HistoryMdocLocation_DateCreate, T1.HistoryMdocLocation_FromLoc, T1.HistoryMdocLocation_ToLoc, T1.HistoryMdocLocation_Sysuser, T1.HistoryMdocLocation_Mdoc, T1.HistoryMdocLocation_Otdel, T1.HistoryMdocLocation_Cabinet, T1.HistoryMdocLocation_Sotr, T1.HistoryMdocLocation_Comment)
    FROM (
        SELECT 
            T.oid AS HistoryMdocLocation_Oid, 
            T.date_create AS HistoryMdocLocation_DateCreate, 
            T.from_loc AS HistoryMdocLocation_FromLoc, 
            T.to_loc AS HistoryMdocLocation_ToLoc, 
            T.sysuser AS HistoryMdocLocation_Sysuser, 
            T.mdoc AS HistoryMdocLocation_Mdoc, 
            T.otdel AS HistoryMdocLocation_Otdel, 
            T.cabinet AS HistoryMdocLocation_Cabinet, 
            T.sotr AS HistoryMdocLocation_Sotr, 
            T.comment AS HistoryMdocLocation_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.history_mdoc_locations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MdocLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1037()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MdocLocations", @"
    SELECT VALUE -- Constructing MdocLocations
        [PostgresModel.MdocLocation](T1.MdocLocation_Oid, T1.MdocLocation_Name)
    FROM (
        SELECT 
            T.oid AS MdocLocation_Oid, 
            T.name AS MdocLocation_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdoc_locations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Audits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1038()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Audits", @"
    SELECT VALUE -- Constructing Audits
        [PostgresModel.Audit](T1.Audit_Oid, T1.Audit_Sysuser, T1.Audit_Auditactiontype, T1.Audit_Actiondatetime)
    FROM (
        SELECT 
            T.oid AS Audit_Oid, 
            T.sysuser AS Audit_Sysuser, 
            T.auditactiontype AS Audit_Auditactiontype, 
            T.actiondatetime AS Audit_Actiondatetime, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.audits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Auditactiontypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1039()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Auditactiontypes", @"
    SELECT VALUE -- Constructing Auditactiontypes
        [PostgresModel.Auditactiontype](T1.Auditactiontype_Oid, T1.Auditactiontype_Synonym, T1.Auditactiontype_Description)
    FROM (
        SELECT 
            T.oid AS Auditactiontype_Oid, 
            T.synonym AS Auditactiontype_Synonym, 
            T.description AS Auditactiontype_Description, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.auditactiontypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RegistrIllDiagnoses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1040()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RegistrIllDiagnoses", @"
    SELECT VALUE -- Constructing RegistrIllDiagnoses
        [PostgresModel.RegistrIllDiagnosis](T1.RegistrIllDiagnosis_Oid, T1.RegistrIllDiagnosis_Mkb10, T1.RegistrIllDiagnosis_Creator, T1.RegistrIllDiagnosis_CreateDate, T1.RegistrIllDiagnosis_GroupIn)
    FROM (
        SELECT 
            T.oid AS RegistrIllDiagnosis_Oid, 
            T.mkb_10 AS RegistrIllDiagnosis_Mkb10, 
            T.creator AS RegistrIllDiagnosis_Creator, 
            T.create_date AS RegistrIllDiagnosis_CreateDate, 
            T.group_in AS RegistrIllDiagnosis_GroupIn, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registr_ill_diagnoses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RegistrIllPacients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1041()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RegistrIllPacients", @"
    SELECT VALUE -- Constructing RegistrIllPacients
        [PostgresModel.RegistrIllPacient](T1.RegistrIllPacient_Oid, T1.RegistrIllPacient_People, T1.RegistrIllPacient_RegistrIllDiagnoses, T1.RegistrIllPacient_MdocId, T1.RegistrIllPacient_DateOn, T1.RegistrIllPacient_DateEnd, T1.RegistrIllPacient_Sysdate, T1.RegistrIllPacient_Sysuser)
    FROM (
        SELECT 
            T.oid AS RegistrIllPacient_Oid, 
            T.people AS RegistrIllPacient_People, 
            T.registr_ill_diagnoses AS RegistrIllPacient_RegistrIllDiagnoses, 
            T.mdoc_id AS RegistrIllPacient_MdocId, 
            T.date_on AS RegistrIllPacient_DateOn, 
            T.date_end AS RegistrIllPacient_DateEnd, 
            T.sysdate AS RegistrIllPacient_Sysdate, 
            T.sysuser AS RegistrIllPacient_Sysuser, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registr_ill_pacients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayDescriptions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1042()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayDescriptions", @"
    SELECT VALUE -- Constructing XrayDescriptions
        [PostgresModel.XrayDescription](T1.XrayDescription_Oid, T1.XrayDescription_PrescId, T1.XrayDescription_Text, T1.XrayDescription_CreateSysuser, T1.XrayDescription_CreateOtdel, T1.XrayDescription_Sotr)
    FROM (
        SELECT 
            T.oid AS XrayDescription_Oid, 
            T.presc_id AS XrayDescription_PrescId, 
            T.text AS XrayDescription_Text, 
            T.create_sysuser AS XrayDescription_CreateSysuser, 
            T.create_otdel AS XrayDescription_CreateOtdel, 
            T.sotr AS XrayDescription_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_descriptions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Actmatters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1043()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Actmatters", "\r\n    SELECT VALUE -- Constructing Actmatters\r\n        [PostgresModel.Actmatter](" +
                    "T1.Actmatter_Id, T1.Actmatter_Rusname, T1.Actmatter_Latname, T1.Actmatter_Strong" +
                    "groupid, T1.Actmatter_Narcogroupid, T1.Actmatter_Chemicalname, T1.Actmatter_Char" +
                    "acters, T1.Actmatter_Pharmacology, T1.Actmatter_Indications, T1.Actmatter_Usage," +
                    " T1.Actmatter_Contraindications, T1.Actmatter_Uselimitations, T1.Actmatter_Sidea" +
                    "ctions, T1.Actmatter_Interactions, T1.Actmatter_Usemethodanddoses, T1.Actmatter_" +
                    "Overdose, T1.Actmatter_Pregnancyuse, T1.Actmatter_Precautions, T1.Actmatter_Spec" +
                    "ialguidelines, T1.Actmatter_Literature)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.id AS Actmatter_Id, \r\n            T.rusname AS Actmatter_Rusname, \r\n        " +
                    "    T.latname AS Actmatter_Latname, \r\n            T.stronggroupid AS Actmatter_S" +
                    "tronggroupid, \r\n            T.narcogroupid AS Actmatter_Narcogroupid, \r\n        " +
                    "    T.chemicalname AS Actmatter_Chemicalname, \r\n            T.characters AS Actm" +
                    "atter_Characters, \r\n            T.pharmacology AS Actmatter_Pharmacology, \r\n    " +
                    "        T.indications AS Actmatter_Indications, \r\n            T.usage AS Actmatt" +
                    "er_Usage, \r\n            T.contraindications AS Actmatter_Contraindications, \r\n  " +
                    "          T.uselimitations AS Actmatter_Uselimitations, \r\n            T.sideacti" +
                    "ons AS Actmatter_Sideactions, \r\n            T.interactions AS Actmatter_Interact" +
                    "ions, \r\n            T.usemethodanddoses AS Actmatter_Usemethodanddoses, \r\n      " +
                    "      T.overdose AS Actmatter_Overdose, \r\n            T.pregnancyuse AS Actmatte" +
                    "r_Pregnancyuse, \r\n            T.precautions AS Actmatter_Precautions, \r\n        " +
                    "    T.specialguidelines AS Actmatter_Specialguidelines, \r\n            T.literatu" +
                    "re AS Actmatter_Literature, \r\n            True AS _from0\r\n        FROM PostgresE" +
                    "ntitiesStoreContainer.actmatters AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayPacss
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1044()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayPacss", @"
    SELECT VALUE -- Constructing XrayPacss
        [PostgresModel.XrayPacs](T1.XrayPacs_Oid, T1.XrayPacs_Name, T1.XrayPacs_Url, T1.XrayPacs_Synonym, T1.XrayPacs_Ip, T1.XrayPacs_Port, T1.XrayPacs_Enable)
    FROM (
        SELECT 
            T.oid AS XrayPacs_Oid, 
            T.name AS XrayPacs_Name, 
            T.url AS XrayPacs_Url, 
            T.synonym AS XrayPacs_Synonym, 
            T.ip AS XrayPacs_Ip, 
            T.port AS XrayPacs_Port, 
            T.enable AS XrayPacs_Enable, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_pacs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1045()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayResults", @"
    SELECT VALUE -- Constructing XrayResults
        [PostgresModel.XrayResult](T1.XrayResult_Oid, T1.XrayResult_XrayReferralId, T1.XrayResult_CreateDt, T1.XrayResult_StudyInstance, T1.XrayResult_PacsId)
    FROM (
        SELECT 
            T.oid AS XrayResult_Oid, 
            T.xray_referral_id AS XrayResult_XrayReferralId, 
            T.create_dt AS XrayResult_CreateDt, 
            T.study_instance AS XrayResult_StudyInstance, 
            T.pacs_id AS XrayResult_PacsId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tutorials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1046()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tutorials", @"
    SELECT VALUE -- Constructing Tutorials
        [PostgresModel.Tutorial](T1.Tutorial_Oid, T1.Tutorial_Name, T1.Tutorial_Comment, T1.Tutorial_FolderName)
    FROM (
        SELECT 
            T.oid AS Tutorial_Oid, 
            T.name AS Tutorial_Name, 
            T.comment AS Tutorial_Comment, 
            T.folder_name AS Tutorial_FolderName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tutorials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TutorialRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1047()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TutorialRoles", @"
    SELECT VALUE -- Constructing TutorialRoles
        [PostgresModel.TutorialRole](T1.TutorialRole_Oid, T1.TutorialRole_Role, T1.TutorialRole_Tutorial)
    FROM (
        SELECT 
            T.oid AS TutorialRole_Oid, 
            T.role AS TutorialRole_Role, 
            T.tutorial AS TutorialRole_Tutorial, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tutorial_roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleChangeHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1048()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleChangeHistories", "\r\n    SELECT VALUE -- Constructing PeopleChangeHistories\r\n        [PostgresModel." +
                    "PeopleChangeHistory](T1.PeopleChangeHistory_Oid, T1.PeopleChangeHistory_People, " +
                    "T1.PeopleChangeHistory_Addressex1, T1.PeopleChangeHistory_Addressex2, T1.PeopleC" +
                    "hangeHistory_Peopledoctype, T1.PeopleChangeHistory_Peopledocser, T1.PeopleChange" +
                    "History_Peopledocnum, T1.PeopleChangeHistory_Peopledocgive, T1.PeopleChangeHisto" +
                    "ry_Peopledocgivedate, T1.PeopleChangeHistory_Firstname, T1.PeopleChangeHistory_L" +
                    "astname, T1.PeopleChangeHistory_Middlename, T1.PeopleChangeHistory_Sysdate)\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.oid AS PeopleChangeHistory_Oid, \r\n      " +
                    "      T.people AS PeopleChangeHistory_People, \r\n            T.addressex1 AS Peop" +
                    "leChangeHistory_Addressex1, \r\n            T.addressex2 AS PeopleChangeHistory_Ad" +
                    "dressex2, \r\n            T.peopledoctype AS PeopleChangeHistory_Peopledoctype, \r\n" +
                    "            T.peopledocser AS PeopleChangeHistory_Peopledocser, \r\n            T." +
                    "peopledocnum AS PeopleChangeHistory_Peopledocnum, \r\n            T.peopledocgive " +
                    "AS PeopleChangeHistory_Peopledocgive, \r\n            T.peopledocgivedate AS Peopl" +
                    "eChangeHistory_Peopledocgivedate, \r\n            T.firstname AS PeopleChangeHisto" +
                    "ry_Firstname, \r\n            T.lastname AS PeopleChangeHistory_Lastname, \r\n      " +
                    "      T.middlename AS PeopleChangeHistory_Middlename, \r\n            T.sysdate AS" +
                    " PeopleChangeHistory_Sysdate, \r\n            True AS _from0\r\n        FROM Postgre" +
                    "sEntitiesStoreContainer.people_change_histories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.News
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1049()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.News", @"
    SELECT VALUE -- Constructing News
        [PostgresModel.News](T1.News_Oid, T1.News_People, T1.News_Title, T1.News_Body, T1.News_Sysdate, T1.News_CreateDate, T1.News_StartDate, T1.News_IsActive, T1.News_RmisActive, T1.News_SelfrecordActive)
    FROM (
        SELECT 
            T.oid AS News_Oid, 
            T.people AS News_People, 
            T.title AS News_Title, 
            T.body AS News_Body, 
            T.sysdate AS News_Sysdate, 
            T.create_date AS News_CreateDate, 
            T.start_date AS News_StartDate, 
            T.is_active AS News_IsActive, 
            T.rmis_active AS News_RmisActive, 
            T.selfrecord_active AS News_SelfrecordActive, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.news AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VideoTutorialRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1050()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VideoTutorialRoles", @"
    SELECT VALUE -- Constructing VideoTutorialRoles
        [PostgresModel.VideoTutorialRole](T1.VideoTutorialRole_Oid, T1.VideoTutorialRole_Role, T1.VideoTutorialRole_VideoTutorial)
    FROM (
        SELECT 
            T.oid AS VideoTutorialRole_Oid, 
            T.role AS VideoTutorialRole_Role, 
            T.video_tutorial AS VideoTutorialRole_VideoTutorial, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.video_tutorial_roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VideoTutorials
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1051()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VideoTutorials", @"
    SELECT VALUE -- Constructing VideoTutorials
        [PostgresModel.VideoTutorial](T1.VideoTutorial_Oid, T1.VideoTutorial_Name, T1.VideoTutorial_Comment)
    FROM (
        SELECT 
            T.oid AS VideoTutorial_Oid, 
            T.name AS VideoTutorial_Name, 
            T.comment AS VideoTutorial_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.video_tutorials AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TutorialLinks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1052()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TutorialLinks", @"
    SELECT VALUE -- Constructing TutorialLinks
        [PostgresModel.TutorialLink](T1.TutorialLink_Oid, T1.TutorialLink_Controller, T1.TutorialLink_Course, T1.TutorialLink_Section, T1.TutorialLink_Descr, T1.TutorialLink_ActionName)
    FROM (
        SELECT 
            T.oid AS TutorialLink_Oid, 
            T.controller AS TutorialLink_Controller, 
            T.course AS TutorialLink_Course, 
            T.section AS TutorialLink_Section, 
            T.descr AS TutorialLink_Descr, 
            T.action_name AS TutorialLink_ActionName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tutorial_links AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VideoTutorialLinks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1053()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VideoTutorialLinks", @"
    SELECT VALUE -- Constructing VideoTutorialLinks
        [PostgresModel.VideoTutorialLink](T1.VideoTutorialLink_Oid, T1.VideoTutorialLink_Controller, T1.VideoTutorialLink_VideoTutorial, T1.VideoTutorialLink_Comment)
    FROM (
        SELECT 
            T.oid AS VideoTutorialLink_Oid, 
            T.controller AS VideoTutorialLink_Controller, 
            T.video_tutorial AS VideoTutorialLink_VideoTutorial, 
            T.comment AS VideoTutorialLink_Comment, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.video_tutorial_links AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayAgreementStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1054()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayAgreementStatus", @"
    SELECT VALUE -- Constructing PayAgreementStatus
        [PostgresModel.PayAgreementStatus](T1.PayAgreementStatus_Oid, T1.PayAgreementStatus_Name, T1.PayAgreementStatus_Show)
    FROM (
        SELECT 
            T.oid AS PayAgreementStatus_Oid, 
            T.name AS PayAgreementStatus_Name, 
            T.show AS PayAgreementStatus_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_agreement_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1055()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescServices", @"
    SELECT VALUE -- Constructing PrescServices
        [PostgresModel.PrescService](T1.PrescService_Oid, T1.PrescService_ServicePresctype, T1.PrescService_Presc, T1.PrescService_CounterpartProgram, T1.PrescService_CustomPrice)
    FROM (
        SELECT 
            T.oid AS PrescService_Oid, 
            T.service_presctype AS PrescService_ServicePresctype, 
            T.presc AS PrescService_Presc, 
            T.counterpart_program AS PrescService_CounterpartProgram, 
            T.custom_price AS PrescService_CustomPrice, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OtdelMdocNumbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1056()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OtdelMdocNumbers", @"
    SELECT VALUE -- Constructing OtdelMdocNumbers
        [PostgresModel.OtdelMdocNumber](T1.OtdelMdocNumber_Oid, T1.OtdelMdocNumber_Otdel, T1.OtdelMdocNumber_MdocNumberType)
    FROM (
        SELECT 
            T.oid AS OtdelMdocNumber_Oid, 
            T.otdel AS OtdelMdocNumber_Otdel, 
            T.mdoc_number_type AS OtdelMdocNumber_MdocNumberType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.otdel_mdoc_numbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1057()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescResults", @"
    SELECT VALUE -- Constructing PrescResults
        [PostgresModel.PrescResult](T1.PrescResult_Oid, T1.PrescResult_PrescId, T1.PrescResult_PrescStateId, T1.PrescResult_PrescReasonCancelId, T1.PrescResult_PrescExecuteDate, T1.PrescResult_SotrId)
    FROM (
        SELECT 
            T.oid AS PrescResult_Oid, 
            T.presc_id AS PrescResult_PrescId, 
            T.presc_state_id AS PrescResult_PrescStateId, 
            T.presc_reason_cancel_id AS PrescResult_PrescReasonCancelId, 
            T.presc_execute_date AS PrescResult_PrescExecuteDate, 
            T.sotr_id AS PrescResult_SotrId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescReasonCancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1058()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescReasonCancels", @"
    SELECT VALUE -- Constructing PrescReasonCancels
        [PostgresModel.PrescReasonCancel](T1.PrescReasonCancel_Oid, T1.PrescReasonCancel_Name, T1.PrescReasonCancel_Synonim)
    FROM (
        SELECT 
            T.oid AS PrescReasonCancel_Oid, 
            T.name AS PrescReasonCancel_Name, 
            T.synonim AS PrescReasonCancel_Synonim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_reason_cancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MdocLastNumbers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1059()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MdocLastNumbers", @"
    SELECT VALUE -- Constructing MdocLastNumbers
        [PostgresModel.MdocLastNumber](T1.MdocLastNumber_Oid, T1.MdocLastNumber_Otdel, T1.MdocLastNumber_MdocType, T1.MdocLastNumber_Year, T1.MdocLastNumber_Num)
    FROM (
        SELECT 
            T.oid AS MdocLastNumber_Oid, 
            T.otdel AS MdocLastNumber_Otdel, 
            T.mdoc_type AS MdocLastNumber_MdocType, 
            T.year AS MdocLastNumber_Year, 
            T.num AS MdocLastNumber_Num, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdoc_last_numbers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServicePriceCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1060()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServicePriceCategories", @"
    SELECT VALUE -- Constructing ServicePriceCategories
        [PostgresModel.ServicePriceCategory](T1.ServicePriceCategory_Oid, T1.ServicePriceCategory_Name)
    FROM (
        SELECT 
            T.oid AS ServicePriceCategory_Oid, 
            T.name AS ServicePriceCategory_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_price_categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalDispGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1061()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalDispGroups", @"
    SELECT VALUE -- Constructing HospitalDispGroups
        [PostgresModel.HospitalDispGroup](T1.HospitalDispGroup_Oid, T1.HospitalDispGroup_Name, T1.HospitalDispGroup_Show, T1.HospitalDispGroup_Name2, T1.HospitalDispGroup_Status)
    FROM (
        SELECT 
            T.oid AS HospitalDispGroup_Oid, 
            T.name AS HospitalDispGroup_Name, 
            T.show AS HospitalDispGroup_Show, 
            T.name2 AS HospitalDispGroup_Name2, 
            T.status AS HospitalDispGroup_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_disp_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalDispSubgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1062()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalDispSubgroups", @"
    SELECT VALUE -- Constructing HospitalDispSubgroups
        [PostgresModel.HospitalDispSubgroup](T1.HospitalDispSubgroup_Oid, T1.HospitalDispSubgroup_Name, T1.HospitalDispSubgroup_Show, T1.HospitalDispSubgroup_Name2, T1.HospitalDispSubgroup_Status)
    FROM (
        SELECT 
            T.oid AS HospitalDispSubgroup_Oid, 
            T.name AS HospitalDispSubgroup_Name, 
            T.show AS HospitalDispSubgroup_Show, 
            T.name2 AS HospitalDispSubgroup_Name2, 
            T.status AS HospitalDispSubgroup_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_disp_subgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BedProfiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1063()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BedProfiles", @"
    SELECT VALUE -- Constructing BedProfiles
        [PostgresModel.BedProfile](T1.BedProfile_Oid, T1.BedProfile_Name, T1.BedProfile_Show, T1.BedProfile_Name2, T1.BedProfile_Status)
    FROM (
        SELECT 
            T.oid AS BedProfile_Oid, 
            T.name AS BedProfile_Name, 
            T.show AS BedProfile_Show, 
            T.name2 AS BedProfile_Name2, 
            T.status AS BedProfile_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bed_profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1064()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistStatus", @"
    SELECT VALUE -- Constructing SicklistStatus
        [PostgresModel.SicklistStatus](T1.SicklistStatus_Oid, T1.SicklistStatus_Name, T1.SicklistStatus_Show, T1.SicklistStatus_Name2, T1.SicklistStatus_Status, T1.SicklistStatus_FomsCode)
    FROM (
        SELECT 
            T.oid AS SicklistStatus_Oid, 
            T.name AS SicklistStatus_Name, 
            T.show AS SicklistStatus_Show, 
            T.name2 AS SicklistStatus_Name2, 
            T.status AS SicklistStatus_Status, 
            T.foms_code AS SicklistStatus_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.StacionarOperations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1065()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.StacionarOperations", "\r\n    SELECT VALUE -- Constructing StacionarOperations\r\n        [PostgresModel.St" +
                    "acionarOperation](T1.StacionarOperation_Oid, T1.StacionarOperation_Mdoc, T1.Stac" +
                    "ionarOperation_BeginDate, T1.StacionarOperation_EndDate, T1.StacionarOperation_O" +
                    "perationTime, T1.StacionarOperation_OperationType, T1.StacionarOperation_Complic" +
                    "ation, T1.StacionarOperation_Anesthesia, T1.StacionarOperation_EndocrinologyApp," +
                    " T1.StacionarOperation_LaserApp, T1.StacionarOperation_CryogenApp, T1.StacionarO" +
                    "peration_Operator, T1.StacionarOperation_Register, T1.StacionarOperation_Sysdate" +
                    ")\r\n    FROM (\r\n        SELECT \r\n            T.oid AS StacionarOperation_Oid, \r\n " +
                    "           T.mdoc AS StacionarOperation_Mdoc, \r\n            T.begin_date AS Stac" +
                    "ionarOperation_BeginDate, \r\n            T.end_date AS StacionarOperation_EndDate" +
                    ", \r\n            T.operation_time AS StacionarOperation_OperationTime, \r\n        " +
                    "    T.operation_type AS StacionarOperation_OperationType, \r\n            T.compli" +
                    "cation AS StacionarOperation_Complication, \r\n            T.anesthesia AS Stacion" +
                    "arOperation_Anesthesia, \r\n            T.endocrinology_app AS StacionarOperation_" +
                    "EndocrinologyApp, \r\n            T.laser_app AS StacionarOperation_LaserApp, \r\n  " +
                    "          T.cryogen_app AS StacionarOperation_CryogenApp, \r\n            T.operat" +
                    "or AS StacionarOperation_Operator, \r\n            T.register AS StacionarOperatio" +
                    "n_Register, \r\n            T.sysdate AS StacionarOperation_Sysdate, \r\n           " +
                    " True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.stacionar_operation" +
                    "s AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PatientcardsettingsUniquefields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1066()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PatientcardsettingsUniquefields", @"
    SELECT VALUE -- Constructing PatientcardsettingsUniquefields
        [PostgresModel.PatientcardsettingsUniquefield](T1.PatientcardsettingsUniquefield_Oid, T1.PatientcardsettingsUniquefield_Name, T1.PatientcardsettingsUniquefield_Dbname, T1.PatientcardsettingsUniquefield_Index)
    FROM (
        SELECT 
            T.oid AS PatientcardsettingsUniquefield_Oid, 
            T.name AS PatientcardsettingsUniquefield_Name, 
            T.dbname AS PatientcardsettingsUniquefield_Dbname, 
            T.index AS PatientcardsettingsUniquefield_Index, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.patientcardsettings_uniquefields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RegistrNosologyDiagnoses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1067()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RegistrNosologyDiagnoses", @"
    SELECT VALUE -- Constructing RegistrNosologyDiagnoses
        [PostgresModel.RegistrNosologyDiagnosis](T1.RegistrNosologyDiagnosis_Oid, T1.RegistrNosologyDiagnosis_Mkb10, T1.RegistrNosologyDiagnosis_Creator, T1.RegistrNosologyDiagnosis_CreateDate, T1.RegistrNosologyDiagnosis_GroupIn, T1.RegistrNosologyDiagnosis_Code, T1.RegistrNosologyDiagnosis_Name, T1.RegistrNosologyDiagnosis_Level, T1.RegistrNosologyDiagnosis_Organization)
    FROM (
        SELECT 
            T.oid AS RegistrNosologyDiagnosis_Oid, 
            T.mkb_10 AS RegistrNosologyDiagnosis_Mkb10, 
            T.creator AS RegistrNosologyDiagnosis_Creator, 
            T.create_date AS RegistrNosologyDiagnosis_CreateDate, 
            T.group_in AS RegistrNosologyDiagnosis_GroupIn, 
            T.code AS RegistrNosologyDiagnosis_Code, 
            T.name AS RegistrNosologyDiagnosis_Name, 
            T.level AS RegistrNosologyDiagnosis_Level, 
            T.organization AS RegistrNosologyDiagnosis_Organization, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registr_nosology_diagnoses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RegistrNosologyPacients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1068()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RegistrNosologyPacients", @"
    SELECT VALUE -- Constructing RegistrNosologyPacients
        [PostgresModel.RegistrNosologyPacient](T1.RegistrNosologyPacient_Oid, T1.RegistrNosologyPacient_People, T1.RegistrNosologyPacient_RegistrNosologyDiagnoses, T1.RegistrNosologyPacient_MdocId, T1.RegistrNosologyPacient_DateOn, T1.RegistrNosologyPacient_DateEnd, T1.RegistrNosologyPacient_Sysdate, T1.RegistrNosologyPacient_Sysuser)
    FROM (
        SELECT 
            T.oid AS RegistrNosologyPacient_Oid, 
            T.people AS RegistrNosologyPacient_People, 
            T.registr_nosology_diagnoses AS RegistrNosologyPacient_RegistrNosologyDiagnoses, 
            T.mdoc_id AS RegistrNosologyPacient_MdocId, 
            T.date_on AS RegistrNosologyPacient_DateOn, 
            T.date_end AS RegistrNosologyPacient_DateEnd, 
            T.sysdate AS RegistrNosologyPacient_Sysdate, 
            T.sysuser AS RegistrNosologyPacient_Sysuser, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.registr_nosology_pacients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RwAccidentnotificationTmpls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1069()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RwAccidentnotificationTmpls", @"
    SELECT VALUE -- Constructing RwAccidentnotificationTmpls
        [PostgresModel.RwAccidentnotificationTmpl](T1.RwAccidentnotificationTmpl_Oid, T1.RwAccidentnotificationTmpl_Name, T1.RwAccidentnotificationTmpl_Text, T1.RwAccidentnotificationTmpl_Lpu)
    FROM (
        SELECT 
            T.oid AS RwAccidentnotificationTmpl_Oid, 
            T.name AS RwAccidentnotificationTmpl_Name, 
            T.text AS RwAccidentnotificationTmpl_Text, 
            T.lpu AS RwAccidentnotificationTmpl_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.rw_accidentnotification_tmpls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RwAccidentnotificationConditions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1070()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RwAccidentnotificationConditions", @"
    SELECT VALUE -- Constructing RwAccidentnotificationConditions
        [PostgresModel.RwAccidentnotificationCondition](T1.RwAccidentnotificationCondition_Oid, T1.RwAccidentnotificationCondition_Name)
    FROM (
        SELECT 
            T.oid AS RwAccidentnotificationCondition_Oid, 
            T.name AS RwAccidentnotificationCondition_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.rw_accidentnotification_conditions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiagPrescModels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1071()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiagPrescModels", @"
    SELECT VALUE -- Constructing DiagPrescModels
        [PostgresModel.DiagPrescModel](T1.DiagPrescModel_Oid, T1.DiagPrescModel_Presc, T1.DiagPrescModel_Diag, T1.DiagPrescModel_Model)
    FROM (
        SELECT 
            T.oid AS DiagPrescModel_Oid, 
            T.presc AS DiagPrescModel_Presc, 
            T.diag AS DiagPrescModel_Diag, 
            T.model AS DiagPrescModel_Model, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diag_presc_models AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReasonSendingArchives
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1072()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReasonSendingArchives", @"
    SELECT VALUE -- Constructing ReasonSendingArchives
        [PostgresModel.ReasonSendingArchive](T1.ReasonSendingArchive_Oid, T1.ReasonSendingArchive_Name, T1.ReasonSendingArchive_Show, T1.ReasonSendingArchive_Name2, T1.ReasonSendingArchive_Status)
    FROM (
        SELECT 
            T.oid AS ReasonSendingArchive_Oid, 
            T.name AS ReasonSendingArchive_Name, 
            T.show AS ReasonSendingArchive_Show, 
            T.name2 AS ReasonSendingArchive_Name2, 
            T.status AS ReasonSendingArchive_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.reason_sending_archives AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Holidayreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1073()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Holidayreasons", @"
    SELECT VALUE -- Constructing Holidayreasons
        [PostgresModel.Holidayreason](T1.Holidayreason_Id, T1.Holidayreason_Name)
    FROM (
        SELECT 
            T.id AS Holidayreason_Id, 
            T.name AS Holidayreason_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.holidayreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RoomInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1074()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RoomInfos", @"
    SELECT VALUE -- Constructing RoomInfos
        [PostgresModel.RoomInfo](T1.RoomInfo_RoomId, T1.RoomInfo_SotrId, T1.RoomInfo_IsVirtual, T1.RoomInfo_IsOper)
    FROM (
        SELECT 
            T.room_id AS RoomInfo_RoomId, 
            T.sotr_id AS RoomInfo_SotrId, 
            T.is_virtual AS RoomInfo_IsVirtual, 
            T.is_oper AS RoomInfo_IsOper, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.room_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsProfiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1075()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsProfiles", @"
    SELECT VALUE -- Constructing AnketsProfiles
        [PostgresModel.AnketsProfile](T1.AnketsProfile_Oid, T1.AnketsProfile_Name, T1.AnketsProfile_Show, T1.AnketsProfile_Icon)
    FROM (
        SELECT 
            T.oid AS AnketsProfile_Oid, 
            T.name AS AnketsProfile_Name, 
            T.show AS AnketsProfile_Show, 
            T.icon AS AnketsProfile_Icon, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1076()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrs", @"
    SELECT VALUE -- Constructing AnketsReestrs
        [PostgresModel.AnketsReestr](T1.AnketsReestr_Oid, T1.AnketsReestr_Sysuser, T1.AnketsReestr_Sysdate, T1.AnketsReestr_Name, T1.AnketsReestr_MinAge, T1.AnketsReestr_MaxAge, T1.AnketsReestr_Sex, T1.AnketsReestr_InSite)
    FROM (
        SELECT 
            T.oid AS AnketsReestr_Oid, 
            T.sysuser AS AnketsReestr_Sysuser, 
            T.sysdate AS AnketsReestr_Sysdate, 
            T.name AS AnketsReestr_Name, 
            T.min_age AS AnketsReestr_MinAge, 
            T.max_age AS AnketsReestr_MaxAge, 
            T.sex AS AnketsReestr_Sex, 
            T.in_site AS AnketsReestr_InSite, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1077()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrAnswers", @"
    SELECT VALUE -- Constructing AnketsReestrAnswers
        [PostgresModel.AnketsReestrAnswer](T1.AnketsReestrAnswer_Oid, T1.AnketsReestrAnswer_Sysuser, T1.AnketsReestrAnswer_Sysdate, T1.AnketsReestrAnswer_AnketReestrQuestionId, T1.AnketsReestrAnswer_Name, T1.AnketsReestrAnswer_AnswerType, T1.AnketsReestrAnswer_Order, T1.AnketsReestrAnswer_Balls)
    FROM (
        SELECT 
            T.oid AS AnketsReestrAnswer_Oid, 
            T.sysuser AS AnketsReestrAnswer_Sysuser, 
            T.sysdate AS AnketsReestrAnswer_Sysdate, 
            T.anket_reestr_question_id AS AnketsReestrAnswer_AnketReestrQuestionId, 
            T.name AS AnketsReestrAnswer_Name, 
            T.answer_type AS AnketsReestrAnswer_AnswerType, 
            T.[order] AS AnketsReestrAnswer_Order, 
            T.balls AS AnketsReestrAnswer_Balls, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestr_answers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrAnswerTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1078()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrAnswerTypes", @"
    SELECT VALUE -- Constructing AnketsReestrAnswerTypes
        [PostgresModel.AnketsReestrAnswerType](T1.AnketsReestrAnswerType_Oid, T1.AnketsReestrAnswerType_Name, T1.AnketsReestrAnswerType_Show, T1.AnketsReestrAnswerType_ShowEditorField)
    FROM (
        SELECT 
            T.oid AS AnketsReestrAnswerType_Oid, 
            T.name AS AnketsReestrAnswerType_Name, 
            T.show AS AnketsReestrAnswerType_Show, 
            T.show_editor_field AS AnketsReestrAnswerType_ShowEditorField, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestr_answer_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsQuestionsReestrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1079()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsQuestionsReestrs", @"
    SELECT VALUE -- Constructing AnketsQuestionsReestrs
        [PostgresModel.AnketsQuestionsReestr](T1.AnketsQuestionsReestr_Oid, T1.AnketsQuestionsReestr_Sysuser, T1.AnketsQuestionsReestr_Sysdate, T1.AnketsQuestionsReestr_Name, T1.AnketsQuestionsReestr_AnketId, T1.AnketsQuestionsReestr_Order, T1.AnketsQuestionsReestr_ParentAnswer, T1.AnketsQuestionsReestr_AnswerType)
    FROM (
        SELECT 
            T.oid AS AnketsQuestionsReestr_Oid, 
            T.sysuser AS AnketsQuestionsReestr_Sysuser, 
            T.sysdate AS AnketsQuestionsReestr_Sysdate, 
            T.name AS AnketsQuestionsReestr_Name, 
            T.anket_id AS AnketsQuestionsReestr_AnketId, 
            T.[order] AS AnketsQuestionsReestr_Order, 
            T.parent_answer AS AnketsQuestionsReestr_ParentAnswer, 
            T.answer_type AS AnketsQuestionsReestr_AnswerType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_questions_reestrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServiceMkb10s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1080()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServiceMkb10s", @"
    SELECT VALUE -- Constructing ServiceMkb10s
        [PostgresModel.ServiceMkb10](T1.ServiceMkb10_Oid, T1.ServiceMkb10_Service, T1.ServiceMkb10_Mkb10)
    FROM (
        SELECT 
            T.oid AS ServiceMkb10_Oid, 
            T.service AS ServiceMkb10_Service, 
            T.mkb_10 AS ServiceMkb10_Mkb10, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_mkb10s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ServiceBedProfiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1081()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ServiceBedProfiles", @"
    SELECT VALUE -- Constructing ServiceBedProfiles
        [PostgresModel.ServiceBedProfile](T1.ServiceBedProfile_Oid, T1.ServiceBedProfile_Service, T1.ServiceBedProfile_BedProfile)
    FROM (
        SELECT 
            T.oid AS ServiceBedProfile_Oid, 
            T.service AS ServiceBedProfile_Service, 
            T.bed_profile AS ServiceBedProfile_BedProfile, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.service_bed_profiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BedInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1082()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BedInfos", @"
    SELECT VALUE -- Constructing BedInfos
        [PostgresModel.BedInfo](T1.BedInfo_Oid, T1.BedInfo_Bed, T1.BedInfo_BedProfile, T1.BedInfo_DateBegin, T1.BedInfo_DateEnd, T1.BedInfo_IsActive)
    FROM (
        SELECT 
            T.oid AS BedInfo_Oid, 
            T.bed AS BedInfo_Bed, 
            T.bed_profile AS BedInfo_BedProfile, 
            T.date_begin AS BedInfo_DateBegin, 
            T.date_end AS BedInfo_DateEnd, 
            T.is_active AS BedInfo_IsActive, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bed_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoveDiags
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1083()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoveDiags", @"
    SELECT VALUE -- Constructing HospitalMoveDiags
        [PostgresModel.HospitalMoveDiag](T1.HospitalMoveDiag_Oid, T1.HospitalMoveDiag_HospitalMove, T1.HospitalMoveDiag_Mkb10, T1.HospitalMoveDiag_DiagKind, T1.HospitalMoveDiag_DiagType, T1.HospitalMoveDiag_DiagDetect, T1.HospitalMoveDiag_DoctorAction, T1.HospitalMoveDiag_CrateDate)
    FROM (
        SELECT 
            T.oid AS HospitalMoveDiag_Oid, 
            T.hospital_move AS HospitalMoveDiag_HospitalMove, 
            T.mkb10 AS HospitalMoveDiag_Mkb10, 
            T.diag_kind AS HospitalMoveDiag_DiagKind, 
            T.diag_type AS HospitalMoveDiag_DiagType, 
            T.diag_detect AS HospitalMoveDiag_DiagDetect, 
            T.doctor_action AS HospitalMoveDiag_DoctorAction, 
            T.crate_date AS HospitalMoveDiag_CrateDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_move_diags AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoveInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1084()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoveInfos", @"
    SELECT VALUE -- Constructing HospitalMoveInfos
        [PostgresModel.HospitalMoveInfo](T1.HospitalMoveInfo_Oid, T1.HospitalMoveInfo_HospitalMove, T1.HospitalMoveInfo_Sotr, T1.HospitalMoveInfo_IsInInterim)
    FROM (
        SELECT 
            T.oid AS HospitalMoveInfo_Oid, 
            T.hospital_move AS HospitalMoveInfo_HospitalMove, 
            T.sotr AS HospitalMoveInfo_Sotr, 
            T.is_in_interim AS HospitalMoveInfo_IsInInterim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_move_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoveBeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1085()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoveBeds", @"
    SELECT VALUE -- Constructing HospitalMoveBeds
        [PostgresModel.HospitalMoveBed](T1.HospitalMoveBed_Oid, T1.HospitalMoveBed_Bed, T1.HospitalMoveBed_HospitalMove)
    FROM (
        SELECT 
            T.oid AS HospitalMoveBed_Oid, 
            T.bed AS HospitalMoveBed_Bed, 
            T.hospital_move AS HospitalMoveBed_HospitalMove, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_move_beds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoveInterimInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1086()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoveInterimInfos", @"
    SELECT VALUE -- Constructing HospitalMoveInterimInfos
        [PostgresModel.HospitalMoveInterimInfo](T1.HospitalMoveInterimInfo_Oid, T1.HospitalMoveInterimInfo_HospitalMoveInterim, T1.HospitalMoveInterimInfo_Sotr)
    FROM (
        SELECT 
            T.oid AS HospitalMoveInterimInfo_Oid, 
            T.hospital_move_interim AS HospitalMoveInterimInfo_HospitalMoveInterim, 
            T.sotr AS HospitalMoveInterimInfo_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_move_interim_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoves
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1087()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoves", @"
    SELECT VALUE -- Constructing HospitalMoves
        [PostgresModel.HospitalMove](T1.HospitalMove_Oid, T1.HospitalMove_Mdoc, T1.HospitalMove_Otdel, T1.HospitalMove_BedProfile, T1.HospitalMove_DataBegin, T1.HospitalMove_DataEnd, T1.HospitalMove_DocumentsService, T1.HospitalMove_Doctor, T1.HospitalMove_CountPlace, T1.HospitalMove_Planing, T1.HospitalMove_CreateDate)
    FROM (
        SELECT 
            T.oid AS HospitalMove_Oid, 
            T.mdoc AS HospitalMove_Mdoc, 
            T.otdel AS HospitalMove_Otdel, 
            T.bed_profile AS HospitalMove_BedProfile, 
            T.data_begin AS HospitalMove_DataBegin, 
            T.data_end AS HospitalMove_DataEnd, 
            T.documents_service AS HospitalMove_DocumentsService, 
            T.doctor AS HospitalMove_Doctor, 
            T.count_place AS HospitalMove_CountPlace, 
            T.planing AS HospitalMove_Planing, 
            T.create_date AS HospitalMove_CreateDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_moves AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalDurations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1088()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalDurations", @"
    SELECT VALUE -- Constructing HospitalDurations
        [PostgresModel.HospitalDuration](T1.HospitalDuration_Oid, T1.HospitalDuration_Mdoc, T1.HospitalDuration_DateBegin, T1.HospitalDuration_DateEnd, T1.HospitalDuration_DayLocationCount, T1.HospitalDuration_DurationType, T1.HospitalDuration_DurationCancel, T1.HospitalDuration_TickRes, T1.HospitalDuration_CreateDate)
    FROM (
        SELECT 
            T.oid AS HospitalDuration_Oid, 
            T.mdoc AS HospitalDuration_Mdoc, 
            T.date_begin AS HospitalDuration_DateBegin, 
            T.date_end AS HospitalDuration_DateEnd, 
            T.day_location_count AS HospitalDuration_DayLocationCount, 
            T.duration_type AS HospitalDuration_DurationType, 
            T.duration_cancel AS HospitalDuration_DurationCancel, 
            T.tick_res AS HospitalDuration_TickRes, 
            T.create_date AS HospitalDuration_CreateDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.hospital_durations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalMoveInterims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1089()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalMoveInterims", "\r\n    SELECT VALUE -- Constructing HospitalMoveInterims\r\n        [PostgresModel.H" +
                    "ospitalMoveInterim](T1.HospitalMoveInterim_Oid, T1.HospitalMoveInterim_HospitalM" +
                    "ove, T1.HospitalMoveInterim_Mdoc, T1.HospitalMoveInterim_Otdel, T1.HospitalMoveI" +
                    "nterim_BedProfile, T1.HospitalMoveInterim_DateBegin, T1.HospitalMoveInterim_Date" +
                    "End, T1.HospitalMoveInterim_DocumentService, T1.HospitalMoveInterim_Doctor, T1.H" +
                    "ospitalMoveInterim_CountPlace, T1.HospitalMoveInterim_IsLeave, T1.HospitalMoveIn" +
                    "terim_Del, T1.HospitalMoveInterim_Planing, T1.HospitalMoveInterim_CreateDate, T1" +
                    ".HospitalMoveInterim_Bed, T1.HospitalMoveInterim_Service, T1.HospitalMoveInterim" +
                    "_Tofoms)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS HospitalMoveInterim_" +
                    "Oid, \r\n            T.hospital_move AS HospitalMoveInterim_HospitalMove, \r\n      " +
                    "      T.mdoc AS HospitalMoveInterim_Mdoc, \r\n            T.otdel AS HospitalMoveI" +
                    "nterim_Otdel, \r\n            T.bed_profile AS HospitalMoveInterim_BedProfile, \r\n " +
                    "           T.date_begin AS HospitalMoveInterim_DateBegin, \r\n            T.date_e" +
                    "nd AS HospitalMoveInterim_DateEnd, \r\n            T.document_service AS HospitalM" +
                    "oveInterim_DocumentService, \r\n            T.doctor AS HospitalMoveInterim_Doctor" +
                    ", \r\n            T.count_place AS HospitalMoveInterim_CountPlace, \r\n            T" +
                    ".is_leave AS HospitalMoveInterim_IsLeave, \r\n            T.del AS HospitalMoveInt" +
                    "erim_Del, \r\n            T.planing AS HospitalMoveInterim_Planing, \r\n            " +
                    "T.create_date AS HospitalMoveInterim_CreateDate, \r\n            T.bed AS Hospital" +
                    "MoveInterim_Bed, \r\n            T.service AS HospitalMoveInterim_Service, \r\n     " +
                    "       T.tofoms AS HospitalMoveInterim_Tofoms, \r\n            True AS _from0\r\n   " +
                    "     FROM PostgresEntitiesStoreContainer.hospital_move_interims AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Feedbacks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1090()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Feedbacks", @"
    SELECT VALUE -- Constructing Feedbacks
        [PostgresModel.Feedback](T1.Feedback_Oid, T1.Feedback_People, T1.Feedback_Date, T1.Feedback_Title, T1.Feedback_Body)
    FROM (
        SELECT 
            T.oid AS Feedback_Oid, 
            T.people AS Feedback_People, 
            T.date AS Feedback_Date, 
            T.title AS Feedback_Title, 
            T.body AS Feedback_Body, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.feedbacks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrResults
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1091()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrResults", @"
    SELECT VALUE -- Constructing AnketsReestrResults
        [PostgresModel.AnketsReestrResult](T1.AnketsReestrResult_Oid, T1.AnketsReestrResult_ResultText, T1.AnketsReestrResult_Sysuser, T1.AnketsReestrResult_Sysdate, T1.AnketsReestrResult_AnketsId, T1.AnketsReestrResult_RiskGroup, T1.AnketsReestrResult_ResultType)
    FROM (
        SELECT 
            T.oid AS AnketsReestrResult_Oid, 
            T.result_text AS AnketsReestrResult_ResultText, 
            T.sysuser AS AnketsReestrResult_Sysuser, 
            T.sysdate AS AnketsReestrResult_Sysdate, 
            T.ankets_id AS AnketsReestrResult_AnketsId, 
            T.risk_group AS AnketsReestrResult_RiskGroup, 
            T.result_type AS AnketsReestrResult_ResultType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestr_results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RoutingSheets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1092()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RoutingSheets", @"
    SELECT VALUE -- Constructing RoutingSheets
        [PostgresModel.RoutingSheet](T1.RoutingSheet_Oid, T1.RoutingSheet_Name, T1.RoutingSheet_Synonim, T1.RoutingSheet_Show, T1.RoutingSheet_Sysdate)
    FROM (
        SELECT 
            T.oid AS RoutingSheet_Oid, 
            T.name AS RoutingSheet_Name, 
            T.synonim AS RoutingSheet_Synonim, 
            T.show AS RoutingSheet_Show, 
            T.sysdate AS RoutingSheet_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.routing_sheets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RoutingSheetsPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1093()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RoutingSheetsPeople", @"
    SELECT VALUE -- Constructing RoutingSheetsPeople
        [PostgresModel.RoutingSheetsPerson](T1.RoutingSheetsPerson_People, T1.RoutingSheetsPerson_RoutingSheetId, T1.RoutingSheetsPerson_Sysdate)
    FROM (
        SELECT 
            T.people AS RoutingSheetsPerson_People, 
            T.routing_sheet_id AS RoutingSheetsPerson_RoutingSheetId, 
            T.sysdate AS RoutingSheetsPerson_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.routing_sheets_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrRules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1094()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrRules", @"
    SELECT VALUE -- Constructing AnketsReestrRules
        [PostgresModel.AnketsReestrRule](T1.AnketsReestrRule_Oid, T1.AnketsReestrRule_AnketsReestrResult, T1.AnketsReestrRule_AnswerId, T1.AnketsReestrRule_Sysdate)
    FROM (
        SELECT 
            T.oid AS AnketsReestrRule_Oid, 
            T.ankets_reestr_result AS AnketsReestrRule_AnketsReestrResult, 
            T.answer_id AS AnketsReestrRule_AnswerId, 
            T.sysdate AS AnketsReestrRule_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestr_rules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestrResultBalls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1095()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestrResultBalls", @"
    SELECT VALUE -- Constructing AnketsReestrResultBalls
        [PostgresModel.AnketsReestrResultBall](T1.AnketsReestrResultBall_Oid, T1.AnketsReestrResultBall_MinVal, T1.AnketsReestrResultBall_MaxVal, T1.AnketsReestrResultBall_IncludeMin, T1.AnketsReestrResultBall_IncludeMax)
    FROM (
        SELECT 
            T.oid AS AnketsReestrResultBall_Oid, 
            T.min_val AS AnketsReestrResultBall_MinVal, 
            T.max_val AS AnketsReestrResultBall_MaxVal, 
            T.include_min AS AnketsReestrResultBall_IncludeMin, 
            T.include_max AS AnketsReestrResultBall_IncludeMax, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_reestr_result_balls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsResultTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1096()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsResultTypes", @"
    SELECT VALUE -- Constructing AnketsResultTypes
        [PostgresModel.AnketsResultType](T1.AnketsResultType_Oid, T1.AnketsResultType_Name)
    FROM (
        SELECT 
            T.oid AS AnketsResultType_Oid, 
            T.name AS AnketsResultType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ankets_result_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MdocGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1097()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MdocGroups", @"
    SELECT VALUE -- Constructing MdocGroups
        [PostgresModel.MdocGroup](T1.MdocGroup_Oid, T1.MdocGroup_Name, T1.MdocGroup_StartNum, T1.MdocGroup_DateEnd, T1.MdocGroup_Lpu, T1.MdocGroup_LastChangeNumDate)
    FROM (
        SELECT 
            T.oid AS MdocGroup_Oid, 
            T.name AS MdocGroup_Name, 
            T.start_num AS MdocGroup_StartNum, 
            T.date_end AS MdocGroup_DateEnd, 
            T.lpu AS MdocGroup_Lpu, 
            T.last_change_num_date AS MdocGroup_LastChangeNumDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.mdoc_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DictionaryNsis
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1098()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DictionaryNsis", @"
    SELECT VALUE -- Constructing DictionaryNsis
        [PostgresModel.DictionaryNsi](T1.DictionaryNsi_Oid, T1.DictionaryNsi_Dictionary, T1.DictionaryNsi_Synonim, T1.DictionaryNsi_Name, T1.DictionaryNsi_Show)
    FROM (
        SELECT 
            T.oid AS DictionaryNsi_Oid, 
            T.dictionary AS DictionaryNsi_Dictionary, 
            T.synonim AS DictionaryNsi_Synonim, 
            T.name AS DictionaryNsi_Name, 
            T.show AS DictionaryNsi_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dictionary_nsis AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Chathistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1099()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Chathistories", @"
    SELECT VALUE -- Constructing Chathistories
        [PostgresModel.Chathistory](T1.Chathistory_Oid, T1.Chathistory_Senderid, T1.Chathistory_Receiverid, T1.Chathistory_Messagetime, T1.Chathistory_Messagetext, T1.Chathistory_Isnew)
    FROM (
        SELECT 
            T.oid AS Chathistory_Oid, 
            T.senderid AS Chathistory_Senderid, 
            T.receiverid AS Chathistory_Receiverid, 
            T.messagetime AS Chathistory_Messagetime, 
            T.messagetext AS Chathistory_Messagetext, 
            T.isnew AS Chathistory_Isnew, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.chathistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Chatgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Chatgroups", @"
    SELECT VALUE -- Constructing Chatgroups
        [PostgresModel.Chatgroup](T1.Chatgroup_Oid, T1.Chatgroup_Ownerid, T1.Chatgroup_Groupname)
    FROM (
        SELECT 
            T.oid AS Chatgroup_Oid, 
            T.ownerid AS Chatgroup_Ownerid, 
            T.groupname AS Chatgroup_Groupname, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.chatgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskGroupPresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskGroupPresctypes", @"
    SELECT VALUE -- Constructing RiskGroupPresctypes
        [PostgresModel.RiskGroupPresctype](T1.RiskGroupPresctype_Oid, T1.RiskGroupPresctype_PresctypeId, T1.RiskGroupPresctype_RiskGroupId, T1.RiskGroupPresctype_IsStart, T1.RiskGroupPresctype_Order)
    FROM (
        SELECT 
            T.oid AS RiskGroupPresctype_Oid, 
            T.presctype_id AS RiskGroupPresctype_PresctypeId, 
            T.risk_group_id AS RiskGroupPresctype_RiskGroupId, 
            T.is_start AS RiskGroupPresctype_IsStart, 
            T.[order] AS RiskGroupPresctype_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_group_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskGroups", @"
    SELECT VALUE -- Constructing RiskGroups
        [PostgresModel.RiskGroup](T1.RiskGroup_Oid, T1.RiskGroup_Name, T1.RiskGroup_DateCreate)
    FROM (
        SELECT 
            T.oid AS RiskGroup_Oid, 
            T.name AS RiskGroup_Name, 
            T.date_create AS RiskGroup_DateCreate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.HospitalQueues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1103()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2895);
            viewString.Append("\r\n    SELECT VALUE -- Constructing HospitalQueues\r\n        [PostgresModel.Hospit");
            viewString.Append("alQueue](T1.HospitalQueue_Oid, T1.HospitalQueue_Lpu, T1.HospitalQueue_People, T1");
            viewString.Append(".HospitalQueue_BeginDate, T1.HospitalQueue_EndDate, T1.HospitalQueue_Kol, T1.Hos");
            viewString.Append("pitalQueue_HospitalReason, T1.HospitalQueue_LpuNapr, T1.HospitalQueue_Mkb10, T1.");
            viewString.Append("HospitalQueue_Insurance, T1.HospitalQueue_SotrEnqueue, T1.HospitalQueue_EnqueueD");
            viewString.Append("ate, T1.HospitalQueue_Status, T1.HospitalQueue_SotrStatus, T1.HospitalQueue_Stat");
            viewString.Append("usDate, T1.HospitalQueue_IsPodpis, T1.HospitalQueue_SotrPodpis, T1.HospitalQueue");
            viewString.Append("_HospitalDispGroup, T1.HospitalQueue_HospitalDispSubgroup, T1.HospitalQueue_Hosp");
            viewString.Append("italRemove, T1.HospitalQueue_RemovedDate, T1.HospitalQueue_SotrRemoved, T1.Hospi");
            viewString.Append("talQueue_Mdoc, T1.HospitalQueue_Otdel, T1.HospitalQueue_Room, T1.HospitalQueue_B");
            viewString.Append("roninfo, T1.HospitalQueue_Email, T1.HospitalQueue_HospitalQuota, T1.HospitalQueu");
            viewString.Append("e_TalonVmpNum, T1.HospitalQueue_TalonVmpDate, T1.HospitalQueue_HospitalSrcFinanc");
            viewString.Append("e, T1.HospitalQueue_BedProfile)\r\n    FROM (\r\n        SELECT \r\n            T.oid ");
            viewString.Append("AS HospitalQueue_Oid, \r\n            T.lpu AS HospitalQueue_Lpu, \r\n            T.");
            viewString.Append("people AS HospitalQueue_People, \r\n            T.begin_date AS HospitalQueue_Begi");
            viewString.Append("nDate, \r\n            T.end_date AS HospitalQueue_EndDate, \r\n            T.kol AS");
            viewString.Append(" HospitalQueue_Kol, \r\n            T.hospital_reason AS HospitalQueue_HospitalRea");
            viewString.Append("son, \r\n            T.lpu_napr AS HospitalQueue_LpuNapr, \r\n            T.mkb_10 A");
            viewString.Append("S HospitalQueue_Mkb10, \r\n            T.insurance AS HospitalQueue_Insurance, \r\n ");
            viewString.Append("           T.sotr_enqueue AS HospitalQueue_SotrEnqueue, \r\n            T.enqueue_");
            viewString.Append("date AS HospitalQueue_EnqueueDate, \r\n            T.status AS HospitalQueue_Statu");
            viewString.Append("s, \r\n            T.sotr_status AS HospitalQueue_SotrStatus, \r\n            T.stat");
            viewString.Append("us_date AS HospitalQueue_StatusDate, \r\n            T.is_podpis AS HospitalQueue_");
            viewString.Append("IsPodpis, \r\n            T.sotr_podpis AS HospitalQueue_SotrPodpis, \r\n           ");
            viewString.Append(" T.hospital_disp_group AS HospitalQueue_HospitalDispGroup, \r\n            T.hospi");
            viewString.Append("tal_disp_subgroup AS HospitalQueue_HospitalDispSubgroup, \r\n            T.hospita");
            viewString.Append("l_remove AS HospitalQueue_HospitalRemove, \r\n            T.removed_date AS Hospit");
            viewString.Append("alQueue_RemovedDate, \r\n            T.sotr_removed AS HospitalQueue_SotrRemoved, ");
            viewString.Append("\r\n            T.mdoc AS HospitalQueue_Mdoc, \r\n            T.otdel AS HospitalQue");
            viewString.Append("ue_Otdel, \r\n            T.room AS HospitalQueue_Room, \r\n            T.broninfo A");
            viewString.Append("S HospitalQueue_Broninfo, \r\n            T.email AS HospitalQueue_Email, \r\n      ");
            viewString.Append("      T.hospital_quota AS HospitalQueue_HospitalQuota, \r\n            T.talon_vmp");
            viewString.Append("_num AS HospitalQueue_TalonVmpNum, \r\n            T.talon_vmp_date AS HospitalQue");
            viewString.Append("ue_TalonVmpDate, \r\n            T.hospital_src_finance AS HospitalQueue_HospitalS");
            viewString.Append("rcFinance, \r\n            T.bed_profile AS HospitalQueue_BedProfile, \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.hospital_queues AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.HospitalQueues", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DurationTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DurationTypes", @"
    SELECT VALUE -- Constructing DurationTypes
        [PostgresModel.DurationType](T1.DurationType_Oid, T1.DurationType_Name, T1.DurationType_Show, T1.DurationType_Name2, T1.DurationType_Status)
    FROM (
        SELECT 
            T.oid AS DurationType_Oid, 
            T.name AS DurationType_Name, 
            T.show AS DurationType_Show, 
            T.name2 AS DurationType_Name2, 
            T.status AS DurationType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.duration_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DurationCancels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DurationCancels", @"
    SELECT VALUE -- Constructing DurationCancels
        [PostgresModel.DurationCancel](T1.DurationCancel_Oid, T1.DurationCancel_Name, T1.DurationCancel_Show, T1.DurationCancel_Name2, T1.DurationCancel_Status)
    FROM (
        SELECT 
            T.oid AS DurationCancel_Oid, 
            T.name AS DurationCancel_Name, 
            T.show AS DurationCancel_Show, 
            T.name2 AS DurationCancel_Name2, 
            T.status AS DurationCancel_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.duration_cancels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DocumentsServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DocumentsServices", @"
    SELECT VALUE -- Constructing DocumentsServices
        [PostgresModel.DocumentsService](T1.DocumentsService_Oid, T1.DocumentsService_Lpu, T1.DocumentsService_MdocTypeId, T1.DocumentsService_NumDoc, T1.DocumentsService_YearDoc, T1.DocumentsService_DateGenerate)
    FROM (
        SELECT 
            T.oid AS DocumentsService_Oid, 
            T.lpu AS DocumentsService_Lpu, 
            T.mdoc_type_id AS DocumentsService_MdocTypeId, 
            T.num_doc AS DocumentsService_NumDoc, 
            T.year_doc AS DocumentsService_YearDoc, 
            T.date_generate AS DocumentsService_DateGenerate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.documents_services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemperatureParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemperatureParams", @"
    SELECT VALUE -- Constructing TemperatureParams
        [PostgresModel.TemperatureParam](T1.TemperatureParam_Oid, T1.TemperatureParam_ParamName, T1.TemperatureParam_Synonim, T1.TemperatureParam_TypeField, T1.TemperatureParam_GroupName, T1.TemperatureParam_NumOrder, T1.TemperatureParam_IsDel, T1.TemperatureParam_MinValue, T1.TemperatureParam_MaxValue, T1.TemperatureParam_NormMinValue, T1.TemperatureParam_NormMaxValue)
    FROM (
        SELECT 
            T.oid AS TemperatureParam_Oid, 
            T.param_name AS TemperatureParam_ParamName, 
            T.synonim AS TemperatureParam_Synonim, 
            T.type_field AS TemperatureParam_TypeField, 
            T.group_name AS TemperatureParam_GroupName, 
            T.num_order AS TemperatureParam_NumOrder, 
            T.is_del AS TemperatureParam_IsDel, 
            T.min_value AS TemperatureParam_MinValue, 
            T.max_value AS TemperatureParam_MaxValue, 
            T.norm_min_value AS TemperatureParam_NormMinValue, 
            T.norm_max_value AS TemperatureParam_NormMaxValue, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temperature_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Temperatures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Temperatures", @"
    SELECT VALUE -- Constructing Temperatures
        [PostgresModel.Temperature](T1.Temperature_Oid, T1.Temperature_TemperatureParam, T1.Temperature_Mdoc, T1.Temperature_DateOn, T1.Temperature_ParamValue, T1.Temperature_Sotr, T1.Temperature_DateChanged)
    FROM (
        SELECT 
            T.oid AS Temperature_Oid, 
            T.temperature_param AS Temperature_TemperatureParam, 
            T.mdoc AS Temperature_Mdoc, 
            T.date_on AS Temperature_DateOn, 
            T.param_value AS Temperature_ParamValue, 
            T.sotr AS Temperature_Sotr, 
            T.date_changed AS Temperature_DateChanged, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temperatures AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrSchedules", @"
    SELECT VALUE -- Constructing SotrSchedules
        [PostgresModel.SotrSchedule](T1.SotrSchedule_Oid, T1.SotrSchedule_SotrId, T1.SotrSchedule_StartOn, T1.SotrSchedule_EndOn, T1.SotrSchedule_StartBreak, T1.SotrSchedule_EndBreak, T1.SotrSchedule_HolidayReason)
    FROM (
        SELECT 
            T.oid AS SotrSchedule_Oid, 
            T.sotr_id AS SotrSchedule_SotrId, 
            T.start_on AS SotrSchedule_StartOn, 
            T.end_on AS SotrSchedule_EndOn, 
            T.start_break AS SotrSchedule_StartBreak, 
            T.end_break AS SotrSchedule_EndBreak, 
            T.holiday_reason AS SotrSchedule_HolidayReason, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_schedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RwAccidentnotifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RwAccidentnotifications", @"
    SELECT VALUE -- Constructing RwAccidentnotifications
        [PostgresModel.RwAccidentnotification](T1.RwAccidentnotification_Mdoc, T1.RwAccidentnotification_Condition, T1.RwAccidentnotification_CauseText)
    FROM (
        SELECT 
            T.mdoc AS RwAccidentnotification_Mdoc, 
            T.condition AS RwAccidentnotification_Condition, 
            T.cause_text AS RwAccidentnotification_CauseText, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.rw_accidentnotifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CabBreakReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CabBreakReasons", @"
    SELECT VALUE -- Constructing CabBreakReasons
        [PostgresModel.CabBreakReason](T1.CabBreakReason_Oid, T1.CabBreakReason_Name)
    FROM (
        SELECT 
            T.oid AS CabBreakReason_Oid, 
            T.name AS CabBreakReason_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cab_break_reasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CabinetSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CabinetSchedules", @"
    SELECT VALUE -- Constructing CabinetSchedules
        [PostgresModel.CabinetSchedule](T1.CabinetSchedule_Oid, T1.CabinetSchedule_CabinetId, T1.CabinetSchedule_StartOn, T1.CabinetSchedule_EndOn)
    FROM (
        SELECT 
            T.oid AS CabinetSchedule_Oid, 
            T.cabinet_id AS CabinetSchedule_CabinetId, 
            T.start_on AS CabinetSchedule_StartOn, 
            T.end_on AS CabinetSchedule_EndOn, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cabinet_schedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CabinetBreakSchedules
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CabinetBreakSchedules", @"
    SELECT VALUE -- Constructing CabinetBreakSchedules
        [PostgresModel.CabinetBreakSchedule](T1.CabinetBreakSchedule_Oid, T1.CabinetBreakSchedule_CabinetId, T1.CabinetBreakSchedule_StartBreak, T1.CabinetBreakSchedule_EndBreak, T1.CabinetBreakSchedule_BreakReasonId)
    FROM (
        SELECT 
            T.oid AS CabinetBreakSchedule_Oid, 
            T.cabinet_id AS CabinetBreakSchedule_CabinetId, 
            T.start_break AS CabinetBreakSchedule_StartBreak, 
            T.end_break AS CabinetBreakSchedule_EndBreak, 
            T.break_reason_id AS CabinetBreakSchedule_BreakReasonId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.cabinet_break_schedules AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Latinnames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Latinnames", @"
    SELECT VALUE -- Constructing Latinnames
        [PostgresModel.Latinname](T1.Latinname_Oid, T1.Latinname_Id, T1.Latinname_Name)
    FROM (
        SELECT 
            T.oid AS Latinname_Oid, 
            T.id AS Latinname_Id, 
            T.name AS Latinname_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.latinnames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicInputGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicInputGroups", @"
    SELECT VALUE -- Constructing MedicInputGroups
        [PostgresModel.MedicInputGroup](T1.MedicInputGroup_Oid, T1.MedicInputGroup_Name, T1.MedicInputGroup_Description)
    FROM (
        SELECT 
            T.oid AS MedicInputGroup_Oid, 
            T.name AS MedicInputGroup_Name, 
            T.description AS MedicInputGroup_Description, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_input_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeGivenTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeGivenTemplates", @"
    SELECT VALUE -- Constructing RecipeGivenTemplates
        [PostgresModel.RecipeGivenTemplate](T1.RecipeGivenTemplate_Oid, T1.RecipeGivenTemplate_Sotr, T1.RecipeGivenTemplate_Name)
    FROM (
        SELECT 
            T.oid AS RecipeGivenTemplate_Oid, 
            T.sotr AS RecipeGivenTemplate_Sotr, 
            T.name AS RecipeGivenTemplate_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_given_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeGivenTemplateDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeGivenTemplateDetails", @"
    SELECT VALUE -- Constructing RecipeGivenTemplateDetails
        [PostgresModel.RecipeGivenTemplateDetail](T1.RecipeGivenTemplateDetail_Oid, T1.RecipeGivenTemplateDetail_RecipeGivenTemplate, T1.RecipeGivenTemplateDetail_Medic, T1.RecipeGivenTemplateDetail_CountGiven)
    FROM (
        SELECT 
            T.oid AS RecipeGivenTemplateDetail_Oid, 
            T.recipe_given_template AS RecipeGivenTemplateDetail_RecipeGivenTemplate, 
            T.medic AS RecipeGivenTemplateDetail_Medic, 
            T.count_given AS RecipeGivenTemplateDetail_CountGiven, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_given_template_details AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Vraches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Vraches", @"
    SELECT VALUE -- Constructing Vraches
        [PostgresModel.Vrach](T1.Vrach_Oid, T1.Vrach_MdocId, T1.Vrach_SotrId, T1.Vrach_InsDate)
    FROM (
        SELECT 
            T.oid AS Vrach_Oid, 
            T.mdoc_id AS Vrach_MdocId, 
            T.sotr_id AS Vrach_SotrId, 
            T.ins_date AS Vrach_InsDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vraches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EquipmentPresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EquipmentPresctypes", @"
    SELECT VALUE -- Constructing EquipmentPresctypes
        [PostgresModel.EquipmentPresctype](T1.EquipmentPresctype_Oid, T1.EquipmentPresctype_Equipment, T1.EquipmentPresctype_Presctype)
    FROM (
        SELECT 
            T.oid AS EquipmentPresctype_Oid, 
            T.equipment AS EquipmentPresctype_Equipment, 
            T.presctype AS EquipmentPresctype_Presctype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.equipment_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactorSpecialties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactorSpecialties", @"
    SELECT VALUE -- Constructing ProfexProffactorSpecialties
        [PostgresModel.ProfexProffactorSpecialty](T1.ProfexProffactorSpecialty_Oid, T1.ProfexProffactorSpecialty_ProfexProffactor, T1.ProfexProffactorSpecialty_Specialty)
    FROM (
        SELECT 
            T.oid AS ProfexProffactorSpecialty_Oid, 
            T.profex_proffactor AS ProfexProffactorSpecialty_ProfexProffactor, 
            T.specialty AS ProfexProffactorSpecialty_Specialty, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactor_specialties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexProffactorPrescParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexProffactorPrescParams", @"
    SELECT VALUE -- Constructing ProfexProffactorPrescParams
        [PostgresModel.ProfexProffactorPrescParam](T1.ProfexProffactorPrescParam_Oid, T1.ProfexProffactorPrescParam_ProfexProffactorPresc, T1.ProfexProffactorPrescParam_ProfexActionsType, T1.ProfexProffactorPrescParam_Sex, T1.ProfexProffactorPrescParam_AgeGroupType)
    FROM (
        SELECT 
            T.oid AS ProfexProffactorPrescParam_Oid, 
            T.profex_proffactor_presc AS ProfexProffactorPrescParam_ProfexProffactorPresc, 
            T.profex_actions_type AS ProfexProffactorPrescParam_ProfexActionsType, 
            T.sex AS ProfexProffactorPrescParam_Sex, 
            T.age_group_type AS ProfexProffactorPrescParam_AgeGroupType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_proffactor_presc_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CompanyOwnerships
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CompanyOwnerships", @"
    SELECT VALUE -- Constructing CompanyOwnerships
        [PostgresModel.CompanyOwnership](T1.CompanyOwnership_Oid, T1.CompanyOwnership_Name, T1.CompanyOwnership_Shortname)
    FROM (
        SELECT 
            T.oid AS CompanyOwnership_Oid, 
            T.name AS CompanyOwnership_Name, 
            T.shortname AS CompanyOwnership_Shortname, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.company_ownerships AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexActionsStatusEvents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexActionsStatusEvents", @"
    SELECT VALUE -- Constructing ProfexActionsStatusEvents
        [PostgresModel.ProfexActionsStatusEvent](T1.ProfexActionsStatusEvent_Id, T1.ProfexActionsStatusEvent_Name)
    FROM (
        SELECT 
            T.id AS ProfexActionsStatusEvent_Id, 
            T.name AS ProfexActionsStatusEvent_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_actions_status_events AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexConclusions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexConclusions", @"
    SELECT VALUE -- Constructing ProfexConclusions
        [PostgresModel.ProfexConclusion](T1.ProfexConclusion_Oid, T1.ProfexConclusion_Name)
    FROM (
        SELECT 
            T.oid AS ProfexConclusion_Oid, 
            T.name AS ProfexConclusion_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_conclusions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexGroupHealths
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexGroupHealths", @"
    SELECT VALUE -- Constructing ProfexGroupHealths
        [PostgresModel.ProfexGroupHealth](T1.ProfexGroupHealth_Oid, T1.ProfexGroupHealth_Name)
    FROM (
        SELECT 
            T.oid AS ProfexGroupHealth_Oid, 
            T.name AS ProfexGroupHealth_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_group_healths AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexDiseases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexDiseases", @"
    SELECT VALUE -- Constructing ProfexDiseases
        [PostgresModel.ProfexDisease](T1.ProfexDisease_Oid, T1.ProfexDisease_Code, T1.ProfexDisease_Name, T1.ProfexDisease_Parent, T1.ProfexDisease_Proffactor)
    FROM (
        SELECT 
            T.oid AS ProfexDisease_Oid, 
            T.code AS ProfexDisease_Code, 
            T.name AS ProfexDisease_Name, 
            T.parent AS ProfexDisease_Parent, 
            T.proffactor AS ProfexDisease_Proffactor, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_diseases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexNotices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexNotices", @"
    SELECT VALUE -- Constructing ProfexNotices
        [PostgresModel.ProfexNotice](T1.ProfexNotice_Oid, T1.ProfexNotice_ProfexList, T1.ProfexNotice_Diag, T1.ProfexNotice_NoticeNum, T1.ProfexNotice_NoticeDate, T1.ProfexNotice_Description, T1.ProfexNotice_CreationDate, T1.ProfexNotice_ProfexNoticeStatus)
    FROM (
        SELECT 
            T.oid AS ProfexNotice_Oid, 
            T.profex_list AS ProfexNotice_ProfexList, 
            T.diag AS ProfexNotice_Diag, 
            T.notice_num AS ProfexNotice_NoticeNum, 
            T.notice_date AS ProfexNotice_NoticeDate, 
            T.description AS ProfexNotice_Description, 
            T.creation_date AS ProfexNotice_CreationDate, 
            T.profex_notice_status AS ProfexNotice_ProfexNoticeStatus, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_notices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexNoticeStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexNoticeStatus", @"
    SELECT VALUE -- Constructing ProfexNoticeStatus
        [PostgresModel.ProfexNoticeStatus](T1.ProfexNoticeStatus_Oid, T1.ProfexNoticeStatus_Name)
    FROM (
        SELECT 
            T.oid AS ProfexNoticeStatus_Oid, 
            T.name AS ProfexNoticeStatus_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_notice_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexDepartments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexDepartments", @"
    SELECT VALUE -- Constructing ProfexDepartments
        [PostgresModel.ProfexDepartment](T1.ProfexDepartment_Oid, T1.ProfexDepartment_Name, T1.ProfexDepartment_ProfexCompany)
    FROM (
        SELECT 
            T.oid AS ProfexDepartment_Oid, 
            T.name AS ProfexDepartment_Name, 
            T.profex_company AS ProfexDepartment_ProfexCompany, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_departments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexRecommendations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexRecommendations", @"
    SELECT VALUE -- Constructing ProfexRecommendations
        [PostgresModel.ProfexRecommendation](T1.ProfexRecommendation_Oid, T1.ProfexRecommendation_Parent, T1.ProfexRecommendation_Name)
    FROM (
        SELECT 
            T.oid AS ProfexRecommendation_Oid, 
            T.parent AS ProfexRecommendation_Parent, 
            T.name AS ProfexRecommendation_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_recommendations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexListNazRecommendations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexListNazRecommendations", @"
    SELECT VALUE -- Constructing ProfexListNazRecommendations
        [PostgresModel.ProfexListNazRecommendation](T1.ProfexListNazRecommendation_Oid, T1.ProfexListNazRecommendation_ProfexListNaz, T1.ProfexListNazRecommendation_ProfexRecommendation)
    FROM (
        SELECT 
            T.oid AS ProfexListNazRecommendation_Oid, 
            T.profex_list_naz AS ProfexListNazRecommendation_ProfexListNaz, 
            T.profex_recommendation AS ProfexListNazRecommendation_ProfexRecommendation, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_list_naz_recommendations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CustomMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CustomMessages", @"
    SELECT VALUE -- Constructing CustomMessages
        [PostgresModel.CustomMessage](T1.CustomMessage_Oid, T1.CustomMessage_SystemMessageType, T1.CustomMessage_People, T1.CustomMessage_Enabled, T1.CustomMessage_NotifySchedule, T1.CustomMessage_MessageText)
    FROM (
        SELECT 
            T.oid AS CustomMessage_Oid, 
            T.system_message_type AS CustomMessage_SystemMessageType, 
            T.people AS CustomMessage_People, 
            T.enabled AS CustomMessage_Enabled, 
            T.notify_schedule AS CustomMessage_NotifySchedule, 
            T.message_text AS CustomMessage_MessageText, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.custom_messages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleNoNotifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleNoNotifications", @"
    SELECT VALUE -- Constructing PeopleNoNotifications
        [PostgresModel.PeopleNoNotification](T1.PeopleNoNotification_People, T1.PeopleNoNotification_Operator, T1.PeopleNoNotification_Date)
    FROM (
        SELECT 
            T.people AS PeopleNoNotification_People, 
            T.operator AS PeopleNoNotification_Operator, 
            T.date AS PeopleNoNotification_Date, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_no_notifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemMessageTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemMessageTypes", @"
    SELECT VALUE -- Constructing SystemMessageTypes
        [PostgresModel.SystemMessageType](T1.SystemMessageType_Oid, T1.SystemMessageType_Name, T1.SystemMessageType_Show)
    FROM (
        SELECT 
            T.oid AS SystemMessageType_Oid, 
            T.name AS SystemMessageType_Name, 
            T.show AS SystemMessageType_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_message_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemMessages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemMessages", @"
    SELECT VALUE -- Constructing SystemMessages
        [PostgresModel.SystemMessage](T1.SystemMessage_Oid, T1.SystemMessage_SystemMessageType, T1.SystemMessage_Lpu, T1.SystemMessage_Enabled, T1.SystemMessage_SendingTime, T1.SystemMessage_SendingDaysBefore, T1.SystemMessage_MessageText, T1.SystemMessage_InformTheDoctor)
    FROM (
        SELECT 
            T.oid AS SystemMessage_Oid, 
            T.system_message_type AS SystemMessage_SystemMessageType, 
            T.lpu AS SystemMessage_Lpu, 
            T.enabled AS SystemMessage_Enabled, 
            T.sending_time AS SystemMessage_SendingTime, 
            T.sending_days_before AS SystemMessage_SendingDaysBefore, 
            T.message_text AS SystemMessage_MessageText, 
            T.inform_the_doctor AS SystemMessage_InformTheDoctor, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_messages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemMessageTypeTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemMessageTypeTemplates", @"
    SELECT VALUE -- Constructing SystemMessageTypeTemplates
        [PostgresModel.SystemMessageTypeTemplate](T1.SystemMessageTypeTemplate_Oid, T1.SystemMessageTypeTemplate_SystemMessageType, T1.SystemMessageTypeTemplate_Name, T1.SystemMessageTypeTemplate_ColumnName)
    FROM (
        SELECT 
            T.oid AS SystemMessageTypeTemplate_Oid, 
            T.system_message_type AS SystemMessageTypeTemplate_SystemMessageType, 
            T.name AS SystemMessageTypeTemplate_Name, 
            T.column_name AS SystemMessageTypeTemplate_ColumnName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_message_type_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemProtocoltemplateSysusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemProtocoltemplateSysusers", @"
    SELECT VALUE -- Constructing SystemProtocoltemplateSysusers
        [PostgresModel.SystemProtocoltemplateSysuser](T1.SystemProtocoltemplateSysuser_SystemProtocoltemplate, T1.SystemProtocoltemplateSysuser_Sysuser, T1.SystemProtocoltemplateSysuser_Default)
    FROM (
        SELECT 
            T.system_protocoltemplate AS SystemProtocoltemplateSysuser_SystemProtocoltemplate, 
            T.sysuser AS SystemProtocoltemplateSysuser_Sysuser, 
            T.default AS SystemProtocoltemplateSysuser_Default, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_protocoltemplate_sysusers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexOrdergroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexOrdergroups", @"
    SELECT VALUE -- Constructing ProfexOrdergroups
        [PostgresModel.ProfexOrdergroup](T1.ProfexOrdergroup_Oid, T1.ProfexOrdergroup_Name, T1.ProfexOrdergroup_OrderIndex, T1.ProfexOrdergroup_Lpu)
    FROM (
        SELECT 
            T.oid AS ProfexOrdergroup_Oid, 
            T.name AS ProfexOrdergroup_Name, 
            T.order_index AS ProfexOrdergroup_OrderIndex, 
            T.lpu AS ProfexOrdergroup_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_ordergroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Intolerances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Intolerances", @"
    SELECT VALUE -- Constructing Intolerances
        [PostgresModel.Intolerance](T1.Intolerance_Oid, T1.Intolerance_PeopleId, T1.Intolerance_TradenamesId, T1.Intolerance_Date, T1.Intolerance_PrscId, T1.Intolerance_SotrId, T1.Intolerance_SideEffects, T1.Intolerance_Actmatter)
    FROM (
        SELECT 
            T.oid AS Intolerance_Oid, 
            T.people_id AS Intolerance_PeopleId, 
            T.tradenames_id AS Intolerance_TradenamesId, 
            T.date AS Intolerance_Date, 
            T.prsc_id AS Intolerance_PrscId, 
            T.sotr_id AS Intolerance_SotrId, 
            T.side_effects AS Intolerance_SideEffects, 
            T.actmatter AS Intolerance_Actmatter, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.intolerances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistTypes", @"
    SELECT VALUE -- Constructing SicklistTypes
        [PostgresModel.SicklistType](T1.SicklistType_Oid, T1.SicklistType_Name, T1.SicklistType_ShortName)
    FROM (
        SELECT 
            T.oid AS SicklistType_Oid, 
            T.name AS SicklistType_Name, 
            T.short_name AS SicklistType_ShortName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactors", @"
    SELECT VALUE -- Constructing RiskFactors
        [PostgresModel.RiskFactor](T1.RiskFactor_Oid, T1.RiskFactor_Name)
    FROM (
        SELECT 
            T.oid AS RiskFactor_Oid, 
            T.name AS RiskFactor_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicalcareForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicalcareForms", @"
    SELECT VALUE -- Constructing MedicalcareForms
        [PostgresModel.MedicalcareForm](T1.MedicalcareForm_Oid, T1.MedicalcareForm_Name, T1.MedicalcareForm_FomsCode, T1.MedicalcareForm_Show, T1.MedicalcareForm_Status)
    FROM (
        SELECT 
            T.oid AS MedicalcareForm_Oid, 
            T.name AS MedicalcareForm_Name, 
            T.foms_code AS MedicalcareForm_FomsCode, 
            T.show AS MedicalcareForm_Show, 
            T.status AS MedicalcareForm_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medicalcare_forms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TmodelMedicalCareForms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TmodelMedicalCareForms", @"
    SELECT VALUE -- Constructing TmodelMedicalCareForms
        [PostgresModel.TmodelMedicalCareForm](T1.TmodelMedicalCareForm_Oid, T1.TmodelMedicalCareForm_Tmodel, T1.TmodelMedicalCareForm_MedicalcareForm)
    FROM (
        SELECT 
            T.oid AS TmodelMedicalCareForm_Oid, 
            T.tmodel AS TmodelMedicalCareForm_Tmodel, 
            T.medicalcare_form AS TmodelMedicalCareForm_MedicalcareForm, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodel_medical_care_forms AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispAnketsAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispAnketsAnswers", @"
    SELECT VALUE -- Constructing DispAnketsAnswers
        [PostgresModel.DispAnketsAnswer](T1.DispAnketsAnswer_Oid, T1.DispAnketsAnswer_Answer, T1.DispAnketsAnswer_Order)
    FROM (
        SELECT 
            T.oid AS DispAnketsAnswer_Oid, 
            T.answer AS DispAnketsAnswer_Answer, 
            T.[order] AS DispAnketsAnswer_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_ankets_answers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispAnkets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispAnkets", @"
    SELECT VALUE -- Constructing DispAnkets
        [PostgresModel.DispAnket](T1.DispAnket_Oid, T1.DispAnket_Question, T1.DispAnket_Answer)
    FROM (
        SELECT 
            T.oid AS DispAnket_Oid, 
            T.question AS DispAnket_Question, 
            T.answer AS DispAnket_Answer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_ankets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispAnketsQuests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispAnketsQuests", @"
    SELECT VALUE -- Constructing DispAnketsQuests
        [PostgresModel.DispAnketsQuest](T1.DispAnketsQuest_Oid, T1.DispAnketsQuest_Question, T1.DispAnketsQuest_Order)
    FROM (
        SELECT 
            T.oid AS DispAnketsQuest_Oid, 
            T.question AS DispAnketsQuest_Question, 
            T.[order] AS DispAnketsQuest_Order, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_ankets_quests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DispAnketsPatients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DispAnketsPatients", @"
    SELECT VALUE -- Constructing DispAnketsPatients
        [PostgresModel.DispAnketsPatient](T1.DispAnketsPatient_Oid, T1.DispAnketsPatient_Ambticket, T1.DispAnketsPatient_Question, T1.DispAnketsPatient_Answer)
    FROM (
        SELECT 
            T.oid AS DispAnketsPatient_Oid, 
            T.ambticket AS DispAnketsPatient_Ambticket, 
            T.question AS DispAnketsPatient_Question, 
            T.answer AS DispAnketsPatient_Answer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.disp_ankets_patients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Socialgroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Socialgroups", @"
    SELECT VALUE -- Constructing Socialgroups
        [PostgresModel.Socialgroup](T1.Socialgroup_Oid, T1.Socialgroup_Name, T1.Socialgroup_Show, T1.Socialgroup_Name2, T1.Socialgroup_Status, T1.Socialgroup_Code)
    FROM (
        SELECT 
            T.oid AS Socialgroup_Oid, 
            T.name AS Socialgroup_Name, 
            T.show AS Socialgroup_Show, 
            T.name2 AS Socialgroup_Name2, 
            T.status AS Socialgroup_Status, 
            T.code AS Socialgroup_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.socialgroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SotrSertificatespecialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SotrSertificatespecialities", @"
    SELECT VALUE -- Constructing SotrSertificatespecialities
        [PostgresModel.SotrSertificatespeciality](T1.SotrSertificatespeciality_Oid, T1.SotrSertificatespeciality_Sotr, T1.SotrSertificatespeciality_Sertificatespeciality)
    FROM (
        SELECT 
            T.oid AS SotrSertificatespeciality_Oid, 
            T.sotr AS SotrSertificatespeciality_Sotr, 
            T.sertificatespeciality AS SotrSertificatespeciality_Sertificatespeciality, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sotr_sertificatespecialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RiskFactorsVisits
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RiskFactorsVisits", @"
    SELECT VALUE -- Constructing RiskFactorsVisits
        [PostgresModel.RiskFactorsVisit](T1.RiskFactorsVisit_Oid, T1.RiskFactorsVisit_RiskFactor, T1.RiskFactorsVisit_Visit)
    FROM (
        SELECT 
            T.oid AS RiskFactorsVisit_Oid, 
            T.risk_factor AS RiskFactorsVisit_RiskFactor, 
            T.visit AS RiskFactorsVisit_Visit, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.risk_factors_visits AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayTransactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayTransactions", @"
    SELECT VALUE -- Constructing PayTransactions
        [PostgresModel.PayTransaction](T1.PayTransaction_Oid, T1.PayTransaction_Account, T1.PayTransaction_Sum, T1.PayTransaction_DebtSum, T1.PayTransaction_PaidTransaction, T1.PayTransaction_TransDate, T1.PayTransaction_Sotr, T1.PayTransaction_RefuseReason)
    FROM (
        SELECT 
            T.oid AS PayTransaction_Oid, 
            T.account AS PayTransaction_Account, 
            T.sum AS PayTransaction_Sum, 
            T.debt_sum AS PayTransaction_DebtSum, 
            T.paid_transaction AS PayTransaction_PaidTransaction, 
            T.trans_date AS PayTransaction_TransDate, 
            T.sotr AS PayTransaction_Sotr, 
            T.refuse_reason AS PayTransaction_RefuseReason, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_transactions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayTimes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayTimes", @"
    SELECT VALUE -- Constructing PayTimes
        [PostgresModel.PayTime](T1.PayTime_Oid, T1.PayTime_Name, T1.PayTime_State)
    FROM (
        SELECT 
            T.oid AS PayTime_Oid, 
            T.name AS PayTime_Name, 
            T.state AS PayTime_State, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_times AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartProgramLpus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1153()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartProgramLpus", @"
    SELECT VALUE -- Constructing CounterpartProgramLpus
        [PostgresModel.CounterpartProgramLpu](T1.CounterpartProgramLpu_Oid, T1.CounterpartProgramLpu_CounterpartProgram, T1.CounterpartProgramLpu_Lpu)
    FROM (
        SELECT 
            T.oid AS CounterpartProgramLpu_Oid, 
            T.counterpart_program AS CounterpartProgramLpu_CounterpartProgram, 
            T.lpu AS CounterpartProgramLpu_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_program_lpus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CountpProgrServicePresctypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CountpProgrServicePresctypes", @"
    SELECT VALUE -- Constructing CountpProgrServicePresctypes
        [PostgresModel.CountpProgrServicePresctype](T1.CountpProgrServicePresctype_Oid, T1.CountpProgrServicePresctype_CounterpartProgram, T1.CountpProgrServicePresctype_Service, T1.CountpProgrServicePresctype_NeedAgreement, T1.CountpProgrServicePresctype_ByCondition, T1.CountpProgrServicePresctype_Condition, T1.CountpProgrServicePresctype_CountAll, T1.CountpProgrServicePresctype_CountDay, T1.CountpProgrServicePresctype_CountMonth, T1.CountpProgrServicePresctype_Presctype)
    FROM (
        SELECT 
            T.oid AS CountpProgrServicePresctype_Oid, 
            T.counterpart_program AS CountpProgrServicePresctype_CounterpartProgram, 
            T.service AS CountpProgrServicePresctype_Service, 
            T.need_agreement AS CountpProgrServicePresctype_NeedAgreement, 
            T.by_condition AS CountpProgrServicePresctype_ByCondition, 
            T.condition AS CountpProgrServicePresctype_Condition, 
            T.count_all AS CountpProgrServicePresctype_CountAll, 
            T.count_day AS CountpProgrServicePresctype_CountDay, 
            T.count_month AS CountpProgrServicePresctype_CountMonth, 
            T.presctype AS CountpProgrServicePresctype_Presctype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.countp_progr_service_presctypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartProgramInsurances
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartProgramInsurances", @"
    SELECT VALUE -- Constructing CounterpartProgramInsurances
        [PostgresModel.CounterpartProgramInsurance](T1.CounterpartProgramInsurance_Oid, T1.CounterpartProgramInsurance_CounterpartProgram, T1.CounterpartProgramInsurance_Insurance, T1.CounterpartProgramInsurance_Cost, T1.CounterpartProgramInsurance_DateBegin, T1.CounterpartProgramInsurance_DateEnd)
    FROM (
        SELECT 
            T.oid AS CounterpartProgramInsurance_Oid, 
            T.counterpart_program AS CounterpartProgramInsurance_CounterpartProgram, 
            T.insurance AS CounterpartProgramInsurance_Insurance, 
            T.cost AS CounterpartProgramInsurance_Cost, 
            T.date_begin AS CounterpartProgramInsurance_DateBegin, 
            T.date_end AS CounterpartProgramInsurance_DateEnd, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_program_insurances AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CountpProgramIsnuranceDiscnts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CountpProgramIsnuranceDiscnts", @"
    SELECT VALUE -- Constructing CountpProgramIsnuranceDiscnts
        [PostgresModel.CountpProgramIsnuranceDiscnt](T1.CountpProgramIsnuranceDiscnt_Oid, T1.CountpProgramIsnuranceDiscnt_CounterpartProgramInsurance, T1.CountpProgramIsnuranceDiscnt_Discount)
    FROM (
        SELECT 
            T.oid AS CountpProgramIsnuranceDiscnt_Oid, 
            T.counterpart_program_insurance AS CountpProgramIsnuranceDiscnt_CounterpartProgramInsurance, 
            T.discount AS CountpProgramIsnuranceDiscnt_Discount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.countp_program_isnurance_discnts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DiplomaticStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DiplomaticStatus", @"
    SELECT VALUE -- Constructing DiplomaticStatus
        [PostgresModel.DiplomaticStatus](T1.DiplomaticStatus_Oid, T1.DiplomaticStatus_Name, T1.DiplomaticStatus_Code)
    FROM (
        SELECT 
            T.oid AS DiplomaticStatus_Oid, 
            T.name AS DiplomaticStatus_Name, 
            T.code AS DiplomaticStatus_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.diplomatic_status AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexRequiredPrescParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexRequiredPrescParams", @"
    SELECT VALUE -- Constructing ProfexRequiredPrescParams
        [PostgresModel.ProfexRequiredPrescParam](T1.ProfexRequiredPrescParam_Oid, T1.ProfexRequiredPrescParam_ProfexActionstypePresctype, T1.ProfexRequiredPrescParam_ProfexActionsType, T1.ProfexRequiredPrescParam_Sex, T1.ProfexRequiredPrescParam_AgeGroupType)
    FROM (
        SELECT 
            T.oid AS ProfexRequiredPrescParam_Oid, 
            T.profex_actionstype_presctype AS ProfexRequiredPrescParam_ProfexActionstypePresctype, 
            T.profex_actions_type AS ProfexRequiredPrescParam_ProfexActionsType, 
            T.sex AS ProfexRequiredPrescParam_Sex, 
            T.age_group_type AS ProfexRequiredPrescParam_AgeGroupType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_required_presc_params AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PayAppendixTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PayAppendixTypes", @"
    SELECT VALUE -- Constructing PayAppendixTypes
        [PostgresModel.PayAppendixType](T1.PayAppendixType_Oid, T1.PayAppendixType_Name)
    FROM (
        SELECT 
            T.oid AS PayAppendixType_Oid, 
            T.name AS PayAppendixType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.pay_appendix_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.UserProtocoltemplatePrescs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.UserProtocoltemplatePrescs", @"
    SELECT VALUE -- Constructing UserProtocoltemplatePrescs
        [PostgresModel.UserProtocoltemplatePresc](T1.UserProtocoltemplatePresc_Oid, T1.UserProtocoltemplatePresc_UserProtocol, T1.UserProtocoltemplatePresc_Presctype)
    FROM (
        SELECT 
            T.oid AS UserProtocoltemplatePresc_Oid, 
            T.user_protocol AS UserProtocoltemplatePresc_UserProtocol, 
            T.presctype AS UserProtocoltemplatePresc_Presctype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.user_protocoltemplate_prescs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReportPapersizes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReportPapersizes", @"
    SELECT VALUE -- Constructing ReportPapersizes
        [PostgresModel.ReportPapersize](T1.ReportPapersize_Oid, T1.ReportPapersize_Name, T1.ReportPapersize_PaperWidth, T1.ReportPapersize_PaperHeight)
    FROM (
        SELECT 
            T.oid AS ReportPapersize_Oid, 
            T.name AS ReportPapersize_Name, 
            T.paper_width AS ReportPapersize_PaperWidth, 
            T.paper_height AS ReportPapersize_PaperHeight, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.report_papersizes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReportParameters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReportParameters", @"
    SELECT VALUE -- Constructing ReportParameters
        [PostgresModel.ReportParameter](T1.ReportParameter_Oid, T1.ReportParameter_ReportTemplate, T1.ReportParameter_ParamDatatype, T1.ReportParameter_ParamName)
    FROM (
        SELECT 
            T.oid AS ReportParameter_Oid, 
            T.report_template AS ReportParameter_ReportTemplate, 
            T.param_datatype AS ReportParameter_ParamDatatype, 
            T.param_name AS ReportParameter_ParamName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.report_parameters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VipPeopleSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VipPeopleSotrs", @"
    SELECT VALUE -- Constructing VipPeopleSotrs
        [PostgresModel.VipPeopleSotr](T1.VipPeopleSotr_Oid, T1.VipPeopleSotr_VipPeople, T1.VipPeopleSotr_Sotr, T1.VipPeopleSotr_Password)
    FROM (
        SELECT 
            T.oid AS VipPeopleSotr_Oid, 
            T.vip_people AS VipPeopleSotr_VipPeople, 
            T.sotr AS VipPeopleSotr_Sotr, 
            T.password AS VipPeopleSotr_Password, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vip_people_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartProgramDiagActions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartProgramDiagActions", @"
    SELECT VALUE -- Constructing CounterpartProgramDiagActions
        [PostgresModel.CounterpartProgramDiagAction](T1.CounterpartProgramDiagAction_Oid, T1.CounterpartProgramDiagAction_Name)
    FROM (
        SELECT 
            T.oid AS CounterpartProgramDiagAction_Oid, 
            T.name AS CounterpartProgramDiagAction_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_program_diag_actions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PrescCounterpartPrograms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PrescCounterpartPrograms", @"
    SELECT VALUE -- Constructing PrescCounterpartPrograms
        [PostgresModel.PrescCounterpartProgram](T1.PrescCounterpartProgram_Oid, T1.PrescCounterpartProgram_Presc, T1.PrescCounterpartProgram_CounterpartProgram, T1.PrescCounterpartProgram_CountpProgrServicePresctype, T1.PrescCounterpartProgram_PartCost)
    FROM (
        SELECT 
            T.oid AS PrescCounterpartProgram_Oid, 
            T.presc AS PrescCounterpartProgram_Presc, 
            T.counterpart_program AS PrescCounterpartProgram_CounterpartProgram, 
            T.countp_progr_service_presctype AS PrescCounterpartProgram_CountpProgrServicePresctype, 
            T.part_cost AS PrescCounterpartProgram_PartCost, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.presc_counterpart_programs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ContractSignSotrOtdels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1166()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ContractSignSotrOtdels", @"
    SELECT VALUE -- Constructing ContractSignSotrOtdels
        [PostgresModel.ContractSignSotrOtdel](T1.ContractSignSotrOtdel_Oid, T1.ContractSignSotrOtdel_ContractSignSotr, T1.ContractSignSotrOtdel_Lpu, T1.ContractSignSotrOtdel_Otdel)
    FROM (
        SELECT 
            T.oid AS ContractSignSotrOtdel_Oid, 
            T.contract_sign_sotr AS ContractSignSotrOtdel_ContractSignSotr, 
            T.lpu AS ContractSignSotrOtdel_Lpu, 
            T.otdel AS ContractSignSotrOtdel_Otdel, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.contract_sign_sotr_otdels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Declensions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Declensions", @"
    SELECT VALUE -- Constructing Declensions
        [PostgresModel.Declension](T1.Declension_Oid, T1.Declension_Name)
    FROM (
        SELECT 
            T.oid AS Declension_Oid, 
            T.name AS Declension_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.declensions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleFioDeclensions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleFioDeclensions", @"
    SELECT VALUE -- Constructing PeopleFioDeclensions
        [PostgresModel.PeopleFioDeclension](T1.PeopleFioDeclension_Oid, T1.PeopleFioDeclension_People, T1.PeopleFioDeclension_Declension, T1.PeopleFioDeclension_Firstname, T1.PeopleFioDeclension_Middlename, T1.PeopleFioDeclension_Lastname)
    FROM (
        SELECT 
            T.oid AS PeopleFioDeclension_Oid, 
            T.people AS PeopleFioDeclension_People, 
            T.declension AS PeopleFioDeclension_Declension, 
            T.firstname AS PeopleFioDeclension_Firstname, 
            T.middlename AS PeopleFioDeclension_Middlename, 
            T.lastname AS PeopleFioDeclension_Lastname, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_fio_declensions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ContractSignSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ContractSignSotrs", @"
    SELECT VALUE -- Constructing ContractSignSotrs
        [PostgresModel.ContractSignSotr](T1.ContractSignSotr_Oid, T1.ContractSignSotr_Sotr, T1.ContractSignSotr_Reason, T1.ContractSignSotr_DateBegin, T1.ContractSignSotr_DateEnd)
    FROM (
        SELECT 
            T.oid AS ContractSignSotr_Oid, 
            T.sotr AS ContractSignSotr_Sotr, 
            T.reason AS ContractSignSotr_Reason, 
            T.date_begin AS ContractSignSotr_DateBegin, 
            T.date_end AS ContractSignSotr_DateEnd, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.contract_sign_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartContractLetters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartContractLetters", @"
    SELECT VALUE -- Constructing CounterpartContractLetters
        [PostgresModel.CounterpartContractLetter](T1.CounterpartContractLetter_Oid, T1.CounterpartContractLetter_Contract, T1.CounterpartContractLetter_InDate, T1.CounterpartContractLetter_InNum, T1.CounterpartContractLetter_OutNum, T1.CounterpartContractLetter_Sysdate, T1.CounterpartContractLetter_Sotr, T1.CounterpartContractLetter_OutDate)
    FROM (
        SELECT 
            T.oid AS CounterpartContractLetter_Oid, 
            T.contract AS CounterpartContractLetter_Contract, 
            T.in_date AS CounterpartContractLetter_InDate, 
            T.in_num AS CounterpartContractLetter_InNum, 
            T.out_num AS CounterpartContractLetter_OutNum, 
            T.sysdate AS CounterpartContractLetter_Sysdate, 
            T.sotr AS CounterpartContractLetter_Sotr, 
            T.out_date AS CounterpartContractLetter_OutDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_contract_letters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartProgramInsLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartProgramInsLogs", @"
    SELECT VALUE -- Constructing CounterpartProgramInsLogs
        [PostgresModel.CounterpartProgramInsLog](T1.CounterpartProgramInsLog_Oid, T1.CounterpartProgramInsLog_CounterpartProgram, T1.CounterpartProgramInsLog_Insurance, T1.CounterpartProgramInsLog_DateBeginChange, T1.CounterpartProgramInsLog_DateEndChange, T1.CounterpartProgramInsLog_CounterpartLetter, T1.CounterpartProgramInsLog_Sysdate, T1.CounterpartProgramInsLog_Sotr)
    FROM (
        SELECT 
            T.oid AS CounterpartProgramInsLog_Oid, 
            T.counterpart_program AS CounterpartProgramInsLog_CounterpartProgram, 
            T.insurance AS CounterpartProgramInsLog_Insurance, 
            T.date_begin_change AS CounterpartProgramInsLog_DateBeginChange, 
            T.date_end_change AS CounterpartProgramInsLog_DateEndChange, 
            T.counterpart_letter AS CounterpartProgramInsLog_CounterpartLetter, 
            T.sysdate AS CounterpartProgramInsLog_Sysdate, 
            T.sotr AS CounterpartProgramInsLog_Sotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_program_ins_logs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VisitReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VisitReasons", @"
    SELECT VALUE -- Constructing VisitReasons
        [PostgresModel.VisitReason](T1.VisitReason_Oid, T1.VisitReason_Name, T1.VisitReason_FomsCode, T1.VisitReason_ReasonType, T1.VisitReason_Show, T1.VisitReason_Name2, T1.VisitReason_Status)
    FROM (
        SELECT 
            T.oid AS VisitReason_Oid, 
            T.name AS VisitReason_Name, 
            T.foms_code AS VisitReason_FomsCode, 
            T.reason_type AS VisitReason_ReasonType, 
            T.show AS VisitReason_Show, 
            T.name2 AS VisitReason_Name2, 
            T.status AS VisitReason_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.visit_reasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistDuplicateTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistDuplicateTypes", @"
    SELECT VALUE -- Constructing SicklistDuplicateTypes
        [PostgresModel.SicklistDuplicateType](T1.SicklistDuplicateType_Oid, T1.SicklistDuplicateType_Name)
    FROM (
        SELECT 
            T.oid AS SicklistDuplicateType_Oid, 
            T.name AS SicklistDuplicateType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_duplicate_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.StatOperationInfos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.StatOperationInfos", @"
    SELECT VALUE -- Constructing StatOperationInfos
        [PostgresModel.StatOperationInfo](T1.StatOperationInfo_Presc, T1.StatOperationInfo_Complications, T1.StatOperationInfo_EndocrinologyApp, T1.StatOperationInfo_LaserApp, T1.StatOperationInfo_CryogenApp, T1.StatOperationInfo_Ksg)
    FROM (
        SELECT 
            T.presc AS StatOperationInfo_Presc, 
            T.complications AS StatOperationInfo_Complications, 
            T.endocrinology_app AS StatOperationInfo_EndocrinologyApp, 
            T.laser_app AS StatOperationInfo_LaserApp, 
            T.cryogen_app AS StatOperationInfo_CryogenApp, 
            T.ksg AS StatOperationInfo_Ksg, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.stat_operation_infos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistWhereissueds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistWhereissueds", @"
    SELECT VALUE -- Constructing SicklistWhereissueds
        [PostgresModel.SicklistWhereissued](T1.SicklistWhereissued_Oid, T1.SicklistWhereissued_Name)
    FROM (
        SELECT 
            T.oid AS SicklistWhereissued_Oid, 
            T.name AS SicklistWhereissued_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_whereissueds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TmodelMedicalcares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TmodelMedicalcares", @"
    SELECT VALUE -- Constructing TmodelMedicalcares
        [PostgresModel.TmodelMedicalcare](T1.TmodelMedicalcare_Oid, T1.TmodelMedicalcare_Tmodel, T1.TmodelMedicalcare_Medicalcare)
    FROM (
        SELECT 
            T.oid AS TmodelMedicalcare_Oid, 
            T.tmodel AS TmodelMedicalcare_Tmodel, 
            T.medicalcare AS TmodelMedicalcare_Medicalcare, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmodel_medicalcares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemProtocoltemplateSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemProtocoltemplateSotrs", @"
    SELECT VALUE -- Constructing SystemProtocoltemplateSotrs
        [PostgresModel.SystemProtocoltemplateSotr](T1.SystemProtocoltemplateSotr_Sotr, T1.SystemProtocoltemplateSotr_Presctype, T1.SystemProtocoltemplateSotr_SystemProtocoltemplate)
    FROM (
        SELECT 
            T.sotr AS SystemProtocoltemplateSotr_Sotr, 
            T.presctype AS SystemProtocoltemplateSotr_Presctype, 
            T.system_protocoltemplate AS SystemProtocoltemplateSotr_SystemProtocoltemplate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.system_protocoltemplate_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Servic_LicenceSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Servic_LicenceSet", @"
    SELECT VALUE -- Constructing Servic_LicenceSet
        [PostgresModel.Servic_Licence](T3.[Servic_Licence.Servics], T3.[Servic_Licence.Licences])
    FROM (
        SELECT -- Constructing Servics
            CreateRef(PostgresEntities.Services, row(T2.[Servic_Licence.Servics.Oid]),[PostgresModel.Service]) AS [Servic_Licence.Servics], 
            T2.[Servic_Licence.Licences]
        FROM (
            SELECT -- Constructing Licences
                CreateRef(PostgresEntities.Licences, row(T1.[Servic_Licence.Licences.Oid]),[PostgresModel.Licence]) AS [Servic_Licence.Licences], 
                T1.[Servic_Licence.Servics.Oid]
            FROM (
                SELECT 
                    T.services AS [Servic_Licence.Servics.Oid], 
                    T.licence AS [Servic_Licence.Licences.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.licence_services AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Company_AddressexSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Company_AddressexSet", @"
    SELECT VALUE -- Constructing Company_AddressexSet
        [PostgresModel.Company_Addressex](T3.[Company_Addressex.Companies2], T3.[Company_Addressex.Addressexes])
    FROM (
        SELECT -- Constructing Companies2
            CreateRef(PostgresEntities.Companies, row(T2.[Company_Addressex.Companies2.Oid]),[PostgresModel.Company]) AS [Company_Addressex.Companies2], 
            T2.[Company_Addressex.Addressexes]
        FROM (
            SELECT -- Constructing Addressexes
                CreateRef(PostgresEntities.Addressexes, row(T1.[Company_Addressex.Addressexes.Oid]),[PostgresModel.Addressex]) AS [Company_Addressex.Addressexes], 
                T1.[Company_Addressex.Companies2.Oid]
            FROM (
                SELECT 
                    T.company AS [Company_Addressex.Companies2.Oid], 
                    T.address AS [Company_Addressex.Addressexes.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.company_addresses AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Otdel_BuildingSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Otdel_BuildingSet", @"
    SELECT VALUE -- Constructing Otdel_BuildingSet
        [PostgresModel.Otdel_Building](T3.[Otdel_Building.Otdels], T3.[Otdel_Building.Buildings])
    FROM (
        SELECT -- Constructing Otdels
            CreateRef(PostgresEntities.Otdels, row(T2.[Otdel_Building.Otdels.Oid]),[PostgresModel.Otdel]) AS [Otdel_Building.Otdels], 
            T2.[Otdel_Building.Buildings]
        FROM (
            SELECT -- Constructing Buildings
                CreateRef(PostgresEntities.Buildings, row(T1.[Otdel_Building.Buildings.Oid]),[PostgresModel.Building]) AS [Otdel_Building.Buildings], 
                T1.[Otdel_Building.Otdels.Oid]
            FROM (
                SELECT 
                    T.otdel AS [Otdel_Building.Otdels.Oid], 
                    T.building AS [Otdel_Building.Buildings.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.otdel_buildings AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Otdel_ProfileCareSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Otdel_ProfileCareSet", @"
    SELECT VALUE -- Constructing Otdel_ProfileCareSet
        [PostgresModel.Otdel_ProfileCare](T3.[Otdel_ProfileCare.Otdels], T3.[Otdel_ProfileCare.ProfileCares])
    FROM (
        SELECT -- Constructing Otdels
            CreateRef(PostgresEntities.Otdels, row(T2.[Otdel_ProfileCare.Otdels.Oid]),[PostgresModel.Otdel]) AS [Otdel_ProfileCare.Otdels], 
            T2.[Otdel_ProfileCare.ProfileCares]
        FROM (
            SELECT -- Constructing ProfileCares
                CreateRef(PostgresEntities.ProfileCares, row(T1.[Otdel_ProfileCare.ProfileCares.Oid]),[PostgresModel.ProfileCare]) AS [Otdel_ProfileCare.ProfileCares], 
                T1.[Otdel_ProfileCare.Otdels.Oid]
            FROM (
                SELECT 
                    T.otdel AS [Otdel_ProfileCare.Otdels.Oid], 
                    T.profile_care AS [Otdel_ProfileCare.ProfileCares.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.otdel_profile_cares AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Right_RoleSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Right_RoleSet", @"
    SELECT VALUE -- Constructing Right_RoleSet
        [PostgresModel.Right_Role](T3.[Right_Role.Rights], T3.[Right_Role.Roles])
    FROM (
        SELECT -- Constructing Rights
            CreateRef(PostgresEntities.Rights, row(T2.[Right_Role.Rights.Oid]),[PostgresModel.Right]) AS [Right_Role.Rights], 
            T2.[Right_Role.Roles]
        FROM (
            SELECT -- Constructing Roles
                CreateRef(PostgresEntities.Roles, row(T1.[Right_Role.Roles.Oid]),[PostgresModel.Role]) AS [Right_Role.Roles], 
                T1.[Right_Role.Rights.Oid]
            FROM (
                SELECT 
                    T.[right] AS [Right_Role.Rights.Oid], 
                    T.role AS [Right_Role.Roles.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.role_rights AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Taftereffect_TmodelSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Taftereffect_TmodelSet", @"
    SELECT VALUE -- Constructing Taftereffect_TmodelSet
        [PostgresModel.Taftereffect_Tmodel](T3.[Taftereffect_Tmodel.Taftereffects], T3.[Taftereffect_Tmodel.Tmodels])
    FROM (
        SELECT -- Constructing Taftereffects
            CreateRef(PostgresEntities.Taftereffects, row(T2.[Taftereffect_Tmodel.Taftereffects.FkId]),[PostgresModel.Taftereffect]) AS [Taftereffect_Tmodel.Taftereffects], 
            T2.[Taftereffect_Tmodel.Tmodels]
        FROM (
            SELECT -- Constructing Tmodels
                CreateRef(PostgresEntities.Tmodels, row(T1.[Taftereffect_Tmodel.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Taftereffect_Tmodel.Tmodels], 
                T1.[Taftereffect_Tmodel.Taftereffects.FkId]
            FROM (
                SELECT 
                    T.fk_aftereffect AS [Taftereffect_Tmodel.Taftereffects.FkId], 
                    T.fk_model AS [Taftereffect_Tmodel.Tmodels.FkId], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelaftereffects AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tage_TmodelSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tage_TmodelSet", @"
    SELECT VALUE -- Constructing Tage_TmodelSet
        [PostgresModel.Tage_Tmodel](T3.[Tage_Tmodel.Tages], T3.[Tage_Tmodel.Tmodels])
    FROM (
        SELECT -- Constructing Tages
            CreateRef(PostgresEntities.Tages, row(T2.[Tage_Tmodel.Tages.FkId]),[PostgresModel.Tage]) AS [Tage_Tmodel.Tages], 
            T2.[Tage_Tmodel.Tmodels]
        FROM (
            SELECT -- Constructing Tmodels
                CreateRef(PostgresEntities.Tmodels, row(T1.[Tage_Tmodel.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Tage_Tmodel.Tmodels], 
                T1.[Tage_Tmodel.Tages.FkId]
            FROM (
                SELECT 
                    T.fk_age AS [Tage_Tmodel.Tages.FkId], 
                    T.fk_model AS [Tage_Tmodel.Tmodels.FkId], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelages AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tcondition_TmodelSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tcondition_TmodelSet", @"
    SELECT VALUE -- Constructing Tcondition_TmodelSet
        [PostgresModel.Tcondition_Tmodel](T3.[Tcondition_Tmodel.Tconditions], T3.[Tcondition_Tmodel.Tmodels])
    FROM (
        SELECT -- Constructing Tconditions
            CreateRef(PostgresEntities.Tconditions, row(T2.[Tcondition_Tmodel.Tconditions.FkId]),[PostgresModel.Tcondition]) AS [Tcondition_Tmodel.Tconditions], 
            T2.[Tcondition_Tmodel.Tmodels]
        FROM (
            SELECT -- Constructing Tmodels
                CreateRef(PostgresEntities.Tmodels, row(T1.[Tcondition_Tmodel.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Tcondition_Tmodel.Tmodels], 
                T1.[Tcondition_Tmodel.Tconditions.FkId]
            FROM (
                SELECT 
                    T.fk_conditions AS [Tcondition_Tmodel.Tconditions.FkId], 
                    T.fk_model AS [Tcondition_Tmodel.Tmodels.FkId], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelconditions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodel_Mkb10Set
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodel_Mkb10Set", @"
    SELECT VALUE -- Constructing Tmodel_Mkb10Set
        [PostgresModel.Tmodel_Mkb10](T3.[Tmodel_Mkb10.Tmodels], T3.[Tmodel_Mkb10.Mkb10s])
    FROM (
        SELECT -- Constructing Tmodels
            CreateRef(PostgresEntities.Tmodels, row(T2.[Tmodel_Mkb10.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Tmodel_Mkb10.Tmodels], 
            T2.[Tmodel_Mkb10.Mkb10s]
        FROM (
            SELECT -- Constructing Mkb10s
                CreateRef(PostgresEntities.Mkb10s, row(T1.[Tmodel_Mkb10.Mkb10s.Oid]),[PostgresModel.Mkb10]) AS [Tmodel_Mkb10.Mkb10s], 
                T1.[Tmodel_Mkb10.Tmodels.FkId]
            FROM (
                SELECT 
                    T.fk_model AS [Tmodel_Mkb10.Tmodels.FkId], 
                    T.icd10 AS [Tmodel_Mkb10.Mkb10s.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelicd10s AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodel_TphaseSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodel_TphaseSet", @"
    SELECT VALUE -- Constructing Tmodel_TphaseSet
        [PostgresModel.Tmodel_Tphase](T3.[Tmodel_Tphase.Tmodels], T3.[Tmodel_Tphase.Tphases])
    FROM (
        SELECT -- Constructing Tmodels
            CreateRef(PostgresEntities.Tmodels, row(T2.[Tmodel_Tphase.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Tmodel_Tphase.Tmodels], 
            T2.[Tmodel_Tphase.Tphases]
        FROM (
            SELECT -- Constructing Tphases
                CreateRef(PostgresEntities.Tphases, row(T1.[Tmodel_Tphase.Tphases.FkId]),[PostgresModel.Tphase]) AS [Tmodel_Tphase.Tphases], 
                T1.[Tmodel_Tphase.Tmodels.FkId]
            FROM (
                SELECT 
                    T.fk_model AS [Tmodel_Tphase.Tmodels.FkId], 
                    T.fk_phase AS [Tmodel_Tphase.Tphases.FkId], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelphases AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodel_TstageSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodel_TstageSet", @"
    SELECT VALUE -- Constructing Tmodel_TstageSet
        [PostgresModel.Tmodel_Tstage](T3.[Tmodel_Tstage.Tmodels], T3.[Tmodel_Tstage.Tstages])
    FROM (
        SELECT -- Constructing Tmodels
            CreateRef(PostgresEntities.Tmodels, row(T2.[Tmodel_Tstage.Tmodels.FkId]),[PostgresModel.Tmodel]) AS [Tmodel_Tstage.Tmodels], 
            T2.[Tmodel_Tstage.Tstages]
        FROM (
            SELECT -- Constructing Tstages
                CreateRef(PostgresEntities.Tstages, row(T1.[Tmodel_Tstage.Tstages.FkId]),[PostgresModel.Tstage]) AS [Tmodel_Tstage.Tstages], 
                T1.[Tmodel_Tstage.Tmodels.FkId]
            FROM (
                SELECT 
                    T.fk_model AS [Tmodel_Tstage.Tmodels.FkId], 
                    T.fk_stage AS [Tmodel_Tstage.Tstages.FkId], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.tmodelstages AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmedservice_PresctypeSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmedservice_PresctypeSet", @"
    SELECT VALUE -- Constructing Tmedservice_PresctypeSet
        [PostgresModel.Tmedservice_Presctype](T3.[Tmedservice_Presctype.Tmedservices], T3.[Tmedservice_Presctype.Presctypes])
    FROM (
        SELECT -- Constructing Tmedservices
            CreateRef(PostgresEntities.Tmedservices, row(T2.[Tmedservice_Presctype.Tmedservices.FkId]),[PostgresModel.Tmedservice]) AS [Tmedservice_Presctype.Tmedservices], 
            T2.[Tmedservice_Presctype.Presctypes]
        FROM (
            SELECT -- Constructing Presctypes
                CreateRef(PostgresEntities.Presctypes, row(T1.[Tmedservice_Presctype.Presctypes.Oid]),[PostgresModel.Presctype]) AS [Tmedservice_Presctype.Presctypes], 
                T1.[Tmedservice_Presctype.Tmedservices.FkId]
            FROM (
                SELECT 
                    T.medserv AS [Tmedservice_Presctype.Tmedservices.FkId], 
                    T.presctype AS [Tmedservice_Presctype.Presctypes.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.presctype_medservs AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Lpu_LpuSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Lpu_LpuSet", @"
    SELECT VALUE -- Constructing Lpu_LpuSet
        [PostgresModel.Lpu_Lpu](T3.[Lpu_Lpu.Lpus1], T3.[Lpu_Lpu.Lpus])
    FROM (
        SELECT -- Constructing Lpus1
            CreateRef(PostgresEntities.Lpus, row(T2.[Lpu_Lpu.Lpus1.Oid]),[PostgresModel.Lpu]) AS [Lpu_Lpu.Lpus1], 
            T2.[Lpu_Lpu.Lpus]
        FROM (
            SELECT -- Constructing Lpus
                CreateRef(PostgresEntities.Lpus, row(T1.[Lpu_Lpu.Lpus.Oid]),[PostgresModel.Lpu]) AS [Lpu_Lpu.Lpus], 
                T1.[Lpu_Lpu.Lpus1.Oid]
            FROM (
                SELECT 
                    T.lpu_id AS [Lpu_Lpu.Lpus1.Oid], 
                    T.lpu_direction_id AS [Lpu_Lpu.Lpus.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.lpu_directions AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Specialmedic_MedicSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Specialmedic_MedicSet", @"
    SELECT VALUE -- Constructing Specialmedic_MedicSet
        [PostgresModel.Specialmedic_Medic](T3.[Specialmedic_Medic.Specialmedics], T3.[Specialmedic_Medic.Medics])
    FROM (
        SELECT -- Constructing Specialmedics
            CreateRef(PostgresEntities.Specialmedics, row(T2.[Specialmedic_Medic.Specialmedics.Oid]),[PostgresModel.Specialmedic]) AS [Specialmedic_Medic.Specialmedics], 
            T2.[Specialmedic_Medic.Medics]
        FROM (
            SELECT -- Constructing Medics
                CreateRef(PostgresEntities.Medics, row(T1.[Specialmedic_Medic.Medics.Oid]),[PostgresModel.Medic]) AS [Specialmedic_Medic.Medics], 
                T1.[Specialmedic_Medic.Specialmedics.Oid]
            FROM (
                SELECT 
                    T.specialmedic AS [Specialmedic_Medic.Specialmedics.Oid], 
                    T.medic AS [Specialmedic_Medic.Medics.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.medic_specialmedics AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Receptiontype_SysuserSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Receptiontype_SysuserSet", @"
    SELECT VALUE -- Constructing Receptiontype_SysuserSet
        [PostgresModel.Receptiontype_Sysuser](T3.[Receptiontype_Sysuser.Receptiontypes], T3.[Receptiontype_Sysuser.Sysusers])
    FROM (
        SELECT -- Constructing Receptiontypes
            CreateRef(PostgresEntities.Receptiontypes, row(T2.[Receptiontype_Sysuser.Receptiontypes.Oid]),[PostgresModel.Receptiontype]) AS [Receptiontype_Sysuser.Receptiontypes], 
            T2.[Receptiontype_Sysuser.Sysusers]
        FROM (
            SELECT -- Constructing Sysusers
                CreateRef(PostgresEntities.Sysusers, row(T1.[Receptiontype_Sysuser.Sysusers.Oid]),[PostgresModel.Sysuser]) AS [Receptiontype_Sysuser.Sysusers], 
                T1.[Receptiontype_Sysuser.Receptiontypes.Oid]
            FROM (
                SELECT 
                    T.receptiontype AS [Receptiontype_Sysuser.Receptiontypes.Oid], 
                    T.sysuser AS [Receptiontype_Sysuser.Sysusers.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.receptiontype_rights AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Presctype_ProfexActionsTypeSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Presctype_ProfexActionsTypeSet", @"
    SELECT VALUE -- Constructing Presctype_ProfexActionsTypeSet
        [PostgresModel.Presctype_ProfexActionsType](T3.[Presctype_ProfexActionsType.Presctypes], T3.[Presctype_ProfexActionsType.ProfexActionsTypes])
    FROM (
        SELECT -- Constructing Presctypes
            CreateRef(PostgresEntities.Presctypes, row(T2.[Presctype_ProfexActionsType.Presctypes.Oid]),[PostgresModel.Presctype]) AS [Presctype_ProfexActionsType.Presctypes], 
            T2.[Presctype_ProfexActionsType.ProfexActionsTypes]
        FROM (
            SELECT -- Constructing ProfexActionsTypes
                CreateRef(PostgresEntities.ProfexActionsTypes, row(T1.[Presctype_ProfexActionsType.ProfexActionsTypes.Oid]),[PostgresModel.ProfexActionsType]) AS [Presctype_ProfexActionsType.ProfexActionsTypes], 
                T1.[Presctype_ProfexActionsType.Presctypes.Oid]
            FROM (
                SELECT 
                    T.presctype AS [Presctype_ProfexActionsType.Presctypes.Oid], 
                    T.profex_actionstype AS [Presctype_ProfexActionsType.ProfexActionsTypes.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.profex_actionstype_presctypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mkb10_Mkb10TemplateSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mkb10_Mkb10TemplateSet", @"
    SELECT VALUE -- Constructing Mkb10_Mkb10TemplateSet
        [PostgresModel.Mkb10_Mkb10Template](T3.[Mkb10_Mkb10Template.Mkb10s], T3.[Mkb10_Mkb10Template.Mkb10Templates])
    FROM (
        SELECT -- Constructing Mkb10s
            CreateRef(PostgresEntities.Mkb10s, row(T2.[Mkb10_Mkb10Template.Mkb10s.Oid]),[PostgresModel.Mkb10]) AS [Mkb10_Mkb10Template.Mkb10s], 
            T2.[Mkb10_Mkb10Template.Mkb10Templates]
        FROM (
            SELECT -- Constructing Mkb10Templates
                CreateRef(PostgresEntities.Mkb10Templates, row(T1.[Mkb10_Mkb10Template.Mkb10Templates.Oid]),[PostgresModel.Mkb10Template]) AS [Mkb10_Mkb10Template.Mkb10Templates], 
                T1.[Mkb10_Mkb10Template.Mkb10s.Oid]
            FROM (
                SELECT 
                    T.mkb10 AS [Mkb10_Mkb10Template.Mkb10s.Oid], 
                    T.mkb10_template AS [Mkb10_Mkb10Template.Mkb10Templates.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.mkb_10_template_lists AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexResultComment_ProfexListSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexResultComment_ProfexListSet", @"
    SELECT VALUE -- Constructing ProfexResultComment_ProfexListSet
        [PostgresModel.ProfexResultComment_ProfexList](T3.[ProfexResultComment_ProfexList.ProfexResultComments], T3.[ProfexResultComment_ProfexList.ProfexLists])
    FROM (
        SELECT -- Constructing ProfexResultComments
            CreateRef(PostgresEntities.ProfexResultComments, row(T2.[ProfexResultComment_ProfexList.ProfexResultComments.Oid]),[PostgresModel.ProfexResultComment]) AS [ProfexResultComment_ProfexList.ProfexResultComments], 
            T2.[ProfexResultComment_ProfexList.ProfexLists]
        FROM (
            SELECT -- Constructing ProfexLists
                CreateRef(PostgresEntities.ProfexLists, row(T1.[ProfexResultComment_ProfexList.ProfexLists.Oid]),[PostgresModel.ProfexList]) AS [ProfexResultComment_ProfexList.ProfexLists], 
                T1.[ProfexResultComment_ProfexList.ProfexResultComments.Oid]
            FROM (
                SELECT 
                    T.profex_result_comment AS [ProfexResultComment_ProfexList.ProfexResultComments.Oid], 
                    T.profex_lis AS [ProfexResultComment_ProfexList.ProfexLists.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.profex_list_resultcomments AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Lpu_InsurprogramSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1196()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Lpu_InsurprogramSet", @"
    SELECT VALUE -- Constructing Lpu_InsurprogramSet
        [PostgresModel.Lpu_Insurprogram](T3.[Lpu_Insurprogram.Lpus], T3.[Lpu_Insurprogram.Insurprograms])
    FROM (
        SELECT -- Constructing Lpus
            CreateRef(PostgresEntities.Lpus, row(T2.[Lpu_Insurprogram.Lpus.Oid]),[PostgresModel.Lpu]) AS [Lpu_Insurprogram.Lpus], 
            T2.[Lpu_Insurprogram.Insurprograms]
        FROM (
            SELECT -- Constructing Insurprograms
                CreateRef(PostgresEntities.Insurprograms, row(T1.[Lpu_Insurprogram.Insurprograms.Oid]),[PostgresModel.Insurprogram]) AS [Lpu_Insurprogram.Insurprograms], 
                T1.[Lpu_Insurprogram.Lpus.Oid]
            FROM (
                SELECT 
                    T.lpu AS [Lpu_Insurprogram.Lpus.Oid], 
                    T.insurprogram AS [Lpu_Insurprogram.Insurprograms.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.lpu_insurprograms AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Receptiontype_SotrSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Receptiontype_SotrSet", @"
    SELECT VALUE -- Constructing Receptiontype_SotrSet
        [PostgresModel.Receptiontype_Sotr](T3.[Receptiontype_Sotr.Receptiontypes1], T3.[Receptiontype_Sotr.Sotrs1])
    FROM (
        SELECT -- Constructing Receptiontypes1
            CreateRef(PostgresEntities.Receptiontypes, row(T2.[Receptiontype_Sotr.Receptiontypes1.Oid]),[PostgresModel.Receptiontype]) AS [Receptiontype_Sotr.Receptiontypes1], 
            T2.[Receptiontype_Sotr.Sotrs1]
        FROM (
            SELECT -- Constructing Sotrs1
                CreateRef(PostgresEntities.Sotrs, row(T1.[Receptiontype_Sotr.Sotrs1.Oid]),[PostgresModel.Sotr]) AS [Receptiontype_Sotr.Sotrs1], 
                T1.[Receptiontype_Sotr.Receptiontypes1.Oid]
            FROM (
                SELECT 
                    T.receptiontype AS [Receptiontype_Sotr.Receptiontypes1.Oid], 
                    T.sotr AS [Receptiontype_Sotr.Sotrs1.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.sotr_receptiontypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AnketsReestr_AnketsProfileSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AnketsReestr_AnketsProfileSet", @"
    SELECT VALUE -- Constructing AnketsReestr_AnketsProfileSet
        [PostgresModel.AnketsReestr_AnketsProfile](T3.[AnketsReestr_AnketsProfile.AnketsReestrs], T3.[AnketsReestr_AnketsProfile.AnketsProfiles])
    FROM (
        SELECT -- Constructing AnketsReestrs
            CreateRef(PostgresEntities.AnketsReestrs, row(T2.[AnketsReestr_AnketsProfile.AnketsReestrs.Oid]),[PostgresModel.AnketsReestr]) AS [AnketsReestr_AnketsProfile.AnketsReestrs], 
            T2.[AnketsReestr_AnketsProfile.AnketsProfiles]
        FROM (
            SELECT -- Constructing AnketsProfiles
                CreateRef(PostgresEntities.AnketsProfiles, row(T1.[AnketsReestr_AnketsProfile.AnketsProfiles.Oid]),[PostgresModel.AnketsProfile]) AS [AnketsReestr_AnketsProfile.AnketsProfiles], 
                T1.[AnketsReestr_AnketsProfile.AnketsReestrs.Oid]
            FROM (
                SELECT 
                    T.ankets_reestr AS [AnketsReestr_AnketsProfile.AnketsReestrs.Oid], 
                    T.ankets_profile AS [AnketsReestr_AnketsProfile.AnketsProfiles.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.ankets_profile_ankets_reestrs AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PatientcardsettingsUniquefield_LpuSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PatientcardsettingsUniquefield_LpuSet", @"
    SELECT VALUE -- Constructing PatientcardsettingsUniquefield_LpuSet
        [PostgresModel.PatientcardsettingsUniquefield_Lpu](T3.[PatientcardsettingsUniquefield_Lpu.PatientcardsettingsUniquefields], T3.[PatientcardsettingsUniquefield_Lpu.Lpus])
    FROM (
        SELECT -- Constructing PatientcardsettingsUniquefields
            CreateRef(PostgresEntities.PatientcardsettingsUniquefields, row(T2.[PatientcardsettingsUniquefield_Lpu.PatientcardsettingsUniquefields.Oid]),[PostgresModel.PatientcardsettingsUniquefield]) AS [PatientcardsettingsUniquefield_Lpu.PatientcardsettingsUniquefields], 
            T2.[PatientcardsettingsUniquefield_Lpu.Lpus]
        FROM (
            SELECT -- Constructing Lpus
                CreateRef(PostgresEntities.Lpus, row(T1.[PatientcardsettingsUniquefield_Lpu.Lpus.Oid]),[PostgresModel.Lpu]) AS [PatientcardsettingsUniquefield_Lpu.Lpus], 
                T1.[PatientcardsettingsUniquefield_Lpu.PatientcardsettingsUniquefields.Oid]
            FROM (
                SELECT 
                    T.patientcardsettings_uniquefield AS [PatientcardsettingsUniquefield_Lpu.PatientcardsettingsUniquefields.Oid], 
                    T.lpu AS [PatientcardsettingsUniquefield_Lpu.Lpus.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.patientcard_uniquefield_lpus AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Right_SotrSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Right_SotrSet", @"
    SELECT VALUE -- Constructing Right_SotrSet
        [PostgresModel.Right_Sotr](T3.[Right_Sotr.Rights], T3.[Right_Sotr.Sotrs])
    FROM (
        SELECT -- Constructing Rights
            CreateRef(PostgresEntities.Rights, row(T2.[Right_Sotr.Rights.Oid]),[PostgresModel.Right]) AS [Right_Sotr.Rights], 
            T2.[Right_Sotr.Sotrs]
        FROM (
            SELECT -- Constructing Sotrs
                CreateRef(PostgresEntities.Sotrs, row(T1.[Right_Sotr.Sotrs.Oid]),[PostgresModel.Sotr]) AS [Right_Sotr.Sotrs], 
                T1.[Right_Sotr.Rights.Oid]
            FROM (
                SELECT 
                    T.[right] AS [Right_Sotr.Rights.Oid], 
                    T.sotr AS [Right_Sotr.Sotrs.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.sotr_rights AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Role_SotrSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Role_SotrSet", @"
    SELECT VALUE -- Constructing Role_SotrSet
        [PostgresModel.Role_Sotr](T3.[Role_Sotr.Roles], T3.[Role_Sotr.Sotrs])
    FROM (
        SELECT -- Constructing Roles
            CreateRef(PostgresEntities.Roles, row(T2.[Role_Sotr.Roles.Oid]),[PostgresModel.Role]) AS [Role_Sotr.Roles], 
            T2.[Role_Sotr.Sotrs]
        FROM (
            SELECT -- Constructing Sotrs
                CreateRef(PostgresEntities.Sotrs, row(T1.[Role_Sotr.Sotrs.Oid]),[PostgresModel.Sotr]) AS [Role_Sotr.Sotrs], 
                T1.[Role_Sotr.Roles.Oid]
            FROM (
                SELECT 
                    T.role AS [Role_Sotr.Roles.Oid], 
                    T.sotr AS [Role_Sotr.Sotrs.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.sotr_roles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Right_Sotr1Set
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Right_Sotr1Set", @"
    SELECT VALUE -- Constructing Right_Sotr1Set
        [PostgresModel.Right_Sotr1](T3.[Right_Sotr1.Rights1], T3.[Right_Sotr1.Sotrs1])
    FROM (
        SELECT -- Constructing Rights1
            CreateRef(PostgresEntities.Rights, row(T2.[Right_Sotr1.Rights1.Oid]),[PostgresModel.Right]) AS [Right_Sotr1.Rights1], 
            T2.[Right_Sotr1.Sotrs1]
        FROM (
            SELECT -- Constructing Sotrs1
                CreateRef(PostgresEntities.Sotrs, row(T1.[Right_Sotr1.Sotrs1.Oid]),[PostgresModel.Sotr]) AS [Right_Sotr1.Sotrs1], 
                T1.[Right_Sotr1.Rights1.Oid]
            FROM (
                SELECT 
                    T.[right] AS [Right_Sotr1.Rights1.Oid], 
                    T.sotr AS [Right_Sotr1.Sotrs1.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.sotr_right_all AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmodelserv_ServicePresctypeSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1203()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmodelserv_ServicePresctypeSet", @"
    SELECT VALUE -- Constructing Tmodelserv_ServicePresctypeSet
        [PostgresModel.Tmodelserv_ServicePresctype](T3.[Tmodelserv_ServicePresctype.Tmodelservs], T3.[Tmodelserv_ServicePresctype.ServicePresctypes])
    FROM (
        SELECT -- Constructing Tmodelservs
            CreateRef(PostgresEntities.Tmodelservs, row(T2.[Tmodelserv_ServicePresctype.Tmodelservs.Oid]),[PostgresModel.Tmodelserv]) AS [Tmodelserv_ServicePresctype.Tmodelservs], 
            T2.[Tmodelserv_ServicePresctype.ServicePresctypes]
        FROM (
            SELECT -- Constructing ServicePresctypes
                CreateRef(PostgresEntities.ServicePresctypes, row(T1.[Tmodelserv_ServicePresctype.ServicePresctypes.Oid]),[PostgresModel.ServicePresctype]) AS [Tmodelserv_ServicePresctype.ServicePresctypes], 
                T1.[Tmodelserv_ServicePresctype.Tmodelservs.Oid]
            FROM (
                SELECT 
                    T.modelserv AS [Tmodelserv_ServicePresctype.Tmodelservs.Oid], 
                    T.service_presctype AS [Tmodelserv_ServicePresctype.ServicePresctypes.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.modelserv_presctypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemperatureParam_SotrSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1204()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemperatureParam_SotrSet", @"
    SELECT VALUE -- Constructing TemperatureParam_SotrSet
        [PostgresModel.TemperatureParam_Sotr](T3.[TemperatureParam_Sotr.TemperatureParams], T3.[TemperatureParam_Sotr.Sotrs])
    FROM (
        SELECT -- Constructing TemperatureParams
            CreateRef(PostgresEntities.TemperatureParams, row(T2.[TemperatureParam_Sotr.TemperatureParams.Oid]),[PostgresModel.TemperatureParam]) AS [TemperatureParam_Sotr.TemperatureParams], 
            T2.[TemperatureParam_Sotr.Sotrs]
        FROM (
            SELECT -- Constructing Sotrs
                CreateRef(PostgresEntities.Sotrs, row(T1.[TemperatureParam_Sotr.Sotrs.Oid]),[PostgresModel.Sotr]) AS [TemperatureParam_Sotr.Sotrs], 
                T1.[TemperatureParam_Sotr.TemperatureParams.Oid]
            FROM (
                SELECT 
                    T.temperature_param AS [TemperatureParam_Sotr.TemperatureParams.Oid], 
                    T.sotr AS [TemperatureParam_Sotr.Sotrs.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.temperature_param_sotrs AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemperatureParam_OtdelSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemperatureParam_OtdelSet", @"
    SELECT VALUE -- Constructing TemperatureParam_OtdelSet
        [PostgresModel.TemperatureParam_Otdel](T3.[TemperatureParam_Otdel.TemperatureParams], T3.[TemperatureParam_Otdel.Otdels])
    FROM (
        SELECT -- Constructing TemperatureParams
            CreateRef(PostgresEntities.TemperatureParams, row(T2.[TemperatureParam_Otdel.TemperatureParams.Oid]),[PostgresModel.TemperatureParam]) AS [TemperatureParam_Otdel.TemperatureParams], 
            T2.[TemperatureParam_Otdel.Otdels]
        FROM (
            SELECT -- Constructing Otdels
                CreateRef(PostgresEntities.Otdels, row(T1.[TemperatureParam_Otdel.Otdels.Oid]),[PostgresModel.Otdel]) AS [TemperatureParam_Otdel.Otdels], 
                T1.[TemperatureParam_Otdel.TemperatureParams.Oid]
            FROM (
                SELECT 
                    T.temperature_param AS [TemperatureParam_Otdel.TemperatureParams.Oid], 
                    T.otdel AS [TemperatureParam_Otdel.Otdels.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.temperature_param_otdels AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Chatgroup_PersonSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Chatgroup_PersonSet", @"
    SELECT VALUE -- Constructing Chatgroup_PersonSet
        [PostgresModel.Chatgroup_Person](T3.[Chatgroup_Person.Chatgroups1], T3.[Chatgroup_Person.People])
    FROM (
        SELECT -- Constructing Chatgroups1
            CreateRef(PostgresEntities.Chatgroups, row(T2.[Chatgroup_Person.Chatgroups1.Oid]),[PostgresModel.Chatgroup]) AS [Chatgroup_Person.Chatgroups1], 
            T2.[Chatgroup_Person.People]
        FROM (
            SELECT -- Constructing People
                CreateRef(PostgresEntities.People, row(T1.[Chatgroup_Person.People.Oid]),[PostgresModel.Person]) AS [Chatgroup_Person.People], 
                T1.[Chatgroup_Person.Chatgroups1.Oid]
            FROM (
                SELECT 
                    T.chatgroupid AS [Chatgroup_Person.Chatgroups1.Oid], 
                    T.peopleid AS [Chatgroup_Person.People.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.chatgroupusers AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mkb10_ProfexDiseaseSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mkb10_ProfexDiseaseSet", @"
    SELECT VALUE -- Constructing Mkb10_ProfexDiseaseSet
        [PostgresModel.Mkb10_ProfexDisease](T3.[Mkb10_ProfexDisease.Mkb10sReason], T3.[Mkb10_ProfexDisease.ProfexDiseases])
    FROM (
        SELECT -- Constructing Mkb10sReason
            CreateRef(PostgresEntities.Mkb10s, row(T2.[Mkb10_ProfexDisease.Mkb10sReason.Oid]),[PostgresModel.Mkb10]) AS [Mkb10_ProfexDisease.Mkb10sReason], 
            T2.[Mkb10_ProfexDisease.ProfexDiseases]
        FROM (
            SELECT -- Constructing ProfexDiseases
                CreateRef(PostgresEntities.ProfexDiseases, row(T1.[Mkb10_ProfexDisease.ProfexDiseases.Oid]),[PostgresModel.ProfexDisease]) AS [Mkb10_ProfexDisease.ProfexDiseases], 
                T1.[Mkb10_ProfexDisease.Mkb10sReason.Oid]
            FROM (
                SELECT 
                    T.mkb10 AS [Mkb10_ProfexDisease.Mkb10sReason.Oid], 
                    T.profex_disease AS [Mkb10_ProfexDisease.ProfexDiseases.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.profex_disease_reason_mkb10s AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Mkb10_ProfexDisease1Set
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1208()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Mkb10_ProfexDisease1Set", @"
    SELECT VALUE -- Constructing Mkb10_ProfexDisease1Set
        [PostgresModel.Mkb10_ProfexDisease1](T3.[Mkb10_ProfexDisease1.Mkb10sDisease], T3.[Mkb10_ProfexDisease1.ProfexDiseases1])
    FROM (
        SELECT -- Constructing Mkb10sDisease
            CreateRef(PostgresEntities.Mkb10s, row(T2.[Mkb10_ProfexDisease1.Mkb10sDisease.Oid]),[PostgresModel.Mkb10]) AS [Mkb10_ProfexDisease1.Mkb10sDisease], 
            T2.[Mkb10_ProfexDisease1.ProfexDiseases1]
        FROM (
            SELECT -- Constructing ProfexDiseases1
                CreateRef(PostgresEntities.ProfexDiseases, row(T1.[Mkb10_ProfexDisease1.ProfexDiseases1.Oid]),[PostgresModel.ProfexDisease]) AS [Mkb10_ProfexDisease1.ProfexDiseases1], 
                T1.[Mkb10_ProfexDisease1.Mkb10sDisease.Oid]
            FROM (
                SELECT 
                    T.mkb10 AS [Mkb10_ProfexDisease1.Mkb10sDisease.Oid], 
                    T.profex_disease AS [Mkb10_ProfexDisease1.ProfexDiseases1.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.profex_disease_disease_mkb10s AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SystemMessageType_PresctypefolderSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1209()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SystemMessageType_PresctypefolderSet", @"
    SELECT VALUE -- Constructing SystemMessageType_PresctypefolderSet
        [PostgresModel.SystemMessageType_Presctypefolder](T3.[SystemMessageType_Presctypefolder.SystemMessageTypes], T3.[SystemMessageType_Presctypefolder.Presctypefolders])
    FROM (
        SELECT -- Constructing SystemMessageTypes
            CreateRef(PostgresEntities.SystemMessageTypes, row(T2.[SystemMessageType_Presctypefolder.SystemMessageTypes.Oid]),[PostgresModel.SystemMessageType]) AS [SystemMessageType_Presctypefolder.SystemMessageTypes], 
            T2.[SystemMessageType_Presctypefolder.Presctypefolders]
        FROM (
            SELECT -- Constructing Presctypefolders
                CreateRef(PostgresEntities.Presctypefolders, row(T1.[SystemMessageType_Presctypefolder.Presctypefolders.Id]),[PostgresModel.Presctypefolder]) AS [SystemMessageType_Presctypefolder.Presctypefolders], 
                T1.[SystemMessageType_Presctypefolder.SystemMessageTypes.Oid]
            FROM (
                SELECT 
                    T.system_message_type AS [SystemMessageType_Presctypefolder.SystemMessageTypes.Oid], 
                    T.presctypefolder AS [SystemMessageType_Presctypefolder.Presctypefolders.Id], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.system_message_type_presctypefos AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Presctype_ProfexOrdergroupSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Presctype_ProfexOrdergroupSet", @"
    SELECT VALUE -- Constructing Presctype_ProfexOrdergroupSet
        [PostgresModel.Presctype_ProfexOrdergroup](T3.[Presctype_ProfexOrdergroup.Presctypes], T3.[Presctype_ProfexOrdergroup.ProfexOrdergroups])
    FROM (
        SELECT -- Constructing Presctypes
            CreateRef(PostgresEntities.Presctypes, row(T2.[Presctype_ProfexOrdergroup.Presctypes.Oid]),[PostgresModel.Presctype]) AS [Presctype_ProfexOrdergroup.Presctypes], 
            T2.[Presctype_ProfexOrdergroup.ProfexOrdergroups]
        FROM (
            SELECT -- Constructing ProfexOrdergroups
                CreateRef(PostgresEntities.ProfexOrdergroups, row(T1.[Presctype_ProfexOrdergroup.ProfexOrdergroups.Oid]),[PostgresModel.ProfexOrdergroup]) AS [Presctype_ProfexOrdergroup.ProfexOrdergroups], 
                T1.[Presctype_ProfexOrdergroup.Presctypes.Oid]
            FROM (
                SELECT 
                    T.presctype AS [Presctype_ProfexOrdergroup.Presctypes.Oid], 
                    T.profex_ordergroup AS [Presctype_ProfexOrdergroup.ProfexOrdergroups.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.profex_ordergroup_presctypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ReportTemplate_PresctypeSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ReportTemplate_PresctypeSet", @"
    SELECT VALUE -- Constructing ReportTemplate_PresctypeSet
        [PostgresModel.ReportTemplate_Presctype](T3.[ReportTemplate_Presctype.ReportTemplates], T3.[ReportTemplate_Presctype.Presctypes])
    FROM (
        SELECT -- Constructing ReportTemplates
            CreateRef(PostgresEntities.ReportTemplates, row(T2.[ReportTemplate_Presctype.ReportTemplates.Oid]),[PostgresModel.ReportTemplate]) AS [ReportTemplate_Presctype.ReportTemplates], 
            T2.[ReportTemplate_Presctype.Presctypes]
        FROM (
            SELECT -- Constructing Presctypes
                CreateRef(PostgresEntities.Presctypes, row(T1.[ReportTemplate_Presctype.Presctypes.Oid]),[PostgresModel.Presctype]) AS [ReportTemplate_Presctype.Presctypes], 
                T1.[ReportTemplate_Presctype.ReportTemplates.Oid]
            FROM (
                SELECT 
                    T.report_template AS [ReportTemplate_Presctype.ReportTemplates.Oid], 
                    T.presctype AS [ReportTemplate_Presctype.Presctypes.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.report_presctypes AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.demand_cancel_reasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.demand_cancel_reasons", @"
    SELECT VALUE -- Constructing demand_cancel_reasons
        [PostgresModel.Store.demand_cancel_reason](T1.[demand_cancel_reason.oid], T1.[demand_cancel_reason.name])
    FROM (
        SELECT 
            T.Oid AS [demand_cancel_reason.oid], 
            T.Name AS [demand_cancel_reason.name], 
            True AS _from0
        FROM PostgresEntities.DemandCancelReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DemandCancelReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DemandCancelReasons", @"
    SELECT VALUE -- Constructing DemandCancelReasons
        [PostgresModel.DemandCancelReason](T1.DemandCancelReason_Oid, T1.DemandCancelReason_Name)
    FROM (
        SELECT 
            T.oid AS DemandCancelReason_Oid, 
            T.name AS DemandCancelReason_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.demand_cancel_reasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.demand_goals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.demand_goals", @"
    SELECT VALUE -- Constructing demand_goals
        [PostgresModel.Store.demand_goal](T1.[demand_goal.oid], T1.[demand_goal.name])
    FROM (
        SELECT 
            T.Oid AS [demand_goal.oid], 
            T.Name AS [demand_goal.name], 
            True AS _from0
        FROM PostgresEntities.DemandGoals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DemandGoals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DemandGoals", @"
    SELECT VALUE -- Constructing DemandGoals
        [PostgresModel.DemandGoal](T1.DemandGoal_Oid, T1.DemandGoal_Name)
    FROM (
        SELECT 
            T.oid AS DemandGoal_Oid, 
            T.name AS DemandGoal_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.demand_goals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bed_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bed_histories", @"
    SELECT VALUE -- Constructing bed_histories
        [PostgresModel.Store.bed_history](T1.[bed_history.hid], T1.[bed_history.h_date], T1.[bed_history.h_date_end], T1.[bed_history.oid], T1.[bed_history.room], T1.[bed_history.scheduled_days], T1.[bed_history.actual_days], T1.[bed_history.bed_dynamic], T1.[bed_history.bed_day], T1.[bed_history.bed_children], T1.[bed_history.sysdate], T1.[bed_history.bed_profile])
    FROM (
        SELECT 
            T.Hid AS [bed_history.hid], 
            T.HDate AS [bed_history.h_date], 
            T.HDateEnd AS [bed_history.h_date_end], 
            T.Oid AS [bed_history.oid], 
            T.Room AS [bed_history.room], 
            T.ScheduledDays AS [bed_history.scheduled_days], 
            T.ActualDays AS [bed_history.actual_days], 
            T.BedDynamic AS [bed_history.bed_dynamic], 
            T.BedDay AS [bed_history.bed_day], 
            T.BedChildren AS [bed_history.bed_children], 
            T.Sysdate AS [bed_history.sysdate], 
            T.BedProfile AS [bed_history.bed_profile], 
            True AS _from0
        FROM PostgresEntities.BedHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BedHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BedHistories", @"
    SELECT VALUE -- Constructing BedHistories
        [PostgresModel.BedHistory](T1.BedHistory_Hid, T1.BedHistory_HDate, T1.BedHistory_HDateEnd, T1.BedHistory_Oid, T1.BedHistory_Room, T1.BedHistory_ScheduledDays, T1.BedHistory_ActualDays, T1.BedHistory_BedDynamic, T1.BedHistory_BedDay, T1.BedHistory_BedChildren, T1.BedHistory_Sysdate, T1.BedHistory_BedProfile)
    FROM (
        SELECT 
            T.hid AS BedHistory_Hid, 
            T.h_date AS BedHistory_HDate, 
            T.h_date_end AS BedHistory_HDateEnd, 
            T.oid AS BedHistory_Oid, 
            T.room AS BedHistory_Room, 
            T.scheduled_days AS BedHistory_ScheduledDays, 
            T.actual_days AS BedHistory_ActualDays, 
            T.bed_dynamic AS BedHistory_BedDynamic, 
            T.bed_day AS BedHistory_BedDay, 
            T.bed_children AS BedHistory_BedChildren, 
            T.sysdate AS BedHistory_Sysdate, 
            T.bed_profile AS BedHistory_BedProfile, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bed_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.licence_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.licence_histories", @"
    SELECT VALUE -- Constructing licence_histories
        [PostgresModel.Store.licence_history](T1.[licence_history.hid], T1.[licence_history.h_date], T1.[licence_history.h_date_end], T1.[licence_history.oid], T1.[licence_history.lpu], T1.[licence_history.company], T1.[licence_history.licence_series], T1.[licence_history.licence_number], T1.[licence_history.licence_registration], T1.[licence_history.sysdate], T1.[licence_history.licence_activity])
    FROM (
        SELECT 
            T.Hid AS [licence_history.hid], 
            T.HDate AS [licence_history.h_date], 
            T.HDateEnd AS [licence_history.h_date_end], 
            T.Oid AS [licence_history.oid], 
            T.Lpu AS [licence_history.lpu], 
            T.Company AS [licence_history.company], 
            T.LicenceSeries AS [licence_history.licence_series], 
            T.LicenceNumber AS [licence_history.licence_number], 
            T.LicenceRegistration AS [licence_history.licence_registration], 
            T.Sysdate AS [licence_history.sysdate], 
            T.LicenceActivity AS [licence_history.licence_activity], 
            True AS _from0
        FROM PostgresEntities.LicenceHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LicenceHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LicenceHistories", @"
    SELECT VALUE -- Constructing LicenceHistories
        [PostgresModel.LicenceHistory](T1.LicenceHistory_Hid, T1.LicenceHistory_HDate, T1.LicenceHistory_HDateEnd, T1.LicenceHistory_Oid, T1.LicenceHistory_Lpu, T1.LicenceHistory_Company, T1.LicenceHistory_LicenceSeries, T1.LicenceHistory_LicenceNumber, T1.LicenceHistory_LicenceRegistration, T1.LicenceHistory_Sysdate, T1.LicenceHistory_LicenceActivity)
    FROM (
        SELECT 
            T.hid AS LicenceHistory_Hid, 
            T.h_date AS LicenceHistory_HDate, 
            T.h_date_end AS LicenceHistory_HDateEnd, 
            T.oid AS LicenceHistory_Oid, 
            T.lpu AS LicenceHistory_Lpu, 
            T.company AS LicenceHistory_Company, 
            T.licence_series AS LicenceHistory_LicenceSeries, 
            T.licence_number AS LicenceHistory_LicenceNumber, 
            T.licence_registration AS LicenceHistory_LicenceRegistration, 
            T.sysdate AS LicenceHistory_Sysdate, 
            T.licence_activity AS LicenceHistory_LicenceActivity, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.licence_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.schedule_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.schedule_histories", @"
    SELECT VALUE -- Constructing schedule_histories
        [PostgresModel.Store.schedule_history](T1.[schedule_history.old_oid], T1.[schedule_history.new_oid], T1.[schedule_history.cabinet], T1.[schedule_history.sysuser], T1.[schedule_history.presctype], T1.[schedule_history.people], T1.[schedule_history.state], T1.[schedule_history.lpu], T1.[schedule_history.starton], T1.[schedule_history.action_sysuser], T1.[schedule_history.action_id], T1.[schedule_history.action_date], T1.[schedule_history.note])
    FROM (
        SELECT 
            T.OldOid AS [schedule_history.old_oid], 
            T.NewOid AS [schedule_history.new_oid], 
            T.Cabinet AS [schedule_history.cabinet], 
            T.Sysuser AS [schedule_history.sysuser], 
            T.Presctype AS [schedule_history.presctype], 
            T.People AS [schedule_history.people], 
            T.State AS [schedule_history.state], 
            T.Lpu AS [schedule_history.lpu], 
            T.Starton AS [schedule_history.starton], 
            T.ActionSysuser AS [schedule_history.action_sysuser], 
            T.ActionId AS [schedule_history.action_id], 
            T.ActionDate AS [schedule_history.action_date], 
            T.Note AS [schedule_history.note], 
            True AS _from0
        FROM PostgresEntities.ScheduleHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ScheduleHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1221()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ScheduleHistories", @"
    SELECT VALUE -- Constructing ScheduleHistories
        [PostgresModel.ScheduleHistory](T1.ScheduleHistory_OldOid, T1.ScheduleHistory_NewOid, T1.ScheduleHistory_Cabinet, T1.ScheduleHistory_Sysuser, T1.ScheduleHistory_Presctype, T1.ScheduleHistory_People, T1.ScheduleHistory_State, T1.ScheduleHistory_Lpu, T1.ScheduleHistory_Starton, T1.ScheduleHistory_ActionSysuser, T1.ScheduleHistory_ActionId, T1.ScheduleHistory_ActionDate, T1.ScheduleHistory_Note)
    FROM (
        SELECT 
            T.old_oid AS ScheduleHistory_OldOid, 
            T.new_oid AS ScheduleHistory_NewOid, 
            T.cabinet AS ScheduleHistory_Cabinet, 
            T.sysuser AS ScheduleHistory_Sysuser, 
            T.presctype AS ScheduleHistory_Presctype, 
            T.people AS ScheduleHistory_People, 
            T.state AS ScheduleHistory_State, 
            T.lpu AS ScheduleHistory_Lpu, 
            T.starton AS ScheduleHistory_Starton, 
            T.action_sysuser AS ScheduleHistory_ActionSysuser, 
            T.action_id AS ScheduleHistory_ActionId, 
            T.action_date AS ScheduleHistory_ActionDate, 
            T.note AS ScheduleHistory_Note, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.schedule_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.age_group_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.age_group_histories", @"
    SELECT VALUE -- Constructing age_group_histories
        [PostgresModel.Store.age_group_history](T1.[age_group_history.hid], T1.[age_group_history.h_date], T1.[age_group_history.h_date_end], T1.[age_group_history.oid], T1.[age_group_history.otdel], T1.[age_group_history.age_group_type], T1.[age_group_history.townspeople], T1.[age_group_history.country_people], T1.[age_group_history.sysdate])
    FROM (
        SELECT 
            T.Hid AS [age_group_history.hid], 
            T.HDate AS [age_group_history.h_date], 
            T.HDateEnd AS [age_group_history.h_date_end], 
            T.Oid AS [age_group_history.oid], 
            T.Otdel AS [age_group_history.otdel], 
            T.AgeGroupType AS [age_group_history.age_group_type], 
            T.Townspeople AS [age_group_history.townspeople], 
            T.CountryPeople AS [age_group_history.country_people], 
            T.Sysdate AS [age_group_history.sysdate], 
            True AS _from0
        FROM PostgresEntities.AgeGroupHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AgeGroupHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AgeGroupHistories", @"
    SELECT VALUE -- Constructing AgeGroupHistories
        [PostgresModel.AgeGroupHistory](T1.AgeGroupHistory_Hid, T1.AgeGroupHistory_HDate, T1.AgeGroupHistory_HDateEnd, T1.AgeGroupHistory_Oid, T1.AgeGroupHistory_Otdel, T1.AgeGroupHistory_AgeGroupType, T1.AgeGroupHistory_Townspeople, T1.AgeGroupHistory_CountryPeople, T1.AgeGroupHistory_Sysdate)
    FROM (
        SELECT 
            T.hid AS AgeGroupHistory_Hid, 
            T.h_date AS AgeGroupHistory_HDate, 
            T.h_date_end AS AgeGroupHistory_HDateEnd, 
            T.oid AS AgeGroupHistory_Oid, 
            T.otdel AS AgeGroupHistory_Otdel, 
            T.age_group_type AS AgeGroupHistory_AgeGroupType, 
            T.townspeople AS AgeGroupHistory_Townspeople, 
            T.country_people AS AgeGroupHistory_CountryPeople, 
            T.sysdate AS AgeGroupHistory_Sysdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.age_group_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.response_people_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.response_people_histories", "\r\n    SELECT VALUE -- Constructing response_people_histories\r\n        [PostgresMo" +
                    "del.Store.response_people_history](T1.[response_people_history.hid], T1.[respons" +
                    "e_people_history.h_date], T1.[response_people_history.h_date_end], T1.[response_" +
                    "people_history.sysdate], T1.[response_people_history.oid], T1.[response_people_h" +
                    "istory.lastname], T1.[response_people_history.firstname], T1.[response_people_hi" +
                    "story.middlename], T1.[response_people_history.telephone], T1.[response_people_h" +
                    "istory.fax], T1.[response_people_history.email], T1.[response_people_history.dat" +
                    "epostbegin], T1.[response_people_history.datepostend], T1.[response_people_histo" +
                    "ry.post], T1.[response_people_history.lpu])\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.Hid AS [response_people_history.hid], \r\n            T.HDate AS [response" +
                    "_people_history.h_date], \r\n            T.HDateEnd AS [response_people_history.h_" +
                    "date_end], \r\n            T.Sysdate AS [response_people_history.sysdate], \r\n     " +
                    "       T.Oid AS [response_people_history.oid], \r\n            T.Lastname AS [resp" +
                    "onse_people_history.lastname], \r\n            T.Firstname AS [response_people_his" +
                    "tory.firstname], \r\n            T.Middlename AS [response_people_history.middlena" +
                    "me], \r\n            T.Telephone AS [response_people_history.telephone], \r\n       " +
                    "     T.Fax AS [response_people_history.fax], \r\n            T.Email AS [response_" +
                    "people_history.email], \r\n            T.Datepostbegin AS [response_people_history" +
                    ".datepostbegin], \r\n            T.Datepostend AS [response_people_history.datepos" +
                    "tend], \r\n            T.Post AS [response_people_history.post], \r\n            T.L" +
                    "pu AS [response_people_history.lpu], \r\n            True AS _from0\r\n        FROM " +
                    "PostgresEntities.ResponsePersonHistories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ResponsePersonHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ResponsePersonHistories", "\r\n    SELECT VALUE -- Constructing ResponsePersonHistories\r\n        [PostgresMode" +
                    "l.ResponsePersonHistory](T1.ResponsePersonHistory_Hid, T1.ResponsePersonHistory_" +
                    "HDate, T1.ResponsePersonHistory_HDateEnd, T1.ResponsePersonHistory_Sysdate, T1.R" +
                    "esponsePersonHistory_Oid, T1.ResponsePersonHistory_Lastname, T1.ResponsePersonHi" +
                    "story_Firstname, T1.ResponsePersonHistory_Middlename, T1.ResponsePersonHistory_T" +
                    "elephone, T1.ResponsePersonHistory_Fax, T1.ResponsePersonHistory_Email, T1.Respo" +
                    "nsePersonHistory_Datepostbegin, T1.ResponsePersonHistory_Datepostend, T1.Respons" +
                    "ePersonHistory_Post, T1.ResponsePersonHistory_Lpu)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.hid AS ResponsePersonHistory_Hid, \r\n            T.h_date AS Respo" +
                    "nsePersonHistory_HDate, \r\n            T.h_date_end AS ResponsePersonHistory_HDat" +
                    "eEnd, \r\n            T.sysdate AS ResponsePersonHistory_Sysdate, \r\n            T." +
                    "oid AS ResponsePersonHistory_Oid, \r\n            T.lastname AS ResponsePersonHist" +
                    "ory_Lastname, \r\n            T.firstname AS ResponsePersonHistory_Firstname, \r\n  " +
                    "          T.middlename AS ResponsePersonHistory_Middlename, \r\n            T.tele" +
                    "phone AS ResponsePersonHistory_Telephone, \r\n            T.fax AS ResponsePersonH" +
                    "istory_Fax, \r\n            T.email AS ResponsePersonHistory_Email, \r\n            " +
                    "T.datepostbegin AS ResponsePersonHistory_Datepostbegin, \r\n            T.datepost" +
                    "end AS ResponsePersonHistory_Datepostend, \r\n            T.post AS ResponsePerson" +
                    "History_Post, \r\n            T.lpu AS ResponsePersonHistory_Lpu, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM PostgresEntitiesStoreContainer.response_people_histor" +
                    "ies AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sanatorium_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1226()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2267);
            viewString.Append("\r\n    SELECT VALUE -- Constructing sanatorium_histories\r\n        [PostgresModel.");
            viewString.Append("Store.sanatorium_history](T1.[sanatorium_history.hid], T1.[sanatorium_history.h_");
            viewString.Append("date], T1.[sanatorium_history.h_date_end], T1.[sanatorium_history.sysdate], T1.[");
            viewString.Append("sanatorium_history.oid], T1.[sanatorium_history.otdel], T1.[sanatorium_history.r");
            viewString.Append("esort], T1.[sanatorium_history.resort_status], T1.[sanatorium_history.resort_doc");
            viewString.Append("ument], T1.[sanatorium_history.resort_number], T1.[sanatorium_history.resort_dat");
            viewString.Append("e], T1.[sanatorium_history.mountain], T1.[sanatorium_history.mountain_document],");
            viewString.Append(" T1.[sanatorium_history.mountain_number], T1.[sanatorium_history.mountain_date],");
            viewString.Append(" T1.[sanatorium_history.resort_type], T1.[sanatorium_history.resort_type_oid], T");
            viewString.Append("1.[sanatorium_history.resort_type_document], T1.[sanatorium_history.resort_type_");
            viewString.Append("number], T1.[sanatorium_history.resort_type_date])\r\n    FROM (\r\n        SELECT \r");
            viewString.Append("\n            T.Hid AS [sanatorium_history.hid], \r\n            T.HDate AS [sanato");
            viewString.Append("rium_history.h_date], \r\n            T.HDateEnd AS [sanatorium_history.h_date_end");
            viewString.Append("], \r\n            T.Sysdate AS [sanatorium_history.sysdate], \r\n            T.Oid ");
            viewString.Append("AS [sanatorium_history.oid], \r\n            T.Otdel AS [sanatorium_history.otdel]");
            viewString.Append(", \r\n            T.Resort AS [sanatorium_history.resort], \r\n            T.ResortS");
            viewString.Append("tatus AS [sanatorium_history.resort_status], \r\n            T.ResortDocument AS [");
            viewString.Append("sanatorium_history.resort_document], \r\n            T.ResortNumber AS [sanatorium");
            viewString.Append("_history.resort_number], \r\n            T.ResortDate AS [sanatorium_history.resor");
            viewString.Append("t_date], \r\n            T.Mountain AS [sanatorium_history.mountain], \r\n          ");
            viewString.Append("  T.MountainDocument AS [sanatorium_history.mountain_document], \r\n            T.");
            viewString.Append("MountainNumber AS [sanatorium_history.mountain_number], \r\n            T.Mountain");
            viewString.Append("Date AS [sanatorium_history.mountain_date], \r\n            T.ResortType AS [sanat");
            viewString.Append("orium_history.resort_type], \r\n            T.ResortTypeOid AS [sanatorium_history");
            viewString.Append(".resort_type_oid], \r\n            T.ResortTypeDocument AS [sanatorium_history.res");
            viewString.Append("ort_type_document], \r\n            T.ResortTypeNumber AS [sanatorium_history.reso");
            viewString.Append("rt_type_number], \r\n            T.ResortTypeDate AS [sanatorium_history.resort_ty");
            viewString.Append("pe_date], \r\n            True AS _from0\r\n        FROM PostgresEntities.Sanatorium");
            viewString.Append("Histories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sanatorium_histories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SanatoriumHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1227()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2135);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SanatoriumHistories\r\n        [PostgresModel.S");
            viewString.Append("anatoriumHistory](T1.SanatoriumHistory_Hid, T1.SanatoriumHistory_HDate, T1.Sanat");
            viewString.Append("oriumHistory_HDateEnd, T1.SanatoriumHistory_Sysdate, T1.SanatoriumHistory_Oid, T");
            viewString.Append("1.SanatoriumHistory_Otdel, T1.SanatoriumHistory_Resort, T1.SanatoriumHistory_Res");
            viewString.Append("ortStatus, T1.SanatoriumHistory_ResortDocument, T1.SanatoriumHistory_ResortNumbe");
            viewString.Append("r, T1.SanatoriumHistory_ResortDate, T1.SanatoriumHistory_Mountain, T1.Sanatorium");
            viewString.Append("History_MountainDocument, T1.SanatoriumHistory_MountainNumber, T1.SanatoriumHist");
            viewString.Append("ory_MountainDate, T1.SanatoriumHistory_ResortType, T1.SanatoriumHistory_ResortTy");
            viewString.Append("peOid, T1.SanatoriumHistory_ResortTypeDocument, T1.SanatoriumHistory_ResortTypeN");
            viewString.Append("umber, T1.SanatoriumHistory_ResortTypeDate)\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.hid AS SanatoriumHistory_Hid, \r\n            T.h_date AS SanatoriumHistor");
            viewString.Append("y_HDate, \r\n            T.h_date_end AS SanatoriumHistory_HDateEnd, \r\n           ");
            viewString.Append(" T.sysdate AS SanatoriumHistory_Sysdate, \r\n            T.oid AS SanatoriumHistor");
            viewString.Append("y_Oid, \r\n            T.otdel AS SanatoriumHistory_Otdel, \r\n            T.resort ");
            viewString.Append("AS SanatoriumHistory_Resort, \r\n            T.resort_status AS SanatoriumHistory_");
            viewString.Append("ResortStatus, \r\n            T.resort_document AS SanatoriumHistory_ResortDocumen");
            viewString.Append("t, \r\n            T.resort_number AS SanatoriumHistory_ResortNumber, \r\n          ");
            viewString.Append("  T.resort_date AS SanatoriumHistory_ResortDate, \r\n            T.mountain AS San");
            viewString.Append("atoriumHistory_Mountain, \r\n            T.mountain_document AS SanatoriumHistory_");
            viewString.Append("MountainDocument, \r\n            T.mountain_number AS SanatoriumHistory_MountainN");
            viewString.Append("umber, \r\n            T.mountain_date AS SanatoriumHistory_MountainDate, \r\n      ");
            viewString.Append("      T.resort_type AS SanatoriumHistory_ResortType, \r\n            T.resort_type");
            viewString.Append("_oid AS SanatoriumHistory_ResortTypeOid, \r\n            T.resort_type_document AS");
            viewString.Append(" SanatoriumHistory_ResortTypeDocument, \r\n            T.resort_type_number AS San");
            viewString.Append("atoriumHistory_ResortTypeNumber, \r\n            T.resort_type_date AS SanatoriumH");
            viewString.Append("istory_ResortTypeDate, \r\n            True AS _from0\r\n        FROM PostgresEntiti");
            viewString.Append("esStoreContainer.sanatorium_histories AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SanatoriumHistories", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.lpu_information_system_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1228()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.lpu_information_system_histories", "\r\n    SELECT VALUE -- Constructing lpu_information_system_histories\r\n        [Pos" +
                    "tgresModel.Store.lpu_information_system_history](T1.[lpu_information_system_hist" +
                    "ory.hid], T1.[lpu_information_system_history.h_date], T1.[lpu_information_system" +
                    "_history.h_date_end], T1.[lpu_information_system_history.sysdate], T1.[lpu_infor" +
                    "mation_system_history.oid], T1.[lpu_information_system_history.lpu], T1.[lpu_inf" +
                    "ormation_system_history.information_system], T1.[lpu_information_system_history." +
                    "date_installation], T1.[lpu_information_system_history.price], T1.[lpu_informati" +
                    "on_system_history.support], T1.[lpu_information_system_history.support_price])\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.Hid AS [lpu_information_system_histor" +
                    "y.hid], \r\n            T.HDate AS [lpu_information_system_history.h_date], \r\n    " +
                    "        T.HDateEnd AS [lpu_information_system_history.h_date_end], \r\n           " +
                    " T.Sysdate AS [lpu_information_system_history.sysdate], \r\n            T.Oid AS [" +
                    "lpu_information_system_history.oid], \r\n            T.Lpu AS [lpu_information_sys" +
                    "tem_history.lpu], \r\n            T.InformationSystem AS [lpu_information_system_h" +
                    "istory.information_system], \r\n            T.DateInstallation AS [lpu_information" +
                    "_system_history.date_installation], \r\n            T.Price AS [lpu_information_sy" +
                    "stem_history.price], \r\n            T.Support AS [lpu_information_system_history." +
                    "support], \r\n            T.SupportPrice AS [lpu_information_system_history.suppor" +
                    "t_price], \r\n            True AS _from0\r\n        FROM PostgresEntities.LpuInforma" +
                    "tionSystemHistories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LpuInformationSystemHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LpuInformationSystemHistories", @"
    SELECT VALUE -- Constructing LpuInformationSystemHistories
        [PostgresModel.LpuInformationSystemHistory](T1.LpuInformationSystemHistory_Hid, T1.LpuInformationSystemHistory_HDate, T1.LpuInformationSystemHistory_HDateEnd, T1.LpuInformationSystemHistory_Sysdate, T1.LpuInformationSystemHistory_Oid, T1.LpuInformationSystemHistory_Lpu, T1.LpuInformationSystemHistory_InformationSystem, T1.LpuInformationSystemHistory_DateInstallation, T1.LpuInformationSystemHistory_Price, T1.LpuInformationSystemHistory_Support, T1.LpuInformationSystemHistory_SupportPrice)
    FROM (
        SELECT 
            T.hid AS LpuInformationSystemHistory_Hid, 
            T.h_date AS LpuInformationSystemHistory_HDate, 
            T.h_date_end AS LpuInformationSystemHistory_HDateEnd, 
            T.sysdate AS LpuInformationSystemHistory_Sysdate, 
            T.oid AS LpuInformationSystemHistory_Oid, 
            T.lpu AS LpuInformationSystemHistory_Lpu, 
            T.information_system AS LpuInformationSystemHistory_InformationSystem, 
            T.date_installation AS LpuInformationSystemHistory_DateInstallation, 
            T.price AS LpuInformationSystemHistory_Price, 
            T.support AS LpuInformationSystemHistory_Support, 
            T.support_price AS LpuInformationSystemHistory_SupportPrice, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.lpu_information_system_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.bank_account_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1230()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.bank_account_histories", @"
    SELECT VALUE -- Constructing bank_account_histories
        [PostgresModel.Store.bank_account_history](T1.[bank_account_history.hid], T1.[bank_account_history.h_date], T1.[bank_account_history.h_date_end], T1.[bank_account_history.sysdate], T1.[bank_account_history.oid], T1.[bank_account_history.lpu], T1.[bank_account_history.company], T1.[bank_account_history.correspondent_account], T1.[bank_account_history.current_account])
    FROM (
        SELECT 
            T.Hid AS [bank_account_history.hid], 
            T.HDate AS [bank_account_history.h_date], 
            T.HDateEnd AS [bank_account_history.h_date_end], 
            T.Sysdate AS [bank_account_history.sysdate], 
            T.Oid AS [bank_account_history.oid], 
            T.Lpu AS [bank_account_history.lpu], 
            T.Company AS [bank_account_history.company], 
            T.CorrespondentAccount AS [bank_account_history.correspondent_account], 
            T.CurrentAccount AS [bank_account_history.current_account], 
            True AS _from0
        FROM PostgresEntities.BankAccountHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BankAccountHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BankAccountHistories", @"
    SELECT VALUE -- Constructing BankAccountHistories
        [PostgresModel.BankAccountHistory](T1.BankAccountHistory_Hid, T1.BankAccountHistory_HDate, T1.BankAccountHistory_HDateEnd, T1.BankAccountHistory_Sysdate, T1.BankAccountHistory_Oid, T1.BankAccountHistory_Lpu, T1.BankAccountHistory_Company, T1.BankAccountHistory_CorrespondentAccount, T1.BankAccountHistory_CurrentAccount)
    FROM (
        SELECT 
            T.hid AS BankAccountHistory_Hid, 
            T.h_date AS BankAccountHistory_HDate, 
            T.h_date_end AS BankAccountHistory_HDateEnd, 
            T.sysdate AS BankAccountHistory_Sysdate, 
            T.oid AS BankAccountHistory_Oid, 
            T.lpu AS BankAccountHistory_Lpu, 
            T.company AS BankAccountHistory_Company, 
            T.correspondent_account AS BankAccountHistory_CorrespondentAccount, 
            T.current_account AS BankAccountHistory_CurrentAccount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.bank_account_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.areal_histories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1232()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.areal_histories", "\r\n    SELECT VALUE -- Constructing areal_histories\r\n        [PostgresModel.Store." +
                    "areal_history](T1.[areal_history.hid], T1.[areal_history.h_date], T1.[areal_hist" +
                    "ory.h_date_end], T1.[areal_history.sysdate], T1.[areal_history.name], T1.[areal_" +
                    "history.description], T1.[areal_history.company_id], T1.[areal_history.car], T1." +
                    "[areal_history.ware], T1.[areal_history.workspace_gp], T1.[areal_history.workspa" +
                    "ce_any], T1.[areal_history.otdel_id], T1.[areal_history.oid], T1.[areal_history." +
                    "arealtype_oid], T1.[areal_history.distanceareal], T1.[areal_history.quantity_nor" +
                    "m])\r\n    FROM (\r\n        SELECT \r\n            T.Hid AS [areal_history.hid], \r\n  " +
                    "          T.HDate AS [areal_history.h_date], \r\n            T.HDateEnd AS [areal_" +
                    "history.h_date_end], \r\n            T.Sysdate AS [areal_history.sysdate], \r\n     " +
                    "       T.Name AS [areal_history.name], \r\n            T.Description AS [areal_his" +
                    "tory.description], \r\n            T.CompanyId AS [areal_history.company_id], \r\n  " +
                    "          T.Car AS [areal_history.car], \r\n            T.Ware AS [areal_history.w" +
                    "are], \r\n            T.WorkspaceGp AS [areal_history.workspace_gp], \r\n           " +
                    " T.WorkspaceAny AS [areal_history.workspace_any], \r\n            T.OtdelId AS [ar" +
                    "eal_history.otdel_id], \r\n            T.Oid AS [areal_history.oid], \r\n           " +
                    " T.ArealtypeOid AS [areal_history.arealtype_oid], \r\n            T.Distanceareal " +
                    "AS [areal_history.distanceareal], \r\n            T.QuantityNorm AS [areal_history" +
                    ".quantity_norm], \r\n            True AS _from0\r\n        FROM PostgresEntities.Are" +
                    "alHistories AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ArealHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1233()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ArealHistories", @"
    SELECT VALUE -- Constructing ArealHistories
        [PostgresModel.ArealHistory](T1.ArealHistory_Hid, T1.ArealHistory_HDate, T1.ArealHistory_HDateEnd, T1.ArealHistory_Sysdate, T1.ArealHistory_Name, T1.ArealHistory_Description, T1.ArealHistory_CompanyId, T1.ArealHistory_Car, T1.ArealHistory_Ware, T1.ArealHistory_WorkspaceGp, T1.ArealHistory_WorkspaceAny, T1.ArealHistory_OtdelId, T1.ArealHistory_Oid, T1.ArealHistory_ArealtypeOid, T1.ArealHistory_Distanceareal, T1.ArealHistory_QuantityNorm)
    FROM (
        SELECT 
            T.hid AS ArealHistory_Hid, 
            T.h_date AS ArealHistory_HDate, 
            T.h_date_end AS ArealHistory_HDateEnd, 
            T.sysdate AS ArealHistory_Sysdate, 
            T.name AS ArealHistory_Name, 
            T.description AS ArealHistory_Description, 
            T.company_id AS ArealHistory_CompanyId, 
            T.car AS ArealHistory_Car, 
            T.ware AS ArealHistory_Ware, 
            T.workspace_gp AS ArealHistory_WorkspaceGp, 
            T.workspace_any AS ArealHistory_WorkspaceAny, 
            T.otdel_id AS ArealHistory_OtdelId, 
            T.oid AS ArealHistory_Oid, 
            T.arealtype_oid AS ArealHistory_ArealtypeOid, 
            T.distanceareal AS ArealHistory_Distanceareal, 
            T.quantity_norm AS ArealHistory_QuantityNorm, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.areal_histories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_objects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_objects", @"
    SELECT VALUE -- Constructing vac_repl_objects
        [PostgresModel.Store.vac_repl_objects](T1.[vac_repl_objects.oid], T1.[vac_repl_objects.table_name], T1.[vac_repl_objects.syn], T1.[vac_repl_objects.fn_order])
    FROM (
        SELECT 
            T.Oid AS [vac_repl_objects.oid], 
            T.TableName AS [vac_repl_objects.table_name], 
            T.Syn AS [vac_repl_objects.syn], 
            T.FnOrder AS [vac_repl_objects.fn_order], 
            True AS _from0
        FROM PostgresEntities.VacReplObjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplObjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1235()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplObjects", @"
    SELECT VALUE -- Constructing VacReplObjects
        [PostgresModel.VacReplObject](T1.VacReplObject_Oid, T1.VacReplObject_TableName, T1.VacReplObject_Syn, T1.VacReplObject_FnOrder)
    FROM (
        SELECT 
            T.oid AS VacReplObject_Oid, 
            T.table_name AS VacReplObject_TableName, 
            T.syn AS VacReplObject_Syn, 
            T.fn_order AS VacReplObject_FnOrder, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_objects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_people
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1236()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_people", @"
    SELECT VALUE -- Constructing vac_repl_people
        [PostgresModel.Store.vac_repl_people](T1.[vac_repl_people.oid], T1.[vac_repl_people.people_id], T1.[vac_repl_people.date_change], T1.[vac_repl_people.company_id])
    FROM (
        SELECT 
            T.Oid AS [vac_repl_people.oid], 
            T.PeopleId AS [vac_repl_people.people_id], 
            T.DateChange AS [vac_repl_people.date_change], 
            T.CompanyId AS [vac_repl_people.company_id], 
            True AS _from0
        FROM PostgresEntities.VacReplPeople AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplPeople
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplPeople", @"
    SELECT VALUE -- Constructing VacReplPeople
        [PostgresModel.VacReplPerson](T1.VacReplPerson_Oid, T1.VacReplPerson_PeopleId, T1.VacReplPerson_DateChange, T1.VacReplPerson_CompanyId)
    FROM (
        SELECT 
            T.oid AS VacReplPerson_Oid, 
            T.people_id AS VacReplPerson_PeopleId, 
            T.date_change AS VacReplPerson_DateChange, 
            T.company_id AS VacReplPerson_CompanyId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_people AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_people_loadeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_people_loadeds", @"
    SELECT VALUE -- Constructing vac_repl_people_loadeds
        [PostgresModel.Store.vac_repl_people_loaded](T1.[vac_repl_people_loaded.oid], T1.[vac_repl_people_loaded.people_id])
    FROM (
        SELECT 
            T.Oid AS [vac_repl_people_loaded.oid], 
            T.PeopleId AS [vac_repl_people_loaded.people_id], 
            True AS _from0
        FROM PostgresEntities.VacReplPeopleLoadeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplPeopleLoadeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplPeopleLoadeds", @"
    SELECT VALUE -- Constructing VacReplPeopleLoadeds
        [PostgresModel.VacReplPeopleLoaded](T1.VacReplPeopleLoaded_Oid, T1.VacReplPeopleLoaded_PeopleId)
    FROM (
        SELECT 
            T.oid AS VacReplPeopleLoaded_Oid, 
            T.people_id AS VacReplPeopleLoaded_PeopleId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_people_loadeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_people_queues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_people_queues", @"
    SELECT VALUE -- Constructing vac_repl_people_queues
        [PostgresModel.Store.vac_repl_people_queue](T1.[vac_repl_people_queue.oid], T1.[vac_repl_people_queue.people_id], T1.[vac_repl_people_queue.date_change], T1.[vac_repl_people_queue.company_id])
    FROM (
        SELECT 
            T.Oid AS [vac_repl_people_queue.oid], 
            T.PeopleId AS [vac_repl_people_queue.people_id], 
            T.DateChange AS [vac_repl_people_queue.date_change], 
            T.CompanyId AS [vac_repl_people_queue.company_id], 
            True AS _from0
        FROM PostgresEntities.VacReplPeopleQueues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplPeopleQueues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplPeopleQueues", @"
    SELECT VALUE -- Constructing VacReplPeopleQueues
        [PostgresModel.VacReplPeopleQueue](T1.VacReplPeopleQueue_Oid, T1.VacReplPeopleQueue_PeopleId, T1.VacReplPeopleQueue_DateChange, T1.VacReplPeopleQueue_CompanyId)
    FROM (
        SELECT 
            T.oid AS VacReplPeopleQueue_Oid, 
            T.people_id AS VacReplPeopleQueue_PeopleId, 
            T.date_change AS VacReplPeopleQueue_DateChange, 
            T.company_id AS VacReplPeopleQueue_CompanyId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_people_queues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_subscribers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_subscribers", @"
    SELECT VALUE -- Constructing vac_repl_subscribers
        [PostgresModel.Store.vac_repl_subscriber](T1.[vac_repl_subscriber.company_id])
    FROM (
        SELECT 
            T.CompanyId AS [vac_repl_subscriber.company_id], 
            True AS _from0
        FROM PostgresEntities.VacReplSubscribers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplSubscribers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplSubscribers", @"
    SELECT VALUE -- Constructing VacReplSubscribers
        [PostgresModel.VacReplSubscriber](T1.VacReplSubscriber_CompanyId)
    FROM (
        SELECT 
            T.company_id AS VacReplSubscriber_CompanyId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_subscribers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vac_repl_updates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1244()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vac_repl_updates", @"
    SELECT VALUE -- Constructing vac_repl_updates
        [PostgresModel.Store.vac_repl_updates](T1.[vac_repl_updates.oid], T1.[vac_repl_updates.object_id], T1.[vac_repl_updates.rec_id], T1.[vac_repl_updates.date_change], T1.[vac_repl_updates.company_id])
    FROM (
        SELECT 
            T.Oid AS [vac_repl_updates.oid], 
            T.ObjectId AS [vac_repl_updates.object_id], 
            T.RecId AS [vac_repl_updates.rec_id], 
            T.DateChange AS [vac_repl_updates.date_change], 
            T.CompanyId AS [vac_repl_updates.company_id], 
            True AS _from0
        FROM PostgresEntities.VacReplUpdates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VacReplUpdates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1245()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VacReplUpdates", @"
    SELECT VALUE -- Constructing VacReplUpdates
        [PostgresModel.VacReplUpdate](T1.VacReplUpdate_Oid, T1.VacReplUpdate_ObjectId, T1.VacReplUpdate_RecId, T1.VacReplUpdate_DateChange, T1.VacReplUpdate_CompanyId)
    FROM (
        SELECT 
            T.oid AS VacReplUpdate_Oid, 
            T.object_id AS VacReplUpdate_ObjectId, 
            T.rec_id AS VacReplUpdate_RecId, 
            T.date_change AS VacReplUpdate_DateChange, 
            T.company_id AS VacReplUpdate_CompanyId, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vac_repl_updates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.okatos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1246()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.okatos", @"
    SELECT VALUE -- Constructing okatos
        [PostgresModel.Store.okato](T1.okato_oid, T1.[okato.okato_foms], T1.okato_name, T1.okato_name2, T1.okato_show, T1.okato_status, T1.okato_parent, T1.[okato.foms_code], T1.okato_id, T1.okato_parentid, T1.[okato.date_begin], T1.[okato.date_end])
    FROM (
        SELECT 
            T.Oid AS okato_oid, 
            T.OkatoFoms AS [okato.okato_foms], 
            T.Name AS okato_name, 
            T.Name2 AS okato_name2, 
            T.Show AS okato_show, 
            T.Status AS okato_status, 
            T.Parent AS okato_parent, 
            T.FomsCode AS [okato.foms_code], 
            T.Id AS okato_id, 
            T.Parentid AS okato_parentid, 
            T.DateBegin AS [okato.date_begin], 
            T.DateEnd AS [okato.date_end], 
            True AS _from0
        FROM PostgresEntities.Okatos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Okatos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1247()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Okatos", @"
    SELECT VALUE -- Constructing Okatos
        [PostgresModel.Okato](T1.Okato_Oid, T1.Okato_OkatoFoms, T1.Okato_Name, T1.Okato_Name2, T1.Okato_Show, T1.Okato_Status, T1.Okato_Parent, T1.Okato_FomsCode, T1.Okato_Id, T1.Okato_Parentid, T1.Okato_DateBegin, T1.Okato_DateEnd)
    FROM (
        SELECT 
            T.oid AS Okato_Oid, 
            T.okato_foms AS Okato_OkatoFoms, 
            T.name AS Okato_Name, 
            T.name2 AS Okato_Name2, 
            T.show AS Okato_Show, 
            T.status AS Okato_Status, 
            T.parent AS Okato_Parent, 
            T.foms_code AS Okato_FomsCode, 
            T.id AS Okato_Id, 
            T.parentid AS Okato_Parentid, 
            T.date_begin AS Okato_DateBegin, 
            T.date_end AS Okato_DateEnd, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.okatos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ecompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1248()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ecompanies", @"
    SELECT VALUE -- Constructing ecompanies
        [PostgresModel.Store.ecompany](T1.ecompany_oid, T1.ecompany_name, T1.ecompany_own)
    FROM (
        SELECT 
            T.Oid AS ecompany_oid, 
            T.Name AS ecompany_name, 
            T.Own AS ecompany_own, 
            True AS _from0
        FROM PostgresEntities.Ecompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.etables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1249()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.etables", @"
    SELECT VALUE -- Constructing etables
        [PostgresModel.Store.etable](T1.etable_oid, T1.[etable.ecompany_id], T1.etable_name)
    FROM (
        SELECT 
            T.Oid AS etable_oid, 
            T.EcompanyId AS [etable.ecompany_id], 
            T.Name AS etable_name, 
            True AS _from0
        FROM PostgresEntities.Etables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.etheirs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.etheirs", @"
    SELECT VALUE -- Constructing etheirs
        [PostgresModel.Store.etheir](T1.etheir_oid, T1.[etheir.etable_id], T1.etheir_code, T1.etheir_value, T1.etheir_importdate)
    FROM (
        SELECT 
            T.Oid AS etheir_oid, 
            T.EtableId AS [etheir.etable_id], 
            T.Code AS etheir_code, 
            T.[Value] AS etheir_value, 
            T.Importdate AS etheir_importdate, 
            True AS _from0
        FROM PostgresEntities.Etheirs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.eowns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.eowns", @"
    SELECT VALUE -- Constructing eowns
        [PostgresModel.Store.eown](T1.eown_oid, T1.[eown.etable_id], T1.[eown.etheir_id], T1.eown_code, T1.eown_value)
    FROM (
        SELECT 
            T.Oid AS eown_oid, 
            T.EtableId AS [eown.etable_id], 
            T.EtheirId AS [eown.etheir_id], 
            T.Code AS eown_code, 
            T.[Value] AS eown_value, 
            True AS _from0
        FROM PostgresEntities.Eowns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Ecompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1252()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Ecompanies", @"
    SELECT VALUE -- Constructing Ecompanies
        [PostgresModel.Ecompany](T1.Ecompany_Oid, T1.Ecompany_Name, T1.Ecompany_Own)
    FROM (
        SELECT 
            T.oid AS Ecompany_Oid, 
            T.name AS Ecompany_Name, 
            T.own AS Ecompany_Own, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ecompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Etables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Etables", @"
    SELECT VALUE -- Constructing Etables
        [PostgresModel.Etable](T1.Etable_Oid, T1.Etable_EcompanyId, T1.Etable_Name)
    FROM (
        SELECT 
            T.oid AS Etable_Oid, 
            T.ecompany_id AS Etable_EcompanyId, 
            T.name AS Etable_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.etables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Etheirs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Etheirs", @"
    SELECT VALUE -- Constructing Etheirs
        [PostgresModel.Etheir](T1.Etheir_Oid, T1.Etheir_EtableId, T1.Etheir_Code, T1.Etheir_Value, T1.Etheir_Importdate)
    FROM (
        SELECT 
            T.oid AS Etheir_Oid, 
            T.etable_id AS Etheir_EtableId, 
            T.code AS Etheir_Code, 
            T.[value] AS Etheir_Value, 
            T.importdate AS Etheir_Importdate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.etheirs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Eowns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Eowns", @"
    SELECT VALUE -- Constructing Eowns
        [PostgresModel.Eown](T1.Eown_Oid, T1.Eown_EtableId, T1.Eown_EtheirId, T1.Eown_Code, T1.Eown_Value)
    FROM (
        SELECT 
            T.oid AS Eown_Oid, 
            T.etable_id AS Eown_EtableId, 
            T.etheir_id AS Eown_EtheirId, 
            T.code AS Eown_Code, 
            T.[value] AS Eown_Value, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.eowns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_names
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_names", @"
    SELECT VALUE -- Constructing medic_names
        [PostgresModel.Store.medic_name](T1.[medic_name.oid], T1.[medic_name.name], T1.[medic_name.lat_name], T1.[medic_name.code], T1.[medic_name.mnninteg], T1.[medic_name.mnntrade])
    FROM (
        SELECT 
            T.Oid AS [medic_name.oid], 
            T.Name AS [medic_name.name], 
            T.LatName AS [medic_name.lat_name], 
            T.Code AS [medic_name.code], 
            T.Mnninteg AS [medic_name.mnninteg], 
            T.Mnntrade AS [medic_name.mnntrade], 
            True AS _from0
        FROM PostgresEntities.MedicNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1257()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicNames", @"
    SELECT VALUE -- Constructing MedicNames
        [PostgresModel.MedicName](T1.MedicName_Oid, T1.MedicName_Name, T1.MedicName_LatName, T1.MedicName_Code, T1.MedicName_Mnninteg, T1.MedicName_Mnntrade)
    FROM (
        SELECT 
            T.oid AS MedicName_Oid, 
            T.name AS MedicName_Name, 
            T.lat_name AS MedicName_LatName, 
            T.code AS MedicName_Code, 
            T.mnninteg AS MedicName_Mnninteg, 
            T.mnntrade AS MedicName_Mnntrade, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_names AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.recipe_sources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.recipe_sources", @"
    SELECT VALUE -- Constructing recipe_sources
        [PostgresModel.Store.recipe_source](T1.[recipe_source.oid], T1.[recipe_source.name])
    FROM (
        SELECT 
            T.Oid AS [recipe_source.oid], 
            T.Name AS [recipe_source.name], 
            True AS _from0
        FROM PostgresEntities.RecipeSources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.RecipeSources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.RecipeSources", @"
    SELECT VALUE -- Constructing RecipeSources
        [PostgresModel.RecipeSource](T1.RecipeSource_Oid, T1.RecipeSource_Name)
    FROM (
        SELECT 
            T.oid AS RecipeSource_Oid, 
            T.name AS RecipeSource_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.recipe_sources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vholidayreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1260()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vholidayreasons", @"
    SELECT VALUE -- Constructing vholidayreasons
        [PostgresModel.Store.vholidayreason](T1.vholidayreason_id, T1.vholidayreason_name)
    FROM (
        SELECT 
            T.Id AS vholidayreason_id, 
            T.Name AS vholidayreason_name, 
            True AS _from0
        FROM PostgresEntities.Vholidayreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Vholidayreasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1261()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Vholidayreasons", @"
    SELECT VALUE -- Constructing Vholidayreasons
        [PostgresModel.Vholidayreason](T1.Vholidayreason_Id, T1.Vholidayreason_Name)
    FROM (
        SELECT 
            T.id AS Vholidayreason_Id, 
            T.name AS Vholidayreason_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vholidayreasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.settings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1262()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.settings", @"
    SELECT VALUE -- Constructing settings
        [PostgresModel.Store.settings](T1.settings_oid, T1.settings_param, T1.settings_valuepar, T1.settings_description, T1.settings_settingstate, T1.settings_forall)
    FROM (
        SELECT 
            T.Oid AS settings_oid, 
            T.Param AS settings_param, 
            T.Valuepar AS settings_valuepar, 
            T.Description AS settings_description, 
            T.Settingstate AS settings_settingstate, 
            T.Forall AS settings_forall, 
            True AS _from0
        FROM PostgresEntities.Settings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Settings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Settings", @"
    SELECT VALUE -- Constructing Settings
        [PostgresModel.Setting](T1.Setting_Oid, T1.Setting_Param, T1.Setting_Valuepar, T1.Setting_Description, T1.Setting_Settingstate, T1.Setting_Forall)
    FROM (
        SELECT 
            T.oid AS Setting_Oid, 
            T.param AS Setting_Param, 
            T.valuepar AS Setting_Valuepar, 
            T.description AS Setting_Description, 
            T.settingstate AS Setting_Settingstate, 
            T.forall AS Setting_Forall, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.settings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.people_educations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.people_educations", @"
    SELECT VALUE -- Constructing people_educations
        [PostgresModel.Store.people_educations](T1.[people_educations.codeeducation], T1.[people_educations.codeeducationname], T1.[people_educations.educationoid], T1.[people_educations.people], T1.[people_educations.dateend], T1.[people_educations.specialities_name], T1.[people_educations.degree_name], T1.[people_educations.educationtype_name], T1.[people_educations.diplomaserie], T1.[people_educations.diplomanumber])
    FROM (
        SELECT 
            T.Codeeducation AS [people_educations.codeeducation], 
            T.Codeeducationname AS [people_educations.codeeducationname], 
            T.Educationoid AS [people_educations.educationoid], 
            T.People AS [people_educations.people], 
            T.Dateend AS [people_educations.dateend], 
            T.SpecialitiesName AS [people_educations.specialities_name], 
            T.DegreeName AS [people_educations.degree_name], 
            T.EducationtypeName AS [people_educations.educationtype_name], 
            T.Diplomaserie AS [people_educations.diplomaserie], 
            T.Diplomanumber AS [people_educations.diplomanumber], 
            True AS _from0
        FROM PostgresEntities.PeopleEducations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PeopleEducations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1265()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PeopleEducations", @"
    SELECT VALUE -- Constructing PeopleEducations
        [PostgresModel.PeopleEducation](T1.PeopleEducation_Codeeducation, T1.PeopleEducation_Codeeducationname, T1.PeopleEducation_Educationoid, T1.PeopleEducation_People, T1.PeopleEducation_Dateend, T1.PeopleEducation_SpecialitiesName, T1.PeopleEducation_DegreeName, T1.PeopleEducation_EducationtypeName, T1.PeopleEducation_Diplomaserie, T1.PeopleEducation_Diplomanumber)
    FROM (
        SELECT 
            T.codeeducation AS PeopleEducation_Codeeducation, 
            T.codeeducationname AS PeopleEducation_Codeeducationname, 
            T.educationoid AS PeopleEducation_Educationoid, 
            T.people AS PeopleEducation_People, 
            T.dateend AS PeopleEducation_Dateend, 
            T.specialities_name AS PeopleEducation_SpecialitiesName, 
            T.degree_name AS PeopleEducation_DegreeName, 
            T.educationtype_name AS PeopleEducation_EducationtypeName, 
            T.diplomaserie AS PeopleEducation_Diplomaserie, 
            T.diplomanumber AS PeopleEducation_Diplomanumber, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.people_educations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vregion_settings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1266()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vregion_settings", @"
    SELECT VALUE -- Constructing vregion_settings
        [PostgresModel.Store.vregion_settings](T1.[vregion_settings.kladr_id], T1.[vregion_settings.region_tz])
    FROM (
        SELECT 
            T.KladrId AS [vregion_settings.kladr_id], 
            T.RegionTz AS [vregion_settings.region_tz], 
            True AS _from0
        FROM PostgresEntities.VregionSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VregionSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1267()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VregionSettings", @"
    SELECT VALUE -- Constructing VregionSettings
        [PostgresModel.VregionSetting](T1.VregionSetting_KladrId, T1.VregionSetting_RegionTz)
    FROM (
        SELECT 
            T.kladr_id AS VregionSetting_KladrId, 
            T.region_tz AS VregionSetting_RegionTz, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vregion_settings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.email_buffers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.email_buffers", @"
    SELECT VALUE -- Constructing email_buffers
        [PostgresModel.Store.email_buffer](T1.[email_buffer.oid], T1.[email_buffer.text], T1.[email_buffer.status], T1.[email_buffer.date_create], T1.[email_buffer.date_sent], T1.[email_buffer.email_to], T1.[email_buffer.schedule])
    FROM (
        SELECT 
            T.Oid AS [email_buffer.oid], 
            T.Text AS [email_buffer.text], 
            T.Status AS [email_buffer.status], 
            T.DateCreate AS [email_buffer.date_create], 
            T.DateSent AS [email_buffer.date_sent], 
            T.EmailTo AS [email_buffer.email_to], 
            T.Schedule AS [email_buffer.schedule], 
            True AS _from0
        FROM PostgresEntities.EmailBuffers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EmailBuffers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1269()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EmailBuffers", @"
    SELECT VALUE -- Constructing EmailBuffers
        [PostgresModel.EmailBuffer](T1.EmailBuffer_Oid, T1.EmailBuffer_Text, T1.EmailBuffer_Status, T1.EmailBuffer_DateCreate, T1.EmailBuffer_DateSent, T1.EmailBuffer_EmailTo, T1.EmailBuffer_Schedule)
    FROM (
        SELECT 
            T.oid AS EmailBuffer_Oid, 
            T.text AS EmailBuffer_Text, 
            T.status AS EmailBuffer_Status, 
            T.date_create AS EmailBuffer_DateCreate, 
            T.date_sent AS EmailBuffer_DateSent, 
            T.email_to AS EmailBuffer_EmailTo, 
            T.schedule AS EmailBuffer_Schedule, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.email_buffers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.smslogstatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1270()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.smslogstatus", @"
    SELECT VALUE -- Constructing smslogstatus
        [PostgresModel.Store.smslogstatus](T1.smslogstatus_oid, T1.smslogstatus_smsst, T1.smslogstatus_dt, T1.[smslogstatus.oid_sms])
    FROM (
        SELECT 
            T.Oid AS smslogstatus_oid, 
            T.Smsst AS smslogstatus_smsst, 
            T.Dt AS smslogstatus_dt, 
            T.OidSms AS [smslogstatus.oid_sms], 
            True AS _from0
        FROM PostgresEntities.Smslogstatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Smslogstatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1271()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Smslogstatus", @"
    SELECT VALUE -- Constructing Smslogstatus
        [PostgresModel.Smslogstatu](T1.Smslogstatu_Oid, T1.Smslogstatu_Smsst, T1.Smslogstatu_Dt, T1.Smslogstatu_OidSms)
    FROM (
        SELECT 
            T.oid AS Smslogstatu_Oid, 
            T.smsst AS Smslogstatu_Smsst, 
            T.dt AS Smslogstatu_Dt, 
            T.oid_sms AS Smslogstatu_OidSms, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.smslogstatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.email_states
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.email_states", @"
    SELECT VALUE -- Constructing email_states
        [PostgresModel.Store.email_state](T1.[email_state.status], T1.[email_state.id])
    FROM (
        SELECT 
            T.Status AS [email_state.status], 
            T.Id AS [email_state.id], 
            True AS _from0
        FROM PostgresEntities.EmailStates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.EmailStates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.EmailStates", @"
    SELECT VALUE -- Constructing EmailStates
        [PostgresModel.EmailState](T1.EmailState_Status, T1.EmailState_Id)
    FROM (
        SELECT 
            T.status AS EmailState_Status, 
            T.id AS EmailState_Id, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.email_states AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.foms_logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.foms_logs", @"
    SELECT VALUE -- Constructing foms_logs
        [PostgresModel.Store.foms_log](T1.[foms_log.oid], T1.[foms_log.foms_title], T1.[foms_log.log_text], T1.[foms_log.sysdate], T1.[foms_log.log_status])
    FROM (
        SELECT 
            T.Oid AS [foms_log.oid], 
            T.FomsTitle AS [foms_log.foms_title], 
            T.LogText AS [foms_log.log_text], 
            T.Sysdate AS [foms_log.sysdate], 
            T.LogStatus AS [foms_log.log_status], 
            True AS _from0
        FROM PostgresEntities.FomsLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.foms_titles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.foms_titles", "\r\n    SELECT VALUE -- Constructing foms_titles\r\n        [PostgresModel.Store.foms" +
                    "_title](T1.[foms_title.oid], T1.[foms_title.datebegin], T1.[foms_title.dateend]," +
                    " T1.[foms_title.lpu], T1.[foms_title.kladr_code], T1.[foms_title.synonym], T1.[f" +
                    "oms_title.pathexport], T1.[foms_title.host], T1.[foms_title.sysdate], T1.[foms_t" +
                    "itle.description], T1.[foms_title.foms_type], T1.[foms_title.status], T1.[foms_t" +
                    "itle.period_code], T1.[foms_title.package_number], T1.[foms_title.username], T1." +
                    "[foms_title.account_number], T1.[foms_title.account_date], T1.[foms_title.task_i" +
                    "nfo])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [foms_title.oid], \r\n   " +
                    "         T.Datebegin AS [foms_title.datebegin], \r\n            T.Dateend AS [foms" +
                    "_title.dateend], \r\n            T.Lpu AS [foms_title.lpu], \r\n            T.KladrC" +
                    "ode AS [foms_title.kladr_code], \r\n            T.Synonym AS [foms_title.synonym]," +
                    " \r\n            T.Pathexport AS [foms_title.pathexport], \r\n            T.Host AS " +
                    "[foms_title.host], \r\n            T.Sysdate AS [foms_title.sysdate], \r\n          " +
                    "  T.Description AS [foms_title.description], \r\n            T.FomsType AS [foms_t" +
                    "itle.foms_type], \r\n            T.Status AS [foms_title.status], \r\n            T." +
                    "PeriodCode AS [foms_title.period_code], \r\n            T.PackageNumber AS [foms_t" +
                    "itle.package_number], \r\n            T.Username AS [foms_title.username], \r\n     " +
                    "       T.AccountNumber AS [foms_title.account_number], \r\n            T.AccountDa" +
                    "te AS [foms_title.account_date], \r\n            T.TaskInfo AS [foms_title.task_in" +
                    "fo], \r\n            True AS _from0\r\n        FROM PostgresEntities.FomsTitles AS T" +
                    "\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.foms_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.foms_types", @"
    SELECT VALUE -- Constructing foms_types
        [PostgresModel.Store.foms_type](T1.[foms_type.oid], T1.[foms_type.fomstypename], T1.[foms_type.description], T1.[foms_type.active], T1.[foms_type.typecode])
    FROM (
        SELECT 
            T.Oid AS [foms_type.oid], 
            T.Fomstypename AS [foms_type.fomstypename], 
            T.Description AS [foms_type.description], 
            T.Active AS [foms_type.active], 
            T.Typecode AS [foms_type.typecode], 
            True AS _from0
        FROM PostgresEntities.FomsTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.foms_dbfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1277()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.foms_dbfs", @"
    SELECT VALUE -- Constructing foms_dbfs
        [PostgresModel.Store.foms_dbf](T1.[foms_dbf.dbf_filename], T1.[foms_dbf.foms_type], T1.[foms_dbf.dbf_filename_parent], T1.[foms_dbf.package_name])
    FROM (
        SELECT 
            T.DbfFilename AS [foms_dbf.dbf_filename], 
            T.FomsType AS [foms_dbf.foms_type], 
            T.DbfFilenameParent AS [foms_dbf.dbf_filename_parent], 
            T.PackageName AS [foms_dbf.package_name], 
            True AS _from0
        FROM PostgresEntities.FomsDbfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.foms_upload_tmps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1278()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4694);
            viewString.Append("\r\n    SELECT VALUE -- Constructing foms_upload_tmps\r\n        [PostgresModel.Stor");
            viewString.Append("e.foms_upload_tmp](T1.[foms_upload_tmp.oid], T1.[foms_upload_tmp.foms_title], T1");
            viewString.Append(".[foms_upload_tmp.ambticket_id], T1.[foms_upload_tmp.visit_id], T1.[foms_upload_");
            viewString.Append("tmp.empo_id], T1.[foms_upload_tmp.empc_id], T1.[foms_upload_tmp.servplace_id], T");
            viewString.Append("1.[foms_upload_tmp.goal_id], T1.[foms_upload_tmp.travm_id], T1.[foms_upload_tmp.");
            viewString.Append("idoc_id], T1.[foms_upload_tmp.result_id], T1.[foms_upload_tmp.empcancel_id], T1.");
            viewString.Append("[foms_upload_tmp.cancel_date], T1.[foms_upload_tmp.status_id], T1.[foms_upload_t");
            viewString.Append("mp.refer_id], T1.[foms_upload_tmp.travm_date], T1.[foms_upload_tmp.dispstate_id]");
            viewString.Append(", T1.[foms_upload_tmp.subresult_id], T1.[foms_upload_tmp.med_help_id], T1.[foms_");
            viewString.Append("upload_tmp.refer_num], T1.[foms_upload_tmp.refer_date], T1.[foms_upload_tmp.begi");
            viewString.Append("nv], T1.[foms_upload_tmp.endv], T1.[foms_upload_tmp.mdoc_id], T1.[foms_upload_tm");
            viewString.Append("p.pay_type], T1.[foms_upload_tmp.pay_method], T1.[foms_upload_tmp.addr_id], T1.[");
            viewString.Append("foms_upload_tmp.visit_state], T1.[foms_upload_tmp.sotr_id], T1.[foms_upload_tmp.");
            viewString.Append("presc_id], T1.[foms_upload_tmp.presctype_id], T1.[foms_upload_tmp.create_dt], T1");
            viewString.Append(".[foms_upload_tmp.prunbeg_dt], T1.[foms_upload_tmp.runbeg_dt], T1.[foms_upload_t");
            viewString.Append("mp.runend_dt], T1.[foms_upload_tmp.presc_state_id], T1.[foms_upload_tmp.cabinet_");
            viewString.Append("id], T1.[foms_upload_tmp.runemp_id], T1.[foms_upload_tmp.creator_id], T1.[foms_u");
            viewString.Append("pload_tmp.prunend_dt], T1.[foms_upload_tmp.presc_time_id], T1.[foms_upload_tmp.p");
            viewString.Append("arent_id], T1.[foms_upload_tmp.sign_dt], T1.[foms_upload_tmp.order_num], T1.[fom");
            viewString.Append("s_upload_tmp.order_add], T1.[foms_upload_tmp.appendix_id], T1.[foms_upload_tmp.o");
            viewString.Append("tdel_oid], T1.[foms_upload_tmp.lpu_oid], T1.[foms_upload_tmp.stationar], T1.[fom");
            viewString.Append("s_upload_tmp.service_oid])\r\n    FROM (\r\n        SELECT \r\n            T.Oid AS [f");
            viewString.Append("oms_upload_tmp.oid], \r\n            T.FomsTitle AS [foms_upload_tmp.foms_title], ");
            viewString.Append("\r\n            T.AmbticketId AS [foms_upload_tmp.ambticket_id], \r\n            T.V");
            viewString.Append("isitId AS [foms_upload_tmp.visit_id], \r\n            T.EmpoId AS [foms_upload_tmp");
            viewString.Append(".empo_id], \r\n            T.EmpcId AS [foms_upload_tmp.empc_id], \r\n            T.");
            viewString.Append("ServplaceId AS [foms_upload_tmp.servplace_id], \r\n            T.GoalId AS [foms_u");
            viewString.Append("pload_tmp.goal_id], \r\n            T.TravmId AS [foms_upload_tmp.travm_id], \r\n   ");
            viewString.Append("         T.IdocId AS [foms_upload_tmp.idoc_id], \r\n            T.ResultId AS [fom");
            viewString.Append("s_upload_tmp.result_id], \r\n            T.EmpcancelId AS [foms_upload_tmp.empcanc");
            viewString.Append("el_id], \r\n            T.CancelDate AS [foms_upload_tmp.cancel_date], \r\n         ");
            viewString.Append("   T.StatusId AS [foms_upload_tmp.status_id], \r\n            T.ReferId AS [foms_u");
            viewString.Append("pload_tmp.refer_id], \r\n            T.TravmDate AS [foms_upload_tmp.travm_date], ");
            viewString.Append("\r\n            T.DispstateId AS [foms_upload_tmp.dispstate_id], \r\n            T.S");
            viewString.Append("ubresultId AS [foms_upload_tmp.subresult_id], \r\n            T.MedHelpId AS [foms");
            viewString.Append("_upload_tmp.med_help_id], \r\n            T.ReferNum AS [foms_upload_tmp.refer_num");
            viewString.Append("], \r\n            T.ReferDate AS [foms_upload_tmp.refer_date], \r\n            T.Be");
            viewString.Append("ginv AS [foms_upload_tmp.beginv], \r\n            T.Endv AS [foms_upload_tmp.endv]");
            viewString.Append(", \r\n            T.MdocId AS [foms_upload_tmp.mdoc_id], \r\n            T.PayType A");
            viewString.Append("S [foms_upload_tmp.pay_type], \r\n            T.PayMethod AS [foms_upload_tmp.pay_");
            viewString.Append("method], \r\n            T.AddrId AS [foms_upload_tmp.addr_id], \r\n            T.Vi");
            viewString.Append("sitState AS [foms_upload_tmp.visit_state], \r\n            T.SotrId AS [foms_uploa");
            viewString.Append("d_tmp.sotr_id], \r\n            T.PrescId AS [foms_upload_tmp.presc_id], \r\n       ");
            viewString.Append("     T.PresctypeId AS [foms_upload_tmp.presctype_id], \r\n            T.CreateDt A");
            viewString.Append("S [foms_upload_tmp.create_dt], \r\n            T.PrunbegDt AS [foms_upload_tmp.pru");
            viewString.Append("nbeg_dt], \r\n            T.RunbegDt AS [foms_upload_tmp.runbeg_dt], \r\n           ");
            viewString.Append(" T.RunendDt AS [foms_upload_tmp.runend_dt], \r\n            T.PrescStateId AS [fom");
            viewString.Append("s_upload_tmp.presc_state_id], \r\n            T.CabinetId AS [foms_upload_tmp.cabi");
            viewString.Append("net_id], \r\n            T.RunempId AS [foms_upload_tmp.runemp_id], \r\n            ");
            viewString.Append("T.CreatorId AS [foms_upload_tmp.creator_id], \r\n            T.PrunendDt AS [foms_");
            viewString.Append("upload_tmp.prunend_dt], \r\n            T.PrescTimeId AS [foms_upload_tmp.presc_ti");
            viewString.Append("me_id], \r\n            T.ParentId AS [foms_upload_tmp.parent_id], \r\n            T");
            viewString.Append(".SignDt AS [foms_upload_tmp.sign_dt], \r\n            T.OrderNum AS [foms_upload_t");
            viewString.Append("mp.order_num], \r\n            T.OrderAdd AS [foms_upload_tmp.order_add], \r\n      ");
            viewString.Append("      T.AppendixId AS [foms_upload_tmp.appendix_id], \r\n            T.OtdelOid AS");
            viewString.Append(" [foms_upload_tmp.otdel_oid], \r\n            T.LpuOid AS [foms_upload_tmp.lpu_oid");
            viewString.Append("], \r\n            T.Stationar AS [foms_upload_tmp.stationar], \r\n            T.Ser");
            viewString.Append("viceOid AS [foms_upload_tmp.service_oid], \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM PostgresEntities.FomsUploadTmps AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.foms_upload_tmps", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FomsLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FomsLogs", @"
    SELECT VALUE -- Constructing FomsLogs
        [PostgresModel.FomsLog](T1.FomsLog_Oid, T1.FomsLog_FomsTitle, T1.FomsLog_LogText, T1.FomsLog_Sysdate, T1.FomsLog_LogStatus)
    FROM (
        SELECT 
            T.oid AS FomsLog_Oid, 
            T.foms_title AS FomsLog_FomsTitle, 
            T.log_text AS FomsLog_LogText, 
            T.sysdate AS FomsLog_Sysdate, 
            T.log_status AS FomsLog_LogStatus, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.foms_logs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FomsTitles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FomsTitles", "\r\n    SELECT VALUE -- Constructing FomsTitles\r\n        [PostgresModel.FomsTitle](" +
                    "T1.FomsTitle_Oid, T1.FomsTitle_Datebegin, T1.FomsTitle_Dateend, T1.FomsTitle_Lpu" +
                    ", T1.FomsTitle_KladrCode, T1.FomsTitle_Synonym, T1.FomsTitle_Pathexport, T1.Foms" +
                    "Title_Host, T1.FomsTitle_Sysdate, T1.FomsTitle_Description, T1.FomsTitle_FomsTyp" +
                    "e, T1.FomsTitle_Status, T1.FomsTitle_PeriodCode, T1.FomsTitle_PackageNumber, T1." +
                    "FomsTitle_Username, T1.FomsTitle_AccountNumber, T1.FomsTitle_AccountDate, T1.Fom" +
                    "sTitle_TaskInfo)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS FomsTitle_Oi" +
                    "d, \r\n            T.datebegin AS FomsTitle_Datebegin, \r\n            T.dateend AS " +
                    "FomsTitle_Dateend, \r\n            T.lpu AS FomsTitle_Lpu, \r\n            T.kladr_c" +
                    "ode AS FomsTitle_KladrCode, \r\n            T.synonym AS FomsTitle_Synonym, \r\n    " +
                    "        T.pathexport AS FomsTitle_Pathexport, \r\n            T.host AS FomsTitle_" +
                    "Host, \r\n            T.sysdate AS FomsTitle_Sysdate, \r\n            T.description " +
                    "AS FomsTitle_Description, \r\n            T.foms_type AS FomsTitle_FomsType, \r\n   " +
                    "         T.status AS FomsTitle_Status, \r\n            T.period_code AS FomsTitle_" +
                    "PeriodCode, \r\n            T.package_number AS FomsTitle_PackageNumber, \r\n       " +
                    "     T.username AS FomsTitle_Username, \r\n            T.account_number AS FomsTit" +
                    "le_AccountNumber, \r\n            T.account_date AS FomsTitle_AccountDate, \r\n     " +
                    "       T.task_info AS FomsTitle_TaskInfo, \r\n            True AS _from0\r\n        " +
                    "FROM PostgresEntitiesStoreContainer.foms_titles AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FomsTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1281()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FomsTypes", @"
    SELECT VALUE -- Constructing FomsTypes
        [PostgresModel.FomsType](T1.FomsType_Oid, T1.FomsType_Fomstypename, T1.FomsType_Description, T1.FomsType_Active, T1.FomsType_Typecode)
    FROM (
        SELECT 
            T.oid AS FomsType_Oid, 
            T.fomstypename AS FomsType_Fomstypename, 
            T.description AS FomsType_Description, 
            T.active AS FomsType_Active, 
            T.typecode AS FomsType_Typecode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.foms_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FomsDbfs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1282()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FomsDbfs", @"
    SELECT VALUE -- Constructing FomsDbfs
        [PostgresModel.FomsDbf](T1.FomsDbf_DbfFilename, T1.FomsDbf_FomsType, T1.FomsDbf_DbfFilenameParent, T1.FomsDbf_PackageName)
    FROM (
        SELECT 
            T.dbf_filename AS FomsDbf_DbfFilename, 
            T.foms_type AS FomsDbf_FomsType, 
            T.dbf_filename_parent AS FomsDbf_DbfFilenameParent, 
            T.package_name AS FomsDbf_PackageName, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.foms_dbfs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FomsUploadTmps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1283()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4251);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FomsUploadTmps\r\n        [PostgresModel.FomsUp");
            viewString.Append("loadTmp](T1.FomsUploadTmp_Oid, T1.FomsUploadTmp_FomsTitle, T1.FomsUploadTmp_Ambt");
            viewString.Append("icketId, T1.FomsUploadTmp_VisitId, T1.FomsUploadTmp_EmpoId, T1.FomsUploadTmp_Emp");
            viewString.Append("cId, T1.FomsUploadTmp_ServplaceId, T1.FomsUploadTmp_GoalId, T1.FomsUploadTmp_Tra");
            viewString.Append("vmId, T1.FomsUploadTmp_IdocId, T1.FomsUploadTmp_ResultId, T1.FomsUploadTmp_Empca");
            viewString.Append("ncelId, T1.FomsUploadTmp_CancelDate, T1.FomsUploadTmp_StatusId, T1.FomsUploadTmp");
            viewString.Append("_ReferId, T1.FomsUploadTmp_TravmDate, T1.FomsUploadTmp_DispstateId, T1.FomsUploa");
            viewString.Append("dTmp_SubresultId, T1.FomsUploadTmp_MedHelpId, T1.FomsUploadTmp_ReferNum, T1.Foms");
            viewString.Append("UploadTmp_ReferDate, T1.FomsUploadTmp_Beginv, T1.FomsUploadTmp_Endv, T1.FomsUplo");
            viewString.Append("adTmp_MdocId, T1.FomsUploadTmp_PayType, T1.FomsUploadTmp_PayMethod, T1.FomsUploa");
            viewString.Append("dTmp_AddrId, T1.FomsUploadTmp_VisitState, T1.FomsUploadTmp_SotrId, T1.FomsUpload");
            viewString.Append("Tmp_PrescId, T1.FomsUploadTmp_PresctypeId, T1.FomsUploadTmp_CreateDt, T1.FomsUpl");
            viewString.Append("oadTmp_PrunbegDt, T1.FomsUploadTmp_RunbegDt, T1.FomsUploadTmp_RunendDt, T1.FomsU");
            viewString.Append("ploadTmp_PrescStateId, T1.FomsUploadTmp_CabinetId, T1.FomsUploadTmp_RunempId, T1");
            viewString.Append(".FomsUploadTmp_CreatorId, T1.FomsUploadTmp_PrunendDt, T1.FomsUploadTmp_PrescTime");
            viewString.Append("Id, T1.FomsUploadTmp_ParentId, T1.FomsUploadTmp_SignDt, T1.FomsUploadTmp_OrderNu");
            viewString.Append("m, T1.FomsUploadTmp_OrderAdd, T1.FomsUploadTmp_AppendixId, T1.FomsUploadTmp_Otde");
            viewString.Append("lOid, T1.FomsUploadTmp_LpuOid, T1.FomsUploadTmp_Stationar, T1.FomsUploadTmp_Serv");
            viewString.Append("iceOid)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS FomsUploadTmp_Oid, \r\n");
            viewString.Append("            T.foms_title AS FomsUploadTmp_FomsTitle, \r\n            T.ambticket_i");
            viewString.Append("d AS FomsUploadTmp_AmbticketId, \r\n            T.visit_id AS FomsUploadTmp_VisitI");
            viewString.Append("d, \r\n            T.empo_id AS FomsUploadTmp_EmpoId, \r\n            T.empc_id AS F");
            viewString.Append("omsUploadTmp_EmpcId, \r\n            T.servplace_id AS FomsUploadTmp_ServplaceId, ");
            viewString.Append("\r\n            T.goal_id AS FomsUploadTmp_GoalId, \r\n            T.travm_id AS Fom");
            viewString.Append("sUploadTmp_TravmId, \r\n            T.idoc_id AS FomsUploadTmp_IdocId, \r\n         ");
            viewString.Append("   T.result_id AS FomsUploadTmp_ResultId, \r\n            T.empcancel_id AS FomsUp");
            viewString.Append("loadTmp_EmpcancelId, \r\n            T.cancel_date AS FomsUploadTmp_CancelDate, \r\n");
            viewString.Append("            T.status_id AS FomsUploadTmp_StatusId, \r\n            T.refer_id AS F");
            viewString.Append("omsUploadTmp_ReferId, \r\n            T.travm_date AS FomsUploadTmp_TravmDate, \r\n ");
            viewString.Append("           T.dispstate_id AS FomsUploadTmp_DispstateId, \r\n            T.subresul");
            viewString.Append("t_id AS FomsUploadTmp_SubresultId, \r\n            T.med_help_id AS FomsUploadTmp_");
            viewString.Append("MedHelpId, \r\n            T.refer_num AS FomsUploadTmp_ReferNum, \r\n            T.");
            viewString.Append("refer_date AS FomsUploadTmp_ReferDate, \r\n            T.beginv AS FomsUploadTmp_B");
            viewString.Append("eginv, \r\n            T.endv AS FomsUploadTmp_Endv, \r\n            T.mdoc_id AS Fo");
            viewString.Append("msUploadTmp_MdocId, \r\n            T.pay_type AS FomsUploadTmp_PayType, \r\n       ");
            viewString.Append("     T.pay_method AS FomsUploadTmp_PayMethod, \r\n            T.addr_id AS FomsUpl");
            viewString.Append("oadTmp_AddrId, \r\n            T.visit_state AS FomsUploadTmp_VisitState, \r\n      ");
            viewString.Append("      T.sotr_id AS FomsUploadTmp_SotrId, \r\n            T.presc_id AS FomsUploadT");
            viewString.Append("mp_PrescId, \r\n            T.presctype_id AS FomsUploadTmp_PresctypeId, \r\n       ");
            viewString.Append("     T.create_dt AS FomsUploadTmp_CreateDt, \r\n            T.prunbeg_dt AS FomsUp");
            viewString.Append("loadTmp_PrunbegDt, \r\n            T.runbeg_dt AS FomsUploadTmp_RunbegDt, \r\n      ");
            viewString.Append("      T.runend_dt AS FomsUploadTmp_RunendDt, \r\n            T.presc_state_id AS F");
            viewString.Append("omsUploadTmp_PrescStateId, \r\n            T.cabinet_id AS FomsUploadTmp_CabinetId");
            viewString.Append(", \r\n            T.runemp_id AS FomsUploadTmp_RunempId, \r\n            T.creator_i");
            viewString.Append("d AS FomsUploadTmp_CreatorId, \r\n            T.prunend_dt AS FomsUploadTmp_Prunen");
            viewString.Append("dDt, \r\n            T.presc_time_id AS FomsUploadTmp_PrescTimeId, \r\n            T");
            viewString.Append(".parent_id AS FomsUploadTmp_ParentId, \r\n            T.sign_dt AS FomsUploadTmp_S");
            viewString.Append("ignDt, \r\n            T.order_num AS FomsUploadTmp_OrderNum, \r\n            T.orde");
            viewString.Append("r_add AS FomsUploadTmp_OrderAdd, \r\n            T.appendix_id AS FomsUploadTmp_Ap");
            viewString.Append("pendixId, \r\n            T.otdel_oid AS FomsUploadTmp_OtdelOid, \r\n            T.l");
            viewString.Append("pu_oid AS FomsUploadTmp_LpuOid, \r\n            T.stationar AS FomsUploadTmp_Stati");
            viewString.Append("onar, \r\n            T.service_oid AS FomsUploadTmp_ServiceOid, \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM PostgresEntitiesStoreContainer.foms_upload_tmps AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FomsUploadTmps", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.protocol_templates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1284()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.protocol_templates", @"
    SELECT VALUE -- Constructing protocol_templates
        [PostgresModel.Store.protocol_template](T1.[protocol_template.oid], T1.[protocol_template.parent], T1.[protocol_template.name], T1.[protocol_template.type], T1.[protocol_template.required_fl])
    FROM (
        SELECT 
            T.Oid AS [protocol_template.oid], 
            T.Parent AS [protocol_template.parent], 
            T.Name AS [protocol_template.name], 
            T.Type AS [protocol_template.type], 
            T.RequiredFl AS [protocol_template.required_fl], 
            True AS _from0
        FROM PostgresEntities.ProtocolTemplates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProtocolTemplates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProtocolTemplates", @"
    SELECT VALUE -- Constructing ProtocolTemplates
        [PostgresModel.ProtocolTemplate](T1.ProtocolTemplate_Oid, T1.ProtocolTemplate_Parent, T1.ProtocolTemplate_Name, T1.ProtocolTemplate_Type, T1.ProtocolTemplate_RequiredFl)
    FROM (
        SELECT 
            T.oid AS ProtocolTemplate_Oid, 
            T.parent AS ProtocolTemplate_Parent, 
            T.name AS ProtocolTemplate_Name, 
            T.type AS ProtocolTemplate_Type, 
            T.required_fl AS ProtocolTemplate_RequiredFl, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.protocol_templates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.calc_income_outlays
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.calc_income_outlays", @"
    SELECT VALUE -- Constructing calc_income_outlays
        [PostgresModel.Store.calc_income_outlay](T1.[calc_income_outlay.kartid], T1.[calc_income_outlay.kol], T1.[calc_income_outlay.date], T1.[calc_income_outlay.mogroup], T1.[calc_income_outlay.dpoid], T1.[calc_income_outlay.position_doc], T1.[calc_income_outlay.rezerv_dpcoid], T1.[calc_income_outlay.vid], T1.[calc_income_outlay.voidmove], T1.[calc_income_outlay.docs], T1.[calc_income_outlay.ins_date], T1.[calc_income_outlay.mo_ins])
    FROM (
        SELECT 
            T.Kartid AS [calc_income_outlay.kartid], 
            T.Kol AS [calc_income_outlay.kol], 
            T.Date AS [calc_income_outlay.date], 
            T.Mogroup AS [calc_income_outlay.mogroup], 
            T.Dpoid AS [calc_income_outlay.dpoid], 
            T.PositionDoc AS [calc_income_outlay.position_doc], 
            T.RezervDpcoid AS [calc_income_outlay.rezerv_dpcoid], 
            T.Vid AS [calc_income_outlay.vid], 
            T.Voidmove AS [calc_income_outlay.voidmove], 
            T.Docs AS [calc_income_outlay.docs], 
            T.InsDate AS [calc_income_outlay.ins_date], 
            T.MoIns AS [calc_income_outlay.mo_ins], 
            True AS _from0
        FROM PostgresEntities.CalcIncomeOutlays AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CalcIncomeOutlays
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CalcIncomeOutlays", @"
    SELECT VALUE -- Constructing CalcIncomeOutlays
        [PostgresModel.CalcIncomeOutlay](T1.CalcIncomeOutlay_Kartid, T1.CalcIncomeOutlay_Kol, T1.CalcIncomeOutlay_Date, T1.CalcIncomeOutlay_Mogroup, T1.CalcIncomeOutlay_Dpoid, T1.CalcIncomeOutlay_PositionDoc, T1.CalcIncomeOutlay_RezervDpcoid, T1.CalcIncomeOutlay_Vid, T1.CalcIncomeOutlay_Voidmove, T1.CalcIncomeOutlay_Docs, T1.CalcIncomeOutlay_InsDate, T1.CalcIncomeOutlay_MoIns)
    FROM (
        SELECT 
            T.kartid AS CalcIncomeOutlay_Kartid, 
            T.kol AS CalcIncomeOutlay_Kol, 
            T.date AS CalcIncomeOutlay_Date, 
            T.mogroup AS CalcIncomeOutlay_Mogroup, 
            T.dpoid AS CalcIncomeOutlay_Dpoid, 
            T.position_doc AS CalcIncomeOutlay_PositionDoc, 
            T.rezerv_dpcoid AS CalcIncomeOutlay_RezervDpcoid, 
            T.vid AS CalcIncomeOutlay_Vid, 
            T.voidmove AS CalcIncomeOutlay_Voidmove, 
            T.docs AS CalcIncomeOutlay_Docs, 
            T.ins_date AS CalcIncomeOutlay_InsDate, 
            T.mo_ins AS CalcIncomeOutlay_MoIns, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.calc_income_outlays AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.accountgrtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1288()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.accountgrtypes", @"
    SELECT VALUE -- Constructing accountgrtypes
        [PostgresModel.Store.accountgrtype](T1.accountgrtype_oid, T1.accountgrtype_name)
    FROM (
        SELECT 
            T.Oid AS accountgrtype_oid, 
            T.Name AS accountgrtype_name, 
            True AS _from0
        FROM PostgresEntities.Accountgrtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Accountgrtypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Accountgrtypes", @"
    SELECT VALUE -- Constructing Accountgrtypes
        [PostgresModel.Accountgrtype](T1.Accountgrtype_Oid, T1.Accountgrtype_Name)
    FROM (
        SELECT 
            T.oid AS Accountgrtype_Oid, 
            T.name AS Accountgrtype_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.accountgrtypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.dates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.dates", @"
    SELECT VALUE -- Constructing dates
        [PostgresModel.Store.date](T1.date_data1, T1.date_data2, T1.date_oid, T1.date_datespy)
    FROM (
        SELECT 
            T.Data1 AS date_data1, 
            T.Data2 AS date_data2, 
            T.Oid AS date_oid, 
            T.Datespy AS date_datespy, 
            True AS _from0
        FROM PostgresEntities.Dates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Dates
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Dates", @"
    SELECT VALUE -- Constructing Dates
        [PostgresModel.Date](T1.Date_Data1, T1.Date_Data2, T1.Date_Oid, T1.Date_Datespy)
    FROM (
        SELECT 
            T.data1 AS Date_Data1, 
            T.data2 AS Date_Data2, 
            T.oid AS Date_Oid, 
            T.datespy AS Date_Datespy, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.dates AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.date_tmps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1292()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.date_tmps", @"
    SELECT VALUE -- Constructing date_tmps
        [PostgresModel.Store.date_tmp](T1.[date_tmp.data1], T1.[date_tmp.data2], T1.[date_tmp.oid], T1.[date_tmp.datespy])
    FROM (
        SELECT 
            T.Data1 AS [date_tmp.data1], 
            T.Data2 AS [date_tmp.data2], 
            T.Oid AS [date_tmp.oid], 
            T.Datespy AS [date_tmp.datespy], 
            True AS _from0
        FROM PostgresEntities.DateTmps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DateTmps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1293()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DateTmps", @"
    SELECT VALUE -- Constructing DateTmps
        [PostgresModel.DateTmp](T1.DateTmp_Data1, T1.DateTmp_Data2, T1.DateTmp_Oid, T1.DateTmp_Datespy)
    FROM (
        SELECT 
            T.data1 AS DateTmp_Data1, 
            T.data2 AS DateTmp_Data2, 
            T.oid AS DateTmp_Oid, 
            T.datespy AS DateTmp_Datespy, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.date_tmps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.debugs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.debugs", @"
    SELECT VALUE -- Constructing debugs
        [PostgresModel.Store.debug](T1.debug_type, T1.debug_date, T1.debug_module, T1.debug_text)
    FROM (
        SELECT 
            T.Type AS debug_type, 
            T.Date AS debug_date, 
            T.Module AS debug_module, 
            T.Text AS debug_text, 
            True AS _from0
        FROM PostgresEntities.Debugs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Debugs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Debugs", @"
    SELECT VALUE -- Constructing Debugs
        [PostgresModel.Debug](T1.Debug_Type, T1.Debug_Date, T1.Debug_Module, T1.Debug_Text)
    FROM (
        SELECT 
            T.type AS Debug_Type, 
            T.date AS Debug_Date, 
            T.module AS Debug_Module, 
            T.text AS Debug_Text, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.debugs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.docs_autonums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.docs_autonums", @"
    SELECT VALUE -- Constructing docs_autonums
        [PostgresModel.Store.docs_autonum](T1.[docs_autonum.oid], T1.[docs_autonum.docs_autonum_counter], T1.[docs_autonum.start], T1.[docs_autonum.vid], T1.[docs_autonum.vidmove], T1.[docs_autonum.mogroup], T1.[docs_autonum.enabled], T1.[docs_autonum.type_autonum])
    FROM (
        SELECT 
            T.Oid AS [docs_autonum.oid], 
            T.DocsAutonumCounter AS [docs_autonum.docs_autonum_counter], 
            T.Start AS [docs_autonum.start], 
            T.Vid AS [docs_autonum.vid], 
            T.Vidmove AS [docs_autonum.vidmove], 
            T.Mogroup AS [docs_autonum.mogroup], 
            T.Enabled AS [docs_autonum.enabled], 
            T.TypeAutonum AS [docs_autonum.type_autonum], 
            True AS _from0
        FROM PostgresEntities.DocsAutonums AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DocsAutonums
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1297()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DocsAutonums", @"
    SELECT VALUE -- Constructing DocsAutonums
        [PostgresModel.DocsAutonum](T1.DocsAutonum_Oid, T1.DocsAutonum_DocsAutonumCounter, T1.DocsAutonum_Start, T1.DocsAutonum_Vid, T1.DocsAutonum_Vidmove, T1.DocsAutonum_Mogroup, T1.DocsAutonum_Enabled, T1.DocsAutonum_TypeAutonum)
    FROM (
        SELECT 
            T.oid AS DocsAutonum_Oid, 
            T.docs_autonum_counter AS DocsAutonum_DocsAutonumCounter, 
            T.start AS DocsAutonum_Start, 
            T.vid AS DocsAutonum_Vid, 
            T.vidmove AS DocsAutonum_Vidmove, 
            T.mogroup AS DocsAutonum_Mogroup, 
            T.enabled AS DocsAutonum_Enabled, 
            T.type_autonum AS DocsAutonum_TypeAutonum, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.docs_autonums AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.defect_meds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1298()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.defect_meds", @"
    SELECT VALUE -- Constructing defect_meds
        [PostgresModel.Store.defect_med](T1.[defect_med.oid], T1.[defect_med.drugtxt], T1.[defect_med.labnm], T1.[defect_med.letterdate], T1.[defect_med.letternr], T1.[defect_med.uniqstr], T1.[defect_med.mnfnm], T1.[defect_med.specnm], T1.[defect_med.flgfals], T1.[defect_med.seriesnr], T1.[defect_med.countryr], T1.[defect_med.flgallow], T1.[defect_med.allownr], T1.[defect_med.allowdate], T1.[defect_med.lettertype])
    FROM (
        SELECT 
            T.Oid AS [defect_med.oid], 
            T.Drugtxt AS [defect_med.drugtxt], 
            T.Labnm AS [defect_med.labnm], 
            T.Letterdate AS [defect_med.letterdate], 
            T.Letternr AS [defect_med.letternr], 
            T.Uniqstr AS [defect_med.uniqstr], 
            T.Mnfnm AS [defect_med.mnfnm], 
            T.Specnm AS [defect_med.specnm], 
            T.Flgfals AS [defect_med.flgfals], 
            T.Seriesnr AS [defect_med.seriesnr], 
            T.Countryr AS [defect_med.countryr], 
            T.Flgallow AS [defect_med.flgallow], 
            T.Allownr AS [defect_med.allownr], 
            T.Allowdate AS [defect_med.allowdate], 
            T.Lettertype AS [defect_med.lettertype], 
            True AS _from0
        FROM PostgresEntities.DefectMeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DefectMeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DefectMeds", @"
    SELECT VALUE -- Constructing DefectMeds
        [PostgresModel.DefectMed](T1.DefectMed_Oid, T1.DefectMed_Drugtxt, T1.DefectMed_Labnm, T1.DefectMed_Letterdate, T1.DefectMed_Letternr, T1.DefectMed_Uniqstr, T1.DefectMed_Mnfnm, T1.DefectMed_Specnm, T1.DefectMed_Flgfals, T1.DefectMed_Seriesnr, T1.DefectMed_Countryr, T1.DefectMed_Flgallow, T1.DefectMed_Allownr, T1.DefectMed_Allowdate, T1.DefectMed_Lettertype)
    FROM (
        SELECT 
            T.oid AS DefectMed_Oid, 
            T.drugtxt AS DefectMed_Drugtxt, 
            T.labnm AS DefectMed_Labnm, 
            T.letterdate AS DefectMed_Letterdate, 
            T.letternr AS DefectMed_Letternr, 
            T.uniqstr AS DefectMed_Uniqstr, 
            T.mnfnm AS DefectMed_Mnfnm, 
            T.specnm AS DefectMed_Specnm, 
            T.flgfals AS DefectMed_Flgfals, 
            T.seriesnr AS DefectMed_Seriesnr, 
            T.countryr AS DefectMed_Countryr, 
            T.flgallow AS DefectMed_Flgallow, 
            T.allownr AS DefectMed_Allownr, 
            T.allowdate AS DefectMed_Allowdate, 
            T.lettertype AS DefectMed_Lettertype, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.defect_meds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.docs_autonum_counters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.docs_autonum_counters", @"
    SELECT VALUE -- Constructing docs_autonum_counters
        [PostgresModel.Store.docs_autonum_counter](T1.[docs_autonum_counter.oid], T1.[docs_autonum_counter.startnum], T1.[docs_autonum_counter.curnum])
    FROM (
        SELECT 
            T.Oid AS [docs_autonum_counter.oid], 
            T.Startnum AS [docs_autonum_counter.startnum], 
            T.Curnum AS [docs_autonum_counter.curnum], 
            True AS _from0
        FROM PostgresEntities.DocsAutonumCounters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DocsAutonumCounters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DocsAutonumCounters", @"
    SELECT VALUE -- Constructing DocsAutonumCounters
        [PostgresModel.DocsAutonumCounter](T1.DocsAutonumCounter_Oid, T1.DocsAutonumCounter_Startnum, T1.DocsAutonumCounter_Curnum)
    FROM (
        SELECT 
            T.oid AS DocsAutonumCounter_Oid, 
            T.startnum AS DocsAutonumCounter_Startnum, 
            T.curnum AS DocsAutonumCounter_Curnum, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.docs_autonum_counters AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.formulars
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1302()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.formulars", @"
    SELECT VALUE -- Constructing formulars
        [PostgresModel.Store.formular](T1.formular_oid, T1.formular_date, T1.formular_year, T1.formular_summ)
    FROM (
        SELECT 
            T.Oid AS formular_oid, 
            T.Date AS formular_date, 
            T.Year AS formular_year, 
            T.Summ AS formular_summ, 
            True AS _from0
        FROM PostgresEntities.Formulars AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Formulars
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1303()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Formulars", @"
    SELECT VALUE -- Constructing Formulars
        [PostgresModel.Formular](T1.Formular_Oid, T1.Formular_Date, T1.Formular_Year, T1.Formular_Summ)
    FROM (
        SELECT 
            T.oid AS Formular_Oid, 
            T.date AS Formular_Date, 
            T.year AS Formular_Year, 
            T.summ AS Formular_Summ, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.formulars AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.formular_medics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.formular_medics", @"
    SELECT VALUE -- Constructing formular_medics
        [PostgresModel.Store.formular_medic](T1.[formular_medic.oid], T1.[formular_medic.formular], T1.[formular_medic.medic], T1.[formular_medic.ins], T1.[formular_medic.sotr_ins], T1.[formular_medic.sotr_edit], T1.[formular_medic.price], T1.[formular_medic.edit_date])
    FROM (
        SELECT 
            T.Oid AS [formular_medic.oid], 
            T.Formular AS [formular_medic.formular], 
            T.Medic AS [formular_medic.medic], 
            T.Ins AS [formular_medic.ins], 
            T.SotrIns AS [formular_medic.sotr_ins], 
            T.SotrEdit AS [formular_medic.sotr_edit], 
            T.Price AS [formular_medic.price], 
            T.EditDate AS [formular_medic.edit_date], 
            True AS _from0
        FROM PostgresEntities.FormularMedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FormularMedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FormularMedics", @"
    SELECT VALUE -- Constructing FormularMedics
        [PostgresModel.FormularMedic](T1.FormularMedic_Oid, T1.FormularMedic_Formular, T1.FormularMedic_Medic, T1.FormularMedic_Ins, T1.FormularMedic_SotrIns, T1.FormularMedic_SotrEdit, T1.FormularMedic_Price, T1.FormularMedic_EditDate)
    FROM (
        SELECT 
            T.oid AS FormularMedic_Oid, 
            T.formular AS FormularMedic_Formular, 
            T.medic AS FormularMedic_Medic, 
            T.ins AS FormularMedic_Ins, 
            T.sotr_ins AS FormularMedic_SotrIns, 
            T.sotr_edit AS FormularMedic_SotrEdit, 
            T.price AS FormularMedic_Price, 
            T.edit_date AS FormularMedic_EditDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.formular_medics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.formular_signs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1306()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.formular_signs", @"
    SELECT VALUE -- Constructing formular_signs
        [PostgresModel.Store.formular_sign](T1.[formular_sign.otdel], T1.[formular_sign.formular], T1.[formular_sign.sotr], T1.[formular_sign.level], T1.[formular_sign.sign], T1.[formular_sign.oid])
    FROM (
        SELECT 
            T.Otdel AS [formular_sign.otdel], 
            T.Formular AS [formular_sign.formular], 
            T.Sotr AS [formular_sign.sotr], 
            T.Level AS [formular_sign.level], 
            T.Sign AS [formular_sign.sign], 
            T.Oid AS [formular_sign.oid], 
            True AS _from0
        FROM PostgresEntities.FormularSigns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FormularSigns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FormularSigns", @"
    SELECT VALUE -- Constructing FormularSigns
        [PostgresModel.FormularSign](T1.FormularSign_Otdel, T1.FormularSign_Formular, T1.FormularSign_Sotr, T1.FormularSign_Level, T1.FormularSign_Sign, T1.FormularSign_Oid)
    FROM (
        SELECT 
            T.otdel AS FormularSign_Otdel, 
            T.formular AS FormularSign_Formular, 
            T.sotr AS FormularSign_Sotr, 
            T.level AS FormularSign_Level, 
            T.sign AS FormularSign_Sign, 
            T.oid AS FormularSign_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.formular_signs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.imp_docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1308()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2293);
            viewString.Append("\r\n    SELECT VALUE -- Constructing imp_docs\r\n        [PostgresModel.Store.imp_do");
            viewString.Append("c](T1.[imp_doc.oid], T1.[imp_doc.src_doc_num], T1.[imp_doc.src_doc_date], T1.[im");
            viewString.Append("p_doc.src_postav], T1.[imp_doc.src_vid_oplati], T1.[imp_doc.src_schet_faktura], ");
            viewString.Append("T1.[imp_doc.src_summa_s_nds], T1.[imp_doc.src_kolvo_pos], T1.[imp_doc.src_commen");
            viewString.Append("t], T1.[imp_doc.imp_filename], T1.[imp_doc.ins_date], T1.[imp_doc.edit_date], T1");
            viewString.Append(".[imp_doc.mo_ins], T1.[imp_doc.mo_edit], T1.[imp_doc.doc_date], T1.[imp_doc.supp");
            viewString.Append("lier], T1.[imp_doc.summ_nds], T1.[imp_doc.kolvo_pos], T1.[imp_doc.import], T1.[i");
            viewString.Append("mp_doc.src_kontrakt], T1.[imp_doc.check_dogovor], T1.[imp_doc.is_checked], T1.[i");
            viewString.Append("mp_doc.mo_checked], T1.[imp_doc.checked_date], T1.[imp_doc.spec_oid], T1.[imp_do");
            viewString.Append("c.doc_date_format], T1.[imp_doc.party_godnost_format])\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.Oid AS [imp_doc.oid], \r\n            T.SrcDocNum AS [imp_doc.s");
            viewString.Append("rc_doc_num], \r\n            T.SrcDocDate AS [imp_doc.src_doc_date], \r\n           ");
            viewString.Append(" T.SrcPostav AS [imp_doc.src_postav], \r\n            T.SrcVidOplati AS [imp_doc.s");
            viewString.Append("rc_vid_oplati], \r\n            T.SrcSchetFaktura AS [imp_doc.src_schet_faktura], ");
            viewString.Append("\r\n            T.SrcSummaSNds AS [imp_doc.src_summa_s_nds], \r\n            T.SrcKo");
            viewString.Append("lvoPos AS [imp_doc.src_kolvo_pos], \r\n            T.SrcComment AS [imp_doc.src_co");
            viewString.Append("mment], \r\n            T.ImpFilename AS [imp_doc.imp_filename], \r\n            T.I");
            viewString.Append("nsDate AS [imp_doc.ins_date], \r\n            T.EditDate AS [imp_doc.edit_date], \r");
            viewString.Append("\n            T.MoIns AS [imp_doc.mo_ins], \r\n            T.MoEdit AS [imp_doc.mo_");
            viewString.Append("edit], \r\n            T.DocDate AS [imp_doc.doc_date], \r\n            T.Supplier A");
            viewString.Append("S [imp_doc.supplier], \r\n            T.SummNds AS [imp_doc.summ_nds], \r\n         ");
            viewString.Append("   T.KolvoPos AS [imp_doc.kolvo_pos], \r\n            T.Import AS [imp_doc.import]");
            viewString.Append(", \r\n            T.SrcKontrakt AS [imp_doc.src_kontrakt], \r\n            T.CheckDo");
            viewString.Append("govor AS [imp_doc.check_dogovor], \r\n            T.IsChecked AS [imp_doc.is_check");
            viewString.Append("ed], \r\n            T.MoChecked AS [imp_doc.mo_checked], \r\n            T.CheckedD");
            viewString.Append("ate AS [imp_doc.checked_date], \r\n            T.SpecOid AS [imp_doc.spec_oid], \r\n");
            viewString.Append("            T.DocDateFormat AS [imp_doc.doc_date_format], \r\n            T.PartyG");
            viewString.Append("odnostFormat AS [imp_doc.party_godnost_format], \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM PostgresEntities.ImpDocs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.imp_docs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ImpDocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1309()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2105);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImpDocs\r\n        [PostgresModel.ImpDoc](T1.Im");
            viewString.Append("pDoc_Oid, T1.ImpDoc_SrcDocNum, T1.ImpDoc_SrcDocDate, T1.ImpDoc_SrcPostav, T1.Imp");
            viewString.Append("Doc_SrcVidOplati, T1.ImpDoc_SrcSchetFaktura, T1.ImpDoc_SrcSummaSNds, T1.ImpDoc_S");
            viewString.Append("rcKolvoPos, T1.ImpDoc_SrcComment, T1.ImpDoc_ImpFilename, T1.ImpDoc_InsDate, T1.I");
            viewString.Append("mpDoc_EditDate, T1.ImpDoc_MoIns, T1.ImpDoc_MoEdit, T1.ImpDoc_DocDate, T1.ImpDoc_");
            viewString.Append("Supplier, T1.ImpDoc_SummNds, T1.ImpDoc_KolvoPos, T1.ImpDoc_Import, T1.ImpDoc_Src");
            viewString.Append("Kontrakt, T1.ImpDoc_CheckDogovor, T1.ImpDoc_IsChecked, T1.ImpDoc_MoChecked, T1.I");
            viewString.Append("mpDoc_CheckedDate, T1.ImpDoc_SpecOid, T1.ImpDoc_DocDateFormat, T1.ImpDoc_PartyGo");
            viewString.Append("dnostFormat)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS ImpDoc_Oid, \r\n  ");
            viewString.Append("          T.src_doc_num AS ImpDoc_SrcDocNum, \r\n            T.src_doc_date AS Imp");
            viewString.Append("Doc_SrcDocDate, \r\n            T.src_postav AS ImpDoc_SrcPostav, \r\n            T.");
            viewString.Append("src_vid_oplati AS ImpDoc_SrcVidOplati, \r\n            T.src_schet_faktura AS ImpD");
            viewString.Append("oc_SrcSchetFaktura, \r\n            T.src_summa_s_nds AS ImpDoc_SrcSummaSNds, \r\n  ");
            viewString.Append("          T.src_kolvo_pos AS ImpDoc_SrcKolvoPos, \r\n            T.src_comment AS ");
            viewString.Append("ImpDoc_SrcComment, \r\n            T.imp_filename AS ImpDoc_ImpFilename, \r\n       ");
            viewString.Append("     T.ins_date AS ImpDoc_InsDate, \r\n            T.edit_date AS ImpDoc_EditDate,");
            viewString.Append(" \r\n            T.mo_ins AS ImpDoc_MoIns, \r\n            T.mo_edit AS ImpDoc_MoEdi");
            viewString.Append("t, \r\n            T.doc_date AS ImpDoc_DocDate, \r\n            T.supplier AS ImpDo");
            viewString.Append("c_Supplier, \r\n            T.summ_nds AS ImpDoc_SummNds, \r\n            T.kolvo_po");
            viewString.Append("s AS ImpDoc_KolvoPos, \r\n            T.import AS ImpDoc_Import, \r\n            T.s");
            viewString.Append("rc_kontrakt AS ImpDoc_SrcKontrakt, \r\n            T.check_dogovor AS ImpDoc_Check");
            viewString.Append("Dogovor, \r\n            T.is_checked AS ImpDoc_IsChecked, \r\n            T.mo_chec");
            viewString.Append("ked AS ImpDoc_MoChecked, \r\n            T.checked_date AS ImpDoc_CheckedDate, \r\n ");
            viewString.Append("           T.spec_oid AS ImpDoc_SpecOid, \r\n            T.doc_date_format AS ImpD");
            viewString.Append("oc_DocDateFormat, \r\n            T.party_godnost_format AS ImpDoc_PartyGodnostFor");
            viewString.Append("mat, \r\n            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.i");
            viewString.Append("mp_docs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ImpDocs", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.formular_zayavs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1310()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.formular_zayavs", @"
    SELECT VALUE -- Constructing formular_zayavs
        [PostgresModel.Store.formular_zayav](T1.[formular_zayav.oid], T1.[formular_zayav.formular_medic], T1.[formular_zayav.medic], T1.[formular_zayav.kol], T1.[formular_zayav.ins], T1.[formular_zayav.sotr_ins], T1.[formular_zayav.sotr_edit], T1.[formular_zayav.otdel], T1.[formular_zayav.formular], T1.[formular_zayav.comment], T1.[formular_zayav.edit_date])
    FROM (
        SELECT 
            T.Oid AS [formular_zayav.oid], 
            T.FormularMedic AS [formular_zayav.formular_medic], 
            T.Medic AS [formular_zayav.medic], 
            T.Kol AS [formular_zayav.kol], 
            T.Ins AS [formular_zayav.ins], 
            T.SotrIns AS [formular_zayav.sotr_ins], 
            T.SotrEdit AS [formular_zayav.sotr_edit], 
            T.Otdel AS [formular_zayav.otdel], 
            T.Formular AS [formular_zayav.formular], 
            T.Comment AS [formular_zayav.comment], 
            T.EditDate AS [formular_zayav.edit_date], 
            True AS _from0
        FROM PostgresEntities.FormularZayavs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.FormularZayavs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1311()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.FormularZayavs", @"
    SELECT VALUE -- Constructing FormularZayavs
        [PostgresModel.FormularZayav](T1.FormularZayav_Oid, T1.FormularZayav_FormularMedic, T1.FormularZayav_Medic, T1.FormularZayav_Kol, T1.FormularZayav_Ins, T1.FormularZayav_SotrIns, T1.FormularZayav_SotrEdit, T1.FormularZayav_Otdel, T1.FormularZayav_Formular, T1.FormularZayav_Comment, T1.FormularZayav_EditDate)
    FROM (
        SELECT 
            T.oid AS FormularZayav_Oid, 
            T.formular_medic AS FormularZayav_FormularMedic, 
            T.medic AS FormularZayav_Medic, 
            T.kol AS FormularZayav_Kol, 
            T.ins AS FormularZayav_Ins, 
            T.sotr_ins AS FormularZayav_SotrIns, 
            T.sotr_edit AS FormularZayav_SotrEdit, 
            T.otdel AS FormularZayav_Otdel, 
            T.formular AS FormularZayav_Formular, 
            T.comment AS FormularZayav_Comment, 
            T.edit_date AS FormularZayav_EditDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.formular_zayavs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.imp_doc_items
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1312()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3448);
            viewString.Append("\r\n    SELECT VALUE -- Constructing imp_doc_items\r\n        [PostgresModel.Store.i");
            viewString.Append("mp_doc_items](T1.[imp_doc_items.oid], T1.[imp_doc_items.imp_doc], T1.[imp_doc_it");
            viewString.Append("ems.src_num], T1.[imp_doc_items.src_medic_torg_name], T1.[imp_doc_items.src_medi");
            viewString.Append("c_oid_their], T1.[imp_doc_items.src_medic_ed_izm], T1.[imp_doc_items.src_medic_k");
            viewString.Append("olvo], T1.[imp_doc_items.src_party_seria], T1.[imp_doc_items.src_party_godnost],");
            viewString.Append(" T1.[imp_doc_items.src_party_price_bez_nds], T1.[imp_doc_items.src_party_summ_nd");
            viewString.Append("s], T1.[imp_doc_items.src_nds], T1.[imp_doc_items.src_party_proizvoditel], T1.[i");
            viewString.Append("mp_doc_items.src_party_sertifikat], T1.[imp_doc_items.ins_date], T1.[imp_doc_ite");
            viewString.Append("ms.edit_date], T1.[imp_doc_items.mo_ins], T1.[imp_doc_items.mo_edit], T1.[imp_do");
            viewString.Append("c_items.prs_medic_oid_our], T1.[imp_doc_items.prs_medic_oid_their], T1.[imp_doc_");
            viewString.Append("items.prs_medic_units], T1.[imp_doc_items.prs_medic_kolvo], T1.[imp_doc_items.pr");
            viewString.Append("s_party_godnost], T1.[imp_doc_items.prs_party_price], T1.[imp_doc_items.prs_part");
            viewString.Append("y_summ_nds], T1.[imp_doc_items.prs_nds], T1.[imp_doc_items.prs_party_proizvodite");
            viewString.Append("l], T1.[imp_doc_items.prs_party_sertifikat], T1.[imp_doc_items.imp_kartoid], T1.");
            viewString.Append("[imp_doc_items.dpc_imp], T1.[imp_doc_items.imp_status], T1.[imp_doc_items.import");
            viewString.Append("], T1.[imp_doc_items.spec_item_oid])\r\n    FROM (\r\n        SELECT \r\n            T");
            viewString.Append(".Oid AS [imp_doc_items.oid], \r\n            T.ImpDoc AS [imp_doc_items.imp_doc], ");
            viewString.Append("\r\n            T.SrcNum AS [imp_doc_items.src_num], \r\n            T.SrcMedicTorgN");
            viewString.Append("ame AS [imp_doc_items.src_medic_torg_name], \r\n            T.SrcMedicOidTheir AS ");
            viewString.Append("[imp_doc_items.src_medic_oid_their], \r\n            T.SrcMedicEdIzm AS [imp_doc_i");
            viewString.Append("tems.src_medic_ed_izm], \r\n            T.SrcMedicKolvo AS [imp_doc_items.src_medi");
            viewString.Append("c_kolvo], \r\n            T.SrcPartySeria AS [imp_doc_items.src_party_seria], \r\n  ");
            viewString.Append("          T.SrcPartyGodnost AS [imp_doc_items.src_party_godnost], \r\n            ");
            viewString.Append("T.SrcPartyPriceBezNds AS [imp_doc_items.src_party_price_bez_nds], \r\n            ");
            viewString.Append("T.SrcPartySummNds AS [imp_doc_items.src_party_summ_nds], \r\n            T.SrcNds ");
            viewString.Append("AS [imp_doc_items.src_nds], \r\n            T.SrcPartyProizvoditel AS [imp_doc_ite");
            viewString.Append("ms.src_party_proizvoditel], \r\n            T.SrcPartySertifikat AS [imp_doc_items");
            viewString.Append(".src_party_sertifikat], \r\n            T.InsDate AS [imp_doc_items.ins_date], \r\n ");
            viewString.Append("           T.EditDate AS [imp_doc_items.edit_date], \r\n            T.MoIns AS [im");
            viewString.Append("p_doc_items.mo_ins], \r\n            T.MoEdit AS [imp_doc_items.mo_edit], \r\n      ");
            viewString.Append("      T.PrsMedicOidOur AS [imp_doc_items.prs_medic_oid_our], \r\n            T.Prs");
            viewString.Append("MedicOidTheir AS [imp_doc_items.prs_medic_oid_their], \r\n            T.PrsMedicUn");
            viewString.Append("its AS [imp_doc_items.prs_medic_units], \r\n            T.PrsMedicKolvo AS [imp_do");
            viewString.Append("c_items.prs_medic_kolvo], \r\n            T.PrsPartyGodnost AS [imp_doc_items.prs_");
            viewString.Append("party_godnost], \r\n            T.PrsPartyPrice AS [imp_doc_items.prs_party_price]");
            viewString.Append(", \r\n            T.PrsPartySummNds AS [imp_doc_items.prs_party_summ_nds], \r\n     ");
            viewString.Append("       T.PrsNds AS [imp_doc_items.prs_nds], \r\n            T.PrsPartyProizvoditel");
            viewString.Append(" AS [imp_doc_items.prs_party_proizvoditel], \r\n            T.PrsPartySertifikat A");
            viewString.Append("S [imp_doc_items.prs_party_sertifikat], \r\n            T.ImpKartoid AS [imp_doc_i");
            viewString.Append("tems.imp_kartoid], \r\n            T.DpcImp AS [imp_doc_items.dpc_imp], \r\n        ");
            viewString.Append("    T.ImpStatus AS [imp_doc_items.imp_status], \r\n            T.Import AS [imp_do");
            viewString.Append("c_items.import], \r\n            T.SpecItemOid AS [imp_doc_items.spec_item_oid], \r");
            viewString.Append("\n            True AS _from0\r\n        FROM PostgresEntities.ImpDocItems AS T\r\n   ");
            viewString.Append(" ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.imp_doc_items", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ImpDocItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1313()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3063);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ImpDocItems\r\n        [PostgresModel.ImpDocIte");
            viewString.Append("m](T1.ImpDocItem_Oid, T1.ImpDocItem_ImpDoc, T1.ImpDocItem_SrcNum, T1.ImpDocItem_");
            viewString.Append("SrcMedicTorgName, T1.ImpDocItem_SrcMedicOidTheir, T1.ImpDocItem_SrcMedicEdIzm, T");
            viewString.Append("1.ImpDocItem_SrcMedicKolvo, T1.ImpDocItem_SrcPartySeria, T1.ImpDocItem_SrcPartyG");
            viewString.Append("odnost, T1.ImpDocItem_SrcPartyPriceBezNds, T1.ImpDocItem_SrcPartySummNds, T1.Imp");
            viewString.Append("DocItem_SrcNds, T1.ImpDocItem_SrcPartyProizvoditel, T1.ImpDocItem_SrcPartySertif");
            viewString.Append("ikat, T1.ImpDocItem_InsDate, T1.ImpDocItem_EditDate, T1.ImpDocItem_MoIns, T1.Imp");
            viewString.Append("DocItem_MoEdit, T1.ImpDocItem_PrsMedicOidOur, T1.ImpDocItem_PrsMedicOidTheir, T1");
            viewString.Append(".ImpDocItem_PrsMedicUnits, T1.ImpDocItem_PrsMedicKolvo, T1.ImpDocItem_PrsPartyGo");
            viewString.Append("dnost, T1.ImpDocItem_PrsPartyPrice, T1.ImpDocItem_PrsPartySummNds, T1.ImpDocItem");
            viewString.Append("_PrsNds, T1.ImpDocItem_PrsPartyProizvoditel, T1.ImpDocItem_PrsPartySertifikat, T");
            viewString.Append("1.ImpDocItem_ImpKartoid, T1.ImpDocItem_DpcImp, T1.ImpDocItem_ImpStatus, T1.ImpDo");
            viewString.Append("cItem_Import, T1.ImpDocItem_SpecItemOid)\r\n    FROM (\r\n        SELECT \r\n         ");
            viewString.Append("   T.oid AS ImpDocItem_Oid, \r\n            T.imp_doc AS ImpDocItem_ImpDoc, \r\n    ");
            viewString.Append("        T.src_num AS ImpDocItem_SrcNum, \r\n            T.src_medic_torg_name AS I");
            viewString.Append("mpDocItem_SrcMedicTorgName, \r\n            T.src_medic_oid_their AS ImpDocItem_Sr");
            viewString.Append("cMedicOidTheir, \r\n            T.src_medic_ed_izm AS ImpDocItem_SrcMedicEdIzm, \r\n");
            viewString.Append("            T.src_medic_kolvo AS ImpDocItem_SrcMedicKolvo, \r\n            T.src_p");
            viewString.Append("arty_seria AS ImpDocItem_SrcPartySeria, \r\n            T.src_party_godnost AS Imp");
            viewString.Append("DocItem_SrcPartyGodnost, \r\n            T.src_party_price_bez_nds AS ImpDocItem_S");
            viewString.Append("rcPartyPriceBezNds, \r\n            T.src_party_summ_nds AS ImpDocItem_SrcPartySum");
            viewString.Append("mNds, \r\n            T.src_nds AS ImpDocItem_SrcNds, \r\n            T.src_party_pr");
            viewString.Append("oizvoditel AS ImpDocItem_SrcPartyProizvoditel, \r\n            T.src_party_sertifi");
            viewString.Append("kat AS ImpDocItem_SrcPartySertifikat, \r\n            T.ins_date AS ImpDocItem_Ins");
            viewString.Append("Date, \r\n            T.edit_date AS ImpDocItem_EditDate, \r\n            T.mo_ins A");
            viewString.Append("S ImpDocItem_MoIns, \r\n            T.mo_edit AS ImpDocItem_MoEdit, \r\n            ");
            viewString.Append("T.prs_medic_oid_our AS ImpDocItem_PrsMedicOidOur, \r\n            T.prs_medic_oid_");
            viewString.Append("their AS ImpDocItem_PrsMedicOidTheir, \r\n            T.prs_medic_units AS ImpDocI");
            viewString.Append("tem_PrsMedicUnits, \r\n            T.prs_medic_kolvo AS ImpDocItem_PrsMedicKolvo, ");
            viewString.Append("\r\n            T.prs_party_godnost AS ImpDocItem_PrsPartyGodnost, \r\n            T");
            viewString.Append(".prs_party_price AS ImpDocItem_PrsPartyPrice, \r\n            T.prs_party_summ_nds");
            viewString.Append(" AS ImpDocItem_PrsPartySummNds, \r\n            T.prs_nds AS ImpDocItem_PrsNds, \r\n");
            viewString.Append("            T.prs_party_proizvoditel AS ImpDocItem_PrsPartyProizvoditel, \r\n     ");
            viewString.Append("       T.prs_party_sertifikat AS ImpDocItem_PrsPartySertifikat, \r\n            T.");
            viewString.Append("imp_kartoid AS ImpDocItem_ImpKartoid, \r\n            T.dpc_imp AS ImpDocItem_DpcI");
            viewString.Append("mp, \r\n            T.imp_status AS ImpDocItem_ImpStatus, \r\n            T.import A");
            viewString.Append("S ImpDocItem_Import, \r\n            T.spec_item_oid AS ImpDocItem_SpecItemOid, \r\n");
            viewString.Append("            True AS _from0\r\n        FROM PostgresEntitiesStoreContainer.imp_doc_");
            viewString.Append("items AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ImpDocItems", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invlists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1314()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invlists", @"
    SELECT VALUE -- Constructing invlists
        [PostgresModel.Store.invlist](T1.invlist_oid, T1.[invlist.mo_owner], T1.invlist_mo, T1.invlist_docnum, T1.invlist_data1, T1.invlist_data2, T1.invlist_preds, T1.invlist_chlen1, T1.invlist_chlen2, T1.invlist_chlen3)
    FROM (
        SELECT 
            T.Oid AS invlist_oid, 
            T.MoOwner AS [invlist.mo_owner], 
            T.Mo AS invlist_mo, 
            T.Docnum AS invlist_docnum, 
            T.Data1 AS invlist_data1, 
            T.Data2 AS invlist_data2, 
            T.Preds AS invlist_preds, 
            T.Chlen1 AS invlist_chlen1, 
            T.Chlen2 AS invlist_chlen2, 
            T.Chlen3 AS invlist_chlen3, 
            True AS _from0
        FROM PostgresEntities.Invlists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invlists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invlists", @"
    SELECT VALUE -- Constructing Invlists
        [PostgresModel.Invlist](T1.Invlist_Oid, T1.Invlist_MoOwner, T1.Invlist_Mo, T1.Invlist_Docnum, T1.Invlist_Data1, T1.Invlist_Data2, T1.Invlist_Preds, T1.Invlist_Chlen1, T1.Invlist_Chlen2, T1.Invlist_Chlen3)
    FROM (
        SELECT 
            T.oid AS Invlist_Oid, 
            T.mo_owner AS Invlist_MoOwner, 
            T.mo AS Invlist_Mo, 
            T.docnum AS Invlist_Docnum, 
            T.data1 AS Invlist_Data1, 
            T.data2 AS Invlist_Data2, 
            T.preds AS Invlist_Preds, 
            T.chlen1 AS Invlist_Chlen1, 
            T.chlen2 AS Invlist_Chlen2, 
            T.chlen3 AS Invlist_Chlen3, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invlists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.inv_opis_groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1316()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.inv_opis_groups", @"
    SELECT VALUE -- Constructing inv_opis_groups
        [PostgresModel.Store.inv_opis_group](T1.[inv_opis_group.line1], T1.[inv_opis_group.line2], T1.[inv_opis_group.kol_by_page], T1.[inv_opis_group.summ_by_page])
    FROM (
        SELECT 
            T.Line1 AS [inv_opis_group.line1], 
            T.Line2 AS [inv_opis_group.line2], 
            T.KolByPage AS [inv_opis_group.kol_by_page], 
            T.SummByPage AS [inv_opis_group.summ_by_page], 
            True AS _from0
        FROM PostgresEntities.InvOpisGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InvOpisGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1317()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InvOpisGroups", @"
    SELECT VALUE -- Constructing InvOpisGroups
        [PostgresModel.InvOpisGroup](T1.InvOpisGroup_Line1, T1.InvOpisGroup_Line2, T1.InvOpisGroup_KolByPage, T1.InvOpisGroup_SummByPage)
    FROM (
        SELECT 
            T.line1 AS InvOpisGroup_Line1, 
            T.line2 AS InvOpisGroup_Line2, 
            T.kol_by_page AS InvOpisGroup_KolByPage, 
            T.summ_by_page AS InvOpisGroup_SummByPage, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.inv_opis_groups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.kabsotrprocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1318()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.kabsotrprocs", @"
    SELECT VALUE -- Constructing kabsotrprocs
        [PostgresModel.Store.kabsotrproc](T1.kabsotrproc_oid, T1.kabsotrproc_owner, T1.kabsotrproc_name, T1.kabsotrproc_kabinetoid, T1.kabsotrproc_sotroid, T1.kabsotrproc_smoid, T1.kabsotrproc_showrep, T1.kabsotrproc_main, T1.kabsotrproc_what)
    FROM (
        SELECT 
            T.Oid AS kabsotrproc_oid, 
            T.Owner AS kabsotrproc_owner, 
            T.Name AS kabsotrproc_name, 
            T.Kabinetoid AS kabsotrproc_kabinetoid, 
            T.Sotroid AS kabsotrproc_sotroid, 
            T.Smoid AS kabsotrproc_smoid, 
            T.Showrep AS kabsotrproc_showrep, 
            T.Main AS kabsotrproc_main, 
            T.What AS kabsotrproc_what, 
            True AS _from0
        FROM PostgresEntities.Kabsotrprocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Kabsotrprocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1319()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Kabsotrprocs", @"
    SELECT VALUE -- Constructing Kabsotrprocs
        [PostgresModel.Kabsotrproc](T1.Kabsotrproc_Oid, T1.Kabsotrproc_Owner, T1.Kabsotrproc_Name, T1.Kabsotrproc_Kabinetoid, T1.Kabsotrproc_Sotroid, T1.Kabsotrproc_Smoid, T1.Kabsotrproc_Showrep, T1.Kabsotrproc_Main, T1.Kabsotrproc_What)
    FROM (
        SELECT 
            T.oid AS Kabsotrproc_Oid, 
            T.owner AS Kabsotrproc_Owner, 
            T.name AS Kabsotrproc_Name, 
            T.kabinetoid AS Kabsotrproc_Kabinetoid, 
            T.sotroid AS Kabsotrproc_Sotroid, 
            T.smoid AS Kabsotrproc_Smoid, 
            T.showrep AS Kabsotrproc_Showrep, 
            T.main AS Kabsotrproc_Main, 
            T.what AS Kabsotrproc_What, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.kabsotrprocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.invopis
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1320()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.invopis", @"
    SELECT VALUE -- Constructing invopis
        [PostgresModel.Store.invopis](T1.invopis_oid, T1.invopis_invlistoid, T1.invopis_name, T1.invopis_nom, T1.invopis_okei, T1.invopis_edizm, T1.invopis_price, T1.invopis_invnum, T1.invopis_passportnum, T1.invopis_factkol, T1.invopis_factsum, T1.invopis_buhkol, T1.invopis_buhprice, T1.invopis_schet, T1.invopis_kart)
    FROM (
        SELECT 
            T.Oid AS invopis_oid, 
            T.Invlistoid AS invopis_invlistoid, 
            T.Name AS invopis_name, 
            T.Nom AS invopis_nom, 
            T.Okei AS invopis_okei, 
            T.Edizm AS invopis_edizm, 
            T.Price AS invopis_price, 
            T.Invnum AS invopis_invnum, 
            T.Passportnum AS invopis_passportnum, 
            T.Factkol AS invopis_factkol, 
            T.Factsum AS invopis_factsum, 
            T.Buhkol AS invopis_buhkol, 
            T.Buhprice AS invopis_buhprice, 
            T.Schet AS invopis_schet, 
            T.Kart AS invopis_kart, 
            True AS _from0
        FROM PostgresEntities.Invopis AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Invopis
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1321()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Invopis", @"
    SELECT VALUE -- Constructing Invopis
        [PostgresModel.Invopi](T1.Invopi_Oid, T1.Invopi_Invlistoid, T1.Invopi_Name, T1.Invopi_Nom, T1.Invopi_Okei, T1.Invopi_Edizm, T1.Invopi_Price, T1.Invopi_Invnum, T1.Invopi_Passportnum, T1.Invopi_Factkol, T1.Invopi_Factsum, T1.Invopi_Buhkol, T1.Invopi_Buhprice, T1.Invopi_Schet, T1.Invopi_Kart)
    FROM (
        SELECT 
            T.oid AS Invopi_Oid, 
            T.invlistoid AS Invopi_Invlistoid, 
            T.name AS Invopi_Name, 
            T.nom AS Invopi_Nom, 
            T.okei AS Invopi_Okei, 
            T.edizm AS Invopi_Edizm, 
            T.price AS Invopi_Price, 
            T.invnum AS Invopi_Invnum, 
            T.passportnum AS Invopi_Passportnum, 
            T.factkol AS Invopi_Factkol, 
            T.factsum AS Invopi_Factsum, 
            T.buhkol AS Invopi_Buhkol, 
            T.buhprice AS Invopi_Buhprice, 
            T.schet AS Invopi_Schet, 
            T.kart AS Invopi_Kart, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.invopis AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.kartcompos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1322()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.kartcompos", @"
    SELECT VALUE -- Constructing kartcompos
        [PostgresModel.Store.kartcompos](T1.kartcompos_oid, T1.kartcompos_medic, T1.kartcompos_serial, T1.kartcompos_data, T1.kartcompos_amount, T1.kartcompos_number, T1.[kartcompos.doc_prih], T1.[kartcompos.doc_rash], T1.[kartcompos.goden_do], T1.[kartcompos.amount_old], T1.[kartcompos.use_tara], T1.[kartcompos.produce_type], T1.kartcompos_treb, T1.[kartcompos.edit_kart])
    FROM (
        SELECT 
            T.Oid AS kartcompos_oid, 
            T.Medic AS kartcompos_medic, 
            T.Serial AS kartcompos_serial, 
            T.Data AS kartcompos_data, 
            T.Amount AS kartcompos_amount, 
            T.Number AS kartcompos_number, 
            T.DocPrih AS [kartcompos.doc_prih], 
            T.DocRash AS [kartcompos.doc_rash], 
            T.GodenDo AS [kartcompos.goden_do], 
            T.AmountOld AS [kartcompos.amount_old], 
            T.UseTara AS [kartcompos.use_tara], 
            T.ProduceType AS [kartcompos.produce_type], 
            T.Treb AS kartcompos_treb, 
            T.EditKart AS [kartcompos.edit_kart], 
            True AS _from0
        FROM PostgresEntities.Kartcompos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Kartcompos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1323()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Kartcompos", @"
    SELECT VALUE -- Constructing Kartcompos
        [PostgresModel.Kartcompo](T1.Kartcompo_Oid, T1.Kartcompo_Medic, T1.Kartcompo_Serial, T1.Kartcompo_Data, T1.Kartcompo_Amount, T1.Kartcompo_Number, T1.Kartcompo_DocPrih, T1.Kartcompo_DocRash, T1.Kartcompo_GodenDo, T1.Kartcompo_AmountOld, T1.Kartcompo_UseTara, T1.Kartcompo_ProduceType, T1.Kartcompo_Treb, T1.Kartcompo_EditKart)
    FROM (
        SELECT 
            T.oid AS Kartcompo_Oid, 
            T.medic AS Kartcompo_Medic, 
            T.serial AS Kartcompo_Serial, 
            T.data AS Kartcompo_Data, 
            T.amount AS Kartcompo_Amount, 
            T.number AS Kartcompo_Number, 
            T.doc_prih AS Kartcompo_DocPrih, 
            T.doc_rash AS Kartcompo_DocRash, 
            T.goden_do AS Kartcompo_GodenDo, 
            T.amount_old AS Kartcompo_AmountOld, 
            T.use_tara AS Kartcompo_UseTara, 
            T.produce_type AS Kartcompo_ProduceType, 
            T.treb AS Kartcompo_Treb, 
            T.edit_kart AS Kartcompo_EditKart, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.kartcompos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.levels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1324()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.levels", @"
    SELECT VALUE -- Constructing levels
        [PostgresModel.Store.level](T1.level_oid, T1.level_name)
    FROM (
        SELECT 
            T.Oid AS level_oid, 
            T.Name AS level_name, 
            True AS _from0
        FROM PostgresEntities.Levels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Levels
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1325()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Levels", @"
    SELECT VALUE -- Constructing Levels
        [PostgresModel.Level](T1.Level_Oid, T1.Level_Name)
    FROM (
        SELECT 
            T.oid AS Level_Oid, 
            T.name AS Level_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.levels AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1326()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.logs", "\r\n    SELECT VALUE -- Constructing logs\r\n        [PostgresModel.Store.log](T1.log" +
                    "_oid, T1.log_newdpoid, T1.log_olddpoid, T1.log_newpricedoc, T1.log_oldpricedoc, " +
                    "T1.log_newdata, T1.log_olddata, T1.log_newkartoid, T1.log_oldkartoid, T1.log_new" +
                    "kol, T1.log_oldkol, T1.log_newsumm, T1.log_oldsumm, T1.log_sotroid, T1.[log.chan" +
                    "ge_date], T1.log_osuser, T1.log_machine, T1.log_terminal, T1.log_program, T1.log" +
                    "_comment, T1.log_prizn, T1.[log.logon_time], T1.log_newdoc, T1.log_olddoc, T1.[l" +
                    "og.edit_old], T1.[log.edit_new], T1.log_voidmove, T1.[log.position_doc], T1.[log" +
                    ".mogroupoid_to], T1.[log.mogroupoid_from])\r\n    FROM (\r\n        SELECT \r\n       " +
                    "     T.Oid AS log_oid, \r\n            T.Newdpoid AS log_newdpoid, \r\n            T" +
                    ".Olddpoid AS log_olddpoid, \r\n            T.Newpricedoc AS log_newpricedoc, \r\n   " +
                    "         T.Oldpricedoc AS log_oldpricedoc, \r\n            T.Newdata AS log_newdat" +
                    "a, \r\n            T.Olddata AS log_olddata, \r\n            T.Newkartoid AS log_new" +
                    "kartoid, \r\n            T.Oldkartoid AS log_oldkartoid, \r\n            T.Newkol AS" +
                    " log_newkol, \r\n            T.Oldkol AS log_oldkol, \r\n            T.Newsumm AS lo" +
                    "g_newsumm, \r\n            T.Oldsumm AS log_oldsumm, \r\n            T.Sotroid AS lo" +
                    "g_sotroid, \r\n            T.ChangeDate AS [log.change_date], \r\n            T.Osus" +
                    "er AS log_osuser, \r\n            T.Machine AS log_machine, \r\n            T.Termin" +
                    "al AS log_terminal, \r\n            T.Program AS log_program, \r\n            T.Comm" +
                    "ent AS log_comment, \r\n            T.Prizn AS log_prizn, \r\n            T.LogonTim" +
                    "e AS [log.logon_time], \r\n            T.Newdoc AS log_newdoc, \r\n            T.Old" +
                    "doc AS log_olddoc, \r\n            T.EditOld AS [log.edit_old], \r\n            T.Ed" +
                    "itNew AS [log.edit_new], \r\n            T.Voidmove AS log_voidmove, \r\n           " +
                    " T.PositionDoc AS [log.position_doc], \r\n            T.MogroupoidTo AS [log.mogro" +
                    "upoid_to], \r\n            T.MogroupoidFrom AS [log.mogroupoid_from], \r\n          " +
                    "  True AS _from0\r\n        FROM PostgresEntities.Logs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Logs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1327()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Logs", "\r\n    SELECT VALUE -- Constructing Logs\r\n        [PostgresModel.Log](T1.Log_Oid, " +
                    "T1.Log_Newdpoid, T1.Log_Olddpoid, T1.Log_Newpricedoc, T1.Log_Oldpricedoc, T1.Log" +
                    "_Newdata, T1.Log_Olddata, T1.Log_Newkartoid, T1.Log_Oldkartoid, T1.Log_Newkol, T" +
                    "1.Log_Oldkol, T1.Log_Newsumm, T1.Log_Oldsumm, T1.Log_Sotroid, T1.Log_ChangeDate," +
                    " T1.Log_Osuser, T1.Log_Machine, T1.Log_Terminal, T1.Log_Program, T1.Log_Comment," +
                    " T1.Log_Prizn, T1.Log_LogonTime, T1.Log_Newdoc, T1.Log_Olddoc, T1.Log_EditOld, T" +
                    "1.Log_EditNew, T1.Log_Voidmove, T1.Log_PositionDoc, T1.Log_MogroupoidTo, T1.Log_" +
                    "MogroupoidFrom)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS Log_Oid, \r\n  " +
                    "          T.newdpoid AS Log_Newdpoid, \r\n            T.olddpoid AS Log_Olddpoid, " +
                    "\r\n            T.newpricedoc AS Log_Newpricedoc, \r\n            T.oldpricedoc AS L" +
                    "og_Oldpricedoc, \r\n            T.newdata AS Log_Newdata, \r\n            T.olddata " +
                    "AS Log_Olddata, \r\n            T.newkartoid AS Log_Newkartoid, \r\n            T.ol" +
                    "dkartoid AS Log_Oldkartoid, \r\n            T.newkol AS Log_Newkol, \r\n            " +
                    "T.oldkol AS Log_Oldkol, \r\n            T.newsumm AS Log_Newsumm, \r\n            T." +
                    "oldsumm AS Log_Oldsumm, \r\n            T.sotroid AS Log_Sotroid, \r\n            T." +
                    "change_date AS Log_ChangeDate, \r\n            T.osuser AS Log_Osuser, \r\n         " +
                    "   T.machine AS Log_Machine, \r\n            T.terminal AS Log_Terminal, \r\n       " +
                    "     T.program AS Log_Program, \r\n            T.comment AS Log_Comment, \r\n       " +
                    "     T.prizn AS Log_Prizn, \r\n            T.logon_time AS Log_LogonTime, \r\n      " +
                    "      T.newdoc AS Log_Newdoc, \r\n            T.olddoc AS Log_Olddoc, \r\n          " +
                    "  T.edit_old AS Log_EditOld, \r\n            T.edit_new AS Log_EditNew, \r\n        " +
                    "    T.voidmove AS Log_Voidmove, \r\n            T.position_doc AS Log_PositionDoc," +
                    " \r\n            T.mogroupoid_to AS Log_MogroupoidTo, \r\n            T.mogroupoid_f" +
                    "rom AS Log_MogroupoidFrom, \r\n            True AS _from0\r\n        FROM PostgresEn" +
                    "titiesStoreContainer.logs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.massunits1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1328()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.massunits1", @"
    SELECT VALUE -- Constructing massunits1
        [PostgresModel.Store.massunits](T1.massunits_oid, T1.massunits_shortname, T1.massunits_fullname, T1.massunits_lpu)
    FROM (
        SELECT 
            T.Oid AS massunits_oid, 
            T.Shortname AS massunits_shortname, 
            T.Fullname AS massunits_fullname, 
            T.Lpu AS massunits_lpu, 
            True AS _from0
        FROM PostgresEntities.Massunit1s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Massunit1s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1329()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Massunit1s", @"
    SELECT VALUE -- Constructing Massunit1s
        [PostgresModel.Massunit1](T1.Massunit1_Oid, T1.Massunit1_Shortname, T1.Massunit1_Fullname, T1.Massunit1_Lpu)
    FROM (
        SELECT 
            T.oid AS Massunit1_Oid, 
            T.shortname AS Massunit1_Shortname, 
            T.fullname AS Massunit1_Fullname, 
            T.lpu AS Massunit1_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.massunits1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.kartco_items
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1330()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.kartco_items", @"
    SELECT VALUE -- Constructing kartco_items
        [PostgresModel.Store.kartco_item](T1.[kartco_item.oid], T1.[kartco_item.kartcompos], T1.[kartco_item.kart_item], T1.[kartco_item.amount], T1.[kartco_item.amount_for1], T1.[kartco_item.cur_ost], T1.[kartco_item.party_order], T1.[kartco_item.amount_old], T1.[kartco_item.amount_for1_old], T1.[kartco_item.treb_dpc_oid])
    FROM (
        SELECT 
            T.Oid AS [kartco_item.oid], 
            T.Kartcompos AS [kartco_item.kartcompos], 
            T.KartItem AS [kartco_item.kart_item], 
            T.Amount AS [kartco_item.amount], 
            T.AmountFor1 AS [kartco_item.amount_for1], 
            T.CurOst AS [kartco_item.cur_ost], 
            T.PartyOrder AS [kartco_item.party_order], 
            T.AmountOld AS [kartco_item.amount_old], 
            T.AmountFor1Old AS [kartco_item.amount_for1_old], 
            T.TrebDpcOid AS [kartco_item.treb_dpc_oid], 
            True AS _from0
        FROM PostgresEntities.KartcoItems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.KartcoItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1331()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.KartcoItems", @"
    SELECT VALUE -- Constructing KartcoItems
        [PostgresModel.KartcoItem](T1.KartcoItem_Oid, T1.KartcoItem_Kartcompos, T1.KartcoItem_KartItem, T1.KartcoItem_Amount, T1.KartcoItem_AmountFor1, T1.KartcoItem_CurOst, T1.KartcoItem_PartyOrder, T1.KartcoItem_AmountOld, T1.KartcoItem_AmountFor1Old, T1.KartcoItem_TrebDpcOid)
    FROM (
        SELECT 
            T.oid AS KartcoItem_Oid, 
            T.kartcompos AS KartcoItem_Kartcompos, 
            T.kart_item AS KartcoItem_KartItem, 
            T.amount AS KartcoItem_Amount, 
            T.amount_for1 AS KartcoItem_AmountFor1, 
            T.cur_ost AS KartcoItem_CurOst, 
            T.party_order AS KartcoItem_PartyOrder, 
            T.amount_old AS KartcoItem_AmountOld, 
            T.amount_for1_old AS KartcoItem_AmountFor1Old, 
            T.treb_dpc_oid AS KartcoItem_TrebDpcOid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.kartco_items AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.link_impnakls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1332()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.link_impnakls", @"
    SELECT VALUE -- Constructing link_impnakls
        [PostgresModel.Store.link_impnakl](T1.[link_impnakl.oid], T1.[link_impnakl.our_table_num], T1.[link_impnakl.our_key_field_value], T1.[link_impnakl.supplier], T1.[link_impnakl.their_table_num], T1.[link_impnakl.their_key_field_value], T1.[link_impnakl.their_value])
    FROM (
        SELECT 
            T.Oid AS [link_impnakl.oid], 
            T.OurTableNum AS [link_impnakl.our_table_num], 
            T.OurKeyFieldValue AS [link_impnakl.our_key_field_value], 
            T.Supplier AS [link_impnakl.supplier], 
            T.TheirTableNum AS [link_impnakl.their_table_num], 
            T.TheirKeyFieldValue AS [link_impnakl.their_key_field_value], 
            T.TheirValue AS [link_impnakl.their_value], 
            True AS _from0
        FROM PostgresEntities.LinkImpnakls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LinkImpnakls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1333()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LinkImpnakls", @"
    SELECT VALUE -- Constructing LinkImpnakls
        [PostgresModel.LinkImpnakl](T1.LinkImpnakl_Oid, T1.LinkImpnakl_OurTableNum, T1.LinkImpnakl_OurKeyFieldValue, T1.LinkImpnakl_Supplier, T1.LinkImpnakl_TheirTableNum, T1.LinkImpnakl_TheirKeyFieldValue, T1.LinkImpnakl_TheirValue)
    FROM (
        SELECT 
            T.oid AS LinkImpnakl_Oid, 
            T.our_table_num AS LinkImpnakl_OurTableNum, 
            T.our_key_field_value AS LinkImpnakl_OurKeyFieldValue, 
            T.supplier AS LinkImpnakl_Supplier, 
            T.their_table_num AS LinkImpnakl_TheirTableNum, 
            T.their_key_field_value AS LinkImpnakl_TheirKeyFieldValue, 
            T.their_value AS LinkImpnakl_TheirValue, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.link_impnakls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_specialmedic222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1334()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_specialmedic222s", @"
    SELECT VALUE -- Constructing medic_specialmedic222s
        [PostgresModel.Store.medic_specialmedic222](T1.[medic_specialmedic222.specialmedic_oid], T1.[medic_specialmedic222.medic222_oid])
    FROM (
        SELECT 
            T.SpecialmedicOid AS [medic_specialmedic222.specialmedic_oid], 
            T.Medic222Oid AS [medic_specialmedic222.medic222_oid], 
            True AS _from0
        FROM PostgresEntities.MedicSpecialmedic222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicSpecialmedic222s
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1335()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicSpecialmedic222s", @"
    SELECT VALUE -- Constructing MedicSpecialmedic222s
        [PostgresModel.MedicSpecialmedic222](T1.MedicSpecialmedic222_SpecialmedicOid, T1.MedicSpecialmedic222_Medic222Oid)
    FROM (
        SELECT 
            T.specialmedic_oid AS MedicSpecialmedic222_SpecialmedicOid, 
            T.medic222_oid AS MedicSpecialmedic222_Medic222Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_specialmedic222s AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_zakups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1336()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_zakups", @"
    SELECT VALUE -- Constructing medic_zakups
        [PostgresModel.Store.medic_zakup](T1.[medic_zakup.medic], T1.[medic_zakup.needtobuy], T1.[medic_zakup.price], T1.[medic_zakup.correct], T1.[medic_zakup.needtobuy_old])
    FROM (
        SELECT 
            T.Medic AS [medic_zakup.medic], 
            T.Needtobuy AS [medic_zakup.needtobuy], 
            T.Price AS [medic_zakup.price], 
            T.Correct AS [medic_zakup.correct], 
            T.NeedtobuyOld AS [medic_zakup.needtobuy_old], 
            True AS _from0
        FROM PostgresEntities.MedicZakups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicZakups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1337()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicZakups", @"
    SELECT VALUE -- Constructing MedicZakups
        [PostgresModel.MedicZakup](T1.MedicZakup_Medic, T1.MedicZakup_Needtobuy, T1.MedicZakup_Price, T1.MedicZakup_Correct, T1.MedicZakup_NeedtobuyOld)
    FROM (
        SELECT 
            T.medic AS MedicZakup_Medic, 
            T.needtobuy AS MedicZakup_Needtobuy, 
            T.price AS MedicZakup_Price, 
            T.correct AS MedicZakup_Correct, 
            T.needtobuy_old AS MedicZakup_NeedtobuyOld, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_zakups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medic_intern_names
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1338()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medic_intern_names", @"
    SELECT VALUE -- Constructing medic_intern_names
        [PostgresModel.Store.medic_intern_name](T1.[medic_intern_name.oid], T1.[medic_intern_name.names_medicines], T1.[medic_intern_name.medic])
    FROM (
        SELECT 
            T.Oid AS [medic_intern_name.oid], 
            T.NamesMedicines AS [medic_intern_name.names_medicines], 
            T.Medic AS [medic_intern_name.medic], 
            True AS _from0
        FROM PostgresEntities.MedicInternNames AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicInternNames
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1339()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicInternNames", @"
    SELECT VALUE -- Constructing MedicInternNames
        [PostgresModel.MedicInternName](T1.MedicInternName_Oid, T1.MedicInternName_NamesMedicines, T1.MedicInternName_Medic)
    FROM (
        SELECT 
            T.oid AS MedicInternName_Oid, 
            T.names_medicines AS MedicInternName_NamesMedicines, 
            T.medic AS MedicInternName_Medic, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medic_intern_names AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medictypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1340()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medictypes", @"
    SELECT VALUE -- Constructing medictypes
        [PostgresModel.Store.medictype](T1.medictype_oid, T1.medictype_name, T1.medictype_account, T1.medictype_reporttitle, T1.[medictype.account_gr_type], T1.medictype_smstitle)
    FROM (
        SELECT 
            T.Oid AS medictype_oid, 
            T.Name AS medictype_name, 
            T.Account AS medictype_account, 
            T.Reporttitle AS medictype_reporttitle, 
            T.AccountGrType AS [medictype.account_gr_type], 
            T.Smstitle AS medictype_smstitle, 
            True AS _from0
        FROM PostgresEntities.Medictypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Medictypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1341()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Medictypes", @"
    SELECT VALUE -- Constructing Medictypes
        [PostgresModel.Medictype](T1.Medictype_Oid, T1.Medictype_Name, T1.Medictype_Account, T1.Medictype_Reporttitle, T1.Medictype_AccountGrType, T1.Medictype_Smstitle)
    FROM (
        SELECT 
            T.oid AS Medictype_Oid, 
            T.name AS Medictype_Name, 
            T.account AS Medictype_Account, 
            T.reporttitle AS Medictype_Reporttitle, 
            T.account_gr_type AS Medictype_AccountGrType, 
            T.smstitle AS Medictype_Smstitle, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.medictypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.ost_mogroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1342()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.ost_mogroups", @"
    SELECT VALUE -- Constructing ost_mogroups
        [PostgresModel.Store.ost_mogroup](T1.[ost_mogroup.oid], T1.[ost_mogroup.medic], T1.[ost_mogroup.kart], T1.[ost_mogroup.up_ost], T1.[ost_mogroup.fas_ost], T1.[ost_mogroup.price], T1.[ost_mogroup.mo_group], T1.[ost_mogroup.ost_type])
    FROM (
        SELECT 
            T.Oid AS [ost_mogroup.oid], 
            T.Medic AS [ost_mogroup.medic], 
            T.Kart AS [ost_mogroup.kart], 
            T.UpOst AS [ost_mogroup.up_ost], 
            T.FasOst AS [ost_mogroup.fas_ost], 
            T.Price AS [ost_mogroup.price], 
            T.MoGroup AS [ost_mogroup.mo_group], 
            T.OstType AS [ost_mogroup.ost_type], 
            True AS _from0
        FROM PostgresEntities.OstMogroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OstMogroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1343()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OstMogroups", @"
    SELECT VALUE -- Constructing OstMogroups
        [PostgresModel.OstMogroup](T1.OstMogroup_Oid, T1.OstMogroup_Medic, T1.OstMogroup_Kart, T1.OstMogroup_UpOst, T1.OstMogroup_FasOst, T1.OstMogroup_Price, T1.OstMogroup_MoGroup, T1.OstMogroup_OstType)
    FROM (
        SELECT 
            T.oid AS OstMogroup_Oid, 
            T.medic AS OstMogroup_Medic, 
            T.kart AS OstMogroup_Kart, 
            T.up_ost AS OstMogroup_UpOst, 
            T.fas_ost AS OstMogroup_FasOst, 
            T.price AS OstMogroup_Price, 
            T.mo_group AS OstMogroup_MoGroup, 
            T.ost_type AS OstMogroup_OstType, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.ost_mogroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.payconds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1344()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.payconds", @"
    SELECT VALUE -- Constructing payconds
        [PostgresModel.Store.paycond](T1.paycond_oid, T1.paycond_name)
    FROM (
        SELECT 
            T.Oid AS paycond_oid, 
            T.Name AS paycond_name, 
            True AS _from0
        FROM PostgresEntities.Payconds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Payconds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1345()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Payconds", @"
    SELECT VALUE -- Constructing Payconds
        [PostgresModel.Paycond](T1.Paycond_Oid, T1.Paycond_Name)
    FROM (
        SELECT 
            T.oid AS Paycond_Oid, 
            T.name AS Paycond_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.payconds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.price_monitor_bases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1346()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.price_monitor_bases", "\r\n    SELECT VALUE -- Constructing price_monitor_bases\r\n        [PostgresModel.St" +
                    "ore.price_monitor_base](T1.[price_monitor_base.packnx], T1.[price_monitor_base.t" +
                    "radenmr], T1.[price_monitor_base.innr], T1.[price_monitor_base.mnfnm], T1.[price" +
                    "_monitor_base.drugfmnmrs], T1.[price_monitor_base.pack], T1.[price_monitor_base." +
                    "segment], T1.[price_monitor_base.dosager], T1.[price_monitor_base.maxmnfprice], " +
                    "T1.[price_monitor_base.currencynm], T1.[price_monitor_base.mnfoid], T1.[price_mo" +
                    "nitor_base.pckoid], T1.[price_monitor_base.ean], T1.[price_monitor_base.totdrugq" +
                    "n], T1.[price_monitor_base.pcknm], T1.[price_monitor_base.oid], T1.[price_monito" +
                    "r_base.drugoid])\r\n    FROM (\r\n        SELECT \r\n            T.Packnx AS [price_mo" +
                    "nitor_base.packnx], \r\n            T.Tradenmr AS [price_monitor_base.tradenmr], \r" +
                    "\n            T.Innr AS [price_monitor_base.innr], \r\n            T.Mnfnm AS [pric" +
                    "e_monitor_base.mnfnm], \r\n            T.Drugfmnmrs AS [price_monitor_base.drugfmn" +
                    "mrs], \r\n            T.Pack AS [price_monitor_base.pack], \r\n            T.Segment" +
                    " AS [price_monitor_base.segment], \r\n            T.Dosager AS [price_monitor_base" +
                    ".dosager], \r\n            T.Maxmnfprice AS [price_monitor_base.maxmnfprice], \r\n  " +
                    "          T.Currencynm AS [price_monitor_base.currencynm], \r\n            T.Mnfoi" +
                    "d AS [price_monitor_base.mnfoid], \r\n            T.Pckoid AS [price_monitor_base." +
                    "pckoid], \r\n            T.Ean AS [price_monitor_base.ean], \r\n            T.Totdru" +
                    "gqn AS [price_monitor_base.totdrugqn], \r\n            T.Pcknm AS [price_monitor_b" +
                    "ase.pcknm], \r\n            T.Oid AS [price_monitor_base.oid], \r\n            T.Dru" +
                    "goid AS [price_monitor_base.drugoid], \r\n            True AS _from0\r\n        FROM" +
                    " PostgresEntities.PriceMonitorBases AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.price_monitor_osts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1347()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2415);
            viewString.Append("\r\n    SELECT VALUE -- Constructing price_monitor_osts\r\n        [PostgresModel.St");
            viewString.Append("ore.price_monitor_ost](T1.[price_monitor_ost.packnx], T1.[price_monitor_ost.year");
            viewString.Append("], T1.[price_monitor_ost.month], T1.[price_monitor_ost.irecoid], T1.[price_monit");
            viewString.Append("or_ost.series], T1.[price_monitor_ost.quantity], T1.[price_monitor_ost.funds], T");
            viewString.Append("1.[price_monitor_ost.vendor], T1.[price_monitor_ost.prcprice], T1.[price_monitor");
            viewString.Append("_ost.rtlprice], T1.[price_monitor_ost.rtlpremium], T1.[price_monitor_ost.remark]");
            viewString.Append(", T1.[price_monitor_ost.srcorg], T1.[price_monitor_ost.ipv], T1.[price_monitor_o");
            viewString.Append("st.medic], T1.[price_monitor_ost.kart], T1.[price_monitor_ost.date], T1.[price_m");
            viewString.Append("onitor_ost.mo_group], T1.[price_monitor_ost.proizvoditel], T1.[price_monitor_ost");
            viewString.Append(".oid], T1.[price_monitor_ost.vendoroid], T1.[price_monitor_ost.price], T1.[price");
            viewString.Append("_monitor_ost.mnf_price], T1.[price_monitor_ost.price_monitor_base], T1.[price_mo");
            viewString.Append("nitor_ost.supplier])\r\n    FROM (\r\n        SELECT \r\n            T.Packnx AS [pric");
            viewString.Append("e_monitor_ost.packnx], \r\n            T.Year AS [price_monitor_ost.year], \r\n     ");
            viewString.Append("       T.Month AS [price_monitor_ost.month], \r\n            T.Irecoid AS [price_m");
            viewString.Append("onitor_ost.irecoid], \r\n            T.Series AS [price_monitor_ost.series], \r\n   ");
            viewString.Append("         T.Quantity AS [price_monitor_ost.quantity], \r\n            T.Funds AS [p");
            viewString.Append("rice_monitor_ost.funds], \r\n            T.Vendor AS [price_monitor_ost.vendor], \r");
            viewString.Append("\n            T.Prcprice AS [price_monitor_ost.prcprice], \r\n            T.Rtlpric");
            viewString.Append("e AS [price_monitor_ost.rtlprice], \r\n            T.Rtlpremium AS [price_monitor_");
            viewString.Append("ost.rtlpremium], \r\n            T.Remark AS [price_monitor_ost.remark], \r\n       ");
            viewString.Append("     T.Srcorg AS [price_monitor_ost.srcorg], \r\n            T.Ipv AS [price_monit");
            viewString.Append("or_ost.ipv], \r\n            T.Medic AS [price_monitor_ost.medic], \r\n            T");
            viewString.Append(".Kart AS [price_monitor_ost.kart], \r\n            T.Date AS [price_monitor_ost.da");
            viewString.Append("te], \r\n            T.MoGroup AS [price_monitor_ost.mo_group], \r\n            T.Pr");
            viewString.Append("oizvoditel AS [price_monitor_ost.proizvoditel], \r\n            T.Oid AS [price_mo");
            viewString.Append("nitor_ost.oid], \r\n            T.Vendoroid AS [price_monitor_ost.vendoroid], \r\n  ");
            viewString.Append("          T.Price AS [price_monitor_ost.price], \r\n            T.MnfPrice AS [pri");
            viewString.Append("ce_monitor_ost.mnf_price], \r\n            T.PriceMonitorBase AS [price_monitor_os");
            viewString.Append("t.price_monitor_base], \r\n            T.Supplier AS [price_monitor_ost.supplier],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM PostgresEntities.PriceMonitorOsts AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.price_monitor_osts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PriceMonitorBases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1348()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PriceMonitorBases", "\r\n    SELECT VALUE -- Constructing PriceMonitorBases\r\n        [PostgresModel.Pric" +
                    "eMonitorBase](T1.PriceMonitorBase_Packnx, T1.PriceMonitorBase_Tradenmr, T1.Price" +
                    "MonitorBase_Innr, T1.PriceMonitorBase_Mnfnm, T1.PriceMonitorBase_Drugfmnmrs, T1." +
                    "PriceMonitorBase_Pack, T1.PriceMonitorBase_Segment, T1.PriceMonitorBase_Dosager," +
                    " T1.PriceMonitorBase_Maxmnfprice, T1.PriceMonitorBase_Currencynm, T1.PriceMonito" +
                    "rBase_Mnfoid, T1.PriceMonitorBase_Pckoid, T1.PriceMonitorBase_Ean, T1.PriceMonit" +
                    "orBase_Totdrugqn, T1.PriceMonitorBase_Pcknm, T1.PriceMonitorBase_Oid, T1.PriceMo" +
                    "nitorBase_Drugoid)\r\n    FROM (\r\n        SELECT \r\n            T.packnx AS PriceMo" +
                    "nitorBase_Packnx, \r\n            T.tradenmr AS PriceMonitorBase_Tradenmr, \r\n     " +
                    "       T.innr AS PriceMonitorBase_Innr, \r\n            T.mnfnm AS PriceMonitorBas" +
                    "e_Mnfnm, \r\n            T.drugfmnmrs AS PriceMonitorBase_Drugfmnmrs, \r\n          " +
                    "  T.pack AS PriceMonitorBase_Pack, \r\n            T.segment AS PriceMonitorBase_S" +
                    "egment, \r\n            T.dosager AS PriceMonitorBase_Dosager, \r\n            T.max" +
                    "mnfprice AS PriceMonitorBase_Maxmnfprice, \r\n            T.currencynm AS PriceMon" +
                    "itorBase_Currencynm, \r\n            T.mnfoid AS PriceMonitorBase_Mnfoid, \r\n      " +
                    "      T.pckoid AS PriceMonitorBase_Pckoid, \r\n            T.ean AS PriceMonitorBa" +
                    "se_Ean, \r\n            T.totdrugqn AS PriceMonitorBase_Totdrugqn, \r\n            T" +
                    ".pcknm AS PriceMonitorBase_Pcknm, \r\n            T.oid AS PriceMonitorBase_Oid, \r" +
                    "\n            T.drugoid AS PriceMonitorBase_Drugoid, \r\n            True AS _from0" +
                    "\r\n        FROM PostgresEntitiesStoreContainer.price_monitor_bases AS T\r\n    ) AS" +
                    " T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PriceMonitorOsts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1349()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2217);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PriceMonitorOsts\r\n        [PostgresModel.Pric");
            viewString.Append("eMonitorOst](T1.PriceMonitorOst_Packnx, T1.PriceMonitorOst_Year, T1.PriceMonitor");
            viewString.Append("Ost_Month, T1.PriceMonitorOst_Irecoid, T1.PriceMonitorOst_Series, T1.PriceMonito");
            viewString.Append("rOst_Quantity, T1.PriceMonitorOst_Funds, T1.PriceMonitorOst_Vendor, T1.PriceMoni");
            viewString.Append("torOst_Prcprice, T1.PriceMonitorOst_Rtlprice, T1.PriceMonitorOst_Rtlpremium, T1.");
            viewString.Append("PriceMonitorOst_Remark, T1.PriceMonitorOst_Srcorg, T1.PriceMonitorOst_Ipv, T1.Pr");
            viewString.Append("iceMonitorOst_Medic, T1.PriceMonitorOst_Kart, T1.PriceMonitorOst_Date, T1.PriceM");
            viewString.Append("onitorOst_MoGroup, T1.PriceMonitorOst_Proizvoditel, T1.PriceMonitorOst_Oid, T1.P");
            viewString.Append("riceMonitorOst_Vendoroid, T1.PriceMonitorOst_Price, T1.PriceMonitorOst_MnfPrice,");
            viewString.Append(" T1.PriceMonitorOst_PriceMonitorBase, T1.PriceMonitorOst_Supplier)\r\n    FROM (\r\n");
            viewString.Append("        SELECT \r\n            T.packnx AS PriceMonitorOst_Packnx, \r\n            T");
            viewString.Append(".year AS PriceMonitorOst_Year, \r\n            T.month AS PriceMonitorOst_Month, \r");
            viewString.Append("\n            T.irecoid AS PriceMonitorOst_Irecoid, \r\n            T.series AS Pri");
            viewString.Append("ceMonitorOst_Series, \r\n            T.quantity AS PriceMonitorOst_Quantity, \r\n   ");
            viewString.Append("         T.funds AS PriceMonitorOst_Funds, \r\n            T.vendor AS PriceMonito");
            viewString.Append("rOst_Vendor, \r\n            T.prcprice AS PriceMonitorOst_Prcprice, \r\n           ");
            viewString.Append(" T.rtlprice AS PriceMonitorOst_Rtlprice, \r\n            T.rtlpremium AS PriceMoni");
            viewString.Append("torOst_Rtlpremium, \r\n            T.remark AS PriceMonitorOst_Remark, \r\n         ");
            viewString.Append("   T.srcorg AS PriceMonitorOst_Srcorg, \r\n            T.ipv AS PriceMonitorOst_Ip");
            viewString.Append("v, \r\n            T.medic AS PriceMonitorOst_Medic, \r\n            T.kart AS Price");
            viewString.Append("MonitorOst_Kart, \r\n            T.date AS PriceMonitorOst_Date, \r\n            T.m");
            viewString.Append("o_group AS PriceMonitorOst_MoGroup, \r\n            T.proizvoditel AS PriceMonitor");
            viewString.Append("Ost_Proizvoditel, \r\n            T.oid AS PriceMonitorOst_Oid, \r\n            T.ve");
            viewString.Append("ndoroid AS PriceMonitorOst_Vendoroid, \r\n            T.price AS PriceMonitorOst_P");
            viewString.Append("rice, \r\n            T.mnf_price AS PriceMonitorOst_MnfPrice, \r\n            T.pri");
            viewString.Append("ce_monitor_base AS PriceMonitorOst_PriceMonitorBase, \r\n            T.supplier AS");
            viewString.Append(" PriceMonitorOst_Supplier, \r\n            True AS _from0\r\n        FROM PostgresEn");
            viewString.Append("titiesStoreContainer.price_monitor_osts AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PriceMonitorOsts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.produce_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1350()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.produce_types", @"
    SELECT VALUE -- Constructing produce_types
        [PostgresModel.Store.produce_type](T1.[produce_type.oid], T1.[produce_type.name_pr], T1.[produce_type.order_pr], T1.[produce_type.synonim])
    FROM (
        SELECT 
            T.Oid AS [produce_type.oid], 
            T.NamePr AS [produce_type.name_pr], 
            T.OrderPr AS [produce_type.order_pr], 
            T.Synonim AS [produce_type.synonim], 
            True AS _from0
        FROM PostgresEntities.ProduceTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProduceTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1351()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProduceTypes", @"
    SELECT VALUE -- Constructing ProduceTypes
        [PostgresModel.ProduceType](T1.ProduceType_Oid, T1.ProduceType_NamePr, T1.ProduceType_OrderPr, T1.ProduceType_Synonim)
    FROM (
        SELECT 
            T.oid AS ProduceType_Oid, 
            T.name_pr AS ProduceType_NamePr, 
            T.order_pr AS ProduceType_OrderPr, 
            T.synonim AS ProduceType_Synonim, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.produce_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.prodcerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1352()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.prodcerts", @"
    SELECT VALUE -- Constructing prodcerts
        [PostgresModel.Store.prodcert](T1.prodcert_oid, T1.prodcert_parent, T1.prodcert_value, T1.prodcert_store, T1.prodcert_foreighn, T1.prodcert_lpu)
    FROM (
        SELECT 
            T.Oid AS prodcert_oid, 
            T.Parent AS prodcert_parent, 
            T.[Value] AS prodcert_value, 
            T.Store AS prodcert_store, 
            T.Foreighn AS prodcert_foreighn, 
            T.Lpu AS prodcert_lpu, 
            True AS _from0
        FROM PostgresEntities.Prodcerts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Prodcerts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1353()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Prodcerts", @"
    SELECT VALUE -- Constructing Prodcerts
        [PostgresModel.Prodcert](T1.Prodcert_Oid, T1.Prodcert_Parent, T1.Prodcert_Value, T1.Prodcert_Store, T1.Prodcert_Foreighn, T1.Prodcert_Lpu)
    FROM (
        SELECT 
            T.oid AS Prodcert_Oid, 
            T.parent AS Prodcert_Parent, 
            T.[value] AS Prodcert_Value, 
            T.store AS Prodcert_Store, 
            T.foreighn AS Prodcert_Foreighn, 
            T.lpu AS Prodcert_Lpu, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.prodcerts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.template_docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1354()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.template_docs", @"
    SELECT VALUE -- Constructing template_docs
        [PostgresModel.Store.template_doc](T1.[template_doc.oid], T1.[template_doc.vid], T1.[template_doc.vid_move], T1.[template_doc.descr], T1.[template_doc.mo], T1.[template_doc.mo_group], T1.[template_doc.create_date])
    FROM (
        SELECT 
            T.Oid AS [template_doc.oid], 
            T.Vid AS [template_doc.vid], 
            T.VidMove AS [template_doc.vid_move], 
            T.Descr AS [template_doc.descr], 
            T.Mo AS [template_doc.mo], 
            T.MoGroup AS [template_doc.mo_group], 
            T.CreateDate AS [template_doc.create_date], 
            True AS _from0
        FROM PostgresEntities.TemplateDocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemplateDocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1355()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemplateDocs", @"
    SELECT VALUE -- Constructing TemplateDocs
        [PostgresModel.TemplateDoc](T1.TemplateDoc_Oid, T1.TemplateDoc_Vid, T1.TemplateDoc_VidMove, T1.TemplateDoc_Descr, T1.TemplateDoc_Mo, T1.TemplateDoc_MoGroup, T1.TemplateDoc_CreateDate)
    FROM (
        SELECT 
            T.oid AS TemplateDoc_Oid, 
            T.vid AS TemplateDoc_Vid, 
            T.vid_move AS TemplateDoc_VidMove, 
            T.descr AS TemplateDoc_Descr, 
            T.mo AS TemplateDoc_Mo, 
            T.mo_group AS TemplateDoc_MoGroup, 
            T.create_date AS TemplateDoc_CreateDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.template_docs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temp_tkarts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1356()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temp_tkarts", @"
    SELECT VALUE -- Constructing temp_tkarts
        [PostgresModel.Store.temp_tkart](T1.[temp_tkart.kartoid], T1.[temp_tkart.moid], T1.[temp_tkart.del], T1.[temp_tkart.medicoid], T1.[temp_tkart.name], T1.[temp_tkart.serial], T1.[temp_tkart.goden], T1.[temp_tkart.prodcertoid], T1.[temp_tkart.certificate], T1.[temp_tkart.producer])
    FROM (
        SELECT 
            T.Kartoid AS [temp_tkart.kartoid], 
            T.Moid AS [temp_tkart.moid], 
            T.Del AS [temp_tkart.del], 
            T.Medicoid AS [temp_tkart.medicoid], 
            T.Name AS [temp_tkart.name], 
            T.Serial AS [temp_tkart.serial], 
            T.Goden AS [temp_tkart.goden], 
            T.Prodcertoid AS [temp_tkart.prodcertoid], 
            T.Certificate AS [temp_tkart.certificate], 
            T.Producer AS [temp_tkart.producer], 
            True AS _from0
        FROM PostgresEntities.TempTkarts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TempTkarts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1357()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TempTkarts", @"
    SELECT VALUE -- Constructing TempTkarts
        [PostgresModel.TempTkart](T1.TempTkart_Kartoid, T1.TempTkart_Moid, T1.TempTkart_Del, T1.TempTkart_Medicoid, T1.TempTkart_Name, T1.TempTkart_Serial, T1.TempTkart_Goden, T1.TempTkart_Prodcertoid, T1.TempTkart_Certificate, T1.TempTkart_Producer)
    FROM (
        SELECT 
            T.kartoid AS TempTkart_Kartoid, 
            T.moid AS TempTkart_Moid, 
            T.del AS TempTkart_Del, 
            T.medicoid AS TempTkart_Medicoid, 
            T.name AS TempTkart_Name, 
            T.serial AS TempTkart_Serial, 
            T.goden AS TempTkart_Goden, 
            T.prodcertoid AS TempTkart_Prodcertoid, 
            T.certificate AS TempTkart_Certificate, 
            T.producer AS TempTkart_Producer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temp_tkarts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temp_tmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1358()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temp_tmedics", @"
    SELECT VALUE -- Constructing temp_tmedics
        [PostgresModel.Store.temp_tmedic](T1.[temp_tmedic.name], T1.[temp_tmedic.eioid], T1.[temp_tmedic.farmgroid], T1.[temp_tmedic.account_gr], T1.[temp_tmedic.medicoid], T1.[temp_tmedic.leveloid], T1.[temp_tmedic.comment], T1.[temp_tmedic.pku], T1.[temp_tmedic.nomen_rls], T1.[temp_tmedic.eancode], T1.[temp_tmedic.type], T1.[temp_tmedic.paytype], T1.[temp_tmedic.fpackinupack], T1.[temp_tmedic.fpackoid], T1.[temp_tmedic.mass], T1.[temp_tmedic.massunits])
    FROM (
        SELECT 
            T.Name AS [temp_tmedic.name], 
            T.Eioid AS [temp_tmedic.eioid], 
            T.Farmgroid AS [temp_tmedic.farmgroid], 
            T.AccountGr AS [temp_tmedic.account_gr], 
            T.Medicoid AS [temp_tmedic.medicoid], 
            T.Leveloid AS [temp_tmedic.leveloid], 
            T.Comment AS [temp_tmedic.comment], 
            T.Pku AS [temp_tmedic.pku], 
            T.NomenRls AS [temp_tmedic.nomen_rls], 
            T.Eancode AS [temp_tmedic.eancode], 
            T.Type AS [temp_tmedic.type], 
            T.Paytype AS [temp_tmedic.paytype], 
            T.Fpackinupack AS [temp_tmedic.fpackinupack], 
            T.Fpackoid AS [temp_tmedic.fpackoid], 
            T.Mass AS [temp_tmedic.mass], 
            T.Massunits AS [temp_tmedic.massunits], 
            True AS _from0
        FROM PostgresEntities.TempTmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TempTmedics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1359()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TempTmedics", @"
    SELECT VALUE -- Constructing TempTmedics
        [PostgresModel.TempTmedic](T1.TempTmedic_Name, T1.TempTmedic_Eioid, T1.TempTmedic_Farmgroid, T1.TempTmedic_AccountGr, T1.TempTmedic_Medicoid, T1.TempTmedic_Leveloid, T1.TempTmedic_Comment, T1.TempTmedic_Pku, T1.TempTmedic_NomenRls, T1.TempTmedic_Eancode, T1.TempTmedic_Type, T1.TempTmedic_Paytype, T1.TempTmedic_Fpackinupack, T1.TempTmedic_Fpackoid, T1.TempTmedic_Mass, T1.TempTmedic_Massunits)
    FROM (
        SELECT 
            T.name AS TempTmedic_Name, 
            T.eioid AS TempTmedic_Eioid, 
            T.farmgroid AS TempTmedic_Farmgroid, 
            T.account_gr AS TempTmedic_AccountGr, 
            T.medicoid AS TempTmedic_Medicoid, 
            T.leveloid AS TempTmedic_Leveloid, 
            T.comment AS TempTmedic_Comment, 
            T.pku AS TempTmedic_Pku, 
            T.nomen_rls AS TempTmedic_NomenRls, 
            T.eancode AS TempTmedic_Eancode, 
            T.type AS TempTmedic_Type, 
            T.paytype AS TempTmedic_Paytype, 
            T.fpackinupack AS TempTmedic_Fpackinupack, 
            T.fpackoid AS TempTmedic_Fpackoid, 
            T.mass AS TempTmedic_Mass, 
            T.massunits AS TempTmedic_Massunits, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temp_tmedics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temp_tmos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1360()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temp_tmos", @"
    SELECT VALUE -- Constructing temp_tmos
        [PostgresModel.Store.temp_tmo](T1.[temp_tmo.name], T1.[temp_tmo.crm], T1.[temp_tmo.parent], T1.[temp_tmo.treb], T1.[temp_tmo.sotroid], T1.[temp_tmo.moid_tmp], T1.[temp_tmo.moid])
    FROM (
        SELECT 
            T.Name AS [temp_tmo.name], 
            T.Crm AS [temp_tmo.crm], 
            T.Parent AS [temp_tmo.parent], 
            T.Treb AS [temp_tmo.treb], 
            T.Sotroid AS [temp_tmo.sotroid], 
            T.MoidTmp AS [temp_tmo.moid_tmp], 
            T.Moid AS [temp_tmo.moid], 
            True AS _from0
        FROM PostgresEntities.TempTmos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TempTmos
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1361()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TempTmos", @"
    SELECT VALUE -- Constructing TempTmos
        [PostgresModel.TempTmo](T1.TempTmo_Name, T1.TempTmo_Crm, T1.TempTmo_Parent, T1.TempTmo_Treb, T1.TempTmo_Sotroid, T1.TempTmo_MoidTmp, T1.TempTmo_Moid)
    FROM (
        SELECT 
            T.name AS TempTmo_Name, 
            T.crm AS TempTmo_Crm, 
            T.parent AS TempTmo_Parent, 
            T.treb AS TempTmo_Treb, 
            T.sotroid AS TempTmo_Sotroid, 
            T.moid_tmp AS TempTmo_MoidTmp, 
            T.moid AS TempTmo_Moid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temp_tmos AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.treb_dpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1362()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.treb_dpcs", @"
    SELECT VALUE -- Constructing treb_dpcs
        [PostgresModel.Store.treb_dpc](T1.[treb_dpc.oid], T1.[treb_dpc.treb_oid], T1.[treb_dpc.medic_oid], T1.[treb_dpc.kol], T1.[treb_dpc.position_doc], T1.[treb_dpc.nazmedlech_oid], T1.[treb_dpc.mo_oid_create], T1.[treb_dpc.create_date], T1.[treb_dpc.mo_oid_edit], T1.[treb_dpc.kol_old], T1.[treb_dpc.edit_date])
    FROM (
        SELECT 
            T.Oid AS [treb_dpc.oid], 
            T.TrebOid AS [treb_dpc.treb_oid], 
            T.MedicOid AS [treb_dpc.medic_oid], 
            T.Kol AS [treb_dpc.kol], 
            T.PositionDoc AS [treb_dpc.position_doc], 
            T.NazmedlechOid AS [treb_dpc.nazmedlech_oid], 
            T.MoOidCreate AS [treb_dpc.mo_oid_create], 
            T.CreateDate AS [treb_dpc.create_date], 
            T.MoOidEdit AS [treb_dpc.mo_oid_edit], 
            T.KolOld AS [treb_dpc.kol_old], 
            T.EditDate AS [treb_dpc.edit_date], 
            True AS _from0
        FROM PostgresEntities.TrebDpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrebDpcs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1363()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrebDpcs", @"
    SELECT VALUE -- Constructing TrebDpcs
        [PostgresModel.TrebDpc](T1.TrebDpc_Oid, T1.TrebDpc_TrebOid, T1.TrebDpc_MedicOid, T1.TrebDpc_Kol, T1.TrebDpc_PositionDoc, T1.TrebDpc_NazmedlechOid, T1.TrebDpc_MoOidCreate, T1.TrebDpc_CreateDate, T1.TrebDpc_MoOidEdit, T1.TrebDpc_KolOld, T1.TrebDpc_EditDate)
    FROM (
        SELECT 
            T.oid AS TrebDpc_Oid, 
            T.treb_oid AS TrebDpc_TrebOid, 
            T.medic_oid AS TrebDpc_MedicOid, 
            T.kol AS TrebDpc_Kol, 
            T.position_doc AS TrebDpc_PositionDoc, 
            T.nazmedlech_oid AS TrebDpc_NazmedlechOid, 
            T.mo_oid_create AS TrebDpc_MoOidCreate, 
            T.create_date AS TrebDpc_CreateDate, 
            T.mo_oid_edit AS TrebDpc_MoOidEdit, 
            T.kol_old AS TrebDpc_KolOld, 
            T.edit_date AS TrebDpc_EditDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.treb_dpcs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.temp_osts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1364()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.temp_osts", @"
    SELECT VALUE -- Constructing temp_osts
        [PostgresModel.Store.temp_ost](T1.[temp_ost.kart], T1.[temp_ost.kol], T1.[temp_ost.mo_group], T1.[temp_ost.oid])
    FROM (
        SELECT 
            T.Kart AS [temp_ost.kart], 
            T.Kol AS [temp_ost.kol], 
            T.MoGroup AS [temp_ost.mo_group], 
            T.Oid AS [temp_ost.oid], 
            True AS _from0
        FROM PostgresEntities.TempOsts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TempOsts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1365()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TempOsts", @"
    SELECT VALUE -- Constructing TempOsts
        [PostgresModel.TempOst](T1.TempOst_Kart, T1.TempOst_Kol, T1.TempOst_MoGroup, T1.TempOst_Oid)
    FROM (
        SELECT 
            T.kart AS TempOst_Kart, 
            T.kol AS TempOst_Kol, 
            T.mo_group AS TempOst_MoGroup, 
            T.oid AS TempOst_Oid, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.temp_osts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tkartcomposites
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1366()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tkartcomposites", @"
    SELECT VALUE -- Constructing tkartcomposites
        [PostgresModel.Store.tkartcomposite](T1.tkartcomposite_kartoid, T1.tkartcomposite_moid, T1.tkartcomposite_del, T1.tkartcomposite_medicoid, T1.tkartcomposite_name, T1.tkartcomposite_serial, T1.tkartcomposite_goden, T1.tkartcomposite_prodcertoid, T1.tkartcomposite_certificate, T1.tkartcomposite_producer)
    FROM (
        SELECT 
            T.Kartoid AS tkartcomposite_kartoid, 
            T.Moid AS tkartcomposite_moid, 
            T.Del AS tkartcomposite_del, 
            T.Medicoid AS tkartcomposite_medicoid, 
            T.Name AS tkartcomposite_name, 
            T.Serial AS tkartcomposite_serial, 
            T.Goden AS tkartcomposite_goden, 
            T.Prodcertoid AS tkartcomposite_prodcertoid, 
            T.Certificate AS tkartcomposite_certificate, 
            T.Producer AS tkartcomposite_producer, 
            True AS _from0
        FROM PostgresEntities.Tkartcomposites AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tkartcomposites
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1367()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tkartcomposites", @"
    SELECT VALUE -- Constructing Tkartcomposites
        [PostgresModel.Tkartcomposite](T1.Tkartcomposite_Kartoid, T1.Tkartcomposite_Moid, T1.Tkartcomposite_Del, T1.Tkartcomposite_Medicoid, T1.Tkartcomposite_Name, T1.Tkartcomposite_Serial, T1.Tkartcomposite_Goden, T1.Tkartcomposite_Prodcertoid, T1.Tkartcomposite_Certificate, T1.Tkartcomposite_Producer)
    FROM (
        SELECT 
            T.kartoid AS Tkartcomposite_Kartoid, 
            T.moid AS Tkartcomposite_Moid, 
            T.del AS Tkartcomposite_Del, 
            T.medicoid AS Tkartcomposite_Medicoid, 
            T.name AS Tkartcomposite_Name, 
            T.serial AS Tkartcomposite_Serial, 
            T.goden AS Tkartcomposite_Goden, 
            T.prodcertoid AS Tkartcomposite_Prodcertoid, 
            T.certificate AS Tkartcomposite_Certificate, 
            T.producer AS Tkartcomposite_Producer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tkartcomposites AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tmedickls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1368()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tmedickls", @"
    SELECT VALUE -- Constructing tmedickls
        [PostgresModel.Store.tmedickl](T1.tmedickl_medickloid, T1.tmedickl_kloid, T1.tmedickl_medicoid, T1.tmedickl_serial, T1.tmedickl_uslpostav, T1.tmedickl_dpoid, T1.tmedickl_del, T1.tmedickl_certificate, T1.tmedickl_producer)
    FROM (
        SELECT 
            T.Medickloid AS tmedickl_medickloid, 
            T.Kloid AS tmedickl_kloid, 
            T.Medicoid AS tmedickl_medicoid, 
            T.Serial AS tmedickl_serial, 
            T.Uslpostav AS tmedickl_uslpostav, 
            T.Dpoid AS tmedickl_dpoid, 
            T.Del AS tmedickl_del, 
            T.Certificate AS tmedickl_certificate, 
            T.Producer AS tmedickl_producer, 
            True AS _from0
        FROM PostgresEntities.Tmedickls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tmedickls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1369()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tmedickls", @"
    SELECT VALUE -- Constructing Tmedickls
        [PostgresModel.Tmedickl](T1.Tmedickl_Medickloid, T1.Tmedickl_Kloid, T1.Tmedickl_Medicoid, T1.Tmedickl_Serial, T1.Tmedickl_Uslpostav, T1.Tmedickl_Dpoid, T1.Tmedickl_Del, T1.Tmedickl_Certificate, T1.Tmedickl_Producer)
    FROM (
        SELECT 
            T.medickloid AS Tmedickl_Medickloid, 
            T.kloid AS Tmedickl_Kloid, 
            T.medicoid AS Tmedickl_Medicoid, 
            T.serial AS Tmedickl_Serial, 
            T.uslpostav AS Tmedickl_Uslpostav, 
            T.dpoid AS Tmedickl_Dpoid, 
            T.del AS Tmedickl_Del, 
            T.certificate AS Tmedickl_Certificate, 
            T.producer AS Tmedickl_Producer, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tmedickls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.latin_names_sotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1370()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.latin_names_sotrs", @"
    SELECT VALUE -- Constructing latin_names_sotrs
        [PostgresModel.Store.latin_names_sotr](T1.[latin_names_sotr.oid], T1.[latin_names_sotr.tlatin_names], T1.[latin_names_sotr.tsotr])
    FROM (
        SELECT 
            T.Oid AS [latin_names_sotr.oid], 
            T.TlatinNames AS [latin_names_sotr.tlatin_names], 
            T.Tsotr AS [latin_names_sotr.tsotr], 
            True AS _from0
        FROM PostgresEntities.LatinNamesSotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.names_medicines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1371()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.names_medicines", @"
    SELECT VALUE -- Constructing names_medicines
        [PostgresModel.Store.names_medicines](T1.[names_medicines.oid], T1.[names_medicines.name], T1.[names_medicines.del], T1.[names_medicines.medic_oid], T1.[names_medicines.latinnames_oid], T1.[names_medicines.dlo_exp_medic], T1.[names_medicines.cur_price])
    FROM (
        SELECT 
            T.Oid AS [names_medicines.oid], 
            T.Name AS [names_medicines.name], 
            T.Del AS [names_medicines.del], 
            T.MedicOid AS [names_medicines.medic_oid], 
            T.LatinnamesOid AS [names_medicines.latinnames_oid], 
            T.DloExpMedic AS [names_medicines.dlo_exp_medic], 
            T.CurPrice AS [names_medicines.cur_price], 
            True AS _from0
        FROM PostgresEntities.NamesMedicines AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.LatinNamesSotrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1372()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.LatinNamesSotrs", @"
    SELECT VALUE -- Constructing LatinNamesSotrs
        [PostgresModel.LatinNamesSotr](T1.LatinNamesSotr_Oid, T1.LatinNamesSotr_TlatinNames, T1.LatinNamesSotr_Tsotr)
    FROM (
        SELECT 
            T.oid AS LatinNamesSotr_Oid, 
            T.tlatin_names AS LatinNamesSotr_TlatinNames, 
            T.tsotr AS LatinNamesSotr_Tsotr, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.latin_names_sotrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.NamesMedicines
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1373()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.NamesMedicines", @"
    SELECT VALUE -- Constructing NamesMedicines
        [PostgresModel.NamesMedicine](T1.NamesMedicine_Oid, T1.NamesMedicine_Name, T1.NamesMedicine_Del, T1.NamesMedicine_MedicOid, T1.NamesMedicine_LatinnamesOid, T1.NamesMedicine_DloExpMedic, T1.NamesMedicine_CurPrice)
    FROM (
        SELECT 
            T.oid AS NamesMedicine_Oid, 
            T.name AS NamesMedicine_Name, 
            T.del AS NamesMedicine_Del, 
            T.medic_oid AS NamesMedicine_MedicOid, 
            T.latinnames_oid AS NamesMedicine_LatinnamesOid, 
            T.dlo_exp_medic AS NamesMedicine_DloExpMedic, 
            T.cur_price AS NamesMedicine_CurPrice, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.names_medicines AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.treb_dpc_bynazs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1374()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.treb_dpc_bynazs", @"
    SELECT VALUE -- Constructing treb_dpc_bynazs
        [PostgresModel.Store.treb_dpc_bynaz](T1.[treb_dpc_bynaz.treb], T1.[treb_dpc_bynaz.medicid], T1.[treb_dpc_bynaz.trebkol], T1.[treb_dpc_bynaz.naznkol_u], T1.[treb_dpc_bynaz.oid], T1.[treb_dpc_bynaz.latin_names], T1.[treb_dpc_bynaz.massunits], T1.[treb_dpc_bynaz.trebkol_old], T1.[treb_dpc_bynaz.naznkol_u_old])
    FROM (
        SELECT 
            T.Treb AS [treb_dpc_bynaz.treb], 
            T.Medicid AS [treb_dpc_bynaz.medicid], 
            T.Trebkol AS [treb_dpc_bynaz.trebkol], 
            T.NaznkolU AS [treb_dpc_bynaz.naznkol_u], 
            T.Oid AS [treb_dpc_bynaz.oid], 
            T.LatinNames AS [treb_dpc_bynaz.latin_names], 
            T.Massunits AS [treb_dpc_bynaz.massunits], 
            T.TrebkolOld AS [treb_dpc_bynaz.trebkol_old], 
            T.NaznkolUOld AS [treb_dpc_bynaz.naznkol_u_old], 
            True AS _from0
        FROM PostgresEntities.TrebDpcBynazs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrebDpcBynazs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1375()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrebDpcBynazs", @"
    SELECT VALUE -- Constructing TrebDpcBynazs
        [PostgresModel.TrebDpcBynaz](T1.TrebDpcBynaz_Treb, T1.TrebDpcBynaz_Medicid, T1.TrebDpcBynaz_Trebkol, T1.TrebDpcBynaz_NaznkolU, T1.TrebDpcBynaz_Oid, T1.TrebDpcBynaz_LatinNames, T1.TrebDpcBynaz_Massunits, T1.TrebDpcBynaz_TrebkolOld, T1.TrebDpcBynaz_NaznkolUOld)
    FROM (
        SELECT 
            T.treb AS TrebDpcBynaz_Treb, 
            T.medicid AS TrebDpcBynaz_Medicid, 
            T.trebkol AS TrebDpcBynaz_Trebkol, 
            T.naznkol_u AS TrebDpcBynaz_NaznkolU, 
            T.oid AS TrebDpcBynaz_Oid, 
            T.latin_names AS TrebDpcBynaz_LatinNames, 
            T.massunits AS TrebDpcBynaz_Massunits, 
            T.trebkol_old AS TrebDpcBynaz_TrebkolOld, 
            T.naznkol_u_old AS TrebDpcBynaz_NaznkolUOld, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.treb_dpc_bynazs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.treb_quotas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1376()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.treb_quotas", @"
    SELECT VALUE -- Constructing treb_quotas
        [PostgresModel.Store.treb_quota](T1.[treb_quota.oid], T1.[treb_quota.medic], T1.[treb_quota.kol], T1.[treb_quota.date1], T1.[treb_quota.date2], T1.[treb_quota.mo_group], T1.[treb_quota.mo_create], T1.[treb_quota.create_date], T1.[treb_quota.mo_edit], T1.[treb_quota.edit_date])
    FROM (
        SELECT 
            T.Oid AS [treb_quota.oid], 
            T.Medic AS [treb_quota.medic], 
            T.Kol AS [treb_quota.kol], 
            T.Date1 AS [treb_quota.date1], 
            T.Date2 AS [treb_quota.date2], 
            T.MoGroup AS [treb_quota.mo_group], 
            T.MoCreate AS [treb_quota.mo_create], 
            T.CreateDate AS [treb_quota.create_date], 
            T.MoEdit AS [treb_quota.mo_edit], 
            T.EditDate AS [treb_quota.edit_date], 
            True AS _from0
        FROM PostgresEntities.TrebQuotas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TrebQuotas
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1377()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TrebQuotas", @"
    SELECT VALUE -- Constructing TrebQuotas
        [PostgresModel.TrebQuota](T1.TrebQuota_Oid, T1.TrebQuota_Medic, T1.TrebQuota_Kol, T1.TrebQuota_Date1, T1.TrebQuota_Date2, T1.TrebQuota_MoGroup, T1.TrebQuota_MoCreate, T1.TrebQuota_CreateDate, T1.TrebQuota_MoEdit, T1.TrebQuota_EditDate)
    FROM (
        SELECT 
            T.oid AS TrebQuota_Oid, 
            T.medic AS TrebQuota_Medic, 
            T.kol AS TrebQuota_Kol, 
            T.date1 AS TrebQuota_Date1, 
            T.date2 AS TrebQuota_Date2, 
            T.mo_group AS TrebQuota_MoGroup, 
            T.mo_create AS TrebQuota_MoCreate, 
            T.create_date AS TrebQuota_CreateDate, 
            T.mo_edit AS TrebQuota_MoEdit, 
            T.edit_date AS TrebQuota_EditDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.treb_quotas AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.type_incomes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1378()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.type_incomes", @"
    SELECT VALUE -- Constructing type_incomes
        [PostgresModel.Store.type_income](T1.[type_income.oid], T1.[type_income.name])
    FROM (
        SELECT 
            T.Oid AS [type_income.oid], 
            T.Name AS [type_income.name], 
            True AS _from0
        FROM PostgresEntities.TypeIncomes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TypeIncomes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1379()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TypeIncomes", @"
    SELECT VALUE -- Constructing TypeIncomes
        [PostgresModel.TypeIncome](T1.TypeIncome_Oid, T1.TypeIncome_Name)
    FROM (
        SELECT 
            T.oid AS TypeIncome_Oid, 
            T.name AS TypeIncome_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.type_incomes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.xray_bonuses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1380()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.xray_bonuses", @"
    SELECT VALUE -- Constructing xray_bonuses
        [PostgresModel.Store.xray_bonus](T1.[xray_bonus.oid], T1.[xray_bonus.name], T1.[xray_bonus.calc_factor])
    FROM (
        SELECT 
            T.Oid AS [xray_bonus.oid], 
            T.Name AS [xray_bonus.name], 
            T.CalcFactor AS [xray_bonus.calc_factor], 
            True AS _from0
        FROM PostgresEntities.XrayBonuses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.XrayBonuses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1381()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.XrayBonuses", @"
    SELECT VALUE -- Constructing XrayBonuses
        [PostgresModel.XrayBonus](T1.XrayBonus_Oid, T1.XrayBonus_Name, T1.XrayBonus_CalcFactor)
    FROM (
        SELECT 
            T.oid AS XrayBonus_Oid, 
            T.name AS XrayBonus_Name, 
            T.calc_factor AS XrayBonus_CalcFactor, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.xray_bonuses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.export_cod_tables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1382()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.export_cod_tables", @"
    SELECT VALUE -- Constructing export_cod_tables
        [PostgresModel.Store.export_cod_table](T1.[export_cod_table.oid], T1.[export_cod_table.table_name], T1.[export_cod_table.sql], T1.[export_cod_table.order], T1.[export_cod_table.del])
    FROM (
        SELECT 
            T.Oid AS [export_cod_table.oid], 
            T.TableName AS [export_cod_table.table_name], 
            T.Sql AS [export_cod_table.sql], 
            T.[Order] AS [export_cod_table.order], 
            T.Del AS [export_cod_table.del], 
            True AS _from0
        FROM PostgresEntities.ExportCodTables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExportCodTables
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1383()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExportCodTables", @"
    SELECT VALUE -- Constructing ExportCodTables
        [PostgresModel.ExportCodTable](T1.ExportCodTable_Oid, T1.ExportCodTable_TableName, T1.ExportCodTable_Sql, T1.ExportCodTable_Order, T1.ExportCodTable_Del)
    FROM (
        SELECT 
            T.oid AS ExportCodTable_Oid, 
            T.table_name AS ExportCodTable_TableName, 
            T.sql AS ExportCodTable_Sql, 
            T.[order] AS ExportCodTable_Order, 
            T.del AS ExportCodTable_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.export_cod_tables AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.export_cod_dictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1384()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.export_cod_dictionaries", @"
    SELECT VALUE -- Constructing export_cod_dictionaries
        [PostgresModel.Store.export_cod_dictionary](T1.[export_cod_dictionary.oid], T1.[export_cod_dictionary.table_name], T1.[export_cod_dictionary.sql], T1.[export_cod_dictionary.order], T1.[export_cod_dictionary.del])
    FROM (
        SELECT 
            T.Oid AS [export_cod_dictionary.oid], 
            T.TableName AS [export_cod_dictionary.table_name], 
            T.Sql AS [export_cod_dictionary.sql], 
            T.[Order] AS [export_cod_dictionary.order], 
            T.Del AS [export_cod_dictionary.del], 
            True AS _from0
        FROM PostgresEntities.ExportCodDictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ExportCodDictionaries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1385()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ExportCodDictionaries", @"
    SELECT VALUE -- Constructing ExportCodDictionaries
        [PostgresModel.ExportCodDictionary](T1.ExportCodDictionary_Oid, T1.ExportCodDictionary_TableName, T1.ExportCodDictionary_Sql, T1.ExportCodDictionary_Order, T1.ExportCodDictionary_Del)
    FROM (
        SELECT 
            T.oid AS ExportCodDictionary_Oid, 
            T.table_name AS ExportCodDictionary_TableName, 
            T.sql AS ExportCodDictionary_Sql, 
            T.[order] AS ExportCodDictionary_Order, 
            T.del AS ExportCodDictionary_Del, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.export_cod_dictionaries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.vk_conclusin_reasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1386()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.vk_conclusin_reasons", @"
    SELECT VALUE -- Constructing vk_conclusin_reasons
        [PostgresModel.Store.vk_conclusin_reason](T1.[vk_conclusin_reason.oid], T1.[vk_conclusin_reason.name], T1.[vk_conclusin_reason.short_name], T1.[vk_conclusin_reason.show])
    FROM (
        SELECT 
            T.Oid AS [vk_conclusin_reason.oid], 
            T.Name AS [vk_conclusin_reason.name], 
            T.ShortName AS [vk_conclusin_reason.short_name], 
            T.Show AS [vk_conclusin_reason.show], 
            True AS _from0
        FROM PostgresEntities.VkConclusinReasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.VkConclusinReasons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1387()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.VkConclusinReasons", @"
    SELECT VALUE -- Constructing VkConclusinReasons
        [PostgresModel.VkConclusinReason](T1.VkConclusinReason_Oid, T1.VkConclusinReason_Name, T1.VkConclusinReason_ShortName, T1.VkConclusinReason_Show)
    FROM (
        SELECT 
            T.oid AS VkConclusinReason_Oid, 
            T.name AS VkConclusinReason_Name, 
            T.short_name AS VkConclusinReason_ShortName, 
            T.show AS VkConclusinReason_Show, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.vk_conclusin_reasons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.plan_operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1388()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.plan_operations", @"
    SELECT VALUE -- Constructing plan_operations
        [PostgresModel.Store.plan_operation](T1.[plan_operation.oid], T1.[plan_operation.people_id], T1.[plan_operation.sotr_id], T1.[plan_operation.date_operation])
    FROM (
        SELECT 
            T.Oid AS [plan_operation.oid], 
            T.PeopleId AS [plan_operation.people_id], 
            T.SotrId AS [plan_operation.sotr_id], 
            T.DateOperation AS [plan_operation.date_operation], 
            True AS _from0
        FROM PostgresEntities.PlanOperations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PlanOperations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1389()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PlanOperations", @"
    SELECT VALUE -- Constructing PlanOperations
        [PostgresModel.PlanOperation](T1.PlanOperation_Oid, T1.PlanOperation_PeopleId, T1.PlanOperation_SotrId, T1.PlanOperation_DateOperation)
    FROM (
        SELECT 
            T.oid AS PlanOperation_Oid, 
            T.people_id AS PlanOperation_PeopleId, 
            T.sotr_id AS PlanOperation_SotrId, 
            T.date_operation AS PlanOperation_DateOperation, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.plan_operations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.plan_duties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1390()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.plan_duties", @"
    SELECT VALUE -- Constructing plan_duties
        [PostgresModel.Store.plan_duty](T1.[plan_duty.oid], T1.[plan_duty.otdel_id], T1.[plan_duty.sotr_id], T1.[plan_duty.date_duty])
    FROM (
        SELECT 
            T.Oid AS [plan_duty.oid], 
            T.OtdelId AS [plan_duty.otdel_id], 
            T.SotrId AS [plan_duty.sotr_id], 
            T.DateDuty AS [plan_duty.date_duty], 
            True AS _from0
        FROM PostgresEntities.PlanDuties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PlanDuties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1391()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PlanDuties", @"
    SELECT VALUE -- Constructing PlanDuties
        [PostgresModel.PlanDuty](T1.PlanDuty_Oid, T1.PlanDuty_OtdelId, T1.PlanDuty_SotrId, T1.PlanDuty_DateDuty)
    FROM (
        SELECT 
            T.oid AS PlanDuty_Oid, 
            T.otdel_id AS PlanDuty_OtdelId, 
            T.sotr_id AS PlanDuty_SotrId, 
            T.date_duty AS PlanDuty_DateDuty, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.plan_duties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.paidagree_docs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1392()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.paidagree_docs", @"
    SELECT VALUE -- Constructing paidagree_docs
        [PostgresModel.Store.paidagree_docs](T1.[paidagree_docs.oid], T1.[paidagree_docs.name], T1.[paidagree_docs.content])
    FROM (
        SELECT 
            T.Oid AS [paidagree_docs.oid], 
            T.Name AS [paidagree_docs.name], 
            T.Content AS [paidagree_docs.content], 
            True AS _from0
        FROM PostgresEntities.PaidagreeDocs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.paidagree_fields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1393()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.paidagree_fields", @"
    SELECT VALUE -- Constructing paidagree_fields
        [PostgresModel.Store.paidagree_fields](T1.[paidagree_fields.oid], T1.[paidagree_fields.name], T1.[paidagree_fields.code], T1.[paidagree_fields.tag])
    FROM (
        SELECT 
            T.Oid AS [paidagree_fields.oid], 
            T.Name AS [paidagree_fields.name], 
            T.Code AS [paidagree_fields.code], 
            T.Tag AS [paidagree_fields.tag], 
            True AS _from0
        FROM PostgresEntities.PaidagreeFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.paidagree_docs_fields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1394()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.paidagree_docs_fields", @"
    SELECT VALUE -- Constructing paidagree_docs_fields
        [PostgresModel.Store.paidagree_docs_fields](T1.[paidagree_docs_fields.paid_agreement_docs], T1.[paidagree_docs_fields.paid_agreement_fields])
    FROM (
        SELECT 
            Key(T.PaidagreeDocs).Oid AS [paidagree_docs_fields.paid_agreement_docs], 
            Key(T.PaidagreeFields).Oid AS [paidagree_docs_fields.paid_agreement_fields], 
            True AS _from0
        FROM PostgresEntities.PaidagreeDoc_PaidagreeFieldSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PaidagreeDocs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1395()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PaidagreeDocs", @"
    SELECT VALUE -- Constructing PaidagreeDocs
        [PostgresModel.PaidagreeDoc](T1.PaidagreeDoc_Oid, T1.PaidagreeDoc_Name, T1.PaidagreeDoc_Content)
    FROM (
        SELECT 
            T.oid AS PaidagreeDoc_Oid, 
            T.name AS PaidagreeDoc_Name, 
            T.content AS PaidagreeDoc_Content, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.paidagree_docs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PaidagreeFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1396()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PaidagreeFields", @"
    SELECT VALUE -- Constructing PaidagreeFields
        [PostgresModel.PaidagreeField](T1.PaidagreeField_Oid, T1.PaidagreeField_Name, T1.PaidagreeField_Code, T1.PaidagreeField_Tag)
    FROM (
        SELECT 
            T.oid AS PaidagreeField_Oid, 
            T.name AS PaidagreeField_Name, 
            T.code AS PaidagreeField_Code, 
            T.tag AS PaidagreeField_Tag, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.paidagree_fields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.PaidagreeDoc_PaidagreeFieldSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1397()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.PaidagreeDoc_PaidagreeFieldSet", @"
    SELECT VALUE -- Constructing PaidagreeDoc_PaidagreeFieldSet
        [PostgresModel.PaidagreeDoc_PaidagreeField](T3.[PaidagreeDoc_PaidagreeField.PaidagreeDocs], T3.[PaidagreeDoc_PaidagreeField.PaidagreeFields])
    FROM (
        SELECT -- Constructing PaidagreeDocs
            CreateRef(PostgresEntities.PaidagreeDocs, row(T2.[PaidagreeDoc_PaidagreeField.PaidagreeDocs.Oid]),[PostgresModel.PaidagreeDoc]) AS [PaidagreeDoc_PaidagreeField.PaidagreeDocs], 
            T2.[PaidagreeDoc_PaidagreeField.PaidagreeFields]
        FROM (
            SELECT -- Constructing PaidagreeFields
                CreateRef(PostgresEntities.PaidagreeFields, row(T1.[PaidagreeDoc_PaidagreeField.PaidagreeFields.Oid]),[PostgresModel.PaidagreeField]) AS [PaidagreeDoc_PaidagreeField.PaidagreeFields], 
                T1.[PaidagreeDoc_PaidagreeField.PaidagreeDocs.Oid]
            FROM (
                SELECT 
                    T.paid_agreement_docs AS [PaidagreeDoc_PaidagreeField.PaidagreeDocs.Oid], 
                    T.paid_agreement_fields AS [PaidagreeDoc_PaidagreeField.PaidagreeFields.Oid], 
                    True AS _from0
                FROM PostgresEntitiesStoreContainer.paidagree_docs_fields AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.standart_med_helps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1398()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.standart_med_helps", @"
    SELECT VALUE -- Constructing standart_med_helps
        [PostgresModel.Store.standart_med_help](T1.[standart_med_help.id], T1.[standart_med_help.name])
    FROM (
        SELECT 
            T.Id AS [standart_med_help.id], 
            T.Name AS [standart_med_help.name], 
            True AS _from0
        FROM PostgresEntities.StandartMedHelps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.StandartMedHelps
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1399()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.StandartMedHelps", @"
    SELECT VALUE -- Constructing StandartMedHelps
        [PostgresModel.StandartMedHelp](T1.StandartMedHelp_Id, T1.StandartMedHelp_Name)
    FROM (
        SELECT 
            T.id AS StandartMedHelp_Id, 
            T.name AS StandartMedHelp_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.standart_med_helps AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.sicklist_requests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1400()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.sicklist_requests", @"
    SELECT VALUE -- Constructing sicklist_requests
        [PostgresModel.Store.sicklist_request](T1.[sicklist_request.oid], T1.[sicklist_request.datecreate], T1.[sicklist_request.request_num], T1.[sicklist_request.request_quarter], T1.[sicklist_request.begin_count], T1.[sicklist_request.order_count], T1.[sicklist_request.receive_count], T1.[sicklist_request.give_count], T1.[sicklist_request.break_count], T1.[sicklist_request.pinch_count], T1.[sicklist_request.end_count], T1.[sicklist_request.new_order_count])
    FROM (
        SELECT 
            T.Oid AS [sicklist_request.oid], 
            T.Datecreate AS [sicklist_request.datecreate], 
            T.RequestNum AS [sicklist_request.request_num], 
            T.RequestQuarter AS [sicklist_request.request_quarter], 
            T.BeginCount AS [sicklist_request.begin_count], 
            T.OrderCount AS [sicklist_request.order_count], 
            T.ReceiveCount AS [sicklist_request.receive_count], 
            T.GiveCount AS [sicklist_request.give_count], 
            T.BreakCount AS [sicklist_request.break_count], 
            T.PinchCount AS [sicklist_request.pinch_count], 
            T.EndCount AS [sicklist_request.end_count], 
            T.NewOrderCount AS [sicklist_request.new_order_count], 
            True AS _from0
        FROM PostgresEntities.SicklistRequests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.SicklistRequests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1401()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.SicklistRequests", @"
    SELECT VALUE -- Constructing SicklistRequests
        [PostgresModel.SicklistRequest](T1.SicklistRequest_Oid, T1.SicklistRequest_Datecreate, T1.SicklistRequest_RequestNum, T1.SicklistRequest_RequestQuarter, T1.SicklistRequest_BeginCount, T1.SicklistRequest_OrderCount, T1.SicklistRequest_ReceiveCount, T1.SicklistRequest_GiveCount, T1.SicklistRequest_BreakCount, T1.SicklistRequest_PinchCount, T1.SicklistRequest_EndCount, T1.SicklistRequest_NewOrderCount)
    FROM (
        SELECT 
            T.oid AS SicklistRequest_Oid, 
            T.datecreate AS SicklistRequest_Datecreate, 
            T.request_num AS SicklistRequest_RequestNum, 
            T.request_quarter AS SicklistRequest_RequestQuarter, 
            T.begin_count AS SicklistRequest_BeginCount, 
            T.order_count AS SicklistRequest_OrderCount, 
            T.receive_count AS SicklistRequest_ReceiveCount, 
            T.give_count AS SicklistRequest_GiveCount, 
            T.break_count AS SicklistRequest_BreakCount, 
            T.pinch_count AS SicklistRequest_PinchCount, 
            T.end_count AS SicklistRequest_EndCount, 
            T.new_order_count AS SicklistRequest_NewOrderCount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.sicklist_requests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.brak_meds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1402()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.brak_meds", @"
    SELECT VALUE -- Constructing brak_meds
        [PostgresModel.Store.brak_med](T1.[brak_med.oid], T1.[brak_med.drugtxt], T1.[brak_med.labnm], T1.[brak_med.letterdate], T1.[brak_med.letternr], T1.[brak_med.uniqstr], T1.[brak_med.mnfnm], T1.[brak_med.specnm], T1.[brak_med.flgfals], T1.[brak_med.seriesnr], T1.[brak_med.countryr], T1.[brak_med.flgallow], T1.[brak_med.allownr], T1.[brak_med.allowdate], T1.[brak_med.lettertype], T1.[brak_med.filenamefirst], T1.[brak_med.filenameother])
    FROM (
        SELECT 
            T.Oid AS [brak_med.oid], 
            T.Drugtxt AS [brak_med.drugtxt], 
            T.Labnm AS [brak_med.labnm], 
            T.Letterdate AS [brak_med.letterdate], 
            T.Letternr AS [brak_med.letternr], 
            T.Uniqstr AS [brak_med.uniqstr], 
            T.Mnfnm AS [brak_med.mnfnm], 
            T.Specnm AS [brak_med.specnm], 
            T.Flgfals AS [brak_med.flgfals], 
            T.Seriesnr AS [brak_med.seriesnr], 
            T.Countryr AS [brak_med.countryr], 
            T.Flgallow AS [brak_med.flgallow], 
            T.Allownr AS [brak_med.allownr], 
            T.Allowdate AS [brak_med.allowdate], 
            T.Lettertype AS [brak_med.lettertype], 
            T.Filenamefirst AS [brak_med.filenamefirst], 
            T.Filenameother AS [brak_med.filenameother], 
            True AS _from0
        FROM PostgresEntities.BrakMeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.BrakMeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1403()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.BrakMeds", @"
    SELECT VALUE -- Constructing BrakMeds
        [PostgresModel.BrakMed](T1.BrakMed_Oid, T1.BrakMed_Drugtxt, T1.BrakMed_Labnm, T1.BrakMed_Letterdate, T1.BrakMed_Letternr, T1.BrakMed_Uniqstr, T1.BrakMed_Mnfnm, T1.BrakMed_Specnm, T1.BrakMed_Flgfals, T1.BrakMed_Seriesnr, T1.BrakMed_Countryr, T1.BrakMed_Flgallow, T1.BrakMed_Allownr, T1.BrakMed_Allowdate, T1.BrakMed_Lettertype, T1.BrakMed_Filenamefirst, T1.BrakMed_Filenameother)
    FROM (
        SELECT 
            T.oid AS BrakMed_Oid, 
            T.drugtxt AS BrakMed_Drugtxt, 
            T.labnm AS BrakMed_Labnm, 
            T.letterdate AS BrakMed_Letterdate, 
            T.letternr AS BrakMed_Letternr, 
            T.uniqstr AS BrakMed_Uniqstr, 
            T.mnfnm AS BrakMed_Mnfnm, 
            T.specnm AS BrakMed_Specnm, 
            T.flgfals AS BrakMed_Flgfals, 
            T.seriesnr AS BrakMed_Seriesnr, 
            T.countryr AS BrakMed_Countryr, 
            T.flgallow AS BrakMed_Flgallow, 
            T.allownr AS BrakMed_Allownr, 
            T.allowdate AS BrakMed_Allowdate, 
            T.lettertype AS BrakMed_Lettertype, 
            T.filenamefirst AS BrakMed_Filenamefirst, 
            T.filenameother AS BrakMed_Filenameother, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.brak_meds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1404()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.accounts", @"
    SELECT VALUE -- Constructing accounts
        [PostgresModel.Store.account](T1.account_oid, T1.account_lpu, T1.[account.account_number], T1.account_tariff, T1.account_amount, T1.[account.start_date], T1.[account.end_date])
    FROM (
        SELECT 
            T.Oid AS account_oid, 
            T.Lpu AS account_lpu, 
            T.AccountNumber AS [account.account_number], 
            T.Tariff AS account_tariff, 
            T.Amount AS account_amount, 
            T.StartDate AS [account.start_date], 
            T.EndDate AS [account.end_date], 
            True AS _from0
        FROM PostgresEntities.Accounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1405()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Accounts", @"
    SELECT VALUE -- Constructing Accounts
        [PostgresModel.Account](T1.Account_Oid, T1.Account_Lpu, T1.Account_AccountNumber, T1.Account_Tariff, T1.Account_Amount, T1.Account_StartDate, T1.Account_EndDate)
    FROM (
        SELECT 
            T.oid AS Account_Oid, 
            T.lpu AS Account_Lpu, 
            T.account_number AS Account_AccountNumber, 
            T.tariff AS Account_Tariff, 
            T.amount AS Account_Amount, 
            T.start_date AS Account_StartDate, 
            T.end_date AS Account_EndDate, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.accounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.account_outs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1406()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.account_outs", @"
    SELECT VALUE -- Constructing account_outs
        [PostgresModel.Store.account_out](T1.[account_out.oid], T1.[account_out.account], T1.[account_out.date_out], T1.[account_out.amount], T1.[account_out.operation])
    FROM (
        SELECT 
            T.Oid AS [account_out.oid], 
            T.Account AS [account_out.account], 
            T.DateOut AS [account_out.date_out], 
            T.Amount AS [account_out.amount], 
            T.Operation AS [account_out.operation], 
            True AS _from0
        FROM PostgresEntities.AccountOuts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AccountOuts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1407()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AccountOuts", @"
    SELECT VALUE -- Constructing AccountOuts
        [PostgresModel.AccountOut](T1.AccountOut_Oid, T1.AccountOut_Account, T1.AccountOut_DateOut, T1.AccountOut_Amount, T1.AccountOut_Operation)
    FROM (
        SELECT 
            T.oid AS AccountOut_Oid, 
            T.account AS AccountOut_Account, 
            T.date_out AS AccountOut_DateOut, 
            T.amount AS AccountOut_Amount, 
            T.operation AS AccountOut_Operation, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.account_outs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.account_operations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1408()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.account_operations", @"
    SELECT VALUE -- Constructing account_operations
        [PostgresModel.Store.account_operation](T1.[account_operation.id], T1.[account_operation.name])
    FROM (
        SELECT 
            T.Id AS [account_operation.id], 
            T.Name AS [account_operation.name], 
            True AS _from0
        FROM PostgresEntities.AccountOperations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AccountOperations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1409()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AccountOperations", @"
    SELECT VALUE -- Constructing AccountOperations
        [PostgresModel.AccountOperation](T1.AccountOperation_Id, T1.AccountOperation_Name)
    FROM (
        SELECT 
            T.id AS AccountOperation_Id, 
            T.name AS AccountOperation_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.account_operations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.tariffs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1410()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.tariffs", @"
    SELECT VALUE -- Constructing tariffs
        [PostgresModel.Store.tariff](T1.tariff_oid, T1.tariff_name, T1.tariff_price)
    FROM (
        SELECT 
            T.Oid AS tariff_oid, 
            T.Name AS tariff_name, 
            T.Price AS tariff_price, 
            True AS _from0
        FROM PostgresEntities.Tariffs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.Tariffs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1411()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.Tariffs", @"
    SELECT VALUE -- Constructing Tariffs
        [PostgresModel.Tariff](T1.Tariff_Oid, T1.Tariff_Name, T1.Tariff_Price)
    FROM (
        SELECT 
            T.oid AS Tariff_Oid, 
            T.name AS Tariff_Name, 
            T.price AS Tariff_Price, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.tariffs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.account_ins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1412()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.account_ins", @"
    SELECT VALUE -- Constructing account_ins
        [PostgresModel.Store.account_in](T1.[account_in.oid], T1.[account_in.account], T1.[account_in.date_in], T1.[account_in.amount])
    FROM (
        SELECT 
            T.Oid AS [account_in.oid], 
            T.Account AS [account_in.account], 
            T.DateIn AS [account_in.date_in], 
            T.Amount AS [account_in.amount], 
            True AS _from0
        FROM PostgresEntities.AccountIns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.AccountIns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1413()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.AccountIns", @"
    SELECT VALUE -- Constructing AccountIns
        [PostgresModel.AccountIn](T1.AccountIn_Oid, T1.AccountIn_Account, T1.AccountIn_DateIn, T1.AccountIn_Amount)
    FROM (
        SELECT 
            T.oid AS AccountIn_Oid, 
            T.account AS AccountIn_Account, 
            T.date_in AS AccountIn_DateIn, 
            T.amount AS AccountIn_Amount, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.account_ins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.operation_type_lists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1414()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.operation_type_lists", @"
    SELECT VALUE -- Constructing operation_type_lists
        [PostgresModel.Store.operation_type_list](T1.[operation_type_list.oid], T1.[operation_type_list.name], T1.[operation_type_list.show], T1.[operation_type_list.name2], T1.[operation_type_list.status])
    FROM (
        SELECT 
            T.Oid AS [operation_type_list.oid], 
            T.Name AS [operation_type_list.name], 
            T.Show AS [operation_type_list.show], 
            T.Name2 AS [operation_type_list.name2], 
            T.Status AS [operation_type_list.status], 
            True AS _from0
        FROM PostgresEntities.OperationTypeLists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OperationTypeLists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1415()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OperationTypeLists", @"
    SELECT VALUE -- Constructing OperationTypeLists
        [PostgresModel.OperationTypeList](T1.OperationTypeList_Oid, T1.OperationTypeList_Name, T1.OperationTypeList_Show, T1.OperationTypeList_Name2, T1.OperationTypeList_Status)
    FROM (
        SELECT 
            T.oid AS OperationTypeList_Oid, 
            T.name AS OperationTypeList_Name, 
            T.show AS OperationTypeList_Show, 
            T.name2 AS OperationTypeList_Name2, 
            T.status AS OperationTypeList_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.operation_type_lists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.operation_complications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1416()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.operation_complications", @"
    SELECT VALUE -- Constructing operation_complications
        [PostgresModel.Store.operation_complication](T1.[operation_complication.oid], T1.[operation_complication.name], T1.[operation_complication.show], T1.[operation_complication.name2], T1.[operation_complication.status])
    FROM (
        SELECT 
            T.Oid AS [operation_complication.oid], 
            T.Name AS [operation_complication.name], 
            T.Show AS [operation_complication.show], 
            T.Name2 AS [operation_complication.name2], 
            T.Status AS [operation_complication.status], 
            True AS _from0
        FROM PostgresEntities.OperationComplications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OperationComplications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1417()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OperationComplications", @"
    SELECT VALUE -- Constructing OperationComplications
        [PostgresModel.OperationComplication](T1.OperationComplication_Oid, T1.OperationComplication_Name, T1.OperationComplication_Show, T1.OperationComplication_Name2, T1.OperationComplication_Status)
    FROM (
        SELECT 
            T.oid AS OperationComplication_Oid, 
            T.name AS OperationComplication_Name, 
            T.show AS OperationComplication_Show, 
            T.name2 AS OperationComplication_Name2, 
            T.status AS OperationComplication_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.operation_complications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.oper_anests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1418()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.oper_anests", @"
    SELECT VALUE -- Constructing oper_anests
        [PostgresModel.Store.oper_anest](T1.[oper_anest.oid], T1.[oper_anest.name], T1.[oper_anest.show], T1.[oper_anest.name2], T1.[oper_anest.status], T1.[oper_anest.code])
    FROM (
        SELECT 
            T.Oid AS [oper_anest.oid], 
            T.Name AS [oper_anest.name], 
            T.Show AS [oper_anest.show], 
            T.Name2 AS [oper_anest.name2], 
            T.Status AS [oper_anest.status], 
            T.Code AS [oper_anest.code], 
            True AS _from0
        FROM PostgresEntities.OperAnests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.OperAnests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1419()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.OperAnests", @"
    SELECT VALUE -- Constructing OperAnests
        [PostgresModel.OperAnest](T1.OperAnest_Oid, T1.OperAnest_Name, T1.OperAnest_Show, T1.OperAnest_Name2, T1.OperAnest_Status, T1.OperAnest_Code)
    FROM (
        SELECT 
            T.oid AS OperAnest_Oid, 
            T.name AS OperAnest_Name, 
            T.show AS OperAnest_Show, 
            T.name2 AS OperAnest_Name2, 
            T.status AS OperAnest_Status, 
            T.code AS OperAnest_Code, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.oper_anests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.stacionar_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1420()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.stacionar_types", @"
    SELECT VALUE -- Constructing stacionar_types
        [PostgresModel.Store.stacionar_type](T1.[stacionar_type.oid], T1.[stacionar_type.name], T1.[stacionar_type.show], T1.[stacionar_type.name2], T1.[stacionar_type.status])
    FROM (
        SELECT 
            T.Oid AS [stacionar_type.oid], 
            T.Name AS [stacionar_type.name], 
            T.Show AS [stacionar_type.show], 
            T.Name2 AS [stacionar_type.name2], 
            T.Status AS [stacionar_type.status], 
            True AS _from0
        FROM PostgresEntities.StacionarTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.StacionarTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1421()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.StacionarTypes", @"
    SELECT VALUE -- Constructing StacionarTypes
        [PostgresModel.StacionarType](T1.StacionarType_Oid, T1.StacionarType_Name, T1.StacionarType_Show, T1.StacionarType_Name2, T1.StacionarType_Status)
    FROM (
        SELECT 
            T.oid AS StacionarType_Oid, 
            T.name AS StacionarType_Name, 
            T.show AS StacionarType_Show, 
            T.name2 AS StacionarType_Name2, 
            T.status AS StacionarType_Status, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.stacionar_types AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.insur_terrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1422()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.insur_terrs", @"
    SELECT VALUE -- Constructing insur_terrs
        [PostgresModel.Store.insur_terr](T1.[insur_terr.oid], T1.[insur_terr.name], T1.[insur_terr.show], T1.[insur_terr.name2], T1.[insur_terr.status], T1.[insur_terr.foms_code])
    FROM (
        SELECT 
            T.Oid AS [insur_terr.oid], 
            T.Name AS [insur_terr.name], 
            T.Show AS [insur_terr.show], 
            T.Name2 AS [insur_terr.name2], 
            T.Status AS [insur_terr.status], 
            T.FomsCode AS [insur_terr.foms_code], 
            True AS _from0
        FROM PostgresEntities.InsurTerrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.InsurTerrs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1423()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.InsurTerrs", @"
    SELECT VALUE -- Constructing InsurTerrs
        [PostgresModel.InsurTerr](T1.InsurTerr_Oid, T1.InsurTerr_Name, T1.InsurTerr_Show, T1.InsurTerr_Name2, T1.InsurTerr_Status, T1.InsurTerr_FomsCode)
    FROM (
        SELECT 
            T.oid AS InsurTerr_Oid, 
            T.name AS InsurTerr_Name, 
            T.show AS InsurTerr_Show, 
            T.name2 AS InsurTerr_Name2, 
            T.status AS InsurTerr_Status, 
            T.foms_code AS InsurTerr_FomsCode, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.insur_terrs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.template_queries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1424()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.template_queries", @"
    SELECT VALUE -- Constructing template_queries
        [PostgresModel.Store.template_query](T1.[template_query.oid], T1.[template_query.name], T1.[template_query.sql_text], T1.[template_query.post_function])
    FROM (
        SELECT 
            T.Oid AS [template_query.oid], 
            T.Name AS [template_query.name], 
            T.SqlText AS [template_query.sql_text], 
            T.PostFunction AS [template_query.post_function], 
            True AS _from0
        FROM PostgresEntities.TemplateQueries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.TemplateQueries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1425()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.TemplateQueries", @"
    SELECT VALUE -- Constructing TemplateQueries
        [PostgresModel.TemplateQuery](T1.TemplateQuery_Oid, T1.TemplateQuery_Name, T1.TemplateQuery_SqlText, T1.TemplateQuery_PostFunction)
    FROM (
        SELECT 
            T.oid AS TemplateQuery_Oid, 
            T.name AS TemplateQuery_Name, 
            T.sql_text AS TemplateQuery_SqlText, 
            T.post_function AS TemplateQuery_PostFunction, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.template_queries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.medical_organizations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1426()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3078);
            viewString.Append("\r\n    SELECT VALUE -- Constructing medical_organizations\r\n        [PostgresModel");
            viewString.Append(".Store.medical_organization](T1.[medical_organization.oid], T1.[medical_organiza");
            viewString.Append("tion.tf_okato], T1.[medical_organization.mcod], T1.[medical_organization.nam_mop");
            viewString.Append("], T1.[medical_organization.nam_mok], T1.[medical_organization.inn], T1.[medical");
            viewString.Append("_organization.ogrn], T1.[medical_organization.kpp], T1.[medical_organization.ind");
            viewString.Append("ex_j], T1.[medical_organization.addr_j], T1.[medical_organization.okopf], T1.[me");
            viewString.Append("dical_organization.vedpri], T1.[medical_organization.org], T1.[medical_organizat");
            viewString.Append("ion.fam_ruk], T1.[medical_organization.im_ruk], T1.[medical_organization.ot_ruk]");
            viewString.Append(", T1.[medical_organization.phone], T1.[medical_organization.fax], T1.[medical_or");
            viewString.Append("ganization.e_mail], T1.[medical_organization.n_doc], T1.[medical_organization.d_");
            viewString.Append("start], T1.[medical_organization.data_e], T1.[medical_organization.mp], T1.[medi");
            viewString.Append("cal_organization.www], T1.[medical_organization.d_begin], T1.[medical_organizati");
            viewString.Append("on.d_end], T1.[medical_organization.name_e], T1.[medical_organization.duved], T1");
            viewString.Append(".[medical_organization.d_edit], T1.[medical_organization.parent], T1.[medical_or");
            viewString.Append("ganization.region_name], T1.[medical_organization.is_leaf])\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.Oid AS [medical_organization.oid], \r\n            T.TfOka");
            viewString.Append("to AS [medical_organization.tf_okato], \r\n            T.Mcod AS [medical_organiza");
            viewString.Append("tion.mcod], \r\n            T.NamMop AS [medical_organization.nam_mop], \r\n        ");
            viewString.Append("    T.NamMok AS [medical_organization.nam_mok], \r\n            T.Inn AS [medical_");
            viewString.Append("organization.inn], \r\n            T.Ogrn AS [medical_organization.ogrn], \r\n      ");
            viewString.Append("      T.Kpp AS [medical_organization.kpp], \r\n            T.IndexJ AS [medical_or");
            viewString.Append("ganization.index_j], \r\n            T.AddrJ AS [medical_organization.addr_j], \r\n ");
            viewString.Append("           T.Okopf AS [medical_organization.okopf], \r\n            T.Vedpri AS [m");
            viewString.Append("edical_organization.vedpri], \r\n            T.Org AS [medical_organization.org], ");
            viewString.Append("\r\n            T.FamRuk AS [medical_organization.fam_ruk], \r\n            T.ImRuk ");
            viewString.Append("AS [medical_organization.im_ruk], \r\n            T.OtRuk AS [medical_organization");
            viewString.Append(".ot_ruk], \r\n            T.Phone AS [medical_organization.phone], \r\n            T");
            viewString.Append(".Fax AS [medical_organization.fax], \r\n            T.EMail AS [medical_organizati");
            viewString.Append("on.e_mail], \r\n            T.NDoc AS [medical_organization.n_doc], \r\n            ");
            viewString.Append("T.DStart AS [medical_organization.d_start], \r\n            T.DataE AS [medical_or");
            viewString.Append("ganization.data_e], \r\n            T.Mp AS [medical_organization.mp], \r\n         ");
            viewString.Append("   T.Www AS [medical_organization.www], \r\n            T.DBegin AS [medical_organ");
            viewString.Append("ization.d_begin], \r\n            T.DEnd AS [medical_organization.d_end], \r\n      ");
            viewString.Append("      T.NameE AS [medical_organization.name_e], \r\n            T.Duved AS [medica");
            viewString.Append("l_organization.duved], \r\n            T.DEdit AS [medical_organization.d_edit], \r");
            viewString.Append("\n            T.Parent AS [medical_organization.parent], \r\n            T.RegionNa");
            viewString.Append("me AS [medical_organization.region_name], \r\n            T.IsLeaf AS [medical_org");
            viewString.Append("anization.is_leaf], \r\n            True AS _from0\r\n        FROM PostgresEntities.");
            viewString.Append("MedicalOrganizations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.medical_organizations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntities.MedicalOrganizations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1427()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2875);
            viewString.Append("\r\n    SELECT VALUE -- Constructing MedicalOrganizations\r\n        [PostgresModel.");
            viewString.Append("MedicalOrganization](T1.MedicalOrganization_Oid, T1.MedicalOrganization_TfOkato,");
            viewString.Append(" T1.MedicalOrganization_Mcod, T1.MedicalOrganization_NamMop, T1.MedicalOrganizat");
            viewString.Append("ion_NamMok, T1.MedicalOrganization_Inn, T1.MedicalOrganization_Ogrn, T1.MedicalO");
            viewString.Append("rganization_Kpp, T1.MedicalOrganization_IndexJ, T1.MedicalOrganization_AddrJ, T1");
            viewString.Append(".MedicalOrganization_Okopf, T1.MedicalOrganization_Vedpri, T1.MedicalOrganizatio");
            viewString.Append("n_Org, T1.MedicalOrganization_FamRuk, T1.MedicalOrganization_ImRuk, T1.MedicalOr");
            viewString.Append("ganization_OtRuk, T1.MedicalOrganization_Phone, T1.MedicalOrganization_Fax, T1.M");
            viewString.Append("edicalOrganization_EMail, T1.MedicalOrganization_NDoc, T1.MedicalOrganization_DS");
            viewString.Append("tart, T1.MedicalOrganization_DataE, T1.MedicalOrganization_Mp, T1.MedicalOrganiz");
            viewString.Append("ation_Www, T1.MedicalOrganization_DBegin, T1.MedicalOrganization_DEnd, T1.Medica");
            viewString.Append("lOrganization_NameE, T1.MedicalOrganization_Duved, T1.MedicalOrganization_DEdit,");
            viewString.Append(" T1.MedicalOrganization_Parent, T1.MedicalOrganization_RegionName, T1.MedicalOrg");
            viewString.Append("anization_IsLeaf)\r\n    FROM (\r\n        SELECT \r\n            T.oid AS MedicalOrga");
            viewString.Append("nization_Oid, \r\n            T.tf_okato AS MedicalOrganization_TfOkato, \r\n       ");
            viewString.Append("     T.mcod AS MedicalOrganization_Mcod, \r\n            T.nam_mop AS MedicalOrgan");
            viewString.Append("ization_NamMop, \r\n            T.nam_mok AS MedicalOrganization_NamMok, \r\n       ");
            viewString.Append("     T.inn AS MedicalOrganization_Inn, \r\n            T.ogrn AS MedicalOrganizati");
            viewString.Append("on_Ogrn, \r\n            T.kpp AS MedicalOrganization_Kpp, \r\n            T.index_j");
            viewString.Append(" AS MedicalOrganization_IndexJ, \r\n            T.addr_j AS MedicalOrganization_Ad");
            viewString.Append("drJ, \r\n            T.okopf AS MedicalOrganization_Okopf, \r\n            T.vedpri ");
            viewString.Append("AS MedicalOrganization_Vedpri, \r\n            T.org AS MedicalOrganization_Org, \r");
            viewString.Append("\n            T.fam_ruk AS MedicalOrganization_FamRuk, \r\n            T.im_ruk AS ");
            viewString.Append("MedicalOrganization_ImRuk, \r\n            T.ot_ruk AS MedicalOrganization_OtRuk, ");
            viewString.Append("\r\n            T.phone AS MedicalOrganization_Phone, \r\n            T.fax AS Medic");
            viewString.Append("alOrganization_Fax, \r\n            T.e_mail AS MedicalOrganization_EMail, \r\n     ");
            viewString.Append("       T.n_doc AS MedicalOrganization_NDoc, \r\n            T.d_start AS MedicalOr");
            viewString.Append("ganization_DStart, \r\n            T.data_e AS MedicalOrganization_DataE, \r\n      ");
            viewString.Append("      T.mp AS MedicalOrganization_Mp, \r\n            T.www AS MedicalOrganization");
            viewString.Append("_Www, \r\n            T.d_begin AS MedicalOrganization_DBegin, \r\n            T.d_e");
            viewString.Append("nd AS MedicalOrganization_DEnd, \r\n            T.name_e AS MedicalOrganization_Na");
            viewString.Append("meE, \r\n            T.duved AS MedicalOrganization_Duved, \r\n            T.d_edit ");
            viewString.Append("AS MedicalOrganization_DEdit, \r\n            T.parent AS MedicalOrganization_Pare");
            viewString.Append("nt, \r\n            T.region_name AS MedicalOrganization_RegionName, \r\n           ");
            viewString.Append(" T.is_leaf AS MedicalOrganization_IsLeaf, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM PostgresEntitiesStoreContainer.medical_organizations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.MedicalOrganizations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.counterpart_program_durations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1428()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.counterpart_program_durations", @"
    SELECT VALUE -- Constructing counterpart_program_durations
        [PostgresModel.Store.counterpart_program_duration](T1.[counterpart_program_duration.oid], T1.[counterpart_program_duration.name], T1.[counterpart_program_duration.state], T1.[counterpart_program_duration.ord])
    FROM (
        SELECT 
            T.Oid AS [counterpart_program_duration.oid], 
            T.Name AS [counterpart_program_duration.name], 
            T.State AS [counterpart_program_duration.state], 
            T.Ord AS [counterpart_program_duration.ord], 
            True AS _from0
        FROM PostgresEntities.CounterpartProgramDurations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CounterpartProgramDurations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1429()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CounterpartProgramDurations", @"
    SELECT VALUE -- Constructing CounterpartProgramDurations
        [PostgresModel.CounterpartProgramDuration](T1.CounterpartProgramDuration_Oid, T1.CounterpartProgramDuration_Name, T1.CounterpartProgramDuration_State, T1.CounterpartProgramDuration_Ord)
    FROM (
        SELECT 
            T.oid AS CounterpartProgramDuration_Oid, 
            T.name AS CounterpartProgramDuration_Name, 
            T.state AS CounterpartProgramDuration_State, 
            T.ord AS CounterpartProgramDuration_Ord, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.counterpart_program_durations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.profex_general_contraindications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1430()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.profex_general_contraindications", @"
    SELECT VALUE -- Constructing profex_general_contraindications
        [PostgresModel.Store.profex_general_contraindications](T1.[profex_general_contraindications.oid], T1.[profex_general_contraindications.name])
    FROM (
        SELECT 
            T.Oid AS [profex_general_contraindications.oid], 
            T.Name AS [profex_general_contraindications.name], 
            True AS _from0
        FROM PostgresEntities.ProfexGeneralContraindications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.ProfexGeneralContraindications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1431()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.ProfexGeneralContraindications", @"
    SELECT VALUE -- Constructing ProfexGeneralContraindications
        [PostgresModel.ProfexGeneralContraindication](T1.ProfexGeneralContraindication_Oid, T1.ProfexGeneralContraindication_Name)
    FROM (
        SELECT 
            T.oid AS ProfexGeneralContraindication_Oid, 
            T.name AS ProfexGeneralContraindication_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.profex_general_contraindications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.default_values
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1432()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.default_values", @"
    SELECT VALUE -- Constructing default_values
        [PostgresModel.Store.default_value](T1.[default_value.oid], T1.[default_value.scheme], T1.[default_value.table], T1.[default_value.value])
    FROM (
        SELECT 
            T.Oid AS [default_value.oid], 
            T.Scheme AS [default_value.scheme], 
            T.Table AS [default_value.table], 
            T.[Value] AS [default_value.value], 
            True AS _from0
        FROM PostgresEntities.DefaultValues AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.DefaultValues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1433()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.DefaultValues", @"
    SELECT VALUE -- Constructing DefaultValues
        [PostgresModel.DefaultValue](T1.DefaultValue_Oid, T1.DefaultValue_Scheme, T1.DefaultValue_Table, T1.DefaultValue_Value)
    FROM (
        SELECT 
            T.oid AS DefaultValue_Oid, 
            T.scheme AS DefaultValue_Scheme, 
            T.table AS DefaultValue_Table, 
            T.[value] AS DefaultValue_Value, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.default_values AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntitiesStoreContainer.company_types
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1434()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntitiesStoreContainer.company_types", @"
    SELECT VALUE -- Constructing company_types
        [PostgresModel.Store.company_type](T1.[company_type.oid], T1.[company_type.name])
    FROM (
        SELECT 
            T.Oid AS [company_type.oid], 
            T.Name AS [company_type.name], 
            True AS _from0
        FROM PostgresEntities.CompanyTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PostgresEntities.CompanyTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1435()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PostgresEntities.CompanyTypes", @"
    SELECT VALUE -- Constructing CompanyTypes
        [PostgresModel.CompanyType](T1.CompanyType_Oid, T1.CompanyType_Name)
    FROM (
        SELECT 
            T.oid AS CompanyType_Oid, 
            T.name AS CompanyType_Name, 
            True AS _from0
        FROM PostgresEntitiesStoreContainer.company_types AS T
    ) AS T1");
        }
    }
}

