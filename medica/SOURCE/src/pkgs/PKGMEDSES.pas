unit PKGMEDSES;

// Oracle Package Wizard 1.0.3
// File PKGMEDSES.pas generated by Delphi5 on 23.10.2006 11:33:54
// This unit contains interface objects for oracle package MED.PKG_MEDSES
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE pkg_medses
IS
function get_existkart (akartid in number)
return number;
function get_buhmo
RETURN NUMBER;

FUNCTION get_curmo
   RETURN NUMBER;

FUNCTION GET_PRODUCE_MO
--получение moid МО, который производит медикаменты
   RETURN NUMBER;

PROCEDURE set_curmo (moid IN NUMBER);

FUNCTION get_data2
   RETURN DATE;

PROCEDURE set_data1 (pdata IN DATE);

PROCEDURE set_data2 (pdata IN DATE);

FUNCTION get_data1
   RETURN DATE;
END; -- Package spec
*)
  TPKGMEDSES = class(TOracleCustomPackage)
  private
  public
    function  GETBUHMO: Double;
    function  GETCURMO: Double;
    function  get_cur_mo_sklad_id: variant;
    function  GET_CUR_MO_SKLAD_SYNONIM: string;    
    function  get_IsUseSklad : Integer;
    function  GETDATA1: TDateTime;
    function  GETDATA2: TDateTime;
    function  GETEXISTKART(AKARTID: Double): Double;
    function  GETPRODUCEMO: Double;
    procedure SETCURMO(MOID: Double);
    procedure SETDATA1(PDATA: TDateTime);
    procedure SETDATA2(PDATA: TDateTime);

    function GET_CUR_MOGROUP_BY_CUR_MO : Integer;
    function GET_CUR_MOGROUP_BY_MOID ( pmoid :   Integer ) : Integer;
    function GET_MOGROUP_NAME ( MOGROUP_ID :   Integer ) : String;
    PROCEDURE Set_IsShowReserv( aIsShowReserv :   Integer);
    FUNCTION Get_UPPERCASE_Reserv_NAME : string;
    procedure ResetDatePeriod;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation

// PKG_MEDSES.GET_BUHMO
function TPKGMEDSES.GETBUHMO: Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_BUHMO";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.GET_CURMO
function TPKGMEDSES.GETCURMO: Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_CURMO";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.GET_DATA1
function TPKGMEDSES.GETDATA1: TDateTime;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otDate);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_DATA1";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.GET_DATA2
function TPKGMEDSES.GETDATA2: TDateTime;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otDate);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_DATA2";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.GET_EXISTKART
function TPKGMEDSES.GETEXISTKART(AKARTID: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('AKARTID', otFloat);
  OCPQuery.SetVariable('AKARTID', AKARTID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_EXISTKART"(AKARTID => :AKARTID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.GET_PRODUCE_MO
function TPKGMEDSES.GETPRODUCEMO: Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_PRODUCE_MO";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_MEDSES.SET_CURMO
function TPKGMEDSES.GET_CUR_MOGROUP_BY_CUR_MO: Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_CUR_MOGROUP_BY_CUR_MO";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.GET_CUR_MOGROUP_BY_MOID(pmoid: Integer): Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('pmoid', otInteger);
  OCPQuery.SetVariable('pmoid', pmoid);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_CUR_MOGROUP_BY_MOID"(pmoid => :pmoid);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.GET_CUR_MO_SKLAD_ID: variant;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_CUR_MO_SKLAD_ID";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.GET_CUR_MO_SKLAD_SYNONIM: string;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_CUR_MO_SKLAD_SYNONIM";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.GET_ISUSESKLAD: Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_ISUSESKLAD";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.GET_MOGROUP_NAME(MOGROUP_ID: Integer): String;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.DeclareVariable('MOGROUP_ID', otInteger);
  OCPQuery.SetVariable('MOGROUP_ID', MOGROUP_ID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_MOGROUP_NAME"(MOGROUP_ID => :MOGROUP_ID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGMEDSES.Get_UPPERCASE_Reserv_NAME: string;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_MEDSES"."GET_UPPERCASE_RESERV_NAME";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

procedure TPKGMEDSES.ResetDatePeriod;
begin
  GetQuery;
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_MEDSES"."RESETDATEPERIOD";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

procedure TPKGMEDSES.SETCURMO(MOID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('MOID', otFloat);
  OCPQuery.SetVariable('MOID', MOID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_MEDSES"."SET_CURMO"(MOID => :MOID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKG_MEDSES.SET_DATA1
procedure TPKGMEDSES.SETDATA1(PDATA: TDateTime);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PDATA', otDate);
  OCPQuery.SetVariable('PDATA', PDATA);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_MEDSES"."SET_DATA1"(PDATA => :PDATA);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKG_MEDSES.SET_DATA2
procedure TPKGMEDSES.SETDATA2(PDATA: TDateTime);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PDATA', otDate);
  OCPQuery.SetVariable('PDATA', PDATA);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_MEDSES"."SET_DATA2"(PDATA => :PDATA);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

procedure TPKGMEDSES.Set_IsShowReserv(aIsShowReserv: Integer);
begin
  GetQuery;
  OCPQuery.DeclareVariable('aIsShowReserv', otInteger);
  OCPQuery.SetVariable('AISSHOWRESERV', aIsShowReserv);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_MEDSES"."SET_ISSHOWRESERV"(AISSHOWRESERV => :AISSHOWRESERV);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

end.
