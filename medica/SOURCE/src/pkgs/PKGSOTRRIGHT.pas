unit PKGSOTRRIGHT;

// Oracle Package Wizard 1.0.3
// File PKGSOTRRIGHT.pas generated by Sam on 16.04.2002 11:55:05
// This unit contains interface objects for oracle package MED.PKGSOTRRIGHT
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE PKGSOTRRIGHT
IS

-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------
-- Sam       18-01-2001
   CURSOR cGetByID (pouid IN NUMBER)
   IS
      SELECT tsotr.fc_fam, tsotr.fc_name, tsotr.fc_otch, tsotr.otdelid, tsotr.ouid, all_users.USERNAME
      FROM   tsotr, all_users
      WHERE  all_users.user_id = tsotr.ouid AND ouid = pouid;

   PROCEDURE GetByID (
      pfc_fam     OUT      tsotr.fc_fam%TYPE,
      pfc_name    OUT      tsotr.fc_name%TYPE,
      pfc_otch    OUT      tsotr.fc_otch%TYPE,
      potdelid    OUT      tsotr.otdelid%TYPE,
      pusername   OUT      VARCHAR2,
      padm        OUT      NUMBER,
      ouid        IN       NUMBER
   );

   FUNCTION DoSet (
      pfc_fam     IN   tsotr.fc_fam%TYPE,
      pfc_name    IN   tsotr.fc_name%TYPE,
      pfc_otch    IN   tsotr.fc_otch%TYPE,
      potdelid    IN   tsotr.otdelid%TYPE,
      pusername   IN   VARCHAR2,
      ppwd        IN   VARCHAR2,
      padm        IN   NUMBER,
      pouid       IN   NUMBER := -1
   )
      RETURN NUMBER;

   PROCEDURE DoDel (pouid IN NUMBER);

   function IsAdm(pouid in number) return number;
END; -- Package Specification PKGMEDKART
*)
  TPKGSOTRRIGHT = class(TOracleCustomPackage)
  public
    procedure DODEL(POUID: Double);
    function  DOSET(const PFCFAM: string; const PFCNAME: string; 
      const PFCOTCH: string; POTDELID: Double; const PUSERNAME: string; 
      const PPWD: string; PADM: Double; POUID: Double): Double;
    procedure GETBYID(out PFCFAM: string; out PFCNAME: string; 
      out PFCOTCH: string; out POTDELID: Double; out PUSERNAME: string; 
      out PADM: Double; OUID: Double);
    function  ISADM(POUID: Double): Double;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation

// PKGSOTRRIGHT.DODEL
procedure TPKGSOTRRIGHT.DODEL(POUID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('POUID', otFloat);
  OCPQuery.SetVariable('POUID', POUID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "PKGSOTRRIGHT"."DODEL"(POUID => :POUID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGSOTRRIGHT.DOSET
function TPKGSOTRRIGHT.DOSET(const PFCFAM: string; const PFCNAME: string; 
  const PFCOTCH: string; POTDELID: Double; const PUSERNAME: string; 
  const PPWD: string; PADM: Double; POUID: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PFC_FAM', otString);
  OCPQuery.SetVariable('PFC_FAM', PFCFAM);
  OCPQuery.DeclareVariable('PFC_NAME', otString);
  OCPQuery.SetVariable('PFC_NAME', PFCNAME);
  OCPQuery.DeclareVariable('PFC_OTCH', otString);
  OCPQuery.SetVariable('PFC_OTCH', PFCOTCH);
  OCPQuery.DeclareVariable('POTDELID', otFloat);
  OCPQuery.SetVariable('POTDELID', POTDELID);
  OCPQuery.DeclareVariable('PUSERNAME', otString);
  OCPQuery.SetVariable('PUSERNAME', PUSERNAME);
  OCPQuery.DeclareVariable('PPWD', otString);
  OCPQuery.SetVariable('PPWD', PPWD);
  OCPQuery.DeclareVariable('PADM', otFloat);
  OCPQuery.SetVariable('PADM', PADM);
  OCPQuery.DeclareVariable('POUID', otFloat);
  OCPQuery.SetVariable('POUID', POUID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "PKGSOTRRIGHT"."DOSET"(');
  OCPQuery.SQL.Add('    PFC_FAM => :PFC_FAM,');
  OCPQuery.SQL.Add('    PFC_NAME => :PFC_NAME,');
  OCPQuery.SQL.Add('    PFC_OTCH => :PFC_OTCH,');
  OCPQuery.SQL.Add('    POTDELID => :POTDELID,');
  OCPQuery.SQL.Add('    PUSERNAME => :PUSERNAME,');
  OCPQuery.SQL.Add('    PPWD => :PPWD,');
  OCPQuery.SQL.Add('    PADM => :PADM,');
  OCPQuery.SQL.Add('    POUID => :POUID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGSOTRRIGHT.GETBYID
procedure TPKGSOTRRIGHT.GETBYID(out PFCFAM: string; out PFCNAME: string; 
  out PFCOTCH: string; out POTDELID: Double; out PUSERNAME: string; 
  out PADM: Double; OUID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFC_FAM', otString);
  OCPQuery.DeclareVariable('PFC_NAME', otString);
  OCPQuery.DeclareVariable('PFC_OTCH', otString);
  OCPQuery.DeclareVariable('POTDELID', otFloat);
  OCPQuery.DeclareVariable('PUSERNAME', otString);
  OCPQuery.DeclareVariable('PADM', otFloat);
  OCPQuery.DeclareVariable('OUID', otFloat);
  OCPQuery.SetVariable('OUID', OUID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "PKGSOTRRIGHT"."GETBYID"(');
  OCPQuery.SQL.Add('    PFC_FAM => :PFC_FAM,');
  OCPQuery.SQL.Add('    PFC_NAME => :PFC_NAME,');
  OCPQuery.SQL.Add('    PFC_OTCH => :PFC_OTCH,');
  OCPQuery.SQL.Add('    POTDELID => :POTDELID,');
  OCPQuery.SQL.Add('    PUSERNAME => :PUSERNAME,');
  OCPQuery.SQL.Add('    PADM => :PADM,');
  OCPQuery.SQL.Add('    OUID => :OUID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  PFCFAM := ConvertVariant(OCPQuery.GetVariable('PFC_FAM'));
  PFCNAME := ConvertVariant(OCPQuery.GetVariable('PFC_NAME'));
  PFCOTCH := ConvertVariant(OCPQuery.GetVariable('PFC_OTCH'));
  POTDELID := ConvertVariant(OCPQuery.GetVariable('POTDELID'));
  PUSERNAME := ConvertVariant(OCPQuery.GetVariable('PUSERNAME'));
  PADM := ConvertVariant(OCPQuery.GetVariable('PADM'));
end;

// PKGSOTRRIGHT.ISADM
function TPKGSOTRRIGHT.ISADM(POUID: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('POUID', otFloat);
  OCPQuery.SetVariable('POUID', POUID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "PKGSOTRRIGHT"."ISADM"(POUID => :POUID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

end.
