unit PKGTFARMGR;

// Oracle Package Wizard 1.0.3
// File PKGTFARMGR.pas generated by Sam on 01.03.2002 16:16:39
// This unit contains interface objects for oracle package MED.PKGTFARMGR
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE PKGTFARMGR
IS
/*-------------------------------------------------------------------------------------------*\
|               Cursors
\*-------------------------------------------------------------------------------------------*/
   CURSOR cGetByID (pfarmgrid IN NUMBER)
   IS
      SELECT fc_farmgr
        FROM Tfarmgr
       WHERE farmgrid = pfarmgrid;

/*-------------------------------------------------------------------------------------------*\
|               Procedures
\*-------------------------------------------------------------------------------------------*/
   PROCEDURE DoDelCascade (pfarmgrid IN NUMBER);

   PROCEDURE DoSet (pfc_farmgr IN VARCHAR2, pfarmgrid IN NUMBER default -1);

   PROCEDURE DoDel (pfarmgrid IN NUMBER);

   PROCEDURE GetByID (pfarmgrid IN NUMBER, pfc_farmgr OUT VARCHAR2);
END PKGTfarmgr;
*)
  TPKGTFARMGR = class(TOracleCustomPackage)
  public
    procedure DODEL(PFARMGRID: Double);
    procedure DODELCASCADE(PFARMGRID: Double);
    procedure DOSET(const PFCFARMGR: string; PFARMGRID, PFARMGR_RlsId: Double);
    procedure GETBYID(PFARMGRID: Double; out PFCFARMGR: string);
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation

// PKGTFARMGR.DODEL
procedure TPKGTFARMGR.DODEL(PFARMGRID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFARMGRID', otFloat);
  OCPQuery.SetVariable('PFARMGRID', PFARMGRID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTFARMGR"."DODEL"(PFARMGRID => :PFARMGRID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTFARMGR.DODELCASCADE
procedure TPKGTFARMGR.DODELCASCADE(PFARMGRID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFARMGRID', otFloat);
  OCPQuery.SetVariable('PFARMGRID', PFARMGRID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTFARMGR"."DODELCASCADE"(PFARMGRID => :PFARMGRID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTFARMGR.DOSET
procedure TPKGTFARMGR.DOSET(const PFCFARMGR: string; PFARMGRID, PFARMGR_RlsId: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFC_FARMGR', otString);
  OCPQuery.SetVariable('PFC_FARMGR', PFCFARMGR);
  OCPQuery.DeclareVariable('PFARMGRID', otFloat);
  OCPQuery.SetVariable('PFARMGRID', PFARMGRID);
  OCPQuery.DeclareVariable('pfarmgr_rlsID', otFloat);
  OCPQuery.SetVariable('pfarmgr_rlsID', PFARMGR_RlsId);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTFARMGR"."DOSET"(');
  OCPQuery.SQL.Add('    PFC_FARMGR => :PFC_FARMGR,');
  OCPQuery.SQL.Add('    PFARMGRID => :PFARMGRID,');
  OCPQuery.SQL.Add('    pfarmgr_rlsID => :pfarmgr_rlsID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTFARMGR.GETBYID
procedure TPKGTFARMGR.GETBYID(PFARMGRID: Double; out PFCFARMGR: string);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFARMGRID', otFloat);
  OCPQuery.SetVariable('PFARMGRID', PFARMGRID);
  OCPQuery.DeclareVariable('PFC_FARMGR', otString);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTFARMGR"."GETBYID"(');
  OCPQuery.SQL.Add('    PFARMGRID => :PFARMGRID,');
  OCPQuery.SQL.Add('    PFC_FARMGR => :PFC_FARMGR);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  PFCFARMGR := ConvertVariant(OCPQuery.GetVariable('PFC_FARMGR'));
end;

end.
