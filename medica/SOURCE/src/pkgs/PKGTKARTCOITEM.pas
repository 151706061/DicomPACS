unit PKGTKARTCOITEM;

// Oracle Package Wizard 1.0.3
// File PKGTKARTCOITEM.pas generated by Delphi5 on 03.11.2006 9:07:47
// This unit contains interface objects for oracle package MED.PKGTKARTCO_ITEM
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
package PKGTKARTCO_ITEM is

  -- Author  : NSV
  -- Created : 25.09.2006 15:47:17
  -- Purpose :

FUNCTION ADD_TKARTCO_ITEM(
      pfk_tkartcomposid  IN   NUMBER,
      pfn_amount         IN   NUMBER,
      pfn_amount_for1    IN   NUMBER,
      pfk_kart_item      IN   NUMBER) RETURN NUMBER;
--добавление записи в таблицу TKARTCO_ITEM.

PROCEDURE EDIT_TKARTCO_ITEM(
      pfk_id        IN   NUMBER,
      pfk_kart_item IN   NUMBER,
      pfn_amount      IN   NUMBER,
      pfn_amount_for1 IN   NUMBER);
--редактирование записи в таблице TKARTCO_ITEM.

PROCEDURE DEL_TKARTCO_ITEM(pfk_id IN NUMBER);
--удаление записи в таблице TKARTCO_ITEM.

FUNCTION CHANGE_AMOUNT(
      pfk_id              IN NUMBER,
      pfk_tkartcomposid   IN NUMBER,
      pfn_new_main_amount IN NUMBER,
      pFN_KOLOST          OUT NUMBER, --остаток кол-ва для данной карточки
      pFN_AMOUNT_NEED     OUT NUMBER) RETURN NUMBER; -- кол-во которое нам нужно
/*Изменим значение ингридиента TKARTCO_ITEM.pfk_id. Пересчитаем значение его поля FN_amount
 для нового значения pfn_new_main_amount (кол-во производимого медикамента).
 Если в карточке текущего ингридиента нет такого кол-ва FN_amount, то вернем 0, иначе 1 (нужное кол-во в карточке есть)
 Если нужное кол-во есть, то изменим значение поля у данной записи TKARTCO_ITEM.pfk_id
 Ф-ия возвращает: 1 - запись изменена.
                  0 - запись не изменена, т.к. нет необходимого кол-ва FN_amount*/

FUNCTION GET_OSTATOK_BY_KARTID(
      pKARTID           IN NUMBER --КАРТОЧКА ПО КОТОРОЙ СМОТРИТСЯ ОСТАТОК
      ) RETURN NUMBER; -- остаток кол-ва для данной карточки
/*Ф-ия возвращает: 1 - ОСТАТОК КАРТОЧКИ KARTID
                  -1 - ВОЗНИКЛА ОШИБКА ИЛИ КАРТОЧКИ НЕТ*/

end PKGTKARTCO_ITEM;
*)
  TPKGTKARTCOITEM = class(TOracleCustomPackage)
  public
    function  ADDTKARTCOITEM(PFKTKARTCOMPOSID: Double; PFNAMOUNT: Double;
      PFNAMOUNTFOR1: Double; PFKKARTITEM: Double): Double;
    function  CHANGEAMOUNT(PFKID: Double; PFKTKARTCOMPOSID: Double;
      PFNNEWMAINAMOUNT: Double; out PFNKOLOST: Double; 
      out PFNAMOUNTNEED: Double): Double;
    procedure DELTKARTCOITEM(PFKID: Double);
    procedure EDITTKARTCOITEM(PFKID: Double; PFKKARTITEM: Double; 
      PFNAMOUNT: Double; PFNAMOUNTFOR1: Double);
    function  GETOSTATOKBYKARTID(PKARTID: Double): Double;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation
uses
  Variants;
// PKGTKARTCO_ITEM.ADD_TKARTCO_ITEM
function TPKGTKARTCOITEM.ADDTKARTCOITEM(PFKTKARTCOMPOSID: Double; PFNAMOUNT: Double;
  PFNAMOUNTFOR1: Double; PFKKARTITEM: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PFK_TKARTCOMPOSID', otFloat);
  OCPQuery.SetVariable('PFK_TKARTCOMPOSID', PFKTKARTCOMPOSID);
  OCPQuery.DeclareVariable('PFN_AMOUNT', otFloat);
  OCPQuery.SetVariable('PFN_AMOUNT', PFNAMOUNT);
  OCPQuery.DeclareVariable('PFN_AMOUNT_FOR1', otFloat);
  OCPQuery.SetVariable('PFN_AMOUNT_FOR1', PFNAMOUNTFOR1);
  OCPQuery.DeclareVariable('PFK_KART_ITEM', otFloat);
  OCPQuery.SetVariable('PFK_KART_ITEM', PFKKARTITEM);

  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTKARTCO_ITEM"."ADD_TKARTCO_ITEM"(');
  OCPQuery.SQL.Add('    PFK_TKARTCOMPOSID => :PFK_TKARTCOMPOSID,');
  OCPQuery.SQL.Add('    PFN_AMOUNT => :PFN_AMOUNT,');
  OCPQuery.SQL.Add('    PFN_AMOUNT_FOR1 => :PFN_AMOUNT_FOR1,');
  OCPQuery.SQL.Add('    PFK_KART_ITEM => :PFK_KART_ITEM);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGTKARTCO_ITEM.CHANGE_AMOUNT
function TPKGTKARTCOITEM.CHANGEAMOUNT(PFKID: Double; PFKTKARTCOMPOSID: Double; 
  PFNNEWMAINAMOUNT: Double; out PFNKOLOST: Double; 
  out PFNAMOUNTNEED: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PFK_ID', otFloat);
  OCPQuery.SetVariable('PFK_ID', PFKID);
  OCPQuery.DeclareVariable('PFK_TKARTCOMPOSID', otFloat);
  OCPQuery.SetVariable('PFK_TKARTCOMPOSID', PFKTKARTCOMPOSID);
  OCPQuery.DeclareVariable('PFN_NEW_MAIN_AMOUNT', otFloat);
  OCPQuery.SetVariable('PFN_NEW_MAIN_AMOUNT', PFNNEWMAINAMOUNT);
  OCPQuery.DeclareVariable('PFN_KOLOST', otFloat);
  OCPQuery.DeclareVariable('PFN_AMOUNT_NEED', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTKARTCO_ITEM"."CHANGE_AMOUNT"(');
  OCPQuery.SQL.Add('    PFK_ID => :PFK_ID,');
  OCPQuery.SQL.Add('    PFK_TKARTCOMPOSID => :PFK_TKARTCOMPOSID,');
  OCPQuery.SQL.Add('    PFN_NEW_MAIN_AMOUNT => :PFN_NEW_MAIN_AMOUNT,');
  OCPQuery.SQL.Add('    PFN_KOLOST => :PFN_KOLOST,');
  OCPQuery.SQL.Add('    PFN_AMOUNT_NEED => :PFN_AMOUNT_NEED);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
  PFNKOLOST := ConvertVariant(OCPQuery.GetVariable('PFN_KOLOST'));
  PFNAMOUNTNEED := ConvertVariant(OCPQuery.GetVariable('PFN_AMOUNT_NEED'));
end;

// PKGTKARTCO_ITEM.DEL_TKARTCO_ITEM
procedure TPKGTKARTCOITEM.DELTKARTCOITEM(PFKID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFK_ID', otFloat);
  OCPQuery.SetVariable('PFK_ID', PFKID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTKARTCO_ITEM"."DEL_TKARTCO_ITEM"(PFK_ID => :PFK_ID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTKARTCO_ITEM.EDIT_TKARTCO_ITEM
procedure TPKGTKARTCOITEM.EDITTKARTCOITEM(PFKID: Double; PFKKARTITEM: Double; 
  PFNAMOUNT: Double; PFNAMOUNTFOR1: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('PFK_ID', otFloat);
  OCPQuery.SetVariable('PFK_ID', PFKID);
  OCPQuery.DeclareVariable('PFK_KART_ITEM', otFloat);
  OCPQuery.SetVariable('PFK_KART_ITEM', PFKKARTITEM);
  OCPQuery.DeclareVariable('PFN_AMOUNT', otFloat);
  OCPQuery.SetVariable('PFN_AMOUNT', PFNAMOUNT);
  OCPQuery.DeclareVariable('PFN_AMOUNT_FOR1', otFloat);
  OCPQuery.SetVariable('PFN_AMOUNT_FOR1', PFNAMOUNTFOR1);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTKARTCO_ITEM"."EDIT_TKARTCO_ITEM"(');
  OCPQuery.SQL.Add('    PFK_ID => :PFK_ID,');
  OCPQuery.SQL.Add('    PFK_KART_ITEM => :PFK_KART_ITEM,');
  OCPQuery.SQL.Add('    PFN_AMOUNT => :PFN_AMOUNT,');
  OCPQuery.SQL.Add('    PFN_AMOUNT_FOR1 => :PFN_AMOUNT_FOR1);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTKARTCO_ITEM.GET_OSTATOK_BY_KARTID
function TPKGTKARTCOITEM.GETOSTATOKBYKARTID(PKARTID: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('PKARTID', otFloat);
  OCPQuery.SetVariable('PKARTID', PKARTID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTKARTCO_ITEM"."GET_OSTATOK_BY_KARTID"(PKARTID => :PKARTID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

end.
