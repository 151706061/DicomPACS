unit PKGTMO;

// Oracle Package Wizard 1.0.3
// File PKGTMO.pas generated by Delphi5 on 01.11.2006 16:43:35
// This unit contains interface objects for oracle package MED.PKGTMO
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE PKGTMO
IS

-- Интерфейс к таблице TMO
-- Автор Собянин А.А. sobjanin_alex@chat.ru
--
   PROCEDURE sel (
      moid_in       IN  tmo.moid%TYPE,
      fc_name_out   OUT tmo.fc_name%TYPE,
      fl_crm_in     OUT tmo.fl_crm%TYPE,
      pfk_sotrid    OUT tmo.fk_sotrid%TYPE,
      fl_treb_out   OUT tmo.fl_treb%TYPE
   );


   FUNCTION doset (
      moid_in      IN   tmo.moid%TYPE,
      fc_name_in   IN   tmo.fc_name%TYPE,
      fl_crm_in    IN   tmo.fl_crm%TYPE,
      pFk_Parent   IN   tmo.fk_parent%TYPE,
      pFk_SotrId   IN   tmo.fk_sotrid%TYPE,
      pTrebWorks   IN   tmo.fl_treb%TYPE
   )
      RETURN NUMBER;
   PROCEDURE del (moid_in IN tmo.moid%TYPE);



   FUNCTION GetNameByID (moid_in IN tmo.moid%TYPE)
      RETURN tmo.fc_name%TYPE;

	procedure set_view_all_groups(p_moid integer);
	procedure drop_view_all_groups(p_moid integer);
	function is_veiw_all(p_moid integer) return pls_integer;
 FUNCTION GET_PRODUCE_POSTAV_TMO RETURN NUMBER;
--получение MOID ПОСТАВЩИКА ИЗ TMO, который производит медикаменты
END;
*)
  TPKGTMO = class(TOracleCustomPackage)
  public
    procedure DEL(MOIDIN: Double);
    function  DOSET(MOIDIN: Double; const FCNAMEIN: string; 
      FLCRMIN: Integer; PFKPARENT: Double; PFKSOTRID: Double; 
      PTREBWORKS: Integer): Double;
    procedure DROPVIEWALLGROUPS(PMOID: Double);
    function  GETNAMEBYID(MOIDIN: Double): string;
    function  GETPRODUCEPOSTAVTMO: Double;
    function  ISVEIWALL(PMOID: Double): Integer;
    procedure SEL(MOIDIN: Double; out FCNAMEOUT: string; 
      out FLCRMIN: Integer; out PFKSOTRID: Double; out FLTREBOUT: Integer);
    procedure SETVIEWALLGROUPS(PMOID: Double);
    function  IsMOProvisor(PMOID: Double): Integer;
    function  DoInsertMOGroup(pFK_PARENTID: Double): Integer;
    function  CHECKMOGROUPNAME(pCurMOGroupId : Double; pFC_GROUP: string): Integer;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation

// PKGTMO.DEL

procedure TPKGTMO.DEL(MOIDIN: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('MOID_IN', otFloat);
  OCPQuery.SetVariable('MOID_IN', MOIDIN);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTMO"."DEL"(MOID_IN => :MOID_IN);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTMO.DOSET
function TPKGTMO.DOSET(MOIDIN: Double; const FCNAMEIN: string; 
  FLCRMIN: Integer; PFKPARENT: Double; PFKSOTRID: Double; 
  PTREBWORKS: Integer): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('MOID_IN', otFloat);
  OCPQuery.SetVariable('MOID_IN', MOIDIN);
  OCPQuery.DeclareVariable('FC_NAME_IN', otString);
  OCPQuery.SetVariable('FC_NAME_IN', FCNAMEIN);
  OCPQuery.DeclareVariable('FL_CRM_IN', otInteger);
  OCPQuery.SetVariable('FL_CRM_IN', FLCRMIN);
  OCPQuery.DeclareVariable('PFK_PARENT', otFloat);
  OCPQuery.SetVariable('PFK_PARENT', PFKPARENT);
  OCPQuery.DeclareVariable('PFK_SOTRID', otFloat);
  OCPQuery.SetVariable('PFK_SOTRID', PFKSOTRID);
  OCPQuery.DeclareVariable('PTREBWORKS', otInteger);
  OCPQuery.SetVariable('PTREBWORKS', PTREBWORKS);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."DOSET"(');
  OCPQuery.SQL.Add('    MOID_IN => :MOID_IN,');
  OCPQuery.SQL.Add('    FC_NAME_IN => :FC_NAME_IN,');
  OCPQuery.SQL.Add('    FL_CRM_IN => :FL_CRM_IN,');
  OCPQuery.SQL.Add('    PFK_PARENT => :PFK_PARENT,');
  OCPQuery.SQL.Add('    PFK_SOTRID => :PFK_SOTRID,');
  OCPQuery.SQL.Add('    PTREBWORKS => :PTREBWORKS);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGTMO.DROP_VIEW_ALL_GROUPS
procedure TPKGTMO.DROPVIEWALLGROUPS(PMOID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('P_MOID', otFloat);
  OCPQuery.SetVariable('P_MOID', PMOID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTMO"."DROP_VIEW_ALL_GROUPS"(P_MOID => :P_MOID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTMO.GETNAMEBYID
function TPKGTMO.GETNAMEBYID(MOIDIN: Double): string;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.DeclareVariable('MOID_IN', otFloat);
  OCPQuery.SetVariable('MOID_IN', MOIDIN);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."GETNAMEBYID"(MOID_IN => :MOID_IN);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGTMO.GET_PRODUCE_POSTAV_TMO
function TPKGTMO.GETPRODUCEPOSTAVTMO: Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."GET_PRODUCE_POSTAV_TMO";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

function TPKGTMO.IsMOProvisor(PMOID: Double): Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.DeclareVariable('P_MOID', otFloat);
  OCPQuery.SetVariable('P_MOID', PMOID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."ISMOPROVISOR"(P_MOID => :P_MOID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;
// PKGTMO.IS_VEIW_ALL
function TPKGTMO.ISVEIWALL(PMOID: Double): Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.DeclareVariable('P_MOID', otFloat);
  OCPQuery.SetVariable('P_MOID', PMOID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."IS_VEIW_ALL"(P_MOID => :P_MOID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGTMO.SEL
procedure TPKGTMO.SEL(MOIDIN: Double; out FCNAMEOUT: string; 
  out FLCRMIN: Integer; out PFKSOTRID: Double; out FLTREBOUT: Integer);
begin
  GetQuery;
  OCPQuery.DeclareVariable('MOID_IN', otFloat);
  OCPQuery.SetVariable('MOID_IN', MOIDIN);
  OCPQuery.DeclareVariable('FC_NAME_OUT', otString);
  OCPQuery.DeclareVariable('FL_CRM_IN', otInteger);
  OCPQuery.DeclareVariable('PFK_SOTRID', otFloat);
  OCPQuery.DeclareVariable('FL_TREB_OUT', otInteger);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTMO"."SEL"(');
  OCPQuery.SQL.Add('    MOID_IN => :MOID_IN,');
  OCPQuery.SQL.Add('    FC_NAME_OUT => :FC_NAME_OUT,');
  OCPQuery.SQL.Add('    FL_CRM_IN => :FL_CRM_IN,');
  OCPQuery.SQL.Add('    PFK_SOTRID => :PFK_SOTRID,');
  OCPQuery.SQL.Add('    FL_TREB_OUT => :FL_TREB_OUT);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  FCNAMEOUT := ConvertVariant(OCPQuery.GetVariable('FC_NAME_OUT'));
  FLCRMIN := ConvertVariant(OCPQuery.GetVariable('FL_CRM_IN'));
  PFKSOTRID := ConvertVariant(OCPQuery.GetVariable('PFK_SOTRID'));
  FLTREBOUT := ConvertVariant(OCPQuery.GetVariable('FL_TREB_OUT'));
end;

// PKGTMO.SET_VIEW_ALL_GROUPS
procedure TPKGTMO.SETVIEWALLGROUPS(PMOID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('P_MOID', otFloat);
  OCPQuery.SetVariable('P_MOID', PMOID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKGTMO"."SET_VIEW_ALL_GROUPS"(P_MOID => :P_MOID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKGTMO.DoInsertMOGroup
function TPKGTMO.DoInsertMOGroup(pFK_PARENTID: Double): Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.DeclareVariable('pFK_PARENTID', otFloat);
  OCPQuery.SetVariable('pFK_PARENTID', pFK_PARENTID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."DOINSERTMOGROUP"(pFK_PARENTID => :pFK_PARENTID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKGTMO.CHECKMOGROUPNAME
function TPKGTMO.CHECKMOGROUPNAME(pCurMOGroupId : Double; pFC_GROUP: string): Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.DeclareVariable('pCurMOGroupId', otFloat);
  OCPQuery.SetVariable('pCurMOGroupId', pCurMOGroupId);
  OCPQuery.DeclareVariable('pFC_GROUP', otString);
  OCPQuery.SetVariable('pFC_GROUP', pFC_GROUP);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKGTMO"."CHECKMOGROUPNAME"(pCurMOGroupId => :pCurMOGroupId, pFC_GROUP => :pFC_GROUP);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;


end.
