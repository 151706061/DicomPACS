unit PKGINVOPIS;

// Oracle Package Wizard 1.0.3
// File PKGINVOPIS.pas generated by Delphi5 on 15.12.2006 10:39:06
// This unit contains interface objects for oracle package MED.PKG_INVOPIS
// WARNING: Modifications made to this file will be lost after regeneration!

interface

uses Classes, SysUtils, Oracle;

type
(*
PACKAGE pkg_invopis IS
procedure do_del(ainvlistid in number);
procedure do_insNameDoc(ainvlistid in number,
                        afcdocnum IN VARCHAR2,
                        amoinvid in number,
                        afd_data1 in date,
                        afd_data2 in date,
                        afc_pred in varchar2,
                        afc_chlen1 in varchar2,
                        afc_chlen2 in varchar2,
                        afc_chlen3 in varchar2);
function get_sumprice(afn_factsum in number,ainvopisid in number)
 return number;
    FUNCTION do_set (
      ainvlistid        IN   NUMBER,
      amatotvid   IN   NUMBER,
--      amatotvid         IN   NUMBER,
      afc_docnum        IN   VARCHAR2,
      afd_data1         IN   DATE,
      afd_data2         IN   DATE,
      afc_preds         IN   VARCHAR2,
      afc_chlen1        IN   VARCHAR2,
      afc_chlen2        IN   VARCHAR2,
      afc_chlen3        IN   VARCHAR2
   )
      RETURN NUMBER;

    procedure Gen(ainvlistid in tinvlist.invlistid%type);
END PKG_INVOPIS;
*)
  TPKGINVOPIS = class(TOracleCustomPackage)
  public
    procedure DODEL(AINVLISTID: Double);
    procedure DOINSNAMEDOC(AINVLISTID: Double; const AFCDOCNUM: string;
      AMOINVID: Double; AFDDATA1: TDateTime; AFDDATA2: TDateTime;
      const AFCPRED: string; const AFCCHLEN1: string;
      const AFCCHLEN2: string; const AFCCHLEN3: string);
    function  DOSET(PINVLISTID: Double; PMATOTVID: Double; PFC_DOCNUM: string; PFD_DATA1: TDateTime; PFD_DATA2: TDateTime;
      PFC_PREDS: string; PFC_CHLEN1: string;  PFC_CHLEN2: string; PFC_CHLEN3: string; PFN_TYPE : Integer ;
      PFD_DT_BEG: TDateTime; PFD_DT_END: TDateTime; // p_ePlace: string; p_memPeoples: string;
      PFD_DAT_PRIKAZ: TDateTime; PFC_NMB_PRIKAZ: string; PFK_FINSOURCE_ID : Variant;
      PFARR_SPIRT_UCHGR, PFARR_DEFICIT_UCHGR, PFARR_NARC_UCHGR, pFARR_ATTEND_PEOPLE : TOracleObject ): Double;
    procedure GEN(AINVLISTID: Double);
    function  GETSUMPRICE(AFNFACTSUM: Double; AINVOPISID: Double): Double;
    function CREATESHABLON : Integer;
    procedure DOOPISCLEAR (pINVLISTID : Double);
    procedure DOSETSIGN (pINVLISTID : Double);
    function DOCHECKOKINV (pINVLISTID : Double) : string;
  published
    property Name;
    property Session;
    property Cursor;
  end;

var
  DefaultPLSQLTableSize: Integer = 100; // Default size of a PL/SQL Table

implementation

// PKG_INVOPIS.DO_DEL
procedure TPKGINVOPIS.DODEL(AINVLISTID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('AINVLISTID', otFloat);
  OCPQuery.SetVariable('AINVLISTID', AINVLISTID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_INVOPIS"."DO_DEL"(AINVLISTID => :AINVLISTID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKG_INVOPIS.DO_INSNAMEDOC
procedure TPKGINVOPIS.DOINSNAMEDOC(AINVLISTID: Double; const AFCDOCNUM: string;
  AMOINVID: Double; AFDDATA1: TDateTime; AFDDATA2: TDateTime; 
  const AFCPRED: string; const AFCCHLEN1: string; 
  const AFCCHLEN2: string; const AFCCHLEN3: string);
begin
  GetQuery;
  OCPQuery.DeclareVariable('AINVLISTID', otFloat);
  OCPQuery.SetVariable('AINVLISTID', AINVLISTID);
  OCPQuery.DeclareVariable('AFCDOCNUM', otString);
  OCPQuery.SetVariable('AFCDOCNUM', AFCDOCNUM);
  OCPQuery.DeclareVariable('AMOINVID', otFloat);
  OCPQuery.SetVariable('AMOINVID', AMOINVID);
  OCPQuery.DeclareVariable('AFD_DATA1', otDate);
  OCPQuery.SetVariable('AFD_DATA1', AFDDATA1);
  OCPQuery.DeclareVariable('AFD_DATA2', otDate);
  OCPQuery.SetVariable('AFD_DATA2', AFDDATA2);
  OCPQuery.DeclareVariable('AFC_PRED', otString);
  OCPQuery.SetVariable('AFC_PRED', AFCPRED);
  OCPQuery.DeclareVariable('AFC_CHLEN1', otString);
  OCPQuery.SetVariable('AFC_CHLEN1', AFCCHLEN1);
  OCPQuery.DeclareVariable('AFC_CHLEN2', otString);
  OCPQuery.SetVariable('AFC_CHLEN2', AFCCHLEN2);
  OCPQuery.DeclareVariable('AFC_CHLEN3', otString);
  OCPQuery.SetVariable('AFC_CHLEN3', AFCCHLEN3);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_INVOPIS"."DO_INSNAMEDOC"(');
  OCPQuery.SQL.Add('    AINVLISTID => :AINVLISTID,');
  OCPQuery.SQL.Add('    AFCDOCNUM => :AFCDOCNUM,');
  OCPQuery.SQL.Add('    AMOINVID => :AMOINVID,');
  OCPQuery.SQL.Add('    AFD_DATA1 => :AFD_DATA1,');
  OCPQuery.SQL.Add('    AFD_DATA2 => :AFD_DATA2,');
  OCPQuery.SQL.Add('    AFC_PRED => :AFC_PRED,');
  OCPQuery.SQL.Add('    AFC_CHLEN1 => :AFC_CHLEN1,');
  OCPQuery.SQL.Add('    AFC_CHLEN2 => :AFC_CHLEN2,');
  OCPQuery.SQL.Add('    AFC_CHLEN3 => :AFC_CHLEN3);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKG_INVOPIS.DO_SET
function TPKGINVOPIS.DOSET(PINVLISTID: Double; PMATOTVID: Double; PFC_DOCNUM: string; PFD_DATA1: TDateTime; PFD_DATA2: TDateTime;
      PFC_PREDS: string; PFC_CHLEN1: string;  PFC_CHLEN2: string; PFC_CHLEN3: string; PFN_TYPE : Integer ;
      PFD_DT_BEG: TDateTime; PFD_DT_END: TDateTime; // p_ePlace: string; p_memPeoples: string;
      PFD_DAT_PRIKAZ: TDateTime; PFC_NMB_PRIKAZ: string; PFK_FINSOURCE_ID : Variant;
      PFARR_SPIRT_UCHGR, PFARR_DEFICIT_UCHGR, PFARR_NARC_UCHGR, PFARR_ATTEND_PEOPLE: TOracleObject ): Double;
begin
  GetQuery;
  with OCPQuery do
  begin
    DeclareVariable('function_result', otFloat);
    DeclareVariable( 'PINVLISTID', otFloat );
    SetVariable( 'PINVLISTID', PINVLISTID );
    DeclareVariable('PMATOTVID', otFloat);
    SetVariable('PMATOTVID', PMATOTVID);
    DeclareVariable('PFC_DOCNUM', otString);
    SetVariable('PFC_DOCNUM', PFC_DOCNUM);
    DeclareVariable('PFD_DATA1', otDate);
    SetVariable('PFD_DATA1', PFD_DATA1);
    DeclareVariable('PFD_DATA2', otDate);
    SetVariable('PFD_DATA2', PFD_DATA2);
    DeclareVariable('PFC_PREDS', otString);
    SetVariable('PFC_PREDS', PFC_PREDS);
    DeclareVariable('PFC_CHLEN1', otString);
    SetVariable('PFC_CHLEN1', PFC_CHLEN1);
    DeclareVariable('PFC_CHLEN2', otString);
    SetVariable('PFC_CHLEN2', PFC_CHLEN2);
    DeclareVariable('PFC_CHLEN3', otString);
    SetVariable('PFC_CHLEN3', PFC_CHLEN3);
    DeclareVariable('PFN_TYPE', otInteger);
    SetVariable('PFN_TYPE', PFN_TYPE);
    DeclareVariable('PFD_DT_BEG', otDate);
    SetVariable('PFD_DT_BEG', PFD_DT_BEG);
    DeclareVariable('PFD_DT_END', otDate);
    SetVariable('PFD_DT_END', PFD_DT_END);
  //  DeclareVariable('pePlace', otString);
  //  SetVariable('pePlace', p_ePlace);
  //  DeclareVariable('pmemPeoples', otString);
  //  SetVariable('pmemPeoples', p_memPeoples);
    DeclareVariable('PFD_DAT_PRIKAZ', otDate);
    SetVariable('PFD_DAT_PRIKAZ', PFD_DAT_PRIKAZ);
    DeclareVariable('PFC_NMB_PRIKAZ', otString);
    SetVariable('PFC_NMB_PRIKAZ', PFC_NMB_PRIKAZ);
    DeclareVariable('PFK_FINSOURCE_ID', otFloat);
    SetVariable('PFK_FINSOURCE_ID', PFK_FINSOURCE_ID);
    DeclareVariable( 'PFARR_SPIRT_UCHGR', otObject );
    SetComplexVariable(  'PFARR_SPIRT_UCHGR', PFARR_SPIRT_UCHGR );
    DeclareVariable( 'PFARR_DEFICIT_UCHGR', otObject );
    SetComplexVariable(  'PFARR_DEFICIT_UCHGR', PFARR_DEFICIT_UCHGR );
    DeclareVariable( 'PFARR_NARC_UCHGR', otObject );
    SetComplexVariable(  'PFARR_NARC_UCHGR', PFARR_NARC_UCHGR );
    DeclareVariable( 'PFARR_ATTEND_PEOPLE', otObject );
    SetComplexVariable(  'PFARR_ATTEND_PEOPLE', PFARR_ATTEND_PEOPLE );

    SQL.Add('begin' + #13#10 +
            '  :function_result := MED.PKG_INVOPIS.DO_SET(PINVLISTID => :PINVLISTID,' + #13#10 +
            '      PMATOTVID => :PMATOTVID,' + #13#10 +
            '      PFC_DOCNUM => :PFC_DOCNUM,' + #13#10 +
            '      PFD_DATA1 => :PFD_DATA1,' + #13#10 +
            '      PFD_DATA2 => :PFD_DATA2,' + #13#10 +
            '      PFC_PREDS => :PFC_PREDS,' + #13#10 +
            '      PFC_CHLEN1 => :PFC_CHLEN1,' + #13#10 +
            '      PFC_CHLEN2 => :PFC_CHLEN2,' + #13#10 +
            '      PFC_CHLEN3 => :PFC_CHLEN3,' + #13#10 +
            '      PFN_TYPE => :PFN_TYPE,' + #13#10 +
            '      PFD_DT_BEG => :PFD_DT_BEG,' + #13#10 +
            '      PFD_DT_END => :PFD_DT_END,' + #13#10 +
            '      PFD_DAT_PRIKAZ => :PFD_DAT_PRIKAZ,' + #13#10 +
            '      PFC_NMB_PRIKAZ => :PFC_NMB_PRIKAZ,' + #13#10 +
            '      PFK_FINSOURCE_ID => :PFK_FINSOURCE_ID,' + #13#10 +
            '      PFARR_SPIRT_UCHGR => :PFARR_SPIRT_UCHGR,' + #13#10 +
            '      PFARR_DEFICIT_UCHGR => :PFARR_DEFICIT_UCHGR,' + #13#10 +
            '      PFARR_NARC_UCHGR => :PFARR_NARC_UCHGR,' + #13#10 +
            '      PFARR_ATTEND_PEOPLE => :PFARR_ATTEND_PEOPLE);' + #13#10 +
            'end;');

    Execute;
    Result := ConvertVariant(GetVariable('function_result'));
  end;
end;

// PKG_INVOPIS.GEN
procedure TPKGINVOPIS.GEN(AINVLISTID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('pINVLISTID', otFloat);
  OCPQuery.SetVariable('pINVLISTID', AINVLISTID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  "MED"."PKG_INVOPIS"."GEN"(pINVLISTID => :pINVLISTID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
end;

// PKG_INVOPIS.GET_SUMPRICE
function TPKGINVOPIS.GETSUMPRICE(AFNFACTSUM: Double; AINVOPISID: Double): Double;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otFloat);
  OCPQuery.DeclareVariable('AFN_FACTSUM', otFloat);
  OCPQuery.SetVariable('AFN_FACTSUM', AFNFACTSUM);
  OCPQuery.DeclareVariable('AINVOPISID', otFloat);
  OCPQuery.SetVariable('AINVOPISID', AINVOPISID);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_INVOPIS"."GET_SUMPRICE"(');
  OCPQuery.SQL.Add('    AFN_FACTSUM => :AFN_FACTSUM,');
  OCPQuery.SQL.Add('    AINVOPISID => :AINVOPISID);');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_INVOPIS.CREATESHABLON
function TPKGINVOPIS.CREATESHABLON: Integer;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otInteger);
  OCPQuery.SQL.Add('begin');
  OCPQuery.SQL.Add('  :function_result := "MED"."PKG_INVOPIS"."CREATESHABLON";');
  OCPQuery.SQL.Add('end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

// PKG_INVOPIS.DO_OPIS_CLEAR
procedure TPKGINVOPIS.DOOPISCLEAR(pINVLISTID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('pINVLISTID', otFloat);
  OCPQuery.SetVariable('pINVLISTID', pINVLISTID);
  OCPQuery.SQL.Add( 'BEGIN' + #13#10 +
                    '  MED.PKG_INVOPIS.DO_OPIS_CLEAR(PINVLISTID => :PINVLISTID);' + #13#10 +
                    'END;');
  OCPQuery.Execute;
end;

// PKG_INVOPIS.DO_SET_SIGN
procedure TPKGINVOPIS.DOSETSIGN(pINVLISTID: Double);
begin
  GetQuery;
  OCPQuery.DeclareVariable('pINVLISTID', otFloat);
  OCPQuery.SetVariable('pINVLISTID', pINVLISTID);
  OCPQuery.SQL.Add( 'BEGIN' + #13#10 +
                    '  MED.PKG_INVOPIS.DO_SET_SIGN(PINVLISTID => :PINVLISTID);' + #13#10 +
                    'END;' );
  OCPQuery.Execute;
end;

function TPKGINVOPIS.DOCHECKOKINV (pINVLISTID : Double) : string;
begin
  GetQuery;
  OCPQuery.DeclareVariable('function_result', otString);
  OCPQuery.DeclareAndSet( 'pinvlistid', otFloat, pINVLISTID );
  OCPQuery.SQL.Add( 'begin' + #13#10 +
                    '  :function_result := med.pkg_invopis.do_check_ok_inv(pinvlistid => :pinvlistid);' + #13#10 +
                    'end;');
  OCPQuery.Execute;
  Result := ConvertVariant(OCPQuery.GetVariable('function_result'));
end;

end.
